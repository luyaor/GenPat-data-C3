{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9159b2cae361a6187d95e07c9120f029", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "003872a42431da002673c53e45ffe10f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "96bf5a5cd2d40db16b0b6c02c789d4b37a3a9876", "commitAfterChange": "0bdf9ca1ec4730da3a7aefde2e61b8646efd7da7", "methodNumberBeforeChange": 253, "methodNumberAfterChange": 253, "signatureBeforeChange": "   boolean _closeProject(boolean quitting)", "signatureAfterChange": "   boolean _closeProject(boolean quitting)", "diff": ["-      _junitOpenProjectFilesAction.setEnabled(false);", "+      _junitProjectAction.setEnabled(false);", "-      _compileButton.setToolTipText(\"Compile all open documents\");", "+//      _compileButton.setToolTipText(\"Compile all open documents\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0043cec9af0565eedd6dce65ac0e00de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public String getCurrentInput()", "signatureAfterChange": "   public String getCurrentInput()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "005abeeed0cf6bccf9f650781d37e98a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "0bcb8da0b79cf218cc2712f201e3771599202c44", "commitAfterChange": "c34979036dca11c3afc06b42fcb087eaf85bc790", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "    public boolean closeAllFiles()", "signatureAfterChange": "    public boolean closeAllFiles()", "diff": ["-     return closeFiles(docs, false);", "+     return closeFiles(docs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "007046a74066ff730abcc2541989f1e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 293, "methodNumberAfterChange": 294, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _setUpAction(_saveAsAction, \"Save As\", \"SaveAs\",", "-                 \"Save the current document with a new name\");", "+    _setUpAction(_saveAsAction, \"Save As\", \"SaveAs\", \"Save the current document with a new name\");", "+    _resetInteractionsAction.setEnabled(false);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "007b269346876837ca6e56bdabd1d10b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/KeyStrokeOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testApplyDoesChangeConfig()", "signatureAfterChange": "    public void testApplyDoesChangeConfig()", "diff": ["+    Utilities.clearEventQueue();", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "007ea4dafbcd78c58395b28a60fbfff4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CompilerErrorPanel.java", "commitBeforeChange": "5f1b3bc3f3deca6d356567893a20298f4e5a94a7", "commitAfterChange": "3101443d576fa6f63ae40ca208e243a26acf0b6b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public CompilerErrorPanel(DefinitionsView view)", "signatureAfterChange": "    public CompilerErrorPanel(DefinitionsView view)", "diff": ["-    _errorListPane.setEditable(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "008b44e32588abaa7870b30a3651fabf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Breakpoint.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void _createRequests(Vector<ReferenceType> refTypes) throws DebugException", "signatureAfterChange": "   protected void _createRequests(Vector<ReferenceType> refTypes) throws DebugException", "diff": ["+        request.setEnabled(_enabled);", "+        System.out.println(\"adding breakpoint request, enabled = \"+request.isEnabled());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0099e3bb12f83ff43ede850a00b844c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/SlaveJVMRunner.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public synchronized static void main(String[] args)", "signatureAfterChange": "   public synchronized static void main(String[] args)", "diff": ["-      _notDone = true;", "+//      _notDone = true;", "-      _main = Thread.currentThread();", "+//      _main = Thread.currentThread();", "-      _notDone = false;", "+//      _notDone = false;", "-        Class slaveClass = Class.forName(args[1]);", "+        Class<?> slaveClass = Class.forName(args[1]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00b6b8a8f34ed7a402efa719b852c0e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlus.java", "commitBeforeChange": "41e184b1aabfa466589eae2bb1a9101d9be4de38", "commitAfterChange": "57a37f35b71c66341cae7312e856c3bb4a0b6fcf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["+    super.indentLine(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00c678e687b48251f24efd596166f2b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "cd93f4a911fe5ca4af96aafefd0069d86ef20364", "commitAfterChange": "7df95bfa68e88e5e13d24460f092f5586b6658c7", "methodNumberBeforeChange": 501, "methodNumberAfterChange": 501, "signatureBeforeChange": "     public DecoratedAction(AbstractAction a, boolean b)", "signatureAfterChange": "     public DecoratedAction(AbstractAction a, boolean b)", "diff": ["+      super.setEnabled(b);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00c93f182bc7a7f2663440f5e59a1054", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyFullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "signatureAfterChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "diff": ["-    VariableData[] vds = _variableDeclaration2VariableData(that, _enclosingData);", "+//    System.err.println(\"forVariableDeclarationOnly called in ClassBodyFullJavaVisitor for \" + that);", "+    VariableData[] vds = _variableDeclaration2VariableData(that, _enclosing);", "+    System.err.println(\" ## generated vds = \" + Arrays.toString(vds));", "-    if (! _enclosingData.addVars(vds)) {", "+    if (! _enclosing.addVars(vds)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00eb0ad0fbf52a08cf40e0446cbc57fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 799, "signatureBeforeChange": "    final private boolean jj_3R_466()", "signatureAfterChange": "    final private boolean jj_3R_468()", "diff": ["-", "-  final private boolean jj_3R_466() {", "-    if (jj_3R_472()) {", "-    if (jj_3R_473()) return true;", "+  final private boolean jj_3R_468() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_476()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_477()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00f43bb91688dc38ccfe0228224c2e21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "7bcdd967752ffe549506dba1c9c4f60803462779", "commitAfterChange": "af1d1f7c09d0639a913d397da4b034d6533c94dd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public T getErrorAtOffset(OpenDefinitionsDocument odd, int offset)", "signatureAfterChange": "   public T getErrorAtOffset(OpenDefinitionsDocument odd, int offset)", "diff": ["-    if ((shouldSelect == -1) && (errorAfter != _positions.length)) {", "+    if ((shouldSelect == -1) && (errorAfter < end)) {// (errorAfter != _positions.length)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00fc1ba44cc97ed878fea5f10f9acaa7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testInteractionAbort() throws BadLocationException, EditDocumentException, InterruptedException,      IOException", "signatureAfterChange": "   public void testInteractionAbort() throws BadLocationException, EditDocumentException, InterruptedException,      IOException", "diff": ["+    GlobalModelTestCase._log.log(\"Completed initial interpret call\");", "+    ", "+    GlobalModelTestCase._log.log(\"Starting infinite loop\");", "+    ", "+    GlobalModelTestCase._log.log(\"Resetting interactions\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01012120056e33a15b71464d97689c86", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private void _saveAs()", "signatureAfterChange": "     private void _saveAs()", "diff": ["-      _model.saveFileAs(_saveSelector);", "+      _definitionsDocuments[0].saveFileAs(_saveSelector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01023ef348d1e92921481f0d876fad72", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private boolean _javadoc_1_3(String[] args, String[] classpath)     throws IOException, ClassNotFoundException, InterruptedException", "signatureAfterChange": "   private boolean _javadoc_1_3(String[] args, String[] classpath)     throws IOException, ClassNotFoundException, InterruptedException", "diff": ["-    ", "+", "-    ", "+", "-    ", "+", "-    ", "+", "-     ", "+", "-  ", "+", "-      ((CompilerError[])(errors.toArray(new CompilerError[errors.size()])), _getter);", "+      (errors.toArray(new CompilerError[errors.size()]), _getter);", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01102aeefa713c67a5a25689254c4974", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/FileProperty.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void update(PropertyMaps pm)", "signatureAfterChange": "   public void update(PropertyMaps pm)", "diff": ["-    boolean doubleQuote = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01181ab161270ca1a8c933f79ec53124", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 548, "methodNumberAfterChange": 544, "signatureBeforeChange": "    final private boolean jj_3R_178()", "signatureAfterChange": "    final private boolean jj_3R_186()", "diff": ["-", "-  final private boolean jj_3R_178() {", "+  final private boolean jj_3R_186() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;", "-    if (jj_3R_132()) return true;", "+    if (jj_3R_135()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01237e7b1ad9fe894307cac73a1279d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "commitAfterChange": "dc012dd7d972609a38d1836c72ebe86b07df0e53", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   private FindResult _findNextInAllDocs(AbstractDocumentInterface docToSearch, int start, int end) throws BadLocationException", "signatureAfterChange": "   private FindResult _findNextInAllDocs(AbstractDocumentInterface docToSearch, int start, int end) throws BadLocationException", "diff": ["-//      Utilities.showDebug(\"DEBUG: Acquiring other documents lock\");", "-//      Utilities.showDebug(\"DEBUG: Lock acquired\");", "-//        Utilities.showDebug(\"DEBUG: startPos = \" + start);", "-//        Utilities.showDebug(\"DEBUG: end = \" + end);", "-        if (!_searchBackwards) text = docToSearch.getText(start, end /*docToSearch.getLength() - start*/);", "-        else text = docToSearch.getText(start, end);", "+        text = docToSearch.getText(start, end);", "-//      Utilities.showDebug(\"DEBUG: text = \" + text);", "-//      Utilities.showDebug(\"DEBUG: foundOffset = \" + foundOffset);", "-        // the found location is inside a comment or a string that the user has asked to ignore", "-//          Utilities.showDebug(\"DEBUG: We are in a position to be ignored in another document\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0124d233ee05461475c0426a28387186", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "55ffd5d461fa009444744f2527631191c6f9decc", "commitAfterChange": "0fed03351fa05790a48229380b62c5e4589b0332", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 99, "signatureBeforeChange": "     public File getFileBeforeEdit()", "signatureAfterChange": "     public FileDisplay getOriginalDisplay()", "diff": ["-    public File getFileBeforeEdit() { return _currentFile; }", "+    public FileDisplay getOriginalDisplay() { return _originalDisplay; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01311e71a02134a92618a0e04decbfd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["-      OpenDefinitionsDocument matchDoc = ((DefaultSingleDisplayModel) _model).getODDForDocument(doc);", "+      OpenDefinitionsDocument matchDoc = _model.getODDForDocument(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "013a02fb7f879ad07174cb15c8e407a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6310666c1b25e3b678fa3161d36dc614550bad4a", "commitAfterChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "methodNumberBeforeChange": 334, "methodNumberAfterChange": 334, "signatureBeforeChange": "      private void _quit()", "signatureAfterChange": "      private void _quit()", "diff": ["+    _executeExternalDialog.setVisible(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "013f37e11c324a401067c0fab0f85744", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "d8dc2cdeba22db2fb0316de83a445bb83f56ae4d", "commitAfterChange": "fecb09777cd63cca239611fe19e85d2f0e8401e9", "methodNumberBeforeChange": 480, "methodNumberAfterChange": 463, "signatureBeforeChange": "    final private boolean jj_3R_586()", "signatureAfterChange": "    final private boolean jj_3R_582()", "diff": ["-  final private boolean jj_3R_586() {", "+  final private boolean jj_3R_582() {", "-      if (jj_3R_589()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_585()) { jj_scanpos = xsp; break; }", "-    if (jj_3R_590()) jj_scanpos = xsp;", "+    if (jj_3R_586()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "014c6d55c4fa8dbe79210a9191a6531b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "405bec7d97445f0020939e0560dc10393430aac1", "commitAfterChange": "070ce5905e33fc289f79bfc0035862d6493d03f5", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void addClassPath(String s)", "signatureAfterChange": "   public void addClassPath(String s)", "diff": ["-    if (_classpath.contains(s)) {", "-      return;", "-    }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "015326cc8bd1fd3d2cdb098b2b53c86e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 136, "signatureBeforeChange": "   private OpenDefinitionsDocument _createOpenDefinitionsDocument()", "signatureAfterChange": "   private OpenDefinitionsDocument _createOpenDefinitionsDocument()", "diff": ["-    DefinitionsDocument doc = (DefinitionsDocument) _editorKit.createNewDocument();", "-    return new DefinitionsDocumentHandler(doc);", "+//    DefinitionsDocument doc = (DefinitionsDocument) _editorKit.createNewDocument();", "+    return new DefinitionsDocumentHandler();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "019b1032bc40628f24c7ad3e45804d05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "6b690d7e50bc9f782260d6c38aaf261dfe0715e0", "commitAfterChange": "8b2531509cebe19f9248dfcfb27c6842d311bd33", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void initComponents()", "signatureAfterChange": "   private void initComponents()", "diff": ["-    _dirChooser.setSelectedFile(new File(System.getProperty(\"user.dir\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01b9a9384af7e98d9642de4e66dc7899", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 511, "methodNumberAfterChange": 289, "signatureBeforeChange": "    final private boolean jj_3R_196()", "signatureAfterChange": "    final private boolean jj_3R_178()", "diff": ["+", "+  final private boolean jj_3R_178() {", "+    if (jj_scan_token(LBRACKET)) return true;", "+    if (jj_3R_78()) return true;", "+    if (jj_scan_token(RBRACKET)) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_196() {", "-    if (jj_scan_token(LBRACKET)) return true;", "-    if (jj_3R_87()) return true;", "-    if (jj_scan_token(RBRACKET)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01bfe06cdd925151861c30366b6a1cea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 262, "methodNumberAfterChange": 265, "signatureBeforeChange": "    final private boolean jj_3R_450()", "signatureAfterChange": "    final private boolean jj_3R_457()", "diff": ["+", "+  final private boolean jj_3R_457() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_181()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_419()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_450() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_151()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_412()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01d5df2c0b27fc4a66d0cb63f8d553ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 338, "methodNumberAfterChange": 318, "signatureBeforeChange": "    final private boolean jj_3R_260()", "signatureAfterChange": "    final private boolean jj_3R_294()", "diff": ["-", "-  final private boolean jj_3R_260() {", "-    if (jj_scan_token(SWITCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_110()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(LBRACE)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_318()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(RBRACE)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_294() {", "+    if (jj_scan_token(SWITCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_112()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(LBRACE)) return true;", "+    if (jj_scan_token(RBRACE)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01d7516429a9d6043e3949bd88e94013", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3bfda0ffd8a22eda2f2daab913b510305e1ef801", "commitAfterChange": "02d5c825c13aaa4caad6b7e4e89ccbdbfdc16c9f", "methodNumberBeforeChange": 588, "methodNumberAfterChange": 590, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["+        _interactionsPane.endCompoundEdit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01dd7a6df3ddb12634faa40697535a87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FileGroupingState.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void cleanBuildDirectory() throws FileMovedException, IOException;", "signatureAfterChange": "   public void cleanBuildDirectory();", "diff": ["-  public void cleanBuildDirectory() throws FileMovedException, IOException;", "+  public void cleanBuildDirectory();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0212b5cbd30f30d1c58c3f5514c76d16", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/OpenDefinitionsDocument.java", "commitBeforeChange": "dab739e9c0a893840c19d552b534083722093495", "commitAfterChange": "9d7de430d203354a52d3faa0378a92c50af92fb7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public TestResult startJUnit() throws IOException;", "signatureAfterChange": "   public TestResult startJUnit() throws ClassNotFoundException, IOException;", "diff": ["-  public TestResult startJUnit() throws IOException;", "+  public TestResult startJUnit() throws ClassNotFoundException, IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0229d312b237838ab921b79e037ab603", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "commitAfterChange": "9ce155a1f3e34352032d821032cb2dc70024460f", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   @Override public Type visit(AnonymousInnerAllocation node)", "signatureAfterChange": "   @Override public Type visit(AnonymousInnerAllocation node)", "diff": ["-        // TODO: Check for uncaught exceptions", "+        checkThrownExceptions(inv.thrown(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "022f8417a2868247448bc5f2572c5cf1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 164, "signatureBeforeChange": "      public void fileOpened(final OpenDefinitionsDocument doc)", "signatureAfterChange": "      public void fileOpened(final OpenDefinitionsDocument doc)", "diff": ["-      if (CodeStatus.DEVELOPMENT) {", "-        _recentFileManager.updateOpenFiles(doc.getFile());", "-      }", "+      _recentFileManager.updateOpenFiles(doc.getFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0234046d6fae2a34df477f1f91556bda", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void defineConstant(String name, byte value)", "signatureAfterChange": "   public void defineConstant(String name, byte value)", "diff": ["-    ((InterpreterExtension)_djInterpreter).defineConstant(name, value);", "+    _djInterpreter.defineConstant(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "023fbd9b50f29710bf5b6b8ab1a89a08", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "2fa0f9ce97ae10d7a34a292e091ab0ac600c58ce", "commitAfterChange": "facb31d52d0108009578d6a1708ac1dfc68b98b8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["+      Toolkit.getDefaultToolkit().beep();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0240bfcc9373333f8786478e1555ac15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsViewTest.java", "commitBeforeChange": "bd3609d73f910b773bb009bd9fec801547e38ce7", "commitAfterChange": "ee77a4b190fe991345758d9ffc949583a7709b61", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void setUp()", "signatureAfterChange": "   public void setUp()", "diff": ["-    _view.setBeep(new TestBeep());", "+    //_view.setBeep(new TestBeep());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02487e0bfc8f779d51923672c6c27cef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "dc96b8e17de1b9fbcfb0683311d7e482b6fcfcf3", "commitAfterChange": "270c6e5f741c371e9536c93af7f5525dbf67eeee", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     protected final void step(Pair<TypeDeclaration, ClassChecker> arg) throws InterpreterException", "signatureAfterChange": "     protected final void step(Pair<TypeDeclaration, ClassChecker> arg) throws InterpreterException", "diff": ["-      catch (ExecutionError e) { throw new CheckerException(e); }", "+      catch (ExecutionError e) { throw extractErrors(arg.first()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02543e22750550c184636cace28ebad8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyFullJavaVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "          public void testForVariableDeclaration()", "signatureAfterChange": "          public void testForVariableDeclaration()", "diff": ["-      System.err.println(\"*** Beginning traversal of VariableDeclaration with String[]\");", "+//      System.err.println(\"*** Beginning traversal of VariableDeclaration with String[]\");", "-      System.err.println(\"Traversal of VariableDeclaration at line 397 is complete\");", "+//      System.err.println(\"Traversal of VariableDeclaration above is complete\");", "-      System.err.println(\"Getting READY to fail\");", "+//      System.err.println(\"Getting READY to fail\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0261359628e54520068113c689302f65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "aa895e173b9073a9e7216d98acba59e6d4855797", "commitAfterChange": "da1a971d51bd3f101601dc97c0fa654f8135af90", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "   void debuggerToggleBreakpoint()", "signatureAfterChange": "   void debuggerToggleBreakpoint()", "diff": ["-                                      \"Before you can set a breakpoint you must save and compile\\n\" +", "-                                      \"this document.\",", "-                                      \"Cannot set breakpoint on untitled document.\",", "+                                      \"You must save and compile this document before you can\\n\" +", "+                                      \"set a breakpoint in it.\",", "+                                      \"Must Save and Compile\",", "-                                               \"This document has been modified since its last save and\\n\" + ", "-                                               \"may be out of sync with the debugger. It is suggested that\\n\" +", "-                                               \"you save and recompile before continuing to debug in order\\n\" +", "-                                               \"to avoid any unexpected errors. Would you still like to toggle\\n\" +", "-                                               \"the breakpoint at the specified line?\",", "+                                               \"This document has been modified and may be out of sync\\n\" + ", "+                                               \"with the debugger.  It is recommended that you first\\n\" +", "+                                               \"save and recompile before continuing to use the debugger,\\n\" +", "+                                               \"to avoid any unexpected errors.  Would you still like to\\n\" +", "+                                               \"toggle the breakpoint on the specified line?\",", "-        _currentDefPane.hasWarnedAboutModified(true);", "+            _currentDefPane.hasWarnedAboutModified(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02674cf1f0a02bfe8063ee978428b843", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 535, "methodNumberAfterChange": 325, "signatureBeforeChange": "    final private boolean jj_3R_423()", "signatureAfterChange": "    final private boolean jj_3R_411()", "diff": ["+  final private boolean jj_3R_411() {", "+    if (jj_3R_437()) return true;", "+      if (jj_3R_460()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_423() {", "-    if (jj_3R_433()) return true;", "-      if (jj_3R_446()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0279d3201506a4d79e2c1a16eaafbd07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "     public String getFirstTopLevelClassName() throws ClassNameNotFoundException", "signatureAfterChange": "     public String getFirstTopLevelClassName() throws ClassNameNotFoundException", "diff": ["-      return _doc.getFirstTopLevelClassName();", "+      return getDocument().getFirstTopLevelClassName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02957319d61d244acd51b97b8d1989a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 610, "methodNumberAfterChange": 608, "signatureBeforeChange": "    final private boolean jj_3R_282()", "signatureAfterChange": "    final private boolean jj_3R_285()", "diff": ["-  final private boolean jj_3R_282() {", "+  final private boolean jj_3R_285() {", "-    if (jj_3R_466()) return true;", "+    if (jj_3R_472()) return true;", "-    if (jj_3R_252()) return true;", "+    if (jj_3R_254()) return true;", "-    if (jj_3R_467()) jj_scanpos = xsp;", "+    if (jj_3R_473()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "029b61dc37ed8a1df8af43b56b4fe335", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testSwitchInterpreters()", "signatureAfterChange": "   public void testSwitchInterpreters()", "diff": ["+    debug.logStart();", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02a1446403e4bcc5cbfbcb272f50af9c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 412, "methodNumberAfterChange": 392, "signatureBeforeChange": "    final private boolean jj_3R_392()", "signatureAfterChange": "    final private boolean jj_3R_484()", "diff": ["+", "+  final private boolean jj_3R_484() {", "+    if (jj_3R_103()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_497()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_392() {", "-    if (jj_3R_101()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_401()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02b18a826aece337a0fc724b75dcb6a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CompilerErrorPanel.java", "commitBeforeChange": "42453ef03053968f9ca85cc1f502a43bd9378c76", "commitAfterChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public ErrorListPane()", "signatureAfterChange": "      public ErrorListPane()", "diff": ["+      ErrorListPane.this.setFont(new Font(\"Courier\", 0, 20));", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02c99dea74ce1e06c8253e13b4f630cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "a42f39d6113f94f8758a85c690871c1cc3a1d3bf", "commitAfterChange": "70c1ecdee2b287deaefda546dba21394bc1868ef", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public static Thread copyProcessOut(Process p, OutputStream out, boolean close)", "signatureAfterChange": "   public static Thread copyProcessOut(Process p, OutputStream out, boolean close)", "diff": ["+    result.setDaemon(true); // this thread should not keep the JVM from exiting", "+    // TODO: If the parent process quits, can the child get stuck when its buffer fills?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02cb9344865615dff65538bd240024e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ConstructorBodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "               public void testImplicitSuperConstructor()", "signatureAfterChange": "               public void testImplicitSuperConstructor()", "diff": ["-      BracedBody constr = new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]);", "+      BracedBody constr = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02dd8c555d440ccd145684b0ebd0457b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/repl/EclipseInteractionsModel.java", "commitBeforeChange": "1827cec0a07b944a36f95e36eebdc6666dc9617c", "commitAfterChange": "302914e42441eaa34fb8588c2f19600c7ec3298a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected void _notifySyntaxErrorOccurred(final int offset, final int length)", "signatureAfterChange": "   protected void _notifySyntaxErrorOccurred(final int offset, final int length)", "diff": ["-      ((InteractionsListener)_listeners.get(i)).", "-        interactionErrorOccurred(offset, length);", "+      _listeners.get(i).interactionErrorOccurred(offset, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02e19a3b3d19f796858b86a420654c9c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 591, "methodNumberAfterChange": 591, "signatureBeforeChange": "    final private boolean jj_3R_283()", "signatureAfterChange": "    final private boolean jj_3R_286()", "diff": ["-  final private boolean jj_3R_283() {", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(79)) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_468()) return true;", "-    }", "-    if (jj_3R_78()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_252()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_286() {", "+    if (jj_scan_token(WHILE)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(79)) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_474()) return true;", "+    }", "+    if (jj_3R_78()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_254()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02e2cd4ab3d80855d15703c26dcf1673", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public void testOpenMultipleFilesError()", "signatureAfterChange": "   public void testOpenMultipleFilesError()", "diff": ["-   */", "+  /** Error checking for openening multiple files checks for null and an array w/null. */", "-    catch (IOException e) {", "-      // As we hoped, the file was not found", "-    }", "-    catch (Exception e) {", "-      fail(\"Unexpectedly exception caught!\");", "-    }", "+    catch (IOException e) { /* As we hoped, the file was not found. */ }", "+    catch (Exception e) { fail(\"Unexpectedly exception caught!\"); }", "-    assertTrue(\"non-existant file\", docs == null);", "+    assertTrue(\"non-existent file\", docs == null);", "+    ", "+    _log.log(\"testOpenMultipleFilesError completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02f2d3cf455c83f1ff57de0fb91ddb57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public Object visit(ReturnStatement node)", "signatureAfterChange": "   public Class visit(ReturnStatement node)", "diff": ["-     */", "-    public Object visit(ReturnStatement node) {", "-        Expression e = node.getExpression();", "-        if (e != null) {", "-            e.acceptVisitor(this);", "-        }", "-        return null;", "-    }", "+   */", "+  public Class visit(ReturnStatement node) {", "+    Expression e = node.getExpression();", "+    if (e != null) {", "+      e.acceptVisitor(this);", "+    }", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "031840b4933cb22494bf07d09c78c41e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/HistoryTest.java", "commitBeforeChange": "ae91856b53b869dea43c60b3424279a87db75fb5", "commitAfterChange": "a357e82c74cb27dc4ce8ef007203ad2bd5dfa25b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testRemembersOneEditedEntry()", "signatureAfterChange": "   public void testRemembersOneEditedEntry()", "diff": ["-   */", "+  /** Tests that the history remembers one edited entry for the given command. */", "-    assertEquals(\"Did not remember the edited entry correctly.\",", "-                 newEntry,", "-                 _history.getCurrent());", "+    Utilities.clearEventQueue();", "+    assertEquals(\"Did not remember the edited entry correctly.\", newEntry, _history.getCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0331945bef4a31d05cecbce4e7f17f27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 784, "methodNumberAfterChange": 689, "signatureBeforeChange": "    final private boolean jj_3R_365()", "signatureAfterChange": "    final private boolean jj_3R_372()", "diff": ["-", "-  final private boolean jj_3R_365() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(32)) jj_scanpos = xsp;", "-    if (jj_3R_80()) return true;", "-    if (jj_3R_415()) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_416()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_372() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(32)) jj_scanpos = xsp;", "+    if (jj_3R_83()) return true;", "+    if (jj_3R_424()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_425()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "034e33d337b1a26757e90342829ac1bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilitiesTest.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testTigerUsageClass()", "signatureAfterChange": "   public void testTigerUsageClass()", "diff": ["-public class ReflectionUtilitiesTest extends TestCase {", "+public class ReflectionUtilitiesTest extends DynamicJavaTestCase {", "-    TigerUtilities.setTigerEnabled(false);", "+    setTigerEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "036120e73e42972580e75e3b2750bba0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "9e497bdeba5d2ec8cfd80ebdb938cf6935007939", "commitAfterChange": "8015cc1e53ce6d8dc00c5faf652f2b4ef39fe4e9", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   protected static void writeAccessors(SymbolData sd, int baseIndent)", "signatureAfterChange": "   protected static void writeAccessors(SymbolData sd, int baseIndent)", "diff": ["-    VariableData[] vars = (VariableData[])sd.getVars().toArray(new VariableData[sd.getVars().size()]);", "+    VariableData[] vars = sd.getVars().toArray(new VariableData[sd.getVars().size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "036c0f600b253d80b729b26c3050ac55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeInterpreter.java", "commitBeforeChange": "e70766c672e058ab37ae5757bf5008b997a8ff63", "commitAfterChange": "5089bb7a50fb7750f9e599079bf91522d8072d34", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public List<Node> buildStatementList (Reader r, String fname) throws InterpreterException", "signatureAfterChange": "   public List<Node> buildStatementList (Reader r, String fname) throws InterpreterException", "diff": ["-        NameVisitor nv = new NameVisitor(nameVisitorContext);", "+        NameVisitor nv = new NameVisitor(nameVisitorContext,checkVisitorContext);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03700fe750312563eae34e4eff32d112", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPane.java", "commitBeforeChange": "74df86fd67328f41836d5f23da76b724b0648a22", "commitAfterChange": "debcaa5c7896b7af34301718bd146b407947838f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void highlightError(int offset, int length)", "signatureAfterChange": "   public void highlightError(int offset, int length)", "diff": ["-    if(_highlightManager == null) {", "-      _initializeHighlightManager();", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0376bf5a1894daa19ec8a874d7831d36", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void setPromptPos(int newPos)", "signatureAfterChange": "   public void setPromptPos(int newPos)", "diff": ["-    readLock();", "+    acquireReadLock();", "-    readUnlock();", "+    releaseReadLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0391f4d7f8c902a18392f52e3f3a0df2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/EditExternalDialog.java", "commitBeforeChange": "1b2c230a180a408e07fefa4999fd97bfd19485a5", "commitAfterChange": "f88a51007770d2637f5170b66e852db63e500083", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   private void _ok()", "signatureAfterChange": "   private void _ok()", "diff": ["+    DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_COUNT,", "+                                  DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_COUNT));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03a489318df00e75640abd8b9602ecce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 350, "methodNumberAfterChange": 525, "signatureBeforeChange": "    final private boolean jj_3R_288()", "signatureAfterChange": "    final private boolean jj_3R_288()", "diff": ["-", "-  final private boolean jj_3R_288() {", "-    if (jj_3R_359()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_433()) { jj_scanpos = xsp; break; }", "-    }", "+  final private boolean jj_3R_288() {", "+    if (jj_scan_token(66)) {", "+    if (jj_scan_token(67)) {", "+    if (jj_scan_token(71)) {", "+    if (jj_scan_token(74)) {", "+    if (jj_scan_token(75)) {", "+    if (jj_scan_token(61)) {", "+    if (jj_scan_token(31)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(46)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03a57b86b07117729ad421764ba51e91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 758, "methodNumberAfterChange": 762, "signatureBeforeChange": "    final private boolean jj_3R_512()", "signatureAfterChange": "    final private boolean jj_3R_515()", "diff": ["-", "-  final private boolean jj_3R_512() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_534()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_535()) jj_scanpos = xsp;", "-    if (jj_scan_token(RPAREN)) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_515() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_538()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_539()) jj_scanpos = xsp;", "+    if (jj_scan_token(RPAREN)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03a5aad153422fb082c36e33aebc4ebe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassMemberChecker.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void checkMembers(Iterable<Node> nodes)", "signatureAfterChange": "      public void checkMembers(Iterable<Node> nodes)", "diff": ["-    for (Node n : nodes) { n.acceptVisitor(this); }", "+    checkSignatures(nodes);", "+    checkBodies(nodes);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03b42acc73aa5218ef78fbac3a433541", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 377, "signatureBeforeChange": "    final private boolean jj_3R_224()", "signatureAfterChange": "    final private boolean jj_3R_225()", "diff": ["-  final private boolean jj_3R_224() {", "-    if (jj_3R_249()) return true;", "-    if (jj_3R_105()) return true;", "+  final private boolean jj_3R_225() {", "+    if (jj_3R_250()) return true;", "+    if (jj_3R_106()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03b820b9889c54900d81c632e5202ca3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "   private void _copyBack(ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,     IncompatibleThreadStateException, AbsentInformationException,     InvocationException, DebugException", "signatureAfterChange": "   private void _copyBack(ThreadReference threadRef)     throws IncompatibleThreadStateException, AbsentInformationException,       InvocationException, DebugException", "diff": ["-    throws InvalidTypeException, ClassNotLoadedException,", "-    IncompatibleThreadStateException, AbsentInformationException,", "-    InvocationException, DebugException", "+    throws IncompatibleThreadStateException, AbsentInformationException,", "+      InvocationException, DebugException", "-    if( printMessages ) System.out.println(\"Getting debug interpreter\");", "-    if( printMessages ) System.err.println(\"Getting variables\");", "+    if(printMessages) System.out.println(\"Getting debug interpreter\");", "+    if(printMessages) System.err.println(\"Getting variables\");", "-      if( printMessages ) System.out.println(\"Iterating through vars\");", "+      if(printMessages) System.out.println(\"Iterating through vars\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03ca24e546d0ff79ea70658e992e0f88", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/VariableData.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public VariableData(SymbolData type)", "signatureAfterChange": "   public VariableData(SymbolData type)", "diff": ["-    _modifiersAndVisibility = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, new String[0]);", "+    _modifiersAndVisibility = new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03d3877de4a717e7a5bb605b075b93a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      public void assertBreakpointChangedCount(int i)", "signatureAfterChange": "      public void assertRegionChangedCount(int i)", "diff": ["-    public void assertBreakpointChangedCount(int i) {", "-      assertEquals(\"number of times breakpointChanged fired\", i, breakpointChangedCount);", "+    public void assertRegionChangedCount(int i) {", "+      assertEquals(\"number of times regionChanged fired\", i, regionChangedCount);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03ddb56f12a2bbfea1d8faf2561dffa6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "3bfda0ffd8a22eda2f2daab913b510305e1ef801", "commitAfterChange": "02d5c825c13aaa4caad6b7e4e89ccbdbfdc16c9f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public DefaultGlobalModel()", "signatureAfterChange": "   public DefaultGlobalModel()", "diff": ["-    _interactionsDocument = new InteractionsDJDocument();", "+    _interactionsDocument = new InteractionsDJDocument(_notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0400a55f12f44db21cc3d1db2c770850", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "commitAfterChange": "2d393792d3779835588c185ebb45db67c3e34dc4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testInfiniteLoop() throws Exception", "signatureAfterChange": "   public void testInfiniteLoop() throws Exception", "diff": ["-      System.err.println(\"Starting JUnit\");", "+//      System.err.println(\"Starting JUnit\");", "-    System.err.println(\"ResetDone\");", "+//    System.err.println(\"ResetDone\");", "-    System.err.println(\"Reached Test End\");", "+//    System.err.println(\"Reached Test End\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04081f8191fba554b1e44221c2ffa958", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e8cc87f4c1373cc71556480da6b0490c23688c68", "commitAfterChange": "ab5f98cfbaf4d4f03ed7df38b403a2ed47f6970f", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 134, "signatureBeforeChange": "   private void _closeProject()", "signatureAfterChange": "   private void _closeProject()", "diff": ["+    _projectPropertiesAction.setEnabled(false);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0425088ed04d9d64a6f61fd917530553", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AbstractDJPane.java", "commitBeforeChange": "25d973a9f45bdba84ad4514eba518ee94f041daf", "commitAfterChange": "fa5a46f3cc65ec85b9fa37599dc6542e75cee25e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void indent(final int reason)", "signatureAfterChange": "   public void indent(final int reason)", "diff": ["-     *  channels and thus it may not be in sync with the document's position.  For that reason, we must sync the ", "-     *  document with the pane before we goahead and indent.", "+     *  channels and thus it may not be in sync with the document's position.  For that reason, we must grab the", "+     *  caretPostion and pass it as the cursor location for the insertLine operation (relevant for single line insert).", "-    getDJDocument().setCurrentLocation(getCaretPosition());", "-", "+    DJDocument doc = getDJDocument();", "+    int loc = getCaretPosition();", "+    ", "+    // The _reduced lock within DefinitionsDocument should be probably be set as well", "+    ", "-", "-    //    final SwingWorker worker = new SwingWorker() {", "-    //      public Object construct() {", "-", "-    //        // Use a progress monitor to show a progress dialog only if necessary.", "+    ", "-", "+    ", "-", "+    ", "-    if (doIndent) { indentLines(selStart, selEnd, reason, pm); }", "+    if (doIndent) { indentLines(selStart, selEnd, reason, pm, loc); }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "043244daddb10d8b4c4e03d21d8f4296", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 637, "methodNumberAfterChange": 313, "signatureBeforeChange": "    final private boolean jj_3R_319()", "signatureAfterChange": "    final private boolean jj_3R_322()", "diff": ["+  final private boolean jj_3R_322() {", "+    if (jj_3R_254()) return true;", "+    if (jj_3R_399()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_319() {", "-    if (jj_3R_251()) return true;", "-    if (jj_3R_393()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0445de788dbb9beec451e341960db547", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 327, "methodNumberAfterChange": 325, "signatureBeforeChange": "    final private boolean jj_3R_396()", "signatureAfterChange": "    final private boolean jj_3R_397()", "diff": ["-  final private boolean jj_3R_396() {", "+  final private boolean jj_3R_397() {", "-    if (jj_3R_409()) {", "+    if (jj_3R_410()) {", "-    if (jj_3R_410()) return true;", "+    if (jj_3R_411()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "045e20e2b56285217df0bd088d8eaf1a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "492227e53d4f60169465f2fd7192a458815ea62f", "commitAfterChange": "8bce57471a5d2761f2096c66cde557596d4532bf", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 52, "signatureBeforeChange": "     private void _setUpPanes()", "signatureAfterChange": "     private void _setUpPanes()", "diff": ["+    split.setOneTouchExpandable(true);", "-    //_setDocListDividerLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0460d99ba473beef5ab8aad52777e4bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   protected String getStrictPackageName() throws InvalidPackageException", "signatureAfterChange": "   protected String getStrictPackageName() throws InvalidPackageException", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0463f32bbcb372be4fb0c6e97f584854", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 523, "methodNumberAfterChange": 526, "signatureBeforeChange": "    final private boolean jj_3R_454()", "signatureAfterChange": "    final private boolean jj_3R_412()", "diff": ["-  final private boolean jj_3R_454() {", "-    if (jj_3R_97()) return true;", "-      if (jj_3_28()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_412() {", "+    if (jj_3R_98()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_38()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "047425a415ac6e865204795efe44375a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyElementaryVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "          public void testForMethodDefDoFirst()", "signatureAfterChange": "          public void testForMethodDefDoFirst()", "diff": ["-      ConcreteMethodDef cmd = new ConcreteMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      ConcreteMethodDef cmd = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "-                                                    new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                                    new Word(JExprParser.NO_SOURCE_INFO, \"methodName\"),", "+                                                    new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                                    new Word(SourceInfo.NO_INFO, \"methodName\"),", "-                                                    new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0482475369500bd460453559e7b6da6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 609, "methodNumberAfterChange": 592, "signatureBeforeChange": "    final private boolean jj_3R_325()", "signatureAfterChange": "    final private boolean jj_3R_336()", "diff": ["+", "+  final private boolean jj_3R_336() {", "+    if (jj_3R_345()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_358()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_325() {", "-    if (jj_3R_333()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_346()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04859ef7a40338d6bf5222c7850ae447", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SpecialTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "               public void testForArrayInitializerHelper()", "signatureAfterChange": "               public void testForArrayInitializerHelper()", "diff": ["-      SourceInfo si = SourceInfo.NO_INFO;", "+      SourceInfo si = SourceInfo.NONE;", "-      Expression e6 = new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"int\"));", "+      Expression e6 = new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"int\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a3bed6f241d59019d97e2ae24ca157", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testInterpretJavaEscapedArgs() throws DocumentAdapterException", "signatureAfterChange": "   public void testInterpretJavaEscapedArgs()", "diff": ["-  public void testInterpretJavaEscapedArgs() throws DocumentAdapterException {", "+  public void testInterpretJavaEscapedArgs() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04ba7278820b677b155194de798c42e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testCompilePackageAsField2()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompilePackageAsField2()     throws BadLocationException, IOException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04c213131659670e1fb1adea14dfd423", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public boolean findCharInStmtBeforePos(char findChar, int position)", "signatureAfterChange": "   public boolean findCharInStmtBeforePos(char findChar, int position)", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04e5db82912bf52f17322d0b312c10e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 721, "methodNumberAfterChange": 720, "signatureBeforeChange": "    final private boolean jj_3R_324()", "signatureAfterChange": "    final private boolean jj_3R_327()", "diff": ["-", "-  final private boolean jj_3R_324() {", "-    if (jj_3R_104()) return true;", "+  final private boolean jj_3R_327() {", "+    if (jj_3R_105()) return true;", "-      if (jj_3_71()) { jj_scanpos = xsp; break; }", "+      if (jj_3_75()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04fb280b227f2b677f51674ed8279488", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BraceInfoTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void _enclosingBraceTestHelper(int location, String msg, int expDist, String expBraceType)", "signatureAfterChange": "      private void _enclosingBraceTestHelper(int location, String msg, int expDist, String expBraceType)", "diff": ["-    _document.acquireReadLock();", "-    try {", "-      _document.setCurrentLocation(location);", "-      //_reduced = _document.getReduced();", "-      BraceInfo info = _document._getEnclosingBrace();", "-      assertEquals(msg + \": distance\", expDist, info.distance());", "-      assertEquals(msg + \": braceType\", expBraceType, info.braceType());", "-    }", "-    finally { _document.releaseReadLock(); }", "+//    _document.acquireReadLock();", "+//    try {", "+    _document.setCurrentLocation(location);", "+    //_reduced = _document.getReduced();", "+    BraceInfo info = _document._getEnclosingBrace();", "+    assertEquals(msg + \": distance\", expDist, info.distance());", "+    assertEquals(msg + \": braceType\", expBraceType, info.braceType());", "+//    }", "+//    finally { _document.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "050e0a9402e618388f143b4de8afbfe3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "51b2542de7f979f07f8d8b46f0a6d987d196a9d1", "commitAfterChange": "4edad8e8a80e806b7e00866e949c609589a8b7ed", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "    private void _setUpAction(Action a, String icon, String desc)", "signatureAfterChange": "    private void _setUpAction(Action a, String shortDesc, String desc)", "diff": ["-  private void _setUpAction(Action a, String icon, String desc) {", "+  private void _setUpAction(Action a, String shortDesc, String desc) {", "-    // createManualToolbarButton needed to be modified as well.", "+    // createManualToolbarButton was modified as well.", "-    ", "+    a.putValue(Action.DEFAULT, shortDesc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05186ab6f9a190089736422fb86d73a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 341, "methodNumberAfterChange": 314, "signatureBeforeChange": "    final private boolean jj_3R_154()", "signatureAfterChange": "    final private boolean jj_3R_158()", "diff": ["-  final private boolean jj_3R_154() {", "-    if (jj_3R_102()) return true;", "+  final private boolean jj_3R_158() {", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05302af3e75ed86bf0907239158a67dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setValueAt(Object value, int row, int col)", "signatureAfterChange": "     public void setValueAt(Object value, int row, int col)", "diff": ["-      if ((value == null) || (value.equals(\"\"))) {", "-        // Remove value", "-        _debugger.removeWatch(row);", "-      }", "-      else {", "-        if (row < _watches.size())", "+      try {", "+        if ((value == null) || (value.equals(\"\"))) {", "+          // Remove value", "-        // Add value", "-        _debugger.addWatch(String.valueOf(value));", "+        }", "+        else {", "+          if (row < _watches.size())", "+            _debugger.removeWatch(row);", "+          // Add value", "+          _debugger.addWatch(String.valueOf(value));", "+        }", "+        fireTableCellUpdated(row, col);", "-      fireTableCellUpdated(row, col);", "+      catch (DebugException de) {", "+        _frame._showDebugError(de);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "057e2ac38fa3d12d527af0b95f7629b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 655, "methodNumberAfterChange": 653, "signatureBeforeChange": "    final private boolean jj_3R_491()", "signatureAfterChange": "    final private boolean jj_3R_531()", "diff": ["-", "-  final private boolean jj_3R_491() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_36()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_494()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_531() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_38()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_546()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0585f202ee1f62371a1f7e9673e0bb7c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyFullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "          public void testForVariableDeclarationOnly()", "signatureAfterChange": "          public void testForVariableDeclarationOnly()", "diff": ["-      VariableData vd1 = new VariableData(\"field1\", _packageMav, SymbolData.DOUBLE_TYPE, true, _cbfjv._enclosingData);", "-      VariableData vd2 = new VariableData(\"field2\", _packageMav, SymbolData.BOOLEAN_TYPE, true, _cbfjv._enclosingData);", "+      VariableData vd1 = new VariableData(\"field1\", _packageMav, SymbolData.DOUBLE_TYPE, false, _cbfjv._enclosing);", "+      VariableData vd2 = new VariableData(\"field2\", _packageMav, SymbolData.BOOLEAN_TYPE, false, _cbfjv._enclosing);", "+      ", "+      System.err.println(\"_sd1 vars =  \" + _sd1.getVars());", "-      VariableData vd3 = new VariableData(\"field3\", _packageMav, SymbolData.DOUBLE_TYPE, true, _cbfjv._enclosingData);", "+      VariableData vd3 = new VariableData(\"field3\", _packageMav, SymbolData.DOUBLE_TYPE, false, _cbfjv._enclosing);", "-      ", "-//      System.err.println(\"vd3 = \" + vd3);", "-//      System.err.println(\"vd3.getMav() = \" + vd3.getMav());", "-//      System.err.println(\"vd3.getType() = \" + vd3.getType());", "-      VariableData vd4 = new VariableData(\"field4\", _staticMav, SymbolData.DOUBLE_TYPE, true, _cbfjv._enclosingData);", "+      VariableData vd4 = new VariableData(\"field4\", _staticMav, SymbolData.DOUBLE_TYPE, false, _cbfjv._enclosing);", "-      VariableData vd5 = new VariableData(\"field5\", _publicMav, SymbolData.DOUBLE_TYPE, true, _cbfjv._enclosingData);", "+      VariableData vd5 = new VariableData(\"field5\", _publicMav, SymbolData.DOUBLE_TYPE, true, _cbfjv._enclosing);", "-//      VariableData vd6 = new VariableData(\"field6\", _packageMav, SymbolData.DOUBLE_TYPE, true, _cbfjv._enclosingData);", "+//      VariableData vd6 = new VariableData(\"field6\", _packageMav, SymbolData.DOUBLE_TYPE, true, _cbfjv._enclosing);", "-//      _cbfjv._enclosingData.setSuperClass(myData);", "+//      _cbfjv._enclosing.setSuperClass(myData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0590a70051e78bb684977fc2a3aad10e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JarOptionsDialog.java", "commitBeforeChange": "d33d42f5f56aa9f97fa7ee5954a0170706bf34dc", "commitAfterChange": "d94a1a3c2d24d89ea1f580460a5e45b2a0d432b1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private void _loadSettings()", "signatureAfterChange": "   private void _loadSettings()", "diff": ["-      DirectoryChooser chooser = new DirectoryChooser(this,_rootFile);", "+      FileChooser chooser = new FileChooser(_rootFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0594d63496d65fbb3f9a2628244a848a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _setPendingNotifies(int n) throws InterruptedException", "signatureAfterChange": "   protected void _setPendingNotifies(int n) throws InterruptedException", "diff": ["-      if (printMessages) System.out.println(\"waiting for \" + n + \" notifications...\");", "+      if (printMessages) printStream.println(\"waiting for \" + n + \" notifications...\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05a1823b87ae6b76fa3e4b1e57933195", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "8468328336764977b1a392d354ad9fa8332d6cf0", "commitAfterChange": "b5065bdb57d50a5108c714db64f9cb4417931362", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void removeText(int offs, int len) throws EditDocumentException", "signatureAfterChange": "   public void removeText(int offs, int len) throws EditDocumentException", "diff": ["-    try {", "-      if (offs < _promptPos) _beep.run();", "-      else _document.removeText(offs, len);", "-    }", "+    try { _removeText(offs, len); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b97561c774d95233af490d440f7c64", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "32020feaae9acc630e383fdce3c878d1ec08218e", "commitAfterChange": "bc04c896b813267bf0ef9dd37648372083f58698", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 83, "signatureBeforeChange": "   private OpenDefinitionsDocument _openFiles(File[] files)      throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   private OpenDefinitionsDocument _openFiles(File[] files)      throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["-      //if no OperationCanceledException, then getFiles should", "-      //have at least one file.", "-      throw new IOException(\"No Files returned from FileChooser\");", "+      //if we didn't open any files, then it's just as if they cancelled it...", "+      throw new OperationCanceledException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05bd9df45f30e296e151df0d6ce2305d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "          public void testGetInnerClassOrInterface()", "signatureAfterChange": "          public void testGetInnerClassOrInterface()", "diff": ["-                    new NullLiteral(JExprParser.NO_SOURCE_INFO));", "+                    new NullLiteral(SourceInfo.NO_INFO));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05f8140348672fef0ffe28f31682f6ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BraceTest.java", "commitBeforeChange": "a454f078c900245b418db671925f6207d6f1ff60", "commitAfterChange": "533552b81f1020221bb3fe1df1f370a4168db503", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testMakeBraceSuccess()", "signatureAfterChange": "   public void testMakeBraceSuccess()", "diff": ["-    Brace brace = Brace.MakeBrace(\"{\", ReducedToken.FREE);", "+    Brace brace = Brace.MakeBrace(\"{\", FREE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05fa11a9d52ae651de7a47aaa6a8d4cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "c0487ade35919fa6d08b7c39361898d3c5751c04", "commitAfterChange": "7b4296c095d59b57f25b910a8bdce57816e7621f", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public String getIndentOfCurrStmt(int pos, char[] delims, char[] whitespace) throws BadLocationException", "signatureAfterChange": "   public String getIndentOfCurrStmt(int pos, char[] delims, char[] whitespace) throws BadLocationException", "diff": ["-    StringBuffer keyBuf = new StringBuffer(\"getIndentOfCurrStmt:\").append(pos);", "+    StringBuilder keyBuf = new StringBuilder(\"getIndentOfCurrStmt:\").append(pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "060174d3da337bdb1eade35cfd6d8892", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private void _updateNoErrors(boolean haveTestsRun) throws BadLocationException", "signatureAfterChange": "     private void _updateNoErrors(boolean haveTestsRun) throws BadLocationException", "diff": ["-      ", "+      _checkSync(doc);", "-      doc.insertString(0,", "+      doc.insertString(doc.getLength(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "060505c86320dbaf6e393a5cd40a2c8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 837, "methodNumberAfterChange": 263, "signatureBeforeChange": "    final private boolean jj_3R_230()", "signatureAfterChange": "    final private boolean jj_3R_195()", "diff": ["+  final private boolean jj_3R_195() {", "+    if (jj_scan_token(STAR_ASSIGN)) return true;", "+    if (jj_3R_78()) return true;", "-", "-  final private boolean jj_3R_230() {", "-    if (jj_scan_token(STAR_ASSIGN)) return true;", "-    if (jj_3R_87()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0606121086c999583161e11453c25eb5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocument.java", "commitBeforeChange": "fe86fb3e9d5f6b77a0aff2e2b95736069832eb4a", "commitAfterChange": "094b2c0ac07bfea53ecb65f7d561070a7519352a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t   public void remove(int offset, int len) throws BadLocationException", "signatureAfterChange": " \t   public void remove(int offset, int len) throws BadLocationException", "diff": ["-\t\t_modifiedHighlights = true;", "+\t\t_modifiedHighlights = _reduced.hasHighlightChanged();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06216954980eb01e2e730b16e4ade94e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testDebugSourcepath()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testDebugSourcepath()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-    throws DebugException, BadLocationException, IOException, InterruptedException", "+    throws DebugException, BadLocationException, DocumentAdapterException,", "+    IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06222bae67b026343cf4390aa0be3df9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   synchronized public void compileAll() throws IOException", "signatureAfterChange": "   public void compileAll() throws IOException", "diff": ["-  synchronized public void compileAll() throws IOException {", "+  public void compileAll() throws IOException {", "+    ", "+    boolean isProjActive = _getter.getFileGroupingState().isProjectActive();", "+    ", "-    List<OpenDefinitionsDocument> defDocs =", "-      _getter.getDefinitionsDocuments();", "+    List<OpenDefinitionsDocument> defDocs = _getter.getDefinitionsDocuments();", "-    File buildDir = null;", "-    if (_getter.getFileGroupingState().isProjectActive()) {", "-", "-      // If we're in project mode, filter out only the ", "-      // documents that are in the project and leave out", "-      // the external files.", "-      List<OpenDefinitionsDocument> projectDocs =", "-        new LinkedList<OpenDefinitionsDocument>();", "-    ", "-      for(OpenDefinitionsDocument odd : defDocs){", "-        if(odd.isInProjectPath() || odd.isAuxiliaryFile()){", "-            projectDocs.add(odd);", "-        }", "+    if (isProjActive) {", "+      // If we're in project mode, filter out only the documents that are in the project and leave ", "+      // out the external files.", "+      List<OpenDefinitionsDocument> projectDocs = new LinkedList<OpenDefinitionsDocument>();", "+      ", "+      for (OpenDefinitionsDocument doc : defDocs) {", "+        if (doc.isInProjectPath() || doc.isAuxiliaryFile()) projectDocs.add(doc);", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "062f3d7bb8ab5cc5e0b9634b7ddde123", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 57, "signatureBeforeChange": "   private void dumpVariablesIntoInterpreterAndSwitch() throws DebugException", "signatureAfterChange": "   private void dumpVariablesIntoInterpreterAndSwitch() throws DebugException", "diff": ["-      System.out.print(\"Getting debugInterpreter...\");", "-      System.out.println(\"done.\");", "-      String prompt = \"[\" + suspendedThreadRef.name() + \"] > \";", "+      String prompt = _getPromptString(suspendedThreadRef);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0633be91a2eb1237da4aa6b7a2a61716", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public synchronized Vector<DebugStackData> getCurrentStackFrameData()     throws DebugException", "signatureAfterChange": "   public synchronized Vector<DebugStackData> getCurrentStackFrameData()     throws DebugException", "diff": ["-      Iterator<StackFrame> iter = thread.frames().iterator();  // Added <StackFrame> parameterization; warning will go away in JDK 1.5", "+      Iterator iter = thread.frames().iterator();", "-        frames.add(new DebugStackData(iter.next()));", "+        frames.add(new DebugStackData((StackFrame)iter.next()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "064347a6666f421890e90d012fb15e06", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "a8613ae7d0a727955779b61d4301c40099189842", "commitAfterChange": "1ead7243f861e88fdef225f62c354fe2bb02e767", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": "   public void openFolder(DirectorySelector openSelector)", "signatureAfterChange": "   public void openFolder(DirectorySelector openSelector)", "diff": ["-      System.err.println(\"finding files\");", "-      System.err.println(\"sorting files\");", "-        System.err.println(\"opening files\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "067c978006f1bf5b4a63bfe835e0fd60", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileIOTest.java", "commitBeforeChange": "b5f59af8481ed1aa24e82d114a52e3948d4e83f5", "commitAfterChange": "4a90aa5d0c3f437e0c1cdaccfb311a2852121f92", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testClassFileSynchronizationAfterRename() throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronizationAfterRename() throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "diff": ["-    System.err.println(\"cached class file is \" + doc.getCachedClassFile());", "+//    System.err.println(\"cached class file is \" + doc.getCachedClassFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0685ce9f8a158bb282dc4075605f72bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DocumentDebugAction.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DocumentDebugAction (JPDADebugger manager,                               OpenDefinitionsDocument doc,                               int offset)     throws DebugException", "signatureAfterChange": "   public DocumentDebugAction (JPDADebugger manager,                               OpenDefinitionsDocument doc,                               int offset)     throws DebugException", "diff": ["-        _className = doc.getDocument().getQualifiedClassName(offset);", "+        _className = doc.getQualifiedClassName(offset);", "-        _className = doc.getDocument().getQualifiedClassName();", "+        _className = doc.getQualifiedClassName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "068a05b0d1534c006db1a7d3ee8778d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void testStaticFieldsConsistent()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testStaticFieldsConsistent()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-      _asynchStep(Debugger.STEP_OVER);", "+      _asyncStep(Debugger.STEP_OVER);", "-      _asynchStep(Debugger.STEP_OVER);", "+      _asyncStep(Debugger.STEP_OVER);", "-      _asynchDoSetCurrentThread(threadB);", "+      _asyncDoSetCurrentThread(threadB);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06a6bbbbfa057b73c85068beff5aa3a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9d671cad5f849049059b2e199aea7279dd398525", "commitAfterChange": "ef7e8ed674f3435dc8cfe861d137f1cab241f5c2", "methodNumberBeforeChange": 705, "methodNumberAfterChange": 707, "signatureBeforeChange": "          public void interpreterResetting()", "signatureAfterChange": "          public void interpreterResetting()", "diff": ["+      _runAppletAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06bb6e2b51f79bda93f60c7c7f960fc7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "eaf05eaab735a20f7c04a1501975d3581aec1586", "commitAfterChange": "ea54d5918e0742266441f70659af74f35bca898d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   private int replaceAll(boolean searchAll)", "signatureAfterChange": "   private int replaceAll(boolean searchAll)", "diff": ["+      ", "+      // update display (adding \"*\") in navigatgorPane", "+      _model.getDocumentNavigator().repaint();", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06c58cd9bc383907a37a010a8329f457", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "     public Object visit(BitOrExpression node)", "signatureAfterChange": "   public Class visit(BitOrExpression node)", "diff": ["+   */", "+  public Class visit(BitOrExpression node) {", "+    Class c = visitBitwiseExpression(node);", "+    ", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.bitOr", "+           (c,", "+            ln.getProperty(NodeProperties.VALUE),", "+            rn.getProperty(NodeProperties.VALUE)));", "+    }", "+    return c;", "+  }", "-     */", "-    public Object visit(BitOrExpression node) {", "-        Class c = visitBitwiseExpression(node);", "-", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.bitOr", "-                     (c,", "-                      ln.getProperty(NodeProperties.VALUE),", "-                      rn.getProperty(NodeProperties.VALUE)));", "-        }", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06c98c6d3a5b3d07f542f9c5236fc36c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 426, "methodNumberAfterChange": 318, "signatureBeforeChange": "    final private boolean jj_3R_273()", "signatureAfterChange": "    final private boolean jj_3R_277()", "diff": ["-  final private boolean jj_3R_273() {", "-    if (jj_scan_token(CATCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_340()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_143()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_277() {", "+    if (jj_scan_token(CATCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_345()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_146()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d72c5adb8903cb9eff570afdaf73d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JarOptionsDialog.java", "commitBeforeChange": "acb6486cf73ee6fa26fd3913d48fe9f46d7610e4", "commitAfterChange": "c0463418af643463955237ff1428c0079e36defe", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 45, "signatureBeforeChange": "   private void _toggleClassOptions()", "signatureAfterChange": "   private void _toggleClassOptions()", "diff": ["+    _setEnableCustomManifest(_jarClasses.isSelected());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06edcc211d6e1e118006146aab7c2a5d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d49cbdbddda87e8c405e1611614405c2c7bd203d", "commitAfterChange": "be38b2b11517729e454db4fb5ce1085dc1eb228a", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 69, "signatureBeforeChange": "      public void fileSaved(OpenDefinitionsDocument doc)", "signatureAfterChange": "      public void fileSaved(OpenDefinitionsDocument doc)", "diff": ["-      _compileAction.setEnabled(true);", "+      //_compileAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06fb6901601153739b838375f7ac4a56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "2538f0bcd19f4c6ce38b0ee3614e18d5ae58ada4", "commitAfterChange": "ce392e05d418567d3a904ab1014f959de3b94789", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "   public boolean closeAllFiles()", "signatureAfterChange": "   public boolean closeAllFiles()", "diff": ["-      System.out.println(\"closing \" + next);", "+//      System.out.println(\"closing \" + next);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0711c65117593f1c1fdd5682b594de45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfig.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r   private void init(InputSource is)", "signatureAfterChange": "   private void init(InputSource is)", "diff": ["-   */\r", "-  private void init(InputSource is) {\r", "-    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\r", "-    DocumentBuilder builder = null;\r", "-    try {\r", "-      builder = factory.newDocumentBuilder();\r", "-      _document = builder.parse(is);\r", "-      _document.setXmlStandalone(true);\r", "-    }\r", "-    catch(Exception e) {\r", "-      throw new XMLConfigException(\"Error in ctor\", e);\r", "-    }\r", "-    _document.normalize();\r", "-  }\r", "+   */", "+  private void init(InputSource is) {", "+    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();", "+    DocumentBuilder builder = null;", "+    try {", "+      builder = factory.newDocumentBuilder();", "+      _document = builder.parse(is);", "+      // NOTE: not 1.4 compatible -- _document.setXmlStandalone(true);", "+    }", "+    catch(Exception e) {", "+      throw new XMLConfigException(\"Error in ctor\", e);", "+    }", "+    _document.normalize();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "071e6601919c7ad2cd97a1f0e3f5c71a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 392, "methodNumberAfterChange": 601, "signatureBeforeChange": "    final private boolean jj_3R_295()", "signatureAfterChange": "    final private boolean jj_3R_298()", "diff": ["-", "-  final private boolean jj_3R_295() {", "-    if (jj_3R_315()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_340()) { jj_scanpos = xsp; break; }", "-    }", "+  final private boolean jj_3R_298() {", "+    if (jj_3R_318()) return true;", "+      if (jj_3R_342()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "072dbc95c5e1b75916d9b9d73b24afb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-    //synchronized(listener) {", "-      doc.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener.wait();", "-    //}", "+    doc.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0741be464fd3e871614e41aa6017bbba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ConsoleController.java", "commitBeforeChange": "efc072ede22ea55faaadbf97a73c4466d939ffd3", "commitAfterChange": "0eb7fcb52c65dc5248fffbf667b1fb96b5218a87", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   protected void _setupView()", "signatureAfterChange": "   protected void _setupView()", "diff": ["+    _pane.addActionForKeyStroke(DrJava.getConfig().getSetting(OptionConstants.KEY_PASTE_FROM_HISTORY), pasteAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0769196af54d5bd9e717e13d819e4bc1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 812, "methodNumberAfterChange": 707, "signatureBeforeChange": "    final private boolean jj_3R_231()", "signatureAfterChange": "    final private boolean jj_3R_234()", "diff": ["-", "-  final private boolean jj_3R_231() {", "-    if (jj_3R_293()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_294()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_234() {", "+    if (jj_3R_297()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_298()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0787819574cc4716f0f87422942565b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "      void open(FileOpenSelector openSelector)", "signatureAfterChange": "      void open(FileOpenSelector openSelector)", "diff": ["-      if (CodeStatus.DEVELOPMENT) {", "-        _recentFileManager.updateOpenFiles(openDoc.getFile());", "-      }", "+      _recentFileManager.updateOpenFiles(openDoc.getFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "078ff77c6f8fbcc1852c152dc92fc251", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 393, "methodNumberAfterChange": 377, "signatureBeforeChange": "    final private boolean jj_3R_326()", "signatureAfterChange": "    final private boolean jj_3R_329()", "diff": ["-  final private boolean jj_3R_326() {", "+  final private boolean jj_3R_329() {", "-    if (jj_3R_295()) return true;", "+    if (jj_3R_298()) return true;", "-    if (jj_3R_461()) jj_scanpos = xsp;", "+    if (jj_3R_464()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07abb0e997024b58181eb2ac6e455021", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public static TaskController<Void> runInThread(Runnable task, boolean start)", "signatureAfterChange": "   public static TaskController<Void> runInThread(Runnable task, boolean start)", "diff": ["-    return computeInThread(LambdaUtil.asThunk(task), start);", "+    return computeWithExecutor(LambdaUtil.asThunk(task), THREAD_EXECUTOR, start);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07b110636f0b04c868ede8357e1cc84f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 846, "methodNumberAfterChange": 780, "signatureBeforeChange": "    final private boolean jj_3R_515()", "signatureAfterChange": "    final private boolean jj_3R_501()", "diff": ["-  final private boolean jj_3R_515() {", "-    if (jj_scan_token(NOT_EQUAL)) return true;", "-    if (jj_3R_465()) return true;", "+", "+  final private boolean jj_3R_501() {", "+    if (jj_scan_token(BITWISE_AND)) return true;", "+    if (jj_3R_463()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07be292778cd43b2cbc731b94db473a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "          public void testCheckForCyclicInheritance()", "signatureAfterChange": "          public void testCheckForCyclicInheritance()", "diff": ["-      InterfaceDef nl = new InterfaceDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"name\"), new TypeParameter[0], new ReferenceType[0], new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      InterfaceDef nl = new InterfaceDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"name\"), new TypeParameter[0], new ReferenceType[0], new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07f159fb85cde23b1335f89b44d98add", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 706, "methodNumberAfterChange": 269, "signatureBeforeChange": "    final private boolean jj_3R_476()", "signatureAfterChange": "    final private boolean jj_3R_202()", "diff": ["+  final private boolean jj_3R_202() {", "+    if (jj_3R_223()) return true;", "+    if (jj_3R_224()) jj_scanpos = xsp;", "-", "-  final private boolean jj_3R_476() {", "-    if (jj_3R_88()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_478()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07ff2f1213f0438591520b5fad7bb837", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "94495305a8fb1d1ea8c2b8ae2ef82ea7d92dd639", "commitAfterChange": "ae025ece2387b12ae04306fdd94dd1060cdc00c5", "methodNumberBeforeChange": 270, "methodNumberAfterChange": 271, "signatureBeforeChange": "     public void fileClosed(final OpenDefinitionsDocument doc)", "signatureAfterChange": "     public void fileClosed(final OpenDefinitionsDocument doc)", "diff": ["-          if(_model.isProjectFile(f))", "+          if(_model.isProjectFile(f)) {", "+            _model.setProjectChanged();", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0800ae71bb5ad321bc6fe135b85c05a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "6c31f49b491d4a01bd2ddbae62b5ee4f76d52129", "commitAfterChange": "b17c3d3d0edf27a5d35f38839287840198b5808d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     void clipLeft()", "signatureAfterChange": "     void clipLeft()", "diff": ["-     */", "+      */", "-      if (atStart()) {", "-        return;", "-      }", "-      else if (getBlockOffset() == 0) {", "-        remove();", "-      }", "+      if (atStart())  return;", "+      else if (getBlockOffset() == 0)  remove();", "-        this.current().shrink(size - getBlockOffset());", "+        current().shrink(size - getBlockOffset());", "-        if (getBlockOffset() != 1) {", "-          throw new IllegalArgumentException(\"Offset incorrect\");", "-        }", "+        if (getBlockOffset() != 1) throw new IllegalArgumentException(\"Offset incorrect\");", "-          this.current().setType(first);", "+          current().setType(first);", "-      else {", "-        throw new IllegalArgumentException(\"Cannot clip left.\");", "-      }", "+      else throw new IllegalArgumentException(\"Cannot clip left.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08163fc235e763abf12c2ea02d621455", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 28, "signatureBeforeChange": "   final public List<Node> parseStream() throws ParseException", "signatureAfterChange": "   final public List<Node> parseStream() throws ParseException", "diff": ["-    List<Node> l;", "+    List<Node> l = null;", "-                                  list.add(root);", "+                                    list.add(root);", "-      {if (true) return list;}", "+        {if (true) return list;}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08244acca0357e5ed27ce44871234bf8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void valueChanged(TreeSelectionEvent e)", "signatureAfterChange": "   public void valueChanged(TreeSelectionEvent e)", "diff": ["-    synchronized (_model) {", "+//    synchronized (_model) {", "-    }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0835aa2c0dfa76e11bd4ec7420d29f88", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 514, "methodNumberAfterChange": 508, "signatureBeforeChange": "    final private boolean jj_3R_255()", "signatureAfterChange": "    final private boolean jj_3R_265()", "diff": ["-", "-  final private boolean jj_3R_255() {", "-    if (jj_scan_token(LEFT_SHIFT_ASSIGN)) return true;", "-    if (jj_3R_94()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_265() {", "+    if (jj_scan_token(LEFT_SHIFT_ASSIGN)) return true;", "+    if (jj_3R_97()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "083786c9580600b237b21e17b44f956c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void junitProject()", "signatureAfterChange": "   public void junitProject()", "diff": ["-    Iterator<OpenDefinitionsDocument> it =", "-      _getter.getDefinitionsDocuments().iterator();", "-    while (it.hasNext()) {", "-      OpenDefinitionsDocument doc = it.next();", "-      if (doc.isInProjectPath() || doc.isAuxiliaryFile()) {", "-        lod.add(doc);", "-      }", "+    for (OpenDefinitionsDocument doc : _getter.getDefinitionsDocuments() ) { ", "+      if (doc.isInProjectPath() || doc.isAuxiliaryFile())  lod.add(doc);", "-    junitDocs(lod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0837d2f55b616c3f29dc243efd0020e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1f215280ffb4deee1474aa0ea630d96d544831f9", "commitAfterChange": "36da33844ba54377479a55c5dc3b578eed405d70", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "   private void _setDebugMenuItemsEnabled(boolean enabled)", "signatureAfterChange": "   private void _setDebugMenuItemsEnabled(boolean enabled)", "diff": ["-    _runDebuggerMenuItem.setEnabled(enabled);", "-    _resumeDebugMenuItem.setEnabled(enabled);", "-    _stepDebugMenuItem.setEnabled(enabled);", "-    _nextDebugMenuItem.setEnabled(enabled);", "+    //_runDebuggerMenuItem.setEnabled(enabled);", "+    _resumeDebugMenuItem.setEnabled(enabled);", "+    //_stepDebugMenuItem.setEnabled(enabled);", "+    //_nextDebugMenuItem.setEnabled(enabled);", "-    _printBreakpointsMenuItem.setEnabled(enabled);", "-    _clearAllBreakpointsMenuItem.setEnabled(enabled);", "+    //_printBreakpointsMenuItem.setEnabled(enabled);", "+    //_clearAllBreakpointsMenuItem.setEnabled(enabled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "083d437261600028bc18e75f1dacff38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "   private int _findKeywordAtToplevel(String keyword, String text, int textOffset)", "signatureAfterChange": "   private int _findKeywordAtToplevel(String keyword, String text, int textOffset)", "diff": ["-    readLock();", "+    acquireReadLock();", "-      finally { readUnlock(); }", "+      finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0843db06281658c3de2755b671dd3d90", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 691, "methodNumberAfterChange": 699, "signatureBeforeChange": "    final private boolean jj_3R_264()", "signatureAfterChange": "    final private boolean jj_3R_298()", "diff": ["-  final private boolean jj_3R_264() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_307()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_308()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_298() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_70()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_309()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0854b8207d96f7795cda286ca6425648", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandlerThread.java", "commitBeforeChange": "37dab6b79fc3d4e6f7b2b5f0aa53a4ea9b7f7476", "commitAfterChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void run()", "signatureAfterChange": "   public void run()", "diff": ["+        ByteArrayOutputStream baos = new ByteArrayOutputStream();", "+        e.printStackTrace(new PrintWriter(baos, true));", "+        _debugger.printMessage(\"Stack trace: \"+baos.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08564651c2079d6212e51efbcc2b7131", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 787, "methodNumberAfterChange": 787, "signatureBeforeChange": "   private void _setUpKeyBindingMaps()", "signatureAfterChange": "   private void _setUpKeyBindingMaps()", "diff": ["-    kbm.put(KEY_PREVIOUS_WORD, actionMap.get(_currentDefDoc.getEditor().previousWordAction), null, ", "+    kbm.put(KEY_PREVIOUS_WORD, actionMap.get(DefaultEditorKit.previousWordAction), null, ", "-    kbm.put(KEY_PREVIOUS_WORD_SELECT, actionMap.get(_currentDefDoc.getEditor().selectionPreviousWordAction), null, ", "+    kbm.put(KEY_PREVIOUS_WORD_SELECT, actionMap.get(DefaultEditorKit.selectionPreviousWordAction), null, ", "-    kbm.put(KEY_NEXT_WORD, actionMap.get(_currentDefDoc.getEditor().nextWordAction), null, \"Cursor Next Word\");", "-    kbm.put(KEY_NEXT_WORD_SELECT, actionMap.get(_currentDefDoc.getEditor().selectionNextWordAction), null, ", "+    kbm.put(KEY_NEXT_WORD, actionMap.get(DefaultEditorKit.nextWordAction), null, \"Cursor Next Word\");", "+    kbm.put(KEY_NEXT_WORD_SELECT, actionMap.get(DefaultEditorKit.selectionNextWordAction), null, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "087f5b78a966e21b1410157d735e7d42", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/MixedQuoteTest.java", "commitBeforeChange": "75615d6339345db6e253403db9b318fe78732c66", "commitAfterChange": "cfb5c0d7a42de99cbc0ae424116ea39ceac84b66", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testDoubleEclipsesSingle()", "signatureAfterChange": "   public void testDoubleEclipsesSingle()", "diff": ["-    assertEquals(\"#0.1\", FREE, stateAtCurrentToken(model));", "+    assertEquals(\"#0.1\", FREE, stateOfCurrentToken(model));", "-    assertEquals(\"#1.1\", INSIDE_SINGLE_QUOTE, stateAtCurrentToken(model));", "+    assertEquals(\"#1.1\", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(model));", "-    assertEquals(\"#2.1\", INSIDE_DOUBLE_QUOTE, stateAtCurrentToken(model));", "+    assertEquals(\"#2.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model));", "-    assertEquals(\"#3.1\", INSIDE_DOUBLE_QUOTE, stateAtCurrentToken(model));", "+    assertEquals(\"#3.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0883eb48d0228adb198bb8665825b4e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "   int getBlockOffset()", "signatureAfterChange": "   int getBlockOffset()", "diff": ["-    if (rmb.getBlockOffset() < rmc.getBlockOffset()) return rmb.getBlockOffset();", "-    return rmc.getBlockOffset();", "+    if (getRMB().getBlockOffset() < getRMC().getBlockOffset()) return getRMB().getBlockOffset();", "+    return getRMC().getBlockOffset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08859dfbd7459aec6c73e6841ceaf27e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "43b808b9e05f3378c0faae83fe4225562adc4c6e", "commitAfterChange": "723910d837b2fcdd9f4127559df4832f71fb62e8", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": "   private JMenu _setUpToolsMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpToolsMenu(int mask)", "diff": ["-    _addMenuItem(toolsMenu, _runAction, KEY_RUN);", "-    toolsMenu.add(_junitAction);", "+    if (CodeStatus.DEVELOPMENT) {", "+      _addMenuItem(toolsMenu, _runAction, KEY_RUN);", "+    }", "+    _addMenuItem(toolsMenu, _junitAction, KEY_TEST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0896aed946e2c3350c689f285c4e2add", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1cda89f41e5a82d37339ff20e08702987c32bbfc", "commitAfterChange": "3b86afe47e23692474e8facf6c83b275a516f91e", "methodNumberBeforeChange": 533, "methodNumberAfterChange": 536, "signatureBeforeChange": "   private void _setThreadDependentDebugMenuItems(boolean isSuspended)", "signatureAfterChange": "   private void _setThreadDependentDebugMenuItems(boolean isSuspended)", "diff": ["+    _automaticTraceDebugAction.setEnabled(isSuspended);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08a31bd6c2a1341f460e4f2445b95da2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 425, "methodNumberAfterChange": 718, "signatureBeforeChange": "    final private boolean jj_3R_585()", "signatureAfterChange": "    final private boolean jj_3R_576()", "diff": ["-  final private boolean jj_3R_585() {", "-    if (jj_3R_593()) {", "-    if (jj_3R_594()) {", "-    if (jj_3R_595()) return true;", "+", "+  final private boolean jj_3R_576() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_592()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_593()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_594()) return true;", "+    }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08ae04f88f60f25f40b885c64bc7ce2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "e4d6291f62d6e504510509a9010f43ba6552f00d", "commitAfterChange": "217c110d76e83e4661793b1b3dd648691e91b61d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    _compilerChoiceBox = new JComboBox(IterUtil.asList(iter).toArray(new CompilerInterface[0]));", "+    _compilerChoiceBox = new JComboBox(IterUtil.asArray(iter, CompilerInterface.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08ae9a4ee0c620f04fae60deac61710b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public JPanel _builtDirectoryPanel()", "signatureAfterChange": "      public JPanel _builtDirectoryPanel()", "diff": ["-    dirChooser.setSelectedDirectory(_getBuildDir());", "+    dirChooser.setSelectedFile(_getBuildDir());", "-    dirChooser.setEditable(true);", "-    _builtDirSelector = new DirectorySelectorComponent(this,dirChooser, 20, 12f);", "+//    dirChooser.setEditable(true);", "+    _builtDirSelector = new DirectorySelectorComponent(this, dirChooser, 20, 12f);", "+    ", "-      public void insertUpdate(DocumentEvent e) {", "-        _applyButton.setEnabled(true);", "-      }", "-      public void removeUpdate(DocumentEvent e) {", "-        _applyButton.setEnabled(true);", "-      }", "-      public void changedUpdate(DocumentEvent e) {", "-        _applyButton.setEnabled(true);", "-      }", "+      public void insertUpdate(DocumentEvent e) { _applyButton.setEnabled(true); }", "+      public void removeUpdate(DocumentEvent e) { _applyButton.setEnabled(true); }", "+      public void changedUpdate(DocumentEvent e) { _applyButton.setEnabled(true); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08bbf35d6c3fb88a50d1bbaec0ae9ae0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/swing/SwingWorker.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public final void execute()", "signatureAfterChange": "      public final void execute()", "diff": ["+  ", "+  public final void execute() { start(); }", "-  /** Begin computation in the worker thread. */", "-  public final void execute() {  _controller.start(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08e89911a654403cdd4de5bdec24783a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartCurrStmtPlus.java", "commitBeforeChange": "41e184b1aabfa466589eae2bb1a9101d9be4de38", "commitAfterChange": "57a37f35b71c66341cae7312e856c3bb4a0b6fcf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-", "+    super.indentLine(doc);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08e9e2dd44d16bbac1aaf7069a9bad96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "                   public void testForTryCatchStatement()", "signatureAfterChange": "                   public void testForTryCatchStatement()", "diff": ["-      BracedBody emptyBody = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]);", "-      Block b = new Block(SourceInfo.NO_INFO, emptyBody);", "+      BracedBody emptyBody = new BracedBody(SourceInfo.NONE, new BodyItemI[0]);", "+      Block b = new Block(SourceInfo.NONE, emptyBody);", "-      NormalTryCatchStatement ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[0]);", "-      TryCatchFinallyStatement tcfs = new TryCatchFinallyStatement(SourceInfo.NO_INFO, b, new CatchBlock[0], b);", "+      NormalTryCatchStatement ntcs = new NormalTryCatchStatement(SourceInfo.NONE, b, new CatchBlock[0]);", "+      TryCatchFinallyStatement tcfs = new TryCatchFinallyStatement(SourceInfo.NONE, b, new CatchBlock[0], b);", "-//      BracedBody errorBody = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {", "-//        new ExpressionStatement(SourceInfo.NO_INFO, ", "-//                                new BitwiseOrExpression(SourceInfo.NO_INFO, ", "-//                                                        new SimpleNameReference(SourceInfo.NO_INFO, ", "-//                                                                                new Word(SourceInfo.NO_INFO, \"i\")), ", "-//                                                        new IntegerLiteral(SourceInfo.NO_INFO, 10)))});", "-//      Block errorBlock = new Block(SourceInfo.NO_INFO, errorBody);", "+//      BracedBody errorBody = new BracedBody(SourceInfo.NONE, new BodyItemI[] {", "+//        new ExpressionStatement(SourceInfo.NONE, ", "+//                                new BitwiseOrExpression(SourceInfo.NONE, ", "+//                                                        new SimpleNameReference(SourceInfo.NONE, ", "+//                                                                                new Word(SourceInfo.NONE, \"i\")), ", "+//                                                        new IntegerLiteral(SourceInfo.NONE, 10)))});", "+//      Block errorBlock = new Block(SourceInfo.NONE, errorBody);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08f11d032d247544b0d7975395acb54f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "45f11437d24a95250c66e3a94437d7de4d6682c1", "commitAfterChange": "97bb3c70440590a053a3f2aff064ff2a0f94447e", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void testClassNameWComments() throws BadLocationException", "signatureAfterChange": "   public void testClassNameWComments() throws BadLocationException", "diff": ["-    String weird = \"package edu . rice\\n./*comment!*/cs.drjava; \" + ", "+    String weird = \"package edu . rice\\n./*comment!*/cs.drjava; \\n\" + ", "-      \" /* class Foo \" + ", "-      \" * class Bar \" + ", "-      \" interface Baz  \" + ", "-      \" */ \" + ", "+      \" /* class Foo \\n\" + ", "+      \" * class Bar \\n\" + ", "+      \" interface Baz \\n\" + ", "+      \" */ \\n\" + ", "+      \"//class Blah\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0906b122971209a63faff96f30a28606", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "27c256ec9281e0464172656b15ccb73506c1cbc1", "commitAfterChange": "efe2cdfa860877c37343dbc5d29e380b33344492", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "    public void appendSyntaxErrorResult(String message,                                       int startRow,                                       int startCol,                                       int endRow,                                       int endCol,                                       String styleName )", "signatureAfterChange": "    public void appendSyntaxErrorResult(String message, int startRow, int startCol,                                       int endRow, int endCol, String styleName)", "diff": ["-  public void appendSyntaxErrorResult(String message,", "-                                      int startRow,", "-                                      int startCol,", "-                                      int endRow,", "-                                      int endCol,", "-                                      String styleName )", "-  {", "+  public void appendSyntaxErrorResult(String message, int startRow, int startCol,", "+                                      int endRow, int endCol, String styleName) {", "-", "-", "-", "-", "-     insertText( getDocLength(), message + \"\\n\" , styleName );", "+      insertText(getDocLength(), message + \"\\n\" , styleName );", "-", "-    finally {", "-      //writeUnlock();", "-    }", "+//    finally {", "+//      writeUnlock();", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09126af720833b46b48dd99ae67032c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineEmpty.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["+    System.err.println(\"QuestionCurrLineEmpty\");", "-      return (endOfLine == firstNonWS);", "+      return (endOfLine == firstNonWS || doc.getText(firstNonWS, 1).equals(\"*\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "091bf6fe20f95cb5d7c55fc65f17efb3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    if (_model.getNumErrors() > 0) {", "+    if (_model.getCompilerModel().getNumErrors() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0935f7b53d471cc38aec3ceab6657e2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "3d71370f387f5ff990190106fcbfa93f8a159b9b", "commitAfterChange": "c7cf97829e412463c33fef76eb49ab99dfa7be2a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public FindResultsPanel(MainFrame frame, RegionManager<MovingDocumentRegion> regionManager, MovingDocumentRegion region, String title,                            String searchString, boolean searchAll, boolean searchSelectionOnly, boolean matchCase, boolean wholeWord,                            boolean noComments, boolean noTestCases, WeakReference<OpenDefinitionsDocument> doc,                            FindReplacePanel findReplace)", "signatureAfterChange": "   public FindResultsPanel(MainFrame frame, RegionManager<MovingDocumentRegion> regionManager, MovingDocumentRegion region, String title,                            String searchString, boolean searchAll, boolean searchSelectionOnly, boolean matchCase, boolean wholeWord,                            boolean noComments, boolean noTestCases, WeakReference<OpenDefinitionsDocument> doc,                            FindReplacePanel findReplace)", "diff": ["-    _regionManager.addListener(new RegionManagerListener<MovingDocumentRegion>() {      ", "+    getRegionManager().addListener(new RegionManagerListener<MovingDocumentRegion>() {      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "094c0c7c97101eaace845133e44a4e2d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 459, "methodNumberAfterChange": 359, "signatureBeforeChange": "    final private boolean jj_3R_120()", "signatureAfterChange": "    final private boolean jj_3_43()", "diff": ["+  final private boolean jj_3_43() {", "+    if (jj_3R_85()) return true;", "-  final private boolean jj_3R_120() {", "-    if (jj_3R_189()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(85)) {", "-    jj_scanpos = xsp;", "-    if (jj_scan_token(0)) return true;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09512298ea14deed0eaa3534dff1c6db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1ed74444e7bc359a9a1bceeac912e2a7a23c2add", "commitAfterChange": "7c92e58e6451902680f99442fe1b0e5b6ce56b46", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  \tOutputView getOutView()", "signatureAfterChange": "  \tOutputPane getOutPane()", "diff": ["-\tOutputView getOutView()", "+\tOutputPane getOutPane()", "-\t\t\treturn _outputView;", "+\t\t\treturn _outputPane;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "095ae1b0736d578c276b654bd1e76b6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _assertProcessedContents(String typed, String expected) throws EditDocumentException", "signatureAfterChange": "   protected void _assertProcessedContents(String typed, String expected) throws EditDocumentException", "diff": ["-    doc.reset(\"\");", "-    doc.insertText(doc.getLength(), typed, InteractionsDocument.DEFAULT_STYLE);", "+    doc.reset(\"This is a test\");", "+    doc.append(typed, InteractionsDocument.DEFAULT_STYLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0961c139f11a0fd4a61a6d8a4786578e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "c3f7f9d7c32c110a7370bfc2864b2e98a988bba6", "commitAfterChange": "9733ea984edf5c88dfc9e5dd3cc5f81a60e43f6c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public int getCurrentLine()", "signatureAfterChange": "   public int getCurrentLine()", "diff": ["-    if (_cachedNextLineLoc == -1 ){ initNextLineNum(); }", "+    // if (_cachedNextLineLoc == -1 ){ initNextLineNum(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "096b207864e240740c4223c2b34376ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 478, "methodNumberAfterChange": 472, "signatureBeforeChange": "    final private boolean jj_3R_150()", "signatureAfterChange": "    final private boolean jj_3R_152()", "diff": ["+", "+  final private boolean jj_3R_152() {", "+    if (jj_3R_104()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_190()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_150() {", "-    if (jj_3R_103()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_188()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0986fb48c3e31deba24b8d0ae05d1939", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Vector<HighlightStatus> getHighlightStatus(int start, int end)", "signatureAfterChange": "   public Vector<HighlightStatus> getHighlightStatus(int start, int end)", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0989fc57aad775c6449aa566918d0151", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testDebugPort() throws IOException", "signatureAfterChange": "   public void testDebugPort() throws IOException", "diff": ["-    assertTrue(\"generated debug port\", _model.getDebugPort() != -1);", "+    int port = _model.getDebugPort();", "+    assertTrue(\"generated debug port\", port != -1);", "+    ", "+    // Resetting after startup should change the port", "+    _model.setWaitingForFirstInterpreter(false);", "+    _model.interpreterResetting();", "+    int newPort = _model.getDebugPort();", "+    assertTrue(\"debug port should change\", newPort != port);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "098cb37fa25f7f4497aea81135ff57a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 436, "methodNumberAfterChange": 367, "signatureBeforeChange": "    final private boolean jj_3R_191()", "signatureAfterChange": "    final private boolean jj_3R_192()", "diff": ["-", "-  final private boolean jj_3R_191() {", "-    if (jj_3R_224()) return true;", "+  final private boolean jj_3R_192() {", "+    if (jj_3R_225()) return true;", "-      if (jj_3R_261()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_263()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09ad9edeeb553e9da4a928bb2df30bd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "117b8e1eefe7632ee450aed6c94318fa28bf80a4", "commitAfterChange": "67e7b92991e4e8f9e841666ccb236411356e233e", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException", "signatureAfterChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException", "diff": ["-    boolean active = df.isActive();", "+    //boolean active = false; //df.isActive();", "-    if (p1 != null || p2 != null || active)  ret += \"\\n\" + prefix + \"      \";", "+    if (p1 != null || p2 != null /*|| active */)  ret += \"\\n\" + prefix + \"      \";", "-    if (active) ret += \"(active)\";", "+    //if (active) ret += \"(active)\"; //Active document is first on list"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09c3c7c678cbe0b5b88f594d60021286", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SymbolData.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": "      public void testIsInnerClassOf()", "signatureAfterChange": "      public void testIsInnerClassOf()", "diff": ["-      outer2.setMav(new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, new String[] {\"static\"}));", "+      outer2.setMav(new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[] {\"static\"}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09cf6dfc122b9140b1c3d829cc12e300", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 584, "methodNumberAfterChange": 585, "signatureBeforeChange": "          boolean inDebugMode()", "signatureAfterChange": "          boolean inDebugMode()", "diff": ["-  boolean inDebugMode() {", "-    Debugger dm = _model.getDebugger();", "-    return (dm.isAvailable()) && dm.isReady() && (_debugPanel != null);", "-  }", "+  boolean inDebugMode() { return _showDebugger &&  _model.getDebugger().isReady(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d39c51a4050f18d4661bdff6903ea4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "df9cbdf4ec8cbcbc3942b966a48a15d33dcac7ed", "commitAfterChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public MainJVM(File wd)", "signatureAfterChange": "   public MainJVM(File wd) throws RemoteException", "diff": ["-  public MainJVM(File wd) {", "+  public MainJVM(File wd) throws RemoteException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09e67f1dd60b91cbcb775d310946da90", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e7660fffdb51451a3d4a61981945f6529addb874", "commitAfterChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "methodNumberBeforeChange": 242, "methodNumberAfterChange": 243, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["-        if (!System.getProperty(\"user.name\").equals(RemoteControlClient.getServerUser())) {", "+        if (!Utilities.TEST_MODE && !System.getProperty(\"user.name\").equals(RemoteControlClient.getServerUser())) {", "-    setUpDrJavaProperties();                                                ", "+    setUpDrJavaProperties();  ", "+    ", "+    DrJavaErrorHandler.setButton(_errorsButton);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09eb7ea900ede58f1e891dbb9394f4b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testOpenOne() throws BadLocationException", "signatureAfterChange": "   public void testOpenOne() throws BadLocationException", "diff": ["-                 doc.getDocument().getLength());", "+                 doc.getLength());", "-                 doc.getDocument().getText(0,f1_contents.length()));", "+                 doc.getText(0,f1_contents.length()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09ef0db479bd2ae0d50f08167d8c3a9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "1cb938b1998dc1cd68c3e4689c986e43001ea1ec", "commitAfterChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public void testPackageNameSimple()     throws BadLocationException, InvalidPackageException", "signatureAfterChange": "   public void testPackageNameSimple()     throws Exception", "diff": ["-    throws BadLocationException, InvalidPackageException", "+    throws Exception"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a01693da79614576b6a872b4605cefc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 605, "methodNumberAfterChange": 598, "signatureBeforeChange": "    final private boolean jj_3R_244()", "signatureAfterChange": "    final private boolean jj_3R_246()", "diff": ["+  final private boolean jj_3R_246() {", "+    if (jj_3R_259()) {", "+    if (jj_3R_260()) return true;", "-  final private boolean jj_3R_244() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_256()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_257()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a180dc2022d7579559b9fe30e8bc51a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b1a32460e7865e87ff1cef41f79110513af4e989", "commitAfterChange": "c76fe963c6a762c896b91a64faa06b83223b5217", "methodNumberBeforeChange": 522, "methodNumberAfterChange": 522, "signatureBeforeChange": "     public void caretUpdate(final CaretEvent ce)", "signatureAfterChange": "     public void caretUpdate(final CaretEvent ce)", "diff": ["-      DefinitionsDocument doc = _model.getActiveDocument().getDocument();", "+//      DefinitionsDocument doc = _model.getActiveDocument().getDocument();", "-        if (offset == _offset + 1 && doc.getText(_offset, 1).charAt(0) != '\\n') {", "+        if (offset == _offset + 1 && _currentDefDoc.getText(_offset, 1).charAt(0) != '\\n') {", "-          Element root = doc.getDefaultRootElement();", "+          Element root = _currentDefDoc.getDefaultRootElement();", "-//        doc.releaseReadLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a1e1ce7e7b327ca47a371f7dd109f2d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 367, "signatureBeforeChange": "    final private boolean jj_3R_332()", "signatureAfterChange": "    final private boolean jj_3R_333()", "diff": ["+", "+  final private boolean jj_3R_333() {", "+    if (jj_3R_339()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_354()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_332() {", "-    if (jj_3R_338()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_353()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a2f2410951a96548dcc9144d90eae90", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void setCaretPosition(int pos)", "signatureAfterChange": "   public void setCaretPosition(int pos)", "diff": ["-    _doc.getDocument().setCurrentLocation(pos);", "+    System.out.flush();", "+    _doc.syncCurrentLocationWithDefinitions(pos);", "+//    _doc.getDocument().setCurrentLocation(pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a497ef95d54f1d9d973e8ecfe9304c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "95027e22cc0cbfaaf79d5f202e24f2763a52eb00", "commitAfterChange": "acb61ff7586f62b61a15637f6576fc3aff67ead1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public FindResult findNext()", "signatureAfterChange": "   public FindResult findNext()", "diff": ["-      int foundOffset = findSpace.indexOf(_findWord);", "+      int foundOffset;", "+      if (_matchCase) ", "+        foundOffset = findSpace.indexOf(_findWord);", "+      else", "+        foundOffset = findSpace.toLowerCase().indexOf(_findWord.toLowerCase());", "-        foundOffset = findSpace.indexOf(_findWord);", "+        if (_matchCase) ", "+          foundOffset = findSpace.indexOf(_findWord);", "+        else", "+          foundOffset = findSpace.toLowerCase().indexOf(_findWord.toLowerCase());", "-      // flag the return value so that they can tell that we had to wrap the file to determine the info.", "+      // flag the return value so that they can tell that we had to wrap ", "+      // the file to determine the info."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a55086d6735c92609c13b88203d42d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public String getNameOfSelectedTopLevelGroup() throws GroupNotSelectedException", "signatureAfterChange": "   public String getNameOfSelectedTopLevelGroup() throws GroupNotSelectedException", "diff": ["-  /** Returns the name of the top level group that the selected item descends from. */", "+  /** Returns the name of the top level group that the selected item descends from.  Only runs in event thread. */", "-    synchronized (_model) {", "+//    synchronized (_model) {", "-    }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a5562f29e36006f7b952597dbd9f712", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 388, "methodNumberAfterChange": 497, "signatureBeforeChange": "    final private boolean jj_3R_146()", "signatureAfterChange": "    final private boolean jj_3R_133()", "diff": ["-", "-  final private boolean jj_3R_146() {", "+  final private boolean jj_3R_133() {", "-    if (jj_3R_107()) return true;", "+    if (jj_3R_98()) return true;", "-    if (jj_3R_195()) return true;", "+    if (jj_3R_177()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a5c1e9089b61a9d2a523230a14812bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/VariableData.java", "commitBeforeChange": "d63224548fc8865b0ab459659b530c0d39d21fc7", "commitAfterChange": "d8eee91536a378507eadfac2f106d06ff2703bff", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public boolean equals(Object obj)", "signatureAfterChange": "   public boolean equals(Object obj)", "diff": ["-      System.err.println(\"VariableData.equals: enclosingData failure\");", "+//      System.err.println(\"VariableData.equals: enclosingData failure\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a694ac1ef44ca6a2d63c566abdca080", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 308, "methodNumberAfterChange": 825, "signatureBeforeChange": "    final private boolean jj_3R_90()", "signatureAfterChange": "    final private boolean jj_3R_92()", "diff": ["-", "-  final private boolean jj_3R_90() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(32)) jj_scanpos = xsp;", "-    if (jj_3R_80()) return true;", "-    if (jj_3R_145()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_92() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(32)) jj_scanpos = xsp;", "+    if (jj_3R_83()) return true;", "+    if (jj_3R_148()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a74eab6f69d7e6ba0cf60639081082f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9d671cad5f849049059b2e199aea7279dd398525", "commitAfterChange": "ef7e8ed674f3435dc8cfe861d137f1cab241f5c2", "methodNumberBeforeChange": 686, "methodNumberAfterChange": 688, "signatureBeforeChange": "          public void interactionEnded()", "signatureAfterChange": "          public void interactionEnded()", "diff": ["+      _runAppletAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a7aac8f4d1a661a49d7611fe36b3243", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "    public void testFindMatchWithCaretInMiddleBackwards() throws BadLocationException", "signatureAfterChange": "    public void testFindMatchWithCaretInMiddleBackwards() throws BadLocationException", "diff": ["-    _testFindNextSucceeds(_frm, CONTINUE, 8, 0);", "-    _testFindNextSucceeds(_frm, CONTINUE, 8, 6);", "+    _testFindNextSucceeds(_frm, 8, 0);", "+    _testFindNextSucceeds(_frm, 8, 6);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a83bd1b3f5451a31da4ccf6eccb6542", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 63, "signatureBeforeChange": "   private void _defineVariable(ThreadReference suspendedThreadRef,                                 ObjectReference debugInterpreter,                                String name, Value val)      throws InvalidTypeException, AbsentInformationException, IncompatibleThreadStateException,     ClassNotLoadedException, InvocationException", "signatureAfterChange": "   private void _defineVariable(ThreadReference suspendedThreadRef,                                 ObjectReference debugInterpreter,                                String name, Value val)      throws InvalidTypeException, AbsentInformationException, IncompatibleThreadStateException,     ClassNotLoadedException, InvocationException, DebugException", "diff": ["-    ClassNotLoadedException, InvocationException ", "+    ClassNotLoadedException, InvocationException, DebugException "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a88595140b78fdeb72ba36ebb6890d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "3bfda0ffd8a22eda2f2daab913b510305e1ef801", "commitAfterChange": "02d5c825c13aaa4caad6b7e4e89ccbdbfdc16c9f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public AbstractGlobalModel()", "signatureAfterChange": "   public AbstractGlobalModel()", "diff": ["-    _consoleDocAdapter = new InteractionsDJDocument();", "+    _consoleDocAdapter = new InteractionsDJDocument(_notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a9c3e88799cd03a3e19b3092bce2456", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 428, "methodNumberAfterChange": 399, "signatureBeforeChange": "    final private boolean jj_3R_324()", "signatureAfterChange": "    final private boolean jj_3R_335()", "diff": ["+", "+  final private boolean jj_3R_335() {", "+    if (jj_3R_99()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_461()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_324() {", "-    if (jj_3R_96()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_446()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aa506c9efe61dfdff196036be83d48c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "4427ad83551d20b6933cd5a6acd403abdb7b0d92", "commitAfterChange": "8e9d6d4a3458f4fb8d197d118149328dfb2ae150", "methodNumberBeforeChange": 413, "methodNumberAfterChange": 444, "signatureBeforeChange": "    final private boolean jj_3_22()", "signatureAfterChange": "    final private boolean jj_3_22()", "diff": ["-", "-  final private boolean jj_3_22() {", "-    if (jj_scan_token(LT)) return true;", "-    return false;", "-  }", "+  final private boolean jj_3_22() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aadf25ff0f433f1ebd106549f024b7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "aa7f147d71330aa12463dfbc7a233e3ed25560e6", "commitAfterChange": "cfaac02e8e33f506b730c3f8ce96676d16b8f705", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": "   void moveToEnd()", "signatureAfterChange": "   void moveToEnd()", "diff": ["-    _pane.setCaretPosition(_doc.getDocLength());", "+    moveTo(_doc.getDocLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ab2dface600986e925610c7d214cd47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 456, "methodNumberAfterChange": 452, "signatureBeforeChange": "      private void _compileAll()", "signatureAfterChange": "      private void _compileAll()", "diff": ["-//    new Thread(\"Compile All\") {", "-//      public void run() {", "-    finally { hourglassOff();}", "-//      }", "-//    }.start();", "-//    update(getGraphics()); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ab3d106529237453f364121b87b732d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/FontOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testApplyThenResetDefault()", "signatureAfterChange": "    public void testApplyThenResetDefault()", "diff": ["+    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();  // preceding command creates event queue task"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0abb2b5a6f4df8ee48bcab1b494978cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 422, "methodNumberAfterChange": 393, "signatureBeforeChange": "    final private boolean jj_3R_436()", "signatureAfterChange": "    final private boolean jj_3R_451()", "diff": ["+", "+  final private boolean jj_3R_451() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_462()) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(24)) return true;", "+    }", "+    if (jj_scan_token(COLON)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_463()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_436() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_447()) {", "-    jj_scanpos = xsp;", "-    if (jj_scan_token(24)) return true;", "-    }", "-    if (jj_scan_token(COLON)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_448()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0abdb2bf64d3d7c58f004d66da9ddfd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testGenericReferenceTypes15()", "signatureAfterChange": "   public void testGenericReferenceTypes15()", "diff": ["-    TigerUtilities.setTigerEnabled(true);", "+    setTigerEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0abdb5756fbfab10a9250fbd2145a34b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "76c0b2960b62020d46b810955623e0af759eee20", "commitAfterChange": "936042cad9bfa0086510cc58a96357306371fb07", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testCompilePackageAsField2() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompilePackageAsField2() throws BadLocationException, IOException, InterruptedException", "diff": ["+    debug.logStart();", "+    ", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ad3fee25a20ebdea367aa7338ee84ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "930b1ef6cc279650a085c7c6499b1b57cb240018", "commitAfterChange": "73b3ce3968c13472938fea3d36b496150c938bd2", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "   private void _setDebugMenuItemsEnabled(boolean enabled)", "signatureAfterChange": "   private void _setDebugMenuItemsEnabled(boolean enabled)", "diff": ["-    //_clearAllBreakpointsMenuItem.setEnabled(enabled);", "+    _clearAllBreakpointsMenuItem.setEnabled(enabled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ad4bfc0173d21dc612c9fc9c106d5c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-eclipse/edu/rice/cs/drjava/model/compiler/EclipseCompiler.java", "commitBeforeChange": "8e720afa329dc77cc45a6aba8a5a211e38ce857f", "commitAfterChange": "8a50a7d4180dfbf8ce4f8b3b2ddf43887adf7c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private Iterable<String> _getOptions(List<? extends File> classPath, List<? extends File> sourcePath, File destination,                                         List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "signatureAfterChange": "      private Iterable<String> _getOptions(List<? extends File> classPath, List<? extends File> sourcePath, File destination,                                         List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "diff": ["-    System.err.println(options);", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ae6278c2d72091c2f94a240339307e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 386, "methodNumberAfterChange": 543, "signatureBeforeChange": "    final private boolean jj_3R_348()", "signatureAfterChange": "    final private boolean jj_3R_480()", "diff": ["-", "-  final private boolean jj_3R_348() {", "-    if (jj_3R_101()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_473()) jj_scanpos = xsp;", "-    return false;", "-  }", "+  final private boolean jj_3R_480() {", "+    if (jj_3R_102()) return true;", "+    if (jj_3R_485()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b1fc9c77d8c9e8e42d1b0bbaa79027d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 569, "methodNumberAfterChange": 577, "signatureBeforeChange": "      public DefinitionsPane getDefPaneGivenODD(OpenDefinitionsDocument doc)", "signatureAfterChange": "      public DefinitionsPane getDefPaneGivenODD(OpenDefinitionsDocument doc)", "diff": ["-      if (_model.getOpenDefinitionsDocuments().contains(doc)) scroll = _createDefScrollPane(doc);", "-      else throw new UnexpectedException(new Exception(\"Attempted to get DefinitionsPane for a closed document\")); ", "+      throw new UnexpectedException(new Exception(\"Attempted to get DefinitionsPane for a closed document\")); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b232586b397e759f393a69857f1bcbb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/HookTypeName.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public HookTypeName(ReferenceTypeName type, boolean _supered, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public HookTypeName(ReferenceTypeName type, boolean _supered, String fn, int bl, int bc, int el, int ec)", "diff": ["-    super(\"?\", fn, bl, bc, el, ec);", "+    super(Arrays.asList(new Identifier(\"?\")), fn, bl, bc, el, ec);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b391132b633930db6f24e7b9811a9b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "     public boolean isUntitled()", "signatureAfterChange": "     public boolean isUntitled()", "diff": ["-      return _doc.isUntitled();", "+      return getDocument().isUntitled();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b5613b699fde7bc7ed28f30e538268d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 792, "methodNumberAfterChange": 693, "signatureBeforeChange": "    final private boolean jj_3R_304()", "signatureAfterChange": "    final private boolean jj_3R_308()", "diff": ["-", "-  final private boolean jj_3R_304() {", "-    if (jj_scan_token(SYNCHRONIZED)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_112()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_175()) return true;", "+", "+  final private boolean jj_3R_308() {", "+    if (jj_scan_token(SYNCHRONIZED)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_115()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_178()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b6d1b1984b2dcfb956b000e50ab7739", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentFileManagerTest.java", "commitBeforeChange": "ce99ad77121aabff91f9c6fba762f853ca2a34f5", "commitAfterChange": "c7e182b04aa52ae1423064c733cc8609017cc26d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected File tempFile() throws IOException", "signatureAfterChange": "   protected File tempFile() throws IOException", "diff": ["-    return File.createTempFile(\"DrJava-test\", \".java\", _tempDir);", "+    return File.createTempFile(\"DrJava-test\", \".java\", _tempDir).getCanonicalFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b6f584871e6c9bd23c78fdd6dc2a1b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 531, "methodNumberAfterChange": 443, "signatureBeforeChange": "    final private boolean jj_3R_526()", "signatureAfterChange": "    final private boolean jj_3R_527()", "diff": ["+", "+  final private boolean jj_3R_527() {", "+    if (jj_3R_544()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_562()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_526() {", "-    if (jj_3R_543()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_561()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b759ab4f86776dbd77e11724d5b5623", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 507, "methodNumberAfterChange": 510, "signatureBeforeChange": "    final private boolean jj_3R_255()", "signatureAfterChange": "    final private boolean jj_3R_256()", "diff": ["-  final private boolean jj_3R_255() {", "+  final private boolean jj_3R_256() {", "-    if (jj_3R_167()) return true;", "+    if (jj_3R_168()) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_467()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_468()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_470()) jj_scanpos = xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_471()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b7e670095631bed16a3828305cfb94f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "          public void testForInitializedVariableDeclaratorDoFirst()", "signatureAfterChange": "          public void testForInitializedVariableDeclaratorDoFirst()", "diff": ["-        new InitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO,", "-                                          new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"),", "-                                          new Word(JExprParser.NO_SOURCE_INFO, \"i\"),", "-                                          new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5));", "+        new InitializedVariableDeclarator(SourceInfo.NO_INFO,", "+                                          new PrimitiveType(SourceInfo.NO_INFO, \"int\"),", "+                                          new Word(SourceInfo.NO_INFO, \"i\"),", "+                                          new IntegerLiteral(SourceInfo.NO_INFO, 5));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b93335600e4498a817dac6ffb15e833", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e008a871c73a2d17613177c46b840738a811d430", "commitAfterChange": "d02285e9310b790e24e1b715b3bffce44fd78532", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 130, "signatureBeforeChange": "      public void interactionEnded()", "signatureAfterChange": "      public void interactionEnded()", "diff": ["-      _abortInteractionAction.setEnabled(false);", "+      //_abortInteractionAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b96de6a76c438ddcdf9a474d8f67572", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   private void _move(int dist)", "signatureAfterChange": "   private void _move(int dist)", "diff": ["-      _currentLocation = _currentLocation + dist;", "+      _currentLocation = newLocation;", "-    else throw new IllegalArgumentException(\"AbstractDJDocument.move(\" + dist + ", "-                                            \") places the cursor at \" + newLocation + \" which is out of range\");", "+    else throw new IllegalArgumentException(\"AbstractDJDocument.move(\" + dist + \") places the cursor at \" + ", "+                                            newLocation + \" which is out of range\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b9d12ef89b31fbdc83fd67af7473da8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecurUtil.java", "commitBeforeChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "commitAfterChange": "34d03e4ba66c612a034017381b72d822fe9c84d0", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public static String arrayToString(short[] array, ArrayStringMode stringMode)", "signatureAfterChange": "   public static String arrayToString(short[] array, ArrayStringMode stringMode)", "diff": ["-          else { result.append(\", \"); }", "+          else { result.append(stringMode.delimiter()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0baa7c58469ad303dd1261609ff69ac4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void resetFlags()", "signatureAfterChange": "      public void resetFlags()", "diff": ["-      outBuf = null;", "-      errBuf = null;", "-      returnBuf = null;", "-      exceptionMsgBuf = null;", "-      voidReturnFlag = false;", "+      _done.reset();", "+      _outBuf = \"\";", "+      _errBuf = \"\";", "+      _returnBuf = null;", "+      _exceptionMsgBuf = null;", "+      _voidReturnFlag = false;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bb36452d54555a9c2058f4f2a4ba39d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "commitAfterChange": "35da9b77b7d75aca3d6277e27e3ba3dc86f3eaa9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "signatureAfterChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "diff": ["-    // throwErrorHuh();", "-    try {", "-      text = getText(original.getLocation(), original.getLength());", "-    }", "-    catch (BadLocationException e) {", "-      e.printStackTrace();", "-      throw new RuntimeException(e.toString());", "-    }", "+    try { text = getText(original.getLocation(), original.getLength()); }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "-    // Because this text is not quoted or commented, we can use the simpler", "-    // tokenizer StringTokenizer.", "-    // We have to return delimiters as tokens so we can keep track of positions", "-    // in the original string.", "+    // Because this text is not quoted or commented, we can use the simpler tokenizer StringTokenizer. We have ", "+    // to return delimiters as tokens so we can keep track of positions in the original string.", "-    // start and length of the text that has not yet been put back into the", "-    // vector.", "+    // start and length of the text that has not yet been put back into the vector.", "-    // Index where we are in the vector. It's the location we would insert", "-    // new things into.", "+    // Index where we are in the vector. It's the location we would insert new things into."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0be31c23cc0a7446ee81c77e43978156", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 702, "methodNumberAfterChange": 594, "signatureBeforeChange": "    final private boolean jj_3R_530()", "signatureAfterChange": "    final private boolean jj_3R_532()", "diff": ["+  final private boolean jj_3R_532() {", "+    if (jj_3R_547()) return true;", "-  final private boolean jj_3R_530() {", "-    if (jj_3R_544()) {", "-    if (jj_3R_545()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bea71df0a7f833d606c3ea7598323e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "   public boolean posInParenPhrase(int pos)", "signatureAfterChange": "   public boolean posInParenPhrase(int pos)", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bf0f73a27098d8590673af10e84402b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "de5d6cb8095b8316a5027b98971107ba8d8608ac", "commitAfterChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void assertInteractionsDoesNotContain(String text)     throws BadLocationException", "signatureAfterChange": "   protected void assertInteractionsDoesNotContain(String text)     throws BadLocationException", "diff": ["+   */", "+  protected void assertInteractionsDoesNotContain(String text)", "+    throws BadLocationException{", "+    _assertInteractionContainsHelper(text, false);", "+  }", "-  ", "-  private void assertInteractionsDoesNotContain(String text)", "-    throws BadLocationException{", "-    assertInteractionHelper(text,false);", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bf382336c2ad9a575bee8b56127f060", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentFileManagerTest.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testShrinksToMaxSize() throws IOException", "signatureAfterChange": "   public void testShrinksToMaxSize() throws IOException", "diff": ["-    assertEquals(\"text of most-recent file\", FOO_TEXT, FileOps.readFileAsString(vector.get(0)));", "-    assertEquals(\"text of second-most recent file\", BAR_TEXT, FileOps.readFileAsString(vector.get(1)));", "+    assertEquals(\"text of most-recent file\", FOO_TEXT, IOUtil.toString(vector.get(0)));", "+    assertEquals(\"text of second-most recent file\", BAR_TEXT, IOUtil.toString(vector.get(1)));", "-    assertEquals(\"text of recent file\", FOO_TEXT, FileOps.readFileAsString(vector.get(0)));", "+    assertEquals(\"text of recent file\", FOO_TEXT, IOUtil.toString(vector.get(0)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bfa011b793f739d008bea9d35e41c2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5122b57870a06ce192633fae172ea410d4b7581b", "commitAfterChange": "8cb074150c1494bfc3b263a6dfa5f3cba6209da2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    _model.newFile();", "-    _definitionsDocuments = _model.getDefinitionsDocuments();", "+    OpenDefinitionsDocument doc = _model.newFile();", "+    _currentDocIndex = 0;", "+    _definitionsDocs = new DefaultListModel();", "+    _definitionsDocs.addElement(doc);", "+", "-    _definitionsPane = new DefinitionsPane(this, _model, _definitionsDocuments[0]);", "+", "+    // DefinitionsPane", "+    _defScrollPanes = new LinkedList();", "+    JScrollPane defScroll = _createDefScrollPane(doc);", "+    _currentDefPane = (DefinitionsPane) defScroll.getViewport().getView();", "+", "-    setBounds(0, 0, 700, 700);", "-    setSize(700, 700);", "+    _setUpDocumentSelector();", "+    setBounds(0, 0, GUI_WIDTH, GUI_HEIGHT);", "+    setSize(GUI_WIDTH, GUI_HEIGHT);", "-    updateFileTitle(\"Untitled\");", "+    updateFileTitle();", "-    _findReplace = new FindReplaceDialog(this, _definitionsPane);", "+    _docList.setFont(new Font(\"Monospaced\", 0, 10));", "+    _findReplace = new FindReplaceDialog(this, _currentDefPane);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bff97ee56c212087aeefa0e832f9b4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "11a167d5b0a97e55aef4d62ed18d4da71e30b762", "commitAfterChange": "a32847752bc1c4d9a9c65da4d91d56e3d8a61fa6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testConstructNoErrors()", "signatureAfterChange": "   public void testConstructNoErrors()", "diff": ["+    assertTrue(\"hasOnlyWarnings should return true.\", model.hasOnlyWarnings());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c2c9bd301a282be6e6aca7651cc9ea3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public void optionChanged(OptionEvent<File> oce)", "signatureAfterChange": "          public void optionChanged(OptionEvent<File> oce)", "diff": ["-      CompilerInterface[] availCompilers = _model.getAvailableCompilers();", "+      CompilerInterface[] availCompilers = getModel().getAvailableCompilers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c67912bedb32fbae442a73f5dcc5089", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "commitAfterChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "      private void _showDebuggerPanel()", "signatureAfterChange": "      private void _showDebuggerPanel()", "diff": ["-    //System.out.println(\"split max: \" + _debugSplitPane.getMaximumDividerLocation());", "-    //System.out.println(\"debug min: \" + _debugPanel.getMinimumSize().getHeight());", "-    //_debugSplitPane.setDividerLocation(_debugSplitPane.getMaximumDividerLocation() -", "-    //                                   _debugPanel.getMinimumSize().getHeight());", "-    ", "-    /**", "-    _debugSplitPane.setDividerSize(SPLIT_DIVIDER_SIZE);", "-    int height = _debugSplitPane.getTopComponent().getHeight();", "-    // int debugHeight = _debugPanel.getPreferredSize().getHeight();", "-    _debugSplitPane.setDividerLocation(height - 150);  // height-debugHeight", "-    */", "+    _debugPanel.updateData(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c9ad8cdcc1a5df4cb61924bd129a8e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 376, "methodNumberAfterChange": 379, "signatureBeforeChange": "    final private boolean jj_3R_153()", "signatureAfterChange": "    final private boolean jj_3R_154()", "diff": ["-  final private boolean jj_3R_153() {", "-    if (jj_3R_105()) return true;", "+  final private boolean jj_3R_154() {", "+    if (jj_3R_106()) return true;", "-      if (jj_3R_191()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_192()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ca00618fa9d388f23d4eb3bfa593bcd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "d4622e1c95180ad4b8f3b6eca04eb1a3a2eca2e9", "commitAfterChange": "07df9e8611c650306e145606873296ce77e32d2e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void remove(int offset, int len) throws BadLocationException", "signatureAfterChange": "    public void remove(int offset, int len) throws BadLocationException", "diff": ["-    //_reduced.move(locationChange);", "-    //_reduced.delete(len);", "-", "-    _currentLocation = offset;", "+\t\t_currentLocation = offset;", "+    _reduced.move(locationChange);", "+    _reduced.delete(len);", "+\t\t//else the absolute location stays the same.", "+\t\t//adjust the current location if delete works"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cafe795636907db8ada38bda074884a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 336, "methodNumberAfterChange": 319, "signatureBeforeChange": "    final private boolean jj_3R_337()", "signatureAfterChange": "    final private boolean jj_3R_268()", "diff": ["-", "-  final private boolean jj_3R_337() {", "+  final private boolean jj_3R_268() {", "-    if (jj_3R_107()) return true;", "+    if (jj_3R_110()) return true;", "-    if (jj_3R_162()) return true;", "+    if (jj_3R_166()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cb275567ef588712f15d27bdc161849", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 577, "methodNumberAfterChange": 599, "signatureBeforeChange": "    final private boolean jj_3R_349()", "signatureAfterChange": "    final private boolean jj_3R_171()", "diff": ["-  final private boolean jj_3R_349() {", "-    if (jj_3R_357()) return true;", "-    if (jj_3R_370()) jj_scanpos = xsp;", "+  final private boolean jj_3R_171() {", "+    if (jj_3R_232()) return true;", "+    if (jj_3R_270()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cc9be5266c20d09554953cdadc6e61c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 650, "methodNumberAfterChange": 643, "signatureBeforeChange": "    final private boolean jj_3R_160()", "signatureAfterChange": "    final private boolean jj_3R_165()", "diff": ["-  final private boolean jj_3R_160() {", "-    if (jj_scan_token(SWITCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_94()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(LBRACE)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_532()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(RBRACE)) return true;", "+  final private boolean jj_3R_165() {", "+    if (jj_scan_token(SWITCH)) return true;", "+    if (jj_3R_97()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(LBRACE)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_554()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(RBRACE)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cd7ef522d2703a4fb6d1ffdd03ff9dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/ScrollableDialog.java", "commitBeforeChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "commitAfterChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void show()", "signatureAfterChange": "   public void show()", "diff": ["+    _textArea.setCaretPosition(0);", "+    _textScroll.getHorizontalScrollBar().setValue(_textScroll.getHorizontalScrollBar().getMinimum());", "+    _textScroll.getVerticalScrollBar().setValue(_textScroll.getVerticalScrollBar().getMinimum());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cd91d93aeae6fb73e27ae3695038320", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testQuoteBreaksComment()", "signatureAfterChange": "   public void testQuoteBreaksComment()", "diff": ["-    assertEquals(\"#1.1\", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());", "+    assertEquals(\"#1.1\", INSIDE_BLOCK_COMMENT, model1._getStateAtCurrent());", "-    assertEquals(\"#2.0\", INSIDE_DOUBLE_QUOTE, model1.getStateAtCurrent());", "+    assertEquals(\"#2.0\", INSIDE_DOUBLE_QUOTE, model1._getStateAtCurrent());", "-    assertEquals(\"#5.0\", FREE, model1.getStateAtCurrent());", "+    assertEquals(\"#5.0\", FREE, model1._getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cf4f805f6cb5098903400b66ef2910e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "f1f97edd57f558d6d34abcd1fe039afc22f7a202", "commitAfterChange": "fc098bf0e8c385557d32ed3c183745582612add6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void removeBreakpoint(Breakpoint breakpoint)", "signatureAfterChange": "   public synchronized void removeBreakpoint(Breakpoint breakpoint)", "diff": ["-  public void removeBreakpoint(Breakpoint breakpoint) {", "+  public synchronized void removeBreakpoint(Breakpoint breakpoint) {", "-    _breakpoints.remove(breakpoint.getRequest());", "+    if (breakpoint.getRequest() != null) {", "+      _breakpoints.remove(breakpoint.getRequest());", "+      _eventManager.deleteEventRequest(breakpoint.getRequest());", "+    }", "+    else {", "+      _pendingRequestManager.removePendingRequest(breakpoint);", "+    }", "-    _eventManager.deleteEventRequest(breakpoint.getRequest());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cffb2b9bbcdd77396c849a554df4ad6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b0d972d74202b06a8aec19804a46939a0aac3bf3", "commitAfterChange": "f81eb3cdab335666760ab0cb868fe3567723e9df", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+    // Ensure that DefinitionsPane uses the correct EditorKit!", "+    //   This has to be stored as a static field on DefinitionsPane because", "+    //   the JEditorPane constructor uses it before we get a chance to", "+    //   assign it to an instance field...", "+    DefinitionsPane.setEditorKit(_model.getEditorKit());", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d0613fb89fe7a651f4f613832db8f78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "6c0e9b1e9bc7e7b8b80952bb1c70ac168c391b7e", "commitAfterChange": "de9a74b95459b3c3644152e88e6c7584955956bf", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 70, "signatureBeforeChange": "      public void mousePressed(MouseEvent e)", "signatureAfterChange": "      public void mousePressed(MouseEvent e)", "diff": ["-    public void mousePressed(MouseEvent e) {", "-      if (e.isPopupTrigger()) {", "-        int row = _table.rowAtPoint(e.getPoint());", "-        _table.setRowSelectionInterval(row, row);", "-        _showPopup(e);", "-      }", "-      else if (SwingUtilities.isLeftMouseButton(e) && e.getClickCount() == 2) {", "-        _action();", "-      }", "+", "+    public void mousePressed(MouseEvent e) {", "+      super.mousePressed(e);", "+", "+      if (SwingUtilities.isLeftMouseButton(e) && e.getClickCount() == 2) {", "+        _action();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d10e36ca467024a4c340e64407596a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testGetStateAtCurrent()", "signatureAfterChange": "   public void testGetStateAtCurrent()", "diff": ["-    assertEquals(\"#0.0\", FREE, model1.getStateAtCurrent());", "-    assertEquals(\"#0.1\", FREE, model1.getStateAtCurrent());", "+    assertEquals(\"#0.0\", FREE, model1._getStateAtCurrent());", "+    assertEquals(\"#0.1\", FREE, model1._getStateAtCurrent());", "-    assertEquals(\"#2.1\", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());", "+    assertEquals(\"#2.1\", INSIDE_LINE_COMMENT, model1._getStateAtCurrent());", "-    assertEquals(\"#3.1\", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());", "+    assertEquals(\"#3.1\", INSIDE_LINE_COMMENT, model1._getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d49eacf6114192598e28397e1f4d584", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "f7063fb4e23916d23eda77d98e21895bea5ea714", "commitAfterChange": "c10d025477127381eef7c7225605ca76dbc00512", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 24, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["+      _replaceFindPreviousAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d61ed3b4749475cb3a0b77315ebd576", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4dc5ace86e9b2c575f2b09ebb783f4d8d9db5e9a", "commitAfterChange": "798fcd5fdec1efc6698cb1c49cd62bdab41daffc", "methodNumberBeforeChange": 720, "methodNumberAfterChange": 709, "signatureBeforeChange": "    final private boolean jj_3_16()", "signatureAfterChange": "    final private boolean jj_3_16()", "diff": ["-  final private boolean jj_3_16() {", "-    if (jj_3R_89()) return true;", "+  final private boolean jj_3_16() {", "+    if (jj_3R_89()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d730abedb50401c01b3b5bd078ef9ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "04d7824a20eb03ad17793ba3198be21442313bdc", "commitAfterChange": "b1c7871d21e78d9b00bec5144dc21cdc37950342", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void removeRegions(final OpenDefinitionsDocument odd)", "signatureAfterChange": "   public void removeRegions(final OpenDefinitionsDocument odd)", "diff": ["-    DefaultMutableTreeNode docNode = _regionManager.getTreeNode(odd);", "+    DefaultMutableTreeNode docNode = _docToTreeNode.get(odd);", "+    _regionManager.removeRegions(odd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d7fb4c358f8be0116617cc5e86426a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 559, "methodNumberAfterChange": 562, "signatureBeforeChange": "    final private boolean jj_3R_142()", "signatureAfterChange": "    final private boolean jj_3R_143()", "diff": ["-  final private boolean jj_3R_142() {", "+  final private boolean jj_3R_143() {", "-    if (jj_3R_387()) jj_scanpos = xsp;", "-    if (jj_3R_210()) return true;", "-    if (jj_3R_90()) return true;", "-    xsp = jj_scanpos;", "+    if (jj_3R_211()) return true;", "+    if (jj_3R_91()) return true;", "+    xsp = jj_scanpos;", "+    if (jj_3R_389()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d9bd392265416c1a736f3630a8d6517", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/StringOptionTest.java", "commitBeforeChange": "ab56c47a9f6c097d16c8c38565dec5edb6fb4d6f", "commitAfterChange": "0d80b47fa71022c1d579ad193bcaa14dd927885e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testFormat()", "signatureAfterChange": "      public void testFormat()", "diff": ["-    StringOption so = new StringOption(\"classpath\");", "+    StringOption so = new StringOption(\"classpath\",null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0da1c5954e6c48cc1ab4091dcf463961", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void runTestSequence() throws Exception", "signatureAfterChange": "      public void runTestSequence() throws Exception", "diff": ["-      invokeSlave(new String[] {\"-Djava.system.class.loader=edu.rice.cs.util.newjvm.CustomSystemClassLoader\"}, FileOption.NULL_FILE);           ", "+      invokeSlave(new String[0], FileOption.NULL_FILE);           ", "-      ((SlaveI)getSlave()).startLetterTest();", "+      ((TestSlaveRemote)getSlave()).startLetterTest();", "+      ", "+      _log.log(\"letter test started\");", "+      ", "+      _log.log(\"letter test finished\");", "-        int value = ((SlaveI) getSlave()).getNumber();", "+        int value = ((TestSlaveRemote) getSlave()).getNumber();", "+      ", "+      _log.log(\"number test finished\");", "+      _log.log(\"Ran runTestSequence\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0da64f044317bfe3288075160057f43d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "a24082414064ecb42431a2e612770e1ab3e9fefa", "commitAfterChange": "b2a145d8d3ea1ad947e0937f542b0780baf31d45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void typeCheck(Iterable<CompilationUnit> sources, Iterable<? extends File> cp) throws InterpreterException", "signatureAfterChange": "      private void typeCheck(Iterable<CompilationUnit> sources, Iterable<? extends File> cp) throws InterpreterException", "diff": ["+    debug.logStart(\"creating TreeLibrary\");", "+    debug.logEnd(\"creating TreeLibrary\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ddfd6cb7bfb7fb639f690d919114e6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "65d59a6eb5c83a25b9e6bfdf698fd61ca6d2f695", "commitAfterChange": "28f2b1ea23c948581f63408215b04510a86e87f3", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 68, "signatureBeforeChange": "   public File[] getOpenFiles() throws OperationCanceledException", "signatureAfterChange": "   public File[] getOpenFiles(JFileChooser jfc) throws OperationCanceledException", "diff": ["-  public File[] getOpenFiles() throws OperationCanceledException {", "+  public File[] getOpenFiles(JFileChooser jfc) throws OperationCanceledException {", "-    File selection = _openChooser.getSelectedFile();", "+    File selection = jfc.getSelectedFile();//_openChooser.getSelectedFile();", "-    int rc = _openChooser.showOpenDialog(this);", "-    return getChosenFiles(_openChooser, rc);", "+    int rc = jfc.showOpenDialog(this);//_openChooser.showOpenDialog(this);", "+    return getChosenFiles(jfc, rc);//_openChooser, rc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e0590c90bafed892716e60cab79536f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorOptionComponent.java", "commitBeforeChange": "27c256ec9281e0464172656b15ccb73506c1cbc1", "commitAfterChange": "efe2cdfa860877c37343dbc5d29e380b33344492", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void setValue(Vector<File> value)", "signatureAfterChange": "   public void setValue(Vector<T> value)", "diff": ["-  public void setValue(Vector<File> value) {", "-    File[] array = new File[value.size()];", "-    value.copyInto(array);", "+  public void setValue(Vector<T> value) {", "-    for (int i = 0; i < array.length; i++) {", "-      _listModel.addElement(array[i]);", "+    for (int i = 0; i < value.size(); i++) {", "+      _listModel.addElement(value.elementAt(i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e1375ddf1ab9612ed5549bb30a576f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorKeyStrokeOptionComponent.java", "commitBeforeChange": "893c07e82b5df8a5ee457745ae613e9f4f3395b7", "commitAfterChange": "e7565df68be50967f0383d34df0b493ae42a4e83", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public VectorKeyStrokeOptionComponent (VectorOption<KeyStroke> opt, String text, SwingFrame parent)", "signatureAfterChange": "    public VectorKeyStrokeOptionComponent (VectorOption<KeyStroke> opt, String text, SwingFrame parent)", "diff": ["-  ", "-    this(opt, text, parent, false);", "+    this(opt, text, parent, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e1b0398fb9a2c620de0837fc80125ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public int getLineStartPos(final int pos)", "signatureAfterChange": "   public int getLineStartPos(final int pos)", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e3592c176bdc79a0608338488eeafee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "commitAfterChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testCompileAllFailsDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllFailsDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "diff": ["-    doc1.saveFile(new FileSelector(file1));", "+    saveFile(doc1, new FileSelector(file1));", "-    doc2.saveFile(new FileSelector(file2));", "+    saveFile(doc2, new FileSelector(file2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e40baacb93438030e6b27be1d2b9198", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyTypeChecker.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ClassBodyTypeChecker(SymbolData sd, File file, String packageName, LinkedList<String> importedFiles,                                LinkedList<String> importedPackages, LinkedList<VariableData> vars,                                LinkedList<Pair<SymbolData, JExpression>> thrown)", "signatureAfterChange": "   public ClassBodyTypeChecker(SymbolData sd, File file, String packageName, LinkedList<String> importedFiles,                                LinkedList<String> importedPackages, LinkedList<VariableData> vars,                                LinkedList<Pair<SymbolData, JExpression>> thrown)", "diff": ["-   */", "+    */", "-      if (tempVD.isFinal()) {", "-        if (tempVD.gotValue()) {", "-          thingsThatHaveBeenAssigned.addLast(tempVD);", "-        }", "-      }", "+      if (tempVD.isFinal() && tempVD.gotValue())", "+        thingsThatHaveBeenAssigned.addLast(tempVD);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e55ab6a673930b94d53397d1f9571fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "da631ae365e5ae3fe7064b60f098ede0150c39bb", "commitAfterChange": "574257b530483460a9c0ce0cc5577b7fd93532dd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "signatureAfterChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "diff": ["-      SwingDocument doc = new SwingDocument();", "+      ErrorDocument doc = new ErrorDocument(getErrorDocumentTitle());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e5c9dcc3185afb80718138ec9b73277", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "53d061333fe3393f6569c1f553912f1a449482ad", "commitAfterChange": "12c8304e14a6d9eafe2f7093583d8040569150c1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "    public void testGetSourceRootPackageThreeDeepInvalid() throws BadLocationException, IOException", "signatureAfterChange": "    public void testGetSourceRootPackageThreeDeepInvalid() throws BadLocationException, IOException", "diff": ["-//    _log.log(\"testGetSourceRootPackageThreeDeepInvalid() completed\");", "+    _log.log(\"testGetSourceRootPackageThreeDeepInvalid() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e89a4e0cfb994b77edc14a91b1a5488", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testReplaceAllSameWord() throws BadLocationException", "signatureAfterChange": "   public void testReplaceAllSameWord() throws BadLocationException", "diff": ["-    doc.insertString(0, \"cool cool\", null);", "+    _doc.insertString(0, \"cool cool\", null);", "-    frm.setFindWord(\"cool\");", "-    frm.setMatchCase(false);", "-    frm.setSearchBackwards(false);", "-    frm.setReplaceWord(\"cool\");", "-    frm.replaceAll();", "-    frm.setSearchBackwards(true);", "-    frm.replaceAll();", "-    assertEquals(\"replace all with the same word\", \"cool cool\", doc.getText(0, doc.getLength()));", "+    _frm.setFindWord(\"cool\");", "+    _frm.setMatchCase(false);", "+    _frm.setSearchBackwards(false);", "+    _frm.setReplaceWord(\"cool\");", "+    _frm.replaceAll();", "+    _frm.setSearchBackwards(true);", "+    _frm.replaceAll();", "+    assertEquals(\"replace all with the same word\", \"cool cool\", _doc.getText(0, _doc.getLength()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e9e2a1942b06aa7b46fc85f9315c5d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlus.java", "commitBeforeChange": "41e184b1aabfa466589eae2bb1a9101d9be4de38", "commitAfterChange": "57a37f35b71c66341cae7312e856c3bb4a0b6fcf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-  public void indentLine(DefinitionsDocument doc)", "-  {", "+  public void indentLine(DefinitionsDocument doc){", "+    super.indentLine(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eb137d8a0d2ecb180c6a7651f5e5172", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/ExceptionReturnedException.java", "commitBeforeChange": "477cc9aa76ddc70908b0e1223c1ab0d83476c65e", "commitAfterChange": "c5c75a401a26592d7a4255e5d3749f5543238660", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public ExceptionReturnedException(Throwable t)", "signatureAfterChange": "    public ExceptionReturnedException(Throwable t)", "diff": ["+    super(t.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ec7e3eefa80e0822762a8ae6c58b428", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public String getHistoryAsStringWithSemicolons()", "signatureAfterChange": "   public String getHistoryAsStringWithSemicolons()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ef05870d575f0d0fa1334b5e38345a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 555, "methodNumberAfterChange": 269, "signatureBeforeChange": "    final private boolean jj_3R_443()", "signatureAfterChange": "    final private boolean jj_3R_448()", "diff": ["+  final private boolean jj_3R_448() {", "+    if (jj_3R_456()) {", "+    if (jj_3R_457()) return true;", "-", "-  final private boolean jj_3R_443() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_451()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_452()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f10f39f7a969df746a4d45015543e67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f4c26562b195c14a5a08de023c900f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "eceb1efda2a64c0d1777a241a780b6640565e74e", "commitAfterChange": "985a2a7aa160a776eff6e6187000ef0ccbcb7ce0", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": "   private JMenu _setUpToolsMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpToolsMenu(int mask)", "diff": ["-    if (DrJava.getConfig().getSetting(OptionConstants.SHOW_DEBUG_CONSOLE).booleanValue()) {", "+    if (DrJava.getConfig().getSetting(SHOW_DEBUG_CONSOLE).booleanValue()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f9181343c06c5f65d4284ddbe1da736", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 824, "methodNumberAfterChange": 743, "signatureBeforeChange": "    final private boolean jj_3R_232()", "signatureAfterChange": "    final private boolean jj_3R_197()", "diff": ["-", "-  final private boolean jj_3R_232() {", "-    if (jj_scan_token(REMAINDER_ASSIGN)) return true;", "-    if (jj_3R_87()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_197() {", "+    if (jj_scan_token(REMAINDER_ASSIGN)) return true;", "+    if (jj_3R_78()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f9b44513f73b0066e04cd409b83b27b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 784, "methodNumberAfterChange": 329, "signatureBeforeChange": "    final private boolean jj_3R_449()", "signatureAfterChange": "    final private boolean jj_3R_491()", "diff": ["+    if (jj_3R_241()) return true;", "+      if (jj_3R_502()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_449() {", "-    if (jj_3R_463()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_501()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fa3677a971a80f2191b965c0190819a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void defineConstant(String name, int value)", "signatureAfterChange": "   public void defineConstant(String name, int value)", "diff": ["-    ((InterpreterExtension)_djInterpreter).defineConstant(name, value);", "+    _djInterpreter.defineConstant(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fbf71de63a5b28a68ffd1192b450220", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AWTExceptionHandler.java", "commitBeforeChange": "8a3aaf6e3fe6fafb27249a8ad4b2c013ef4ae05a", "commitAfterChange": "102797244429ae58868d0037b49467f5a00bbd6a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void handle(Throwable thrown)", "signatureAfterChange": "      public void handle(Throwable thrown)", "diff": ["+  ", "-    UncaughtExceptionWindow uew = new UncaughtExceptionWindow(thrown);", "+    UncaughtExceptionWindow uew = new UncaughtExceptionWindow(frame,thrown);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fc1645cae57b7e6e5189072066182ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "df9cbdf4ec8cbcbc3942b966a48a15d33dcac7ed", "commitAfterChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "     public IncompleteInputInteractionsModel(InteractionsDJDocument adapter)", "signatureAfterChange": "     public IncompleteInputInteractionsModel(InteractionsDJDocument adapter) throws RemoteException", "diff": ["-    public IncompleteInputInteractionsModel(InteractionsDJDocument adapter) {", "+    public IncompleteInputInteractionsModel(InteractionsDJDocument adapter) throws RemoteException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fcedcdcd56e3ea296f7e5344e4bc5c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "    private void _setUpTabs()", "signatureAfterChange": "    private void _setUpTabs()", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      _tabbedPane.addChangeListener(new ChangeListener () {", "-        public void stateChanged(ChangeEvent e) {", "-          if (_tabbedPane.getSelectedComponent() == outputScroll) {", "-            outputScroll.revalidate();", "-            outputScroll.repaint();", "-          }", "+    _tabbedPane.addChangeListener(new ChangeListener () {", "+      public void stateChanged(ChangeEvent e) {", "+        if (_tabbedPane.getSelectedComponent() == outputScroll) {", "+          outputScroll.revalidate();", "+          outputScroll.repaint();", "-      });", "-    }", "+      }", "+    });", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fcff1af2d333a8a1b3a8181d007599f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testGotoLine1() throws BadLocationException", "signatureAfterChange": "   public void testGotoLine1() throws BadLocationException", "diff": ["-    defModel.insertString(0, s, null);", "-    defModel.gotoLine(2);", "-    assertEquals(\"#0.0\", 2, defModel.getCurrentLocation());", "+    _defModel.insertString(0, s, null);", "+    _defModel.gotoLine(2);", "+    assertEquals(\"#0.0\", 2, _defModel.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fd2dba54a56056a2cf976295b97e37f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "b3d6313113eef111465ef40865d8b51fd3f1c263", "commitAfterChange": "297ab8f541fdccc79367d02c322b7113ca0c7fca", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public static void restartIfNecessary(boolean forToolsJar, String[] args)", "signatureAfterChange": "   public static void restartIfNecessary(boolean forToolsJar, String[] args)", "diff": ["-      System.out.println(classpath);", "+      //System.out.println(classpath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fdd5e072408607bc399233a95fb8596", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 415, "methodNumberAfterChange": 404, "signatureBeforeChange": "    final private boolean jj_3R_156()", "signatureAfterChange": "    final private boolean jj_3R_146()", "diff": ["-", "-  final private boolean jj_3R_156() {", "+  final private boolean jj_3R_146() {", "-    if (jj_3R_106()) return true;", "+    if (jj_3R_107()) return true;", "-    if (jj_3R_220()) return true;", "+    if (jj_3R_195()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0feb2b7b9504c1098b19d9a14f679168", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/ToolsJarClassLoader.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public static String getToolsJarClasspath()", "signatureAfterChange": "   public static String getToolsJarClasspath()", "diff": ["-    String classpath = \"\";", "+    StringBuffer classpath = new StringBuffer();", "-      if (i > 0) classpath += pathSep;", "-      classpath += files[i].getAbsolutePath();", "+      if (i > 0) classpath.append(pathSep);", "+      classpath.append(files[i].getAbsolutePath());", "-    return classpath;", "+    return classpath.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ff4e3746094a7af2c50e8f283defc87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "          public void testCreateUniqueName()", "signatureAfterChange": "          public void testCreateUniqueName()", "diff": ["-      System.err.println(\"testCreateName finished\");", "+//      System.err.println(\"testCreateName finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ff625faf516fa5c29955470cbb02263", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 324, "methodNumberAfterChange": 595, "signatureBeforeChange": "    final private boolean jj_3R_399()", "signatureAfterChange": "    final private boolean jj_3R_402()", "diff": ["-  final private boolean jj_3R_399() {", "-    if (jj_3R_404()) return true;", "-    if (jj_3R_256()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_402() {", "+    if (jj_3R_406()) return true;", "+    if (jj_3R_259()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "101250a3ce207150b186c233f1170c1b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 332, "methodNumberAfterChange": 295, "signatureBeforeChange": "    final private boolean jj_3R_46()", "signatureAfterChange": "    final private boolean jj_3R_44()", "diff": ["-    if (jj_scan_token(DOT)) return true;", "-    if (jj_3_32()) {", "+", "+  final private boolean jj_3R_44() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_76()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1014ddb30330888bf900fbdc0726afd1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 336, "methodNumberAfterChange": 317, "signatureBeforeChange": "    final private boolean jj_3R_318()", "signatureAfterChange": "    final private boolean jj_3R_368()", "diff": ["-", "-  final private boolean jj_3R_318() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_355()) {", "-    jj_scanpos = xsp;", "-    if (jj_scan_token(24)) return true;", "-    }", "-    if (jj_scan_token(COLON)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_356()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_368() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_419()) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(24)) return true;", "+    }", "+    if (jj_scan_token(COLON)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_420()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10212af78f0457d6338462cad7f0f7d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DJError.java", "commitBeforeChange": "51ac7cbc7782d911930f183c9cf811f53aba30d2", "commitAfterChange": "0ac52f53a2294a0b953466aec03659d013cafdbf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DJError(File file, int lineNumber, int startColumn, String message, boolean isWarning)", "signatureAfterChange": "   public DJError(File file, int lineNumber, int startColumn, String message, boolean isWarning)", "diff": ["-    if (message != null && message.contains(\"CompilerError\")) throw new UnexpectedException(message);", "+    if (message != null && (message.indexOf(\"CompilerError\")>=0)) throw new UnexpectedException(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1021812387836ce7b405a214067a52e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 286, "methodNumberAfterChange": 285, "signatureBeforeChange": "   private JMenu _setUpProjectMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpProjectMenu(int mask)", "diff": ["-    projectMenu.add(_saveProjectAsAction);", "+//    projectMenu.add(_saveProjectAsAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1063ae3ded2951eb721069037370cca3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "5e007ed2a02c59f9c5f0ddad6c5fd3c21d5bb370", "commitAfterChange": "098248186c2cd94be6c7bc9bfe60fa3101b5a0ba", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "   protected void removeUpdate(AbstractDocument.DefaultDocumentEvent chng)", "signatureAfterChange": "   protected void removeUpdate(AbstractDocument.DefaultDocumentEvent chng)", "diff": ["-      Runnable doCommand = new RemoveCommand(offset, length);", "+      Runnable doCommand = new RemoveCommand(offset, length, removedText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1076b59c0f7bd9ae08c7acb812806f90", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 53, "signatureBeforeChange": "      public void currThreadSuspended()", "signatureAfterChange": "      public void currThreadSuspended()", "diff": ["-        if (printEvents) System.out.println(\"threadSuspended \" + currThreadSuspendedCount);", "+        if (printEvents) printStream.println(\"threadSuspended \" + currThreadSuspendedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "107e11fe322b1b9ef114949b2328b41d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "e8f48651b4fb31b2a1907635fbd654b3f66a98b2", "commitAfterChange": "2499b0018a7f137bb1baaaf2d077c26486e3f12e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public String getJarMainClass()", "signatureAfterChange": "     public File getJarMainClass()", "diff": ["-    public String getJarMainClass() {", "-      return _jar.entries()[0].getName();", "-    } ", "+    public File getJarMainClass() {", "+      return (_jar.entries().length > 0) ? _jar.entries()[0] : null;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1087780a7be0152d8e7ac5fd41db245d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public int getIntelligentBeginLinePos(int currPos) throws BadLocationException", "signatureAfterChange": "   public int getIntelligentBeginLinePos(int currPos) throws BadLocationException", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "108c1fd3c76d3078f0b4cbca2d29f55b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 763, "methodNumberAfterChange": 768, "signatureBeforeChange": "    final private boolean jj_3R_537()", "signatureAfterChange": "    final private boolean jj_3R_544()", "diff": ["-  final private boolean jj_3R_537() {", "+  final private boolean jj_3R_544() {", "-    if (jj_3R_151()) return true;", "+    if (jj_3R_181()) return true;", "-      if (jj_3R_547()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_554()) { jj_scanpos = xsp; break; }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10ad30796ab720cb14d184681639df26", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 57, "signatureBeforeChange": "          public void currThreadSuspended()", "signatureAfterChange": "          public void currThreadSuspended()", "diff": ["-        _notifyObject(_notifierLock);", "+        _notifyLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10b593a5254ba1d57fcae5d57f3a4823", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/JavaClass.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 56, "signatureBeforeChange": "          public Object evaluate(Object receiver, Iterable<Object> args, RuntimeBindings bindings,                             Options options) throws EvaluatorException", "signatureAfterChange": "          public Object evaluate(Object receiver, Iterable<Object> args, RuntimeBindings bindings,                             Options options) throws EvaluatorException", "diff": ["-      catch (SecurityException e) { /* ignore -- we can't relax accessibility */ }", "+      catch (SecurityException e) { debug.log(e); /* ignore -- we can't relax accessibility */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10bb6936611458d740b683fe529b814e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 388, "methodNumberAfterChange": 388, "signatureBeforeChange": "     public int _getFirstNonWSCharPos (int pos, char[] whitespace, boolean acceptComments)       throws BadLocationException", "signatureAfterChange": "     public int getFirstNonWSCharPos (int pos, char[] whitespace, boolean acceptComments)       throws BadLocationException", "diff": ["-    /** Assumes read lock is already held. */", "-    public int _getFirstNonWSCharPos (int pos, char[] whitespace, boolean acceptComments)", "+    public int getFirstNonWSCharPos (int pos, char[] whitespace, boolean acceptComments)", "-      return getDocument()._getFirstNonWSCharPos(pos, whitespace, acceptComments);", "+      return getDocument().getFirstNonWSCharPos(pos, whitespace, acceptComments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10bcc2975617b276cbeff18df8af27d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testDocLocationAfterSwitch() throws BadLocationException", "signatureAfterChange": "   public void testDocLocationAfterSwitch() throws BadLocationException", "diff": ["-    try { Utilities.invokeAndWait(new Runnable() { ", "+    Utilities.invokeAndWait(new Runnable() { ", "-      }}); ", "-    }", "-", "-    catch(InterruptedException e) { throw new UnexpectedException(e); }", "-    ", "+      }", "+    }); ", "+      ", "-    ", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10ce618f9ffcb2143742f2060184d948", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "ea5caceb61fece070d7111a62941070cf2982769", "commitAfterChange": "997d67839eca4386dbc5f66cebcd8a080dee4cfc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private static HashSet _makeKeywords()", "signatureAfterChange": "   private static HashSet _makeKeywords()", "diff": ["-      \"super\", \"new\", \"instanceof\", \"boolean\", \"char\", \"byte\",", "-      \"short\", \"int\", \"long\", \"float\", \"double\", \"void\", \"return\",", "+      \"super\", \"new\", \"instanceof\",    \"return\",", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10dc8f923cab4a958b9d425a7338d3c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 669, "methodNumberAfterChange": 350, "signatureBeforeChange": "    final private boolean jj_3R_309()", "signatureAfterChange": "    final private boolean jj_3R_309()", "diff": ["+", "+  final private boolean jj_3R_309() {", "+    if (jj_3R_318()) return true;", "+    if (jj_3R_331()) jj_scanpos = xsp;", "-  final private boolean jj_3R_309() {", "-    if (jj_3R_318()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_319()) { jj_scanpos = xsp; break; }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10de005f512c36e1371eb239e698cb4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeClass.java", "commitBeforeChange": "73d8f0963e3941f0992013e94dd38c610fad8320", "commitAfterChange": "79f5d66e5d12491f568b49d5064798e6d989d102", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "     public boolean isAbstract()", "signatureAfterChange": "     public boolean isAbstract()", "diff": ["-    public boolean isAbstract() { return Modifier.isAbstract(_m.getAccessFlags()); }", "+    public boolean isAbstract() { return Modifier.isAbstract(_m.getAccessFlags()) || isInterface(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10e0fcb9e369669e2b14aaee63f2fbb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4a5d73f26539ac3437580a184cbddb734465435e", "commitAfterChange": "c9e80bbae1d05915842b741e3f824da56b5b7a57", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 160, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["+    interactionsPanePopupMenu.add(_viewInteractionsClasspathAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10eb5a4febeb932ff0c9ada82b06e182", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ArrayData.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "          public void setUp()", "signatureAfterChange": "          public void setUp()", "diff": ["-      si = JExprParser.NO_SOURCE_INFO;", "+      si = SourceInfo.NO_INFO;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f157ba88fe4c5c3289611dd34139c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d49cbdbddda87e8c405e1611614405c2c7bd203d", "commitAfterChange": "be38b2b11517729e454db4fb5ce1085dc1eb228a", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 75, "signatureBeforeChange": "      public void compileStarted()", "signatureAfterChange": "      public void compileStarted()", "diff": ["-      _compileAction.setEnabled(false);", "+      //_compileAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10feb153dfdcda3dbb877aab32e9b745", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 612, "methodNumberAfterChange": 611, "signatureBeforeChange": "    final private boolean jj_3R_213()", "signatureAfterChange": "    final private boolean jj_3R_220()", "diff": ["+  final private boolean jj_3R_220() {", "+    if (jj_3R_259()) return true;", "+    if (jj_3R_107()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_213() {", "-    if (jj_3R_251()) return true;", "-    if (jj_3R_105()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1114964e5ae7769a67d2cabc875f99b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentHelperTest.java", "commitBeforeChange": "ef72bde352b18dc4ba661aa460f476829dae95cc", "commitAfterChange": "42669dc5656697beebfecb16842ba181e2bab301", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testGetLineStartPos() throws BadLocationException", "signatureAfterChange": "    public void testGetLineStartPos() throws BadLocationException", "diff": ["+    assertEquals(\"Returns DOCSTART when the cursor is at DOCSTART\",", "+\t\t 0,", "+\t\t _doc.getLineStartPos(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "113205dc655798c649f824bdaec0023f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 758, "methodNumberAfterChange": 836, "signatureBeforeChange": "    final private boolean jj_3R_538()", "signatureAfterChange": "    final private boolean jj_3R_535()", "diff": ["-", "-  final private boolean jj_3R_538() {", "-    if (jj_3R_556()) return true;", "-      if (jj_3R_557()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_535() {", "+    if (jj_3R_554()) return true;", "+      if (jj_3R_579()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1134a813f8834373fed18fae3594b7cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e008a871c73a2d17613177c46b840738a811d430", "commitAfterChange": "d02285e9310b790e24e1b715b3bffce44fd78532", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 129, "signatureBeforeChange": "          public void interactionStarted()", "signatureAfterChange": "          public void interactionStarted()", "diff": ["-      _abortInteractionAction.setEnabled(true);", "+      //_abortInteractionAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "113ebc510fe8d4ebbfb887b97abea468", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public String getText()", "signatureAfterChange": "   public IndentInfo getIndentInformation()", "diff": ["+    acquireReadLock();", "+    try { return _getIndentInformation(); }", "+    finally { releaseReadLock(); }  ", "+  }", "-  /** Gets the document text; this method is threadsafe. */", "-  public String getText() {", "-    acquireReadLock();", "-    try { return _getText(); }", "-    finally { releaseReadLock(); }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1169d367b911f310b805a05e4a76d5c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "7b3e2baaa631329b7e3233840fa805eba66e7b61", "commitAfterChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public Vector<StateBlock> insertNewline()", "signatureAfterChange": "   public Vector<StateBlock> insertNewline()", "diff": ["-\t\t\t\t\t_splitCurrentIfCommentBlock(true, _cursor);", "+\t\t\t\t\t_splitCurrentIfCommentBlock(true,true, _cursor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "117a53bf126657c9c25cd1ba257a79e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 753, "methodNumberAfterChange": 332, "signatureBeforeChange": "    final private boolean jj_3R_481()", "signatureAfterChange": "    final private boolean jj_3R_390()", "diff": ["+  final private boolean jj_3R_390() {", "+    if (jj_3R_405()) return true;", "+    if (jj_3R_418()) jj_scanpos = xsp;", "-", "-  final private boolean jj_3R_481() {", "-    if (jj_3R_504()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_538()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11899e38596ff84c9e68a6a5d7ee10d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testGotoLine4() throws BadLocationException", "signatureAfterChange": "   public void testGotoLine4() throws BadLocationException", "diff": ["-    _defModel.insertString(0, s, null);", "-    _defModel.gotoLine(8);", "-    assertEquals(\"#0.0\", 6, _defModel.getCurrentLocation());", "+    _doc.insertString(0, s, null);", "+    _doc.gotoLine(8);", "+    assertEquals(\"#0.0\", 6, _doc.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a68abe14f56aa5651420ebcc00aa71", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "c62d3e0fe024c724a67e86baf30c41235da58454", "commitAfterChange": "bd499b8e6c590fd3376a82010e399ae7edfc6975", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public InteractionsController(InteractionsModel model,                                 InteractionsDJDocument adapter,                                 InteractionsPane pane,                                 Runnable disableCloseSystemInMenuItemCommand)", "signatureAfterChange": "   public InteractionsController(InteractionsModel model,                                 InteractionsDJDocument adapter,                                 InteractionsPane pane,                                 Runnable disableCloseSystemInMenuItemCommand)", "diff": ["-//    }); ", "+//    });", "+    ", "+    // Add key binding option listener for Input Box.", "+    // Done here, not in InputBox's constructor, so we only create one. Otherwise we might", "+    // create one per InputBox, and it would be difficult to remove them again.", "+    DrJava.getConfig().addOptionListener(OptionConstants.KEY_UNDO, _keyBindingOptionListener);", "+    DrJava.getConfig().addOptionListener(OptionConstants.KEY_REDO, _keyBindingOptionListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11b7e60ebc6cfcabfcb1a40f9315266d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 763, "methodNumberAfterChange": 673, "signatureBeforeChange": "    final private boolean jj_3R_497()", "signatureAfterChange": "    final private boolean jj_3R_521()", "diff": ["-", "-  final private boolean jj_3R_497() {", "-    if (jj_3R_113()) return true;", "+  final private boolean jj_3R_521() {", "+    if (jj_3R_116()) return true;", "-      if (jj_3_67()) { jj_scanpos = xsp; break; }", "+      if (jj_3_72()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11b840384d41cf72fbef13151cf6eeb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorFileOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testApplyDoesChangeConfig()", "signatureAfterChange": "    public void testApplyDoesChangeConfig()", "diff": ["-    _option.updateConfig();", "-", "+    _option.updateConfig();", "+    Utilities.clearEventQueue();", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11c8befaaa80f07dd036cefd8bef4d4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 424, "methodNumberAfterChange": 396, "signatureBeforeChange": "    final private boolean jj_3R_304()", "signatureAfterChange": "    final private boolean jj_3R_314()", "diff": ["+", "+  final private boolean jj_3R_314() {", "+    if (jj_scan_token(SWITCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_105()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(LBRACE)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_451()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(RBRACE)) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_304() {", "-    if (jj_scan_token(SWITCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_102()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(LBRACE)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_436()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(RBRACE)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11e68e46e6d7198ac59751d8c9c0c618", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 56, "signatureBeforeChange": "     public void currThreadDied()", "signatureAfterChange": "     public void currThreadDied()", "diff": ["-        if (printEvents) System.out.println(\"currThreadDied \" + currThreadDiedCount);", "+        if (printEvents) printStream.println(\"currThreadDied \" + currThreadDiedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11e6f94fef5b07cafe743eace522942d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 355, "methodNumberAfterChange": 463, "signatureBeforeChange": "    final private boolean jj_3R_95()", "signatureAfterChange": "    final private boolean jj_3R_86()", "diff": ["-", "-  final private boolean jj_3R_95() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_139()) {", "-    if (jj_3R_140()) return true;", "+", "+  final private boolean jj_3R_86() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_126()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_127()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "121b2b42e018ddcdf253fa3057146932", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlus.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-    System.err.println(\"ActionStartPrevLinePlus\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "122b12fa74aa3d64199046ca01d62c9c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlusTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testOtherLinesIndented() throws javax.swing.text.BadLocationException", "signatureAfterChange": "   public void testOtherLinesIndented() throws javax.swing.text.BadLocationException", "diff": ["-    assertEquals(\" foo\\n  bar\\n     blah\", _doc.getText(0, 20));", "+    assertEquals(\" foo\\n  bar\\n     blah\", _doc.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "122d252685bec0ea1eaec89dbb40e2fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocument.java", "commitBeforeChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "commitAfterChange": "d4622e1c95180ad4b8f3b6eca04eb1a3a2eca2e9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void remove(int offset, int len) throws BadLocationException", "signatureAfterChange": "    public void remove(int offset, int len) throws BadLocationException", "diff": ["-    _reduced.move(locationChange);", "-    _reduced.delete(len);", "+    //_reduced.move(locationChange);", "+    //_reduced.delete(len);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "125a460d23e8dca58605dbc79c041c49", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerRegistry.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "    public static CompilerInterface createCompiler(Class clazz) throws Throwable", "signatureAfterChange": "    public static CompilerInterface createCompiler(Class clazz) throws Throwable", "diff": ["+      _log.log(\"CompilerRegistry.createCompiler(\" + clazz + \") called\");", "+      _log.log(clazz + \".ONLY = \" + field);", "+      _log.log(\"createCompiler(\" + clazz + \") returning \" + val);", "-      //t.printStackTrace(DrJava.consoleErr());", "+      // Not a compiler provided by ToolsJarClassLoader", "+      _log.log(\"createCompiler threw exception \" + t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1268187dcde90b4f0f7b9e924d851845", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InteractionsProcessorTest.java", "commitBeforeChange": "f1cdd8ab40ec812de32945f859fe4268e830f213", "commitAfterChange": "03b2d2796342d42693cf58d323df575cbd1df053", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testPreProcess() throws ParseException", "signatureAfterChange": "   public void testPreProcessGenerics() throws ParseException", "diff": ["-", "-  public void testPreProcess() throws ParseException", "+   */", "+  public void testPreProcessGenerics() throws ParseException", "-    String s = _ip.preProcess(\"0\");", "-    assertTrue(\"InteractionProcessor.testPreProcess:\", _ip.precalled);", "-    ", "-    // this test is presumptive for the real preprocessor, correct? -jvf", "-    //assertEquals(\"InteractionProcessor.testPreProcess:\", \"0\", s);", "+    String s = _ip.preProcess(\"Vector<String> v = new Vector<String>();\");", "+    assertEquals(\"type-erased assignment\", \"Vector v = new Vector();\", s);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1273c1f5dc64b33fa244e31fd2c7bc93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 668, "methodNumberAfterChange": 660, "signatureBeforeChange": "    final private boolean jj_3R_157()", "signatureAfterChange": "    final private boolean jj_3R_162()", "diff": ["-", "-  final private boolean jj_3R_157() {", "-    if (jj_scan_token(IF)) return true;", "-    if (jj_3R_94()) return true;", "-    if (jj_3R_193()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_531()) jj_scanpos = xsp;", "-    return false;", "-  }", "+  final private boolean jj_3R_162() {", "+    if (jj_scan_token(IF)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_97()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_201()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_553()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "127b023971d1b0b107782f4e3995bf5d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   protected ThreadReference _getThreadFromDebugThreadData(DebugThreadData d)     throws NoSuchElementException", "signatureAfterChange": "   protected ThreadReference _getThreadFromDebugThreadData(DebugThreadData d)     throws NoSuchElementException", "diff": ["-    ThreadReference threadRef = null;", "-", "-      threadRef = iterator.next();", "-      if ( threadRef.uniqueID() == d.getUniqueID() ) {", "+      ThreadReference threadRef = iterator.next();", "+      if (threadRef.uniqueID() == d.getUniqueID()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "127f784be15c57fb819d2dcb13a33114", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryVisitor.java", "commitBeforeChange": "5e7a16013fcb5945eddc036e2d2d0ce3e14ba2d0", "commitAfterChange": "e1389ddb9dcb8a7d3a230cc1be322481e1c8fd6a", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "          public void testForModifiersAndVisibilityDoFirst()", "signatureAfterChange": "          public void testForModifiersAndVisibilityDoFirst()", "diff": ["-      assertEquals(\"The error message should be correct for pub modifier:\", \"The keyword \\\"public\\\" cannot be used at the Elementary level\", errors.getLast().getFirst());", "+      assertEquals(\"The error message should be correct for pub modifier:\", ", "+                   \"The keyword \\\"public\\\" cannot be used at the Elementary level\", ", "+                   errors.getLast().getFirst());", "-      assertEquals(\"The error message should be correct for private modifier:\", \"The keyword \\\"private\\\" cannot be used at the Elementary level\", errors.getLast().getFirst());", "+      assertEquals(\"The error message should be correct for private modifier:\", ", "+                   \"The keyword \\\"private\\\" cannot be used at the Elementary level\", ", "+                   errors.getLast().getFirst());", "-      ModifiersAndVisibility mavs2 = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, ", "-                                                                new String[] {\"private\", \"static\"});", "-       _bv.forModifiersAndVisibilityDoFirst(mavs2);", "+      ModifiersAndVisibility mavs2 = new ModifiersAndVisibility(_noSourceInfo, new String[] {\"private\", \"static\"});", "+      _bv.forModifiersAndVisibilityDoFirst(mavs2);", "-      assertEquals(\"The error message should be correct for 2 modifiers:\", \"The keywords \\\"private\\\" \\\"static\\\" cannot be used at the Elementary level\", errors.getLast().getFirst());", "+      assertEquals(\"The error message should be correct for 2 modifiers:\", ", "+                   \"The keywords \\\"private\\\" \\\"static\\\" cannot be used at the Elementary level\", ", "+                   errors.getLast().getFirst());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1288c343043784932803350eb1880e53", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 339, "methodNumberAfterChange": 338, "signatureBeforeChange": "     public boolean modifiedOnDisk()", "signatureAfterChange": "     public boolean modifiedOnDisk()", "diff": ["-      DefinitionsDocument dd = getDocument();", "-      try {", "-        dd.acquireReadLock();", "-        if (_file != null) ret = (_file.lastModified() > _timestamp);", "-      }", "-      finally { dd.releaseReadLock(); }", "+      final File f = _file;", "+", "+      if (f != null) ret = (f.lastModified() > _timestamp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "128e2bd839bf34b34b9c83535c91af8d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocument.java", "commitBeforeChange": "2ec67558fcc2be0c684677fea7ee9feb674b02bc", "commitAfterChange": "a937ccbbfe3e2271b14c781e19a341556df45efe", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "signatureAfterChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "diff": ["-      throw new RuntimeException(e);", "+      throw new RuntimeException(e.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12949a0767ce32d9f1110127d374e6e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "commitAfterChange": "8417ddcfd5dbe91145435687b878857a28a6fc40", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "   private int getWhiteSpaceBetween(int relStart, int relEnd)     throws BadLocationException", "signatureAfterChange": "   private int getWhiteSpaceBetween(int relStart, int relEnd)     throws BadLocationException", "diff": ["-                               relStart - relEnd);", "+                               Math.abs(relStart - relEnd));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12b8558dee7fa8187e426ce9c0405031", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 526, "methodNumberAfterChange": 641, "signatureBeforeChange": "    final private boolean jj_3R_104()", "signatureAfterChange": "    final private boolean jj_3R_95()", "diff": ["-    if (jj_3_45()) {", "-    if (jj_3R_157()) return true;", "+  final private boolean jj_3R_95() {", "+    if (jj_3R_144()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12c50e353b562f925b89d585845a5996", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 369, "signatureBeforeChange": "    final private boolean jj_3R_253()", "signatureAfterChange": "    final private boolean jj_3R_254()", "diff": ["-", "-  final private boolean jj_3R_253() {", "-    if (jj_3R_308()) return true;", "+  final private boolean jj_3R_254() {", "+    if (jj_3R_309()) return true;", "-      if (jj_3R_358()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_359()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12cb067f4bd4e66db755a3e7f77a9a4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassInfoCompiler.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public Object visit(QualifiedName node)", "signatureAfterChange": "     public Object visit(QualifiedName node)", "diff": ["-      ", "+", "-        ", "+", "-        ", "+", "-      } ", "-      ", "+      }", "+", "-      ", "+", "-      ", "+", "-      IdentifierToken t2 = (IdentifierToken)l.get(l.size()-1);", "+      IdentifierToken t2 = l.get(l.size()-1);", "-      ", "+", "-      } else { ", "+      } else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12cf0aa583c292b80926c780cce0a908", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ClipboardHistoryFrame.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public boolean equals(Object o)", "signatureAfterChange": "     public boolean equals(Object o)", "diff": ["-      if ((o == null) || !(o instanceof ListItem)) return false;", "+      if (o == null || getClass() != o.getClass()) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12d4308744d13be4d6fd9bf3cb5bcd3f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 248, "methodNumberAfterChange": 248, "signatureBeforeChange": "     public boolean undoManagerCanUndo()", "signatureAfterChange": "     public boolean undoManagerCanUndo()", "diff": ["-      return _cache.isDDocInCache(this) && getUndoManager().canUndo();", "+      return _cacheAdapter.isReady() && getUndoManager().canUndo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12db4508f90eac1abf98c166cb91635f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/Interpreter.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public Interpreter(Options opt, ClassLoader loader)", "signatureAfterChange": "      public Interpreter(Options opt, ClassLoader loader)", "diff": ["-    this(opt, new TopLevelContext(loader), RuntimeBindings.EMPTY);", "+    this(opt, new TopLevelContext(loader, opt), RuntimeBindings.EMPTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12dd3b75176dcbe46ced3b7080b422ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b6bfdc97713285768c8b922127b436d974f9f1e4", "commitAfterChange": "25355ecd0bc01ef2920944ee4f7366c5c45c1e55", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testInterpretJavaEscapedArgs()", "signatureAfterChange": "   public void testInterpretJavaEscapedArgs()", "diff": ["+    _log.log(\"testInterpretJavaEscapedArgs started\");", "+    _log.log(\"testInterpretJavaEscapedArgs ended\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12f3c4f8495b7229aa284952b60175df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AlreadyOpenException.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public OpenDefinitionsDocument getOpenDocument()", "signatureAfterChange": "   public OpenDefinitionsDocument getOpenDocument()", "diff": ["-  public OpenDefinitionsDocument getOpenDocument() { return _openDoc; }", "+  public OpenDefinitionsDocument getOpenDocument() { return _openDocs[0]; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12f9361407110f6f1e7b2d7fe7f81beb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testCompileAllFailsDifferentSourceRoots()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileAllFailsDifferentSourceRoots()     throws BadLocationException, IOException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12ff779eaae8ee25775cee5915ef8049", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Breakpoint.java", "commitBeforeChange": "930b1ef6cc279650a085c7c6499b1b57cb240018", "commitAfterChange": "73b3ce3968c13472938fea3d36b496150c938bd2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void _createRequest(ReferenceType rt) throws DebugException", "signatureAfterChange": "   protected void _createRequest(ReferenceType rt) throws DebugException", "diff": ["-      _manager.addBreakpointToMap(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13001632ce18d53cb75e9f2d105696cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          public void testForThisReferenceDoFirst()", "signatureAfterChange": "          public void testForThisReferenceDoFirst()", "diff": ["-      SimpleThisReference str = new SimpleThisReference(JExprParser.NO_SOURCE_INFO);", "-      ComplexThisReference ctr = new ComplexThisReference(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"field\")));", "+      SimpleThisReference str = new SimpleThisReference(SourceInfo.NO_INFO);", "+      ComplexThisReference ctr = new ComplexThisReference(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"field\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "130f8ddb893e0f39fefffb40865b68ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 539, "methodNumberAfterChange": 452, "signatureBeforeChange": "    final private boolean jj_3R_488()", "signatureAfterChange": "    final private boolean jj_3R_489()", "diff": ["+", "+  final private boolean jj_3R_489() {", "+    if (jj_3R_505()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_526()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_488() {", "-    if (jj_3R_504()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_525()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "130fc6ad83c30e60b2f8f978696aafd8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 847, "methodNumberAfterChange": 844, "signatureBeforeChange": "    final private boolean jj_3R_400()", "signatureAfterChange": "    final private boolean jj_3R_496()", "diff": ["-  final private boolean jj_3R_400() {", "-    if (jj_3R_111()) return true;", "+", "+  final private boolean jj_3R_496() {", "+    if (jj_3R_113()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_67()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1311b59ddef01321d5534ba528e41753", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 576, "methodNumberAfterChange": 281, "signatureBeforeChange": "    final private boolean jj_3R_434()", "signatureAfterChange": "    final private boolean jj_3R_447()", "diff": ["+", "+  final private boolean jj_3R_447() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_257()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_375()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_434() {", "-    if (jj_3R_75()) return true;", "-    if (jj_3R_365()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13217c45312d26180660e0a2e95ad2c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": "          public void logInteractionStart()", "signatureAfterChange": "          public void logInteractionStart()", "diff": ["-      _interactionDone = false;", "-      _resetDone = false;", "+      _interactionDone.reset();", "+      _resetDone.reset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "132e0958d8399a468bb9e1d202da6c4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 79, "signatureBeforeChange": "   public void resetInteractionsClasspath()", "signatureAfterChange": "   public void resetInteractionsClassPath()", "diff": ["-  public void resetInteractionsClasspath() {", "-    ClasspathVector projectExtras = getProjectExtraClasspath();", "+  public void resetInteractionsClassPath() {", "+    ClassPathVector projectExtras = getExtraClassPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13401adb08b7ad7bdbe47f58e2d3baa4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ClassDeclaration.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ClassDeclaration(int flags, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ClassDeclaration(int flags, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body,                           String fn, int bl, int bc, int el, int ec)", "diff": ["-    if (ext == null) {", "-      superclass = \"java.lang.Object\";", "-    } else {", "-      superclass = ext.getRepresentation();", "-    }", "+    superclass = (ext == null) ? OBJECT : ext;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13677d494a51dba74000268473750c8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   private boolean _javadoc_1_3(String[] args, String[] classpath)     throws IOException, ClassNotFoundException, InterruptedException", "signatureAfterChange": "   private boolean _javadoc_1_3(String[] args, String[] classpath) throws IOException", "diff": ["-  private boolean _javadoc_1_3(String[] args, String[] classpath)", "-    throws IOException, ClassNotFoundException, InterruptedException {", "+  private boolean _javadoc_1_3(String[] args, String[] classpath) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13851e489307c5f666ba2a4d37ffe8c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected void createModel()", "signatureAfterChange": "   protected void createModel()", "diff": ["-    _model = new DefaultGlobalModel();", "+    _model = new DefaultGlobalModel(_originalModel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "138f6af5eaa80b69284429e0bbc532e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/FilteredRelation.java", "commitBeforeChange": "811484bb0f3e9c6a234bb593ba7247f59304a444", "commitAfterChange": "d3ca8d30db126f3de1352627e18f51d00a1bf339", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override public boolean contains(T1 first, T2 second)", "signatureAfterChange": "      public boolean contains(T1 first, T2 second)", "diff": ["+  public boolean contains(T1 first, T2 second) {", "+    return _rel.contains(first, second) && _pred.contains(first, second);", "+  }", "-  ", "-  @Override public boolean contains(T1 first, T2 second) {", "-    return _rel.contains(first, second) && _pred.contains(first, second);", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13a0c554ea8b8d06793799fd6adffb2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 250, "signatureBeforeChange": "   public void addToBrowserHistory()", "signatureAfterChange": "   public void addToBrowserHistory()", "diff": ["-  /** Add the current location to the browser history.  Only runs in event thread. */", "+  /** Add the current location to the browser history.  Aborts if not run in event thread. */", "-    assert EventQueue.isDispatchThread(); ", "+    if (! EventQueue.isDispatchThread()) return;", "-      doc.acquireReadLock();", "-        startPos = doc.createWrappedPosition(doc.getCaretPosition()).getOffset();", "-        endPos = doc.createWrappedPosition(doc.getLineEndPos(doc.getCaretPosition())).getOffset();", "+        startPos = doc.createPosition(doc.getCaretPosition()).getOffset();", "+        endPos = doc.createPosition(doc.getLineEndPos(doc.getCaretPosition())).getOffset();", "-      finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13a5890906de00ef02a6dc07d671988f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 813, "methodNumberAfterChange": 726, "signatureBeforeChange": "    final private boolean jj_3R_236()", "signatureAfterChange": "    final private boolean jj_3R_201()", "diff": ["-", "-  final private boolean jj_3R_236() {", "-    if (jj_scan_token(RIGHT_SIGNED_SHIFT_ASSIGN)) return true;", "-    if (jj_3R_87()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_201() {", "+    if (jj_scan_token(RIGHT_SIGNED_SHIFT_ASSIGN)) return true;", "+    if (jj_3R_78()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13be887167b80812030c5f163e961371", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void _updateNoErrors() throws BadLocationException", "signatureAfterChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "diff": ["-    private void _updateNoErrors() throws BadLocationException {", "+    protected void _updateNoErrors(boolean done) throws BadLocationException {", "-        if (_model.getAvailableCompilers().length == 0) {", "+        if (getModel().getAvailableCompilers().length == 0) {", "-          if (_model.getActiveCompiler() == NoCompilerAvailable.ONLY) {", "+          if (getModel().getActiveCompiler() == NoCompilerAvailable.ONLY) {", "-            message = _model.getActiveCompiler().getName() + \" compiler ready.\";", "+            message = getModel().getActiveCompiler().getName() + \" compiler ready.\";", "-      ", "+", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13bf2b1a887c00636d288570290ed109", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "682bd0a2b528d852a57206c89ed5bb4a5b484c14", "commitAfterChange": "c8a7a8a9d3d089ab42661ede7d141969c6ed2339", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public File[] getSelectedDirectories()", "signatureAfterChange": "   public File[] getSelectedDirectories()", "diff": ["-      return v.toArray(new File[0]);", "+      return v.toArray(new File[v.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13bff7615bb8586c6a1351532bb3acd2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "4ddd7404761b70fbc7f3b729484fc360047df6c1", "commitAfterChange": "875709ea758d694dda7555b8eeb2e15fa58e98c5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testCannotEditBeforePrompt() throws EditDocumentException", "signatureAfterChange": "   public void testCannotEditBeforePrompt() throws EditDocumentException", "diff": ["-//    _doc.acquireWriteLock();", "-    int origLength = 0;", "-//    try {", "-    origLength = _doc.getLength();", "+    int origLength = _doc.getLength();", "-//    }", "-//    finally { _doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13c3a98a5751b1c363ff4350ca33374c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/IntegerLiteral.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public IntegerLiteral(String rep, SourceInfo si)", "signatureAfterChange": "   public IntegerLiteral(String rep, SourceInfo si) throws NumberFormatException", "diff": ["-  public IntegerLiteral(String rep, SourceInfo si) {", "+  public IntegerLiteral(String rep, SourceInfo si) throws NumberFormatException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13c9d3177f126ecebd8472b69e28db34", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "b6c98c2729d523213cf8ee6bbc9636575f25da66", "commitAfterChange": "4bdaddc150401ace7c16f01fa5c54525f5642ceb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public InteractionsDocument(ConsoleDocumentInterface document, History history, String banner)", "signatureAfterChange": "   public InteractionsDocument(ConsoleDocumentInterface document, History history)", "diff": ["-  public InteractionsDocument(ConsoleDocumentInterface document, History history, String banner) {", "+  public InteractionsDocument(ConsoleDocumentInterface document, History history) {", "-    reset(banner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13ce8a933723a17291d158dcb40bb0c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void defineConstant(String name, short value)", "signatureAfterChange": "   public void defineConstant(String name, short value)", "diff": ["-    ((InterpreterExtension)_djInterpreter).defineConstant(name, value);", "+    _djInterpreter.defineConstant(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13cf308f8cbcec654d29598eb52d9697", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlusTest.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testAfterArrayAssignMultiSemi() throws BadLocationException", "signatureAfterChange": "   public void testAfterArrayAssignMultiSemi() throws BadLocationException", "diff": ["-    IndentRuleAction rule = new ActionStartPrevStmtPlus(\"\", false);", "+    IndentRuleAction rule = new ActionStartPrevStmtPlus(0, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13cfa92c15d01708df8051017f3ccead", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6b9d21c46904df78c4c42153380af1416ff61bab", "commitAfterChange": "7ee1de808f3f616f32f05bbcf5fc74efb00c8d4a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void insertBeforeLastPrompt(String text, String style)", "signatureAfterChange": "   public void insertBeforeLastPrompt(String text, String style)", "diff": ["-      _addToStyleLists(pos, text, style);", "-      _document._forceInsertText(pos, text, style);", "+      _forceInsertText(pos, text, style);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13e2d7d78c1c365af19e6bfca987a735", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JavadocModelTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testNoSuggestedDirectory()", "signatureAfterChange": "   public void testNoSuggestedDirectory()", "diff": ["-    final File file = new File(System.getProperty(\"user.dir\"));", "+//    final File file = new File(System.getProperty(\"user.dir\"));", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13e345da2cf48d37b66349d779683f35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 390, "methodNumberAfterChange": 393, "signatureBeforeChange": "    final private boolean jj_3R_319()", "signatureAfterChange": "    final private boolean jj_3R_326()", "diff": ["-", "-  final private boolean jj_3R_319() {", "-    if (jj_scan_token(IF)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_107()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_287()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_454()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_326() {", "+    if (jj_scan_token(IF)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_107()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_295()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_461()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1403f4a26cd5df87935dce549e6e71df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 624, "methodNumberAfterChange": 461, "signatureBeforeChange": "    final private boolean jj_3R_190()", "signatureAfterChange": "    final private boolean jj_3R_186()", "diff": ["+", "+  final private boolean jj_3R_186() {", "+    if (jj_3R_212()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_258()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_190() {", "-    if (jj_3R_207()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_268()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1427c8a7244a4402ef937904818abc09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "a42f39d6113f94f8758a85c690871c1cc3a1d3bf", "commitAfterChange": "70c1ecdee2b287deaefda546dba21394bc1868ef", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 64, "signatureBeforeChange": "   public static Thread copyProcessErr(Process p, OutputStream err, boolean close)", "signatureAfterChange": "   public static Thread copyProcessErr(Process p, OutputStream err, boolean close)", "diff": ["+    result.setDaemon(true); // this thread should not keep the JVM from exiting", "+    // TODO: If the parent process quits, can the child get stuck when its buffer fills?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "142f7b9c891e67a720569d390823ba61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 679, "methodNumberAfterChange": 553, "signatureBeforeChange": "    final private boolean jj_3R_265()", "signatureAfterChange": "    final private boolean jj_3R_565()", "diff": ["+  final private boolean jj_3R_565() {", "+    if (jj_scan_token(INCREMENT)) return true;", "-  final private boolean jj_3R_265() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14378cb0a82c60d6e39336811c99f573", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "34ce8483136d91f9eff46f1971dc8a612f363868", "commitAfterChange": "cfd4689ec89c3908ea0306a11510c85ea5436de0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testDups() throws BadLocationException", "signatureAfterChange": "   public void testDups() throws BadLocationException", "diff": ["-    DrJavaRoot.openCommandLineFiles(_mf, list);", "+    DrJavaRoot.openCommandLineFiles(_mf, list, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1452a129e982bcdbd7b97c1e08f6eb52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "f487bb6e047f5c14a35953a64eee82a506af3ed7", "commitAfterChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void setUp()", "signatureAfterChange": "   public void setUp() throws IOException", "diff": ["-  public void setUp() {", "+  public void setUp() throws IOException{", "+    _frame.pack();", "+    super.setUp();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14712d088215cbc1d804245749dc91cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": "          public void addUndoableEditListener(UndoableEditListener listener)", "signatureAfterChange": "     public void addUndoableEditListener(UndoableEditListener listener)", "diff": ["+    List<UndoableEditListener> _undoableEditListeners = new LinkedList<UndoableEditListener>();", "+      _undoableEditListeners.add(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1478f8aaccc7131bc7cbe04453cda9de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/gui/URLChooser.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public Action getAction(String key) throws MissingListenerException", "signatureAfterChange": "   public Action getAction(String key) throws MissingListenerException", "diff": ["-    return (Action)listeners.get(key);", "+    return listeners.get(key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14940f60fcd382d61155c6865cc682b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "84c5dcb9d1d5758d538b6e33735414edf589db39", "commitAfterChange": "1ef951d20d276f3c46e1cf20ba51ab4b6ce00f53", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public void setForeground(Color c)", "signatureAfterChange": "      public void setForeground(Color c)", "diff": ["+  ", "-//    _renderer.setTextSelectionColor(c);", "-    System.out.println(\"setting foreground to \" + c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "149bda295a9f070c389b568fa02574f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public boolean hasHistoryNext()", "signatureAfterChange": "   public boolean hasHistoryNext()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14baed3db35fa1514e3de18648df6652", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public Vector<Breakpoint> getBreakpoints();", "signatureAfterChange": "   public Vector<Breakpoint> getBreakpoints() throws DebugException;", "diff": ["-  public Vector<Breakpoint> getBreakpoints();", "+  public Vector<Breakpoint> getBreakpoints() throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14c3da5a3626915f17ebd8fa07c92d62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      DrJava.CONFIG.addOptionListener( OptionConstants.JAVAC_LOCATION, new CompilerLocationOptionListener());", "-      DrJava.CONFIG.addOptionListener( OptionConstants.JSR14_LOCATION, new CompilerLocationOptionListener());", "-    }", "+    DrJava.CONFIG.addOptionListener( OptionConstants.JAVAC_LOCATION, new CompilerLocationOptionListener());", "+    DrJava.CONFIG.addOptionListener( OptionConstants.JSR14_LOCATION, new CompilerLocationOptionListener());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14ec79569c32fbacd8c8b7913219361d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 417, "methodNumberAfterChange": 621, "signatureBeforeChange": "    final private boolean jj_3R_258()", "signatureAfterChange": "    final private boolean jj_3R_260()", "diff": ["-  final private boolean jj_3R_258() {", "-    if (jj_3R_276()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_301()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_260() {", "+    if (jj_3R_278()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_279()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14f8f2849da088be6ee20d2b100bf7a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigatorTest.java", "commitBeforeChange": "ea3de3bd50de8d728bdb5d615bd9b8838d2e94b4", "commitAfterChange": "c8bdd45b172c9714aba30b2edf20a9a7463e66ab", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testTraversalOps()", "signatureAfterChange": "      public void testTraversalOps()", "diff": ["-    assertEquals(\"doc count test\", 4, tree.getDocumentCount());", "+    assertEquals(\"doc count test\", 9, tree.getDocumentCount());", "-    assertSame(\"getLast test\", i4, tree.getLast());", "+    assertSame(\"getLast test\", auxi5, tree.getLast());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1510199ccbf6772a47a2c533e1cb874f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public int _getFirstNonWSCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   public int getFirstNonWSCharPos(int pos) throws BadLocationException", "diff": ["-  public int _getFirstNonWSCharPos(int pos) throws BadLocationException {", "+  public int getFirstNonWSCharPos(int pos) throws BadLocationException {", "-    return _getFirstNonWSCharPos(pos, whitespace, false);", "+    return getFirstNonWSCharPos(pos, whitespace, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1519458e597789a93f92f2fb28c71fe3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 160, "signatureBeforeChange": "   public int getDebugPort()", "signatureAfterChange": "   public int getDebugPort() throws IOException", "diff": ["-  public int getDebugPort() {", "+  public int getDebugPort() throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "153381b8722a029f872a47bd9f174a48", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ForcedChoiceOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testApplyDoesChangeConfig()", "signatureAfterChange": "    public void testApplyDoesChangeConfig()", "diff": ["+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1536458fdec69d02e988ae362ba9bbf3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/PendingRequestManager.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void addPendingRequest (DocumentDebugAction action)", "signatureAfterChange": "   public void addPendingRequest (DocumentDebugAction action)", "diff": ["-    Vector<DocumentDebugAction> actions = null;", "-    actions = _pendingActions.get(className);", "+    Vector<DocumentDebugAction> actions = _pendingActions.get(className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15634d55b0ccd8e9b0e78bb6427964dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "bd2e852d4b09497531ae79af49475815d01d70b1", "commitAfterChange": "85b72c50d3f809a70141774d731cbef2c25b2f7f", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 89, "signatureBeforeChange": "      public static void main(String[] args)", "signatureAfterChange": "      public static void main(String[] args)", "diff": ["-    d.setTopComponent(new JLabel(\"Select a folder so open\", UIManager.getIcon(\"OptionPane.informationIcon\"), JLabel.LEFT));", "+    d.setTopComponent(new JLabel(\"Select a folder\", UIManager.getIcon(\"OptionPane.informationIcon\"), JLabel.LEFT));", "+    d.setSelectedDirectory(new File(\"/home/jlugo/junk\"));", "+    d.setFileDisplayManager(edu.rice.cs.drjava.ui.MainFrame.getFileDisplayManager());", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "159856cd9c0bfdff5e5f053a7374038f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "14370880ba431a91577f4a6da91962f3187c5d5d", "commitAfterChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "methodNumberBeforeChange": 203, "methodNumberAfterChange": 203, "signatureBeforeChange": "     @Override public void classFileError(ClassFileError e)", "signatureAfterChange": "     @Override public void classFileError(ClassFileError e)", "diff": ["+      _log.log(\"classFileError() called; notifying JUnitDone\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "159881c5e9532a589332f3a74c827d29", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 450, "methodNumberAfterChange": 776, "signatureBeforeChange": "    final private boolean jj_3R_240()", "signatureAfterChange": "    final private boolean jj_3R_520()", "diff": ["-", "-  final private boolean jj_3R_240() {", "-    if (jj_3R_267()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_295()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_520() {", "+    if (jj_3R_537()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_538()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "159ea6df85b557d228bdd4e766b46c8d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "          public void run()", "signatureAfterChange": "          public void run()", "diff": ["-      readLock();", "+      acquireReadLock();", "-      finally { readUnlock(); }", "+      finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15b8d4569eeaa410b680ac9c4bdde201", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TopLevelContext.java", "commitBeforeChange": "6b388fb1877469cd91350296fabdf9fe8d522b74", "commitAfterChange": "b5cc61b9509dcda722d6dd7d5605a055e9915381", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public Type typeContainingMethod(String name, TypeSystem ts) throws AmbiguousNameException", "signatureAfterChange": "   public ClassType typeContainingMethod(String name, TypeSystem ts) throws AmbiguousNameException", "diff": ["-  public Type typeContainingMethod(String name, TypeSystem ts) throws AmbiguousNameException {", "+  public ClassType typeContainingMethod(String name, TypeSystem ts) throws AmbiguousNameException {", "-    Type result = explicitImport == null ? null : ts.makeClassType(explicitImport);", "+    ClassType result = explicitImport == null ? null : ts.makeClassType(explicitImport);", "-      LinkedList<Type> onDemandMatches = new LinkedList<Type>();", "+      LinkedList<ClassType> onDemandMatches = new LinkedList<ClassType>();", "-        Type t = ts.makeClassType(c);", "+        ClassType t = ts.makeClassType(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15bd8470ba217410c73cdfe0c459f156", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "21eee51b311a5265aaeccc0b894dd0e2ea618d8f", "commitAfterChange": "f3858a964f9ea938578caa831cc995c6a3349a8a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   protected int getDebugPort()", "signatureAfterChange": "   protected int getDebugPort()", "diff": ["-    try {", "-      port = _model.getDebugPort();", "-    }", "-    catch (IOException ioe) {", "-      // Can't find port; don't use debugger", "+    if (CodeStatus.DEVELOPMENT) {", "+      try {", "+        port = _model.getDebugPort();", "+      }", "+      catch (IOException ioe) {", "+        // Can't find port; don't use debugger", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15bf778166d5fd35e1ff49a51997f4a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 387, "methodNumberAfterChange": 387, "signatureBeforeChange": "     public int _getFirstNonWSCharPos(int pos, boolean acceptComments) throws BadLocationException", "signatureAfterChange": "     public int getFirstNonWSCharPos(int pos, boolean acceptComments) throws BadLocationException", "diff": ["+    /** Only runs in the event thread. */", "+    public int getFirstNonWSCharPos(int pos, boolean acceptComments) throws BadLocationException {", "+      return getDocument().getFirstNonWSCharPos(pos, acceptComments);", "-    public int _getFirstNonWSCharPos(int pos, boolean acceptComments) throws BadLocationException {", "-      return getDocument()._getFirstNonWSCharPos(pos, acceptComments);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15c216a44cb22d5528be840bb367b12d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "2500166c0751d6a8cb3d1502502bde53fcc48afb", "commitAfterChange": "e8cc87f4c1373cc71556480da6b0490c23688c68", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException", "diff": ["-    File projectRoot = projectFile.getParentFile();", "+    //File projectRoot = projectFile.getParentFile();", "-    setFileGroupingState(_makeProjectFileGroupingState(buildDir, projectRoot));", "+    setFileGroupingState(_makeProjectFileGroupingState(buildDir, projectFile));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15c493df575653c02ba4e6e33535bd22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "05448f4a16d388258dac3b5fe6469699fb11175e", "commitAfterChange": "b128df4fa9d8df79a76ba9e19a170c160365e646", "methodNumberBeforeChange": 391, "methodNumberAfterChange": 391, "signatureBeforeChange": "   private void _newProject()", "signatureAfterChange": "   private void _newProject()", "diff": ["+    _saveChooser.setMultiSelectionEnabled(false);", "-      if (pf.exists() && !_verifyOverwrite()) { return; }", "+      if ((pf==null) || (pf.exists() && !_verifyOverwrite())) { return; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1603e334554ed8fb66af41617fcc173e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": "     @Override public Type visit(SimpleFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(SimpleFieldAccess node)", "diff": ["-        ", "-        // TODO: Check accessibility of field", "+        checkAccessibility(ref.field(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1608c890e601449c95a0bf6f48689314", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testErrorInSuperClass() throws Exception", "signatureAfterChange": "   public void testErrorInSuperClass() throws Exception", "diff": ["+    debug.logStart();", "-    ", "-    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1615581785e199e69e3b0d04f498a7a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1639b3f1b3160d5e213e76fb290ae016d8915dec", "commitAfterChange": "2f98d714c8ae956f9af2a1a53cad3b01a015d6ea", "methodNumberBeforeChange": 369, "methodNumberAfterChange": 369, "signatureBeforeChange": "      public void activeDocumentChanged(final OpenDefinitionsDocument active)", "signatureAfterChange": "      public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["-      try {", "-        Utilities.invokeAndWait(new Runnable() {", "-          public void run() {", "-            _recentDocFrame.pokeDocument(active);", "-            _switchDefScrollPane();", "-            ", "-            boolean isModified = active.isModifiedSinceSave();", "-            boolean canCompile = (!isModified && !active.isUntitled());", "-            _saveAction.setEnabled(!canCompile);", "-            _revertAction.setEnabled(!active.isUntitled());", "-            ", "-            // Update error highlights", "-            int pos = _currentDefPane.getCaretPosition();", "-            _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "-            ", "-            // Update FileChoosers' directory", "-            _setCurrentDirectory(active);", "-            ", "-            // Update title and position", "-            updateFileTitle();", "-            _currentDefPane.requestFocusInWindow();", "-            _posListener.updateLocation();", "-            ", "-            // update display (adding \"*\") in navigatgorPane", "-            if (isModified) _model.getDocumentNavigator().repaint();", "-            ", "-            ", "-            try { active.revertIfModifiedOnDisk(); }", "-            catch (FileMovedException fme) { _showFileMovedError(fme); }", "-            catch (IOException e) { _showIOError(e); }", "-            ", "-            // Change Find/Replace to the new defpane", "-            if (_findReplace.isDisplayed()) {", "-              _findReplace.stopListening();", "-              _findReplace.beginListeningTo(_currentDefPane);", "-              //uninstallFindReplaceDialog(_findReplace);", "-              //installFindReplaceDialog(_findReplace);", "-            }", "+//      try {  // used or invokeAndWait variation", "+      Utilities.invokeLater(new Runnable() {  // invokeAndWait is arguably better but it may create occasional deadlocks.", "+        public void run() {", "+          _recentDocFrame.pokeDocument(active);", "+          _switchDefScrollPane();", "+          ", "+          boolean isModified = active.isModifiedSinceSave();", "+          boolean canCompile = (!isModified && !active.isUntitled());", "+          _saveAction.setEnabled(!canCompile);", "+          _revertAction.setEnabled(!active.isUntitled());", "+          ", "+          // Update error highlights", "+          int pos = _currentDefPane.getCaretPosition();", "+          _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "+          ", "+          // Update FileChoosers' directory", "+          _setCurrentDirectory(active);", "+          ", "+          // Update title and position", "+          updateFileTitle();", "+          _currentDefPane.requestFocusInWindow();", "+          _posListener.updateLocation();", "+          ", "+          // update display (adding \"*\") in navigatgorPane", "+          if (isModified) _model.getDocumentNavigator().repaint();", "+          ", "+          ", "+          try { active.revertIfModifiedOnDisk(); }", "+          catch (FileMovedException fme) { _showFileMovedError(fme); }", "+          catch (IOException e) { _showIOError(e); }", "+          ", "+          // Change Find/Replace to the new defpane", "+          if (_findReplace.isDisplayed()) {", "+            _findReplace.stopListening();", "+            _findReplace.beginListeningTo(_currentDefPane);", "+            //uninstallFindReplaceDialog(_findReplace);", "+            //installFindReplaceDialog(_findReplace);", "-        });", "-      }", "-      catch(InterruptedException e) { throw new UnexpectedException(e); }", "+        }", "+      });", "+//      }  // used for invokeAndWait variation", "+//      catch(InterruptedException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "165ddacbcdff53f01f896751a89d75eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 666, "methodNumberAfterChange": 622, "signatureBeforeChange": "    final private boolean jj_3R_86()", "signatureAfterChange": "    final private boolean jj_3R_90()", "diff": ["+", "+  final private boolean jj_3R_90() {", "+    if (jj_3R_122()) return true;", "+    if (jj_scan_token(INTERFACE)) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_86() {", "-    if (jj_3R_123()) return true;", "-    if (jj_scan_token(CLASS)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1663aa37a667f735665d7c715d85a44b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 607, "methodNumberAfterChange": 445, "signatureBeforeChange": "    final private boolean jj_3R_200()", "signatureAfterChange": "    final private boolean jj_3R_197()", "diff": ["+  final private boolean jj_3R_197() {", "+    if (jj_3R_227()) return true;", "+      if (jj_3R_273()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_200() {", "-    if (jj_3R_222()) return true;", "-      if (jj_3R_285()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1688fee6c2255a9c61de6873047dda67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "e656613109a12add4ad6c51f7040ce36731c0f8b", "commitAfterChange": "838397e908a24e107f724695c1466c1c498ec946", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testDisplayFilename() throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   public void testDisplayFilename() throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["-    assertEquals(\"untitled display filename\", \"(Untitled)\", _sdModel.getDisplayFilename(doc));", "+    assertEquals(\"untitled display filename\", \"(Untitled)\", _sdModel.getDisplayFileName(doc));", "-                 _sdModel.getDisplayFilename(doc));", "+                 _sdModel.getDisplayFileName(doc));", "-    assertEquals(\".txt display filename\", name, _sdModel.getDisplayFilename(doc));", "+    assertEquals(\".txt display filename\", name, _sdModel.getDisplayFileName(doc));", "-    assertEquals(\".java.txt display filename\", name, _sdModel.getDisplayFilename(doc));", "+    assertEquals(\".java.txt display filename\", name, _sdModel.getDisplayFileName(doc));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1693723f122f9871c47e15ca8a0599dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 366, "methodNumberAfterChange": 349, "signatureBeforeChange": "    final private boolean jj_3R_467()", "signatureAfterChange": "    final private boolean jj_3R_358()", "diff": ["+  final private boolean jj_3R_358() {", "+    if (jj_3R_366()) return true;", "+      if (jj_3R_374()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_467() {", "-    if (jj_3R_317()) return true;", "-      if (jj_3R_474()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1696daf7335612c95c5187591a683d7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "68368361f4380d060555d6ff4452e2a0dbbd3540", "commitAfterChange": "c501ef0b570ed4157af804435d399fc27ecf4e4e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "        private void _createTree()", "signatureAfterChange": "        private void _createTree()", "diff": ["+    DefaultTreeCellRenderer dtcr = new DefaultTreeCellRenderer();", "+    dtcr.setLeafIcon(null);", "+    dtcr.setOpenIcon(null);", "+    dtcr.setClosedIcon(null);", "+    _tree.setCellRenderer(dtcr);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16bc8153fab7b13116f75126d3e27136", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 249, "methodNumberAfterChange": 772, "signatureBeforeChange": "    final private boolean jj_3R_516()", "signatureAfterChange": "    final private boolean jj_3R_537()", "diff": ["-", "-  final private boolean jj_3R_516() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(30)) jj_scanpos = xsp;", "-    if (jj_3R_278()) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_525()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_537() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(30)) jj_scanpos = xsp;", "+    if (jj_3R_257()) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_547()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16f15350d443ec1187a9a33e1160cf30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Void forCatchBlock(CatchBlock that)", "signatureAfterChange": "   public Void forCatchBlock(CatchBlock that)", "diff": ["-    b.getStatements().visit(new BodyBodyIntermediateVisitor(bd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    b.getStatements().visit(new BodyBodyIntermediateVisitor(bd, _file, _package, _importedFiles, _importedPackages, ", "+                                                            _classNamesInThisFile, continuations, _innerClassesToBeParsed));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16fa16711526507f8f1bf90d99d5b2d6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "63cffca72f6a1e6647332e3c5d09c544e2cf35f3", "commitAfterChange": "03e8c58726828f3ddf7d6eb7f633023068dad9fe", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 300, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["-        _interactionsPane.requestFocus();", "+        _interactionsPane.requestFocusInWindow();", "-        _consolePane.requestFocus();", "+        _consolePane.requestFocusInWindow();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16fdb1f89b4843efb0f20c45138293a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 605, "methodNumberAfterChange": 607, "signatureBeforeChange": "    final private boolean jj_3R_250()", "signatureAfterChange": "    final private boolean jj_3R_258()", "diff": ["-  final private boolean jj_3R_250() {", "-    if (jj_scan_token(HOOK)) return true;", "-    if (jj_3R_105()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_156()) return true;", "+", "+  final private boolean jj_3R_258() {", "+    if (jj_scan_token(HOOK)) return true;", "+    if (jj_3R_107()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_159()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "171430bc556eb38887171e79f3b03c82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e7660fffdb51451a3d4a61981945f6529addb874", "commitAfterChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "methodNumberBeforeChange": 349, "methodNumberAfterChange": 350, "signatureBeforeChange": "      private void _openProjectUpdate()", "signatureAfterChange": "      private void _openProjectUpdate()", "diff": ["+      _exportProjectInOldFormatAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "174eb4dd0658cb01449926721e55a1c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "   public Class visit(PreDecrement node)", "signatureAfterChange": "   public Class visit(PreDecrement node)", "diff": ["-    Class c  = (Class)exp.acceptVisitor(this);", "-    ", "+    Class c  = exp.acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17706b6e085e6246d7a772f688dcab63", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 705, "methodNumberAfterChange": 776, "signatureBeforeChange": "    final private boolean jj_3R_541()", "signatureAfterChange": "    final private boolean jj_3R_595()", "diff": ["-", "-  final private boolean jj_3R_541() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_560()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_561()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_595() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_599()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_600()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1772e45bba7faa594ce447cae2b7bcc6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BackSlashTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected void setUp()", "signatureAfterChange": " \t \tprotected void setUp()", "diff": ["-\t\t\tmodel0 = new ReducedModel();", "-\t\t\tmodel1 = new ReducedModel();", "-\t\t\tmodel2 = new ReducedModel();", "+\t\t\tmodel0 = new ReducedModelControl();", "+\t\t\tmodel1 = new ReducedModelControl();", "+\t\t\tmodel2 = new ReducedModelControl();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1784fe94c4ff974546a61feb83202ecb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 412, "methodNumberAfterChange": 387, "signatureBeforeChange": "    final private boolean jj_3R_306()", "signatureAfterChange": "    final private boolean jj_3R_316()", "diff": ["+", "+  final private boolean jj_3R_316() {", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_105()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_280()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_306() {", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_102()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_270()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17a0a4fc33e1ac65c6cf88814b92a3a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ProcessCreator.java", "commitBeforeChange": "e02b291d62bdaa0ea7b37dd3f2ab84515aaa6d58", "commitAfterChange": "8d09927a54fdf6b15f8ba5f6b7e80366b0cf24be", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Process start() throws IOException", "signatureAfterChange": "   public Process start() throws IOException", "diff": ["-    String workdir = StringOps.replaceVariables(_workdir, PropertyMaps.ONLY, PropertyMaps.GET_CURRENT);", "+    String workdir = StringOps.unescapeSpacesWith1bHex(StringOps.replaceVariables(_workdir, PropertyMaps.ONLY, PropertyMaps.GET_CURRENT));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17a5661bf6c7f051e76888c1f883644c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/HTMLFrame.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public HTMLFrame(String frameName, URL introUrl, URL indexUrl, String iconString, File baseDir)", "signatureAfterChange": "   public HTMLFrame(String frameName, URL introUrl, URL indexUrl, String iconString, File baseDir)", "diff": ["+    ", "+    initDone(); // call mandated by SwingFrame contract"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17acdd600c41db22117102bb52878949", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "eclipse/src/edu/rice/cs/drjava/plugins/eclipse/EclipsePlugin.java", "commitBeforeChange": "bd3609d73f910b773bb009bd9fec801547e38ce7", "commitAfterChange": "ee77a4b190fe991345758d9ffc949583a7709b61", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public EclipsePlugin(IPluginDescriptor descriptor)", "signatureAfterChange": "   public EclipsePlugin()", "diff": ["-  public EclipsePlugin(IPluginDescriptor descriptor) {", "-    super(descriptor);", "+  public EclipsePlugin() {", "+    super();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17b6125c36e6bdb7db7f03785b9b2de7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testNoClassFile() throws Exception", "signatureAfterChange": "   public void testNoClassFile() throws Exception", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "+", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17c118832fcd45e19bc77c21e8b66d0a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 688, "methodNumberAfterChange": 574, "signatureBeforeChange": "    final private boolean jj_3R_141()", "signatureAfterChange": "    final private boolean jj_3R_144()", "diff": ["+", "+  final private boolean jj_3R_144() {", "+    if (jj_scan_token(COMMA)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_207()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_208()) return true;", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_141() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_204()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_205()) return true;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17d61be0aa83ae30eb2fdd2886b8f286", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "   void collapsePaths(HashSet<String> paths)", "signatureAfterChange": "   void collapsePaths(HashSet<String> paths)", "diff": ["-    ArrayList<String> list = new ArrayList<String>();", "+//    ArrayList<String> list = new ArrayList<String>();", "-        if (shouldCollapse) { ", "-          collapsePath(tp);", "-        }", "+        if (shouldCollapse) { collapsePath(tp); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17dd4433f038fdabec866fd5d00b7d20", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "      void collapsePaths(HashSet<String> paths)", "signatureAfterChange": "   void collapsePaths(HashSet<String> paths)", "diff": ["-  ", "+  /** Set variation of collapsePaths(String ...).  Private except for testing code. */", "-    synchronized (_model) {", "+//    synchronized (_model) {", "-    }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17fde7be3ef7cda072008e4bd657bd17", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "      public void testForComplexThisConstructorInvocation()", "signatureAfterChange": "      public void testForComplexThisConstructorInvocation()", "diff": ["-      ComplexThisConstructorInvocation ctci = new ComplexThisConstructorInvocation(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"something\")), new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[0]));", "+      ComplexThisConstructorInvocation ctci = new ComplexThisConstructorInvocation(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"something\")), new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1822fe54757466b629cb2aef3b3aaff1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "commitAfterChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 69, "signatureBeforeChange": "   protected void removeUpdate(AbstractDocument.DefaultDocumentEvent chng)", "signatureAfterChange": "   protected void removeUpdate(AbstractDocument.DefaultDocumentEvent chng)", "diff": ["-   */", "+    */", "-    clearCache();", "-", "+    ", "+      ", "-", "+      ", "+      _clearCache(offset);  // Selectively clear the query cache", "+      ", "-", "+      ", "-      addUndoRedo(chng,undoCommand,doCommand);", "+      addUndoRedo(chng, undoCommand, doCommand);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1828f74a3cb5c9877ad1291738ce5b30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testGlassPaneEditableState()", "signatureAfterChange": "   public void testGlassPaneEditableState()", "diff": ["-    Utilities.invokeAndWait(new Runnable() { public void run() { _frame.hourglassOn(); } });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { _frame.simpleHourglassOn(); } });", "-    Utilities.invokeAndWait(new Runnable() { public void run() { _frame.hourglassOff(); } });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { _frame.simpleHourglassOff(); } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "182f8e7b4f6aca44c05608bb7ec36234", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlusTest.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void testAfterArrayAssign() throws BadLocationException", "signatureAfterChange": "     public void testAfterArrayAssign() throws BadLocationException", "diff": ["-    IndentRuleAction rule = new ActionStartPrevStmtPlus(\"\", false);", "+    IndentRuleAction rule = new ActionStartPrevStmtPlus(0, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "183d3785acb2a9276b4c5c2a7022cde6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "commitAfterChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public void testWorksAfterRestartConstant() throws Throwable", "signatureAfterChange": "    public void testWorksAfterRestartConstant() throws Throwable", "diff": ["-    _jvm.killInterpreterJVM(FileOps.NULL_FILE);  // \"\" is not null: start back up", "+    _jvm.restartInterpreterJVM(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "184524ba7db5349256e131755c297a8d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsEditorKit.java", "commitBeforeChange": "b05d6101d72721dc72e1089de24af7a09f520884", "commitAfterChange": "1c36c4f5a2718b62938a20268edf5b2f24819a2b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void actionPerformed(ActionEvent e)", "signatureAfterChange": "      public void actionPerformed(ActionEvent e)", "diff": ["-      LOG.log(\"BeginWordAction.actionPerformed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18687f1cf7a373a1985baf322f6b3974", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandler.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private void _cleanUp(Event e)", "signatureAfterChange": "      private void _cleanUp(Event e)", "diff": ["-      _manager.setCurrentThread((DebugThreadData) null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "186d007a376c9f0219dca13a591877ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/AFindReplaceMachineState.java", "commitBeforeChange": "82f2ed0c10073d0b45d405a9ea26c9aa3f37c661", "commitAfterChange": "6bfab9f5cad6f12d0935dd59b83d99bfc86909eb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   private int _replaceAllInCurrentDoc()", "signatureAfterChange": "   private int _replaceAllInCurrentDoc()", "diff": ["+    _doc.acquireReadLock();", "-    catch (BadLocationException e) {", "-      throw new UnexpectedException(e);", "-    }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1870d244b5616de2a6107b683f47afae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 676, "signatureBeforeChange": "    final private boolean jj_3R_106()", "signatureAfterChange": "    final private boolean jj_3R_255()", "diff": ["-", "-  final private boolean jj_3R_106() {", "-    if (jj_3R_157()) {", "-    if (jj_3R_158()) return true;", "+", "+  final private boolean jj_3R_255() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_282()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_283()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1879b66f7dc78a42af0e1cf9b58c6dc8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 403, "methodNumberAfterChange": 403, "signatureBeforeChange": "          public String getText()", "signatureAfterChange": "          public String getText()", "diff": ["-      doc.readLock();", "+      doc.acquireReadLock();", "-      finally { readUnlock(); }", "+      finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "187d7cc22a1bab2b2ac7768710e5edf6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/TreeUtilitiesTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public void testClassToType()", "signatureAfterChange": "    public void testClassToType()", "diff": ["-                   equals(TreeUtilities.classToType(int.class)));", "+                   equals(TreeUtilities.classToTypeName(int.class)));", "-                   equals(TreeUtilities.classToType(double.class)));", "+                   equals(TreeUtilities.classToTypeName(double.class)));", "-                   equals(TreeUtilities.classToType(long.class)));", "+                   equals(TreeUtilities.classToTypeName(long.class)));", "-                   equals(TreeUtilities.classToType(float.class)));", "+                   equals(TreeUtilities.classToTypeName(float.class)));", "-                   equals(TreeUtilities.classToType(char.class)));", "+                   equals(TreeUtilities.classToTypeName(char.class)));", "-                   equals(TreeUtilities.classToType(byte.class)));", "+                   equals(TreeUtilities.classToTypeName(byte.class)));", "-                   equals(TreeUtilities.classToType(short.class)));", "+                   equals(TreeUtilities.classToTypeName(short.class)));", "-                   equals(TreeUtilities.classToType(boolean.class)));", "+                   equals(TreeUtilities.classToTypeName(boolean.class)));", "-                   equals(TreeUtilities.classToType(void.class)));", "+                   equals(TreeUtilities.classToTypeName(void.class)));", "-                   equals(TreeUtilities.classToType(int[].class)));", "+                   equals(TreeUtilities.classToTypeName(int[].class)));", "-                   equals(TreeUtilities.classToType(Integer.class)));", "+                   equals(TreeUtilities.classToTypeName(Integer.class)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "187e4d7e5dc12f256e21511bbee65b0f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 422, "methodNumberAfterChange": 665, "signatureBeforeChange": "    final private boolean jj_3R_299()", "signatureAfterChange": "    final private boolean jj_3R_245()", "diff": ["-  final private boolean jj_3R_299() {", "-    if (jj_3R_317()) return true;", "+", "+  final private boolean jj_3R_245() {", "+    if (jj_3R_176()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "188010abd1c21a8ab7b25613844005d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "commitAfterChange": "b1aa79fb7a1aab3c0f34f51e168c7e7a945d8cf6", "methodNumberBeforeChange": 205, "methodNumberAfterChange": 205, "signatureBeforeChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "signatureAfterChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "diff": ["-          System.out.println(fixPathForNavigator(file.getCanonicalPath()));", "+          //System.out.println(fixPathForNavigator(file.getCanonicalPath()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1882bd59fa2efaea61e09109e246b997", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 712, "methodNumberAfterChange": 706, "signatureBeforeChange": "    final private boolean jj_3_28()", "signatureAfterChange": "    final private boolean jj_3_29()", "diff": ["+  final private boolean jj_3_29() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_97()) return true;", "+    if (jj_3R_475()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3_28() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_96()) return true;", "-    if (jj_3R_473()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "189106710eb6fca3514710ba99034966", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 352, "methodNumberAfterChange": 314, "signatureBeforeChange": "    final private boolean jj_3R_453()", "signatureAfterChange": "    final private boolean jj_3R_454()", "diff": ["+  final private boolean jj_3R_454() {", "+    if (jj_3R_470()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_494()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_453() {", "-    if (jj_3R_465()) return true;", "-      if (jj_3R_491()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18921c2e6fca73ed02aaecbb8c51faea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 286, "methodNumberAfterChange": 706, "signatureBeforeChange": "    final private boolean jj_3R_425()", "signatureAfterChange": "    final private boolean jj_3R_476()", "diff": ["-", "-  final private boolean jj_3R_425() {", "-    if (jj_3R_84()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_444()) jj_scanpos = xsp;", "+  final private boolean jj_3R_476() {", "+    if (jj_3R_88()) return true;", "+    if (jj_3R_478()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18aa0f092f0ef072816dba1dabf46f07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 272, "methodNumberAfterChange": 234, "signatureBeforeChange": "    final private boolean jj_3R_243()", "signatureAfterChange": "    final private boolean jj_3R_51()", "diff": ["-  final private boolean jj_3R_243() {", "-    if (jj_3R_40()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_246()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_51() {", "+    if (jj_3R_88()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_89()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18d69bc694a7f2f593a6869ee1e325ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "df9cbdf4ec8cbcbc3942b966a48a15d33dcac7ed", "commitAfterChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private File mkTempDir(String funnyName)", "signatureAfterChange": "   private File mkTempDir(String funnyName)", "diff": ["-", "+    System.err.println(\"newDirectory.exists() = \" + newDirectory.exists());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "190463c87d39c201f4d28a7c435ed827", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "     public ClasspathVector getClasspath()", "signatureAfterChange": "     public ClassPathVector getClassPath()", "diff": ["-    public ClasspathVector getClasspath() { return new ClasspathVector(); }", "+    public ClassPathVector getClassPath() { return new ClassPathVector(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "190916be171f4be7dca0fd93409b4a52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   private FindResult findNext(boolean searchAll)", "signatureAfterChange": "   private FindResult findNext(boolean searchAll)", "diff": ["-    _doc.readLock();", "+    _doc.acquireReadLock();", "-    finally { _doc.readUnlock(); }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1909627743323429b2fdf1c2e9f7221e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringView.java", "commitBeforeChange": "240a30cf8c6d31d9516bfba9bb2eb458c6b4faf7", "commitAfterChange": "8ed63fc06e982cfe66ff539657385f71f2d1dbd3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   private void setFormattingForState(Graphics g, int state)", "signatureAfterChange": "   private void setFormattingForState(Graphics g, int state)", "diff": ["+    g.setFont(MAIN_FONT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "190b23886e49a73ae78d24222a4d4118", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "          public void xtestForPrimitiveTypeDoFirst()", "signatureAfterChange": "          public void xtestForPrimitiveTypeDoFirst()", "diff": ["-      SourceInfo noInfo = JExprParser.NO_SOURCE_INFO;", "+      SourceInfo noInfo = SourceInfo.NO_INFO;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1916630564d078cfcad24c3a8e6f6275", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testInfiniteLoop() throws Exception", "signatureAfterChange": "   public void testInfiniteLoop() throws Exception", "diff": ["-    ", "+", "-    ", "+", "-    if (_model.getNumErrors() > 0) {", "+    if (_model.getCompilerModel().getNumErrors() > 0) {", "-  }  ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "191e1c6a0604dd7ded1acd41be3be64b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "634bad3816e5a89c71c174f08f33c3f80727cfeb", "commitAfterChange": "d1ffac675273323f7a1b9777462d16896d09a1af", "methodNumberBeforeChange": 356, "methodNumberAfterChange": 357, "signatureBeforeChange": "          public void threadLocationUpdated(final OpenDefinitionsDocument doc,                                       final int lineNumber,                                       final boolean shouldHighlight)", "signatureAfterChange": "          public void threadLocationUpdated(final OpenDefinitionsDocument doc,                                       final int lineNumber,                                       final boolean shouldHighlight)", "diff": ["-          if (!_model.getActiveDocument().equals(doc)) _model.setActiveDocument(doc);", "+//          if (!_model.getActiveDocument().equals(doc)) ", "+            _model.setActiveDocument(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "191ed0c4283aa5a68e172625cea7ad9e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 579, "methodNumberAfterChange": 350, "signatureBeforeChange": "    final private boolean jj_3R_159()", "signatureAfterChange": "    final private boolean jj_3R_198()", "diff": ["+  final private boolean jj_3R_198() {", "+    if (jj_3R_91()) return true;", "-", "-  final private boolean jj_3R_159() {", "-    if (jj_3R_95()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19262ad5d7f1ebb88a2b9abe23009e56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsController.java", "commitBeforeChange": "216fad0aa8523dbc9402b5e83d2d0e4e9e0fc64e", "commitAfterChange": "4297ff328013eaae7e900c94d6d5500e0fe9b17c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   void moveToPrompt()", "signatureAfterChange": "   void moveToPrompt()", "diff": ["+    _view.getTextPane().showSelection();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "194572951e0b5f047f6881b3df84e921", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 673, "methodNumberAfterChange": 670, "signatureBeforeChange": "    final private boolean jj_3R_499()", "signatureAfterChange": "    final private boolean jj_3R_442()", "diff": ["-", "-  final private boolean jj_3R_499() {", "-    if (jj_3R_92()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3_22()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_442() {", "+    if (jj_3R_94()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_24()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "196e836205c778f0ab401e54e77ebca7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "c90ce4d56017660360cfc75bcf5d4fc50796ac80", "commitAfterChange": "f1daacb1f9c546b2b765d3fc6cc41bd412931a0f", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "          protected void doStart()", "signatureAfterChange": "          protected void doStart()", "diff": ["-      try { _process.value(); /* initialize the process */ }", "+      try {", "+        _process.value(); /* initialize the process */", "+        discardProcessErr(_process.value()); /* prevent the err buffer from filling up */", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1970f9d3e4dff7f8b1509c7b748724b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsController.java", "commitBeforeChange": "8ec56b2c1078507e922e0c2657dbc71dde965ce2", "commitAfterChange": "4982367a9f8342b35bf4d2b855165f1464002815", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void dispose()", "signatureAfterChange": "   public void dispose()", "diff": ["+    ", "+    // Remove preference listener", "+    IPreferenceStore store = EclipsePlugin.getDefault().getPreferenceStore();", "+    store.removePropertyChangeListener(_preferenceListener);", "+    JFaceResources.getFontRegistry().removeListener(_preferenceListener);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19995dd71d4070ae30641c45e5afc59f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": "     public File getSourceRoot() throws InvalidPackageException", "signatureAfterChange": "     public File getSourceRoot() throws InvalidPackageException", "diff": ["-      return _getSourceRoot(_doc.getPackageName());", "+      return _getSourceRoot(getDocument().getPackageName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "199d1e955e3272eea77ff155f1f45dd1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "commitAfterChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          public void saveBeforeCompile()", "signatureAfterChange": "          public void saveBeforeCompile()", "diff": ["-      try {", "-        _model.saveAllFiles(new FileSaveSelector() {", "-          public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "-          public boolean warnFileOpen(File f) { return false; }", "-          public boolean verifyOverwrite() { return true; }", "-          public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "-        });", "-      }", "-      catch(IOException e) { throw new UnexpectedException(e); }  ", "+      saveAllFiles(_model, new FileSaveSelector() {", "+        public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "+        public boolean warnFileOpen(File f) { return false; }", "+        public boolean verifyOverwrite() { return true; }", "+        public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "+      });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19a5cd5e6319678e5a3ab3fdfc8a96ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 512, "methodNumberAfterChange": 876, "signatureBeforeChange": "    final private boolean jj_3_39()", "signatureAfterChange": "    final private boolean jj_3_67()", "diff": ["-", "-  final private boolean jj_3_39() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_104()) return true;", "-    if (jj_3R_558()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3_67() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_101()) return true;", "+    if (jj_3R_377()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19b7213d4059b3fa8c32da8e5ce75730", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocument.java", "commitBeforeChange": "3bfda0ffd8a22eda2f2daab913b510305e1ef801", "commitAfterChange": "02d5c825c13aaa4caad6b7e4e89ccbdbfdc16c9f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected void endCompoundEdit(int key)", "signatureAfterChange": "      protected void endCompoundEdit(int key)", "diff": ["-  protected int startCompoundEdit() { return 0; /* Do nothing */ }", "-  protected void endCompoundEdit(int key) { /* Do nothing */ }", "+  ", "+  protected void endCompoundEdit(int key) { _undoManager.endCompoundEdit(key); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19be82922719264ed84dced44605090b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "aa79388b4b48beaf4e69dfd58d93bc4faeacb281", "commitAfterChange": "df472bcb2bf0d8ba296911d59ac250fe6e447811", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "   synchronized void currThreadDied() throws DebugException", "signatureAfterChange": "   synchronized void currThreadDied() throws DebugException", "diff": ["-    if( _runningThread != null ){", "-      _deadThreads.add(new DebugThreadData(_runningThread));", "-      _runningThread = null;", "-    }", "+    _runningThread = null;", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19dc1bff5d6e0fee77d525dd1893a014", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CommentTest.java", "commitBeforeChange": "ddaa83f5d7e463d396f773edc05bd85484692b8a", "commitAfterChange": "c0411b7a6f6c403c7ffb73b1d0c38cb49fd33824", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testUncommentMultipleLines() throws BadLocationException", "signatureAfterChange": "   public void testUncommentMultipleLines() throws BadLocationException", "diff": ["-      \"// // Here is some abritrary text that should be uncommented.\\n\" +", "+      \"//// Here is some abritrary text that should be uncommented.\\n\" +", "-      \"      //* things up.\\n\" +", "-      \"//                    */ \\n\" +", "-      \"//         System.out.println(\\\"Aren't comments fun? // (yeah!)\\\")\";", "+      \"//  * things up.\\n\" +", "+      \"//  */ \\n\" +", "+      \"// System.out.println(\\\"Aren't comments fun? // (yeah!)\\\")\";", "-      \"/* along with a little bit of code, just to spice\\n\" +", "-      \" * things up.\\n\" +", "-      \" */ \\n\" +", "-      \"System.out.println(\\\"Aren't comments fun? // (yeah!)\\\")\";", "+      \" /* along with a little bit of code, just to spice\\n\" +", "+      \"  * things up.\\n\" +", "+      \"  */ \\n\" +", "+      \" System.out.println(\\\"Aren't comments fun? // (yeah!)\\\")\";", "-    _assertContents(\"These lines should be indented and have at most\"+", "-                    \"one level of commenting!\", uncommented, doc);", "+    _assertContents(\"These lines should have at most one level of commenting!\", uncommented, doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a12f89795d703f75dd84fc035dc94e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testOpenMultipleFiles() throws BadLocationException, IOException", "signatureAfterChange": "   public void testOpenMultipleFiles() throws BadLocationException, IOException", "diff": ["+    ", "+    _log.log(\"testOpenMultipleFiles completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a521c6e42a12abc6b54d803b9ee99b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/AWTContainerNavigatorFactory.java", "commitBeforeChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "commitAfterChange": "6d55d86705248616cac5b324a7c528485ceb6104", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public IDocumentNavigator<ItemT> makeTreeNavigator(String name, final IDocumentNavigator<ItemT> parent,                                                  final List<Pair<String, INavigatorItemFilter<ItemT>>> l)", "signatureAfterChange": "     public IDocumentNavigator<ItemT> makeTreeNavigator(String name, final IDocumentNavigator<ItemT> parent,                                                  final List<Pair<String, INavigatorItemFilter<ItemT>>> l)", "diff": ["-   */", "+      */", "-      final IDocumentNavigator<ItemT> tbr = makeTreeNavigator(name);", "-      ", "-      Utilities.invokeAndWait(new Runnable() { ", "+      final IDocumentNavigator<ItemT> child = makeTreeNavigator(name);", "+      Utilities.invokeLater(new Runnable() { ", "-          ", "-          for(Pair<String, INavigatorItemFilter<ItemT>> p: l) { tbr.addTopLevelGroup(p.getFirst(), p.getSecond()); }", "-          ", "-          migrateNavigatorItems(tbr, parent);", "-          migrateListeners(tbr, parent);", "-        }", "+//          synchronized (child.getModelLock()) { // dropped because of cost; each atomic action is still synchronized", "+            for(Pair<String, INavigatorItemFilter<ItemT>> p: l) { child.addTopLevelGroup(p.getFirst(), p.getSecond()); }", "+            migrateNavigatorItems(child, parent);", "+            migrateListeners(child, parent);", "+          }", "+//        }", "-      return tbr;", "+      return child;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a55d8ed122fdb7a506b29ef4834e895", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "25137aee8580e8df5512ad30c8f4503bd397d8af", "commitAfterChange": "439fa7b0a8454e4b1c686459e2e8c71117177e74", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void write() throws IOException", "signatureAfterChange": "   public void write() throws IOException", "diff": ["+      fw.write(\"\\n;; rooted at the (parent of the) project file\");", "-      fw.write(\"\\n\" + encodeFileRelative(_mainClass, \"  \"));", "+      fw.write(\"\\n\" + encodeFileRelative(_mainClass, \"  \", _projectFile));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a624d54c4a5e023090a858c79f389ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "3138149e59af557581689e53b212f79d04dd8105", "commitAfterChange": "2fc1b48ae47904f12ff70a4157426a6f949b079b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testMemoryLeak() throws InterruptedException, IOException", "signatureAfterChange": "   public void testMemoryLeak() throws InterruptedException, IOException", "diff": ["-    doc1.getLength(); // kick 2", "+    doc1.getCurrentLine(); // kick 2", "-    doc2.getLength(); // kick 3", "-    doc3.getLength(); // kick 4", "-    doc4.getLength(); // kick 5", "-    doc5.getLength(); // kick 1", "+    doc2.getCurrentLine(); // kick 3", "+    doc3.getCurrentLine(); // kick 4", "+    doc4.getCurrentLine(); // kick 5", "+    doc5.getCurrentLine(); // kick 1"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a8a5410f3521919bd720a480f2bab58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void move(int dist)", "signatureAfterChange": "   public void move(int dist)", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }   ", "+    finally { releaseReadLock(); }   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aadc4966c438d8cef1c1a245e08812a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaTestCase.java", "commitBeforeChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "commitAfterChange": "073854cddec32cfa8210669804563378e1d96566", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void setUp() throws Exception", "signatureAfterChange": "   protected void setUp() throws Exception", "diff": ["-    final String newName = System.getProperty(TEST_DRJAVA_CONFIG_PROPERTY);", "+    final String newName = System.getProperty(\"drjava.test.config\");", "+//    _log.log(\"newName = \" + newName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac3f197801747f5caf2060eff7726a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public void setWorkingDirectory(File f)", "signatureAfterChange": "   public void setWorkingDirectory(File f)", "diff": ["-    if (DrJava.getConfig().getSetting(STICKY_INTERACTIONS_DIRECTORY)) {", "-      // update the setting", "-      DrJava.getConfig().setSetting(LAST_INTERACTIONS_DIRECTORY, _state.getWorkingDirectory());", "-    }", "+    // update the setting", "+    DrJava.getConfig().setSetting(LAST_INTERACTIONS_DIRECTORY, _state.getWorkingDirectory());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aecae45a96ee9c6d31448e4e22d5176", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 540, "methodNumberAfterChange": 536, "signatureBeforeChange": "    final private boolean jj_3R_101()", "signatureAfterChange": "    final private boolean jj_3R_102()", "diff": ["-  final private boolean jj_3R_101() {", "-    if (jj_3R_156()) return true;", "+  final private boolean jj_3R_102() {", "+    if (jj_3R_160()) return true;", "-      if (jj_3_44()) { jj_scanpos = xsp; break; }", "+      if (jj_3_45()) { jj_scanpos = xsp; break; }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b0944520ab5f01d6986baf9702304d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EnumDeclaration.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    static List<Node> AddValues(String enumTypeName, List<Node> body, List<EnumConstant> consts)", "signatureAfterChange": "    static List<Node> AddValues(String enumTypeName, List<Node> body, List<EnumConstant> consts)", "diff": ["-    ReferenceType enumType = new ReferenceType(enumTypeName);", "-    Type valuesType = new ArrayType(enumType, 1);", "+    ReferenceTypeName enumType = new ReferenceTypeName(enumTypeName);", "+    TypeName valuesType = new ArrayTypeName(enumType, 1);", "-    ///*for testing jlugo code*/vparams.add(new FormalParameter(false, new ReferenceType(\"String\"), \"s\"));", "+    ///*for testing jlugo code*/vparams.add(new FormalParameter(false, new ReferenceTypeName(\"String\"), \"s\"));", "-    newbody.add(new MethodDeclaration(accessFlags, valuesType, \"values\", vparams, new LinkedList<ReferenceType>(), new BlockStatement(stmts)));", "+    newbody.add(new MethodDeclaration(accessFlags, valuesType, \"values\", vparams, new LinkedList<ReferenceTypeName>(), new BlockStatement(stmts)));", "-    voparams.add(new FormalParameter(false, new ReferenceType(\"String\"), \"s\"));", "+    voparams.add(new FormalParameter(false, new ReferenceTypeName(\"String\"), \"s\"));", "-    init.add(new VariableDeclaration(false, new IntType(), \"i\", new IntegerLiteral(\"0\")));", "+    init.add(new VariableDeclaration(false, new IntTypeName(), \"i\", new IntegerLiteral(\"0\")));", "-    stmtsOf.add(new ThrowStatement(new SimpleAllocation(new ReferenceType(\"IllegalArgumentException\"), args)));", "-    newbody.add(new MethodDeclaration(accessFlags, enumType, \"valueOf\", voparams, new LinkedList<ReferenceType>(), new BlockStatement(stmtsOf)));", "+    stmtsOf.add(new ThrowStatement(new SimpleAllocation(new ReferenceTypeName(\"IllegalArgumentException\"), args)));", "+    newbody.add(new MethodDeclaration(accessFlags, enumType, \"valueOf\", voparams, new LinkedList<ReferenceTypeName>(), new BlockStatement(stmtsOf)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b0ba348c2d351b61bf71e5a6c459ecf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlus.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    int lineStart = doc.getLineStartPos(here);  // find start of current line", "+    int lineStart = doc._getLineStartPos(here);  // find start of current line", "-    try { prevDelimiterPos = doc.findPrevDelimiter(lineStart, delims); }  // find pos of delimiter preceding line start", "+    try { prevDelimiterPos = doc._findPrevDelimiter(lineStart, delims); }  // find pos of delimiter preceding line start", "-        int testPos = doc.findPrevCharPos(prevDelimiterPos, ws);  // find char preceding ';' delimiter", "+        int testPos = doc._findPrevCharPos(prevDelimiterPos, ws);  // find char preceding ';' delimiter", "-        doc.setCurrentLocation(prevDelimiterPos + 1);   // move cursor to right of '}' or ')' delim", "-        prevDelimiterPos -= doc.balanceBackward() - 1;  // use matching '{' or '(' as delim", "-        doc.setCurrentLocation(here);", "+        doc._setCurrentLocation(prevDelimiterPos + 1);   // move cursor to right of '}' or ')' delim", "+        prevDelimiterPos -= doc._balanceBackward() - 1;  // use matching '{' or '(' as delim", "+        doc._setCurrentLocation(here);", "-    int indent = doc.getIndentOfCurrStmt(prevDelimiterPos, indentDelims);", "+    int indent = doc._getIndentOfCurrStmt(prevDelimiterPos, indentDelims);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b15bc4f4c1e8af3c91a7ffa399fc2ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "72163ebd454d71c0955c00c7a1a43c6fa207331b", "commitAfterChange": "cdddd415c8ee9888478b5a253ffbb086fce1ed57", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": "   private void _setUpToolBar()", "signatureAfterChange": "   private void _setUpToolBar()", "diff": ["-    _toolBar.add(_createToolbarButton(_cutAction));", "-    _toolBar.add(_createToolbarButton(_copyAction));", "-    _toolBar.add(_createToolbarButton(_pasteAction));", "+    _toolBar.add(_createToolbarButton(cutAction));", "+    _toolBar.add(_createToolbarButton(copyAction));", "+    _toolBar.add(_createToolbarButton(pasteAction));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b48e9f9a9c986e5651389ffcfe07289", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ConfigFileTest.java", "commitBeforeChange": "84e7921bd32edcfceaf3be1ebd8104fc4d274516", "commitAfterChange": "cd663e9bf0c95c5bb5b12db38fbcd366660d665e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testCustomConfigFile() throws IOException", "signatureAfterChange": "   public void testCustomConfigFile() throws IOException", "diff": ["+    //Tests if a user can put a default value in the .drjava file", "+    assertEquals(\"definitions.keyword.color\", Color.blue,", "+                 config.getSetting(OptionConstants.DEFINITIONS_KEYWORD_COLOR));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b591ef3c073ab42b4f79ae504940c04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "     public Object visit(DivideExpression node)", "signatureAfterChange": "   public Class visit(DivideExpression node)", "diff": ["+   */", "+  public Class visit(DivideExpression node) {", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ln.acceptVisitor(this);", "+    rn.acceptVisitor(this);", "+    Class c = visitNumericExpression(node, \"division.type\");", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.divide(c,", "+                                     ln.getProperty(NodeProperties.VALUE),", "+                                     rn.getProperty(NodeProperties.VALUE)));", "+    }", "+    return c;", "+  }", "-     */", "-    public Object visit(DivideExpression node) {", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-        ln.acceptVisitor(this);", "-        rn.acceptVisitor(this);", "-        Class c = visitNumericExpression(node, \"division.type\");", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.divide(c,", "-                                             ln.getProperty(NodeProperties.VALUE),", "-        }", "-        return c;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b5d9bf36ab25b70419374108d2aff40", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "a454f078c900245b418db671925f6207d6f1ff60", "commitAfterChange": "533552b81f1020221bb3fe1df1f370a4168db503", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void _insertNewBrace(String text,                                ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private void _insertNewBrace(String text,                                ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-    copyCursor.insert(Brace.MakeBrace(text, ReducedToken.FREE));", "+    copyCursor.insert(Brace.MakeBrace(text, FREE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b6a67d447acce76a4065133c44df1d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "591f8aac4f79eab75475a3d9dd862c3b019f02a1", "commitAfterChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void _insertBrace(String text)", "signatureAfterChange": "   private void _insertBrace(String text)", "diff": ["-    ", "-    else if (_cursor.current().isGap()) _cursor.insertBraceToGap(text);", "-    ", "+    else if (current().isGap()) _cursor.insertBraceToGap(text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b7347e41e9778327372e65589bfef2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b00931e37ad236142f85959e9fa324cbb5977b3e", "commitAfterChange": "2707043a47325658db92e0290e695128c6817bba", "methodNumberBeforeChange": 332, "methodNumberAfterChange": 332, "signatureBeforeChange": "               public void projectRunnableChanged()", "signatureAfterChange": "          public void projectRunnableChanged()", "diff": ["+      _saveProjectAction.setEnabled(_model.isProjectChanged());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b7620a502f61e613e10cbe350f03bb8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public int commentLines(int selStart, int selEnd)", "signatureAfterChange": "   public int commentLines(int selStart, int selEnd)", "diff": ["-      acquireWriteLock();", "-      try {     ", "+      acquireWriteLock(); ", "+      try {", "-          setCurrentLocation(selStart);", "-          Position oldCurrentPosition = createUnwrappedPosition(_currentLocation);", "-          _commentLine();   ", "+          setCurrentLocation(getLineStartPos(selStart));", "+//          Position oldCurrentPosition = createUnwrappedPosition(_currentLocation);", "+          _commentLine();", "-          //int caretPos = getCaretPosition();", "-          //_doc().setCurrentLocation(caretPos);", "-      catch (BadLocationException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b79d1e5ea7220f1f5701921bc2a9714", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 551, "methodNumberAfterChange": 544, "signatureBeforeChange": "    final private boolean jj_3R_367()", "signatureAfterChange": "    final private boolean jj_3R_451()", "diff": ["+  final private boolean jj_3R_451() {", "+    if (jj_3R_473()) return true;", "+      if (jj_3R_487()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_367() {", "-    if (jj_3R_373()) return true;", "-      if (jj_3R_386()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b7dd7b081681e435cdc1d81de8afabb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testInsertToDoc() throws BadLocationException", "signatureAfterChange": "   public void testInsertToDoc() throws BadLocationException", "diff": ["-    BraceReduction rm = _defModel.getReduced();", "-    assertEquals(\"2.1\", FREE, rm.getStateAtCurrent());", "-    rm.move(2);", "+    BraceReduction _reduced = _defModel.getReduced();", "+    assertEquals(\"2.1\", FREE, _reduced.getStateAtCurrent());", "+    _reduced.move(2);", "-    assertEquals(\"2.3\", \"/*\", rm.currentToken().getType());", "-    rm.move(2);", "+    assertEquals(\"2.3\", \"/*\", _reduced.currentToken().getType());", "+    _reduced.move(2);", "-    assertEquals(\"2.4\", true, rm.currentToken().isGap());", "-    assertEquals(\"2.5\", ReducedToken.INSIDE_BLOCK_COMMENT, rm.currentToken().getState());", "-    rm.move(2);", "+    assertEquals(\"2.4\", true, _reduced.currentToken().isGap());", "+    assertEquals(\"2.5\", ReducedToken.INSIDE_BLOCK_COMMENT, _reduced.currentToken().getState());", "+    _reduced.move(2);", "-    assertEquals(\"2.6\", \"*/\", rm.currentToken().getType());", "-    rm.move(2);", "+    assertEquals(\"2.6\", \"*/\", _reduced.currentToken().getType());", "+    _reduced.move(2);", "-    assertEquals(\"2.7\", \"\\\"\", rm.currentToken().getType());", "-    rm.move(1);", "+    assertEquals(\"2.7\", \"\\\"\", _reduced.currentToken().getType());", "+    _reduced.move(1);", "-    assertEquals(\"2.8\", \"\\\\\", rm.currentToken().getType());", "-    rm.move(1);", "+    assertEquals(\"2.8\", \"\\\\\", _reduced.currentToken().getType());", "+    _reduced.move(1);", "-    assertEquals(\"2.9\", \"{\", rm.currentToken().getType());", "-    rm.move(1);", "+    assertEquals(\"2.9\", \"{\", _reduced.currentToken().getType());", "+    _reduced.move(1);", "-    assertEquals(\"2.91\", \"}\", rm.currentToken().getType());", "-    rm.move(1);", "+    assertEquals(\"2.91\", \"}\", _reduced.currentToken().getType());", "+    _reduced.move(1);", "-    assertEquals(\"2.92\", \"(\", rm.currentToken().getType());", "-    rm.move(1);", "+    assertEquals(\"2.92\", \"(\", _reduced.currentToken().getType());", "+    _reduced.move(1);", "-    assertEquals(\"2.93\", \")\", rm.currentToken().getType());", "+    assertEquals(\"2.93\", \")\", _reduced.currentToken().getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b910ae6eb822ffa660e8970050ed669", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersion.java", "commitBeforeChange": "391e45139a20d29595a89151324a2e220b5d12fb", "commitAfterChange": "b3945c97981b1413d538a04b218b57bbc9b0fda9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "          public boolean equals(Object o)", "signatureAfterChange": "          public boolean equals(Object o)", "diff": ["-           (_java_runtime_name.equals(v._java_runtime_name) && _java_vm_vendor.equals(v._java_vm_vendor)));", "+           ((_location==null) && (v._location==null)) || (_location.equals(v._location)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bb8a83f1ba592757ff80881b44f66da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 451, "methodNumberAfterChange": 434, "signatureBeforeChange": "    final private boolean jj_3R_417()", "signatureAfterChange": "    final private boolean jj_3R_420()", "diff": ["+", "+  final private boolean jj_3R_420() {", "+    if (jj_3R_437()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_438()) jj_scanpos = xsp;", "-", "-  final private boolean jj_3R_417() {", "-    if (jj_3R_434()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_435()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bc6dd9bf97aaf77e29fadff23f1778e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classinfo/TreeClassInfo.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public MethodInfo getMethod(MethodDeclaration node)", "signatureAfterChange": "   public MethodInfo getMethod(MethodDeclaration node)", "diff": ["-    ", "+", "-      List l = (List)methods.get(it.next());", "+      List l = methods.get(it.next());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bccb3bb6336fee51b9cecf470099d0e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Component getTreeCellRendererComponent(JTree tree, Object value, boolean isSelected, boolean isExpanded,                                                     boolean leaf, int row, boolean hasFocus)", "signatureAfterChange": "     public Component getTreeCellRendererComponent(JTree tree, Object value, boolean isSelected, boolean isExpanded,                                                     boolean leaf, int row, boolean hasFocus)", "diff": ["-          doc.readLock();", "+          doc.acquireReadLock();", "-          finally { doc.readUnlock(); }", "+          finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c028edb6df1150b4c08e809d4d46cd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 580, "methodNumberAfterChange": 577, "signatureBeforeChange": "    final private boolean jj_3R_139()", "signatureAfterChange": "    final private boolean jj_3R_147()", "diff": ["-  final private boolean jj_3R_139() {", "+  final private boolean jj_3R_147() {", "-    if (jj_3_42()) jj_scanpos = xsp;", "+    if (jj_3_44()) jj_scanpos = xsp;", "-    if (jj_3R_103()) return true;", "+    if (jj_3R_105()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c30df7dd5d645f6c732e12e1decfb7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 575, "methodNumberAfterChange": 572, "signatureBeforeChange": "    final private boolean jj_3R_162()", "signatureAfterChange": "    final private boolean jj_3R_170()", "diff": ["-  final private boolean jj_3R_162() {", "-    if (jj_3R_110()) return true;", "+  final private boolean jj_3R_170() {", "+    if (jj_3R_112()) return true;", "-      if (jj_3R_215()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_228()) { jj_scanpos = xsp; break; }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c366a4cf152a878521355334d465531", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 388, "methodNumberAfterChange": 533, "signatureBeforeChange": "    final private boolean jj_3R_316()", "signatureAfterChange": "    final private boolean jj_3R_318()", "diff": ["-  final private boolean jj_3R_316() {", "-    if (jj_3R_325()) return true;", "-      if (jj_3R_337()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_318() {", "+    if (jj_3R_327()) return true;", "+      if (jj_3R_328()) { jj_scanpos = xsp; break; }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c3ee6a572b65ec302be2fa24144ac33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Breakpoint.java", "commitBeforeChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "commitAfterChange": "32513407e5f8f41a21eb0336c92af1269f67953c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void setEnabled(boolean enabled)", "signatureAfterChange": "   public void setEnabled(boolean enabled)", "diff": ["-        System.out.println(\"Breakpoint request: enabled = \"+bpr.isEnabled());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c41cef6a2caf83f701190e314cca341", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public Object visit(QualifiedName node)", "signatureAfterChange": "   public Class visit(QualifiedName node)", "diff": ["-     */", "-    public Object visit(QualifiedName node) {", "-\tString var = node.getRepresentation();", "-\t", "-\t// Set the modifier", "-\tClass c = (Class)context.get(var);", "-\tnode.setProperty(NodeProperties.TYPE, c);", "-\t", "-\tnode.setProperty(NodeProperties.MODIFIER, context.getModifier(node));", "-\treturn c;", "-    }", "+   */", "+  public Class visit(QualifiedName node) {", "+    String var = node.getRepresentation();", "+    ", "+    // Set the modifier", "+    Class c = (Class)context.get(var);", "+    node.setProperty(NodeProperties.TYPE, c);", "+    ", "+    node.setProperty(NodeProperties.MODIFIER, context.getModifier(node));", "+    return c;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c4557b3fabddc31b9070270942f68ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 339, "methodNumberAfterChange": 574, "signatureBeforeChange": "    final private boolean jj_3R_362()", "signatureAfterChange": "    final private boolean jj_3R_366()", "diff": ["-", "-  final private boolean jj_3R_362() {", "-    if (jj_3R_375()) return true;", "-      if (jj_3R_397()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_366() {", "+    if (jj_3R_379()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_413()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c45e6a01b336d0ddb0c1d44a4b0ee14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void testInteractionsLiveUpdateClasspath() throws BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsLiveUpdateClasspath() throws BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["+    Utilities.clearEventQueue();", "+        ", "+    ", "+    Utilities.clearEventQueue();", "+    ", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c51346d945e3f47716a9dbdd777939d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testConstructManyDocsWithLineNums()", "signatureAfterChange": "   public void testConstructManyDocsWithLineNums()", "diff": ["-    errors = new CompilerError[] { ", "-      new CompilerError(files[0], 2, 0, \"Test error with File\", false),", "-      new CompilerError(files[2], 3, 0, \"Test warning with File\", true),", "-      new CompilerError(files[4], 1, 0, \"Test warning with File\", true),", "-      new CompilerError(files[1], 2, 0, \"Test error with File\", false),", "-      new CompilerError(files[2], 2, 0, \"Test warning with File\", true),", "-      new CompilerError(files[3], 3, 0, \"Test error with File\", false),", "-      new CompilerError(files[4], 3, 0, \"Test error with File\", false),", "-      new CompilerError(files[0], 1, 0, \"Test error with File\", false) ", "+    errors = new DJError[] { ", "+      new DJError(files[0], 2, 0, \"Test error with File\", false),", "+      new DJError(files[2], 3, 0, \"Test warning with File\", true),", "+      new DJError(files[4], 1, 0, \"Test warning with File\", true),", "+      new DJError(files[1], 2, 0, \"Test error with File\", false),", "+      new DJError(files[2], 2, 0, \"Test warning with File\", true),", "+      new DJError(files[3], 3, 0, \"Test error with File\", false),", "+      new DJError(files[4], 3, 0, \"Test error with File\", false),", "+      new DJError(files[0], 1, 0, \"Test error with File\", false) ", "-    CompilerError[] copy = new CompilerError[errors.length];", "+    DJError[] copy = new DJError[errors.length];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c78dc0f4b6c93c4c17ca10833e3bdae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BrowserHistoryPanel.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public boolean equals(Object other)", "signatureAfterChange": "        public boolean equals(Object other)", "diff": ["-    public boolean equals(Object other) {", "-      if ((other==null) || !(other instanceof BrowserHistoryListUserObj)) { return false; }", "+       public boolean equals(Object other) {", "+      if (other == null || other.getClass() != this.getClass()) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c9205dadfb0d6788f54dc3b426c6805", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b6bfdc97713285768c8b922127b436d974f9f1e4", "commitAfterChange": "25355ecd0bc01ef2920944ee4f7366c5c45c1e55", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testInterpretJavaSingleQuotedArgs()", "signatureAfterChange": "   public void testInterpretJavaSingleQuotedArgs()", "diff": ["-    ", "+    _log.log(\"testInterpretJavaSingleQuotedArgs started\");", "+     _log.log(\"testInterpretJavaSingleQuotedArgs ended\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ca7d2d21b4347673a127973328009a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 430, "methodNumberAfterChange": 412, "signatureBeforeChange": "    final private boolean jj_3R_87()", "signatureAfterChange": "    final private boolean jj_3R_89()", "diff": ["-  final private boolean jj_3R_87() {", "-    if (jj_3R_112()) return true;", "+  final private boolean jj_3R_89() {", "+    if (jj_3R_120()) return true;", "-    if (jj_3R_136()) jj_scanpos = xsp;", "+    if (jj_3R_144()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cb2b6fc0623a1c9faa77cbf84299318", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "fb385b93cd9027b537d579fb84c39de65fc03205", "commitAfterChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void setJUnitInProgress(List<OpenDefinitionsDocument> odds)", "signatureAfterChange": "   public void setJUnitInProgress(List<OpenDefinitionsDocument> odds)", "diff": ["+    setJUnitInProgress();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cb3a183ac82ef05b6e4adfa8c53284c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 340, "methodNumberAfterChange": 651, "signatureBeforeChange": "    final private boolean jj_3R_322()", "signatureAfterChange": "    final private boolean jj_3R_324()", "diff": ["-  final private boolean jj_3R_322() {", "-    if (jj_3R_331()) return true;", "-      if (jj_3R_343()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_324() {", "+    if (jj_3R_333()) return true;", "+      if (jj_3R_334()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cd18d84a196aaccefdfee2480603bb7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 722, "methodNumberAfterChange": 744, "signatureBeforeChange": "    final private boolean jj_3R_163()", "signatureAfterChange": "    final private boolean jj_3R_164()", "diff": ["-", "-  final private boolean jj_3R_163() {", "+  final private boolean jj_3R_164() {", "-    if (jj_3R_78()) return true;", "+    if (jj_3R_79()) return true;", "-    if (jj_3R_119()) return true;", "+    if (jj_3R_120()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cd847b23fb09e81fefb3ae98209bee6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithSkipComments.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    System.err.println(\"QuestionCurrLineStartsWithSkipComments\");", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ce6b7aee9d086c8c556ae7208f1415d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DynamicJavaAdapter.java", "commitBeforeChange": "0f5802fd0bfcac88fdf9ed629119c5b60fc353ef", "commitAfterChange": "af3d2665565d850db91ca07a41202bb19156c449", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public DynamicJavaAdapter()", "signatureAfterChange": "    public DynamicJavaAdapter()", "diff": ["+", "+    // Allow access to private fields/methods from interpreter!", "+    _djInterpreter.setAccessible(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d0090db177c84e1a0b499de248d85b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "commitAfterChange": "530cb3b64455d081e962324602750973729aa1fb", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 174, "signatureBeforeChange": "      public void fileSaved(OpenDefinitionsDocument doc)", "signatureAfterChange": "      public void fileSaved(OpenDefinitionsDocument doc)", "diff": ["+      // Check class file sync status, in case file was renamed", "+      if (inDebugMode()) _updateDebugStatus();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d05e53b2b7cad897499b1566cd80c54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "cbb9f04386fdbcd6c82a6f2a5ae6b635359499fb", "commitAfterChange": "e77b9389e0feb3169a20412f8892f630db108f0e", "methodNumberBeforeChange": 451, "methodNumberAfterChange": 451, "signatureBeforeChange": "      private boolean _saveAs()", "signatureAfterChange": "      private boolean _saveAs()", "diff": ["-      _model.setActiveDocument(_model.getActiveDocument());  // highlights the document in the navigator", "+      _model.refreshActiveDocument();  // highlights the document in the navigator"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d09d9777cb72cec2e0981360bfec7c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9d671cad5f849049059b2e199aea7279dd398525", "commitAfterChange": "ef7e8ed674f3435dc8cfe861d137f1cab241f5c2", "methodNumberBeforeChange": 685, "methodNumberAfterChange": 687, "signatureBeforeChange": "          public void interactionStarted()", "signatureAfterChange": "          public void interactionStarted()", "diff": ["+      _runAppletAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d0f505500bac49d149c829bdcdfdacf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 625, "methodNumberAfterChange": 630, "signatureBeforeChange": "    final private boolean jj_3R_168()", "signatureAfterChange": "    final private boolean jj_3R_172()", "diff": ["-  final private boolean jj_3R_168() {", "+  final private boolean jj_3R_172() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;", "-      if (jj_3R_554()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_561()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d1008069fa8fcf2dad2d16eecbe9f6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 67, "signatureBeforeChange": "     protected void updateUndoState()", "signatureAfterChange": "     protected void updateUndoState()", "diff": ["-      if (_doc.getDocument().getUndoManager().canUndo()) {", "+      if (_doc.getUndoManager().canUndo()) {", "-        putValue(Action.NAME, _doc.getDocument().getUndoManager().getUndoPresentationName());", "+        putValue(Action.NAME, _doc.getUndoManager().getUndoPresentationName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d1cdd61c7e027064f630611adc66568", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0c8d146c06eba1c2298f0daceb39048930ad6325", "commitAfterChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": "   private void _setThreadDependentDebugMenuItems(boolean isSuspended)", "signatureAfterChange": "   private void _setThreadDependentDebugMenuItems(boolean isSuspended)", "diff": ["+    _debugPanel.setThreadDependentButtons(isSuspended);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d20121a42f5e33c4a8fafff41a99cca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/IntegerOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testApplyDoesChangeConfig()", "signatureAfterChange": "    public void testApplyDoesChangeConfig()", "diff": ["+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d301783bdcaa9bf7ac11f881e223ff7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartStmtOfBracePlus.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-    System.err.println(\"ActionStartStmtOfBracePlus\");", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d47996425c57c2cb42f7c8a193f0db3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "591ec87995880046281596623701cb5a561fc66e", "commitAfterChange": "ce73fdb27a8e7aa886580e240ca54bfd98e64031", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void setTo(Iterator it)", "signatureAfterChange": "     public void setTo(Iterator it)", "diff": ["-     */", "+    /** Force this iterator to take the values of the given iterator. */", "-      this._point = it._point;", "-      this._pos = it._pos;", "+      _point = it._point;", "+      _pos = it._pos;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d89a643701c630594300985e1676adc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testDancingUIFileOpened() throws IOException", "signatureAfterChange": "   public void testDancingUIFileOpened() throws IOException", "diff": ["+    //System.out.println(\"DEBUG: Entering messed up test\");", "-     try {", "-       Utilities.invokeAndWait(new Runnable() { public void run() {", "+//     try {", "+       Utilities.invokeLater(new Runnable() { public void run() {", "-     }", "-     catch(InterruptedException e) { fail(e.toString()); }", "+//     }", "+//     catch(InterruptedException e) { fail(e.toString()); }", "-//     _log.log(\"Waiting for compile\");", "-", "+     "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d9c6fc1221a558721eec6242e46d7f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "11a167d5b0a97e55aef4d62ed18d4da71e30b762", "commitAfterChange": "a32847752bc1c4d9a9c65da4d91d56e3d8a61fa6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testConstructManyDocsWithBoth()", "signatureAfterChange": "   public void testConstructManyDocsWithBoth()", "diff": ["+    assertTrue(\"hasOnlyWarnings should return false.\", !model.hasOnlyWarnings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1db2d1246ac7cc8fb483d78ff419b976", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected void _assertMainTransformation(String typed, String expected)     throws DocumentAdapterException", "signatureAfterChange": "   protected void _assertMainTransformation(String typed, String expected)", "diff": ["-  protected void _assertMainTransformation(String typed, String expected)", "-    throws DocumentAdapterException", "-  {", "+  protected void _assertMainTransformation(String typed, String expected) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dba22a10cd03424e9762914dca5af57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   private void _resumeThread(ThreadReference thread, boolean fromStep)     throws DebugException", "signatureAfterChange": "   private void _resumeThread(ThreadReference thread, boolean fromStep)     throws DebugException", "diff": ["-      System.out.println(\"Getting suspendCount = \" + suspendCount);", "+      printStream.println(\"Getting suspendCount = \" + suspendCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dc86ceb932aeedcf48b5ae9ff8c33fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 630, "methodNumberAfterChange": 635, "signatureBeforeChange": "    final private boolean jj_3R_167()", "signatureAfterChange": "    final private boolean jj_3R_171()", "diff": ["-  final private boolean jj_3R_167() {", "+  final private boolean jj_3R_171() {", "-    if (jj_3R_206()) return true;", "+    if (jj_3R_211()) return true;", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dd5893c159a0aad873a02572f4eb0f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b3ff19c2ebaad797d38ff3eee3b13718254c2e8c", "commitAfterChange": "23d9ee965a83ae57d0fd153ae458f734397b06d0", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 164, "signatureBeforeChange": "   public void openFolder(File dir, boolean rec) throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   public void openFolder(File dir, boolean rec) throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["+    debug.logStart();", "-    ", "+   ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1df3b36bc9c48f372f8f6f32f5e7b3e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 776, "methodNumberAfterChange": 775, "signatureBeforeChange": "    final private boolean jj_3R_482()", "signatureAfterChange": "    final private boolean jj_3R_484()", "diff": ["+", "+  final private boolean jj_3R_484() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_190()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_466()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_482() {", "-    if (jj_3R_189()) return true;", "-    if (jj_3R_464()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e0c832fa0beba8e58088aec023a09d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static void verifyOutput( String inputString, List<Node> expectedAST ) throws ParseException", "signatureAfterChange": "      public static void verifyOutput( String inputString, List<Node> expectedAST ) throws ParseException", "diff": ["-                   expectedAST,", "-                   ast );", "+                   expectedAST.toString(),", "+                   ast.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e229e825f3cc90be356ef9be383773a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "commitAfterChange": "9ce155a1f3e34352032d821032cb2dc70024460f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   @Override public Type visit(ObjectMethodCall node)", "signatureAfterChange": "   @Override public Type visit(ObjectMethodCall node)", "diff": ["-      // TODO: Check for uncaught exceptions", "+      checkThrownExceptions(inv.thrown(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e25b67324369f5be8e2ab86d83c18f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "e9bec3010b901922047e6fa4b0f822c7679ebb75", "commitAfterChange": "1069ae55040630a013af2fb4848a0ed7a054566d", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "   public void saveProject(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "signatureAfterChange": "   public void saveProject(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info) throws IOException", "diff": ["-  public void saveProject(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info) ", "-    throws IOException {", "+  public void saveProject(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info) throws IOException {", "-    if (wd != null && bd != FileOption.NULL_FILE) builder.setWorkingDirectory(wd);", "+    if (wd != null) builder.setWorkingDirectory(wd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e45dbe6923c59c6a7818164f9e905ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "1f1e1c194ec79b5577db174af86a812206a9ebf6", "commitAfterChange": "8470bac42027a288eff50252d965c363d15d41dc", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   private void _resetUndo()", "signatureAfterChange": "   private void _resetUndo()", "diff": ["-    _undoManager = new UndoManager();", "+    _undoManager = new OurUndoManager();", "+    _undoManager.setLimit(UNDO_LIMIT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e92b690f98330ecc7728a771e7212f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 801, "methodNumberAfterChange": 715, "signatureBeforeChange": "    final private boolean jj_3R_239()", "signatureAfterChange": "    final private boolean jj_3R_204()", "diff": ["-", "-  final private boolean jj_3R_239() {", "-    if (jj_scan_token(XOR_ASSIGN)) return true;", "-    if (jj_3R_87()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_204() {", "+    if (jj_scan_token(XOR_ASSIGN)) return true;", "+    if (jj_3R_78()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e986df17825b46d6897d54d9d9b72dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ArrayData.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public ModifiersAndVisibility getMav()", "signatureAfterChange": "   public ModifiersAndVisibility getMav()", "diff": ["-      return new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, newMavs);", "+      return new ModifiersAndVisibility(SourceInfo.NO_INFO, newMavs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ed3cbf797581336d699df1294063039", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6d9f2ce37ba22041a5b2840cffbd0f66339165b6", "commitAfterChange": "b153c43e59717c98f32c67f14d61a00a81016991", "methodNumberBeforeChange": 611, "methodNumberAfterChange": 588, "signatureBeforeChange": "    final private boolean jj_3R_373()", "signatureAfterChange": "    final private boolean jj_3R_382()", "diff": ["+  final private boolean jj_3R_382() {", "+    if (jj_3R_385()) {", "+    if (jj_3R_386()) return true;", "-  final private boolean jj_3R_373() {", "-    if (jj_3R_377()) {", "-    if (jj_3R_378()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ef605fc999ad6cc4023320ede0ae772", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "17f7883ffae3637cf9ec6b5aa5b32f12aa6f1a56", "commitAfterChange": "c3f7f9d7c32c110a7370bfc2864b2e98a988bba6", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "   private JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "signatureAfterChange": "   private JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "diff": ["-    // COMMENTED UNTIL COMPLETE", "-    //pane.addCaretListener( _posListener );", "-    //_posListener.updateLocation();", "+    pane.addCaretListener( _posListener );", "+    _posListener.updateLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1efb218fe2b15ec35dc4ca2ca514af9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 629, "methodNumberAfterChange": 615, "signatureBeforeChange": "    final private boolean jj_3R_561()", "signatureAfterChange": "    final private boolean jj_3R_564()", "diff": ["-  final private boolean jj_3R_561() {", "+  final private boolean jj_3R_564() {", "-    if (jj_3R_568()) {", "+    if (jj_3R_571()) {", "-      if (jj_3R_569()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_572()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f10b7441bf002516736183d8c04b1ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "f1daacb1f9c546b2b765d3fc6cc41bd412931a0f", "commitAfterChange": "591ec87995880046281596623701cb5a561fc66e", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "   public Iterable<File> getClassPath()", "signatureAfterChange": "   public Iterable<File> getClassPath()", "diff": ["-    // TODO: Parsing this string needs to only happen once, not every time this method is invoked.", "-    String systemPath = System.getProperty(\"java.class.path\", \"\");", "-    result = IterUtil.compose(result, IOUtil.attemptAbsoluteFiles(IOUtil.parsePath(systemPath)));", "+    result = IterUtil.compose(result, RUNTIME_CLASS_PATH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f197742d9ee66ece17905a78a76446a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testExitInteractions() throws EditDocumentException, InterruptedException", "signatureAfterChange": "   public void testExitInteractions() throws EditDocumentException, InterruptedException", "diff": ["+    debug.logStart();", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f1d35692c80e9ff8d2dc2a419f160f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "936df97bedea66175f36cae49ba74b17abf11e8a", "commitAfterChange": "d43c6d20ec903cbbb4ee5291a112b3b3ae570823", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": "    public boolean closeAllFiles()", "signatureAfterChange": "    public boolean closeAllFiles()", "diff": ["-     if (res) resetInteractions(getWorkingDirectory());", "+     if (res) {", "+       _log.log(\"Resetting interactions pane to use \" + getWorkingDirectory() + \" as working directory\");", "+       resetInteractions(getWorkingDirectory());", "+     }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f256523a97021b7f3699930af4a50c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "   ReferenceType getReferenceType(String className, int lineNumber)", "signatureAfterChange": "   synchronized ReferenceType getReferenceType(String className, int lineNumber)", "diff": ["-  ReferenceType getReferenceType(String className, int lineNumber) {", "-    System.out.println(\"Looking for RefType for class: \" + className);", "-    System.out.println(\"on line number: \" + lineNumber);", "+  synchronized ReferenceType getReferenceType(String className, int lineNumber) {", "+    //System.out.println(\"Looking for RefType for class: \" + className);", "+    //System.out.println(\"on line number: \" + lineNumber);", "-    System.out.println(\"Num of classes found: \" + classes.size());", "-    ReferenceType ref = null; //Reference type is null", "+    //System.out.println(\"Num of classes found: \" + classes.size());", "+    ReferenceType ref = null;", "-              // skipping this inner class", "+              // skipping this inner class, look in another"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f267f6aba237f8915fb7a1abf8c8df1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "34ce8483136d91f9eff46f1971dc8a612f363868", "commitAfterChange": "cfd4689ec89c3908ea0306a11510c85ea5436de0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   static void displayUsage()", "signatureAfterChange": "   static void displayUsage()", "diff": ["+    buf.append(\"  -new                  force the creation of a new DrJava instance;\");", "+    buf.append(\"                        do not connect to existing instance\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f3a6b594a73d334c7b67e9b69f6e20e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "d8743e3580123e01ed3e3df696be4659a04c6fac", "commitAfterChange": "7a9a1a584dbea988e52c91909a30a2d54f580df1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public static void configureAndLoadDrJavaRoot(String[] args)", "signatureAfterChange": "      public static void configureAndLoadDrJavaRoot(String[] args)", "diff": ["-          (edu.rice.cs.drjava.model.junit.DefaultJUnitModel.isValidJUnitFile(junitLocation) ||", "-           edu.rice.cs.drjava.model.junit.DefaultJUnitModel.isValidConcJUnitFile(junitLocation));", "+          (edu.rice.cs.drjava.model.junit.ConcJUnitUtils.isValidJUnitFile(junitLocation) ||", "+           edu.rice.cs.drjava.model.junit.ConcJUnitUtils.isValidConcJUnitFile(junitLocation));", "-        if (!junitLocationConfigured && // not valid ", "+        if (DrJava.getConfig().getSetting(OptionConstants.RT_CONCJUNIT_LOCATION_ENABLED) && // enabled", "+            !junitLocationConfigured && // not valid ", "-          getConfig().setSetting(JUNIT_LOCATION, FileOps.NULL_FILE);", "+          getConfig().setSetting(JUNIT_LOCATION_ENABLED, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fa7af40c7efed45039b44bba99b5100", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "2b3538f4ec792670cfb28bc41a5aee6f4c8718c0", "commitAfterChange": "c302d1db72cb508e0cec30d24e39d48cce8fd663", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Void forInnerClassDef(InnerClassDef that)", "signatureAfterChange": "   public Void forInnerClassDef(InnerClassDef that)", "diff": ["-    System.err.println(\"BBIV.forInnerClassDef called on \" + that.getName());", "+//    System.err.println(\"BBIV.forInnerClassDef called on \" + that.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fb956f40e03c9b2bfdb23b9caf1ce5f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testCancelOpenFile() throws BadLocationException, IOException", "signatureAfterChange": "   public void testCancelOpenFile() throws BadLocationException, IOException", "diff": ["-   */", "+  /** Initiates a file open, but cancels. */", "-      public void fileOpened(OpenDefinitionsDocument doc) {", "-        openCount++;", "-      }", "+      public void fileOpened(OpenDefinitionsDocument doc) { openCount++; }", "+    ", "+    _log.log(\"testCancelOpenFile completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fbc1990e577e406dc72fea099c2c441", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "3138149e59af557581689e53b212f79d04dd8105", "commitAfterChange": "2fc1b48ae47904f12ff70a4157426a6f949b079b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testGetDDocFromCache() throws BadLocationException, IOException, OperationCanceledException", "signatureAfterChange": "      public void testGetDDocFromCache() throws BadLocationException, IOException, OperationCanceledException", "diff": ["-    doc1.getLength();  // forces document to be read into memory", "+    doc1.getCurrentLine();  // forces document to be read into memory", "-    doc2.getLength();  // forces document to be read into memory", "+    doc2.getCurrentLine();  // forces document to be read into memory", "-    doc3.getLength();  // forces document to be read into memory", "+    doc3.getCurrentLine();  // forces document to be read into memory", "-    doc4.getLength();  // forces document to be read into memory", "+    doc4.getCurrentLine();  // forces document to be read into memory", "-    doc5.getLength();  // forces document to be read into memory", "+    doc5.getCurrentLine();  // forces document to be read into memory", "-    doc6.getLength();  // forces document to be read into memory", "+    doc6.getCurrentLine();  // forces document to be read into memory"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fc54ba9e738702e87858c13fa7bff32", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public Class visit(SynchronizedStatement node)", "signatureAfterChange": "   public Class visit(SynchronizedStatement node)", "diff": ["-    if (((Class)node.getLock().acceptVisitor(this)).isPrimitive()) {", "+    if ((node.getLock().acceptVisitor(this)).isPrimitive()) {", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fc81dcfe269066db7ceb78291a08410", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "11a167d5b0a97e55aef4d62ed18d4da71e30b762", "commitAfterChange": "a32847752bc1c4d9a9c65da4d91d56e3d8a61fa6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testConstructOneDocWithoutLineNums()", "signatureAfterChange": "   public void testConstructOneDocWithoutLineNums()", "diff": ["+    assertTrue(\"hasOnlyWarnings should return false.\", !model.hasOnlyWarnings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fccedf97b2201458e94ba02bdac92e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/ExecJVM.java", "commitBeforeChange": "efe2cdfa860877c37343dbc5d29e380b33344492", "commitAfterChange": "c46b51159c995a9970485b3c515f743b3910e9fc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public static Process runJVM(String mainClass,                                String[] classParams,                                String[] jvmParams) throws IOException", "signatureAfterChange": "   public static Process runJVM(String mainClass,                                String[] classParams,                                String[] jvmParams) throws IOException", "diff": ["-    ", "-    String[] argArray = (String[]) args.toArray(new String[0]);", "-    ", "+", "+    String[] argArray = args.toArray(new String[0]);", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fd3c99265211c13ca5a389d2b17fc32", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "8907059ef43f15e7b338686159e3333fd997b238", "commitAfterChange": "191c3e4b63ea8ecc780014db5fc908a6ccd9ee7a", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "    private void _setUpTabs()", "signatureAfterChange": "    private void _setUpTabs()", "diff": ["-    //_tabbedPane.add(\"Test output\", _junitPanel);", "+    _tabbedPane.add(\"Test output\", _junitPanel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fec18682f6fdf6af90b22802d14ea05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/StaticContext.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Class<?> setProperties(ClassAllocation node, Class<?> c, Class<?>[] args, List<Node> memb)", "signatureAfterChange": "   public Class<?> setProperties(ClassAllocation node, Class<?> c, Class<?>[] args, List<Node> memb)", "diff": ["-                              new TypeExpression(new ReferenceType(dname)));", "+                              new TypeExpression(new ReferenceTypeName(dname)));", "-                                     new LinkedList<ReferenceType>(),", "+                                     new LinkedList<ReferenceTypeName>(),", "-    ReferenceType ext = null;", "-    List<ReferenceType> impl = null;", "+    ReferenceTypeName ext = null;", "+    List<ReferenceTypeName> impl = null;", "-      impl = new LinkedList<ReferenceType>();", "+      impl = new LinkedList<ReferenceTypeName>();", "-      impl.add(new ReferenceType(intf));", "+      impl.add(new ReferenceTypeName(intf));", "-      ext = new ReferenceType(l);", "+      ext = new ReferenceTypeName(l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2008eceb0c952df92930f8ea90fd46d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/javadoc/DefaultJavadocModel.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   private List<CompilerError> _extractErrors(String text)", "signatureAfterChange": "   private List<DJError> _extractErrors(String text)", "diff": ["-  private List<CompilerError> _extractErrors(String text) {", "+  private List<DJError> _extractErrors(String text) {", "-    List<CompilerError> result = new ArrayList<CompilerError>();", "+    List<DJError> result = new ArrayList<DJError>();", "-          // If we found one, put the remaining stream contents in one CompilerError.", "-          result.add(new CompilerError(output + '\\n' + IOUtil.toString(r), false));", "+          // If we found one, put the remaining stream contents in one DJError.", "+          result.add(new DJError(output + '\\n' + IOUtil.toString(r), false));", "-          CompilerError error = _parseJavadocErrorLine(output);", "+          DJError error = _parseJavadocErrorLine(output);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "201678dd5f5ace508e1a63de14f5202f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": "                     public void testForSimpleAssignmentExpressionOnly()", "signatureAfterChange": "                     public void testForSimpleAssignmentExpressionOnly()", "diff": ["-      SimpleAssignmentExpression sae = new SimpleAssignmentExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\")), new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5));", "+      SimpleAssignmentExpression sae = new SimpleAssignmentExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\")), new IntegerLiteral(SourceInfo.NO_INFO, 5));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "201b92c0902087d9275cccb3ce057f79", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelDeleteTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "    public void testLineCommentStealsLineCommentSlash()", "signatureAfterChange": "    public void testLineCommentStealsLineCommentSlash()", "diff": ["-    assertEquals(\"#3.1\", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());", "+    assertEquals(\"#3.1\", INSIDE_LINE_COMMENT, model1._getStateAtCurrent());", "-    assertEquals(\"#4.2\", FREE, model1.getStateAtCurrent());", "+    assertEquals(\"#4.2\", FREE, model1._getStateAtCurrent());", "-    assertEquals(\"#5.2\", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());", "+    assertEquals(\"#5.2\", INSIDE_LINE_COMMENT, model1._getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2021154a5675f6cb08b147c746388743", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 200, "methodNumberAfterChange": 201, "signatureBeforeChange": "   public void updateFileTitle()", "signatureAfterChange": "   public void updateFileTitle()", "diff": ["-    String fileName = doc.getDisplayFullPath();", "+    String fileName = doc.getCompletePath();", "-    String fileTitle = doc.getDisplayFullPath();", "+    String fileTitle = doc.getCompletePath();", "-      if ((temp!=null) && (temp.length()>0)) { fileTitle = fileTitle + \" - \" + temp; }", "+      if ((temp != null) && (temp.length() > 0)) { fileTitle = fileTitle + \" - \" + temp; }", "-    // Always update this field-- two files in different directories", "-    //  can have the same _fileTitle", "-    if (!_fileNameField.getText().equals(fileTitle)) { _fileNameField.setText(fileTitle); }", "-//    System.out.println(\"setting \" + doc + \" to display name: \" + GlobalModelNaming.getDisplayFullPath(doc));", "+    if (! _fileNameField.getText().equals(fileTitle)) { _fileNameField.setText(fileTitle); }", "+    ", "+    //  Two files in different directories can have the same _fileTitle", "+    _fileNameField.setToolTipText(\"Full path for file: \" + doc.getCompletePath());", "+//    System.out.println(\"setting \" + doc + \" to display name: \" + getCompletePath(doc));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "202be6b485802c446ba6abd0b3fc2b73", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public SymbolData getSymbolData(String className, SourceInfo si, boolean resolve)", "signatureAfterChange": "     public SymbolData getSymbolData(String className, SourceInfo si, boolean resolve)", "diff": ["-    if (resolve && sd != null) {", "-      if (sd.isContinuation()) { throw new RuntimeException(\"Internal Program Error: \" + sd.getName() + ", "-                                                            \" should not be a continuation.  Please report this bug.\");}", "-      continuations.remove(sd.getName());", "-    }", "+//    if (resolve && sd != null) {", "+//      if (sd.isContinuation()) { throw new RuntimeException(\"Internal Program Error: \" + sd.getName() + ", "+//                                                            \" should not be a continuation.  Please report this bug.\");}", "+//      continuations.remove(sd.getName());", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "202f0a482c08095147569910ca27dff1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 702, "methodNumberAfterChange": 601, "signatureBeforeChange": "    final private boolean jj_3R_264()", "signatureAfterChange": "    final private boolean jj_3R_268()", "diff": ["+  final private boolean jj_3R_268() {", "+    if (jj_3R_325()) return true;", "+    if (jj_3R_326()) jj_scanpos = xsp;", "-  final private boolean jj_3R_264() {", "-    if (jj_3R_320()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_321()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2049fbaaa937e41c97e67c370ead29a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 587, "methodNumberAfterChange": 581, "signatureBeforeChange": "    final private boolean jj_3R_166()", "signatureAfterChange": "    final private boolean jj_3R_171()", "diff": ["-  final private boolean jj_3R_166() {", "+", "+  final private boolean jj_3R_171() {", "-    if (jj_3R_94()) return true;", "+    if (jj_3R_97()) return true;", "-    if (jj_3R_122()) return true;", "+    if (jj_3R_126()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2054fd6b1a099103fc31d813a408e7fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c62b1b10786355816ba714f89e9eb9b966cf9ee5", "commitAfterChange": "aee9122d45e1db446dab8a4fb8797094bc2f1cba", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "   private JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "signatureAfterChange": "   private JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "diff": ["-", "+    ", "-    JScrollPane scroll = new JScrollPane(pane,", "-                                         JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "-                                         JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);", "+    JScrollPane scroll = new BorderlessScrollPane(pane,", "+\t\t\t\t\t\t  JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "+\t\t\t\t\t\t  JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);", "+    scroll.setBorder(null); // removes all default borders (MacOS X installs default borders)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2060ff97920dc4be519255215f0abb39", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CompoundUndoManager.java", "commitBeforeChange": "eceb1efda2a64c0d1777a241a780b6640565e74e", "commitAfterChange": "985a2a7aa160a776eff6e6187000ef0ccbcb7ce0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void redo()", "signatureAfterChange": "   public void redo()", "diff": ["-      throw new CannotRedoException();", "+      while (_keys.size() > 0) {", "+        endCompoundEdit(_keys.get(0).intValue());", "+      }", "+      super.redo();", "+//      throw new CannotRedoException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "207b2fbbe662f035dbb3b6c7b20d19ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 56, "signatureBeforeChange": "   public int _getFirstNonWSCharPos(final int pos, final char[] whitespace, final boolean acceptComments) throws      BadLocationException", "signatureAfterChange": "   public int getFirstNonWSCharPos(final int pos, final char[] whitespace, final boolean acceptComments) throws      BadLocationException", "diff": ["-  public int _getFirstNonWSCharPos(final int pos, final char[] whitespace, final boolean acceptComments) throws ", "+  public int getFirstNonWSCharPos(final int pos, final char[] whitespace, final boolean acceptComments) throws ", "-//    synchronized(_reduced) {", "-      String line = getText(pos, endPos - pos);   // Get text from pos to end of line", "-      _setCurrentLocation(pos);  // Move reduced model to location pos", "-      try {", "-        int i = pos;", "-        int reducedPos = pos;", "-        // Walk forward from specificed position", "-        while (i < endPos) {", "-          ", "-          // Check if character is whitespace", "-          if (_match(line.charAt(i-pos), whitespace)) {", "-            i++;", "-            continue;", "-          }", "-          // Found a non whitespace character", "-          // Move reduced model to walker's location for subsequent processing", "-          _setCurrentLocation(i);  // reduced model points to location i", "-          reducedPos = i;", "-          ", "-          // Check if non-ws char is within comment and if we want to ignore them.", "-          if (! acceptComments &&", "-              ((_reduced._getStateAtCurrent().equals(INSIDE_LINE_COMMENT)) ||", "-               (_reduced._getStateAtCurrent().equals(INSIDE_BLOCK_COMMENT)))) {", "-            i++;  // TODO: increment i to skip over entire comment", "-            continue;", "-          }", "-          ", "-          // Check if non-ws char is part of comment opening bracket and if we want to ignore them", "-          if (! acceptComments && _isStartOfComment(line, i - pos)) {", "-            // ith char is first char in comment open market; skip past this marker and continue searching", "-            i = i + 2;  // TODO: increment i to skip over entire comment", "-            continue;", "-          }", "-          ", "-          // Return position of matching char", "-          _storeInCache(key, reducedPos, reducedPos);  // Cached answer depends only on text(0:reducedPos]", "-//          _setCurrentLocation(origPos);", "-          return reducedPos;", "+    String line = getText(pos, endPos - pos);   // Get text from pos to end of line", "+    setCurrentLocation(pos);  // Move reduced model to location pos", "+    try {", "+      int i = pos;", "+      int reducedPos = pos;", "+      // Walk forward from specificed position", "+      while (i < endPos) {", "+        ", "+        // Check if character is whitespace", "+        if (match(line.charAt(i-pos), whitespace)) {", "+          i++;", "+          continue;", "+        }", "+        // Found a non whitespace character", "+        // Move reduced model to walker's location for subsequent processing", "+        setCurrentLocation(i);  // reduced model points to location i", "+        reducedPos = i;", "+        ", "+        // Check if non-ws char is within comment and if we want to ignore them.", "+        if (! acceptComments &&", "+            ((_reduced.getStateAtCurrent().equals(INSIDE_LINE_COMMENT)) ||", "+             (_reduced.getStateAtCurrent().equals(INSIDE_BLOCK_COMMENT)))) {", "+          i++;  // TODO: increment i to skip over entire comment", "+          continue;", "-        // No matching char found on this line", "-        if (endPos + 1 >= docLen) { // No matching char found in doc", "-          _storeInCache(key, -1, Integer.MAX_VALUE);  // Any change to the document invalidates this result!", "-//          _setCurrentLocation(origPos);", "-          return -1;", "+        // Check if non-ws char is part of comment opening bracket and if we want to ignore them", "+        if (! acceptComments && _isStartOfComment(line, i - pos)) {", "+          // ith char is first char in comment open market; skip past this marker and continue searching", "+          i = i + 2;  // TODO: increment i to skip over entire comment", "+          continue;", "+        ", "+        // Return position of matching char", "+        _storeInCache(key, reducedPos, reducedPos);  // Cached answer depends only on text(0:reducedPos]", "+//          _setCurrentLocation(origPos);", "+        return reducedPos;", "-      finally { _setCurrentLocation(origPos); }  // restore _currentLocation", "-//    }  // end sync", "+      // No matching char found on this line", "+      if (endPos + 1 >= docLen) { // No matching char found in doc", "+        _storeInCache(key, -1, Integer.MAX_VALUE);  // Any change to the document invalidates this result!", "+//          _setCurrentLocation(origPos);", "+        return -1;", "+      }", "+    }", "+    finally { setCurrentLocation(origPos); }  // restore _currentLocation", "+    ", "-    return _getFirstNonWSCharPos(endPos + 1, whitespace, acceptComments);", "+    return getFirstNonWSCharPos(endPos + 1, whitespace, acceptComments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "207ce253f93c6f93a0e4c4e1ead8332a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   private String typeDescriptor(Type t)", "signatureAfterChange": "   private String typeDescriptor(Type t)", "diff": ["-  private String typeDescriptor(Type t) { return encodeType(_opt.typeSystem().erase(t), '$'); }", "+  private String typeDescriptor(Type t) { return encodeType(_opt.typeSystem().erase(t)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20810011391c3544bcbc3d57a7232194", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9c56cd9d9775329b3a5e6a7701ab0c05369850af", "commitAfterChange": "a7a439f9a53360ece86e113cdb8203e5c8b2acda", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 116, "signatureBeforeChange": "   public void aboutToSaveFromSaveAll(OpenDefinitionsDocument doc)", "signatureAfterChange": "   abstract public void aboutToSaveFromSaveAll(OpenDefinitionsDocument doc);", "diff": ["-  public void aboutToSaveFromSaveAll(OpenDefinitionsDocument doc) {}", "+  abstract public void aboutToSaveFromSaveAll(OpenDefinitionsDocument doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20824c4e137b56a353247eb384d42227", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "    int getSize(ReducedToken rmbToken, ReducedToken rmcToken)", "signatureAfterChange": "    int getSize(ReducedToken rmbToken, ReducedToken rmcToken)", "diff": ["-    int size = 0;", "+    int size;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "208a16b6fb03152bc4d87e4467c9c8d6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentFileManagerTest.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testShrinksToMaxSize() throws IOException, AlreadyOpenException, OperationCanceledException", "signatureAfterChange": "   public void testShrinksToMaxSize() throws IOException", "diff": ["-  public void testShrinksToMaxSize() throws IOException, AlreadyOpenException, OperationCanceledException {", "-    ", "+  public void testShrinksToMaxSize() throws IOException {", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20946efb699d154f59f4e5fca311f3f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "682bd0a2b528d852a57206c89ed5bb4a5b484c14", "commitAfterChange": "c8a7a8a9d3d089ab42661ede7d141969c6ed2339", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public static String[] splitFile(File fileToSplit)", "signatureAfterChange": "   public static String[] splitFile(File fileToSplit)", "diff": ["-    return list.toArray(new String[0]);", "+    return list.toArray(new String[list.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20980397ced73627f4041d1fb24db7ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   @Override public Type visit(AnonymousInnerAllocation node)", "signatureAfterChange": "   @Override public Type visit(AnonymousInnerAllocation node)", "diff": ["-      if (node.getArguments() != null) { args = node.getArguments(); }", "-      for (Expression e : args) { e.acceptVisitor(this); }", "+      if (node.getArguments() != null) { args = node.getArguments(); checkList(args); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "209faa947cb3b878c790796dc108f6ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "          public void run()", "signatureAfterChange": "          public void run()", "diff": ["-      readLock();", "+      acquireReadLock();", "-      finally { readUnlock(); } ", "+      finally { releaseReadLock(); } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20a95212544d9f9cc9518a44c7eb4e85", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "    public void setSearchBackwards(boolean searchBackwards)", "signatureAfterChange": "    public void setSearchBackwards(boolean searchBackwards)", "diff": ["-    if (_searchBackwards != searchBackwards) {", "+    if (_isForward == searchBackwards) {", "-      // same as the _lastFindWord, we know the user just found _findWord, so skip one find.", "-      if (isOnMatch() && _findWord.equals(_lastFindWord)) _skipOneFind = true;", "-      else _skipOneFind = false;", "+      // same as the _lastFindWord, we know the user just found _findWord, so skip over this match.", "+      if (isOnMatch() && _findWord.equals(_lastFindWord)) _skipText = true;", "+      else _skipText = false;", "-    _searchBackwards = searchBackwards;", "+    _isForward = ! searchBackwards;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20bffbcf5760578b197c65c9254a35fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "eclipse/src/edu/rice/cs/util/text/SWTDocumentAdapterTest.java", "commitBeforeChange": "bd3609d73f910b773bb009bd9fec801547e38ce7", "commitAfterChange": "ee77a4b190fe991345758d9ffc949583a7709b61", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testEditCondition()      throws DocumentAdapterException", "signatureAfterChange": "   public void testEditCondition()      throws DocumentAdapterException", "diff": ["-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20c16edc2ade971d6eef54459646664f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "37449cba11f74bdf3921e2b515b5228eef23235b", "commitAfterChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public String getText()", "signatureAfterChange": "   public String getText()", "diff": ["-      T item = (T)_matchList.getSelectedValue();", "+      T item = _matchList.getSelectedValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20c7ac50eef69c61cf7b8d8cd7d6062e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "24e790b85d3a1a29de15955ca1ba9200a6865f83", "commitAfterChange": "4ceb386773fd5eb837ddcd34820c563b6c3c20cb", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public void testUndoAndRedoAfterMultipleLineCommentAndUncomment()      throws BadLocationException", "signatureAfterChange": "   public void testUndoAndRedoAfterMultipleLineCommentAndUncomment()      throws BadLocationException", "diff": ["-      \"// public class stuff {\\n\" + ", "-      \"//   private int _int;\\n\" + ", "-      \"//   private Bar _bar;\\n\" +", "-      \"//   public void foo() {\\n\" +", "-      \"//     _bar.baz(_int);\\n\" +", "-      \"//   }\\n\" +", "-      \"// }\\n\";", "+      \"//public class stuff {\\n\" + ", "+      \"//  private int _int;\\n\" + ", "+      \"//  private Bar _bar;\\n\" +", "+      \"//  public void foo() {\\n\" +", "+      \"//    _bar.baz(_int);\\n\" +", "+      \"//  }\\n\" +", "+      \"//}\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20d80857e990f314d9c314695501384b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "946c9827fd9c7515742a2a4508e6a7ac84a9f5a8", "commitAfterChange": "37449cba11f74bdf3921e2b515b5228eef23235b", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   @SuppressWarnings(\"unchecked\") public java.util.List<ItemT> getSelectedDocuments()", "signatureAfterChange": "   @SuppressWarnings(\"unchecked\") public java.util.List<ItemT> getSelectedDocuments()", "diff": ["-    l.add((ItemT)getSelectedValue());", "+    l.add(getSelectedValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20e3e8f269e0b128afa22012ab7f531e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public boolean isModifiedSinceSave()", "signatureAfterChange": "   public boolean isModifiedSinceSave()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20ec6cbb271ff68d92ae311649249e6e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "2707043a47325658db92e0290e695128c6817bba", "commitAfterChange": "0c506ac270d6b542eb2c43fb49629be8c2634151", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 163, "signatureBeforeChange": "     private File _locateClassFile()", "signatureAfterChange": "     private File _locateClassFile()", "diff": ["+        ", "+        ", "+        if(getBuildDirectory() != null){", "+          roots.add(getBuildDirectory());", "+        }", "+        ", "+        ", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20ef5e740c3144db5abd77cdac102b20", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 463, "methodNumberAfterChange": 461, "signatureBeforeChange": "    final private boolean jj_3R_370()", "signatureAfterChange": "    final private boolean jj_3R_373()", "diff": ["-", "-  final private boolean jj_3R_370() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_164()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_353()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_373() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_166()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_356()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20f5e7a71437401ceed0ff627049c23c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/CollapsedIterable.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public boolean isFixed()", "signatureAfterChange": "      public boolean hasFixedSize()", "diff": ["-  public boolean isFixed() {", "-    if (!IterUtil.isFixed(_iters)) { return false; }", "+  public boolean hasFixedSize() {", "+    if (!IterUtil.hasFixedSize(_iters)) { return false; }", "-      if (!IterUtil.isFixed(iter)) { return false; }", "+      if (!IterUtil.hasFixedSize(iter)) { return false; }", "+    }", "+    return true;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2100c353e1d1eea8109d345ab5407521", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsView.java", "commitBeforeChange": "a5a766c0abe1a94ea1cfa69aac7995654eda0886", "commitAfterChange": "e89db6424eb4d447de92442bb5bec9b31ff0f5d0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public boolean saveAs()", "signatureAfterChange": "   public boolean saveAs()", "diff": ["-    JFileChooser fc = new JFileChooser();", "+    JFileChooser fc = _saveChooser;", "+\t\tfc.setSelectedFile(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2109c04caefb9e92db7b44255f2f0224", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsView.java", "commitBeforeChange": "a5a766c0abe1a94ea1cfa69aac7995654eda0886", "commitAfterChange": "e89db6424eb4d447de92442bb5bec9b31ff0f5d0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public boolean open()", "signatureAfterChange": "   public boolean open()", "diff": ["-    JFileChooser fc = new JFileChooser();", "+    JFileChooser fc = _openChooser;", "+\t\tfc.setSelectedFile(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "211030e27516e4915698c1e3f817f3ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Bob.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected boolean inStaticMethod()", "signatureAfterChange": "   protected boolean inStaticMethod()", "diff": ["-      else if (d instanceof SymbolData) { return false; }", "+//      else if (d instanceof SymbolData) { return false; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2123ffc22a92a9d2c1e933d044c35312", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 345, "methodNumberAfterChange": 661, "signatureBeforeChange": "    final private boolean jj_3R_317()", "signatureAfterChange": "    final private boolean jj_3R_319()", "diff": ["-  final private boolean jj_3R_317() {", "-    if (jj_3R_322()) return true;", "-      if (jj_3R_337()) { jj_scanpos = xsp; break; }", "-    return false;", "-  }", "+  final private boolean jj_3R_319() {", "+    if (jj_3R_324()) return true;", "+      if (jj_3R_325()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2133f846a6368161597b4e74494112ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ComposedRelation.java", "commitBeforeChange": "811484bb0f3e9c6a234bb593ba7247f59304a444", "commitAfterChange": "d3ca8d30db126f3de1352627e18f51d00a1bf339", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override public boolean contains(T1 first, T3 second)", "signatureAfterChange": "      public boolean contains(T1 first, T3 second)", "diff": ["-  @Override public boolean contains(T1 first, T3 second) {", "+  public boolean contains(T1 first, T3 second) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2134afd0d22611198cb942bd23066c66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "commitAfterChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 152, "signatureBeforeChange": "     public void fileReverted(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public void fileReverted(OpenDefinitionsDocument doc)", "diff": ["+      _saveAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "213f416e8d14b9e95adaac40865122b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelBrace.java", "commitBeforeChange": "28c4be6b04d5867405916840b451c47e4acad060", "commitAfterChange": "db16e322f21576ce25b97ab99611f7c7362cef3e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate void _insertBraceToGap(String text, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor)", "signatureAfterChange": " \tprivate void _insertBraceToGap(String text, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor)", "diff": ["-\t\t\tModelList<ReducedToken>.Iterator copy2 = copyCursor.copy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2158165fb48484ab5822c0521ddce9c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public Void forClassDef(ClassDef that)", "signatureAfterChange": "   public Void forClassDef(ClassDef that)", "diff": ["+    that.getSuperclass().visit(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2185f5ff9971779327e932f346b04611", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 28, "signatureBeforeChange": "          public void testForModifiersAndVisibilityDoFirst()", "signatureAfterChange": "          public void testForModifiersAndVisibilityDoFirst()", "diff": ["-      _iv.forModifiersAndVisibilityDoFirst(_abstractMav);", "-      _iv.forModifiersAndVisibilityDoFirst(_publicMav);", "-      _iv.forModifiersAndVisibilityDoFirst(_privateMav);", "-      _iv.forModifiersAndVisibilityDoFirst(_protectedMav);", "-      _iv.forModifiersAndVisibilityDoFirst(_staticMav);", "+      _iv.forModifiersAndVisibilityDoFirst(ABSTRACT_MAV);", "+      _iv.forModifiersAndVisibilityDoFirst(PUBLIC_MAV);", "+      _iv.forModifiersAndVisibilityDoFirst(PRIVATE_MAV);", "+      _iv.forModifiersAndVisibilityDoFirst(PROTECTED_MAV);", "+      _iv.forModifiersAndVisibilityDoFirst(STATIC_MAV);", "-      _iv.forModifiersAndVisibilityDoFirst(_finalMav);", "+      _iv.forModifiersAndVisibilityDoFirst(FINAL_MAV);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "218a001fed340fe01c48ff9b07759803", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 207, "methodNumberAfterChange": 208, "signatureBeforeChange": "      private void _closeFolder()", "signatureAfterChange": "      private void _closeFolder()", "diff": ["+      if (! l.isEmpty()) _model.setProjectChanged(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "218a8503595129f84346f5c179e53e1d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public abstract ObjectMethodInvocation lookupMethod(Expression object, String name,                                                       Iterable<? extends Type> typeArgs,                                                        Iterable<? extends Expression> args,                                                       Option<Type> expected)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "   public abstract ObjectMethodInvocation lookupMethod(Expression object, String name,                                                       Iterable<? extends Type> typeArgs,                                                        Iterable<? extends Expression> args,                                                       Option<Type> expected, Access.Module accessModule)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-                                                      Option<Type> expected)", "+                                                      Option<Type> expected, Access.Module accessModule)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "218cc5a1e15459ef63f0463260499665", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 371, "methodNumberAfterChange": 614, "signatureBeforeChange": "    final private boolean jj_3R_334()", "signatureAfterChange": "    final private boolean jj_3R_163()", "diff": ["-  final private boolean jj_3R_334() {", "-    if (jj_3R_343()) return true;", "-    if (jj_3R_354()) jj_scanpos = xsp;", "+  final private boolean jj_3R_163() {", "+    if (jj_3R_206()) return true;", "+    if (jj_3R_266()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21c4a7527d08fe2607fe4767a436198a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 354, "methodNumberAfterChange": 318, "signatureBeforeChange": "    final private boolean jj_3R_432()", "signatureAfterChange": "    final private boolean jj_3R_438()", "diff": ["+", "+  final private boolean jj_3R_438() {", "+    if (jj_3R_454()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_469()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_432() {", "-    if (jj_3R_453()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_464()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21e56c018dde350950203b642575d90c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "53d061333fe3393f6569c1f553912f1a449482ad", "commitAfterChange": "12c8304e14a6d9eafe2f7093583d8040569150c1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void testGetMultipleSourceRootsDefaultPackage() throws BadLocationException, IOException", "signatureAfterChange": "     public void testGetMultipleSourceRootsDefaultPackage() throws BadLocationException, IOException", "diff": ["-//    _log.log(\"testGetMultipleSourceRootsDefaultPackage() completed\");", "+    _log.log(\"testGetMultipleSourceRootsDefaultPackage() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21e5bf7a168759d5f6b4fd5b22a42ecd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 183, "methodNumberAfterChange": 183, "signatureBeforeChange": "     private void _setUpPanes()", "signatureAfterChange": "     private void _setUpPanes()", "diff": ["-    JScrollPane defScroll = (JScrollPane)", "-      _defScrollPanes.get(_model.getActiveDocument());", "+    JScrollPane defScroll = _defScrollPanes.get(_model.getActiveDocument());", "-        ", "+", "-        int debugHeight = ", "+        int debugHeight =", "-        ", "+", "-    ", "+", "-    ", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "220957604b71d9f816b2adef6c915a4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "df9cbdf4ec8cbcbc3942b966a48a15d33dcac7ed", "commitAfterChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected final void invokeSlave(final String[] jvmArgs, final String cp, final File workDir) throws IOException,      RemoteException", "signatureAfterChange": "   protected final void invokeSlave(final String[] jvmArgs, final String cp, final File workDir) throws IOException,      RemoteException", "diff": ["-      try { _masterStub = (MasterRemote) UnicastRemoteObject.exportObject(this); }", "+      try { _masterStub = (MasterRemote) toStub(this); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22181afc07cf8cbb25c2c0af7075acf8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public void testRealSaveFirstSave() throws BadLocationException, IOException", "signatureAfterChange": "   public void testRealSaveFirstSave() throws BadLocationException, IOException", "diff": ["+    ", "+    _log.log(\"testRealSaveFirstSave completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "221d31cc9dfa13e3a6a39725ac7a346f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "405bec7d97445f0020939e0560dc10393430aac1", "commitAfterChange": "070ce5905e33fc289f79bfc0035862d6493d03f5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected void doCompile(OpenDefinitionsDocument doc, File file)     throws IOException, InterruptedException", "signatureAfterChange": "   protected void doCompile(OpenDefinitionsDocument doc, File file)     throws IOException, InterruptedException", "diff": ["+    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22229b83c0a49fca41978291c6755955", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/JVMUtilities.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static String getReturnTypeName(Class c)", "signatureAfterChange": "   public static String getReturnTypeName(Class c)", "diff": ["-    String s = (String)types.get(c);", "+    String s = types.get(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22412c5a5c6724c4326f611fadafd3d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 356, "signatureBeforeChange": "    final private boolean jj_3R_341()", "signatureAfterChange": "    final private boolean jj_3R_344()", "diff": ["-  final private boolean jj_3R_341() {", "-    if (jj_3R_350()) return true;", "+  final private boolean jj_3R_344() {", "+    if (jj_3R_353()) return true;", "-    if (jj_3R_361()) jj_scanpos = xsp;", "+    if (jj_3R_364()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "224598d90832375b301467128d204af0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 680, "methodNumberAfterChange": 663, "signatureBeforeChange": "    final private boolean jj_3R_238()", "signatureAfterChange": "    final private boolean jj_3R_248()", "diff": ["-  final private boolean jj_3R_238() {", "+  final private boolean jj_3R_248() {", "-    if (jj_3R_265()) {", "+    if (jj_3R_275()) {", "-    if (jj_3R_266()) return true;", "+    if (jj_3R_276()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2248a2e536c40090459e2ea642936fdf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     public Object visit(PlusExpression node)", "signatureAfterChange": "   public Class visit(PlusExpression node)", "diff": ["-     */", "-    public Object visit(PlusExpression node) {", "-        Class c = visitUnaryOperation(node, \"plus.expression.type\");", "-", "-        // Compute the expression if it is constant", "-        Node  n = node.getExpression();", "-        if (n.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.plus(c, n.getProperty(NodeProperties.VALUE)));", "-        }", "-        return c;", "+   */", "+  public Class visit(PlusExpression node) {", "+    Class c = visitUnaryOperation(node, \"plus.expression.type\");", "+    ", "+    // Compute the expression if it is constant", "+    Node  n = node.getExpression();", "+    if (n.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.plus(c, n.getProperty(NodeProperties.VALUE)));", "+    }", "+    return c;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "225e98b03fc7720b40081abee23fb57f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public boolean isTopLevelGroupSelected()", "signatureAfterChange": "   public boolean isTopLevelGroupSelected()", "diff": ["-  /** Returns true if a top level group is selected */", "+  /** Returns true if a top level group is selected.  Only runs in event thread. */", "-    synchronized (_model) {", "+//    synchronized (_model) {", "-    }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "226e20d9ab9d2e4aa38129ad77661fa6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/JavacGJCompiler.java", "commitBeforeChange": "720d6a91901cb3699fb981b0c6b71471d6bbb848", "commitAfterChange": "aca6df4ff04f6b0997ef08356070ddcc1de031bf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void _initCompiler()", "signatureAfterChange": "     private void _initCompiler(File sourceRoot)", "diff": ["-  private void _initCompiler() {", "+  private void _initCompiler(File sourceRoot) {", "+    options.put(\"-sourcepath\", sourceRoot.getAbsolutePath());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22872c7df473cf12c70c1dc80506b513", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/CastExpression.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setTargetType(TypeName t)", "signatureAfterChange": "   public void setTargetType(TypeName t)", "diff": ["-    if (t == null) throw new IllegalArgumentException(\"t == null\");", "+    //if (t == null) throw new IllegalArgumentException(\"t == null\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "229d80aad282ddbc80778c793132f9a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 568, "methodNumberAfterChange": 365, "signatureBeforeChange": "    final private boolean jj_3R_371()", "signatureAfterChange": "    final private boolean jj_3R_370()", "diff": ["+", "+  final private boolean jj_3R_370() {", "+    if (jj_3R_377()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_396()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_371() {", "-    if (jj_3R_376()) return true;", "-      if (jj_3R_404()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22a07e2253bd4f729b5875404b02c42a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "eee347fd3fa2c22c95183dc23b859e14d297bb1b", "commitAfterChange": "a72aa0a4c1f252999ab0a9a3163ec82bfbbfaea2", "methodNumberBeforeChange": 639, "methodNumberAfterChange": 639, "signatureBeforeChange": "   private void _updateDebugStatus()", "signatureAfterChange": "   private void _updateDebugStatus()", "diff": ["-    if (! isDebuggerReady()) return;", "+    boolean debuggerReady = isDebuggerReady();", "+    _guiAvailabilityNotifier.ensureAvailabilityIs(GUIAvailabilityListener.ComponentType.DEBUGGER, debuggerReady);", "+    if (!debuggerReady) { return; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22a28461c7809825604d0676d3891235", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 229, "methodNumberAfterChange": 231, "signatureBeforeChange": "     public boolean checkIfClassFileInSync()", "signatureAfterChange": "     public boolean checkIfClassFileInSync()", "diff": ["+      ", "+      if (isUntitled()) return true;", "+      ", "-      try {", "-        sourceFile = getFile();", "-      }", "-      catch (IllegalStateException ise) { throw new UnexpectedException(ise); }", "+      try { sourceFile = getFile(); }", "-      if (sourceFile.lastModified() > classFile.lastModified()) {", "+      if ((sourceFile == null) || (sourceFile.lastModified() > classFile.lastModified())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22ab3203c705a9528949c17d554122aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public ClasspathVector getClasspath();", "signatureAfterChange": "   public ClassPathVector getClassPath();", "diff": ["-  public ClasspathVector getClasspath();", "+  public ClassPathVector getClassPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22c39f3e5ded667bce70b2a5f1017c47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileIOTest.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testClassFileSynchronization()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronization()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    if (_model.getNumErrors() > 0) {", "+    if (_model.getCompilerModel().getNumErrors() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22cd6f39941ce4e4493daa6beb5792b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 774, "methodNumberAfterChange": 713, "signatureBeforeChange": "    final private boolean jj_3R_517()", "signatureAfterChange": "    final private boolean jj_3R_517()", "diff": ["+", "+  final private boolean jj_3R_517() {", "+    if (jj_3R_541()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_517() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22db88171c801b49488cc29391d23438", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 371, "methodNumberAfterChange": 374, "signatureBeforeChange": "    final private boolean jj_3R_158()", "signatureAfterChange": "    final private boolean jj_3R_159()", "diff": ["-  final private boolean jj_3R_158() {", "-    if (jj_3R_192()) return true;", "+  final private boolean jj_3R_159() {", "+    if (jj_3R_193()) return true;", "-    if (jj_3R_248()) jj_scanpos = xsp;", "+    if (jj_3R_249()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22e0b436a9e25513150fd0f5832f2b20", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-mint/edu/rice/cs/drjava/model/compiler/MintCompiler.java", "commitBeforeChange": "9d83c5e72c3c3a4b777224dfc83ca830e4a2d380", "commitAfterChange": "d5a76eb30f8febc02797eff15a790d6bbcae28ae", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "    public boolean isAvailable()", "signatureAfterChange": "    public boolean isAvailable()", "diff": ["-      Class<?> diagnostic = Class.forName(\"javax.tools.Diagnostic\");", "+      Class<?> diagnostic = Class.forName(\"edu.rice.cs.mint.comp.javax.tools.Diagnostic\");", "-      // javax.tools.Diagnostic is also found in rt.jar; to test if tools.jar", "+      // edu.rice.cs.mint.comp.javax.tools.Diagnostic is also found in rt.jar; to test if tools.jar", "-      Class.forName(\"com.sun.tools.javac.main.JavaCompiler\");", "+      Class.forName(\"edu.rice.cs.mint.comp.com.sun.tools.javac.main.JavaCompiler\");", "-      Class.forName(\"com.sun.source.tree.BracketExprTree\");", "-      Class.forName(\"com.sun.source.tree.BracketStatTree\");", "-      Class.forName(\"com.sun.source.tree.EscapeExprTree\");", "-      Class.forName(\"com.sun.source.tree.EscapeStatTree\");", "+      Class.forName(\"edu.rice.cs.mint.comp.com.sun.source.tree.BracketExprTree\");", "+      Class.forName(\"edu.rice.cs.mint.comp.com.sun.source.tree.BracketStatTree\");", "+      Class.forName(\"edu.rice.cs.mint.comp.com.sun.source.tree.EscapeExprTree\");", "+      Class.forName(\"edu.rice.cs.mint.comp.com.sun.source.tree.EscapeStatTree\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22e4ba2f090eae8d77051d64122c1ec0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassChecker.java", "commitBeforeChange": "dc96b8e17de1b9fbcfb0683311d7e482b6fcfcf3", "commitAfterChange": "270c6e5f741c371e9536c93af7f5525dbf67eeee", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 39, "signatureBeforeChange": "          @Override public Void visit(ConstructorDeclaration node)", "signatureAfterChange": "          @Override public Void visit(ConstructorDeclaration node)", "diff": ["-      for (Node n : node.getStatements()) {", "-        bodyContext = n.acceptVisitor(new StatementChecker(bodyContext, _opt));", "-      }", "+      new StatementChecker(bodyContext, _opt).checkList(node.getStatements());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22ec6f54805b3ff9c0dca1d45a77768a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 460, "methodNumberAfterChange": 464, "signatureBeforeChange": "    final private boolean jj_3R_407()", "signatureAfterChange": "    final private boolean jj_3R_414()", "diff": ["-", "-  final private boolean jj_3R_407() {", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    if (jj_3R_402()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_426()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_414() {", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    if (jj_3R_409()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_433()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22efd9f8c6e5d7ed0811ec386ccdaa36", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 29, "signatureBeforeChange": "         public void testActiveAndInactive()", "signatureAfterChange": "         public void testActiveAndInactive()", "diff": ["+    ", "+    _log.log(\"testActiveAndInactive completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22f66398c69d3353075b3ffad96b6786", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 163, "signatureBeforeChange": "   public ClasspathVector getProjectExtraClasspath()", "signatureAfterChange": "   public ClassPathVector getExtraClassPath()", "diff": ["-  public ClasspathVector getProjectExtraClasspath() {", "-    return _state.getExtraClasspath();", "+  public ClassPathVector getExtraClassPath() {", "+    return _state.getExtraClassPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2305a111446f45f6ea5d9508f8327001", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 160, "signatureBeforeChange": "   final public void methodDeclarationLookahead() throws ParseException", "signatureAfterChange": "   final public void constructorDeclarationLookahead() throws ParseException", "diff": ["+      jj_la1[182] = jj_gen;", "-      jj_la1[182] = jj_gen;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "230cc565744ba0c4e633b5bbc5967a6e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void testGetLineDeleteText() throws BadLocationException", "signatureAfterChange": "   public void testGetLineDeleteText() throws BadLocationException", "diff": ["-    defModel.insertString(0,s,null);", "-    defModel.setCurrentLocation(35);", "-    assertEquals(\"Before delete\", 4, defModel.getCurrentLine() );", "-    defModel.remove(0,30);", "-    defModel.setCurrentLocation(5);", "-    assertEquals(\"After delete\", 1, defModel.getCurrentLine() );", "+    _defModel.insertString(0,s,null);", "+    _defModel.setCurrentLocation(35);", "+    assertEquals(\"Before delete\", 4, _defModel.getCurrentLine() );", "+    _defModel.remove(0,30);", "+    _defModel.setCurrentLocation(5);", "+    assertEquals(\"After delete\", 1, _defModel.getCurrentLine() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "235a37d693e5fd368f649522308a66f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "6f064a351cf6f32ca81eb7bd4e1d9f192f6a46c6", "commitAfterChange": "4c20648756c871d7891d04fa6baa315408a26469", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testInsertGap()", "signatureAfterChange": "  \tpublic void testInsertGap()", "diff": ["-\t\t\t//inserts a gap. ", "-\t\t\tmodel1.insertGap(4);", "+\t\t\tinsertGap(model1, 4);", "-\t\t\tmodel2.insertGap(5);", "+\t\t\tinsertGap(model2, 5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "235d723d53fc286f28f5d7b6f897e3ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      @Override public TypeContext visit(ExpressionStatement node)", "signatureAfterChange": "      @Override public TypeContext visit(ExpressionStatement node)", "diff": ["-            Node decl = new VariableDeclaration(false, null, name, assign.getRightExpression(), node.getSourceInfo());", "+            Node decl = new VariableDeclaration(ModifierSet.make(), null, name, assign.getRightExpression(),", "+                                                node.getSourceInfo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "236cd89602d2a21664d4dbdfe9d40773", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "4402afa3c67a362593909f349f9fbb816e477bed", "commitAfterChange": "b88c168dd97b3e73bf1e2484f86af286c295bdde", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public synchronized void setBreakpoint(final Breakpoint breakpoint)", "signatureAfterChange": "   public synchronized void setBreakpoint(final Breakpoint breakpoint)", "diff": ["+    ", "+    breakpoint.getDocument().checkIfClassFileInSync();", "+    // update UI back in MainFrame"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2376bdfc1680b3b37c3b53a99cf12e3b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TryCatchBodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected void compareThrownAndCaught(TryCatchStatement that, SymbolData[] caught_array, LinkedList<Pair<SymbolData, JExpression>> thrown)", "signatureAfterChange": "   protected void compareThrownAndCaught(TryCatchStatement that, SymbolData[] caught_array, LinkedList<Pair<SymbolData, JExpression>> thrown)", "diff": ["-        if (sd.isSubClassOf(currCaughtSD) || (!isUncaughtCheckedException(sd, new NullLiteral(JExprParser.NO_SOURCE_INFO)))) {", "+        if (sd.isSubClassOf(currCaughtSD) || (!isUncaughtCheckedException(sd, new NullLiteral(SourceInfo.NO_INFO)))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "238b4c9e46e765c5ece4c04e10bcd80e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 741, "methodNumberAfterChange": 746, "signatureBeforeChange": "    final private boolean jj_3R_522()", "signatureAfterChange": "    final private boolean jj_3R_529()", "diff": ["-", "-  final private boolean jj_3R_522() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_540()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_541()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_529() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_547()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_548()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2393f4b6f2d701cff44b21e1890f9c1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectMenuTest.java", "commitBeforeChange": "ce99ad77121aabff91f9c6fba762f853ca2a34f5", "commitAfterChange": "c7e182b04aa52ae1423064c733cc8609017cc26d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["-    _auxFile = File.createTempFile(\"aux\", \".java\");", "+    _auxFile = File.createTempFile(\"aux\", \".java\").getCanonicalFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "239720fb2f0b8e96a3cd3d06d009a645", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 346, "methodNumberAfterChange": 347, "signatureBeforeChange": "    final private boolean jj_3R_279()", "signatureAfterChange": "    final private boolean jj_3R_286()", "diff": ["-", "-  final private boolean jj_3R_279() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(30)) jj_scanpos = xsp;", "-    if (jj_3R_78()) return true;", "-    if (jj_3R_408()) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_460()) { jj_scanpos = xsp; break; }", "-    }", "+  final private boolean jj_3R_286() {", "+    if (jj_3R_79()) return true;", "+    if (jj_3R_410()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_462()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "239bd195c94fa16203ef1702fc73fca4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 293, "methodNumberAfterChange": 296, "signatureBeforeChange": "    final private boolean jj_3R_101()", "signatureAfterChange": "    final private boolean jj_3R_102()", "diff": ["-  final private boolean jj_3R_101() {", "-    if (jj_3R_152()) return true;", "+  final private boolean jj_3R_102() {", "+    if (jj_3R_153()) return true;", "-      if (jj_3_67()) { jj_scanpos = xsp; break; }", "+      if (jj_3_69()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23b562143570d0a7e7be54337c5567c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "          public void redo()", "signatureAfterChange": "          public void redo()", "diff": ["+      if(_pos > -1) {", "+        setCaretPosition(_pos);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23bd6ad1406560b908376843de83ba0c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JDKToolsLibrary.java", "commitBeforeChange": "601a464d68d9614b980a0acf64c3c8928b17445c", "commitAfterChange": "b35a353aefac369485a6c43b1b1d62dab2d5057c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected static String adapterForCompiler(JavaVersion.FullVersion version)", "signatureAfterChange": "      protected static String adapterForCompiler(JavaVersion.FullVersion version)", "diff": ["-          case COMPOUND: return \"edu.rice.cs.drjava.model.compiler.MintCompiler\";", "+          case COMPOUND: return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23d4e6b4c60d64da74778a4fc219a994", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 116, "signatureBeforeChange": "   private JMenu _setUpHelpMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpHelpMenu(int mask)", "diff": ["+    helpMenu.add(_helpAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23d705d13c6e13bd994194a9a7b34860", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 645, "methodNumberAfterChange": 791, "signatureBeforeChange": "    final private boolean jj_3R_569()", "signatureAfterChange": "    final private boolean jj_3R_492()", "diff": ["-", "-  final private boolean jj_3R_569() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_570()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_571()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_492() {", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+      if (jj_3R_510()) { jj_scanpos = xsp; break; }", "+    xsp = jj_scanpos;", "+    if (jj_3R_511()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23e0d90774e0fd99c5a221fad416131c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "43b808b9e05f3378c0faae83fe4225562adc4c6e", "commitAfterChange": "723910d837b2fcdd9f4127559df4832f71fb62e8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testResultOfNonPublicTestCase() throws Exception", "signatureAfterChange": "   public void testResultOfNonPublicTestCase() throws Exception", "diff": ["-    TestShouldSucceedListener listener = new TestShouldSucceedListener();", "+    JUnitTestListener listener = new JUnitTestListener();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24084f3511cedbbc6f07f13c30da0184", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "b97db40bea671594a37f7cabd8d363cab45e0154", "commitAfterChange": "fab79f2f445044e7a60a89e228042164713428d9", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testGetLine3() throws BadLocationException", "signatureAfterChange": "   public void testGetLine3() throws BadLocationException", "diff": ["-    defModel.gotoLine(4);", "+    defModel.setCurrentLocation(6);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "241bb367ff54263ddd3ceaa35dc9322c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2707043a47325658db92e0290e695128c6817bba", "commitAfterChange": "0c506ac270d6b542eb2c43fb49629be8c2634151", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 159, "signatureBeforeChange": "      private void _saveProjectHelper(File file)", "signatureAfterChange": "      private void _saveProjectHelper(File file)", "diff": ["-    _saveProjectAction.setEnabled(false);", "+//    _saveProjectAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "241ea4e0d6f04dd9bc48447394a2f826", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "6a5c20e1ee845b9752ac481574f6a7bee8c034e1", "commitAfterChange": "dd020118801905f09871a55ddb6fe47a118916d4", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private void _resetEnabledStatus()", "signatureAfterChange": "   private void _resetEnabledStatus()", "diff": ["+    /*", "+    */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "242593942597607ccd821209361a1c17", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 348, "methodNumberAfterChange": 351, "signatureBeforeChange": "    final private boolean jj_3R_286()", "signatureAfterChange": "    final private boolean jj_3R_294()", "diff": ["-  final private boolean jj_3R_286() {", "+  final private boolean jj_3R_294() {", "-    if (jj_3R_410()) return true;", "+    if (jj_3R_417()) return true;", "-      if (jj_3R_462()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_469()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2449fdfd1f6b5ff4f3f556153627627a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public void testGetMultipleSourceRootsDefaultPackage() throws BadLocationException, IOException", "signatureAfterChange": "         public void testGetMultipleSourceRootsDefaultPackage() throws BadLocationException, IOException", "diff": ["+    debug.logStart();", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "247f879cb58725e09aaf82f141e20baa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/FileOptionComponent.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void chooseFile()", "signatureAfterChange": "   public void chooseFile()", "diff": ["+    _jfc.setDialogTitle(\"Select\");", "+    _jfc.setApproveButtonText(\"Select\");", "+    if (_fileFilter != null) {", "+      _jfc.setFileFilter(_fileFilter);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24970d1974851f4234c3c1ae2472b4a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyAdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public Void forInnerClassDef(InnerClassDef that)", "signatureAfterChange": "   public Void forInnerClassDef(InnerClassDef that)", "diff": ["-  public Void forInnerClassDef(InnerClassDef that) {", "+  public Void forInnerClassDef(InnerClassDef that) { ", "-    handleInnerClassDef(that, _bodyData, getQualifiedClassName(_bodyData.getSymbolData().getName()) + \"$\" + ", "-                        _bodyData.getSymbolData().preincrementLocalClassNum() + that.getName().getText());", "+    handleInnerClassDef(that, _bodyData, getQualifiedClassName(_bodyData.getSymbolData().getName()) + \".\" + ", "+                        /* _bodyData.getSymbolData().preincrementLocalClassNum() + */ that.getName().getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "249910ea1f94e85abfa93f24c1f88ad1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 511, "methodNumberAfterChange": 501, "signatureBeforeChange": "    final private boolean jj_3R_187()", "signatureAfterChange": "    final private boolean jj_3R_200()", "diff": ["-", "-  final private boolean jj_3R_187() {", "-    if (jj_scan_token(SYNCHRONIZED)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_100()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_135()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_200() {", "+    if (jj_scan_token(SYNCHRONIZED)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_102()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_143()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2499303281a835f8ffcd47dfbf346f1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "37c8b98d0ad1298fad5ffcfaca1cbbcb2d02ccb9", "commitAfterChange": "3cf2bad5815eb08f28030dc9d8d4cd99c847a616", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "     private void _setUpPanes()", "signatureAfterChange": "     private void _setUpPanes()", "diff": ["+    split.setResizeWeight(1.0);", "-    // This is annoyingly order-dependent. Since split2 contains split1,", "-    // we need to get split2's divider set up first to give split1 an overall", "-    // size. Then we can set split1's divider. Ahh, Swing.", "+    // This is annoyingly order-dependent. Since split contains _docSplitPane,", "+    // we need to get split's divider set up first to give _docSplitPane an", "+    // overall size. Then we can set _docSplitPane's divider. Ahh, Swing."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24ab97e35e8e9bde24118352a2508139", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 514, "methodNumberAfterChange": 507, "signatureBeforeChange": "    final private boolean jj_3_48()", "signatureAfterChange": "    final private boolean jj_3_49()", "diff": ["+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_94()) return true;", "+    if (jj_3R_374()) return true;", "-  final private boolean jj_3_48() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_93()) return true;", "-    if (jj_3R_341()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24b106a58e54843500147c27552098ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "a757cd8e27c11c0cc6bf4ab20e64c2d65c2b4076", "commitAfterChange": "0fb45818396fd0f22d5caa4d32dda7936589092c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DebugPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public DebugPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-", "-    boolean advancedMode = DrJava.CONFIG.getSetting(OptionConstants.DEBUGGER_ADVANCED).booleanValue();", "+    // Only add input field in advanced mode", "+    boolean advancedMode = ", "+      DrJava.CONFIG.getSetting(DEBUGGER_ADVANCED).booleanValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24bc8d157eb3a30b1ba0fdf10df8688a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1ff154e9eb4de7b8f07ce9a8120997b76e53aa3f", "commitAfterChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "methodNumberBeforeChange": 221, "methodNumberAfterChange": 221, "signatureBeforeChange": "   public void showFindResultsPanel(final FindResultsPanel panel)", "signatureAfterChange": "   public void showFindResultsPanel(final FindResultsPanel panel)", "diff": ["-    panel.setVisible(true);", "+//    panel.setVisible(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24c4e18bad0cefcf7ee3acf718194885", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/JVMBuilder.java", "commitBeforeChange": "6a0664a6393270bb5baf40afeb2b4c9fabf7455b", "commitAfterChange": "a1c288a48316b1c91a6ebecbbeffc93089c5ebaa", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public Process start(String mainClass, Iterable<? extends String> mainParams) throws IOException", "signatureAfterChange": "   public Process start(String mainClass, Iterable<? extends String> mainParams) throws IOException", "diff": ["-    debug.logValues(\"Starting JVM\", new String[]{\"command\", \"env\", \"dir\"}, command, env, _dir);", "+    // IMPORTANT: Do not leave this logging message uncommented, or setting debug to an RMILogSink won't work", "+    //debug.logValues(\"Starting JVM\", new String[]{\"command\", \"env\", \"dir\"}, command, env, _dir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24d3233ed80a2ff143c7d0f8c06b61d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testMetaKeyPress() throws BadLocationException", "signatureAfterChange": "   public void testMetaKeyPress() throws BadLocationException", "diff": ["-    });", "+    }); ", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24ec8d32bf2d3514a25a01168bc9a694", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "5293cb4cfbc2f45d6061ba4101ad60348aa251ed", "commitAfterChange": "f68f43e5a680bb235f87f6125c6c0de6d15a12f4", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void addInterpreter(String name)", "signatureAfterChange": "   public void addInterpreter(String name)", "diff": ["-    Interpreter i = new Interpreter(Options.DEFAULT, _classPathManager.getClassLoader());", "+    Interpreter i = new Interpreter(_interpreterOptions, _classPathManager.getClassLoader());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24fbd93af9e5aebdfcfe03f78e459762", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 423, "methodNumberAfterChange": 413, "signatureBeforeChange": "    final private boolean jj_3R_197()", "signatureAfterChange": "    final private boolean jj_3R_363()", "diff": ["-  final private boolean jj_3R_197() {", "+", "+  final private boolean jj_3R_363() {", "-    if (jj_3R_105()) return true;", "+    if (jj_3R_87()) return true;", "-      if (jj_3R_273()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_592()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25124f8dceb95123ff606fe357ea4773", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "42465b0c95801c83cae0d8e781c43cb17e95c775", "commitAfterChange": "dd7f7fbbfae186b155b4ab01f1629e1623154745", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public Class visit(VariableDeclaration node)", "signatureAfterChange": "   public Class visit(VariableDeclaration node)", "diff": ["-    } else {", "+    } ", "+    else {", "-    Node init = node.getInitializer();", "+    // Get the type of the initializer", "+    Expression init = node.getInitializer();", "-      checkAssignmentStaticRules(lc, rc, node, init);", "+      Expression exp = checkAssignmentStaticRules(lc, rc, node, init);", "+      node.setInitializer(exp);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "251408f0dea563fe70e30e71e437028b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/HistoryTest.java", "commitBeforeChange": "97f966af08ae6bec968f68d8b2fce6c5531a12b8", "commitAfterChange": "d4f8b5e1e15fc2c34ba6969d4ef7bdb04cc8916b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void setUp()", "signatureAfterChange": "   protected void setUp()", "diff": ["+    DrJava.getConfig().resetToDefaults();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "251e8271bc1b64ba3cf73eb83ab39d35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public Class visit(ObjectFieldAccess node)", "signatureAfterChange": "   public Class visit(ObjectFieldAccess node)", "diff": ["-    Class c = (Class)node.getExpression().acceptVisitor(this);", "-    ", "+    Class c = node.getExpression().acceptVisitor(this);", "+", "-      ", "+", "-      ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "252c2e43a0d0001f24ec72c7a9b949f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerProxy.java", "commitBeforeChange": "6e331e9844f73cd6f98ef32e034b0175583aeba8", "commitAfterChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    private void _recreateCompiler()", "signatureAfterChange": "    private void _recreateCompiler()", "diff": ["+      _realCompiler.setBuildDirectory(_buildDir);", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "253db396165ca3f445ffc71a573bf544", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testLineCommentBreakCrazy()", "signatureAfterChange": "   public void testLineCommentBreakCrazy()", "diff": ["-    assertEquals(\"#2.2\", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());", "+    assertEquals(\"#2.2\", INSIDE_LINE_COMMENT, model1._getStateAtCurrent());", "-    assertEquals(\"#3.3\", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());", "+    assertEquals(\"#3.3\", INSIDE_BLOCK_COMMENT, model1._getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "254c03cba5d6f7e31d74d8d819573ff9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtilTest.java", "commitBeforeChange": "68d168459c8dd5e834eb3e6f1d6d0a72960394a4", "commitAfterChange": "b89718e80514b13fc8604c8722ea7855677506ce", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testAsArray()", "signatureAfterChange": "      public void testToArray()", "diff": ["-  public void testAsArray() {", "+  public void testToArray() {", "-    strings = asArray(IterUtil.<String>empty(), String.class);", "+    strings = toArray(IterUtil.<String>empty(), String.class);", "-    strings = asArray(make(\"foo\", \"bar\", \"baz\"), String.class);", "+    strings = toArray(make(\"foo\", \"bar\", \"baz\"), String.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "255ea26125510748ccd000dc8142906a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "55ffd5d461fa009444744f2527631191c6f9decc", "commitAfterChange": "0fed03351fa05790a48229380b62c5e4589b0332", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 64, "signatureBeforeChange": "   private boolean nodeShouldBeRemoved(DefaultMutableTreeNode node)", "signatureAfterChange": "   private boolean nodeFileExists(DefaultMutableTreeNode node)", "diff": ["-  private boolean nodeShouldBeRemoved(DefaultMutableTreeNode node) {", "+  private boolean nodeFileExists(DefaultMutableTreeNode node) {", "-    return (dat instanceof FileDisplay) &&", "-      !((FileDisplay)dat).getFile().exists();", "+    return !(dat instanceof FileDisplay) || ((FileDisplay)dat).getFile().exists();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25605aff2987ecaef0484e115bf2753e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/PendingRequestManager.java", "commitBeforeChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "commitAfterChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void addPendingRequest (DocumentDebugAction action)", "signatureAfterChange": "   public void addPendingRequest (DocumentDebugAction action)", "diff": ["-      System.out.println(\"Creating prepareRequest in class \" + className);", "+      //System.out.println(\"Creating prepareRequest in class \" + className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "257b424761a300182b19759dd65cf336", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testInteractionsDefineAnonymousInnerClass() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsDefineAnonymousInnerClass() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "diff": ["+    debug.logStart();", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "257c921f0fb4b7be14061255aee49f31", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 326, "signatureBeforeChange": "    final private boolean jj_3R_315()", "signatureAfterChange": "    final private boolean jj_3R_319()", "diff": ["-", "-  final private boolean jj_3R_315() {", "-    if (jj_3R_275()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_391()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_319() {", "+    if (jj_3R_279()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_398()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25864e21ff91ab5a5fee3e4666e7ebcd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public void gotoLine(int line)", "signatureAfterChange": "   public void gotoLine(int line)", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2591110ef99d8dcda73b9266de92123a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "dab739e9c0a893840c19d552b534083722093495", "commitAfterChange": "9d7de430d203354a52d3faa0378a92c50af92fb7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testNonTestCaseError() throws BadLocationException, IOException", "signatureAfterChange": "   public void testNonTestCaseError() throws Exception", "diff": ["-  public void testNonTestCaseError() throws BadLocationException, IOException {", "+  public void testNonTestCaseError() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25a1053bf24d774013433fb8163a6dc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testInfiniteLoop() throws Exception", "signatureAfterChange": "   public void testInfiniteLoop() throws Exception", "diff": ["-    _model.setResetAfterCompile(false);", "-    //synchronized(listener) {", "-      doc.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener.wait();", "-    //}", "+    // Doesn't reset interactions because interpreter is not used", "+    doc.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ba4e6175378b2d45ae3962574814cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Bob.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "               public void testForArrayInitializerHelper()", "signatureAfterChange": "               public void testForArrayInitializerHelper()", "diff": ["-      LanguageLevelVisitor llv = new LanguageLevelVisitor(_b._file, _b._package, _b._importedFiles, ", "-                                                          _b._importedPackages, new LinkedList<String>(), new Hashtable<String, Pair<TypeDefBase, LanguageLevelVisitor>>(), ", "-                                                          new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>());", "+      LanguageLevelVisitor llv =", "+        new LanguageLevelVisitor(_b._file, _b._package, _b._importedFiles, ", "+                                 _b._importedPackages, new LinkedList<String>(), ", "+                                 new Hashtable<String, Pair<TypeDefBase, LanguageLevelVisitor>>(), ", "+                                 new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>());", "-      SourceInfo si = JExprParser.NO_SOURCE_INFO;", "+      SourceInfo si = SourceInfo.NO_INFO;", "-      Expression e6 = new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"int\"));", "+      Expression e6 = new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"int\"));", "-      assertEquals(\"Should return instance of int[]\", intArray.getInstanceData(), _b.forArrayInitializerHelper(ia, intArray));", "+      assertEquals(\"Should return instance of int[]\", intArray.getInstanceData(), ", "+                   _b.forArrayInitializerHelper(ia, intArray));", "-      assertEquals(\"Should return instance of int[][]\", intArray2.getInstanceData(), _b.forArrayInitializerHelper(ia, intArray2));", "+      assertEquals(\"Should return instance of int[][]\", intArray2.getInstanceData(), ", "+                   _b.forArrayInitializerHelper(ia, intArray2));", "-      assertEquals(\"Should return instance of int[][]\", intArray2.getInstanceData(), _b.forArrayInitializerHelper(ia, intArray2));", "+      assertEquals(\"Should return instance of int[][]\", intArray2.getInstanceData(), ", "+                   _b.forArrayInitializerHelper(ia, intArray2));", "-      assertEquals(\"Should return double\", SymbolData.DOUBLE_TYPE.getInstanceData(), _b.forArrayInitializerHelper(ia, SymbolData.DOUBLE_TYPE));", "+      assertEquals(\"Should return double\", SymbolData.DOUBLE_TYPE.getInstanceData(), ", "+                   _b.forArrayInitializerHelper(ia, SymbolData.DOUBLE_TYPE));", "-      assertEquals(\"The error message should be correct\", \"You cannot initialize the non-array type double with an array initializer\", errors.getLast().getFirst());", "+      assertEquals(\"The error message should be correct\", ", "+                   \"You cannot initialize the non-array type double with an array initializer\", ", "+                   errors.getLast().getFirst());", "-      assertEquals(\"Should return instance of int[]\", intArray.getInstanceData(), _b.forArrayInitializerHelper(ia, intArray));", "+      assertEquals(\"Should return instance of int[]\", intArray.getInstanceData(), ", "+                   _b.forArrayInitializerHelper(ia, intArray));", "-      assertEquals(\"The error message should be correct\", \"The elements of this initializer should have type int but element 2 has type double\", errors.getLast().getFirst());", "+      assertEquals(\"The error message should be correct\", ", "+                   \"The elements of this initializer should have type int but element 2 has type double\", ", "+                   errors.getLast().getFirst());", "-      assertEquals(\"Should return instance of int[]\", intArray.getInstanceData(), _b.forArrayInitializerHelper(ia, intArray));", "+      assertEquals(\"Should return instance of int[]\", intArray.getInstanceData(),", "+                   _b.forArrayInitializerHelper(ia, intArray));", "-      assertEquals(\"The error message should be correct\", \"The elements of this initializer should have type int but element 0 has type null\", errors.get(2).getFirst());", "-      assertEquals(\"The error message should be correct\", \"The elements of this initializer should have type int but element 1 has type null\", errors.get(3).getFirst());", "+      assertEquals(\"The error message should be correct\", ", "+                   \"The elements of this initializer should have type int but element 0 has type null\", ", "+                   errors.get(2).getFirst());", "+      assertEquals(\"The error message should be correct\", ", "+                   \"The elements of this initializer should have type int but element 1 has type null\", ", "+                   errors.get(3).getFirst());", "-      assertEquals(\"Should return instance of int[]\", intArray.getInstanceData(), _b.forArrayInitializerHelper(ia, intArray));", "+      assertEquals(\"Should return instance of int[]\", intArray.getInstanceData(), ", "+                   _b.forArrayInitializerHelper(ia, intArray));", "-      assertEquals(\"Error message should be correct\", \"The elements of this initializer should all be instances, but you have specified the type name int.  Perhaps you meant to create a new instance of int\", errors.getLast().getFirst());", "-      ", "+      assertEquals(\"Error message should be correct\", ", "+                   \"The elements of this initializer should all be instances, but you have specified the type name\" + ", "+                   \" int.  Perhaps you meant to create a new instance of int\",", "+                   errors.getLast().getFirst());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25c6a1f0ebdc5e189b1223f08748b98b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 228, "signatureBeforeChange": "    private void _compileAll()", "signatureAfterChange": "    private void _compileAll()", "diff": ["-        hourglassOn();", "-        try { _model.getCompilerModel().compileAll(); }", "+        try {", "+          hourglassOn();", "+          _model.getCompilerModel().compileAll();", "+        }", "-        finally { hourglassOff(); }", "+        finally { hourglassOff();}", "+    update(getGraphics()); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25cd5ecc469aa93d2b081e5a6e72d6b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private void _javadocAllWorker(File destDirFile, FileSaveSelector saver,                                  String[] classpath,                                  JavadocListener listener)", "signatureAfterChange": "   private void _javadocAllWorker(File destDirFile, FileSaveSelector saver,                                  String[] classpath,                                  JavadocListener listener)", "diff": ["-    ", "+", "-    ", "+", "-      ", "+", "-        ", "+", "-        ", "+", "-        ", "+", "-            ", "+", "-            ", "+", "-    ", "+", "-    ", "+", "-    File[] sourceRoots = (File[]) sourceRootSet.toArray(new File[0]);", "+    File[] sourceRoots = sourceRootSet.toArray(new File[0]);", "-    ", "-    ", "+", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ddcba68b74c73767dc550149b2c2c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 534, "methodNumberAfterChange": 421, "signatureBeforeChange": "    final private boolean jj_3R_269()", "signatureAfterChange": "    final private boolean jj_3R_273()", "diff": ["-", "-  final private boolean jj_3R_269() {", "-    if (jj_3R_338()) {", "-    if (jj_scan_token(25)) return true;", "-    }", "-    if (jj_scan_token(COLON)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_339()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_273() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_343()) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(25)) return true;", "+    }", "+    if (jj_scan_token(COLON)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_344()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e133aee286294357e24606a913b261", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public boolean replaceCurrent()", "signatureAfterChange": "   public boolean replaceCurrent()", "diff": ["-//    _doc.acquireWriteLock();", "+    _doc.acquireWriteLock();", "-//    finally { _doc.releaseWriteLock(); }", "+    finally { _doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e329ce876fb1ad799277d037430818", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 304, "methodNumberAfterChange": 378, "signatureBeforeChange": "    final private boolean jj_3R_394()", "signatureAfterChange": "    final private boolean jj_3R_364()", "diff": ["-  final private boolean jj_3R_394() {", "-    if (jj_3R_109()) return true;", "-    if (jj_3R_299()) return true;", "+", "+  final private boolean jj_3R_364() {", "+    if (jj_3R_271()) return true;", "+    if (jj_3R_110()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25f8bcf73833bf00ae16510835ee5651", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/repl/EclipseInteractionsModel.java", "commitBeforeChange": "1827cec0a07b944a36f95e36eebdc6666dc9617c", "commitAfterChange": "302914e42441eaa34fb8588c2f19600c7ec3298a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected void _notifyInteractionEnded()", "signatureAfterChange": "   protected void _notifyInteractionEnded()", "diff": ["-      ((InteractionsListener)_listeners.get(i)).interactionEnded();", "+      _listeners.get(i).interactionEnded();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2603bb0785b32fcd7bf6cca45229b561", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 468, "methodNumberAfterChange": 587, "signatureBeforeChange": "    final private boolean jj_3R_148()", "signatureAfterChange": "    final private boolean jj_3R_339()", "diff": ["-  final private boolean jj_3R_148() {", "-    if (jj_3R_186()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_218()) jj_scanpos = xsp;", "+  final private boolean jj_3R_339() {", "+    if (jj_3R_347()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_360()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2618621ddb392690683df3eb088691b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/CastExpression.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public CastExpression(TypeName tt, Expression exp,                         String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public CastExpression(TypeName tt, Expression exp,                         String fn, int bl, int bc, int el, int ec)", "diff": ["-    if (tt == null) throw new IllegalArgumentException(\"tt == null\");", "-    ", "+    //if (tt == null) throw new IllegalArgumentException(\"tt == null\");", "+    // tt can be null in a generated cast"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26295b6da2a7d0c3e90207fe4c3575cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 450, "methodNumberAfterChange": 613, "signatureBeforeChange": "    final private boolean jj_3R_373()", "signatureAfterChange": "    final private boolean jj_3R_375()", "diff": ["-", "-  final private boolean jj_3R_373() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_166()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_356()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_375() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_167()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_358()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "263d62c7dbb4e0a1fe4904a77f91b0a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 223, "signatureBeforeChange": "    final private boolean jj_3R_175()", "signatureAfterChange": "    final private boolean jj_3R_172()", "diff": ["-", "-  final private boolean jj_3R_175() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_43()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_205()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_172() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_45()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_202()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26479592939aff57a5a4d1fc87e26cf9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "commitAfterChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": "     private void _setUpPanes()", "signatureAfterChange": "     private void _setUpPanes()", "diff": ["+        _debugPanel.setPreferredSize(_debugPanel.getMinimumSize());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "264cc6f8f3a6863d43daf4aa3a809874", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 323, "methodNumberAfterChange": 324, "signatureBeforeChange": "    final private boolean jj_3R_366()", "signatureAfterChange": "    final private boolean jj_3R_366()", "diff": ["+", "+  final private boolean jj_3R_366() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_371()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_372()) return true;", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_366() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2658042ba42ac24b7ef920be435067cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/ExecJVM.java", "commitBeforeChange": "682bd0a2b528d852a57206c89ed5bb4a5b484c14", "commitAfterChange": "c8a7a8a9d3d089ab42661ede7d141969c6ed2339", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static Process runJVM(String mainClass,                                String[] classParams,                                String classPath,                                String[] jvmParams) throws IOException", "signatureAfterChange": "   public static Process runJVM(String mainClass,                                String[] classParams,                                String classPath,                                String[] jvmParams) throws IOException", "diff": ["-    String[] jvmWithCP = args.toArray(new String[0]);", "+    String[] jvmWithCP = args.toArray(new String[args.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2658b5560f4a9802c8c7f2b80f415fbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public TypeData forClassImportStatement(ClassImportStatement that)", "signatureAfterChange": "   public TypeData forClassImportStatement(ClassImportStatement that)", "diff": ["-    for (int i = 1; i < words.length; i++) {name.append(\".\" + words[i].getText());}", "+    for (int i = 1; i < words.length; i++) {name.append('.' + words[i].getText());}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "265cb9eb5720677dd535e59e4512c894", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 432, "methodNumberAfterChange": 565, "signatureBeforeChange": "    final private boolean jj_3R_293()", "signatureAfterChange": "    final private boolean jj_3R_321()", "diff": ["-  final private boolean jj_3R_293() {", "-    if (jj_3R_303()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_316()) { jj_scanpos = xsp; break; }", "-    }", "+", "+  final private boolean jj_3R_321() {", "+    if (jj_3R_330()) return true;", "+      if (jj_3R_331()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2666cb7a1ca16a056c4c458e1b59b376", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "488c41126ca832a437f4ff8821d0be14142ae291", "commitAfterChange": "9eeb88b1f508503e62560a83d5762a2b7670db6b", "methodNumberBeforeChange": 599, "methodNumberAfterChange": 599, "signatureBeforeChange": "     public void breakpointReached(Breakpoint bp)", "signatureAfterChange": "     public void breakpointReached(Breakpoint bp)", "diff": ["-    public void breakpointReached(Breakpoint bp) { }", "+    public void breakpointReached(Breakpoint bp) { showTab(_interactionsContainer, true); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "267a6d86d9900ec50f7fcf79c41a9d82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/TaskController.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public boolean hasValue()", "signatureAfterChange": "   public boolean hasValue()", "diff": ["+  /** Check whether the task has produced a value &mdash; the status is {@code FINISHED}. */", "+  public boolean hasValue() { return status() == Status.FINISHED; }", "-  /** Check whether the task has produced a value (equivalently, whether the status is {@code FINISHED}). */", "-  public boolean hasValue() { return _status == Status.FINISHED; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2692a99efd867cd5e95e9882c4b0393a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/KeyStrokeOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testApplyThenResetDefault()", "signatureAfterChange": "    public void testApplyThenResetDefault()", "diff": ["+    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();", "-    Utilities.clearEventQueue();", "+//    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "269719c096783190a3c7d5ea1f07278d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "     public void xtestForVariableDeclaration()", "signatureAfterChange": "     public void xtestForVariableDeclaration()", "diff": ["-      System.err.println(\"**** Completed testForVariableDeclaration\");", "+//      System.err.println(\"**** Completed testForVariableDeclaration\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26b869e73b6de333338985debf6d81c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "signatureAfterChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "diff": ["-    int numErrors = _model.getNumErrors();", "+    int numErrors = _model.getCompilerModel().getNumErrors();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26c5b70065a70e48c9b6dbb6302223d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public FindReplaceMachine(SingleDisplayModel model, DocumentIterator docIterator)", "signatureAfterChange": "   public FindReplaceMachine(SingleDisplayModel model, DocumentIterator docIterator)", "diff": ["-    _skipOneFind = false;", "-    _checkAllDocsWrapped = false;", "-    _allDocsWrapped = false;", "-    _model = model;", "+    _skipText = false;", "+//    _checkAllDocsWrapped = false;", "+//    _allDocsWrapped = false;", "+//    _model = model;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26e3d8c6815190501b4e3ef530d18395", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "2f12a1eb88133f2f5af16745800b04e7680f335e", "commitAfterChange": "9eea973c08c271bfd3413c879733eaab02b552bc", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   void findPrevious()", "signatureAfterChange": "   void findPrevious()", "diff": ["-    _defPane.requestFocusInWindow();  // moves focus to DefinitionsPane", "+    if (DrJava.getConfig().getSetting(OptionConstants.FIND_REPLACE_FOCUS_IN_DEFPANE).booleanValue()) {", "+      _defPane.requestFocusInWindow();  // moves focus to DefinitionsPane", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26fc1ac72e662f2e26983d758c8cfae1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/PathClassLoaderTest.java", "commitBeforeChange": "c600519b6859da4af01c52410f91013b1bbd745a", "commitAfterChange": "7f9f9a0527fe13a3dbec8283aa5b08139cfc594b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testLoadsJumbledPath() throws Exception", "signatureAfterChange": "      public void testLoadsJumbledPath() throws Exception", "diff": ["-    assertLoadsClassAsLoader(l, \"IntBox\");", "-    assertLoadsClassAsLoader(l, \"A\");", "-    assertLoadsClassAsLoader(l, \"B\");", "-    assertLoadsClassAsLoader(l, \"C\");", "+    assertLoadsClassAsLoader(l, \"pkg.IntBox\");", "+    assertLoadsClassAsLoader(l, \"pkg.A\");", "+    assertLoadsClassAsLoader(l, \"bpkg.B\");", "+    assertLoadsClassAsLoader(l, \"pkg.C\");", "-    assertCanGet(l, \"A\", 1);", "+    assertCanGet(l, \"pkg.A\", 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "273adcc96b9ca49cea263b91de053bf1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public int findCharOnLine(int pos, char findChar)", "signatureAfterChange": "   public int findCharOnLine(int pos, char findChar)", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27529d2ccaca21419a958cd2f3f5daaa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "          public void xtestSimpleAnonymousClassInstantiationHelper()", "signatureAfterChange": "          public void xtestSimpleAnonymousClassInstantiationHelper()", "diff": ["-     SimpleAnonymousClassInstantiation basic = new SimpleAnonymousClassInstantiation(JExprParser.NO_SOURCE_INFO, new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"Object\", new Type[0]), ", "-                                                                        new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[0]),", "-                                                                        new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+     SimpleAnonymousClassInstantiation basic = new SimpleAnonymousClassInstantiation(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"Object\", new Type[0]), ", "+                                                                        new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]),", "+                                                                        new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "275fea0aa3631eca15f72673a5a28596", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "commitAfterChange": "ead43466202abb204c90f7ee2c316fec230d4415", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 194, "signatureBeforeChange": "   public Expression cast(final Type target, final Expression e) throws UnsupportedConversionException", "signatureAfterChange": "   public Expression cast(final Type target, final Expression e) throws UnsupportedConversionException", "diff": ["-          if (!isSubtype(source, target)) {", "+          if (isSubtype(source, target)) {", "+            NodeProperties.setAssertedType(result, erasedClass(target));", "+          }", "+          else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27657a24dedeee242f3600c424b03402", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   private void createPopupMenu()", "signatureAfterChange": "   private void createPopupMenu()", "diff": ["-      _toggleBreakpointMenuItem = _popMenu.add(breakpointItem);", "+//      _toggleBreakpointMenuItem = _popMenu.add(breakpointItem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "276b506806a48990b1d602451c8ed57a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "d6f67da504ad61f8681827b1ed9e34bdf47096b1", "commitAfterChange": "0a854931d2d0d982ce19ec1350fad796e2685223", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "signatureAfterChange": "   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "diff": ["+    JDKToolsLibrary.msg(\"---- Searching for Libraries ----\");", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2772e0c1463244dd4d92591ccb42fd98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void _doCompile(List<OpenDefinitionsDocument> docs) throws IOException", "signatureAfterChange": "   private void _doCompile(List<OpenDefinitionsDocument> docs) throws IOException", "diff": ["-    final ArrayList<CompilerError> packageErrors = new ArrayList<CompilerError>();", "+    final ArrayList<DJError> packageErrors = new ArrayList<DJError>();", "-          packageErrors.add(new CompilerError(f, e.getMessage(), false));", "+          packageErrors.add(new DJError(f, e.getMessage(), false));", "-            throw new IOException(\"Could not create build directory: \"+buildDir);", "+            throw new IOException(\"Could not create build directory: \" + buildDir);", "-          CompilerError err = new CompilerError(t.toString(), false);", "+//          t.printStackTrace();", "+//          throw new UnexpectedException(t);", "+          DJError err = new DJError(t.toString(), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2775f805e60ca52e8ba5b79647de10c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "28db8fb2942dc00cad50f5244fe215d573867721", "commitAfterChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "methodNumberBeforeChange": 402, "methodNumberAfterChange": 402, "signatureBeforeChange": "   private DocumentInfoGetter _makeInfoGetter(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   private DocumentInfoGetter _makeInfoGetter(final OpenDefinitionsDocument doc)", "diff": ["-    final DefinitionsPane pane = (DefinitionsPane)scroller.getViewport().getView();", "+    final DefinitionsPane pane = _currentDefPane; // rhs was (DefinitionsPane)scroller.getViewport().getView();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "277885be6a1959de5f29bb1ba632ae06", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "     public Object visit(LessExpression node)", "signatureAfterChange": "   public Class visit(LessExpression node)", "diff": ["+   */", "+  public Class visit(LessExpression node) {", "+    Class c = visitRelationalExpression(node);", "+    ", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.lessThan(ln.getProperty(NodeProperties.VALUE),", "+                                       rn.getProperty(NodeProperties.VALUE)));", "+    }", "+    return c;", "+  }", "-     */", "-    public Object visit(LessExpression node) {", "-        Class c = visitRelationalExpression(node);", "-", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.lessThan(ln.getProperty(NodeProperties.VALUE),", "-                                               rn.getProperty(NodeProperties.VALUE)));", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "277a3dc6e9b64c26628eb036ecd7fde1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 394, "methodNumberAfterChange": 385, "signatureBeforeChange": "    final private boolean jj_3R_500()", "signatureAfterChange": "    final private boolean jj_3R_503()", "diff": ["-  final private boolean jj_3R_500() {", "+  final private boolean jj_3R_503() {", "-    if (jj_3R_502()) {", "+    if (jj_3R_505()) {", "-    if (jj_3R_503()) return true;", "+    if (jj_3R_506()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27854d2191751da39fdc18505499d8d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 42, "signatureBeforeChange": "    public void testSaveAsExistsAndOpen()     throws BadLocationException, IOException,     OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "    public void testSaveAsExistsAndOpen() throws BadLocationException, IOException", "diff": ["-  public void testSaveAsExistsAndOpen()", "-    throws BadLocationException, IOException,", "-    OperationCanceledException, AlreadyOpenException{", "+  public void testSaveAsExistsAndOpen() throws BadLocationException, IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "279bfa162cda8f466e862858c5c38dea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 552, "methodNumberAfterChange": 552, "signatureBeforeChange": "          public void interpreterExited(final int status)", "signatureAfterChange": "          public void interpreterExited(final int status)", "diff": ["-      if (DrJava.getConfig().getSetting(INTERACTIONS_EXIT_PROMPT).booleanValue() && ", "-          ! Utilities.TextAreaMessageDialog.TEST_MODE) {", "+      if (DrJava.getConfig().getSetting(INTERACTIONS_EXIT_PROMPT).booleanValue() && ! Utilities.TEST_MODE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27a32759f57fe4d7d741429c896cc9f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 436, "methodNumberAfterChange": 431, "signatureBeforeChange": "    final private boolean jj_3R_368()", "signatureAfterChange": "    final private boolean jj_3R_369()", "diff": ["+    if (jj_3R_164()) return true;", "+    if (jj_3R_334()) return true;", "-  final private boolean jj_3R_368() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_163()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_333()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27b48ff7ebd6c35bd7f6e7e8a2108e3c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public Void visit(PreIncrement node)", "signatureAfterChange": "   public Void visit(LongTypeName node)", "diff": ["+   */", "+  public Void visit(LongTypeName node) {", "+    handlePrimitiveTypeName(node, \"long\");", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27c0f110e19a196413a6ceb4e97d66dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6082e28d363f7796f6c9506e0c82e9e5f29262e2", "commitAfterChange": "35d96698360e3de9d027b8743e5a37f097d6163e", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 212, "signatureBeforeChange": "   private void _setUpToolBar()", "signatureAfterChange": "   private void _setUpToolBar()", "diff": ["-    _toolBar.add(_createToolbarButton(_openAction));", "+    _toolBar.add(_createToolbarButton(_openFileOrProjectAction));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27d44fe711bfee5fcf6a0a15c7839f1a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "b69aef73e5b8d21dd4d2a656e29a8bb8886fe618", "commitAfterChange": "72c953c3c4f509998630ec89f0f6ab473b5c78c1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected void _setupView()", "signatureAfterChange": "   protected void _setupView()", "diff": ["+    // Prevent previous word action from going past the prompt", "+    _pane.addActionForKeyStroke(DrJava.getConfig().getSetting(OptionConstants.KEY_PREVIOUS_WORD),", "+                                prevWordAction);", "+    _pane.addActionForKeyStroke(DrJava.getConfig().getSetting(OptionConstants.KEY_NEXT_WORD),", "+                                nextWordAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27ef3003f8733d43c856cb2bee8668c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionDoNothing.java", "commitBeforeChange": "41e184b1aabfa466589eae2bb1a9101d9be4de38", "commitAfterChange": "57a37f35b71c66341cae7312e856c3bb4a0b6fcf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["+    super.indentLine(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27f6625e9969e720c0e228ea63ab5afc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 566, "methodNumberAfterChange": 531, "signatureBeforeChange": "    final private boolean jj_3R_233()", "signatureAfterChange": "    final private boolean jj_3R_526()", "diff": ["+  final private boolean jj_3R_526() {", "+    if (jj_3R_543()) return true;", "+      if (jj_3R_561()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_233() {", "-    if (jj_3R_273()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_325()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2802b60b0a8961e7ed028c8655638deb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 650, "methodNumberAfterChange": 554, "signatureBeforeChange": "    final private boolean jj_3R_218()", "signatureAfterChange": "    final private boolean jj_3R_221()", "diff": ["-", "-  final private boolean jj_3R_218() {", "-    if (jj_scan_token(LBRACKET)) return true;", "-    if (jj_3R_102()) return true;", "-    if (jj_scan_token(RBRACKET)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_221() {", "+    if (jj_scan_token(LBRACKET)) return true;", "+    if (jj_3R_105()) return true;", "+    if (jj_scan_token(RBRACKET)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "282218371cd8113428a15370a5858225", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 678, "methodNumberAfterChange": 685, "signatureBeforeChange": "    final private boolean jj_3R_552()", "signatureAfterChange": "    final private boolean jj_3R_556()", "diff": ["-  final private boolean jj_3R_552() {", "-    if (jj_3R_90()) return true;", "+  final private boolean jj_3R_556() {", "+    if (jj_3R_91()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2824561405e431b4b3936729741aeaf2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/Gap.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public String toString()", "signatureAfterChange": "   public String toString()", "diff": ["-    String val = \"\";", "+    StringBuffer val = new StringBuffer();", "-      val += \" _\";", "+      val.append(\" _\");", "-    return  val;", "+    return val.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "283f1c7caad89abc6d67bdc2499b9aea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentRuleQuestion.java", "commitBeforeChange": "558f3e76b0939d235eb8771fbc6a284d80a06f72", "commitAfterChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   abstract boolean applyRule(DefinitionsDocument doc, int pos);", "signatureAfterChange": "   abstract boolean applyRule(DefinitionsDocument doc,                               BraceReduction reducedModel,                               int pos);", "diff": ["-  abstract boolean applyRule(DefinitionsDocument doc, int pos);", "+  abstract boolean applyRule(DefinitionsDocument doc, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2842d786121f095b145500251fc1dfa2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 279, "methodNumberAfterChange": 261, "signatureBeforeChange": "    final private boolean jj_3R_448()", "signatureAfterChange": "    final private boolean jj_3R_450()", "diff": ["-", "-  final private boolean jj_3R_448() {", "+  final private boolean jj_3R_450() {", "-    if (jj_3R_257()) return true;", "+    if (jj_3R_151()) return true;", "-    if (jj_3R_410()) return true;", "+    if (jj_3R_412()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "285513bfe7e8b23c92e64a94c01a38b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 649, "methodNumberAfterChange": 334, "signatureBeforeChange": "    final private boolean jj_3R_430()", "signatureAfterChange": "    final private boolean jj_3R_339()", "diff": ["+", "+  final private boolean jj_3R_339() {", "+    if (jj_3R_345()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_360()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_430() {", "-    if (jj_3R_450()) return true;", "-      if (jj_3R_451()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "287f220a0111613eb613ba0997d8899b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/ToolsJarClassLoader.java", "commitBeforeChange": "bb4b98f439d908bb82a053d84050800352efc81c", "commitAfterChange": "cd1609e710303d46ced563eabe056854e1c94813", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public static File[] getToolsJarFiles()", "signatureAfterChange": "   public static File[] getToolsJarFiles()", "diff": ["-    if (javaHome.indexOf(\"Program Files\") != -1) {", "+    if (javaHome.toLowerCase().indexOf(\"program files\") != -1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "288c2cd63e11a2852e9526a9f3914bab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public boolean getSearchBackwards()", "signatureAfterChange": "    public boolean getSearchBackwards()", "diff": ["-  public boolean getSearchBackwards() { return _searchBackwards; }", "+  public boolean getSearchBackwards() { return ! _isForward; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2891cb3b754e048d5e272651e6743310", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/ConstantPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public short put(Long cst)", "signatureAfterChange": "   public short put(Long cst)", "diff": ["-    Info info = (Info)constants.get(cst);", "+    Info info = constants.get(cst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "289954f528f120f3a33922151b7e7e96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 701, "methodNumberAfterChange": 377, "signatureBeforeChange": "    final private boolean jj_3R_477()", "signatureAfterChange": "    final private boolean jj_3R_473()", "diff": ["+    if (jj_3R_479()) {", "+    if (jj_3R_480()) return true;", "-", "-  final private boolean jj_3R_477() {", "-    if (jj_3R_89()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_479()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "289e1df80d81638f0c3acc1653efce35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentAdapter.java", "commitBeforeChange": "1acb63fa1c578959b54f9766299c6e0a8865f601", "commitAfterChange": "fa78ee7a06602f123abf33b8aef0005c93bb3efa", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void insertString(int offs, String str, AttributeSet set) throws BadLocationException", "signatureAfterChange": "   public void insertString(int offs, String str, AttributeSet set) throws BadLocationException", "diff": ["-    try { if (_condition.canInsertText(offs, str, null)) super.insertString(offs, str, set); }", "+    try { if (_condition.canInsertText(offs)) super.insertString(offs, str, set); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "289fec22be6c0a5acff40fd3725725bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void update(OpenDefinitionsDocument odd, DDReconstructor reconstructor)", "signatureAfterChange": "   public void update(OpenDefinitionsDocument odd, DDReconstructor reconstructor)", "diff": ["+      oldpair.getFirst().close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28a979e4960d4b04bf545882d3c9786a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "f4d9cddd80d9fcae5ba30c8eeff16976d3a1497f", "commitAfterChange": "7ef0f748adc96e16f2e486fca8574061ce864d9d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void beginListeningTo(DefinitionsPane defPane)", "signatureAfterChange": "   public void beginListeningTo(DefinitionsPane defPane)", "diff": ["+      requestFocus();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28c806ddc5819af8eb695b92b1f324ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/MixedQuoteTest.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testDoubleEclipsesSingle()", "signatureAfterChange": "   public void testDoubleEclipsesSingle()", "diff": ["-    assertEquals(\"#0.0\", INSIDE_SINGLE_QUOTE, _model._getStateAtCurrent());", "+    assertEquals(\"#0.0\", INSIDE_SINGLE_QUOTE, _model.getStateAtCurrent());", "-    assertEquals(\"#1.0\", INSIDE_SINGLE_QUOTE, _model._getStateAtCurrent());", "+    assertEquals(\"#1.0\", INSIDE_SINGLE_QUOTE, _model.getStateAtCurrent());", "-    assertEquals(\"#2.0\", INSIDE_DOUBLE_QUOTE, _model._getStateAtCurrent());", "+    assertEquals(\"#2.0\", INSIDE_DOUBLE_QUOTE, _model.getStateAtCurrent());", "-    assertEquals(\"#3.0\", INSIDE_DOUBLE_QUOTE, _model._getStateAtCurrent());", "+    assertEquals(\"#3.0\", INSIDE_DOUBLE_QUOTE, _model.getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28f0fb5b5155ef5205fc6f5e0c5329f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b43f29e50ad9a747c307023da2022e85812a7a06", "commitAfterChange": "f9bd2a484c4505cc2dff97c8f9bad6e0c712ff50", "methodNumberBeforeChange": 692, "methodNumberAfterChange": 692, "signatureBeforeChange": "      public void removeTab(final Component c)", "signatureAfterChange": "      public void removeTab(final Component c)", "diff": ["-      else", "-        _tabbedPane.setSelectedIndex(_tabbedPane.getSelectedIndex() + 1);", "+//      else", "+//        _tabbedPane.setSelectedIndex(_tabbedPane.getSelectedIndex() + 1);", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28f59a404c0f12969be27cf1ef594d4c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ShadowingClassLoaderTest.java", "commitBeforeChange": "98a0206bc90f5eb73be3e2e6e290a67ee1cd136d", "commitAfterChange": "bd4a771b77ba1887596583ce142a4b7d1fa91b7e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testResourceLoading()", "signatureAfterChange": "      public void testResourceLoading()", "diff": ["+    debug.logStart();", "+    ", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28f935e16fb79818a94d417e94afc620", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/JSR14FromSetLocation.java", "commitBeforeChange": "f17292abd95ea16429a4af0b9a7c5f4c918cbe33", "commitAfterChange": "ab0ded3db9141ff4121c607c60b106535592b093", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    private static ClassLoader _getClassLoader()", "signatureAfterChange": "    private static ClassLoader _getClassLoader()", "diff": ["-      return new URLClassLoader(new URL[] { url });", "+      // Create a URLClassLoader with a null parent so it only looks", "+      // in the URL for classes.", "+      return new URLClassLoader(new URL[] { url }, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28fc5b6d593c4bc2f8ca27ad272b4677", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "178e9106484aafe70ee13d3ec30472f0613aedf4", "commitAfterChange": "d331e9af4b7210b21c235397f4a55183e132c12e", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "   private JMenu _setUpToolsMenu()", "signatureAfterChange": "   private JMenu _setUpToolsMenu()", "diff": ["+    ", "+    toolsMenu.add(_junitAction);", "-    _abortInteractionMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, ActionEvent.CTRL_MASK));", "+    _abortInteractionMenuItem", "+      .setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, ActionEvent.CTRL_MASK));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28fd8b9770a3108622adf4ec04194b1d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 249, "methodNumberAfterChange": 249, "signatureBeforeChange": "     public boolean undoManagerCanRedo()", "signatureAfterChange": "     public boolean undoManagerCanRedo()", "diff": ["-      return _cache.isDDocInCache(this) && getUndoManager().canRedo();", "+      return _cacheAdapter.isReady() && getUndoManager().canRedo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "290c44ce8e2922e72b13633cfe7a99f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 320, "methodNumberAfterChange": 553, "signatureBeforeChange": "    final private boolean jj_3R_318()", "signatureAfterChange": "    final private boolean jj_3R_323()", "diff": ["-  final private boolean jj_3R_318() {", "-    if (jj_3R_251()) return true;", "-    if (jj_3R_392()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_323() {", "+    if (jj_3R_254()) return true;", "+    if (jj_3R_400()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "290c4cc975f8b126c7efcd17dd78be60", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 378, "methodNumberAfterChange": 381, "signatureBeforeChange": "          public void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)       throws OperationCanceledException", "signatureAfterChange": "          public void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)       throws OperationCanceledException", "diff": ["-      doc.acquireWriteLock();", "-      try { doc.indentLines(selStart, selEnd, reason, pm); }", "-      finally { doc.releaseWriteLock(); }", "+//      doc.acquireWriteLock();", "+//      try { ", "+      doc.indentLines(selStart, selEnd, reason, pm); ", "+//      }", "+//      finally { doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2916182c36d6d2074d49ec2a1dc12d82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/FileOptionComponent.java", "commitBeforeChange": "5b5854a74ae4104fe98919ec137a82ddfe0b03d0", "commitAfterChange": "1ee842fd21d172ce428a3353cc0f74580e95bff8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void setDescription(String description)", "signatureAfterChange": "   public void setDescription(String description)", "diff": ["-    _panel.setToolTipText(description);", "-    _button.setToolTipText(description);", "-    _jtf.setToolTipText(description);", "+    _component.setToolTipText(description);", "+//    _button.setToolTipText(description);", "+//    _jtf.setToolTipText(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "293e9170c4253ba5849c12b3850c563e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringGlyphPainter.java", "commitBeforeChange": "12434dc2dab84dfe1024e2e2b39fd8f27da62bbd", "commitAfterChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public int viewToModel(GlyphView v, float x, float y, Shape a,                           Position.Bias[] biasReturn)", "signatureAfterChange": "   public int viewToModel(GlyphView v, float x, float y, Shape a,                           Position.Bias[] biasReturn)", "diff": ["-    int p0 = v.getStartOffset();", "-    int p1 = v.getEndOffset();", "+    int start = v.getStartOffset();", "+    int end = v.getEndOffset();", "-    Segment text = v.getText(p0, p1);", "+    Segment text = v.getText(start, end);", "-                                             alloc.x, (int) x, expander, p0);", "-    int retValue = p0 + offs;", "-    if(retValue == p1) {", "+                                             alloc.x, (int) x, expander, start);", "+    int retValue = start + offs;", "+    if(retValue == end) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29441b1deeb712418841a39ea83df947", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "      public abstract boolean containsStaticClass(Type t, String name);", "signatureAfterChange": "      public abstract boolean containsStaticClass(Type t, String name, Access.Module accessModule);", "diff": ["-  public abstract boolean containsStaticClass(Type t, String name);", "+  public abstract boolean containsStaticClass(Type t, String name, Access.Module accessModule);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2952ddc64ab36ccb7ceb5d9a07c1eb8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 266, "methodNumberAfterChange": 233, "signatureBeforeChange": "    final private boolean jj_3R_59()", "signatureAfterChange": "    final private boolean jj_3R_56()", "diff": ["-", "-  final private boolean jj_3R_59() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_96()) {", "+", "+  final private boolean jj_3R_56() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_93()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_94()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2959085313686284f05a2bfe85574eaf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 191, "signatureBeforeChange": "     public boolean verifyExists()", "signatureAfterChange": "     public boolean verifyExists()", "diff": ["-     */", "+    /** Returns true if the file exists on disk. Prompts the user otherwise */", "-      if(! fileExists()) {", "-        ", "+      if (! fileExists()) {", "-            _documentNavigator.refreshDocument(getIDocGivenODD(this), _file.getCanonicalFile().getParent());", "-          } catch(IOException ioe) {", "-            throw new UnexpectedException(ioe);", "-          }", "-          ", "+            _documentNavigator.refreshDocument(this, _file.getCanonicalFile().getParent());", "+          } catch(IOException ioe) { throw new UnexpectedException(ioe); }", "-        catch(DocumentClosedException dce) {", "-          return false;", "-        }", "+        catch(DocumentClosedException dce) { return false; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2960fc3ab0df5b7e877274ef90999bcc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "43b808b9e05f3378c0faae83fe4225562adc4c6e", "commitAfterChange": "723910d837b2fcdd9f4127559df4832f71fb62e8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testNoJUnitErrors() throws Exception", "signatureAfterChange": "   public void testNoJUnitErrors() throws Exception", "diff": ["-    TestShouldSucceedListener listener = new TestShouldSucceedListener();", "+    JUnitTestListener listener = new JUnitTestListener();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29707a9b3cd129428221a9dabe59eccc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 383, "methodNumberAfterChange": 369, "signatureBeforeChange": "    final private boolean jj_3R_150()", "signatureAfterChange": "    final private boolean jj_3R_140()", "diff": ["-", "-  final private boolean jj_3R_150() {", "+  final private boolean jj_3R_140() {", "-    if (jj_3_48()) jj_scanpos = xsp;", "+    if (jj_3_59()) jj_scanpos = xsp;", "-    if (jj_3R_108()) return true;", "+    if (jj_3R_109()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "297bf531604fb29319e8bf4f63afa687", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListSortNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void addDocument(INavigatorItem doc)", "signatureAfterChange": "   public void addDocument(INavigatorItem doc)", "diff": ["-     this.setListData(_docs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29819dd837decdf13701ca87430b3231", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 290, "signatureBeforeChange": "    final private boolean jj_3R_154()", "signatureAfterChange": "    final private boolean jj_3R_156()", "diff": ["-", "-  final private boolean jj_3R_154() {", "+  final private boolean jj_3R_156() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;", "-    if (jj_3R_300()) {", "+    if (jj_3R_303()) {", "-    if (jj_3R_301()) return true;", "+    if (jj_3R_304()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2985f06decb358320b616f7255dfdb31", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BackSlashTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testDeleteAndCombine2()", "signatureAfterChange": "   public void testDeleteAndCombine2()", "diff": ["-    assertEquals(\"#0.1\", FREE, model0.getStateAtCurrent());", "+    assertEquals(\"#0.1\", FREE, model0._getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29951ad2af0e282a20c8ddf363d6b091", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 791, "methodNumberAfterChange": 801, "signatureBeforeChange": "    final private boolean jj_3R_519()", "signatureAfterChange": "    final private boolean jj_3R_523()", "diff": ["-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_534()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_535()) jj_scanpos = xsp;", "+", "+  final private boolean jj_3R_523() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_538()) { jj_scanpos = xsp; break; }", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_3R_539()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29a401d4a2e514e3b5210558a03d4b0e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     public Object visit(ArrayAccess node)", "signatureAfterChange": "   public Class visit(ArrayAccess node)", "diff": ["-     */", "-    public Object visit(ArrayAccess node) {", "-        // Visits the expression on which this array access applies", "-        Class c = (Class)node.getExpression().acceptVisitor(this);", "-", "-        if (!c.isArray()) {", "-\t    node.setProperty(NodeProperties.ERROR_STRINGS,", "-\t\t\t     new String[] { c.getName() });", "-            throw new ExecutionError(\"array.required\", node);", "-        ", "-        // Sets the properties of this node", "-\tClass result;", "-        node.setProperty(NodeProperties.TYPE, result = c.getComponentType());", "-        node.setProperty(NodeProperties.MODIFIER, new ArrayModifier(node));", "-", "-        // Visits the cell number expression", "-        c = (Class)node.getCellNumber().acceptVisitor(this);", "-", "-        // The index must be of an integral type, but not a long", "-        if (c != char.class && c != byte.class && c != short.class && c != int.class) {", "-            throw new ExecutionError(\"array.index.type\", node);", "-        }", "-        return result;", "+   */", "+  public Class visit(ArrayAccess node) {", "+    // Visits the expression on which this array access applies", "+    Class c = (Class)node.getExpression().acceptVisitor(this);", "+    ", "+    if (!c.isArray()) {", "+      node.setProperty(NodeProperties.ERROR_STRINGS,", "+                       new String[] { c.getName() });", "+      throw new ExecutionError(\"array.required\", node);", "+    ", "+    // Sets the properties of this node", "+    Class result;", "+    node.setProperty(NodeProperties.TYPE, result = c.getComponentType());", "+    node.setProperty(NodeProperties.MODIFIER, new ArrayModifier(node));", "+    ", "+    // Visits the cell number expression", "+    c = (Class)node.getCellNumber().acceptVisitor(this);", "+    ", "+    // The index must be of an integral type, but not a long", "+    if (c != char.class && c != byte.class && c != short.class && c != int.class) {", "+      throw new ExecutionError(\"array.index.type\", node);", "+    return result;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29ae605d6c128b0e8750de411434bab0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "24d7e06348270bf19caad633e3b0f236f8140fab", "commitAfterChange": "5c952c5847e3008cec3ed5ff89d03d335c050f54", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void beginListeningTo(DefinitionsPane defPane)", "signatureAfterChange": "   public void beginListeningTo(DefinitionsPane defPane)", "diff": ["+        _machine.setLastFindWord();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29cb6b2804f6ef37f82a15a973a91840", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testOpenNonexistentFile() throws IOException", "signatureAfterChange": "   public void testOpenNonexistentFile() throws IOException", "diff": ["+    ", "+    _log.log(\"testOpenNonexistentFile completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29f3711dfe6b3cb6e5d59c15c95ffbd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 570, "methodNumberAfterChange": 394, "signatureBeforeChange": "    final private boolean jj_3R_171()", "signatureAfterChange": "    final private boolean jj_3R_159()", "diff": ["+", "+  final private boolean jj_3R_159() {", "+    if (jj_3R_207()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_276()) jj_scanpos = xsp;", "+    return false;", "+  }", "-  final private boolean jj_3R_171() {", "-    if (jj_3R_232()) return true;", "-    if (jj_3R_270()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29f6a326ffce53c00d4c5d61218d6a8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionInsideComment.java", "commitBeforeChange": "6cf6212d2242fc41ac00a6496c1e1ba3b53de977", "commitAfterChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    doc.getReduced().resetLocation();", "-    ReducedModelState state = doc.getReduced().stateAtRelLocation(-distToStart);", "+    doc.resetReducedModelLocation();", "+    ReducedModelState state = doc.stateAtRelLocation(-distToStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a16b785a4e8e1eb0b18df4fa4fb731a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "936df97bedea66175f36cae49ba74b17abf11e8a", "commitAfterChange": "d43c6d20ec903cbbb4ee5291a112b3b3ae570823", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 192, "signatureBeforeChange": "   void setDefinitionsIndent(int indent)", "signatureAfterChange": "   void setDefinitionsIndent(int indent)", "diff": ["-    ", "-    OpenDefinitionsDocument[] docs;", "-    ", "-    synchronized(_documentsRepos) { docs = _documentsRepos.toArray(new OpenDefinitionsDocument[0]); }", "-      ", "-    for (OpenDefinitionsDocument doc: docs) { doc.setIndent(indent); }", "+    for (OpenDefinitionsDocument doc: getOpenDefinitionsDocuments()) { doc.setIndent(indent); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a273d4d40358c0d1d71bc7cb138bde9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 164, "signatureBeforeChange": "    final private boolean jj_3R_32()", "signatureAfterChange": "    final private boolean jj_3R_29()", "diff": ["-", "-  final private boolean jj_3R_32() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_56()) jj_scanpos = xsp;", "-    if (jj_3R_57()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_29() {", "+    if (jj_3R_53()) jj_scanpos = xsp;", "+    if (jj_3R_54()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a392b42467b14d68008783f4a6df0a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "4cc63aff8a22c85ad1d78de9f4e0b9395e7d4e72", "commitAfterChange": "e330f3abbead97d3e3ac8751976bab81936096c2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r   private SymbolData _getSymbolData_FromFileSystem(final String qualifiedClassName, SourceInfo si, boolean resolve, boolean addError)", "signatureAfterChange": "   private SymbolData _getSymbolData_FromFileSystem(final String qualifiedClassName, SourceInfo si, boolean resolve, boolean addError)", "diff": ["-   */\r", "-  private SymbolData _getSymbolData_FromFileSystem(final String qualifiedClassName, SourceInfo si, boolean resolve, boolean addError) {\r", "-    // Check is the qualified class name is in _classesToBeParsed to save the time it would take to parse\r", "-    // all the java files in this package.\r", "-    Pair<TypeDefBase, LanguageLevelVisitor> pair = _classesToBeParsed.get(qualifiedClassName);\r", "-\r", "-    if (pair != null) {\r", "-      return _lookupFromClassesToBeParsed(qualifiedClassName, si, resolve);\r", "-    }\r", "-\r", "-    // If it's not in the symbol table or list of classes to be parsed, \r", "-    // check if the class is defined in one of the files in this package.\r", "-    // We have to begin looking for files at the source root of the current _file.\r", "-    File parent = _file.getParentFile();\r", "-    String directoryName = \"\";\r", "-    if (parent != null) {\r", "-      directoryName = parent.getAbsolutePath();\r", "-    }\r", "-    \r", "-    final String path;\r", "-    String qualifiedClassNameWithSlashes = qualifiedClassName.replace('.', System.getProperty(\"file.separator\").charAt(0));\r", "-    if (directoryName != null) {      \r", "-      String newPackage = _package.replace('.', System.getProperty(\"file.separator\").charAt(0));\r", "-      int indexOfPackage = directoryName.length();\r", "-      if (newPackage.length() > 0) {\r", "-        // Removes the slash after the package\r", "-        indexOfPackage = directoryName.indexOf(newPackage) - 1;\r", "-      }\r", "-\r", "-      //this should only be necessary when testing. \r", "-      if (indexOfPackage < 0) {\r", "-        indexOfPackage = directoryName.length();\r", "-      }\r", "-      \r", "-      directoryName = directoryName.substring(0, indexOfPackage);\r", "-      \r", "-      path = directoryName + System.getProperty(\"file.separator\") + qualifiedClassNameWithSlashes;\r", "-    }\r", "-    else {\r", "-      path = qualifiedClassName;\r", "-    }\r", "-    \r", "-\r", "-    /* newPath is the directory of the file we're trying to resolve */\r", "-    String newPath;\r", "-    /* newPackage is the package of the file we're trying to resolve */\r", "-    String newPackage = \"\";\r", "-    int lastSlash = qualifiedClassNameWithSlashes.lastIndexOf(System.getProperty(\"file.separator\"));\r", "-    if (lastSlash != -1) {\r", "-      newPackage = qualifiedClassNameWithSlashes.substring(0, lastSlash);\r", "-      newPath = directoryName + System.getProperty(\"file.separator\") + newPackage;\r", "-      newPackage = newPackage.replace(System.getProperty(\"file.separator\").charAt(0), '.');\r", "-    }\r", "-    else {\r", "-      int lastSlashInPath = path.lastIndexOf(System.getProperty(\"file.separator\"));\r", "-      if (lastSlashInPath != -1) {\r", "-        newPath = path.substring(0, lastSlashInPath);\r", "-      }\r", "-      else {\r", "-        newPath = \"\";\r", "-      }\r", "-    }\r", "-    \r", "-   \r", "-    \r", "-    // First look for the .class file\r", "-    File classFile = new File(path + \".class\");\r", "-    // Then look for the most recently modified .java, .djx file.    \r", "-    File[] sourceFiles = new File(newPath).listFiles(new FileFilter() {\r", "-      public boolean accept(File f) {\r", "-        try {\r", "-          f = f.getCanonicalFile();\r", "-        return new File(path + \".dj0\").getCanonicalFile().equals(f) ||\r", "-          new File(path + \".dj1\").getCanonicalFile().equals(f) ||\r", "-          new File(path + \".dj2\").getCanonicalFile().equals(f);\r", "-        }\r", "-        catch (IOException e) { return false; }\r", "-        // TODO: Do something with Java files.\r", "-      }});\r", "-      \r", "-      \r", "-    File sourceFile = null; // sourceFile is either null or an existing file\r", "-    if (sourceFiles != null) {\r", "-      long mostRecentTime = 0;\r", "-      for (File f : sourceFiles) {\r", "-        long currentLastModified = f.lastModified();\r", "-        if (f.exists() && mostRecentTime < currentLastModified) {\r", "-          mostRecentTime = currentLastModified;\r", "-          sourceFile = f;\r", "-        }\r", "-      }\r", "-    }\r", "-    \r", "-    // Check if sourceFile is the current file.  If so, there's an error because if the class to look for\r", "-    // is in the current file, it would've been in _classNamesInThisFile.\r", "-    //TODO: it is possible this should be an error.  But I am no longer positive.\r", "-//    if (sourceFile.equals(_file)) {\r", "-//      if (addError) {\r", "-//        _addAndIgnoreError(\"The class \" + qualifiedClassName + \" was not found in the file \" + sourceFile, new NullLiteral(si));\r", "-//      }\r", "-//      System.out.println(\"Just added an error. returning null.  class should have been in current file.\");\r", "-//      return null;\r", "-//    }\r", "-//    if (qualifiedClassName.contains(\"List\")) {System.out.println(\"Line 777: There are \" + continuations.size() + \" continuations \" + continuations);}\r", "-\r", "-    // Then check the corresponding class file to see if it's up to date.\r", "-    SymbolData sd = symbolTable.get(qualifiedClassName);\r", "-    if (sd != null && !sd.isContinuation()) { return sd; }\r", "-    if (sourceFile != null) {\r", "-      // First see if we even need to resolve this class. If not, create a continuation and return it.\r", "-      if (!resolve) {\r", "-        if (sd != null) { return sd; }\r", "-        else {\r", "-          sd = new SymbolData(qualifiedClassName);\r", "-          continuations.put(qualifiedClassName, new Pair<SourceInfo, LanguageLevelVisitor>(si, createANewInstanceOfMe(sourceFile)));//this));\r", "-\r", "-          symbolTable.put(qualifiedClassName, sd);\r", "-          return sd;\r", "-        }\r", "-      }\r", "-      \r", "-      // Get the last modified times of the java file and class file.\r", "-      // if the classfile doesn't exist, classFileLastModified will get 0, and we will parse it.\r", "-      if (sourceFile.lastModified() > classFile.lastModified()) {\r", "-        // the class file is out of date, parse the java file\r", "-        //First, make sure the java file is readable:\r", "-        if (!sourceFile.canRead()) {\r", "-          if (addError) {\r", "-            _addAndIgnoreError(\"The file \" + sourceFile.getAbsolutePath() + \" is present, but does not have proper read permissions\", new NullLiteral(si));\r", "-          }\r", "-          return null;\r", "-        }\r", "-        \r", "-        //Also make sure the directory where the new class file will eventually be written is writable.\r", "-        if (!new File(newPath).canWrite()) {\r", "-          if (addError) {\r", "-            _addAndIgnoreError(\"The file \" + sourceFile.getAbsolutePath() + \" needs to be recompiled, but its directory does not have proper write permissions\", new NullLiteral(si));\r", "-          }\r", "-          return null;\r", "-        }\r", "-        \r", "-        /** Insure that this file hasn't already been processed */\r", "-        try { \r", "-          File canonicalSource = sourceFile.getCanonicalFile();\r", "-          boolean alreadyVisited = false;\r", "-          try { alreadyVisited |= _file.getCanonicalFile().equals(canonicalSource); }\r", "-          catch (IOException e) { /* ignore */ }\r", "-          if (!alreadyVisited) {\r", "-            for (Pair<LanguageLevelVisitor, SourceFile> p : visitedFiles) {\r", "-              try { \r", "-                alreadyVisited |= p.getFirst()._file.getCanonicalFile().equals(canonicalSource);\r", "-                if (alreadyVisited) { break; }\r", "-              }\r", "-              catch (IOException e) { /* ignore */ }\r", "-            }\r", "-          }\r", "-          \r", "-          if (alreadyVisited) { return SymbolData.KEEP_GOING; }\r", "-        }\r", "-        catch (IOException e) {\r", "-          if (addError) {\r", "-            _addAndIgnoreError(\"The file \" + sourceFile.getAbsolutePath() + \" is present, but its full path cannot be resolved (symbolic links may not have proper permissions)\", new NullLiteral(si));\r", "-          }\r", "-          return null;\r", "-        }\r", "-        \r", "-        LanguageLevelVisitor lv;\r", "-        \r", "-        if (LanguageLevelConverter.isElementaryFile(sourceFile)) {\r", "-          lv = new ElementaryVisitor(sourceFile, errors, symbolTable, continuations, visitedFiles, _newSDs, targetVersion);\r", "-        }\r", "-        else if (LanguageLevelConverter.isIntermediateFile(sourceFile)) {\r", "-          lv = new IntermediateVisitor(sourceFile, errors, symbolTable, continuations, visitedFiles, _newSDs, targetVersion);\r", "-        }\r", "-        else if (LanguageLevelConverter.isAdvancedFile(sourceFile)) {\r", "-          lv = new AdvancedVisitor(sourceFile, errors, symbolTable, continuations, visitedFiles, _newSDs, targetVersion);\r", "-        }\r", "-        else {\r", "-          throw new RuntimeException(\"Internal Program Error: Invalid file format not caught initially\" + sourceFile.getName() + \". Please report this bug\");\r", "-        }\r", "-        \r", "-        SourceFile sf;\r", "-        try {\r", "-          JExprParser jep = new JExprParser(sourceFile);\r", "-          sf = jep.SourceFile();\r", "-        }\r", "-        catch(ParseException pe) {\r", "-          if (addError) {\r", "-            // The NullLiteral is a hack to get a JExpression with the correct SourceInfo inside.\r", "-            _addAndIgnoreError(pe.getMessage(), \r", "-                               new NullLiteral(new SourceInfo(sourceFile,\r", "-                                                              pe.currentToken.beginLine,\r", "-                                                              pe.currentToken.beginColumn,\r", "-                                                              pe.currentToken.endLine,\r", "-                                                              pe.currentToken.endColumn)));\r", "-          }\r", "-          return null;\r", "-        }\r", "-        catch (FileNotFoundException fnfe) {\r", "-          // This should never happen.\r", "-          if (addError) {\r", "-            _addAndIgnoreError(\"File \" + sourceFile + \" could not be found.\", new NullLiteral(si));\r", "-          }\r", "-          return null;\r", "-        }\r", "-        // See if there were any errors caused by the first pass on the java file.\r", "-        int numErrors = errors.size();\r", "-        sf.visit(lv);\r", "-        if (numErrors != errors.size()) {\r", "-          return null;\r", "-        }\r", "-        else {\r", "-          //Resolve any continuations.\r", "-          while (!lv.continuations.isEmpty()) {\r", "-            Enumeration<String> en = lv.continuations.keys();\r", "-            \r", "-            while (en.hasMoreElements()) {\r", "-              String className = en.nextElement();\r", "-              Pair<SourceInfo, LanguageLevelVisitor> p = lv.continuations.remove(className);\r", "-              SymbolData returnedSd = p.getSecond().getSymbolData(className, p.getFirst(), true);\r", "-              //if (returnedSd == null) {\r", "-              //  errors.add(new Pair<String, JExpressionIF>(\"Could not resolve \" + className, new NullLiteral(p.getFirst())));\r", "-              //}\r", "-            }\r", "-          }\r", "-          \r", "-          while (!lv._newSDs.isEmpty()) {\r", "-            Enumeration<SymbolData> en = lv._newSDs.keys();\r", "-            while (en.hasMoreElements()) {\r", "-              SymbolData first = en.nextElement();\r", "-              LanguageLevelVisitor sdlv = lv._newSDs.remove(first);\r", "-              sdlv.createConstructor(first);\r", "-            }\r", "-          }\r", "-          \r", "-          sf.visit(new TypeChecker(sourceFile, newPackage, errors, symbolTable, lv._importedFiles, lv._importedPackages, JavaVersion.JAVA_5));\r", "-        }\r", "-        \r", "-        // will this put entries into the symbol table that this class shouldn't be able to see?\r", "-        \r", "-        // The symbol table should now contain the SymbolData of the class we're looking for.\r", "-        sd = symbolTable.get(qualifiedClassName);\r", "-        if (sd == null || sd.isContinuation()) {\r", "-          if (addError) {\r", "-            _addAndIgnoreError(\"File \" + sourceFile + \" does not contain class \" + qualifiedClassName, sf);\r", "-          }\r", "-          return null;\r", "-        }\r", "-        else {\r", "-          visitedFiles.add(new Pair<LanguageLevelVisitor, SourceFile>(lv, sf));\r", "-          return sd;\r", "-        }\r", "-      }\r", "-    }\r", "-    if (classFile.exists()) {\r", "-      // read this classfile, create the SymbolData and return it\r", "-      // This is the only place we are using BCEL right now.  If there's a better way, we\r", "-      // can remove the bcel.jar.\r", "-      sd = _classFile2SymbolData(qualifiedClassName, directoryName);\r", "-      if (sd == null) {\r", "-        if (addError) {\r", "-          _addAndIgnoreError(\"File \" + classFile + \" is not a valid class file.\", null);\r", "-        }\r", "-        return null;\r", "-      }\r", "-      else {\r", "-        if (sourceFile != null) {\r", "-          // Visit the sourceFile anyway even though the classFile is up to date so we\r", "-          // can pass the SourceFile to the LanguageLevelConverter.\r", "-          SourceFile sf;\r", "-          try {\r", "-            sf = new JExprParser(sourceFile).SourceFile();\r", "-          }\r", "-          catch(ParseException pe) {\r", "-            if (addError) {\r", "-              // The NullLiteral is a hack to get a JExpression with the correct SourceInfo inside.\r", "-              _addAndIgnoreError(pe.getMessage(), \r", "-                                 new NullLiteral(new SourceInfo(sourceFile,\r", "-                                                                pe.currentToken.beginLine,\r", "-                                                                pe.currentToken.beginColumn,\r", "-                                                                pe.currentToken.endLine,\r", "-                                                                pe.currentToken.endColumn)));\r", "-            }\r", "-            return null;\r", "-          }\r", "-          catch (FileNotFoundException fnfe) {\r", "-            // This should never happen.\r", "-            if (addError) {\r", "-              _addAndIgnoreError(\"File \" + sourceFile + \" could not be found.\", new NullLiteral(si));\r", "-            }\r", "-            return null;\r", "-          }\r", "-\r", "-          LanguageLevelVisitor lv = createANewInstanceOfMe(sourceFile);\r", "-          lv._package = newPackage;\r", "-          visitedFiles.add(new Pair<LanguageLevelVisitor, SourceFile>(lv, null));//lv, sf));\r", "-\r", "-        \r", "-        }\r", "-\r", "-        return sd;\r", "-      }\r", "-    }\r", "-    return SymbolData.KEEP_GOING;\r", "-  }\r", "+   */", "+  private SymbolData _getSymbolData_FromFileSystem(final String qualifiedClassName, SourceInfo si, boolean resolve, boolean addError) {", "+    // Check is the qualified class name is in _classesToBeParsed to save the time it would take to parse", "+    // all the java files in this package.", "+    Pair<TypeDefBase, LanguageLevelVisitor> pair = _classesToBeParsed.get(qualifiedClassName);", "+", "+    if (pair != null) {", "+      return _lookupFromClassesToBeParsed(qualifiedClassName, si, resolve);", "+    }", "+", "+    // If it's not in the symbol table or list of classes to be parsed, ", "+    // check if the class is defined in one of the files in this package.", "+    // We have to begin looking for files at the source root of the current _file.", "+    File parent = _file.getParentFile();", "+    String directoryName = \"\";", "+    if (parent != null) {", "+      directoryName = parent.getAbsolutePath();", "+    }", "+    ", "+    final String path;", "+    String qualifiedClassNameWithSlashes = qualifiedClassName.replace('.', System.getProperty(\"file.separator\").charAt(0));", "+    if (directoryName != null) {      ", "+      String newPackage = _package.replace('.', System.getProperty(\"file.separator\").charAt(0));", "+      int indexOfPackage = directoryName.length();", "+      if (newPackage.length() > 0) {", "+        // Removes the slash after the package", "+        indexOfPackage = directoryName.indexOf(newPackage) - 1;", "+      }", "+", "+      //this should only be necessary when testing. ", "+      if (indexOfPackage < 0) {", "+        indexOfPackage = directoryName.length();", "+      }", "+      ", "+      directoryName = directoryName.substring(0, indexOfPackage);", "+      ", "+      path = directoryName + System.getProperty(\"file.separator\") + qualifiedClassNameWithSlashes;", "+    }", "+    else {", "+      path = qualifiedClassName;", "+    }", "+    ", "+", "+    /* newPath is the directory of the file we're trying to resolve */", "+    String newPath;", "+    /* newPackage is the package of the file we're trying to resolve */", "+    String newPackage = \"\";", "+    int lastSlash = qualifiedClassNameWithSlashes.lastIndexOf(System.getProperty(\"file.separator\"));", "+    if (lastSlash != -1) {", "+      newPackage = qualifiedClassNameWithSlashes.substring(0, lastSlash);", "+      newPath = directoryName + System.getProperty(\"file.separator\") + newPackage;", "+      newPackage = newPackage.replace(System.getProperty(\"file.separator\").charAt(0), '.');", "+    }", "+    else {", "+      int lastSlashInPath = path.lastIndexOf(System.getProperty(\"file.separator\"));", "+      if (lastSlashInPath != -1) {", "+        newPath = path.substring(0, lastSlashInPath);", "+      }", "+      else {", "+        newPath = \"\";", "+      }", "+    }", "+    ", "+   ", "+    ", "+    // First look for the .class file", "+    File classFile = new File(path + \".class\");", "+    // Then look for the most recently modified .java, .djx file.    ", "+    File[] sourceFiles = new File(newPath).listFiles(new FileFilter() {", "+      public boolean accept(File f) {", "+        try {", "+          f = f.getCanonicalFile();", "+        return new File(path + \".dj0\").getCanonicalFile().equals(f) ||", "+          new File(path + \".dj1\").getCanonicalFile().equals(f) ||", "+          new File(path + \".dj2\").getCanonicalFile().equals(f);", "+        }", "+        catch (IOException e) { return false; }", "+        // TODO: Do something with Java files.", "+      }});", "+      ", "+      ", "+    File sourceFile = null; // sourceFile is either null or an existing file", "+    if (sourceFiles != null) {", "+      long mostRecentTime = 0;", "+      for (File f : sourceFiles) {", "+        long currentLastModified = f.lastModified();", "+        if (f.exists() && mostRecentTime < currentLastModified) {", "+          mostRecentTime = currentLastModified;", "+          sourceFile = f;", "+        }", "+      }", "+    }", "+    ", "+    // Check if sourceFile is the current file.  If so, there's an error because if the class to look for", "+    // is in the current file, it would've been in _classNamesInThisFile.", "+    //TODO: it is possible this should be an error.  But I am no longer positive.", "+//    if (sourceFile.equals(_file)) {", "+//      if (addError) {", "+//        _addAndIgnoreError(\"The class \" + qualifiedClassName + \" was not found in the file \" + sourceFile, new NullLiteral(si));", "+//      }", "+//      System.out.println(\"Just added an error. returning null.  class should have been in current file.\");", "+//      return null;", "+//    }", "+//    if (qualifiedClassName.contains(\"List\")) {System.out.println(\"Line 777: There are \" + continuations.size() + \" continuations \" + continuations);}", "+", "+    // Then check the corresponding class file to see if it's up to date.", "+    SymbolData sd = symbolTable.get(qualifiedClassName);", "+    if (sd != null && !sd.isContinuation()) { return sd; }", "+    if (sourceFile != null) {", "+      // First see if we even need to resolve this class. If not, create a continuation and return it.", "+      if (!resolve) {", "+        if (sd != null) { return sd; }", "+        else {", "+          sd = new SymbolData(qualifiedClassName);", "+          continuations.put(qualifiedClassName, new Pair<SourceInfo, LanguageLevelVisitor>(si, createANewInstanceOfMe(sourceFile)));//this));", "+", "+          symbolTable.put(qualifiedClassName, sd);", "+          return sd;", "+        }", "+      }", "+      ", "+      // Get the last modified times of the java file and class file.", "+      // if the classfile doesn't exist, classFileLastModified will get 0, and we will parse it.", "+      if (sourceFile.lastModified() > classFile.lastModified()) {", "+        // the class file is out of date, parse the java file", "+        //First, make sure the java file is readable:", "+        if (!sourceFile.canRead()) {", "+          if (addError) {", "+            _addAndIgnoreError(\"The file \" + sourceFile.getAbsolutePath() + \" is present, but does not have proper read permissions\", new NullLiteral(si));", "+          }", "+          return null;", "+        }", "+        ", "+        //Also make sure the directory where the new class file will eventually be written is writable.", "+        if (!new File(newPath).canWrite()) {", "+          if (addError) {", "+            _addAndIgnoreError(\"The file \" + sourceFile.getAbsolutePath() + \" needs to be recompiled, but its directory does not have proper write permissions\", new NullLiteral(si));", "+          }", "+          return null;", "+        }", "+        ", "+        /** Insure that this file hasn't already been processed */", "+        try { ", "+          File canonicalSource = sourceFile.getCanonicalFile();", "+          boolean alreadyVisited = false;", "+          try { alreadyVisited |= _file.getCanonicalFile().equals(canonicalSource); }", "+          catch (IOException e) { /* ignore */ }", "+          if (!alreadyVisited) {", "+            for (Pair<LanguageLevelVisitor, SourceFile> p : visitedFiles) {", "+              try { ", "+                alreadyVisited |= p.getFirst()._file.getCanonicalFile().equals(canonicalSource);", "+                if (alreadyVisited) { break; }", "+              }", "+              catch (IOException e) { /* ignore */ }", "+            }", "+          }", "+          ", "+          if (alreadyVisited) { return SymbolData.KEEP_GOING; }", "+        }", "+        catch (IOException e) {", "+          if (addError) {", "+            _addAndIgnoreError(\"The file \" + sourceFile.getAbsolutePath() + \" is present, but its full path cannot be resolved (symbolic links may not have proper permissions)\", new NullLiteral(si));", "+          }", "+          return null;", "+        }", "+        ", "+        LanguageLevelVisitor lv;", "+        ", "+        if (LanguageLevelConverter.isElementaryFile(sourceFile)) {", "+          lv = new ElementaryVisitor(sourceFile, errors, symbolTable, continuations, visitedFiles, _newSDs);", "+        }", "+        else if (LanguageLevelConverter.isIntermediateFile(sourceFile)) {", "+          lv = new IntermediateVisitor(sourceFile, errors, symbolTable, continuations, visitedFiles, _newSDs);", "+        }", "+        else if (LanguageLevelConverter.isAdvancedFile(sourceFile)) {", "+          lv = new AdvancedVisitor(sourceFile, errors, symbolTable, continuations, visitedFiles, _newSDs);", "+        }", "+        else {", "+          throw new RuntimeException(\"Internal Program Error: Invalid file format not caught initially\" + sourceFile.getName() + \". Please report this bug\");", "+        }", "+        ", "+        SourceFile sf;", "+        try {", "+          JExprParser jep = new JExprParser(sourceFile);", "+          sf = jep.SourceFile();", "+        }", "+        catch(ParseException pe) {", "+          if (addError) {", "+            // The NullLiteral is a hack to get a JExpression with the correct SourceInfo inside.", "+            _addAndIgnoreError(pe.getMessage(), ", "+                               new NullLiteral(new SourceInfo(sourceFile,", "+                                                              pe.currentToken.beginLine,", "+                                                              pe.currentToken.beginColumn,", "+                                                              pe.currentToken.endLine,", "+                                                              pe.currentToken.endColumn)));", "+          }", "+          return null;", "+        }", "+        catch (FileNotFoundException fnfe) {", "+          // This should never happen.", "+          if (addError) {", "+            _addAndIgnoreError(\"File \" + sourceFile + \" could not be found.\", new NullLiteral(si));", "+          }", "+          return null;", "+        }", "+        // See if there were any errors caused by the first pass on the java file.", "+        int numErrors = errors.size();", "+        sf.visit(lv);", "+        if (numErrors != errors.size()) {", "+          return null;", "+        }", "+        else {", "+          //Resolve any continuations.", "+          while (!lv.continuations.isEmpty()) {", "+            Enumeration<String> en = lv.continuations.keys();", "+            ", "+            while (en.hasMoreElements()) {", "+              String className = en.nextElement();", "+              Pair<SourceInfo, LanguageLevelVisitor> p = lv.continuations.remove(className);", "+              SymbolData returnedSd = p.getSecond().getSymbolData(className, p.getFirst(), true);", "+              //if (returnedSd == null) {", "+              //  errors.add(new Pair<String, JExpressionIF>(\"Could not resolve \" + className, new NullLiteral(p.getFirst())));", "+              //}", "+            }", "+          }", "+          ", "+          while (!lv._newSDs.isEmpty()) {", "+            Enumeration<SymbolData> en = lv._newSDs.keys();", "+            while (en.hasMoreElements()) {", "+              SymbolData first = en.nextElement();", "+              LanguageLevelVisitor sdlv = lv._newSDs.remove(first);", "+              sdlv.createConstructor(first);", "+            }", "+          }", "+          ", "+          sf.visit(new TypeChecker(sourceFile, newPackage, errors, symbolTable, lv._importedFiles, lv._importedPackages));", "+        }", "+        ", "+        // will this put entries into the symbol table that this class shouldn't be able to see?", "+        ", "+        // The symbol table should now contain the SymbolData of the class we're looking for.", "+        sd = symbolTable.get(qualifiedClassName);", "+        if (sd == null || sd.isContinuation()) {", "+          if (addError) {", "+            _addAndIgnoreError(\"File \" + sourceFile + \" does not contain class \" + qualifiedClassName, sf);", "+          }", "+          return null;", "+        }", "+        else {", "+          visitedFiles.add(new Pair<LanguageLevelVisitor, SourceFile>(lv, sf));", "+          return sd;", "+        }", "+      }", "+    }", "+    if (classFile.exists()) {", "+      // read this classfile, create the SymbolData and return it", "+      // This is the only place we are using BCEL right now.  If there's a better way, we", "+      // can remove the bcel.jar.", "+      sd = _classFile2SymbolData(qualifiedClassName, directoryName);", "+      if (sd == null) {", "+        if (addError) {", "+          _addAndIgnoreError(\"File \" + classFile + \" is not a valid class file.\", null);", "+        }", "+        return null;", "+      }", "+      else {", "+        if (sourceFile != null) {", "+          // Visit the sourceFile anyway even though the classFile is up to date so we", "+          // can pass the SourceFile to the LanguageLevelConverter.", "+          SourceFile sf;", "+          try {", "+            sf = new JExprParser(sourceFile).SourceFile();", "+          }", "+          catch(ParseException pe) {", "+            if (addError) {", "+              // The NullLiteral is a hack to get a JExpression with the correct SourceInfo inside.", "+              _addAndIgnoreError(pe.getMessage(), ", "+                                 new NullLiteral(new SourceInfo(sourceFile,", "+                                                                pe.currentToken.beginLine,", "+                                                                pe.currentToken.beginColumn,", "+                                                                pe.currentToken.endLine,", "+                                                                pe.currentToken.endColumn)));", "+            }", "+            return null;", "+          }", "+          catch (FileNotFoundException fnfe) {", "+            // This should never happen.", "+            if (addError) {", "+              _addAndIgnoreError(\"File \" + sourceFile + \" could not be found.\", new NullLiteral(si));", "+            }", "+            return null;", "+          }", "+", "+          LanguageLevelVisitor lv = createANewInstanceOfMe(sourceFile);", "+          lv._package = newPackage;", "+          visitedFiles.add(new Pair<LanguageLevelVisitor, SourceFile>(lv, null));//lv, sf));", "+", "+        ", "+        }", "+", "+        return sd;", "+      }", "+    }", "+    return SymbolData.KEEP_GOING;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a4d39871de4ca1b472cbba2e4963309", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected boolean notRightPackage(SymbolData sd)", "signatureAfterChange": "   protected boolean notRightPackage(SymbolData sd)", "diff": ["-    return (sd.getPackage().equals(\"\") && sd.getName().lastIndexOf(\".\") != -1) || ", "+    return (sd.getPackage().equals(\"\") && sd.getName().lastIndexOf('.') != -1) || "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a63c8b22e2605d6089bf137794b75b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "bdf0d961e3094e45012183b3b2277f169c5827d7", "commitAfterChange": "8782e19ccfa5357f9b140c38d08e98757ee04270", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void close()", "signatureAfterChange": "     public void close()", "diff": ["-      synchronized (DocumentCache.this) { _residentQueue.remove(this); }", "-      synchronized (this) { closingKickOut(); }", "+      synchronized (_cacheLock) { _residentQueue.remove(this); }", "+      closingKickOut();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a696c44a150e700e36c6c14f33336f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilitiesTest.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   private void _exceptionBoxCompatible(Class c1, Class c2, boolean boxEnabled)", "signatureAfterChange": "   private void _exceptionBoxCompatible(Class c1, Class c2, boolean boxEnabled)", "diff": ["-    TigerUtilities.setTigerEnabled(boxEnabled);", "+    setTigerEnabled(boxEnabled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a77d7ca6fcecf6748aa9d64a79da819", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9eeb88b1f508503e62560a83d5762a2b7670db6b", "commitAfterChange": "7e3ca17e4bff8d031b57422be3fd37f949cf4a13", "methodNumberBeforeChange": 402, "methodNumberAfterChange": 402, "signatureBeforeChange": "   boolean _closeProject(boolean quitting)", "signatureAfterChange": "   boolean _closeProject(boolean quitting)", "diff": ["+    _completeClassList = new ArrayList<GoToFileListEntry>(); // reset auto-completion list", "+    _autoImportClassList = new ArrayList<JavaAPIListEntry>(); // reset auto-import list", "+    ", "+      _cleanUpDebugger();", "-//      _junitProjectAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a80a0576240e4deb9c9066485e2050e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "b97db40bea671594a37f7cabd8d363cab45e0154", "commitAfterChange": "fab79f2f445044e7a60a89e228042164713428d9", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void testGetLine7() throws BadLocationException", "signatureAfterChange": "   public void testGetLine7() throws BadLocationException", "diff": ["-    final String s = \"11111\\n2222\\n33333\\n44444\";", "+    final String s = \"12345\\n7890\\n2345\\n789\";", "-    defModel.gotoLine(3);", "+    defModel.setCurrentLocation(12);", "-    defModel.gotoLine(2);", "-    assertEquals(\"#0.0\", 2, defModel.getCurrentLine());", "-    defModel.gotoLine(4);", "-    assertEquals(\"#0.0\", 4, defModel.getCurrentLine());", "+    defModel.move(-5);", "+    assertEquals(\"#0.1\", 2, defModel.getCurrentLine());", "+    defModel.setCurrentLocation(19);", "+    assertEquals(\"#0.2\", 4, defModel.getCurrentLine());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a930388026122715176e4c020267058", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "commitAfterChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 116, "signatureBeforeChange": "   private void _setDebugMenuItemsEnabled(boolean enabled)", "signatureAfterChange": "   private void _setDebugMenuItemsEnabled(boolean enabled)", "diff": ["-    _suspendDebugAction.setEnabled(enabled);", "-    _resumeDebugAction.setEnabled(enabled);", "-    _stepIntoDebugAction.setEnabled(enabled);", "-    _stepOverDebugAction.setEnabled(enabled);", "-    _stepOutDebugAction.setEnabled(enabled);", "+    //_suspendDebugAction.setEnabled(false);", "+    _resumeDebugAction.setEnabled(false);", "+    _stepIntoDebugAction.setEnabled(false);", "+    _stepOverDebugAction.setEnabled(false);", "+    _stepOutDebugAction.setEnabled(false);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aa51bb269cd47d017a459bdfca1e1c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 319, "signatureBeforeChange": "    final private boolean jj_3R_254()", "signatureAfterChange": "    final private boolean jj_3R_256()", "diff": ["-  final private boolean jj_3R_254() {", "-    if (jj_scan_token(ENUM)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_418()) jj_scanpos = xsp;", "-    if (jj_scan_token(LBRACE)) return true;", "-    if (jj_3R_419()) return true;", "-    if (jj_scan_token(RBRACE)) return true;", "+", "+  final private boolean jj_3R_256() {", "+    if (jj_scan_token(ENUM)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_422()) jj_scanpos = xsp;", "+    if (jj_scan_token(LBRACE)) return true;", "+    if (jj_3R_423()) return true;", "+    if (jj_scan_token(RBRACE)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ab59d595b3eb41363c782493013ed01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "8907059ef43f15e7b338686159e3333fd997b238", "commitAfterChange": "191c3e4b63ea8ecc780014db5fc908a6ccd9ee7a", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "   private JMenu _setUpToolsMenu()", "signatureAfterChange": "   private JMenu _setUpToolsMenu()", "diff": ["-    // Commented out until test functionality is fixed. eallen 5/31/2002", "-    // toolsMenu.add(_junitAction);", "+    toolsMenu.add(_junitAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2abae9e05b08ed1a4b496ef2a0709004", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "f0e93e8f70d74090c83524f565ab98d73710c2e7", "commitAfterChange": "cea95770b041dbb7494d9ea4d762c8077631d283", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public void itemStateChanged(ItemEvent e)", "signatureAfterChange": "     public void itemStateChanged(ItemEvent e)", "diff": ["+        DrJava.getConfig().setSetting(OptionConstants.FIND_ALL_DOCUMENTS,", "+                                      false);", "+        DrJava.getConfig().setSetting(OptionConstants.FIND_ALL_DOCUMENTS,", "+                                      true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2abd44a3777b6f5ded609a587c12155a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void testInteractionsLiveUpdateClasspath()     throws BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsLiveUpdateClasspath() throws BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-   */", "-  public void testInteractionsLiveUpdateClasspath()", "-    throws BadLocationException, DocumentAdapterException,", "-    IOException, InterruptedException", "-  {", "+  /** Creates a new class, compiles it and then checks that the REPL can see it. */", "+  public void testInteractionsLiveUpdateClasspath() throws BadLocationException, DocumentAdapterException,", "+    IOException, InterruptedException {", "-    tempDir.renameTo(new File(tempPath+\"a\"));", "+    tempDir.renameTo(new File(tempPath + \"a\"));", "-    assertTrue(\"interactions should have an error, not the correct answer\",", "-               !\"\\\"DrJavaTestFoo\\\"\".equals(result));", "+    assertFalse(\"interactions should have an error, not the correct answer\", \"\\\"DrJavaTestFoo\\\"\".equals(result));", "+//    System.err.println(\"Result1 is: \" + result);", "+    _model.resetInteractionsClasspath();", "+//    System.err.println(\"Classpath = \" + _model.getClasspath());", "-    assertEquals(\"interactions result\",", "-                 \"\\\"DrJavaTestFoo\\\"\",", "-                 result);", "-", "+    assertEquals(\"interactions result\", \"\\\"DrJavaTestFoo\\\"\", result);", "+//    System.err.println(\"Result2 is: \" + result);", "-    tempDir.renameTo( new File(tempPath));", "-", "+    boolean renamed = tempDir.renameTo(new File(tempPath));", "+//    System.out.println(\"Renaming of \" + tempPath + \"a yielded \" + renamed);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ae045a779430539b19304ebe7440010", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "commitAfterChange": "9ce155a1f3e34352032d821032cb2dc70024460f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   @Override public Type visit(InnerAllocation node)", "signatureAfterChange": "   @Override public Type visit(InnerAllocation node)", "diff": ["-        // TODO: Check for uncaught exceptions", "+        checkThrownExceptions(inv.thrown(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2af11e3c48b982415a99faa61cb254d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "diff": ["-                                                       \"Java Version for \\\"Open Java API Javadoc\\\"\", this,", "-                                                       \"The version of the Java API documentation to be used.\"));", "+                                                       \"Java Version for \\\"Open Java API Javadoc\\\"\", ", "+                                                       this,", "+                                                       \"Version of the Java API documentation to be used.\"));", "-                                                       \"Access Level\", this,", "+                                                       \"Access Level\", ", "+                                                       this,", "-                                                       \"Java Version for Javadoc Links\", this,", "-                                                       \"The version of Java for generating links to online Javadoc documentation.\"));", "+                                                       \"Java Version for Javadoc Links\", ", "+                                                       this,", "+                                                       \"Version of Java for generating links to online Javadoc documentation.\"));", "-                                                 \"Javadoc 1.3 URL\", this,", "-                                                 \"The URL to the Java 1.3 API, for generating links to library classes.\"));", "+                                                 \"Javadoc 1.3 URL\", ", "+                                                 this,", "+                                                 \"URL for the Java 1.3 API, for generating links to library classes.\"));", "-                                                 \"The URL to the Java 1.4 API, for generating links to library classes.\"));", "+                                                 \"URL for the Java 1.4 API, for generating links to library classes.\"));", "-                                                 \"The URL to the Java 1.5 API, for generating links to library classes.\"));", "+                                                 \"URL for the Java 1.5 API, for generating links to library classes.\"));", "-                                                 \"The URL to the Java 1.6 API, for generating links to library classes.\"));", "+                                                 \"URL for the Java 1.6 API, for generating links to library classes.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2af617bb5720138bff4666f63818d278", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "d8dc2cdeba22db2fb0316de83a445bb83f56ae4d", "commitAfterChange": "fecb09777cd63cca239611fe19e85d2f0e8401e9", "methodNumberBeforeChange": 773, "methodNumberAfterChange": 759, "signatureBeforeChange": "    final private boolean jj_3R_544()", "signatureAfterChange": "    final private boolean jj_3R_543()", "diff": ["-", "-  final private boolean jj_3R_544() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_562()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_563()) jj_scanpos = xsp;", "+  final private boolean jj_3R_543() {", "+    if (jj_scan_token(COMMA)) return true;", "+      if (jj_3R_558()) { jj_scanpos = xsp; break; }", "+    if (jj_3R_559()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2afd08a1d74f380aba5dde880dd90ec3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void addListener(DebugListener listener)", "signatureAfterChange": "   public void addListener(DebugListener listener)", "diff": ["+    _model.getBreakpointManager().addListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b0e962799658ffcaaa7afcd3037f505", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionLineContains.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    System.err.println(\"QuestionLineContains\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b105531c19630a3fe06bb295ead96c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6d9f2ce37ba22041a5b2840cffbd0f66339165b6", "commitAfterChange": "b153c43e59717c98f32c67f14d61a00a81016991", "methodNumberBeforeChange": 627, "methodNumberAfterChange": 392, "signatureBeforeChange": "    final private boolean jj_3R_349()", "signatureAfterChange": "    final private boolean jj_3R_499()", "diff": ["+", "+  final private boolean jj_3R_499() {", "+    if (jj_3R_506()) return true;", "-    if (jj_3R_342()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b14adc6d550b3d5990dba35e724a371", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "eceb1efda2a64c0d1777a241a780b6640565e74e", "commitAfterChange": "985a2a7aa160a776eff6e6187000ef0ccbcb7ce0", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    config.addOptionListener(OptionConstants.ALLOW_PRIVATE_ACCESS, new OptionListener<Boolean>() {", "+    config.addOptionListener(ALLOW_PRIVATE_ACCESS, new OptionListener<Boolean>() {", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b358822b8cc80a88345d7d7b7ae677b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/MixedQuoteTest.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testSingleEclipsesDouble()", "signatureAfterChange": "   public void testSingleEclipsesDouble()", "diff": ["-    assertEquals(\"#0.0\", INSIDE_DOUBLE_QUOTE, _model._getStateAtCurrent());", "+    assertEquals(\"#0.0\", INSIDE_DOUBLE_QUOTE, _model.getStateAtCurrent());", "-    assertEquals(\"#1.0\", INSIDE_DOUBLE_QUOTE, _model._getStateAtCurrent());", "+    assertEquals(\"#1.0\", INSIDE_DOUBLE_QUOTE, _model.getStateAtCurrent());", "-    assertEquals(\"#2.0\", INSIDE_SINGLE_QUOTE, _model._getStateAtCurrent());", "+    assertEquals(\"#2.0\", INSIDE_SINGLE_QUOTE, _model.getStateAtCurrent());", "-    assertEquals(\"#3.0\", INSIDE_SINGLE_QUOTE, _model._getStateAtCurrent());", "+    assertEquals(\"#3.0\", INSIDE_SINGLE_QUOTE, _model.getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b38ea087ad57f534ca11d73a7dbd123", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7228cea597c372946661a7e1f1db20fd24b9dee1", "commitAfterChange": "8bb2649bd077e2bf6ccaf611ff49da8ad083e7b7", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "   void _openJavadocUnderCursor()", "signatureAfterChange": "   void _openJavadocUnderCursor()", "diff": ["-      Utilities.show(\"Cannot load Java API class list. No network connectivity?\");", "+//      Utilities.show(\"Cannot load Java API class list. No network connectivity?\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b3d3fadbb18832a09b40cecdbd0af0a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 601, "methodNumberAfterChange": 568, "signatureBeforeChange": "    final private boolean jj_3R_298()", "signatureAfterChange": "    final private boolean jj_3R_371()", "diff": ["+  final private boolean jj_3R_371() {", "+    if (jj_3R_376()) return true;", "+      if (jj_3R_404()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_298() {", "-    if (jj_3R_318()) return true;", "-      if (jj_3R_342()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b3e09cb5b408a215456c044b8dfe46d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelDeleteTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void testLineCommentStealsBlockCommentSlash()", "signatureAfterChange": "    public void testLineCommentStealsBlockCommentSlash()", "diff": ["-    assertEquals(\"#3.1\", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());", "+    assertEquals(\"#3.1\", INSIDE_BLOCK_COMMENT, model1._getStateAtCurrent());", "-    assertEquals(\"#4.2\", FREE, model1.getStateAtCurrent());", "+    assertEquals(\"#4.2\", FREE, model1._getStateAtCurrent());", "-    assertEquals(\"#5.2\", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());", "+    assertEquals(\"#5.2\", INSIDE_LINE_COMMENT, model1._getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b3e2adc7881e31b70e57d918921b1db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "b43f29e50ad9a747c307023da2022e85812a7a06", "commitAfterChange": "f9bd2a484c4505cc2dff97c8f9bad6e0c712ff50", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 45, "signatureBeforeChange": "   protected void _clearCache(int offset)", "signatureAfterChange": "   protected void _clearCache(int offset)", "diff": ["-    * document is modified. */", "-  protected void _clearCache(int offset) {", "-    if (_queryCache == null) return;", "-//    synchronized(_reduced) {", "-      if (offset <= 0) {", "-        _queryCache.clear();", "-        _offsetToQueries.clear();", "-        return;", "-      }", "-      ", "-      Integer[] deadOffsets = _offsetToQueries.tailMap(offset).keySet().toArray(new Integer[0]);", "-      for (int i: deadOffsets) {", "-        for (Query query: _offsetToQueries.get(i)) {", "-          _queryCache.remove(query);  // remove query entry from cache", "-        }", "-        _offsetToQueries.remove(i);   // remove query bucket for i from offsetToQueries table", "-      }", "-//    }", "-  }", "+    * document is modified. */", "+  protected void _clearCache(int offset) {", "+    if (_queryCache == null || ! _cacheModified) return;", "+    _cacheModified = false;", "+    ", "+//    synchronized(_reduced) {", "+      if (offset <= 0) {", "+        _queryCache.clear();", "+        _offsetToQueries.clear();", "+        return;", "+      }", "+      ", "+      Integer[] deadOffsets = _offsetToQueries.tailMap(offset).keySet().toArray(new Integer[0]);", "+      for (int i: deadOffsets) {", "+        for (Query query: _offsetToQueries.get(i)) {", "+          _queryCache.remove(query);  // remove query entry from cache", "+        }", "+        _offsetToQueries.remove(i);   // remove query bucket for i from offsetToQueries table", "+      }", "+//    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b6decb288ac734e199af5e4b1237994", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "04d5f67f3ab0801dcf0753d1c84455182368f783", "commitAfterChange": "dd27d69f437c114ad258abba00f7d581b096ce79", "methodNumberBeforeChange": 260, "methodNumberAfterChange": 262, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["+    _navPaneFolderPopupMenu.add(_junitFolderAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b6fe6a2dcef5a34b069b0cd46d40302", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0c8d146c06eba1c2298f0daceb39048930ad6325", "commitAfterChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": "          public void currThreadDied()", "signatureAfterChange": "          public void currThreadDied()", "diff": ["-      if (inDebugMode())", "+      if (inDebugMode()) {", "+        _debugPanel.updateData();", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b7384ee16924ebdf2840650c1506386", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected ObjectMethodCall _getObjectMethodCallForFunction(MethodCall method, Context context)", "signatureAfterChange": "   protected ObjectMethodCall _getObjectMethodCallForFunction(MethodCall method, Context context)", "diff": ["-    Expression expr = null;", "-      expr = _buildObjectFieldAccess(i, numDollars);", "+      Expression expr = _buildObjectFieldAccess(i, numDollars);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b7430e0226990217a1de70a501ef8a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void compile(List<OpenDefinitionsDocument> defDocs) throws IOException", "signatureAfterChange": "   public void compile(List<OpenDefinitionsDocument> defDocs) throws IOException", "diff": ["-    if (_prepareForCompile()) {", "-      _doCompile(defDocs);", "-    }", "+    if (_prepareForCompile()) { _doCompile(defDocs); }", "+    else _notifier.compileAborted(new UnexpectedException(\"The files to be compiled include unsaved modified files\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b807d9fa553068949a614c77366f33b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "0a93533cf1b555344278f97d8d989cd2f113c958", "commitAfterChange": "c950bf1122c303a9137db70374c1cd2e2fc01d08", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testNoJUnitErrors() throws Exception", "signatureAfterChange": "   public void testNoJUnitErrors() throws Exception", "diff": ["-", "+    ", "-    ", "-    if (printMessages) System.out.println(\"before compile\");", "+    ", "-    if (printMessages) System.out.println(\"after compile\");", "+    ", "-      if (printMessages) System.out.println(\"waiting for test\");", "-    if (printMessages) {", "-      System.out.println(\"after test\");", "-      System.out.println(\"erros: \"+_model.getJUnitModel().getJUnitErrorModel());", "-    }", "-    assertEquals(\"test case should have no errors reported\",", "-                 0,", "+    ", "+    if (printMessages) System.out.println(\"erros: \"+_model.getJUnitModel().getJUnitErrorModel());", "+    ", "+    listener.assertNonTestCaseCount(0);", "+    assertEquals(\"test case should have no errors reported\",  0,", "+                 ", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ba307ea331dcc7a9d938f5efd0c25ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/OptionConstants.java", "commitBeforeChange": "4009de7b28d2df87c05fce5746e7b354468d763f", "commitAfterChange": "ef6fbf4282520a8a1b7a89050b6be023e72a81a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static Font getDefaultMainFont()", "signatureAfterChange": "     public static Font getDefaultMainFont()", "diff": ["-        return Font.decode(\"Monaco-PLAIN-12\");", "+        return Font.decode(\"Monaco 12\");", "-        return Font.decode(\"Monospaced-PLAIN-12\");", "+        return Font.decode(\"Monospaced 12\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bba4e9462411e0fd455177f52f0dd50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaRoot.java", "commitBeforeChange": "f8e4975fc86eccfc2e1e190be55c64d1a287745a", "commitAfterChange": "1b5ef0eebd43a246e897081eb432b396efa2d20e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static void main(final String[] args)", "signatureAfterChange": "      public static void main(final String[] args)", "diff": ["+    debug.log(\"Starting up\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bc78db6c2063008067c91e2f7cffe36", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 689, "methodNumberAfterChange": 618, "signatureBeforeChange": "    final private boolean jj_3R_460()", "signatureAfterChange": "    final private boolean jj_3R_433()", "diff": ["+  final private boolean jj_3R_433() {", "+    if (jj_scan_token(ASSIGN)) return true;", "+    if (jj_3R_91()) return true;", "-", "-  final private boolean jj_3R_460() {", "-    if (jj_3R_90()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2be2526dd97b4b23cc500bfba32622b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 632, "methodNumberAfterChange": 630, "signatureBeforeChange": "    final private boolean jj_3R_140()", "signatureAfterChange": "    final private boolean jj_3R_144()", "diff": ["-  final private boolean jj_3R_140() {", "+  final private boolean jj_3R_144() {", "-    if (jj_3R_100()) return true;", "+    if (jj_3R_101()) return true;", "-    if (jj_3R_194()) return true;", "+    if (jj_3R_203()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2be512722fdc1390a60fea3be07f3696", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public Class visit(ThrowStatement node)", "signatureAfterChange": "   public Class visit(ThrowStatement node)", "diff": ["-    Class c = (Class)node.getExpression().acceptVisitor(this);", "+    Class c = node.getExpression().acceptVisitor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c1d30d26972d781eda1c3bdc1a1f727", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 707, "methodNumberAfterChange": 690, "signatureBeforeChange": "    final private boolean jj_3R_234()", "signatureAfterChange": "    final private boolean jj_3R_208()", "diff": ["+", "+  final private boolean jj_3R_208() {", "+    if (jj_3R_258()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_259()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_234() {", "-    if (jj_3R_297()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_298()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c2d42664c21ece91c547e58af355828", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public String getHistoryAsString()", "signatureAfterChange": "   public String getHistoryAsString()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c2f3bc87938c2f4593b04dd7465cba1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testGetStateAtCurrent()", "signatureAfterChange": "   public void testGetStateAtCurrent()", "diff": ["-    assertEquals(\"#0.0\", FREE, model1._getStateAtCurrent());", "-    assertEquals(\"#0.1\", FREE, model1._getStateAtCurrent());", "+    assertEquals(\"#0.0\", FREE, model1.getStateAtCurrent());", "+    assertEquals(\"#0.1\", FREE, model1.getStateAtCurrent());", "-    assertEquals(\"#2.1\", INSIDE_LINE_COMMENT, model1._getStateAtCurrent());", "+    assertEquals(\"#2.1\", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());", "-    assertEquals(\"#3.1\", INSIDE_LINE_COMMENT, model1._getStateAtCurrent());", "+    assertEquals(\"#3.1\", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c31cfebe977a4398ac1fca45f3f0a6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 689, "methodNumberAfterChange": 672, "signatureBeforeChange": "    final private boolean jj_3R_372()", "signatureAfterChange": "    final private boolean jj_3R_301()", "diff": ["+", "+  final private boolean jj_3R_301() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(32)) jj_scanpos = xsp;", "+    if (jj_3R_85()) return true;", "+    if (jj_3R_327()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_328()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_372() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(32)) jj_scanpos = xsp;", "-    if (jj_3R_83()) return true;", "-    if (jj_3R_424()) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_425()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c365c0d6dcbdb581901f78b66f9581b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaErrorWindow.java", "commitBeforeChange": "ad58ba45bb20b5b68be5883e5b408a301633c1b6", "commitAfterChange": "f7fe3d35bd562b548ecea0f3cfa106ec01660447", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private void updateErrorInfo()", "signatureAfterChange": "   private void updateErrorInfo()", "diff": ["-      msg[0] = String.valueOf(_errors.size())+\" error\"+((_errors.size()>1)?\"s\":\"\")+\" occured!\";", "+      msg[0] = String.valueOf(_errorCount)+\" error\"+((_errorCount>1)?\"s\":\"\")+\" occured!\";", "-      _indexLabel.setText(\"Error \"+(_errorIndex+1)+\" of \"+(_errors.size()));", "+      _indexLabel.setText(\"Error \"+(_errorIndex+1)+\" of \"+(_errorCount));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c42f60929a50607e4ba930e40137a16", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testIndentGrowTabAtEnd()       throws BadLocationException, OperationCanceledException", "signatureAfterChange": "   public void testIndentGrowTabAtEnd()       throws BadLocationException, OperationCanceledException", "diff": ["-    openDoc.syncCurrentLocationWithDefinitions(openDoc.getLength() - 1);", "-    int loc = openDoc.getCurrentDefinitionsLocation();", "+    openDoc.setCurrentLocation(openDoc.getLength() - 1);", "+    int loc = openDoc.getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c4c6dd670f085ed7b4e310e4247fbb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "25d973a9f45bdba84ad4514eba518ee94f041daf", "commitAfterChange": "fa5a46f3cc65ec85b9fa37599dc6542e75cee25e", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public void testUndoOrRedoSetsUnmodifiedState() throws BadLocationException", "signatureAfterChange": "   public void testUndoOrRedoSetsUnmodifiedState() throws BadLocationException", "diff": ["-    _defModel.setModifiedSinceSave();", "+    _defModel.updateModifiedSinceSave();", "-    _defModel.setModifiedSinceSave();", "+    _defModel.updateModifiedSinceSave();", "-    _defModel.setModifiedSinceSave();", "+    _defModel.updateModifiedSinceSave();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c7387926ab9de731262ce9d5734d3da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/gui/StringList.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Action getAction(String key) throws MissingListenerException", "signatureAfterChange": "   public Action getAction(String key) throws MissingListenerException", "diff": ["-     */", "-    public Action getAction(String key) throws MissingListenerException {", "-\treturn (Action)listeners.get(key);", "-    }", "+   */", "+  public Action getAction(String key) throws MissingListenerException {", "+    return listeners.get(key);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c7fca15170109c4e22d86c13040decd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testInsertToDoc() throws BadLocationException", "signatureAfterChange": "   public void testInsertToDoc() throws BadLocationException", "diff": ["-    defModel.insertString(0, \"a/*bc */\\\"\\\\{}()\", null);", "-    assertEquals(\"#0.0\", defModel.getText(0, 8), \"a/*bc */\");", "-    assertEquals(\"#0.1\", 14, defModel.getCurrentLocation());", "-    defModel.insertString(0, \"Start:\", null);", "-    assertEquals(\"#1.0\", defModel.getText(0, 14), \"Start:a/*bc */\");", "-    assertEquals(\"#1.1\", 6, defModel.getCurrentLocation());", "+    _defModel.insertString(0, \"a/*bc */\\\"\\\\{}()\", null);", "+    assertEquals(\"#0.0\", _defModel.getText(0, 8), \"a/*bc */\");", "+    assertEquals(\"#0.1\", 14, _defModel.getCurrentLocation());", "+    _defModel.insertString(0, \"Start:\", null);", "+    assertEquals(\"#1.0\", _defModel.getText(0, 14), \"Start:a/*bc */\");", "+    assertEquals(\"#1.1\", 6, _defModel.getCurrentLocation());", "-    BraceReduction rm = defModel.getReduced();", "+    BraceReduction rm = _defModel.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c8e278e692903cf6f473be8f5c4dd33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "15458645089a79b14de404e5575a49804f88717d", "commitAfterChange": "d1bc46bda120c4aecfe38f91af0fa9a5e31eafb8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public synchronized void testBreakpoints()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testBreakpoints()      throws DebugException, BadLocationException, IOException, InterruptedException", "diff": ["-    // Start debugger and add breakpoint (before class is loaded)", "+    // Start debugger", "-   ", "+    debugListener.assertDebuggerStartedCount(1);", "+    debugListener.assertDebuggerShutdownCount(0);", "+    assertTrue(\"Debug Manager should be ready\", _debugManager.isReady());", "+    ", "+   // Add breakpoint before class is loaded"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cac4e5aa78f5ce4c99567d47ad242d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/javadoc/DefaultJavadocModel.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   private void _runJavadoc(Iterable<String> files, File destDir, Iterable<String> extraArgs, boolean allDocs)", "signatureAfterChange": "   private void _runJavadoc(Iterable<String> files, File destDir, Iterable<String> extraArgs, boolean allDocs)", "diff": ["-    List<CompilerError> errors = new ArrayList<CompilerError>();", "+    List<DJError> errors = new ArrayList<DJError>();", "-      errors.add(new CompilerError(\"IOException: \" + e.getMessage(), false));", "+      errors.add(new DJError(\"IOException: \" + e.getMessage(), false));", "-      errors.add(new CompilerError(\"InterruptedException: \" + e.getMessage(), false));", "+      errors.add(new DJError(\"InterruptedException: \" + e.getMessage(), false));", "-    _javadocErrorModel = new CompilerErrorModel(IterUtil.toArray(errors, CompilerError.class), _model);", "+    _javadocErrorModel = new CompilerErrorModel(IterUtil.toArray(errors, DJError.class), _model);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cb979c673b92293e2169a0285647baa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "65add9d9f0de9278803d6c9a77b3294a4ab082f3", "commitAfterChange": "1ad8d0f619615b40333c2ef2eca24506e4639e2b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testClassFileSynchronizationAfterRename()     throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronizationAfterRename()     throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "diff": ["-        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "+        fail(\"compile failed: \" + getCompilerErrorString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cba89d65ac0a5d5c4d299c7ead41642", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     public Object visit(MinusExpression node)", "signatureAfterChange": "   public Class visit(MinusExpression node)", "diff": ["-     */", "-    public Object visit(MinusExpression node) {", "-        Class c = visitUnaryOperation(node, \"minus.expression.type\");", "-", "-        // Compute the expression if it is constant", "-        Node  n = node.getExpression();", "-        if (n.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.minus(c, n.getProperty(NodeProperties.VALUE)));", "-        }", "-        return c;", "+   */", "+  public Class visit(MinusExpression node) {", "+    Class c = visitUnaryOperation(node, \"minus.expression.type\");", "+    ", "+    // Compute the expression if it is constant", "+    Node  n = node.getExpression();", "+    if (n.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.minus(c, n.getProperty(NodeProperties.VALUE)));", "+    }", "+    return c;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ce3f74f9eb301362730900a36dc826e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public boolean inCommentBlock()", "signatureAfterChange": "   public boolean inCommentBlock()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ce5c8c79e31e9df2e566b46b01239b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 247, "methodNumberAfterChange": 245, "signatureBeforeChange": "     public boolean saveFile(FileSaveSelector com) throws IOException", "signatureAfterChange": "     public boolean saveFile(FileSaveSelector com) throws IOException", "diff": ["-//      System.err.println(this + \" is untitled? \" + isUntitled());", "+      // Update value of _packageName since modification flag will be set to false", "+      ", "+//      System.err.println(\"Saving file: \" + getFile());", "+      ", "+      // Update package name by parsing file", "+      _packageName = getDocument().getPackageName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d1727c44e2c31889ecd0811131c22a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 462, "signatureBeforeChange": "    final private boolean jj_3R_220()", "signatureAfterChange": "    final private boolean jj_3R_217()", "diff": ["-", "-  final private boolean jj_3R_220() {", "-    if (jj_3R_53()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3_45()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_217() {", "+    if (jj_3R_50()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_47()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d1a8e92874337a87bca8099b45137f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "91061a0d47469bc7d07ba5fa464f35ab97f70dbb", "commitAfterChange": "296befb4a12a5cc35f5f70ed97c5006f2e9fc8bc", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "signatureAfterChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "diff": ["-          System.out.println(\"Forced to rename backup \" + backup + \" as file \" + file);", "+//          System.out.println(\"Forced to rename backup \" + backup + \" as file \" + file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d2d382f8fd4b6cdb0f00a530b189cc7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 722, "methodNumberAfterChange": 723, "signatureBeforeChange": "    final private boolean jj_3R_149()", "signatureAfterChange": "    final private boolean jj_3R_150()", "diff": ["-  final private boolean jj_3R_149() {", "+", "+  final private boolean jj_3R_150() {", "-    if (jj_3R_239()) return true;", "+    if (jj_3R_240()) return true;", "-    if (jj_3R_494()) jj_scanpos = xsp;", "+    if (jj_3R_496()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d2e5bbee8669cbe582fdfd295499143", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ArrayInitializer.java", "commitBeforeChange": "1676fcce81c19c5d647ee9a67867801bec666091", "commitAfterChange": "128dfa585f73f276b6d45e70cb656b74c7a3ac52", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public TypeName getElementType()", "signatureAfterChange": "   public TypeName getElementType()", "diff": ["-    if (elementType == null) throw new IllegalStateException(\"elementType == null\");", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d313956b76e6865cddd3b8b0515c840", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/CheckBoxJList.java", "commitBeforeChange": "2c8ce62ae485e784b2bec820cb7bf72ad52ae36f", "commitAfterChange": "b59ea5c5062a947f96790df7fe854009e693434a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      protected void init(Vector<?> listData, Vector<?> selData)", "signatureAfterChange": "\r   \r   protected void init(Vector<?> listData, Vector<?> selData)", "diff": ["-  ", "-  protected void init(Vector<?> listData, Vector<?> selData) {", "-    CheckBoxListCellRenderer r = new CheckBoxListCellRenderer();", "-    if (selData!=null) {", "-      int i = 0;", "-      for(Object t: listData) {", "-        boolean sel = false;", "-        if (selData.contains(t)) {", "-          selectionCache.add(i);", "-          getSelectionModel().addSelectionInterval(i, i);", "-          sel = true;", "-        }", "-        r.getListCellRendererComponent(this,", "-                                       listData.get(i),", "-                                       i,", "-                                       sel,", "-                                       (i==0));", "-        ++i;", "-      }", "-    }    ", "-    setCellRenderer(r);", "-    addListSelectionListener(this);", "-  }", "+  \r", "+  protected void init(Vector<?> listData, Vector<?> selData) {\r", "+    setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\r", "+    CheckBoxListCellRenderer r = new CheckBoxListCellRenderer();\r", "+    if (selData!=null) {\r", "+      int i = 0;\r", "+      for(Object t: listData) {\r", "+        boolean sel = false;\r", "+        if (selData.contains(t)) {\r", "+          selectionCache.add(i);\r", "+          getSelectionModel().addSelectionInterval(i, i);\r", "+          sel = true;\r", "+        }\r", "+        r.getListCellRendererComponent(this,\r", "+                                       listData.get(i),\r", "+                                       i,\r", "+                                       sel,\r", "+                                       (i==0));\r", "+        ++i;\r", "+      }\r", "+    }    \r", "+    setCellRenderer(r);\r", "+    addListSelectionListener(this);\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d356968821e797e995ee70a2fea7e6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public Void forInnerClassDefDoFirst(InnerClassDef that)", "signatureAfterChange": "   public Void forInnerClassDefDoFirst(InnerClassDef that)", "diff": ["-  public Void forInnerClassDefDoFirst(InnerClassDef that) { return forClassDefDoFirst(that); }", "+  public Void forInnerClassDefDoFirst(InnerClassDef that) { ", "+    System.err.println(\"JEIFPDFV.forInnerClassDefDoFirst called for \" + that.getName());", "+    return forClassDefDoFirst(that); ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d6554ab6d2ed2dc6b5fd68ef24d7c49", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testInteractionsCanSeeChangedClass()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testInteractionsCanSeeChangedClass()     throws BadLocationException, IOException", "diff": ["+    OpenDefinitionsDocument doc;", "-      setupDocument(text_before + i + text_after);", "-      _model.saveFile(new FileSelector(file));", "-      _model.startCompile();", "+      doc = setupDocument(text_before + i + text_after);", "+      doc.saveFile(new FileSelector(file));", "+      doc.startCompile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d6c7d7eb49caca3b23cba93951141ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testRelativePath() throws IOException, InvalidPackageException", "signatureAfterChange": "   public void testRelativePath() throws IOException, InvalidPackageException", "diff": ["-//    _log.log(\"testRelativePath completed\");", "+    _log.log(\"testRelativePath completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d745b13ba798cbfe1d8d481cac4e8b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "bf2319a0fd4ff0da05d171cf995d395154267897", "commitAfterChange": "ce944bab12f670cf565ac442d0f81c8cbf5e4ad0", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 174, "signatureBeforeChange": "   public void quit(boolean force)", "signatureAfterChange": "   public void quit(boolean force)", "diff": ["-    _log.log(\"quit(\" + force + \") called\");", "+//    _log.log(\"quit(\" + force + \") called\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d7653c06bb7330fa8670b1018a3c443", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionBracePlus.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-    System.err.println(\"ActionBracePlus\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d78b679871319f4c1000229eee3f637", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 80, "signatureBeforeChange": "   public Void forVariableDeclaration(VariableDeclaration that)", "signatureAfterChange": "   public Void forVariableDeclaration(VariableDeclaration that)", "diff": ["+//    System.err.println(\"forVariableDeclaration in LLV called for \" + that);", "+    ", "+    System.err.println(\"forVariableDeclarationDoFirst(...) completed with no errors\");", "+    System.err.println(\"Mav visit completed in forVariableDeclaration; getClass() = \"  + getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d8be9e6f47172566b9165a362c03480", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryVisitor.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public Void forClassDef(ClassDef that)", "signatureAfterChange": "   public Void forClassDef(ClassDef that)", "diff": ["-   */", "+    */", "-      if (! _importedPackages.contains(\"junit.framework\"))", "-        _importedPackages.addFirst(\"junit.framework\");", "+      if (! _importedPackages.contains(\"junit.framework\")) _importedPackages.addFirst(\"junit.framework\");", "+    that.getMav().visit(this);", "+    that.getName().visit(this);", "+    that.getSuperclass().visit(this);", "-    that.getMav().visit(this);", "-    that.getName().visit(this);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d8d0d4434a746f01adec7b52064311f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/MixedQuoteTest.java", "commitBeforeChange": "75615d6339345db6e253403db9b318fe78732c66", "commitAfterChange": "cfb5c0d7a42de99cbc0ae424116ea39ceac84b66", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testSingleEclipsesDouble()", "signatureAfterChange": "   public void testSingleEclipsesDouble()", "diff": ["-    assertEquals(\"#0.1\", FREE, stateAtCurrentToken(model));", "+    assertEquals(\"#0.1\", FREE, stateOfCurrentToken(model));", "-    assertEquals(\"#1.1\", INSIDE_DOUBLE_QUOTE, stateAtCurrentToken(model));", "+    assertEquals(\"#1.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model));", "-    assertEquals(\"#2.1\", INSIDE_SINGLE_QUOTE, stateAtCurrentToken(model));", "+    assertEquals(\"#2.1\", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(model));", "-    assertEquals(\"#3.1\", INSIDE_SINGLE_QUOTE, stateAtCurrentToken(model));", "+    assertEquals(\"#3.1\", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(model));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d90e2944cc5135fd7ef1bf04b5bb667", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e10e7bd83f125e1856c739971a7fde05620d52b1", "commitAfterChange": "23f26b7beff70c50bdf89d599411e87eb533660c", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 162, "signatureBeforeChange": "   private void _setCurrentDirectory(File file)", "signatureAfterChange": "   private void _setCurrentDirectory(File file)", "diff": ["+    _javadocChooser.setCurrentDirectory(file.getAbsoluteFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2da77857550e347ca46f945591fa0772", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public Void forClassDef(ClassDef that)", "signatureAfterChange": "   public Void forClassDef(ClassDef that)", "diff": ["-  public Void forClassDef(ClassDef that) {    ", "+  public Void forClassDef(ClassDef that) { ", "-", "+    ", "+//    System.err.println(\"Processing ClassDef for \" + className);", "-   ", "-    that.getMav().visit(this);", "+    that.getMav().visit(this);", "-      that.getBody().visit(new ClassBodyAdvancedVisitor(sd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "-", "+      that.getBody().visit(new ClassBodyAdvancedVisitor(sd, className, _file, _package, _importedFiles, _importedPackages, ", "+                                                        _classNamesInThisFile, continuations));", "+      ", "-       * in case we decide to add augmentation back in.", "-       * createConstructor is called elsewhere.*/", "+        * in case we decide to add augmentation back in.", "+        * createConstructor is called elsewhere.*/", "-", "+      ", "-", "+    ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2da91a0cceaacc53d5655819e625a4e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 407, "methodNumberAfterChange": 396, "signatureBeforeChange": "    final private boolean jj_3R_373()", "signatureAfterChange": "    final private boolean jj_3R_375()", "diff": ["+  final private boolean jj_3R_375() {", "+    if (jj_scan_token(DECREMENT)) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_373() {", "-    if (jj_scan_token(INCREMENT)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2db6498c4d65acd2748e3285500dfdab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void tearDown() throws Exception", "signatureAfterChange": "   public void tearDown() throws Exception", "diff": ["+    debug.logStart();", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2db7fa5f602619e1c063a11a9fdc4423", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DefaultOptionMap.java", "commitBeforeChange": "5a85b19daac40f9227c1d37126d83286ba866a85", "commitAfterChange": "9ab3c647e4bf2cceb929c5db766abfe1f2993d4e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "        public <T> T removeOption(OptionParser<T> o)", "signatureAfterChange": "        public <T> T removeOption(OptionParser<T> o)", "diff": ["-\tsuper.remove((OptionParser)o); // jsr14 is dumb.  we have to cast.", "+\tsuper.remove(o); // jsr14 is dumb.  we have to cast."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dcacc021bea263377f719c3ba989ba2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 434, "signatureBeforeChange": "    final private boolean jj_3R_40()", "signatureAfterChange": "    final private boolean jj_3R_37()", "diff": ["-", "-  final private boolean jj_3R_40() {", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_69()) jj_scanpos = xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3_19()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_37() {", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_66()) jj_scanpos = xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_21()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd7a884570c92d2c5fb174a7ec62bfe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testQuoteBreaksComment()", "signatureAfterChange": "   public void testQuoteBreaksComment()", "diff": ["-    assertEquals(\"#1.1\", INSIDE_BLOCK_COMMENT, model1._getStateAtCurrent());", "+    assertEquals(\"#1.1\", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());", "-    assertEquals(\"#2.0\", INSIDE_DOUBLE_QUOTE, model1._getStateAtCurrent());", "+    assertEquals(\"#2.0\", INSIDE_DOUBLE_QUOTE, model1.getStateAtCurrent());", "-    assertEquals(\"#5.0\", FREE, model1._getStateAtCurrent());", "+    assertEquals(\"#5.0\", FREE, model1.getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e0f4a8d23ec1db919bd3c62d0d083a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 761, "methodNumberAfterChange": 794, "signatureBeforeChange": "    final private boolean jj_3_69()", "signatureAfterChange": "    final private boolean jj_3_69()", "diff": ["-    if (jj_scan_token(HOOK)) return true;", "+    if (jj_3R_88()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e1331b7245502308734748a38d35b3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 809, "methodNumberAfterChange": 723, "signatureBeforeChange": "    final private boolean jj_3R_237()", "signatureAfterChange": "    final private boolean jj_3R_202()", "diff": ["-", "-  final private boolean jj_3R_237() {", "-    if (jj_scan_token(RIGHT_UNSIGNED_SHIFTASSIGN)) return true;", "-    if (jj_3R_87()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_202() {", "+    if (jj_scan_token(RIGHT_UNSIGNED_SHIFTASSIGN)) return true;", "+    if (jj_3R_78()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e1c6a828858a1667e702b00aa1d9a8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "commitAfterChange": "ba6205cad42ae00df3c37c5cbd4625770848df66", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public OpenDefinitionsDocument newTestCase(String name, boolean makeSetUp, boolean makeTearDown)", "signatureAfterChange": "   public OpenDefinitionsDocument newTestCase(String name, boolean makeSetUp, boolean makeTearDown)", "diff": ["-    buf.append(\"* (Replace \\\"X\\\" with a few words describing the test.  You may write\\n\");", "-    buf.append(\"* as many \\\"testSomething\\\" methods in this class as you wish,\\n\");", "-    buf.append(\"* and each one will be executed when running JUnit over this class.)\\n\");", "+    buf.append(\"* (Replace \\\"X\\\" with a name describing the test.  You may write as\\n\");", "+    buf.append(\"* many \\\"testSomething\\\" methods in this class as you wish, and each\\n\");", "+    buf.append(\"* one will be called when running JUnit over this class.)\\n\");", "-    buf.append(\"public void testX() {\\n}\\n\");", "+    buf.append(\"public void testX() {\\n}\\n\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e2239fbb9f6679f470aa22c5803e9d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "04507d274966bbd79bdb0de438eb322300ca1e35", "commitAfterChange": "52d854c06330a3a574e82f8149bff505999fda18", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   protected void _interactionIsOver()", "signatureAfterChange": "   protected void _interactionIsOver()", "diff": ["+    _document.addToHistory(_toAddToHistory);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e4350bcb437f46fd87d30b2f2957963", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/BalancingStreamTokenizerTest.java", "commitBeforeChange": "1c7e0138b9996497cf68b90499ce66108cdb5ed6", "commitAfterChange": "527b327a81252940ede7723bc28a80b1911fdddb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testSimple() throws IOException", "signatureAfterChange": "      public void testSimple() throws IOException", "diff": ["-    BalancingStreamTokenizer tok = make(\"abc def ghi 123\\n456\");", "+    BalancingStreamTokenizer tok = make(\"abc def\\\\ ghi 123\\n456\");", "-    assertEquals(\"def\", s);", "+    assertEquals(\"def\\\\\", s);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e445fb138a6100336dbf5c36690c132", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void _addNewline()", "signatureAfterChange": "   public void _addNewline()", "diff": ["-  /** Appends a newLine to _document assuming that the Write Lock is already held.  Must run in the event thread. */", "-  public void _addNewline() { append(StringOps.NEWLINE, InteractionsDocument.DEFAULT_STYLE); }", "+  /** Appends a newLine to _document assuming that the Write Lock is already held. Must run in the event thread. */", "+  public void _addNewline() { append(_newLine, InteractionsDocument.DEFAULT_STYLE); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e48d416da53ba206947a4fd4c680f64", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "5a42b92d770342c963138046c93f1390dcf62017", "commitAfterChange": "b29182d94c1064d5f838746a211b47a58b37d210", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     protected void _removeListHighlight()", "signatureAfterChange": "     protected void _removeListHighlight()", "diff": ["-      _prevErrorButton.setEnabled(false);", "-      _nextErrorButton.setEnabled(false);", "+//      _prevErrorButton.setEnabled(false);", "+//      _nextErrorButton.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e665a34f8bb6b87146b36156d617fae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private void tester(Pair[] cases)", "signatureAfterChange": "   private void tester(Pair[] cases) throws ExceptionReturnedException", "diff": ["-  private void tester(Pair[] cases) {", "+  private void tester(Pair[] cases) throws ExceptionReturnedException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e7236eb9d00e3f4cc3609a2cd78b8b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "e1cae1f7b6aae460aab41e86b032251abb119211", "commitAfterChange": "d1929cdbc61164d9dd0af29defc1992f3c759cb6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   @SuppressWarnings(\"unchecked\")   private <T> T newDocumentRegion(OpenDefinitionsDocument odd, int start, int end)", "signatureAfterChange": "   @SuppressWarnings(\"unchecked\")   private <T> T newDocumentRegion(OpenDefinitionsDocument odd, int start, int end)", "diff": ["-    return (T) new MovingDocumentRegion(odd, start, end, odd._getLineStartPos(start), odd._getLineEndPos(end));", "+    return (T) new DocumentRegion(odd, start, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e8ef5fdc0a43458a58181f35aa14f87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JDKToolsLibrary.java", "commitBeforeChange": "a915713ffc333fa5e6054f9ce8312c6fe076be4f", "commitAfterChange": "022699e767ab37237911be36e7a5ac8176ca23b6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public static void msg(String s)", "signatureAfterChange": "      public static void msg(String s)", "diff": ["-  public static void msg(String s) {   ", "+  public static void msg(String s) {  _log.log(s);   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e93c54c58e31eaedc800592cf5f4f34", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/KeyStrokeOptionComponentTest.java", "commitBeforeChange": "dddac9bc75d650eec13f283ea09ba8a9d25f91b3", "commitAfterChange": "5944dd2b12a74ebad6e3549d813d2dd557403c7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testApplyDoesChangeConfig()", "signatureAfterChange": "      public void testApplyDoesChangeConfig()", "diff": ["-    KeyStroke testKeyStroke = KeyStrokeOption.NULL_KEYSTROKE;", "+    KeyStroke testKeyStroke = KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e9f6577fc8520b5fcc35b9731120c86", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 20, "signatureBeforeChange": "      public void testDeleteFileWhileOpen()      throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "      public void testDeleteFileWhileOpen()      throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["-    OpenDefinitionsDocument doc1 = _sdModel.openFile(new FileSelector(f));", "-    OpenDefinitionsDocument doc2 = _sdModel.newFile();", "+    OpenDefinitionsDocument doc1 = _model.openFile(new FileSelector(f));", "+    OpenDefinitionsDocument doc2 = _model.newFile();", "-    _sdModel.closeFile(doc1);", "-//     _log.log(\"testDeleteFileWhileOpen completed\");", "+    _model.closeFile(doc1);", "+     _log.log(\"testDeleteFileWhileOpen completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eac8e9d76739d372a5e33cb11a75b25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 83, "signatureBeforeChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "signatureAfterChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "diff": ["-    boolean process = false;", "+    boolean process;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eba0d864ed17b5b4ff302730008ca7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "df9cbdf4ec8cbcbc3942b966a48a15d33dcac7ed", "commitAfterChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testInterpretCurrentInteractionWithIncompleteInput() throws EditDocumentException, InterruptedException", "signatureAfterChange": "   public void testInterpretCurrentInteractionWithIncompleteInput() throws EditDocumentException, InterruptedException,     RemoteException", "diff": ["-  public void testInterpretCurrentInteractionWithIncompleteInput() throws EditDocumentException, InterruptedException {", "+  public void testInterpretCurrentInteractionWithIncompleteInput() throws EditDocumentException, InterruptedException,", "+    RemoteException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ebf5f50574c14b8e86245c319e9d171", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/VariableData.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void setPrivate()", "signatureAfterChange": "   public void setPrivate()", "diff": ["-      _modifiersAndVisibility = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, newModifiers);", "+      _modifiersAndVisibility = new ModifiersAndVisibility(SourceInfo.NO_INFO, newModifiers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2edbf624ff276d83616877849becd0b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "     public Object visit(SubtractAssignExpression node)", "signatureAfterChange": "   public Class visit(SubtractAssignExpression node)", "diff": ["+   */", "+  public Class visit(SubtractAssignExpression node) {", "+    // Check the types", "+    Node  ln = node.getLeftExpression();", "+    Class lc = (Class)ln.acceptVisitor(this);", "+    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "+    ", "+    if (lc == null          || rc == null          ||", "+        lc == void.class    || rc == void.class    ||", "+        lc == boolean.class || rc == boolean.class ||", "+        !lc.isPrimitive()   || !rc.isPrimitive()) {", "+      throw new ExecutionError(\"subtraction.type\", node);", "+    }", "+    ", "+    // The left subexpression must be a variable", "+    if (!ln.hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"left.expression\", node);", "+    }", "+    ", "+    // Sets the type property of this node", "+    node.setProperty(NodeProperties.TYPE, lc);", "+    return lc;", "+  }", "-     */", "-    public Object visit(SubtractAssignExpression node) {", "-        // Check the types", "-\tNode  ln = node.getLeftExpression();", "-        Class lc = (Class)ln.acceptVisitor(this);", "-        Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "-", "-        if (lc == null          || rc == null          ||", "-            lc == void.class    || rc == void.class    ||", "-            lc == boolean.class || rc == boolean.class ||", "-            !lc.isPrimitive()   || !rc.isPrimitive()) {", "-            throw new ExecutionError(\"subtraction.type\", node);", "-        }", "-        ", "-        // The left subexpression must be a variable", "-        if (!ln.hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"left.expression\", node);", "-        }", "-", "-        // Sets the type property of this node", "-        node.setProperty(NodeProperties.TYPE, lc);", "-        return lc;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ee213820f3b6b635f8a0c0614906eba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/gui/OptionsDialog.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Action getAction(String key) throws MissingListenerException", "signatureAfterChange": "   public Action getAction(String key) throws MissingListenerException", "diff": ["-    return (Action)listeners.get(key);", "+    return listeners.get(key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2efc1779988268bf403c9442870d6b45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/LineEnumRule.java", "commitBeforeChange": "4cc061cda0dcd0210fc21018c1746064dc52e5d0", "commitAfterChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void paintComponent(Graphics g)", "signatureAfterChange": "   public void paintComponent(Graphics g)", "diff": ["-    int lastLine = odd.getDefaultRootElement().getElementIndex(endOffset);", "+    int lastLine = _cachedLastLine = odd.getNumberOfLines();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eff5c86608690255cb6821c5079f721", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "b155114812a8cbcc9237269e7062e3599ab1f574", "commitAfterChange": "201b599e7e14dfbbe8e927af829c37bc841f5d12", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   protected void handleSlaveQuit(int status)", "signatureAfterChange": "   protected void handleSlaveQuit(int status)", "diff": ["+    debug.logStart();", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f1b16ab9f33486b3f100f94b39d1e87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 275, "methodNumberAfterChange": 268, "signatureBeforeChange": "    final private boolean jj_3R_153()", "signatureAfterChange": "    final private boolean jj_3R_154()", "diff": ["-  final private boolean jj_3R_153() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_98()) return true;", "-    xsp = jj_scanpos;", "-    if (jj_3R_299()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_300()) return true;", "+", "+  final private boolean jj_3R_154() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_98()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_300()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_301()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f20fe52c7cec16022b45809bc12fe28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ForEachNamingTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testMinimalForEach() throws ParseException", "signatureAfterChange": "   public void testMinimalForEach() throws ParseException", "diff": ["-    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: false (koala.dynamicjava.tree.ReferenceType: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.SimpleAssignExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 0 0 int)))]\", statements.toString());", "+    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: false (koala.dynamicjava.tree.ReferenceTypeName: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.SimpleAssignExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 0 0 int)))]\", statements.toString());", "-    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: false (koala.dynamicjava.tree.ReferenceType: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.SimpleAssignExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 0 0 int)))]\", statements.toString());", "+    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: false (koala.dynamicjava.tree.ReferenceTypeName: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.SimpleAssignExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 0 0 int)))]\", statements.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f2477508c04f9141962d816073f4813", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 358, "methodNumberAfterChange": 361, "signatureBeforeChange": "    final private boolean jj_3R_264()", "signatureAfterChange": "    final private boolean jj_3R_265()", "diff": ["-  final private boolean jj_3R_264() {", "-    if (jj_3R_282()) return true;", "+  final private boolean jj_3R_265() {", "+    if (jj_3R_283()) return true;", "-      if (jj_3R_307()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_308()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f256499309fd2f832c0423533a35287", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "de5d6cb8095b8316a5027b98971107ba8d8608ac", "commitAfterChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private OpenDefinitionsDocument _doCompile(String text, File file)     throws IOException, BadLocationException", "signatureAfterChange": "   protected OpenDefinitionsDocument _doCompile(String text, File file)     throws IOException, BadLocationException, InterruptedException", "diff": ["+   */", "+  protected OpenDefinitionsDocument _doCompile(String text, File file)", "+    throws IOException, BadLocationException, InterruptedException", "+  {", "+    OpenDefinitionsDocument doc = setupDocument(text);", "+    doc.saveFile(new FileSelector(file));", "+", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();", "+    _model.addListener(listener);", "+    synchronized(listener) {", "+      doc.startCompile();", "+      int numErrors = _model.getNumErrors();", "+      if (_model.getNumErrors() > 0) {", "+        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "+      }", "+      listener.wait();", "+    }", "+    listener.checkCompileOccurred();", "+    _model.removeListener(listener);", "+    return doc;", "+  }", "-   */", "-  private OpenDefinitionsDocument _doCompile(String text, File file)", "-    throws IOException, BadLocationException", "-  {", "-    OpenDefinitionsDocument doc = setupDocument(text);", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "-    return doc;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f2e8c1ad147e017459dfd59937d3209", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 641, "methodNumberAfterChange": 546, "signatureBeforeChange": "    final private boolean jj_3R_287()", "signatureAfterChange": "    final private boolean jj_3R_291()", "diff": ["-  final private boolean jj_3R_287() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_291() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f34f27a684f4af92c9b3e1b6f58ae84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk16/edu/rice/cs/drjava/model/compiler/Javac160Compiler.java", "commitBeforeChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "commitAfterChange": "51ac7cbc7782d911930f183c9cf811f53aba30d2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public boolean isAvailable()", "signatureAfterChange": "      public boolean isAvailable()", "diff": ["-      Class.forName(\"com.sun.tools.javac.main.JavaCompiler\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f46381abffe364e2b4b2aae7f2c0398", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor.java", "commitBeforeChange": "2b3538f4ec792670cfb28bc41a5aee6f4c8718c0", "commitAfterChange": "c302d1db72cb508e0cec30d24e39d48cce8fd663", "methodNumberBeforeChange": 369, "methodNumberAfterChange": 369, "signatureBeforeChange": "      public Void forInnerClassDef(InnerClassDef that)", "signatureAfterChange": "      public Void forInnerClassDef(InnerClassDef that)", "diff": ["-    System.err.println(\"Visiting inner class \" + that.getName() + \" in JExpIfPrunDFV from \" + this);", "+//    System.err.println(\"Visiting inner class \" + that.getName() + \" in JExpIfPrunDFV from \" + this);", "-    System.err.println(\"Passed the prune control point in JEIFPDFV.forInnerClassDef for \" + that.getName());", "+//    System.err.println(\"Passed the prune control point in JEIFPDFV.forInnerClassDef for \" + that.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f4d89a373b5149d651ce5b324faa0f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public T getItem()", "signatureAfterChange": "   public T getItem()", "diff": ["-    if (!_force) {", "-      if (_pim.getMatchingItems().size()==0) {", "-        return null;", "-      }", "-    }", "+    if (!_force && _pim.getMatchingItems().size() == 0) return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f567b9de1f6771bf53222721f43c52e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DummyGlobalModel.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "      public void cleanBuildDirectory() throws FileMovedException, IOException", "signatureAfterChange": "      public void cleanBuildDirectory()", "diff": ["-  public void cleanBuildDirectory() throws FileMovedException, IOException {", "+  public void cleanBuildDirectory(){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f5d5545b5e2ce15044573fb25377060", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public void dispose()", "signatureAfterChange": "   public void dispose()", "diff": ["-    _interpreterControl.killInterpreter(false);", "+    _interpreterControl.killInterpreter(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f60562274a85146b9312f7d5fc2a363", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "936df97bedea66175f36cae49ba74b17abf11e8a", "commitAfterChange": "d43c6d20ec903cbbb4ee5291a112b3b3ae570823", "methodNumberBeforeChange": 456, "methodNumberAfterChange": 456, "signatureBeforeChange": "   protected OpenDefinitionsDocument _getOpenDocument(File file)", "signatureAfterChange": "   protected OpenDefinitionsDocument _getOpenDocument(File file)", "diff": ["-    OpenDefinitionsDocument[] docs;", "-    ", "-    synchronized(_documentsRepos) { docs = _documentsRepos.toArray(new OpenDefinitionsDocument[0]); }", "-    for (OpenDefinitionsDocument doc: docs) {", "+    for (OpenDefinitionsDocument doc: getOpenDefinitionsDocuments()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f654df89f46809624fb09d3a67b5eab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public synchronized Vector<WatchpointData> getWatchpoints()", "signatureAfterChange": "   public synchronized Vector<WatchData> getWatches()", "diff": ["-  public synchronized Vector<WatchpointData> getWatchpoints() {", "-    return _watchpoints;", "+  public synchronized Vector<WatchData> getWatches() {", "+    return _watches;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f68cbeccd6543fe14fbcce3acac2b8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/StringOptionTest.java", "commitBeforeChange": "ab56c47a9f6c097d16c8c38565dec5edb6fb4d6f", "commitAfterChange": "0d80b47fa71022c1d579ad193bcaa14dd927885e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testGetName()", "signatureAfterChange": "      public void testGetName()", "diff": ["-    StringOption so = new StringOption(\"classpath\");", "+    StringOption so = new StringOption(\"classpath\",null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f764d22a5f624466a16b064bac27764", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/JVMUtilities.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public static String getReturnTypeName(String c)", "signatureAfterChange": "   public static String getReturnTypeName(String c)", "diff": ["-    String s = (String)stypes.get(c);", "+    String s = stypes.get(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f77878a1d0c18ec97053159bae85764", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 754, "methodNumberAfterChange": 639, "signatureBeforeChange": "    final private boolean jj_3R_522()", "signatureAfterChange": "    final private boolean jj_3R_549()", "diff": ["+", "+  final private boolean jj_3R_549() {", "+    if (jj_3R_123()) return true;", "+    if (jj_3R_423()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_522() {", "-    if (jj_3R_120()) return true;", "-    if (jj_3R_413()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f9620ad4206a58a515a7595413e89fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "6310666c1b25e3b678fa3161d36dc614550bad4a", "commitAfterChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected void updateButtons()", "signatureAfterChange": "   protected void updateButtons()", "diff": ["-    _abortButton.setEnabled(_is!=null);", "-    _updateNowButton.setEnabled(_is!=null);", "+    _abortButton.setEnabled((_is!=null) || (_erris!=null));", "+    _updateNowButton.setEnabled((_is!=null) || (_erris!=null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fc368f8164535f5b6f8fb5e2da9eac7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "7c4507413beb0e75cdce1379ffec8d0279bed992", "commitAfterChange": "d1bf0f940bc3d914d8d8293a0e85760984d7b371", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 168, "signatureBeforeChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "diff": ["-    // remove breakpoints and bookmarks for this file", "+    // remove regions for this file", "+    doc.getBrowserHistoryManager().clearRegions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fc91d88cbda84793b5294ca983bfca7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e99723007606c50032c4a82ba80b9d94aaabe6bc", "commitAfterChange": "958f548f8cc751514e1497672b492b70657c4b6e", "methodNumberBeforeChange": 477, "methodNumberAfterChange": 477, "signatureBeforeChange": "      private void _runProject()", "signatureAfterChange": "      private void _runProject()", "diff": ["-        final File f = _model.getMainClass();", "+        final File f = _model.getMainClassContainingFile();", "-          doc.runMain();", "+          doc.runMain(_model.getMainClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ffa0516913128cffdb3f87c54c9b305", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 851, "methodNumberAfterChange": 772, "signatureBeforeChange": "    final private boolean jj_3R_481()", "signatureAfterChange": "    final private boolean jj_3R_482()", "diff": ["-  final private boolean jj_3R_481() {", "+  final private boolean jj_3R_482() {", "-    if (jj_3R_494()) return true;", "+    if (jj_3R_495()) return true;", "-      if (jj_3R_494()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_495()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30084073500c0233c349ac384f479486", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "commitAfterChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 68, "signatureBeforeChange": "   protected void insertUpdate(AbstractDocument.DefaultDocumentEvent chng, AttributeSet attr)", "signatureAfterChange": "   protected void insertUpdate(AbstractDocument.DefaultDocumentEvent chng, AttributeSet attr)", "diff": ["-   */", "+    */", "-    // Clear the helper method cache", "-    clearCache();", "-", "+    ", "-", "+    ", "-", "+      ", "+      _clearCache(offset);    // Selectively clear the query cache", "+      ", "-", "+      ", "-    catch (BadLocationException ble) {", "-      throw new UnexpectedException(ble);", "-    }", "+    catch (BadLocationException ble) { throw new UnexpectedException(ble); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "300f8647a10ae0b6dc6ceb5a7d9fb4b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 335, "methodNumberAfterChange": 318, "signatureBeforeChange": "    final private boolean jj_3R_371()", "signatureAfterChange": "    final private boolean jj_3R_382()", "diff": ["-  final private boolean jj_3R_371() {", "-    if (jj_3R_104()) return true;", "-    if (jj_3R_272()) return true;", "+", "+  final private boolean jj_3R_382() {", "+    if (jj_3R_107()) return true;", "+    if (jj_3R_281()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30131f5bbcb534f02065ed8c09c47f32", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "3138149e59af557581689e53b212f79d04dd8105", "commitAfterChange": "2fc1b48ae47904f12ff70a4157426a6f949b079b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testNewDocumentsInAndOutOfTheCache() throws BadLocationException, IOException", "signatureAfterChange": "      public void testNewDocumentsInAndOutOfTheCache() throws BadLocationException, IOException", "diff": ["-    // The documents are activated soon after creation by a getLength operation done somewhere", "+    // The documents are activated soon after creation by a getCurrentLine operation done somewhere", "-    doc1.getLength();", "-    doc2.getLength();", "-    doc3.getLength();", "-    doc4.getLength();", "-    doc5.getLength();", "-    doc6.getLength();", "+    doc1.getCurrentLine();", "+    doc2.getCurrentLine();", "+    doc3.getCurrentLine();", "+    doc4.getCurrentLine();", "+    doc5.getCurrentLine();", "+    doc6.getCurrentLine();", "+//    System.err.println(\"Is doc1 untitled? \" + doc1.isUntitled());", "+    ", "+//    System.err.println(\"Cache contents = \" + _cache);", "+//    System.err.println(\"Document 1 is \" + doc1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3023377049dd5ebc867c6b9db912f7e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 401, "methodNumberAfterChange": 399, "signatureBeforeChange": "    final private boolean jj_3R_420()", "signatureAfterChange": "    final private boolean jj_3R_421()", "diff": ["-", "-  final private boolean jj_3R_420() {", "+  final private boolean jj_3R_421() {", "-    if (jj_3R_349()) return true;", "+    if (jj_3R_350()) return true;", "-      if (jj_3R_430()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_431()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "302ee48a193a9c5111427d7fc47df23e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/jedit/src/edu/rice/cs/drjava/plugins/jedit/repl/JEditInteractionsModel.java", "commitBeforeChange": "273b9e6fd6b611d74f03283118f3b2c112f6192d", "commitAfterChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public String getConsoleInput()", "signatureAfterChange": "   public String getConsoleInput()", "diff": ["-    return JEditPlugin.getConsoleInput();", "+    return JEditPlugin.getDefault().getConsoleInput();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "303200e93087a4935c8858691616c0cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/VariableData.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public boolean equals(Object obj)", "signatureAfterChange": "   public boolean equals(Object obj)", "diff": ["-    if ((obj.getClass() != this.getClass())) {", "-      return false;", "+    else if (obj.getClass() != this.getClass()) { ", "+//      System.err.println(\"VariableData.equals: Class equality failure\");", "+      return false; ", "-   ", "-    return _name.equals(vd.getName()) &&", "-      _modifiersAndVisibility.equals(vd.getMav()) &&", "-      _type.equals(vd.getType()) &&", "-      (_hasBeenAssigned==vd.hasValue()) &&", "-      _hasInitializer==vd._hasInitializer && ", "-      _enclosingData == vd.getEnclosingData();", "+    ", "+    if (! _name.equals(vd.getName())) {", "+//      System.err.println(\"VariableData.equals: name equality failure\");", "+      return false;", "+    }", "+    if (! _modifiersAndVisibility.equals(vd.getMav())) {", "+//      System.err.println(\"VariableData.equals: modifiersAndVisibility equality failure\");", "+      return false;", "+    }", "+    ", "+    if (! _type.equals(vd.getType())) {", "+//      System.err.println(\"VariableData.equals: type equality failure\");", "+      return false;", "+    }", "+    ", "+    if (_hasBeenAssigned != vd.hasValue()) {", "+//      System.err.println(\"VariableData.equals: hasBeenAssigned equality failure\");", "+      return false;", "+    }", "+    if (_hasInitializer != vd._hasInitializer) {", "+//      System.err.println(\"VariableData.equals: hasInitializer equality failure\");", "+      return false;", "+    }", "+    Data otherEnclosingData = vd.getEnclosingData();", "+    ", "+    if (_enclosingData == null) {", "+      if (otherEnclosingData == null) return true;", "+      else {", "+//      System.err.println(\"VariableData.equals: enclosingData failure\");", "+        return false; ", "+      }", "+    }", "+    else if (! _enclosingData.equals(otherEnclosingData)) {", "+//      System.err.println(\"VariableData.equals: enclosingData failure\");", "+      return false; ", "+    }", "+    ", "+    return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3038352218472a5c435128ea4cc24df2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "f6810ad68cbb0aaa0d9f5ff0052437da87098ab7", "commitAfterChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public int getFirstNonWSCharPos(int pos, char[] whitespace, boolean acceptComments) throws BadLocationException", "signatureAfterChange": "   public int getFirstNonWSCharPos(int pos, char[] whitespace, boolean acceptComments) throws BadLocationException", "diff": ["+      _storeInCache(key, result);", "-    ", "-    _storeInCache(key, new Integer(result));", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30398f27aa7210403f50d9be3cfbcf1d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandler.java", "commitBeforeChange": "d41b5de79662496f09ec590840d7e35134702a41", "commitAfterChange": "fd26cc12b714205eb66ef1427d78a124c29d57fc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void _handleBreakpointEvent(BreakpointEvent e)", "signatureAfterChange": "      private void _handleBreakpointEvent(BreakpointEvent e)", "diff": ["+    _debugManager.hitBreakpoint((BreakpointRequest)e.request());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "304676e13b503c48476059159a3c9092", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/FontOptionComponent.java", "commitBeforeChange": "14ecd0c683c3a654631edbe7cd556951ec682439", "commitAfterChange": "b4e48852da60211c31b0141438d3f04d6c627263", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void _updateButton (Font f)", "signatureAfterChange": "   private void _updateField(Font f)", "diff": ["-  private void _updateButton (Font f) {", "-    _button.setFont(f);", "-    _button.setText(_option.format(f));", "+  private void _updateField(Font f) {", "+    _fontField.setFont(f);", "+    _fontField.setText(_option.format(f));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305bffd4744d89ce47624d3af712638d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "e75c44dca53d5633e70ed3badd03d3667a23d4c8", "commitAfterChange": "c11896795d0041b0e5728ede27aa1fce3454d97c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "   @Deprecated public static File createTempDirectory(final String name) throws IOException", "signatureAfterChange": " public static File createTempDirectory(final String name) throws IOException", "diff": ["-  @Deprecated public static File createTempDirectory(final String name) throws IOException {", "+", "+/*  @Deprecated */ public static File createTempDirectory(final String name) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "307ddb52efe7786e273058e98f089217", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "76c0b2960b62020d46b810955623e0af759eee20", "commitAfterChange": "936042cad9bfa0086510cc58a96357306371fb07", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testCompileMissingCloseCurly() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileMissingCloseCurly() throws BadLocationException, IOException, InterruptedException", "diff": ["+    debug.logStart();", "+    ", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3085c2fa8d9b5e1615a792ab95eceb94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 672, "methodNumberAfterChange": 660, "signatureBeforeChange": "    final private boolean jj_3R_191()", "signatureAfterChange": "    final private boolean jj_3R_193()", "diff": ["+  final private boolean jj_3R_193() {", "+    if (jj_3R_225()) return true;", "+    xsp = jj_scanpos;", "+    if (jj_3R_226()) jj_scanpos = xsp;", "-", "-  final private boolean jj_3R_191() {", "-    if (jj_3R_223()) return true;", "-    if (jj_3R_224()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "308cc68c3ce842fd7530e1f9eac7633d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6595282fd67e77d6079df1ee1647ba51751bbcec", "commitAfterChange": "de0f38d123822794b2970bd8e5814e75677feb46", "methodNumberBeforeChange": 617, "methodNumberAfterChange": 606, "signatureBeforeChange": "    final private boolean jj_3R_568()", "signatureAfterChange": "    final private boolean jj_3R_570()", "diff": ["-  final private boolean jj_3R_568() {", "+  final private boolean jj_3R_570() {", "-    if (jj_3R_574()) {", "+    if (jj_3R_576()) {", "-      if (jj_3R_575()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_577()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3097512dc8dc73f16269a0aa4588ef08", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public ReducedToken nextItem()", "signatureAfterChange": "   public ReducedToken nextItem()", "diff": ["-    int rmbOffset = rmb.getBlockOffset();", "-    int rmcOffset = rmc.getBlockOffset();", "+    int rmbOffset = getRMB().getBlockOffset();", "+    int rmcOffset = getRMC().getBlockOffset();", "-    rmb.setBlockOffset(rmbOffset);", "-    rmc.setBlockOffset(rmcOffset);", "+    getRMB().setBlockOffset(rmbOffset);", "+    getRMC().setBlockOffset(rmcOffset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30a45da048c392ddcadd9ac81212bc61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/KeyBindingManager.java", "commitBeforeChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "commitAfterChange": "ba6205cad42ae00df3c37c5cbd4625770848df66", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public Action get(KeyStroke ks)", "signatureAfterChange": "   public Action get(KeyStroke ks)", "diff": ["-    KeyStrokeData ksd = (KeyStrokeData) _keyToDataMap.get(ks);", "+    KeyStrokeData ksd = _keyToDataMap.get(ks);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30b9716f69c1aa73a25fecea31299e32", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 397, "methodNumberAfterChange": 395, "signatureBeforeChange": "    final private boolean jj_3R_469()", "signatureAfterChange": "    final private boolean jj_3R_471()", "diff": ["-  final private boolean jj_3R_469() {", "-    if (jj_3R_251()) return true;", "-    if (jj_3R_105()) return true;", "+", "+  final private boolean jj_3R_471() {", "+    if (jj_3R_259()) return true;", "+    if (jj_3R_107()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30ccd701446274f7edbbcff6c9682f94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "    private void _setupResourceLocPanel(ConfigPanel panel)", "signatureAfterChange": "    private void _setupResourceLocPanel(ConfigPanel panel)", "diff": ["-                              \"Specifies the location of tools.jar or your compiler class files or jar.\",", "+                              \"Location of the JDK's tools.jar, which contains the compiler and debugger.\",", "-                              \"JSR14 Location\", this,", "-                              \"Specifies the location of your JSR-14 compiler class files or jar.\",", "+                              \"JSR-14 Location\", this,", "+                              \"Location of the JSR-14 compiler, for compiling with generics.\",", "-                              \"JSR14 Collections Path\", this,", "-                               \"Specifies the location of your JSR-14 collections class files or jar.\",", "+                              \"JSR-14 Collections Path\", this,", "+                               \"Location of the JSR-14 collect.jar file, which contains the collection classes.\",", "-                                                 \"Specifies the extra classpath<br>for the interactions pane.\"));", "+                                                 \"<html>Any directories or jar files to add to the classpath<br>\"+", "+                                                 \"of the Compiler and Interactions Pane.</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30d41a7ad2255ec83b3d36f56dcd8fc8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 58, "signatureBeforeChange": "   public void testLoadHistoryWithAndWithoutSemicolons() throws BadLocationException,     InterruptedException, IOException, DocumentAdapterException", "signatureAfterChange": "   public void testLoadHistoryWithAndWithoutSemicolons()       throws IOException, DocumentAdapterException", "diff": ["-  public void testLoadHistoryWithAndWithoutSemicolons() throws BadLocationException,", "-    InterruptedException, IOException, DocumentAdapterException", "+  public void testLoadHistoryWithAndWithoutSemicolons()", "+      throws IOException, DocumentAdapterException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30d79ec4ce640301205661727800cb3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "f0e93e8f70d74090c83524f565ab98d73710c2e7", "commitAfterChange": "cea95770b041dbb7494d9ea4d762c8077631d283", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public void itemStateChanged(ItemEvent e)", "signatureAfterChange": "     public void itemStateChanged(ItemEvent e)", "diff": ["+        DrJava.getConfig().setSetting(OptionConstants.FIND_WHOLE_WORD,", "+                                      false);", "+        DrJava.getConfig().setSetting(OptionConstants.FIND_WHOLE_WORD,", "+                                      true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30e6634b376cec7af2448b3119581d09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringGlyphPainter.java", "commitBeforeChange": "12434dc2dab84dfe1024e2e2b39fd8f27da62bbd", "commitAfterChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void paint(GlyphView v, Graphics g, Shape a, int p0, int p1)", "signatureAfterChange": "   public void paint(GlyphView v, Graphics g, Shape a, int start, int end)", "diff": ["-  public void paint(GlyphView v, Graphics g, Shape a, int p0, int p1) {", "+  public void paint(GlyphView v, Graphics g, Shape a, int start, int end) {", "-    if (p0 == p1) return;", "+    if (start == end) return;", "-    if (p != p0) {", "-      text = v.getText(p, p0);", "+    if (p != start) {", "+      text = v.getText(p, start);", "-    text = v.getText(p0, p1);", "+    text = v.getText(start, end);", "-    Vector<HighlightStatus> stats = djdoc.getHighlightStatus(p0, p1);", "+    Vector<HighlightStatus> stats = djdoc.getHighlightStatus(start, end);", "-        if((location < p1) && ((location + length) > p0)) {", "+        if((location < end) && ((location + length) > start)) {", "-          if (location < p0) {", "-            length -= (p0-location);", "-            location = p0;", "+          if (location < start) {", "+            length -= (start-location);", "+            location = start;", "-          if ((location + length) > p1) {", "-            length = p1 - location;", "+          if ((location + length) > end) {", "+            length = end - location;", "-          if (!(djdoc instanceof InteractionsDJDocument) || !((InteractionsDJDocument)djdoc).setColoring((p0+p1)/2,g))      ", "+          if (!(djdoc instanceof InteractionsDJDocument) || !((InteractionsDJDocument)djdoc).setColoring((start+end)/2,g))      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30f2efb5d41df3b64b2cc2d60e9886f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testCompileAllFailsDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllFailsDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "diff": ["-    OpenDefinitionsDocument doc = setupDocument(FOO_MISSING_CLOSE_TEXT);", "-    final File file = new File(aDir, \"DrJavaTestFoo.java\");", "-    doc.saveFile(new FileSelector(file));", "+    OpenDefinitionsDocument doc1 = setupDocument(FOO_MISSING_CLOSE_TEXT);", "+    final File file1 = new File(aDir, \"DrJavaTestFoo.java\");", "+    doc1.saveFile(new FileSelector(file1));", "-    assertEquals(\"Should have 2 compiler errors\", 2, _model.getCompilerModel().getNumErrors());", "+    System.err.println(cm.getCompilerErrorModel());", "+    assertEquals(\"Should have 2 compiler errors\", 2, cm.getNumErrors());", "-    File compiled = classForJava(file, \"DrJavaTestFoo\");", "-    assertEquals(_name() + \"Class file exists after failing compile (1)\", false, compiled.exists());", "+    File compiled1 = classForJava(file1, \"DrJavaTestFoo\");", "+    assertEquals(_name() + \"Class file exists after failing compile (1)\", false, compiled1.exists());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31003b3d5b5f044fc8f8edcf742a9374", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 483, "methodNumberAfterChange": 395, "signatureBeforeChange": "    final private boolean jj_3R_395()", "signatureAfterChange": "    final private boolean jj_3R_331()", "diff": ["+", "+  final private boolean jj_3R_331() {", "+    if (jj_3R_341()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_352()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_395() {", "-    if (jj_3R_410()) return true;", "-    if (jj_3R_411()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3107453f66417d4da6200c3b61fe9b3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DetachedFrame.java", "commitBeforeChange": "b263b99edc1a8fc9521494e6572b87b01d16accc", "commitAfterChange": "378e279072139013d221fb34f1ba7c9988465f75", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void setUpMenuBar()", "signatureAfterChange": "      public void setUpMenuBar()", "diff": ["+      copyAccelerators(_mainFrame.getJMenuBar(), menuBar);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "311ce75c72de4c7948d707ed6e13852d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringView.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "    private void _updateColors()", "signatureAfterChange": "    public void updateColors()", "diff": ["-  private void _updateColors() {", "+  public void updateColors() {", "-      //getContainer().repaint();", "+      //Avoid the ColoringView that does not have a container.", "+      if ( getContainer() != null) {", "+        getContainer().repaint();", "+      }", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "311de639f62b92d227f276ef2d09741a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 367, "methodNumberAfterChange": 547, "signatureBeforeChange": "    final private boolean jj_3R_359()", "signatureAfterChange": "    final private boolean jj_3R_375()", "diff": ["-", "-  final private boolean jj_3R_359() {", "-    if (jj_scan_token(CONDITIONAL_AND)) return true;", "-    if (jj_3R_309()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_375() {", "+    if (jj_3R_307()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31456b71485d7447de176c6c848185fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      public void resetReducedModelLocation()", "signatureAfterChange": "      public void resetReducedModelLocation()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); } ", "+    finally { releaseReadLock(); } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31494d8a0176717656c6f17b275e1ccc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void createConstructor(SymbolData sd)", "signatureAfterChange": "   public void createConstructor(SymbolData sd)", "diff": ["-          LanguageLevelConverter._newSDs.remove(sd); //this won't do anything if sd is not in _newSDs.", "-          System.err.println(sd + \" removed from _newSDs.  _newSDs = \" + LanguageLevelConverter._newSDs);", "+          LanguageLevelConverter._newSDs.remove(sd); // this won't do anything if sd is not in _newSDs.", "+//          System.err.println(sd + \" removed from _newSDs.  _newSDs = \" + LanguageLevelConverter._newSDs);", "-                                   new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[] {\"public\"}), ", "-                                   new TypeParameter[0], ", "-                                   sd, ", "-                                   new VariableData[0], // No Parameters", "-                                   new String[0], ", "-                                   sd,", "-                                   null);", "+                                    new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[] {\"public\"}), ", "+                                    new TypeParameter[0], ", "+                                    sd, ", "+                                    new VariableData[0], // No Parameters", "+                                    new String[0], ", "+                                    sd,", "+                                    null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "319427a4445878c5b9d9bad1ebad565e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "1f1e1c194ec79b5577db174af86a812206a9ebf6", "commitAfterChange": "8470bac42027a288eff50252d965c363d15d41dc", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testInteractionsDefineAnonymousInnerClass()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testInteractionsDefineAnonymousInnerClass()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    throws BadLocationException, IOException", "+    throws BadLocationException, IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "319d3524abbf2c947251200ab126f76a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhrase.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    System.err.println(\"QuestionNewParenPhrase\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "319fc1a4eb1469e16f904ac93eff913f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "11a167d5b0a97e55aef4d62ed18d4da71e30b762", "commitAfterChange": "a32847752bc1c4d9a9c65da4d91d56e3d8a61fa6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testConstructOneDocWithLineNums()", "signatureAfterChange": "   public void testConstructOneDocWithLineNums()", "diff": ["+    assertTrue(\"hasOnlyWarnings should return false.\", !model.hasOnlyWarnings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31ddab2919d71175751b6c2e20018e3d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "bf2319a0fd4ff0da05d171cf995d395154267897", "commitAfterChange": "ce944bab12f670cf565ac442d0f81c8cbf5e4ad0", "methodNumberBeforeChange": 172, "methodNumberAfterChange": 172, "signatureBeforeChange": "   public boolean closeAllFilesOnQuit()", "signatureAfterChange": "   public boolean closeAllFilesOnQuit()", "diff": ["-      _log.log(\"closeAllFilesOnQuit failed. Retained doc = \" + retainedDoc);", "+//      _log.log(\"closeAllFilesOnQuit failed. Retained doc = \" + retainedDoc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31e97d84e1221d18371c75361fa7b839", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 682, "methodNumberAfterChange": 668, "signatureBeforeChange": "    final private boolean jj_3R_264()", "signatureAfterChange": "    final private boolean jj_3R_266()", "diff": ["+  final private boolean jj_3R_266() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_293()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_294()) return true;", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_264() {", "-    xsp = jj_scanpos;", "-    if (jj_3R_290()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_291()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31f0aba6f4f48c824d60b1fb75f5adfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaErrorHandler.java", "commitBeforeChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "commitAfterChange": "2f4a42f54aaa74c25ba0a929e664640f896ec43a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public static void record(final Throwable thrown)", "signatureAfterChange": "   public static void record(final Throwable thrown)", "diff": ["+    LOG.log(\"DrJavaErrorHandler.record\", thrown);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3207cf679af122dcfe646bbdd3440586", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fb385b93cd9027b537d579fb84c39de65fc03205", "commitAfterChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": "      private void _openProjectUpdate()", "signatureAfterChange": "      private void _openProjectUpdate()", "diff": ["+      _junitOpenProjectFilesAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "325a9dea6a3bf2c3666525240ad6af61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "74df86fd67328f41836d5f23da76b724b0648a22", "commitAfterChange": "debcaa5c7896b7af34301718bd146b407947838f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public InteractionsController(InteractionsModel model,                                 InteractionsDocumentAdapter adapter,                                 InteractionsPane pane)", "signatureAfterChange": "   public InteractionsController(InteractionsModel model,                                 InteractionsDocumentAdapter adapter,                                 InteractionsPane pane)", "diff": ["+    ", "+    _model.addListener(_viewListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "325c6f7c6b9bf3dfe2dd6419cfdaefe4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 542, "methodNumberAfterChange": 542, "signatureBeforeChange": "    final private boolean jj_3R_395()", "signatureAfterChange": "    final private boolean jj_3R_396()", "diff": ["-  final private boolean jj_3R_395() {", "-    if (jj_3R_407()) return true;", "+  final private boolean jj_3R_396() {", "+    if (jj_3R_408()) return true;", "-      if (jj_3R_421()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_422()) { jj_scanpos = xsp; break; }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3265b6dcd863d2af1cf901f4b7c59a26", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "12384109e03448701c98d404f37be617f6e32fee", "commitAfterChange": "7b8e61b54c444deec40202441181317a86727c3a", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 234, "signatureBeforeChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "signatureAfterChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["-      _saveAction.setEnabled(isModified || active.isUntitled());", "+      _saveAction.setEnabled(!canCompile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "327660930d83cbef3df6931198d0c283", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "ae4333c8dd1b54b8a781008188f09b6786d95ae2", "commitAfterChange": "a42a1005ad3faca50638e0131df3bc7c45ba82de", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public synchronized void startup() throws DebugException", "signatureAfterChange": "   public synchronized void startup() throws DebugException", "diff": ["+      _model.addListener(_watchListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3278f4d30b4765f071664bbc1e2d1bfc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "9d169028680f58d3e3b47cc25c8de1afe15038ec", "commitAfterChange": "cefd91ea5953c77c9fe2f6c1dd90708535579037", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic DefinitionsView(MainFrame mf)", "signatureAfterChange": " \t \tpublic DefinitionsView(MainFrame mf)", "diff": ["-\t\t\t", "-", "-", "-\t\t//????KEEP??????", "+\t\t_openChooser.setFileFilter(new JavaSourceFilter());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3280acc3fee8ecc965975e855fe8ae95", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 759, "methodNumberAfterChange": 644, "signatureBeforeChange": "    final private boolean jj_3R_543()", "signatureAfterChange": "    final private boolean jj_3R_460()", "diff": ["-", "-  final private boolean jj_3R_543() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_558()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_559()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_460() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_463()) { jj_scanpos = xsp; break; }", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_3R_464()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "328c54abf60027121841d116c81705c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "d55b82d942f5baa7bd5bf3a1d9f1f1f9dce04a39", "commitAfterChange": "b0fb26e6e176051c073760a8c566e0370a4f5dd8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected Expression _convertThisToObjectFieldAccess(ThisExpression node)", "signatureAfterChange": "   protected Expression _convertThisToObjectFieldAccess(ThisExpression node)", "diff": ["-      throw new ExecutionError(\"malformed.expression\");", "+      throw new ExecutionError(\"malformed.expression\", node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "329cbeb3503506269ac1d3210afc7651", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 337, "methodNumberAfterChange": 433, "signatureBeforeChange": "    final private boolean jj_3R_172()", "signatureAfterChange": "    final private boolean jj_3R_154()", "diff": ["-  final private boolean jj_3R_172() {", "-    if (jj_3R_223()) return true;", "+  final private boolean jj_3R_154() {", "+    if (jj_3R_188()) return true;", "-    if (jj_3R_271()) jj_scanpos = xsp;", "+    if (jj_3R_244()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ac74804f3157aa25486d42885b231a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ef93e6cc3a79f29ed28debb1108f1338b9a974ad", "commitAfterChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "methodNumberBeforeChange": 491, "methodNumberAfterChange": 491, "signatureBeforeChange": "   private boolean _saveProjectAs()", "signatureAfterChange": "   private boolean _saveProjectAs()", "diff": ["+    _saveChooser.removeChoosableFileFilter(_unfilteredJavaSourceFilter);", "-      if ((file != null) && (! file.exists() || _verifyOverwrite())) { ", "+      if ((file != null) && (! file.exists() || _verifyOverwrite(file))) { "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32b6fe772184271f8bdb0b53c9cd0d09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testCompileResetsInteractions() throws BadLocationException, IOException, InterruptedException,     EditDocumentException", "signatureAfterChange": "   public void testCompileResetsInteractions() throws BadLocationException, IOException, InterruptedException,     EditDocumentException", "diff": ["-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(true);", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32b98a458b6b3a2388b1153299c1d077", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testCompileUnsavedButSaveWhenAsked()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileUnsavedButSaveWhenAsked()     throws BadLocationException, IOException", "diff": ["-    setupDocument(FOO_TEXT);", "+    final OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "-        assertModified(true);", "+        assertModified(true, doc);", "-          _model.saveFile(new FileSelector(file));", "+          doc.saveFile(new FileSelector(file));", "-        assertModified(false);", "+        assertModified(false, doc);", "-    _model.startCompile();", "+    doc.startCompile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32bab2ff11f60c202eff5584e01d1bda", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "4661a3d508883233ebf71eb9cd32611d5d9df04f", "commitAfterChange": "d884ae55e9471d604870827048329b58394dd950", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void setChanging(boolean b)", "signatureAfterChange": "   public void setChanging(boolean b)", "diff": ["+      if (_lastAdded!=null) {", "+        TreePath pathToNewRegion = new TreePath(_lastAdded.getPath());", "+        _regTree.scrollPathToVisible(pathToNewRegion);", "+      }", "+      expandAll();", "+      _regTree.revalidate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32d73b873e3a9fc41c5aef9ede1f2eda", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 505, "methodNumberAfterChange": 508, "signatureBeforeChange": "    final private boolean jj_3R_469()", "signatureAfterChange": "    final private boolean jj_3R_471()", "diff": ["-  final private boolean jj_3R_469() {", "+  final private boolean jj_3R_471() {", "-      if (jj_3R_472()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_474()) { jj_scanpos = xsp; break; }", "-    if (jj_3R_473()) jj_scanpos = xsp;", "+    if (jj_3R_475()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33002a976c0cbe310493679b75da0672", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public IndentInfo getIndentInformation()", "signatureAfterChange": "   public IndentInfo getIndentInformation()", "diff": ["-    rmc.getDistToPreviousNewline(braceInfo);", "+    getRMC().getDistToPreviousNewline(braceInfo);", "-    rmb.getDistToEnclosingBrace(braceInfo);", "+    getRMB().getDistToEnclosingBrace(braceInfo);", "-    rmc.getDistToIndentNewline(braceInfo);", "+    getRMC().getDistToIndentNewline(braceInfo);", "-    rmb.getDistToEnclosingBraceCurrent(braceInfo);", "+    getRMB().getDistToEnclosingBraceCurrent(braceInfo);", "-    rmc.getDistToCurrentBraceNewline(braceInfo);", "+    getRMC().getDistToCurrentBraceNewline(braceInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3308ff1d42946666b212aebe750b736e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "bf2319a0fd4ff0da05d171cf995d395154267897", "commitAfterChange": "ce944bab12f670cf565ac442d0f81c8cbf5e4ad0", "methodNumberBeforeChange": 330, "methodNumberAfterChange": 330, "signatureBeforeChange": "      private void _quit()", "signatureAfterChange": "      private void _quit()", "diff": ["-    AbstractGlobalModel._log.log(\"MainFrame.quit() called\");", "+//    AbstractGlobalModel._log.log(\"MainFrame.quit() called\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "330ee1fadd7a7ff73e8b692a59a1aeed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "df9cbdf4ec8cbcbc3942b966a48a15d33dcac7ed", "commitAfterChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public TestJVMExtension()", "signatureAfterChange": "      public TestJVMExtension() throws RemoteException", "diff": ["-    public TestJVMExtension() {", "+    public TestJVMExtension() throws RemoteException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3314e994a291fd9d416b31064e30e221", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 410, "methodNumberAfterChange": 382, "signatureBeforeChange": "    final private boolean jj_3R_307()", "signatureAfterChange": "    final private boolean jj_3R_317()", "diff": ["-  final private boolean jj_3R_307() {", "+", "+  final private boolean jj_3R_317() {", "-    if (jj_3R_270()) return true;", "+    if (jj_3R_280()) return true;", "-    if (jj_3R_102()) return true;", "+    if (jj_3R_105()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3337056475b7934d1900c5f18d106e20", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "cd56f7a2a82093e6e34728c0b5dc6babe9356e0a", "commitAfterChange": "6f37af6087e88b55d504fabdb6eee22be7ba1948", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public IncompleteInputInteractionsModel(InteractionsDJDocument adapter)", "signatureAfterChange": "     public IncompleteInputInteractionsModel(InteractionsDJDocument adapter)", "diff": ["-      super(new MainJVM(null), adapter, 1000, 25);", "-      _interpreterControl.setInteractionsModel(this);", "-      _interpreterControl.startInterpreterJVM();", "+      super(new MainJVM(null), adapter, new File(System.getProperty(\"user.dir\")), 1000, 25);", "+      _jvm.setInteractionsModel(this); // _jvm is set to MainJVM(null) by super call;", "+      _jvm.startInterpreterJVM();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "334e460c5fa51434fce8648e74503de1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "30a085f8fe1392fe66c465a0e90bdaac3e7000b4", "commitAfterChange": "1146386d4d7ac647cd12bc0991ac1e3a8462c53f", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "   protected static Class<?> _correspondingRefClass(Class<?> primClass)", "signatureAfterChange": "   protected static Class<?> _correspondingRefClass(Class<?> primClass)", "diff": ["-    System.out.println(primClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "334ecf5ad4bf506629886b8c1c2cd8d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "0bbc4205cb6cdac938c33646446cffe67a254d86", "commitAfterChange": "32c1a96bda59745efd4d13dbac97b7a11f8d7d24", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public void testUndoAndRedoAfterMultipleLineIndent() throws BadLocationException", "signatureAfterChange": "   public void testUndoAndRedoAfterMultipleLineIndent() throws BadLocationException", "diff": ["-  public void testUndoAndRedoAfterMultipleLineIndent() throws BadLocationException {", "+  public void testUndoAndRedoAfterMultipleLineIndent() throws BadLocationException {  //this fails", "-    assertEquals(\"insertion\",text, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"insertion\",text, _defModel.getText(0,_defModel.getLength())); ", "+    /* This is necessary here and other places where indenting or commenting takes place because the undoListener in DefinitionsPane ", "+     * currently starts compound edits, but here, there's no DefinitionsPane.", "+     * Perhaps there's some way to factor the undoListener in CompoundUndoManager to be the one that starts compound edits ", "+     * so that it will work with or without the view.", "+     */", "+    _defModel.getUndoManager().startCompoundEdit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "334f1641f8834a3bf7384405f059a176", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsView.java", "commitBeforeChange": "1a9af627ea69f691af32f9a422290b5017b0703d", "commitAfterChange": "8d34579e0c7e80db1371da26e8172a594bf3d48e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private boolean _saveToFile(String path)", "signatureAfterChange": "   boolean saveToFile(String path)", "diff": ["-  private boolean _saveToFile(String path)", "+  boolean saveToFile(String path)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33941b1e4493ed6979149f88421493ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 636, "methodNumberAfterChange": 615, "signatureBeforeChange": "    final private boolean jj_3R_146()", "signatureAfterChange": "    final private boolean jj_3R_150()", "diff": ["+", "+  final private boolean jj_3R_150() {", "+    if (jj_3R_105()) return true;", "+      if (jj_3R_193()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_146() {", "-    if (jj_3R_102()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_188()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33a238a77f43150121542c33106933ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk14/edu/rice/cs/drjava/model/compiler/Javac141Compiler.java", "commitBeforeChange": "9e416ec969ee1b990100c9d98abf8588475251ab", "commitAfterChange": "5333b963d0d699214d4f763e3246299880072474", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "       public boolean isAvailable()", "signatureAfterChange": "      public boolean isAvailable()", "diff": ["+  public boolean isAvailable() {", "+    try {", "+      Class.forName(\"com.sun.tools.javac.v8.JavaCompiler\");", "+      return _isValidVersion();", "+    }", "+    catch (Exception e) {", "+      return false;", "+    }", "+  }", "-", "-  public boolean isAvailable() {", "-    try {", "-      Class.forName(COMPILER_CLASS_NAME);", "-      return _isValidVersion();", "-    }", "-    catch (Exception e) {", "-      return false;", "-    }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33b89beb14f40dc854a2280edaa36ecc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "commitAfterChange": "ce1be4bebdf226da73b0f3a3408c7770e9d93c01", "methodNumberBeforeChange": 573, "methodNumberAfterChange": 572, "signatureBeforeChange": "          public void projectOpened(File projectFile, FileOpenSelector files)", "signatureAfterChange": "          public void projectOpened(File projectFile, FileOpenSelector files)", "diff": ["-      _runButton = _updateToolbarButton(_runButton, _runProjectAction);", "+      projectRunnableChanged();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33c537ca1ebab966c29da36c3ac9de1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionDoNothing.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-      System.err.println(\"ActionDoNothing\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33c6511e85dee053ca97f34ddff7fcb8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/ConstantPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public short put(FieldIdentifier cst)", "signatureAfterChange": "   public short put(FieldIdentifier cst)", "diff": ["-    Info info = (Info)constants.get(cst);", "+    Info info = constants.get(cst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33cbcf917bd13f6f428f1b3ece63202f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerRegistry.java", "commitBeforeChange": "c8a7a8a9d3d089ab42661ede7d141969c6ed2339", "commitAfterChange": "edb148d96e488bb5de94fe3df6063e44425ab166", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public CompilerInterface[] getAvailableCompilers()", "signatureAfterChange": "   public CompilerInterface[] getAvailableCompilers()", "diff": ["-    return availableCompilers.toArray(new CompilerInterface[0]);", "+    return availableCompilers.toArray(new CompilerInterface[availableCompilers.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33d0cf6270a12a596bc6b9734eaa3fe6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testQuitUnsavedDocumentDisallowAbandon()     throws BadLocationException", "signatureAfterChange": "   public void testQuitUnsavedDocumentDisallowAbandon()     throws BadLocationException", "diff": ["-    setupDocument(FOO_TEXT);", "+    OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "+", "+    assertNumOpenDocs(1);", "-      public boolean canAbandonFile(File file) {", "+      public boolean canAbandonFile(OpenDefinitionsDocument doc) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33d258c82e9de26ca565939296a08172", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public Object visit(ObjectMethodCall node)", "signatureAfterChange": "   public Class visit(ObjectMethodCall node)", "diff": ["-     */", "-    public Object visit(ObjectMethodCall node) {", "-        // Check the receiver", "-\tExpression exp = node.getExpression();", "-\tClass      c   = (Class)exp.acceptVisitor(this);", "-\tString     mn  = node.getMethodName();", "-", "-        if (!c.isArray() || (c.isArray() && !mn.equals(\"clone\"))) {", "-            // Do the type checking of the arguments", "-            List args = node.getArguments();", "-            Class[] cargs = Constants.EMPTY_CLASS_ARRAY;", "-            if (args != null) {", "-                cargs = new Class[args.size()];", "-                Iterator it = args.iterator();", "-                int i  = 0;", "-                while (it.hasNext()) {", "-                    cargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "-                }", "-            }", "-            Method m = null;", "-            try {", "-                m = context.lookupMethod(exp, mn, cargs);", "-            } catch (NoSuchMethodException e) {", "-\t\tString s = c.getName();", "-\t\tnode.setProperty(NodeProperties.ERROR_STRINGS, new String[] { mn, s });", "-                throw new ExecutionError(\"no.such.method\", node);", "-\t    } catch (MethodModificationError e) {", "-\t\tExpression expr = e.getExpression();", "-\t\texpr.acceptVisitor(this);", "-\t\tnode.setExpression(expr);", "-\t\tm = e.getMethod();", "-\t    }", "-", "-            // Set the node properties", "-            node.setProperty(NodeProperties.METHOD, m);", "-            node.setProperty(NodeProperties.TYPE,   c = m.getReturnType());", "-\t    return c;", "-\t} else {", "-            if (!mn.equals(\"clone\") || node.getArguments() != null) {", "-\t\tString s0 = \"clone\";", "-\t\tString s1 = c.getComponentType().getName() + \" array\";", "-\t\tnode.setProperty(NodeProperties.ERROR_STRINGS, new String[] { s0, s1 });", "-                throw new ExecutionError(\"no.such.method\", node);", "-            }", "-            node.setProperty(NodeProperties.TYPE, c = Object.class);", "-\t    return c;", "-\t}", "-    }", "+   */", "+  public Class visit(ObjectMethodCall node) {", "+    // Check the receiver", "+    Expression exp = node.getExpression();", "+    Class      c   = (Class)exp.acceptVisitor(this);", "+    String     mn  = node.getMethodName();", "+    ", "+    if (!c.isArray() || (c.isArray() && !mn.equals(\"clone\"))) {", "+      // Do the type checking of the arguments", "+      List args = node.getArguments();", "+      Class[] cargs = Constants.EMPTY_CLASS_ARRAY;", "+      if (args != null) {", "+        cargs = new Class[args.size()];", "+        Iterator it = args.iterator();", "+        int i  = 0;", "+          cargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "+      }", "+      Method m = null;", "+      try {", "+        m = context.lookupMethod(exp, mn, cargs);", "+      } catch (NoSuchMethodException e) {", "+        String s = c.getName();", "+        node.setProperty(NodeProperties.ERROR_STRINGS, new String[] { mn, s });", "+        throw new ExecutionError(\"no.such.method\", node);", "+      } catch (MethodModificationError e) {", "+        Expression expr = e.getExpression();", "+        expr.acceptVisitor(this);", "+        node.setExpression(expr);", "+        m = e.getMethod();", "+      }", "+      ", "+      // Set the node properties", "+      node.setProperty(NodeProperties.METHOD, m);", "+      node.setProperty(NodeProperties.TYPE,   c = m.getReturnType());", "+      return c;", "+    } else {", "+      if (!mn.equals(\"clone\") || node.getArguments() != null) {", "+        String s0 = \"clone\";", "+        String s1 = c.getComponentType().getName() + \" array\";", "+        node.setProperty(NodeProperties.ERROR_STRINGS, new String[] { s0, s1 });", "+        throw new ExecutionError(\"no.such.method\", node);", "+      }", "+      node.setProperty(NodeProperties.TYPE, c = Object.class);", "+      return c;", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33defbe824acceabf8d99364c30b7ad1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 301, "methodNumberAfterChange": 304, "signatureBeforeChange": "    final private boolean jj_3R_303()", "signatureAfterChange": "    final private boolean jj_3R_304()", "diff": ["-  final private boolean jj_3R_303() {", "-    if (jj_3R_88()) return true;", "+  final private boolean jj_3R_304() {", "+    if (jj_3R_89()) return true;", "-    if (jj_3R_487()) jj_scanpos = xsp;", "+    if (jj_3R_489()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33e101dd34e555cd2cb8b02ab357cca4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AbstractDJPane.java", "commitBeforeChange": "29a551202c3bf7e5f026aad6d43ca029448c562d", "commitAfterChange": "eb5a40b971e537c8a9ca6a30686e2583abec6b86", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void setCaretPos(int pos)", "signatureAfterChange": "   public void setCaretPos(int pos)", "diff": ["-  /** A checked version of setCaretPostion(int pos) that ensures pos is within the DJDocument. */", "+  /** A length checked version of setCaretPostion(int pos) that ensures pos is within the DJDocument. */", "-      if (pos < 0) {", "-        setCaretPosition(0);", "-        return;", "-      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33e7284efee3e24af8d74d73c8de29d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public boolean isGroupSelected()", "signatureAfterChange": "   public boolean isGroupSelected()", "diff": ["-  /** @return true if a group if INavigatorItems selected */", "+  /** @return true if a group if INavigatorItems selected.  Only runs in event thread. */", "-    synchronized (_model) {", "+//    synchronized (_model) {", "-    }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33fcf8367de6469f34bfadb231f00442", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "de9a74b95459b3c3644152e88e6c7584955956bf", "commitAfterChange": "d4ef034d69b5fa1749fc45485a48a54743383a3f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public synchronized void shutdown()", "signatureAfterChange": "   public synchronized void shutdown()", "diff": ["+        ((DefaultInteractionsModel)_model.getInteractionsModel()).setToDefaultInterpreter();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3419a2ddecb5c39806bd8028c49080ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 51, "signatureBeforeChange": "     public void breakpointReached(Breakpoint bp)", "signatureAfterChange": "     public void breakpointReached(Breakpoint bp)", "diff": ["-        if (printEvents) System.out.println(\"breakpointReached \" + breakpointReachedCount);", "+        if (printEvents) printStream.println(\"breakpointReached \" + breakpointReachedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34251d9bd673a2ba39563a9ae2a0dadc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     public Component getTreeCellRendererComponent(                             JTree tree,                             Object value,                             boolean sel,                             boolean expanded,                             boolean leaf,                             int row,                             boolean hasFocus)", "signatureAfterChange": "     public Component getTreeCellRendererComponent(                                                   JTree tree,                                                   Object value,                                                   boolean sel,                                                   boolean expanded,                                                   boolean leaf,                                                   int row,                                                   boolean hasFocus)", "diff": ["-                            JTree tree,", "-                            Object value,", "-                            boolean sel,", "-                            boolean expanded,", "-                            boolean leaf,", "-                            int row,", "-                            boolean hasFocus) {", "+                                                  JTree tree,", "+                                                  Object value,", "+                                                  boolean sel,", "+                                                  boolean expanded,", "+                                                  boolean leaf,", "+                                                  int row,", "+                                                  boolean hasFocus) {", "-      super.getTreeCellRendererComponent(", "-                                         tree, value, sel,", "-                                         expanded, leaf, row,", "-                                         hasFocus);", "+      super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);", "+      ", "-      if (node instanceof RootNode && _rootIcon != null) {", "-        setIcon(_rootIcon);", "-      }", "-      else if(node.getUserObject() instanceof INavigatorItem){", "+      if (node instanceof RootNode && _rootIcon != null) setIcon(_rootIcon);", "+      ", "+      else if (node.getUserObject() instanceof INavigatorItem) {", "-        if (leaf) {", "-          if (_displayManager != null) {", "-            setIcon(_displayManager.getIcon(doc));", "-          }", "-        }", "+        if (leaf && _displayManager != null) setIcon(_displayManager.getIcon(doc));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34284e2eac56931c105b8a5d941b975a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public ArrayData defineArraySymbolData(SymbolData eltSd, LanguageLevelVisitor llv, SourceInfo si)", "signatureAfterChange": "   public ArrayData defineArraySymbolData(SymbolData eltSd, LanguageLevelVisitor llv, SourceInfo si)", "diff": ["-    System.err.println(\"##### Defining the array symbol \" + arraySd.getName());", "+//    System.err.println(\"##### Defining the array symbol \" + arraySd.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34323bfafbb92dc4314d98a67eeb86db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   protected boolean isException(SymbolData sd)", "signatureAfterChange": "   protected boolean isException(SymbolData sd)", "diff": ["-    return sd==SymbolData.EXCEPTION || sd.isSubClassOf(getSymbolData(\"java.lang.Throwable\", new NullLiteral(JExprParser.NO_SOURCE_INFO), false, false));", "+    return sd==SymbolData.EXCEPTION || sd.isSubClassOf(getSymbolData(\"java.lang.Throwable\", new NullLiteral(SourceInfo.NO_INFO), false, false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "343db571964f0ad747e9f7d268366f3f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 376, "signatureBeforeChange": "    final private boolean jj_3R_501()", "signatureAfterChange": "    final private boolean jj_3R_504()", "diff": ["-  final private boolean jj_3R_501() {", "-    if (jj_3R_287()) return true;", "+  final private boolean jj_3R_504() {", "+    if (jj_3R_288()) return true;", "-      if (jj_3R_504()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_507()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "344149fdd7b90cbb4481b17512a29b62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/SlaveJVMRunner.java", "commitBeforeChange": "c854c7e7118d1c85b3a0cce654f97c61a76635a4", "commitAfterChange": "cf30a52c1526cb702485ea2bbbc59a33efa6fbfa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public synchronized static void main(String[] args)", "signatureAfterChange": "   public synchronized static void main(String[] args)", "diff": ["+", "-//      // if we have a remote classloader to use, load it", "-//      if (args.length == 3) _installRemoteLoader(args[2]);", "-      ", "-      // Loading the class that intermittently hangs first readObject(...) call below", "-      Class psi = Class.forName(\"java.net.PlainSocketImpl\");", "+//      // Loading the class that intermittently hangs first readObject(...) call below", "+//      Class psi = Class.forName(\"java.net.PlainSocketImpl\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "344666c98994ee4c6c0871f000a94e00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "7bb32c28070a4b5d5697c7c88ea0d664289c76e8", "commitAfterChange": "b2ad80c49aaa09f293a5bc1f6664d4cc5243219e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "    protected void assertNumOpenDocs(int num)", "signatureAfterChange": "    protected void assertNumOpenDocs(int num)", "diff": ["-                 _model.getDefinitionsDocuments().length);", "+                 _model.getDefinitionsDocuments().getSize());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34597396a8dd194a2fa11aab46c5a9fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/TypeCheckerExtension.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Object visit(RemainderExpression node)", "signatureAfterChange": "   public Class visit(RemainderExpression node)", "diff": ["-  public Object visit(RemainderExpression node) {", "+  public Class visit(RemainderExpression node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "348061e7246bdd1769807db5e2b35307", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "46bddad84804814dd0241cc4f939b2c8bb524e79", "commitAfterChange": "57c329e51bd78750aa00f213f08f13a896c8353c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "               public void testSwitchStatement() throws InterpreterException", "signatureAfterChange": "               public void testSwitchStatement() throws InterpreterException", "diff": ["+    ", "+    System.err.println(\"Is Tiger enabled? \" + TigerUtilities.isTigerEnabled());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34901714b2930ebad6eb6da3eaff5626", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "9e497bdeba5d2ec8cfd80ebdb938cf6935007939", "commitAfterChange": "8015cc1e53ce6d8dc00c5faf652f2b4ef39fe4e9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public TypeData forIfThenStatement(IfThenStatement that)", "signatureAfterChange": "   public TypeData forIfThenStatement(IfThenStatement that)", "diff": ["-      Expression exp = (Expression) that.getTestExpression();", "+      Expression exp = that.getTestExpression();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3498c042c6c09e31c0bc2af2aa541f6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/SimpleInteractionsModel.java", "commitBeforeChange": "cd56f7a2a82093e6e34728c0b5dc6babe9356e0a", "commitAfterChange": "6f37af6087e88b55d504fabdb6eee22be7ba1948", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SimpleInteractionsModel(InteractionsDJDocument document)", "signatureAfterChange": "   public SimpleInteractionsModel(InteractionsDJDocument document)", "diff": ["-    super(document, 1000, WRITE_DELAY);", "+    super(document, new File(System.getProperty(\"user.dir\")), 1000, WRITE_DELAY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34bd55be3aa8e64878fdbf80cb041c29", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 386, "methodNumberAfterChange": 868, "signatureBeforeChange": "    final private boolean jj_3R_207()", "signatureAfterChange": "    final private boolean jj_3R_495()", "diff": ["-  final private boolean jj_3R_207() {", "-    if (jj_3R_254()) return true;", "-      if (jj_3R_327()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_495() {", "+    if (jj_3R_515()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_549()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34ccb820c48056fae912971dc910f9dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 732, "methodNumberAfterChange": 747, "signatureBeforeChange": "    final private boolean jj_3R_85()", "signatureAfterChange": "    final private boolean jj_3R_86()", "diff": ["-", "-  final private boolean jj_3R_85() {", "+  final private boolean jj_3R_86() {", "-    if (jj_3R_76()) return true;", "-    if (jj_3R_127()) return true;", "+    if (jj_3R_77()) return true;", "+    if (jj_3R_128()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34d753b7917f2c5ee363966dcaa504d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "5fc720735f9131675fc129089e1b035c0aa23528", "commitAfterChange": "3f4d69fa3bc8cf3992f7eea93fc2a3c7186d2140", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testResultOfNonPublicTestCase() throws Exception", "signatureAfterChange": "   public void testResultOfNonPublicTestCase() throws Exception", "diff": ["-    System.err.println(testResults.toString());", "+    //System.err.println(testResults.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34e184632320b3a88fd4cc9ef7c198a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b6bfdc97713285768c8b922127b436d974f9f1e4", "commitAfterChange": "25355ecd0bc01ef2920944ee4f7366c5c45c1e55", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testDebugPort() throws IOException", "signatureAfterChange": "   public void testDebugPort() throws IOException", "diff": ["+     _log.log(\"testDebugPort started\");", "+    _log.log(\"testDebugPort ended\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34efa99f0d31918f3d1ef9ebe51e835f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      public void testForStatement() throws ParseException", "signatureAfterChange": "      public void testForStatement() throws ParseException", "diff": ["-    init.add(new VariableDeclaration(false, new IntTypeName(), \"i\", new IntegerLiteral(\"0\")));", "+    init.add(new VariableDeclaration(ModifierSet.make(), new IntTypeName(), \"i\", new IntegerLiteral(\"0\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34f2111e91d0b925377842f416002e8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Brace.java", "commitBeforeChange": "c88bf4a527291490e603bb8724d52a101cc61a60", "commitAfterChange": "9ac042462ff2ccafde5facafd742598846cdb098", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public boolean isDoubleEscapeSequence()", "signatureAfterChange": "   public boolean isDoubleEscapeSequence()", "diff": ["-    return  isDoubleEscape() || isEscapedQuote();", "+    return  isDoubleEscape() || isEscapedDoubleQuote() ||", "+      isEscapedSingleQuote();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34f7a4fd1cbb32efb2a53db5e54a4240", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 517, "methodNumberAfterChange": 383, "signatureBeforeChange": "    final private boolean jj_3R_147()", "signatureAfterChange": "    final private boolean jj_3R_150()", "diff": ["-  final private boolean jj_3R_147() {", "+", "+  final private boolean jj_3R_150() {", "-    if (jj_3_44()) jj_scanpos = xsp;", "+    if (jj_3_48()) jj_scanpos = xsp;", "-    if (jj_3R_105()) return true;", "+    if (jj_3R_108()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35115a421865a42d2cc82e06a3282232", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": "   public void _toggleBookmark(int pos1, int pos2)", "signatureAfterChange": "   public void _toggleBookmark(int pos1, int pos2)", "diff": ["-    RegionManager<OrderedDocumentRegion> bm = _bookmarkManager;", "+    RegionManager<MovingDocumentRegion> bm = _bookmarkManager;", "-    Collection<OrderedDocumentRegion> conflictingRegions = bm.getRegionsOverlapping(doc, startSel, endSel);", "+    Collection<MovingDocumentRegion> conflictingRegions = bm.getRegionsOverlapping(doc, startSel, endSel);", "-      for (OrderedDocumentRegion cr: conflictingRegions) bm.removeRegion(cr);", "+      for (MovingDocumentRegion cr: conflictingRegions) bm.removeRegion(cr);", "-", "-      OrderedDocumentRegion newR = new DocumentRegion(doc, startSel, endSel);", "+      MovingDocumentRegion newR = ", "+        new MovingDocumentRegion(doc, startSel, endSel, doc._getLineStartPos(startSel), doc._getLineEndPos(endSel));", "-//    }", "-//    catch (BadLocationException ble) { throw new UnexpectedException(ble); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "351643d7e0a6fe8cd8a31e1c94fe420f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "f1270b4a562e0ecd61507987f82e57d121a23edd", "commitAfterChange": "12067b12cea198f72f8758eab77d6f544c743a53", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "    private void reset(File projRoot)", "signatureAfterChange": "    private void reset(File projRoot)", "diff": ["+    _applyButton.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "352711651930704ce8ade8d49b52df8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/VariableData.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void setFinal()", "signatureAfterChange": "   public void setFinal()", "diff": ["-      _modifiersAndVisibility = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, newModifiers);", "+      _modifiersAndVisibility = new ModifiersAndVisibility(SourceInfo.NO_INFO, newModifiers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "353aa5dc53519170fa5fb22fc5e3ee82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 313, "methodNumberAfterChange": 583, "signatureBeforeChange": "    final private boolean jj_3R_364()", "signatureAfterChange": "    final private boolean jj_3R_368()", "diff": ["-", "-  final private boolean jj_3R_364() {", "-    if (jj_3R_377()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_399()) { jj_scanpos = xsp; break; }", "-    return false;", "-  }", "+  final private boolean jj_3R_368() {", "+    if (jj_3R_373()) return true;", "+      if (jj_3R_401()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "353fc422f6de262ef36c8962327dfa3f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "e7660fffdb51451a3d4a61981945f6529addb874", "commitAfterChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void findAll(String searchStr, final boolean searchAll, final boolean matchCase,                       final boolean wholeWord, final boolean noComments,  final OpenDefinitionsDocument startDoc,                       final RegionManager<MovingDocumentRegion> rm, final FindResultsPanel panel)", "signatureAfterChange": "   public void findAll(String searchStr, final boolean searchAll, final boolean matchCase,                       final boolean wholeWord, final boolean noComments, final boolean noTestCases,                       final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm,                       final FindResultsPanel panel)", "diff": ["-                      final boolean wholeWord, final boolean noComments,  final OpenDefinitionsDocument startDoc,", "-                      final RegionManager<MovingDocumentRegion> rm, final FindResultsPanel panel) {", "+                      final boolean wholeWord, final boolean noComments, final boolean noTestCases,", "+                      final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm,", "+                      final FindResultsPanel panel) {", "+    boolean oldNoTestCases = _machine.getIgnoreTestCases();", "+    _machine.setIgnoreTestCases(noTestCases);", "+      _machine.setIgnoreTestCases(oldNoTestCases);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3542b460b7ce37b9bce5d21c62479827", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "           public void testForShiftAssignmentExpressionOnly()", "signatureAfterChange": "           public void testForShiftAssignmentExpressionOnly()", "diff": ["-      ShiftAssignmentExpression sae = new LeftShiftAssignmentExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"j\")), new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 2));", "+      ShiftAssignmentExpression sae = new LeftShiftAssignmentExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"j\")), new IntegerLiteral(SourceInfo.NO_INFO, 2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "354691d3fd2770142a011dc42e4fdbd2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2f4a42f54aaa74c25ba0a929e664640f896ec43a", "commitAfterChange": "d73d2cacf79884db0dae830f87bb3795eb5cd6ef", "methodNumberBeforeChange": 222, "methodNumberAfterChange": 222, "signatureBeforeChange": "   public void showFindResultsPanel(final FindResultsPanel panel)", "signatureAfterChange": "   public void showFindResultsPanel(final FindResultsPanel panel)", "diff": ["-    if (! panel.isDisplayed()) showTab(panel);", "+    showTab(panel, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "354b8d599618a0f1d606db0181756378", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 719, "methodNumberAfterChange": 742, "signatureBeforeChange": "    final private boolean jj_3R_255()", "signatureAfterChange": "    final private boolean jj_3R_257()", "diff": ["-  final private boolean jj_3R_255() {", "+  final private boolean jj_3R_257() {", "-    if (jj_3R_419()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_420()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_388()) return true;", "+    xsp = jj_scanpos;", "+    if (jj_3R_422()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_423()) jj_scanpos = xsp;", "+    if (jj_3R_390()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35588bedd873641afbfa46dadd4b31e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/DocumentAdapter.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void insertText(int offs, String str, String style)     throws DocumentAdapterException;", "signatureAfterChange": "   public void insertText(int offs, String str, String style);", "diff": ["-  public void insertText(int offs, String str, String style)", "-    throws DocumentAdapterException;", "+  public void insertText(int offs, String str, String style);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "357604540d95e85e11fb4680bdab388c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 381, "methodNumberAfterChange": 354, "signatureBeforeChange": "    final private boolean jj_3R_312()", "signatureAfterChange": "    final private boolean jj_3R_322()", "diff": ["-", "-  final private boolean jj_3R_312() {", "-    if (jj_scan_token(THROW)) return true;", "-    if (jj_3R_102()) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "+", "+  final private boolean jj_3R_322() {", "+    if (jj_scan_token(THROW)) return true;", "+    if (jj_3R_105()) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "357bad0619e9fb0d9f29bb10bc63afec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 306, "methodNumberAfterChange": 822, "signatureBeforeChange": "    final private boolean jj_3R_525()", "signatureAfterChange": "    final private boolean jj_3R_551()", "diff": ["-", "-  final private boolean jj_3R_525() {", "-    if (jj_3R_120()) return true;", "-    if (jj_3R_80()) return true;", "-    if (jj_3R_415()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_542()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_551() {", "+    if (jj_3R_123()) return true;", "+    if (jj_3R_83()) return true;", "+    if (jj_3R_424()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_568()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "357c58b96f660562fa8de5c4061dbdc1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testCompileMissingCloseSquiggly()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileMissingCloseSquiggly()     throws BadLocationException, IOException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3593c477c9704cb271775225b442729a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "11a167d5b0a97e55aef4d62ed18d4da71e30b762", "commitAfterChange": "a32847752bc1c4d9a9c65da4d91d56e3d8a61fa6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testConstructOneDocWithBoth()", "signatureAfterChange": "   public void testConstructOneDocWithBoth()", "diff": ["+    assertTrue(\"hasOnlyWarnings should return false.\", !model.hasOnlyWarnings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35b32d1a24bda1bce1c564f1cad39fee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 230, "signatureBeforeChange": "     public Lambda2Value(T1 arg1, T2 arg2)", "signatureAfterChange": "   public static <T> SizedIterable<Iterable<T>> diagonalCross(Iterable<? extends Iterable<? extends T>> iters)", "diff": ["+  public static <T> SizedIterable<Iterable<T>> diagonalCross(Iterable<? extends Iterable<? extends T>> iters) {", "+    return diagonalCrossFold(iters, IterUtil.<T>empty(), IterUtil.<T>composeRightLambda());", "+  }  ", "-    private final T2 _arg2;", "-    public Lambda2Value(T1 arg1, T2 arg2) { _arg1 = arg1; _arg2 = arg2; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35b526df661221ecc1168429e1c57c28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 62, "signatureBeforeChange": "     public void interactionEnded()", "signatureAfterChange": "     public void interactionEnded()", "diff": ["-        if (printEvents) System.out.println(\"interactionEnded \" + interactionEndCount);", "+        if (printEvents) printStream.println(\"interactionEnded \" + interactionEndCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35c0ead81b2fe95967309ca60e654c53", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaRoot.java", "commitBeforeChange": "db0f15071978e90a34b717520b233bb7aaf1c97a", "commitAfterChange": "fdcbc942eddfd6ff92fe750cda9018e6f1a4d3ed", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static void main(final String[] args)", "signatureAfterChange": "      public static void main(final String[] args)", "diff": ["+    DrJava.warnIfLinuxWithCompiz();", "+    new SplashScreen().flash();", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35da33f5d422a27a499da044220b3473", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "09bec3d114e78a39aad7410d5a4ed3ab2cdf1dc4", "commitAfterChange": "8ece0edfbf0fa97c28d74f8231f220f413cd26e5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected StaticMethodCall _getStaticMethodCallForFunction(MethodCall method, Context context)", "signatureAfterChange": "     protected StaticMethodCall _getStaticMethodCallForFunction(MethodCall method, Context context)", "diff": ["-    String currClass = _thisClassName;", "+    String currClass = _getFullyQualifiedClassNameForThis();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35f97151a7d151a016acb288ee361ae6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 324, "methodNumberAfterChange": 322, "signatureBeforeChange": "    final private boolean jj_3R_263()", "signatureAfterChange": "    final private boolean jj_3R_264()", "diff": ["-  final private boolean jj_3R_263() {", "+", "+  final private boolean jj_3R_264() {", "-    if (jj_3R_319()) {", "+    if (jj_3R_320()) {", "-    if (jj_3R_320()) return true;", "+    if (jj_3R_321()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36083111e8c6f24edc655e0a28a1c0b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "f858bdc4a8556fa2d602de70e64361813405ec96", "commitAfterChange": "9a6ce0c2dd9939538b22d21a227d64c36bc636d3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   static boolean handleCommandLineArgs(String[] args)", "signatureAfterChange": "   static boolean handleCommandLineArgs(String[] args)", "diff": ["-        _toolsLoader = new ToolsJarClassLoader(getConfig().getSetting(JAVAC_LOCATION));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "362c0ab021af2cf6bc17f5f921a9516e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 613, "methodNumberAfterChange": 649, "signatureBeforeChange": "    final private boolean jj_3R_88()", "signatureAfterChange": "    final private boolean jj_3R_307()", "diff": ["-    if (jj_3R_133()) {", "-    if (jj_3R_134()) return true;", "+  final private boolean jj_3R_307() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_344()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_345()) return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "362c2c691e5681c8200f758a5d76b008", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "          public void testGetVar()", "signatureAfterChange": "          public void testGetVar()", "diff": ["-      System.err.println(\"testGetVar finished\");", "+//      System.err.println(\"testGetVar finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "362f33dd8577987711eb53607b0ee820", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "128dfa585f73f276b6d45e70cb656b74c7a3ac52", "commitAfterChange": "75d6ee48e583e9a62b38304dae2bad1322e37e97", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         public static void main(String... args)", "signatureAfterChange": "         public static void main(String... args)", "diff": ["-    catch (InterpreterException e) { e.printUserMessage(new PrintWriter(System.out, true)); }", "+    catch (InterpreterException e) {", "+      debug.log(e);", "+      e.printUserMessage(new PrintWriter(System.out, true));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "364ce1356e9ed44d61b431ce84abc73c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "ba6275930e25f1b0898c45319a21c16860b3e177", "commitAfterChange": "1bd0fb2319802a0180bca30c066879626028c532", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "   public void testSaveClearAndLoadHistory() throws DocumentAdapterException,     BadLocationException, InterruptedException, IOException", "signatureAfterChange": "   public void testSaveClearAndLoadHistory() throws DocumentAdapterException,     BadLocationException, InterruptedException, IOException", "diff": ["-    String newLine = System.getProperty(\"line.separator\");", "+    //String newLine = System.getProperty(\"line.separator\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36667c508c650a32d36b683fff818e1d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void setupDoc()", "signatureAfterChange": "   private void setupDoc()", "diff": ["-      new String(\"This is a block of test text.\\n\" + \"It doesn't matter what goes in here.\\n\" +", "-                 \"But it does matter if it is manipulated properly!\\n\") };", "+      \"This is a block of test text.\\n\" + \"It doesn't matter what goes in here.\\n\" +", "+                 \"But it does matter if it is manipulated properly!\\n\"};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3669d43f144599f052c5865c0245de8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPane.java", "commitBeforeChange": "cdddd415c8ee9888478b5a253ffbb086fce1ed57", "commitAfterChange": "f1f97edd57f558d6d34abcd1fe039afc22f7a202", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 10, "signatureBeforeChange": "    public InteractionsPane(GlobalModel model)", "signatureAfterChange": "    public InteractionsPane(GlobalModel model)", "diff": ["-    getDocument().addDocumentListener(new ScrollToEndDocumentListener());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "366a465e644ad1d4ffb01006e57ace1c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/Indenter.java", "commitBeforeChange": "e855fbea41f0dcbe20751dbee6936124456f2ccf", "commitAfterChange": "7514c1680e1d7e2676a0d61c09ad444070ccaf0d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void buildTree()", "signatureAfterChange": "   public void buildTree()", "diff": ["-      rule05 = new ActionDoNothing(),", "-      rule04 = new ActionStartPrevLinePlus(\" \"), ", "+      //rule05 = new ActionDoNothing(),", "+      rule05 = new ActionStartPrevLinePlus(\" \"),", "+      rule04 = new ActionStartPrevLinePlus(\" * \"), ", "-      rule32 = new ActionStartStmtOfBracePlus(oneLevel),     // ?       ", "+      rule32 = new ActionStartStmtOfBracePlus(oneLevel),", "-      rule25 = rule32,  // ?", "+      rule25 = rule32,", "-      rule17 = rule32,  // ?", "-      //rule16 = new QuestionBraceOnPrevLine(rule17, rule18),", "+      rule17 = rule32,", "-      rule10 = rule03,      ", "+      //rule10 = rule03,", "+      rule10 = new ActionStartPrevLinePlus(\"\"),", "-      rule08 = new ActionStartPrevLinePlus(\"\"),          ", "+      rule08 = rule10,          "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "366a6e38a53748bb7b48da8198761dda", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 275, "methodNumberAfterChange": 488, "signatureBeforeChange": "    final private boolean jj_3R_323()", "signatureAfterChange": "    final private boolean jj_3R_601()", "diff": ["-", "-  final private boolean jj_3R_323() {", "-    if (jj_scan_token(CATCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_88()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_167()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_601() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_80()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_562()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3671c5e377115938184761f6faadffa4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 598, "methodNumberAfterChange": 578, "signatureBeforeChange": "    final private boolean jj_3R_306()", "signatureAfterChange": "    final private boolean jj_3R_361()", "diff": ["+  final private boolean jj_3R_361() {", "+    if (jj_3R_366()) return true;", "+      if (jj_3R_394()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_306() {", "-    if (jj_3R_325()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_342()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3688d3fa0d6d6fff5dbcc780b40f2be9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected void _close()", "signatureAfterChange": "   protected void _close()", "diff": ["-    getModel().resetJUnitErrors();", "+    getModel().getJUnitModel().resetJUnitErrors();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "368e9b8e28d83f6dc9effb34b7a7b3c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public Boolean value(Object o1, Object o2, Object o3)", "signatureAfterChange": "     public boolean contains(Object o1, Object o2, Object o3)", "diff": ["-    public Boolean value(Object o1, Object o2) { return true; }", "-    public Boolean value(Object o1, Object o2, Object o3) { return true; }", "+    public boolean contains(Object o1, Object o2) { return true; }", "+    public boolean contains(Object o1, Object o2, Object o3) { return true; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3693f621bf15a252de2d2e9290f51e58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 405, "methodNumberAfterChange": 376, "signatureBeforeChange": "    final private boolean jj_3R_439()", "signatureAfterChange": "    final private boolean jj_3R_454()", "diff": ["+  final private boolean jj_3R_454() {", "+    if (jj_3R_105()) return true;", "-  final private boolean jj_3R_439() {", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36b45450f12f6ca4183336546cf1cd63", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Object visit(WhileStatement node)", "signatureAfterChange": "   public Class visit(WhileStatement node)", "diff": ["+   */", "+  public Class visit(WhileStatement node) {", "+    // Check the condition", "+    if (node.getCondition().acceptVisitor(this) != boolean.class) {", "+      throw new ExecutionError(\"condition.type\", node);", "+    ", "+    node.getBody().acceptVisitor(this);", "+    return null;", "+  }", "-     */", "-    public Object visit(WhileStatement node) {", "-        // Check the condition", "-        if (node.getCondition().acceptVisitor(this) != boolean.class) {", "-            throw new ExecutionError(\"condition.type\", node);", "-        }", "-", "-        node.getBody().acceptVisitor(this);", "-        return null;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36bbdfe68c792232caba5ed384979dc1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "e16fd9dc1aa815e303a7aa80be407f3a031e237d", "commitAfterChange": "97f3497fff8964fcbfb5676986b962bdda4668d8", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException", "signatureAfterChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException", "diff": ["-    if (relative) path = FileOps.makeRelativeTo(df, _projectRoot).getPath();", "+    if (relative) path = FileOps.stringMakeRelativeTo(df, _projectRoot);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36c26320ed34294bc0ff926025311af4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandler.java", "commitBeforeChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "commitAfterChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void handleEvent(Event e)", "signatureAfterChange": "      public void handleEvent(Event e)", "diff": ["-    System.out.println(\"handleEvent: \"+e);", "+    //System.out.println(\"handleEvent: \"+e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ea0f2668192288df3c4bde49af1dbd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 804, "methodNumberAfterChange": 791, "signatureBeforeChange": "    final private boolean jj_3R_516()", "signatureAfterChange": "    final private boolean jj_3R_519()", "diff": ["-  final private boolean jj_3R_516() {", "+  final private boolean jj_3R_519() {", "-      if (jj_3R_531()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_534()) { jj_scanpos = xsp; break; }", "-    if (jj_3R_532()) jj_scanpos = xsp;", "+    if (jj_3R_535()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36f6228a2029f7d275d4f542e543539c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 268, "methodNumberAfterChange": 787, "signatureBeforeChange": "    final private boolean jj_3R_173()", "signatureAfterChange": "    final private boolean jj_3R_178()", "diff": ["-", "-  final private boolean jj_3R_173() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_94()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_178() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_97()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37010bf68e65c8643fcaad9b9ddbf7cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/PrimitiveData.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public PrimitiveData(String name)", "signatureAfterChange": "   public PrimitiveData(String name)", "diff": ["-    setMav(new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, new String[] {\"public\"}));", "+    setMav(new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[] {\"public\"}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "370792a0e73ac1b1554160236739dc0b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "facb31d52d0108009578d6a1708ac1dfc68b98b8", "commitAfterChange": "417b6d282f87d7da5aa7274e065294c3e7058851", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void reset()", "signatureAfterChange": "   public void reset()", "diff": ["-", "-      _numErrors = juem.getErrors().length;", "+      _numErrors = juem.getErrorsWithoutPositions().length + juem.getErrorsWithPositions().length;", "-", "-    _errorListPane.updateListPane();", "+    _errorListPane.updateListPane(juem.haveTestsRun());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "370ca966d99c876af6d53a20b2d9ab41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-      _region.getDocument().readLock();", "+      _region.getDocument().acquireReadLock();", "-      } finally { _region.getDocument().readUnlock(); }", "+      } finally { _region.getDocument().releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37226136f13d4a275b43cc3d61a6e4af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 271, "methodNumberAfterChange": 166, "signatureBeforeChange": "    final private boolean jj_3R_108()", "signatureAfterChange": "    final private boolean jj_3R_50()", "diff": ["-  final private boolean jj_3R_108() {", "-    if (jj_3_39()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_134()) return true;", "-    }", "+  final private boolean jj_3R_50() {", "+    if (jj_3R_86()) {", "+    if (jj_3R_87()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374192adafa6d9ddb676e8830e40a5ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 312, "methodNumberAfterChange": 315, "signatureBeforeChange": "    final private boolean jj_3R_362()", "signatureAfterChange": "    final private boolean jj_3R_363()", "diff": ["-", "-  final private boolean jj_3R_362() {", "+  final private boolean jj_3R_363() {", "-    if (jj_3R_367()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_369()) return true;", "+    if (jj_3R_369()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_370()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374d0346129d523d78b1fd33ebc36ce1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "936df97bedea66175f36cae49ba74b17abf11e8a", "commitAfterChange": "d43c6d20ec903cbbb4ee5291a112b3b3ae570823", "methodNumberBeforeChange": 214, "methodNumberAfterChange": 214, "signatureBeforeChange": "   public File[] getSourceRootSet()", "signatureAfterChange": "   public File[] getSourceRootSet()", "diff": ["-    OpenDefinitionsDocument[] docs;", "-    ", "-    synchronized(_documentsRepos) { docs =  _documentsRepos.toArray(new OpenDefinitionsDocument[0]); }", "-//    Utilities.show(\"Getting sourceRootSet for \" + Arrays.toString(docs));", "-    for (OpenDefinitionsDocument doc: docs) {", "+", "+    for (OpenDefinitionsDocument doc: getOpenDefinitionsDocuments()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37792cf6750318f6040b538b8d3586b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testMixed() throws BadLocationException", "signatureAfterChange": "   public void testMixed() throws BadLocationException", "diff": ["-//    _log.log(\"testMixed completed\");", "+    _log.log(\"testMixed completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3779d4f21da97ba509b002d0d3350d25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "28c4be6b04d5867405916840b451c47e4acad060", "commitAfterChange": "db16e322f21576ce25b97ab99611f7c7362cef3e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate void _insertBraceToGap(String text, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor)", "signatureAfterChange": " \tprivate void _insertBraceToGap(String text, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor)", "diff": ["-\t\t\tModelList<ReducedToken>.Iterator copy2 = copyCursor.copy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37917f70bfc4f6da67be578bf8185094", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "          public void testForPrimitiveTypeDoFirst()", "signatureAfterChange": "          public void testForPrimitiveTypeDoFirst()", "diff": ["-      SourceInfo noInfo = JExprParser.NO_SOURCE_INFO;", "+      SourceInfo noInfo = SourceInfo.NO_INFO;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3795015aaf9fd100921d129c19d4565a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/UncaughtExceptionWindow.java", "commitBeforeChange": "8a3aaf6e3fe6fafb27249a8ad4b2c013ef4ae05a", "commitAfterChange": "102797244429ae58868d0037b49467f5a00bbd6a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private String _getStackTraceString()", "signatureAfterChange": "   private String _getStackTraceString()", "diff": ["-    return new String(\"Stack Trace: \\n\\n\"+", "-                      swFail.toString());", "+    return new String(swFail.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "379afa0a8cf1ac9325cb30941044b436", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorKeyStrokeOptionComponent.java", "commitBeforeChange": "c95281d4127bdbd843c86748b646c5941d6c6e28", "commitAfterChange": "7fc4acf0464a18794ecf4448364493c7686c450b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected void _removeIndex(int i)", "signatureAfterChange": "   protected void _removeIndex(int i)", "diff": ["-    _keyToKSOC.remove(_data.get(i));", "+    _keyToKSOC.remove(_ksData.get(i)[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37a0957ae8333a20dafe60496e3692ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "a36f036fed8dd7a9755b2c0fd88168156b516121", "commitAfterChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      protected JDialog createDialog()", "signatureAfterChange": "      protected JDialog createDialog()", "diff": ["-//    diag.setLocationRelativeTo(null);", "+    diag.setLocationRelativeTo(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37a820c3f933e60b372e561065334c41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9c56cd9d9775329b3a5e6a7701ab0c05369850af", "commitAfterChange": "a7a439f9a53360ece86e113cdb8203e5c8b2acda", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 117, "signatureBeforeChange": "   public boolean closeFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "   abstract public boolean closeFile(OpenDefinitionsDocument doc);", "diff": ["-  public boolean closeFile(OpenDefinitionsDocument doc) {", "+  abstract public boolean closeFile(OpenDefinitionsDocument doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37b22e64f5aaaf1ae090e8f00466c0d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "          public void undo()", "signatureAfterChange": "          public void undo()", "diff": ["+      if(_pos > -1) {", "+        setCaretPosition(_pos);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37c82f653c56d4c202df1e2d4d67dea7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 714, "methodNumberAfterChange": 717, "signatureBeforeChange": "    final private boolean jj_3R_429()", "signatureAfterChange": "    final private boolean jj_3R_430()", "diff": ["+", "+  final private boolean jj_3R_430() {", "+    if (jj_scan_token(LESS)) return true;", "+    if (jj_3R_195()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_449()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_3R_126()) return true;", "-  final private boolean jj_3R_429() {", "-    if (jj_scan_token(LESS)) return true;", "-    if (jj_3R_194()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_449()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_3R_125()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37c84593ee7c6e5877fd92fc2a050b82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartingNewStmt.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    System.err.println(\"QuestionStartingNewStmt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37d7a172da239c9c6d2de3948ea0aa94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 426, "methodNumberAfterChange": 418, "signatureBeforeChange": "    final private boolean jj_3R_303()", "signatureAfterChange": "    final private boolean jj_3R_306()", "diff": ["+", "+  final private boolean jj_3R_306() {", "+    if (jj_3R_315()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_328()) jj_scanpos = xsp;", "+    return false;", "+  }", "-  final private boolean jj_3R_303() {", "-    if (jj_3R_312()) return true;", "-    xsp = jj_scanpos;", "-    if (jj_3R_325()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37fca8727105694886e434010154f561", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   protected void _log(String message, Throwable t)", "signatureAfterChange": "   private void _log(String message, Throwable t)", "diff": ["-  protected void _log(String message, Throwable t) {", "-    _log.logTime(message, t);", "-  }", "+  private void _log(String message, Throwable t) { _log.log(message, t); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "380266ce5a0a76c73ce4f4db6e44b247", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/TypeCheckerExtension.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Object visit(DivideExpression node)", "signatureAfterChange": "   public Class visit(DivideExpression node)", "diff": ["-  public Object visit(DivideExpression node) {", "+  public Class visit(DivideExpression node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "380894f286c06c2f1c2d1e4bec890c43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ProcessCreator.java", "commitBeforeChange": "21836dcccd81c2207652ee85b319b723ac9ff10b", "commitAfterChange": "18f7005907576031115bfb0859e7ff6d53506e5e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public File getDir()", "signatureAfterChange": "   public String workDir()", "diff": ["-  public File getDir() {", "-    return _dir;", "+  public String workDir() {", "+    return _workdir;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3824c40333cb20e05f87036c32a7039a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   private void updateInfo()", "signatureAfterChange": "   private void updateInfo()", "diff": ["+      _infoLabel.setToolTipText(_info.value(item));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3870b1a020d601bf7b9c9b23cad73a09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1a75cad2504d1fc1a152e7bfc1ed5646f83f61f2", "commitAfterChange": "2a60f2064688c4fe57c01ffc40a024b990b45720", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 55, "signatureBeforeChange": "   private void _setUpToolBar()", "signatureAfterChange": "   private void _setUpToolBar()", "diff": ["-    _saveButton.setEnabled(false);", "+    _toolBar.add(_undoAction);", "+    _toolBar.add(_redoAction);", "-    _compileButton.setEnabled(false);", "+    _toolBar.add(_resetInteractionsAction);", "+    _toolBar.add(_abortInteractionAction);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "388077bd34e98d477eee6290d55f2627", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 389, "methodNumberAfterChange": 575, "signatureBeforeChange": "    final private boolean jj_3R_166()", "signatureAfterChange": "    final private boolean jj_3R_162()", "diff": ["-  final private boolean jj_3R_166() {", "-      if (jj_3R_215()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_162() {", "+      if (jj_3R_215()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "388d47703ae1fda55a13f71627a27830", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/DocumentAdapter.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public String getDocText(int offs, int len) throws DocumentAdapterException;", "signatureAfterChange": "   public String getDocText(int offs, int len);", "diff": ["-  public String getDocText(int offs, int len) throws DocumentAdapterException;", "+  public String getDocText(int offs, int len);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38c8bdd254f9fbea3f897f90018a8ba0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 600, "methodNumberAfterChange": 620, "signatureBeforeChange": "    final private boolean jj_3R_534()", "signatureAfterChange": "    final private boolean jj_3R_623()", "diff": ["-", "-  final private boolean jj_3R_534() {", "-    if (jj_3R_93()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_548()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_623() {", "+    if (jj_3R_94()) return true;", "+    if (jj_3R_631()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38d977b9d18512316b125ab759951680", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Bob.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "          public void testForInitializedVariableDeclaratorOnly()", "signatureAfterChange": "          public void testForInitializedVariableDeclaratorOnly()", "diff": ["-      InitializedVariableDeclarator ivd = new InitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO,", "-                                                                            JExprParser.NO_TYPE,", "-                                                                            new Word(JExprParser.NO_SOURCE_INFO, \"j\"),", "-                                                                            new DoubleLiteral(JExprParser.NO_SOURCE_INFO, 1.0));", "+      InitializedVariableDeclarator ivd = ", "+        new InitializedVariableDeclarator(SourceInfo.NO_INFO,", "+                                          JExprParser.NO_TYPE,", "+                                          new Word(SourceInfo.NO_INFO, \"j\"),", "+                                          new DoubleLiteral(SourceInfo.NO_INFO, 1.0));", "-      assertEquals(\"Two assignable types should not throw an error; return null.\", null, _b.forInitializedVariableDeclaratorOnly(ivd, sd1, sd1, sd3.getInstanceData()));", "+      assertEquals(\"Two assignable types should not throw an error; return null.\", null, ", "+                   _b.forInitializedVariableDeclaratorOnly(ivd, sd1, sd1, sd3.getInstanceData()));", "-      assertEquals(\"Two unassignable types should throw an error; return null.\", null, _b.forInitializedVariableDeclaratorOnly(ivd, sd1, sd1, sd2.getInstanceData()));", "+      assertEquals(\"Two unassignable types should throw an error; return null.\", null, ", "+                   _b.forInitializedVariableDeclaratorOnly(ivd, sd1, sd1, sd2.getInstanceData()));", "-      assertEquals(\"Error message should be correct:\", \"Type: \\\"double\\\" expected, instead found type: \\\"boolean\\\".\", errors.getLast().getFirst());", "+      assertEquals(\"Error message should be correct:\", \"Type: \\\"double\\\" expected, instead found type: \\\"boolean\\\".\", ", "+                   errors.getLast().getFirst());", "-      assertEquals(\"An initialization from a SymbolData should return null\", null, _b.forInitializedVariableDeclaratorOnly(ivd, sd1, null, foo));", "+      assertEquals(\"An initialization from a SymbolData should return null\", null, ", "+                   _b.forInitializedVariableDeclaratorOnly(ivd, sd1, null, foo));", "-      assertEquals(\"Error message should be correct:\", \"Field or variable j cannot be initialized with the class or interface name Foo.  Perhaps you meant to create an instance or use Foo.class\", errors.getLast().getFirst());", "+      assertEquals(\"Error message should be correct:\", ", "+                   \"Field or variable j cannot be initialized with the class or interface name Foo.  \" + ", "+                   \"Perhaps you meant to create an instance or use Foo.class\", errors.getLast().getFirst());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38f21e1aaa4d047b5f47f311df62f60b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 489, "methodNumberAfterChange": 453, "signatureBeforeChange": "    final private boolean jj_3R_374()", "signatureAfterChange": "    final private boolean jj_3R_386()", "diff": ["+", "+  final private boolean jj_3R_386() {", "+    if (jj_3R_107()) return true;", "+    if (jj_3R_78()) return true;", "+    if (jj_3R_408()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_409()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_374() {", "-    if (jj_3R_104()) return true;", "-    if (jj_3R_75()) return true;", "-    if (jj_3R_395()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_396()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38f88567bd26dfde595fad395c1531d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 64, "signatureBeforeChange": "     public void interactionEnded()", "signatureAfterChange": "     public void interactionEnded()", "diff": ["-        _notifyObject(_notifierLock);", "+        _notifyLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3905c868bf6f7bf33a9163fdb64b5a6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 502, "methodNumberAfterChange": 489, "signatureBeforeChange": "    final private boolean jj_3R_260()", "signatureAfterChange": "    final private boolean jj_3R_270()", "diff": ["+", "+  final private boolean jj_3R_270() {", "+    if (jj_scan_token(OR_ASSIGN)) return true;", "+    if (jj_3R_97()) return true;", "-", "-  final private boolean jj_3R_260() {", "-    if (jj_scan_token(OR_ASSIGN)) return true;", "-    if (jj_3R_94()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3911f621fe34ca577dfe833c795a155c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "92062677ca813cb9ab44428a0d2d54f0c3309b04", "commitAfterChange": "274f7defc49003e66c942e814c9ce22958b3814c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void forceInsertText(int offs, String str, String style) throws EditDocumentException", "signatureAfterChange": "   public void forceInsertText(int offs, String str, String style) throws EditDocumentException", "diff": ["-    try {", "-      _addToStyleLists(offs, str, style);", "-      _document.forceInsertText(offs, str, style);", "-    }", "+    try { _forceInsertText(offs, str, style); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "392af49b7d2607ca467a11f0746f3ba0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 317, "methodNumberAfterChange": 537, "signatureBeforeChange": "    final private boolean jj_3R_371()", "signatureAfterChange": "    final private boolean jj_3R_317()", "diff": ["-", "-  final private boolean jj_3R_371() {", "-    if (jj_3R_390()) return true;", "-      if (jj_3R_404()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_317() {", "+    if (jj_3R_326()) return true;", "+      if (jj_3R_327()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3942e0b0f525b895f4ff4e882ba4333f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "1333ad40debe120f6d8fd5fb5ff36c57ce6b1ccf", "commitAfterChange": "3907c0e8430f2d380a191d1ad8364cbfdd1d1b28", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testSuiteStarted(int numTests)", "signatureAfterChange": "   public void testSuiteStarted(int numTests)", "diff": ["+      _log.log(re.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39495c6ccca01d3723895279d1fcf7c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testCompileAllDifferentSourceRoots()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "diff": ["-  public void testCompileAllDifferentSourceRoots()", "-    throws BadLocationException, IOException, InterruptedException", "-  {", "+  public void testCompileAllDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException {", "-    doc.saveFile(new FileSelector(file));", "+    saveFile(doc, new FileSelector(file));", "-    doc2.saveFile(new FileSelector(file2));", "+    saveFile(doc2, new FileSelector(file2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3958bb1c73fda7f78e52b6f7b6110425", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "37dab6b79fc3d4e6f7b2b5f0aa53a4ea9b7f7476", "commitAfterChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void compile(List<OpenDefinitionsDocument> defDocs) throws IOException", "signatureAfterChange": "   public void compile(List<OpenDefinitionsDocument> defDocs) throws IOException", "diff": ["-      if (doc.isSourceFile()) filesToCompile.add(doc.getFile());", "+      if (doc.isSourceFile()) {", "+        filesToCompile.add(doc.getFile());", "+        doc.setCachedClassFile(null); // clear cached class file", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3963bc89c817ae10b38806c37a04d954", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DefaultInteractionsModel.java", "commitBeforeChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "commitAfterChange": "37eb7cd9abe39acb853d1fd344f27a2631ce2406", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DefaultInteractionsModel(DefaultGlobalModel model, MainJVM jvm, ConsoleDocumentInterface cDoc, File wd)", "signatureAfterChange": "   public DefaultInteractionsModel(DefaultGlobalModel model, MainJVM jvm, ConsoleDocumentInterface cDoc, File wd)", "diff": ["-          DefaultGlobalModel.WRITE_DELAY);", "+          WRITE_DELAY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "396a704ac2ba6a1c25f4c39a2f42d355", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testInsertSlashIntoStarSlash() throws BadLocationException", "signatureAfterChange": "   public void testInsertSlashIntoStarSlash() throws BadLocationException", "diff": ["-    BraceReduction rm = _defModel.getReduced();", "+    BraceReduction _reduced = _defModel.getReduced();", "-    assertEquals(\"1\", \"/*\", rm.currentToken().getType());", "-    assertEquals(\"2\", ReducedToken.FREE, rm.currentToken().getState());", "-    rm.move(2);", "-    assertEquals(\"3\", \"*/\", rm.currentToken().getType());", "-    assertEquals(\"4\", ReducedToken.FREE, rm.currentToken().getState());", "-    rm.move(2);", "-    assertEquals(\"5\", \"/\", rm.currentToken().getType());", "-    assertEquals(\"6\", ReducedToken.FREE, rm.currentToken().getState());", "+    assertEquals(\"1\", \"/*\", _reduced.currentToken().getType());", "+    assertEquals(\"2\", ReducedToken.FREE, _reduced.currentToken().getState());", "+    _reduced.move(2);", "+    assertEquals(\"3\", \"*/\", _reduced.currentToken().getType());", "+    assertEquals(\"4\", ReducedToken.FREE, _reduced.currentToken().getState());", "+    _reduced.move(2);", "+    assertEquals(\"5\", \"/\", _reduced.currentToken().getType());", "+    assertEquals(\"6\", ReducedToken.FREE, _reduced.currentToken().getState());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "396f237a3ea132a0b54c17f2494cbc51", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testGetLine3() throws BadLocationException", "signatureAfterChange": "   public void testGetLine3() throws BadLocationException", "diff": ["-    _defModel.insertString(0, s, null);", "-    _defModel.setCurrentLocation(6);", "-    assertEquals(\"#0.0\", 4, _defModel.getCurrentLine());", "+    _doc.insertString(0, s, null);", "+    _doc.setCurrentLocation(6);", "+    assertEquals(\"#0.0\", 4, _doc.getCurrentLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39877f6763fbbbe94250f82a975a1232", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "303ddb2c47275a1e2c25f273f6ed234a39d50962", "commitAfterChange": "05170b9ac5bef61612128757c005ac85c724ec32", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 138, "signatureBeforeChange": "     private boolean _save()", "signatureAfterChange": "     private boolean _save()", "diff": ["-        _currentDefPane.hasWarnedAboutModified(false);", "+        _currentDefPane.hasWarnedAboutModified(false); ", "+        _model.setActiveDocument(_model.getActiveDocument());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39937383ebbc310589275eca16b0a0a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "09bec3d114e78a39aad7410d5a4ed3ab2cdf1dc4", "commitAfterChange": "8ece0edfbf0fa97c28d74f8231f220f413cd26e5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private Class _loadClassForThis(Context context)", "signatureAfterChange": "      private Class _loadClassForThis(Context context)", "diff": ["+  ", "-      String cName = _thisClassName;", "-      if (!_thisPackageName.equals(\"\")) {", "-        cName = _thisPackageName + \".\" + cName;", "-      }", "-      return context.lookupClass(cName);", "+      return context.lookupClass(_getFullyQualifiedClassNameForThis());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "399e2381a601936d3f8bcae1f55c9e73", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConditionMonitor.java", "commitBeforeChange": "2553e74f2033c32251b75d2098848168d6306b82", "commitAfterChange": "c0097a428fe48a719763cd02e3388b731264c468", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public boolean attemptEnsureTrue()", "signatureAfterChange": "   public boolean attemptEnsureTrue()", "diff": ["-    catch (InterruptedException e) { return false; }", "+    catch (InterruptedException e) { return _condition.isTrue(); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39b0677028044a2c4da23f5dcc551f42", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentFileManagerTest.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["-    _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "+    _tempDir = IOUtil.createAndMarkTempDirectory(\"DrJava-test-\" + user, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39b3a31ffbb9f7285cfd73d3755d0b3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "893c07e82b5df8a5ee457745ae613e9f4f3395b7", "commitAfterChange": "e7565df68be50967f0383d34df0b493ae42a4e83", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "    public Component _excludedFilesComponent()", "signatureAfterChange": "    public Component _excludedFilesComponent()", "diff": ["-    _excludedFilesList = new VectorFileOptionComponent(null, \"Files Excluded from Auto-Refresh\", this, false) {", "+    _excludedFilesList = new VectorFileOptionComponent(null, \"Files Excluded from Auto-Refresh\", this, null, false) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39b70b8782348cd762055638968b5677", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "   private void _switchToInterpreterForThreadReference(ThreadReference threadRef)", "signatureAfterChange": "   private void _switchToInterpreterForThreadReference(ThreadReference threadRef)", "diff": ["-    ((DefaultInteractionsModel)_model.getInteractionsModel()).setActiveInterpreter(threadName, prompt);", "+    _model.getInteractionsModel().setActiveInterpreter(threadName, prompt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39b9ec386b103a2af536bdb346db8585", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 854, "methodNumberAfterChange": 834, "signatureBeforeChange": "    final private boolean jj_3R_91()", "signatureAfterChange": "    final private boolean jj_3R_93()", "diff": ["-", "-  final private boolean jj_3R_91() {", "-    if (jj_3R_123()) return true;", "-    if (jj_3R_147()) jj_scanpos = xsp;", "+", "+  final private boolean jj_3R_93() {", "+    if (jj_3R_122()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_137()) jj_scanpos = xsp;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39c16d79e7a971323690c62163c49ab0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 601, "methodNumberAfterChange": 429, "signatureBeforeChange": "    final private boolean jj_3R_163()", "signatureAfterChange": "    final private boolean jj_3R_158()", "diff": ["+", "+  final private boolean jj_3R_158() {", "+    if (jj_3R_206()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_275()) jj_scanpos = xsp;", "+    return false;", "+  }", "-  final private boolean jj_3R_163() {", "-    if (jj_3R_207()) return true;", "-    if (jj_3R_268()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39c221cf84f3eb8e2e2ca429f80e753f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException,      InterruptedException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException,      InterruptedException", "diff": ["-    doc.startCompile();", "+    testStartCompile(doc);", "+    _log.log(\"testCompileActiveSavedAnyUnsavedButSaveWhenAsked complete\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39ce7ddd38191f79cbdb825988fa3ae0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f9981b5126ddf4f32d24773a4d0aa52292b60f44", "commitAfterChange": "b905bf9540e16d07e22d509564906f39b61368bc", "methodNumberBeforeChange": 720, "methodNumberAfterChange": 721, "signatureBeforeChange": "          public void interpreterReady(File wd)", "signatureAfterChange": "          public void interpreterReady(File wd)", "diff": ["-      _runProjectAction.setEnabled(_model.isProjectActive());", "+      _runProjectAction.setEnabled(isProjectActiveAndMainClassSet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39d2aed8c7703a776e2ce97ee27b29a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 697, "methodNumberAfterChange": 702, "signatureBeforeChange": "    final private boolean jj_3R_475()", "signatureAfterChange": "    final private boolean jj_3R_482()", "diff": ["-", "-  final private boolean jj_3R_475() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_32()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_478()) return true;", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_482() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_33()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_485()) return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39fa6d6d4c5ba03d2351b73e08625093", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3944766b414e9b28f72d0266991dc3ced69d30b0", "commitAfterChange": "30114c083c07270248f814f8a3cab4ee5196d9c1", "methodNumberBeforeChange": 592, "methodNumberAfterChange": 612, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["+              m.add(Utilities.createDelegateAction(\"Save File Copy...\", _saveCopyAction));", "+    _interactionsPanePopupMenu.add(_saveInteractionsCopyAction);", "+    _interactionsPanePopupMenu.addSeparator();", "+    _consolePanePopupMenu.add(_saveConsoleCopyAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a09e5ed32c5b02d1b66f4396570d37a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "8470bac42027a288eff50252d965c363d15d41dc", "commitAfterChange": "cb029f12bd6c2fdcdba02605492a4baf5ca47e02", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": "      public void updateLocation()", "signatureAfterChange": "      public void updateLocation()", "diff": ["-      DefinitionsDocument doc = _model.getActiveDocument().getDocument();", "-      /*", "-      _currLocationField.setText(doc.getCurrentLine() +", "-                                 \":\" + doc.getCurrentCol() + \"\\t\");", "-      */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a3a28c29ab89d20582d1325b523b270", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testGotoLine4() throws BadLocationException", "signatureAfterChange": "   public void testGotoLine4() throws BadLocationException", "diff": ["-    defModel.insertString(0, s, null);", "-    defModel.gotoLine(8);", "-    assertEquals(\"#0.0\", 6, defModel.getCurrentLocation());", "+    _defModel.insertString(0, s, null);", "+    _defModel.gotoLine(8);", "+    assertEquals(\"#0.0\", 6, _defModel.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a4089e1cde664f74b687471fa6458cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 486, "methodNumberAfterChange": 740, "signatureBeforeChange": "    final private boolean jj_3R_161()", "signatureAfterChange": "    final private boolean jj_3R_148()", "diff": ["-  final private boolean jj_3R_161() {", "-    if (jj_3R_209()) {", "-    if (jj_3R_210()) {", "-    if (jj_3R_211()) {", "-    if (jj_3R_212()) {", "-    if (jj_3R_213()) {", "-    if (jj_3R_214()) return true;", "+", "+  final private boolean jj_3R_148() {", "+    if (jj_3R_208()) {", "+    if (jj_3R_209()) {", "+    if (jj_3R_210()) {", "+    if (jj_3R_211()) {", "+    if (jj_3R_212()) {", "+    if (jj_3R_213()) {", "+    if (jj_3R_214()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a48c61c31ba273a7bc3971dd5a8334b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "6ac6b30c03b8f321199592a97e544cb4056701f0", "commitAfterChange": "69317eecda3235d4815eb5d9a5b9e536b8481c4a", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     @Override public Type visit(AnonymousInnerAllocation node)", "signatureAfterChange": "     @Override public Type visit(AnonymousInnerAllocation node)", "diff": ["-          throw new ExecutionError(\"allocation.type\", node);", "+          setErrorStrings(node, ts.userRepresentation(t));", "+          throw new ExecutionError(\"invalid.supertype\", node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a4995867b5595b62b87565dabf7bbd1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 494, "methodNumberAfterChange": 269, "signatureBeforeChange": "    final private boolean jj_3R_583()", "signatureAfterChange": "    final private boolean jj_3R_175()", "diff": ["+", "+  final private boolean jj_3R_175() {", "+    if (jj_3R_78()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_218()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_583() {", "-    if (jj_3R_99()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3_39()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a53d56db944152b8ccd0f253ad4b97d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0a7bf024d048ea8c858680b0ac23e24e5ae6fe7d", "commitAfterChange": "362905f63dbb4da65eed4f6ca60b6ce9eca3dd7d", "methodNumberBeforeChange": 535, "methodNumberAfterChange": 537, "signatureBeforeChange": "   private JMenu _setUpEditMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpEditMenu(int mask)", "diff": ["+    panesMenu.addSeparator();", "+    _addMenuItem(panesMenu, _prevRegionAction, KEY_TABBED_PREV_REGION);", "+    _addMenuItem(panesMenu, _nextRegionAction, KEY_TABBED_NEXT_REGION);", "+    panesMenu.addSeparator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a59561dc4bf12a227a1efac9b61e32b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     public Object visit(TypeExpression node)", "signatureAfterChange": "   public Class visit(TypeExpression node)", "diff": ["-     */", "-    public Object visit(TypeExpression node) {", "-\tClass c = (Class)node.getType().acceptVisitor(this);", "-        node.setProperty(NodeProperties.TYPE, Class.class);", "-        node.setProperty(NodeProperties.VALUE, c);", "-\treturn Class.class;", "+   */", "+  public Class visit(TypeExpression node) {", "+    Class c = (Class)node.getType().acceptVisitor(this);", "+    node.setProperty(NodeProperties.TYPE, Class.class);", "+    node.setProperty(NodeProperties.VALUE, c);", "+    return Class.class;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a5b53df7220ca9704acddfd9cb79f58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartStmtOfBracePlus.java", "commitBeforeChange": "558f3e76b0939d235eb8771fbc6a284d80a06f72", "commitAfterChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc, int pos)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc,                           BraceReduction reducedModel,                           int pos)", "diff": ["-  public void indentLine(DefinitionsDocument doc, int pos) {", "+  public void indentLine(DefinitionsDocument doc, ", "+                         BraceReduction reducedModel, ", "+                         int pos)", "+  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a6eb7b2c84d2f50aaa9179c68616ff5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 381, "methodNumberAfterChange": 548, "signatureBeforeChange": "    final private boolean jj_3_48()", "signatureAfterChange": "    final private boolean jj_3_48()", "diff": ["-", "-  final private boolean jj_3_48() {", "-    if (jj_3R_107()) return true;", "+", "+  final private boolean jj_3_48() {", "+    if (jj_3R_104()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a99926f1747729e50b85de1ec842ccb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "    public OpenDefinitionsDocument getDocumentForFile(File file)     throws IOException", "signatureAfterChange": "    public OpenDefinitionsDocument getDocumentForFile(File file)     throws IOException", "diff": ["-        public File getFile() throws OperationCanceledException {", "+        public File getFile() {", "-        public File[] getFiles() throws OperationCanceledException {", "+        public File[] getFiles() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a9fae2cf661e44c90db93286b092489", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 582, "methodNumberAfterChange": 330, "signatureBeforeChange": "    final private boolean jj_3R_329()", "signatureAfterChange": "    final private boolean jj_3R_299()", "diff": ["+", "+  final private boolean jj_3R_299() {", "+    if (jj_3R_311()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_329() {", "-    if (jj_3R_318()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3aa4ad7ea19ae735848409170ef44036", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsEditorKit.java", "commitBeforeChange": "b0d972d74202b06a8aec19804a46939a0aac3bf3", "commitAfterChange": "f81eb3cdab335666760ab0cb868fe3567723e9df", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private static DefinitionsDocument _createDefaultTypedDocument()", "signatureAfterChange": "   private DefinitionsDocument _createDefaultTypedDocument()", "diff": ["-  private static DefinitionsDocument _createDefaultTypedDocument() {", "-    return new DefinitionsDocument();", "+  private DefinitionsDocument _createDefaultTypedDocument() {", "+    return new DefinitionsDocument(_notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3aa6029e81ef76747da0ad885e9ecffd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/InteractionsDocument.java", "commitBeforeChange": "0f5802fd0bfcac88fdf9ed629119c5b60fc353ef", "commitAfterChange": "af3d2665565d850db91ca07a41202bb19156c449", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void addClassPath(String path)", "signatureAfterChange": "    public void addClassPath(String path)", "diff": ["-\t\tSystem.out.println(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ac8deab282e96e866424eeef5d2c95a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-hj/edu/rice/cs/drjava/model/compiler/HjCompiler.java", "commitBeforeChange": "503a4c8c883d0c0e1badd33935b5da20910f7033", "commitAfterChange": "bc15f82b93b6ffb78da3a3058742b383768e7aa6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public String transformCommands(String interactionsString)", "signatureAfterChange": "   public String transformCommands(String interactionsString)", "diff": ["-    System.out.println(interactionsString);", "+    // System.out.println(interactionsString);", "-      System.out.println(interactionsString);", "+      // System.out.println(interactionsString);", "-      System.out.println(interactionsString);", "+      // System.out.println(interactionsString);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ad3308d8d87db33b913b26036ce205e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public void interpreterResetting()", "signatureAfterChange": "   public void interpreterResetting()", "diff": ["-      _document.acquireWriteLock();", "-      try {", "+//      _document.acquireWriteLock();", "+//      try {", "-      }", "-      finally { _document.releaseWriteLock(); }", "+//      }", "+//      finally { _document.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ad6566b3072dc076d98463d7b1611b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AboutDialog.java", "commitBeforeChange": "1551b3a480a22638c82545f9f78ddcdd4c3680e6", "commitAfterChange": "bbf3746bbcee6a4413d47d7cf809100cc7bb81e7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public JPanel createBottomBar()", "signatureAfterChange": "      private JPanel createBottomBar()", "diff": ["-  public JPanel createBottomBar() {", "-    JButton button = new JButton(\"OK\");", "+  private JPanel createBottomBar() {", "-    button.addActionListener(this);", "-    panel.add(button,BorderLayout.EAST);", "+    _okButton.addActionListener(this);", "+    panel.add(_okButton,BorderLayout.EAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3adf9e446f9486b8f5a2f75e41b63c67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "      public void testForIncrementExpressionOnly()", "signatureAfterChange": "      public void testForIncrementExpressionOnly()", "diff": ["-      IncrementExpression ie = new PositivePrefixIncrementExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\")));", "+      IncrementExpression ie = new PositivePrefixIncrementExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ae4358a164c30c40f38c4fa4a000338", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "cbb9f04386fdbcd6c82a6f2a5ae6b635359499fb", "commitAfterChange": "e77b9389e0feb3169a20412f8892f630db108f0e", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public void testSuiteEnded(JUnitError[] errors)", "signatureAfterChange": "   public void testSuiteEnded(JUnitError[] errors)", "diff": ["-    _notifier.junitEnded();", "+    _notifyJUnitEnded();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ae55cd2ba99c895b26f8c9579ab769c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected JComponent[] makeButtons()", "signatureAfterChange": "   protected JComponent[] makeButtons()", "diff": ["-      public void actionPerformed(ActionEvent ae) {", "-        goToRegion();", "-      }", "+      public void actionPerformed(ActionEvent ae) { goToRegion(); }", "-      public void actionPerformed(ActionEvent ae) {", "-        _bookmark();", "-      }", "+      public void actionPerformed(ActionEvent ae) { _bookmark(); }", "-      public void actionPerformed(ActionEvent ae) {", "-        _remove();", "-      }", "+      public void actionPerformed(ActionEvent ae) { _remove(); }", "-        else {", "-          highlightPanel.setBackground(normalColor);", "-        }", "+        else highlightPanel.setBackground(normalColor);", "+", "-      if (DefinitionsPane.FIND_RESULTS_PAINTERS_USAGE[_lastIndex]==0) {", "-        break;", "-      }", "+      if (DefinitionsPane.FIND_RESULTS_PAINTERS_USAGE[_lastIndex]==0) break;", "-    JComponent[] buts = new JComponent[] { ", "-      _goToButton, ", "-        _bookmarkButton,", "-        _removeButton,", "-        highlightPanel,", "-        _colorBox", "-    };", "-    ", "-    return buts;", "+    return new JComponent[] { _goToButton, _bookmarkButton, _removeButton, highlightPanel, _colorBox};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3afb1c14f518b2a17a6db6d83b7a4162", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "7c4507413beb0e75cdce1379ffec8d0279bed992", "commitAfterChange": "d1bf0f940bc3d914d8d8293a0e85760984d7b371", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void valueChanged(TreeSelectionEvent e)", "signatureAfterChange": "   public void valueChanged(TreeSelectionEvent e)", "diff": ["-          listener.lostSelection(_current);", "-          listener.gainedSelection(newSelection);", "+          listener.lostSelection(_current, isNextChangeModelInitiated());", "+          listener.gainedSelection(newSelection, isNextChangeModelInitiated());", "+", "+      setNextChangeModelInitiated(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b02be9ba4c7b7f29439317a99381a0f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "42465b0c95801c83cae0d8e781c43cb17e95c775", "commitAfterChange": "dd7f7fbbfae186b155b4ab01f1629e1623154745", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public Class visit(SimpleAssignExpression node)", "signatureAfterChange": "   public Class visit(SimpleAssignExpression node)", "diff": ["-    // Perhaps is this assignment a variable declaration ?", "+    // Perhaps is this assignment a variable declaration", "+    // Get the type of the left hand side", "-    checkAssignmentStaticRules(lc, rc, node, right);", "+    Expression exp = checkAssignmentStaticRules(lc, rc, node, right);", "+    node.setRightExpression(exp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b042cb5b0e3c015185db56c2608b9ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "16b3c525d206842b43311b11dbbe9241dc3d59d0", "commitAfterChange": "254a88f71deb049e50bd502fd76aea39364d706f", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": "   public void saveProject(String filename, Hashtable<OpenDefinitionsDocument,DocumentInfoGetter> info)      throws IOException", "signatureAfterChange": "   public void saveProject(String filename, Hashtable<OpenDefinitionsDocument,DocumentInfoGetter> info)      throws IOException", "diff": ["-    File[] srcFiles = srcFileVector.toArray(new File[0]);", "+    File[] srcFiles = srcFileVector.toArray(new File[srcFileVector.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b085918fcfaf8def6be3836b409a815", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "f6810ad68cbb0aaa0d9f5ff0052437da87098ab7", "commitAfterChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public int findCharOnLine(int pos, char findChar)", "signatureAfterChange": "   public int findCharOnLine(int pos, char findChar)", "diff": ["+      ", "+      if (i == -1) matchIndex = ERROR_INDEX;", "+      _storeInCache(key, matchIndex);", "-    if (i == -1) matchIndex = ERROR_INDEX;", "-    _storeInCache(key, new Integer(matchIndex));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b14d4b2adef8fc062268d98f283eb8d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testVarArgs14()", "signatureAfterChange": "   public void testVarArgs14()", "diff": ["-    TigerUtilities.setTigerEnabled(false);", "+    setTigerEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b4e2284c719275dfe8ace770f220710", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "2aadb81a716e2a196f82baa127c28e3225664fab", "commitAfterChange": "c4ec4fbaa86590f5d9d73c067159d69b14149c37", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   private void _remove()", "signatureAfterChange": "   private void _remove()", "diff": ["-    int row = (len > 0) ? rows[len - 1] + 1 : 0;", "+    int row = (len > 0) ? rows[len - 1] : 0;", "-", "-//    System.err.println(\"Scrolling to row \" + row);", "-//    _regTree.setSelectionRow(row);", "-    _regTree.scrollRowToVisible(row);", "+    _regTree.setSelectionRow(row);", "+    _regTree.scrollRowToVisible(row);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b520821fedeaee7034cd2fc66b0026b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputModel.java", "commitBeforeChange": "91f1790d793689beae896db47015b721b602919f", "commitAfterChange": "d33d42f5f56aa9f97fa7ee5954a0170706bf34dc", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public PredictiveInputModel(boolean ignoreCase, PredictiveInputModel<T> pim)", "signatureAfterChange": "   public PredictiveInputModel(boolean ignoreCase, PredictiveInputModel<T> pim)", "diff": ["+    setMask(pim.getMask());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b56c53cf8d96b51c495e5af9ee6d419", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerError.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public CompilerError(File file, String message, boolean isWarning)", "signatureAfterChange": "   public CompilerError(File file, String message, boolean isWarning)", "diff": ["-  /** Constructor for an CompilerError with an associated file but no location in the source */", "-  public CompilerError(File file, String message, boolean isWarning) { this(file, -1, -1, message, isWarning); }", "+  /** Constructor for an DJError with an associated file but no location in the source */", "+  public CompilerError(File file, String message, boolean isWarning) { super(file, message, isWarning); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b59751fa0f817227646cce7e02f103f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object visit(PackageDeclaration node)", "signatureAfterChange": "   public Class visit(PackageDeclaration node)", "diff": ["+   */", "+  public Class visit(PackageDeclaration node) {", "+    context.setCurrentPackage(node.getName());", "+    return null;", "+  }", "-     */", "-    public Object visit(PackageDeclaration node) {", "-        context.setCurrentPackage(node.getName());", "-        return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b760eb496d005c033c80551eecd5fbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "1a21d93c6026fc975d9f1a1bda2fbd55942a0154", "commitAfterChange": "7cbabe0b7b5f77b58eac69afdca15c16ef2f6a9b", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public int processAll(Lambda<Void, FindResult> findAction)", "signatureAfterChange": "   public int processAll(Runnable1<FindResult> findAction)", "diff": ["-  public int processAll(Lambda<Void, FindResult> findAction) { return processAll(findAction, _searchAllDocuments); }", "+  public int processAll(Runnable1<FindResult> findAction) { return processAll(findAction, _searchAllDocuments); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b91b4d9bc0b1e7c3aeb7e6718c6f886", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "9e3824633ee746290537e9b5e107ba2db1504674", "commitAfterChange": "31da1983d1819399d97822faa171f51ddfde661b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Node visit(ImportDeclaration node)", "signatureAfterChange": "   public Node visit(ImportDeclaration node)", "diff": ["-        throw new RuntimeException(\"Uncaught Class Not Found Exception\");", "+        throw new CatchedExceptionError(e,node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b9c527bb068629640353eddee8c3b3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "commitAfterChange": "3d71370f387f5ff990190106fcbfa93f8a159b9b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public BreakpointsPanel(MainFrame frame, RegionManager<Breakpoint> breakpointManager)", "signatureAfterChange": "   public BreakpointsPanel(MainFrame frame, RegionManager<Breakpoint> breakpointManager)", "diff": ["-    _regionManager.addListener(new RegionManagerListener<Breakpoint>() {", "+    getRegionManager().addListener(new RegionManagerListener<Breakpoint>() {", "-        ((DefaultTreeModel)_regTree.getModel()).nodeChanged(regNode);", "+        getRegTreeModel().nodeChanged(regNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bbd7a9f0dba3063485e386bd600b10d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "16b3c525d206842b43311b11dbbe9241dc3d59d0", "commitAfterChange": "254a88f71deb049e50bd502fd76aea39364d706f", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 152, "signatureBeforeChange": "   public File[] getSourceRootSet()", "signatureAfterChange": "   public File[] getSourceRootSet()", "diff": ["-    return roots.toArray(new File[0]);", "+    return roots.toArray(new File[roots.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3be2b28559f56035ef4f94eb944b444b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "a5a766c0abe1a94ea1cfa69aac7995654eda0886", "commitAfterChange": "e89db6424eb4d447de92442bb5bec9b31ff0f5d0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public boolean saveAs()", "signatureAfterChange": "   public boolean saveAs()", "diff": ["-    JFileChooser fc = new JFileChooser();", "+    JFileChooser fc = _saveChooser;", "+\t\tfc.setSelectedFile(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3beaa28266b85c598377e1fa5eb122dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsScriptController.java", "commitBeforeChange": "b79563bf1d51671314589f6c744a87acc54fe8fa", "commitAfterChange": "517a134496ea28d3d08f7cd449813e2a756de857", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void setActionsDisabled()", "signatureAfterChange": "   public void setActionsDisabled()", "diff": ["-    _currentInteractionAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c064f5f0c2d45194c267b41d9b7cb6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 519, "methodNumberAfterChange": 387, "signatureBeforeChange": "    final private boolean jj_3R_91()", "signatureAfterChange": "    final private boolean jj_3R_93()", "diff": ["-  final private boolean jj_3R_91() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_146()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_147()) return true;", "-    }", "+  final private boolean jj_3R_93() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_149()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_150()) return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c084982d71ecef931af1b3a983eddef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 618, "methodNumberAfterChange": 414, "signatureBeforeChange": "    final private boolean jj_3R_542()", "signatureAfterChange": "    final private boolean jj_3R_521()", "diff": ["+", "+  final private boolean jj_3R_521() {", "+    if (jj_3R_216()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_539()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_542() {", "-    if (jj_3R_261()) return true;", "-      if (jj_3R_548()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c13f5d247b1e31c97d02d05779105a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 391, "methodNumberAfterChange": 372, "signatureBeforeChange": "    final private boolean jj_3R_276()", "signatureAfterChange": "    final private boolean jj_3R_337()", "diff": ["-  final private boolean jj_3R_276() {", "+", "+  final private boolean jj_3R_337() {", "-    if (jj_3R_100()) return true;", "+    if (jj_3R_102()) return true;", "-    if (jj_3R_159()) return true;", "+    if (jj_3R_167()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c24e14108cedea7f1d5d920023dd8ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "202fe65b6d19b63d8f3941f6eff8e18c68fa7232", "commitAfterChange": "b7e7dc26985115a0b1d39562458d043f05ace9bb", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 43, "signatureBeforeChange": "   private FindResult _findNextInDocSegment(final OpenDefinitionsDocument doc, final int start, int len,                                             final boolean wrapped, final boolean allWrapped)", "signatureAfterChange": "   private FindResult _findNextInDocSegment(final OpenDefinitionsDocument doc, final int start, int len,                                             final boolean wrapped, final boolean allWrapped)", "diff": ["-    System.out.println(\"_findNextInDocSegment, inTestCase=\"+inTestCase+\", _ignoreTestCases=\"+_ignoreTestCases);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c2c7360e173428ff518d8503f7ce013", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 622, "methodNumberAfterChange": 618, "signatureBeforeChange": "    final private boolean jj_3R_128()", "signatureAfterChange": "    final private boolean jj_3R_130()", "diff": ["-  final private boolean jj_3R_128() {", "+", "+  final private boolean jj_3R_130() {", "-    if (jj_3_35()) jj_scanpos = xsp;", "+    if (jj_3_37()) jj_scanpos = xsp;", "-    if (jj_3R_100()) return true;", "+    if (jj_3R_102()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c2ddb3c4e6a8fc423cf5652f9b4cc30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public Object visit(ObjectMethodCall node)", "signatureAfterChange": "   public Object visit(ObjectMethodCall node)", "diff": ["-    ", "+", "-    ", "+", "-      ", "+", "-      ", "+", "-      ", "+", "-          Object p  = ((Expression)it.next()).acceptVisitor(this);", "+          Object p  = it.next().acceptVisitor(this);", "-      } ", "+      }", "-        } ", "+        }", "-      } ", "+      }", "-    } ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c3a0e7aa69b1610cc94b60d8ab8b169", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "   protected static PrimitiveType _correspondingPrimType(Class<?> refClass)", "signatureAfterChange": "   protected static PrimitiveTypeName _correspondingPrimType(Class<?> refClass)", "diff": ["-  protected static PrimitiveType _correspondingPrimType(Class<?> refClass) {", "+  protected static PrimitiveTypeName _correspondingPrimType(Class<?> refClass) {", "-      return new BooleanType();", "+      return new BooleanTypeName();", "-      return new ByteType();", "+      return new ByteTypeName();", "-      return new CharType();", "+      return new CharTypeName();", "-      return new ShortType();", "+      return new ShortTypeName();", "-      return new IntType();", "+      return new IntTypeName();", "-      return new LongType();", "+      return new LongTypeName();", "-      return new FloatType();", "+      return new FloatTypeName();", "-      return new DoubleType();", "+      return new DoubleTypeName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c4bf68183b39c04081d63f19245efaf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/NoCompilerAvailable.java", "commitBeforeChange": "d2672269336e7275d013a62f6a2cae91ecdf9b13", "commitAfterChange": "1f215280ffb4deee1474aa0ea630d96d544831f9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public CompilerError[] compile(File sourceRoot, File[] files)", "signatureAfterChange": "    public CompilerError[] compile(File sourceRoot, File[] files)", "diff": ["+    File[] sourceRoots = new File[] { sourceRoot };", "+    return compile(sourceRoots, files);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c8c2364cb7f637fb99ae291aee5c2e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 365, "methodNumberAfterChange": 368, "signatureBeforeChange": "    final private boolean jj_3R_225()", "signatureAfterChange": "    final private boolean jj_3R_226()", "diff": ["-  final private boolean jj_3R_225() {", "-    if (jj_3R_250()) return true;", "+  final private boolean jj_3R_226() {", "+    if (jj_3R_251()) return true;", "-      if (jj_3R_281()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_282()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c8e7c8fb4eb5bab37fe9bac0b64b98a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "38289ebc7d35b217d991b224a08e60caae3469a0", "commitAfterChange": "8d3cdbacfda748aaaf1451c3632bfbbb860b1d39", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public static void configureAndLoadDrJavaRoot(String[] args)", "signatureAfterChange": "      public static void configureAndLoadDrJavaRoot(String[] args)", "diff": ["-          || junitLocationConfigured;", "+          || (DrJava.getConfig().getSetting(OptionConstants.RT_CONCJUNIT_LOCATION_ENABLED) && junitLocationConfigured);", "-            if (junitLocationConfigured) {", "+            if (DrJava.getConfig().getSetting(OptionConstants.RT_CONCJUNIT_LOCATION_ENABLED) &&", "+                junitLocationConfigured) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c9f209ee787b21c0645dc3e3eefb815", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 503, "methodNumberAfterChange": 506, "signatureBeforeChange": "    final private boolean jj_3R_219()", "signatureAfterChange": "    final private boolean jj_3R_220()", "diff": ["-  final private boolean jj_3R_219() {", "+  final private boolean jj_3R_220() {", "-    if (jj_3_45()) {", "+    if (jj_3_47()) {", "-    if (jj_3R_246()) return true;", "+    if (jj_3R_247()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cac9e40add9c0f2c65794bfc985c75a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "     public Object visit(EqualExpression node)", "signatureAfterChange": "   public Class visit(EqualExpression node)", "diff": ["+   */", "+  public Class visit(EqualExpression node) {", "+    // Check the types", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    Class lc = (Class)ln.acceptVisitor(this);", "+    Class rc = (Class)rn.acceptVisitor(this);", "+    ", "+    checkEqualityStaticRules(lc, rc, node);", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.equalTo(lc, rc,", "+                                      ln.getProperty(NodeProperties.VALUE),", "+                                      rn.getProperty(NodeProperties.VALUE)));", "+    }", "+    ", "+    // Set the type property", "+    node.setProperty(NodeProperties.TYPE, boolean.class);", "+    return boolean.class;", "+  }", "-     */", "-    public Object visit(EqualExpression node) {", "-        // Check the types", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-        Class lc = (Class)ln.acceptVisitor(this);", "-        Class rc = (Class)rn.acceptVisitor(this);", "-", "-        checkEqualityStaticRules(lc, rc, node);", "-                                 ", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.equalTo(lc, rc,", "-                                              ln.getProperty(NodeProperties.VALUE),", "-                                              rn.getProperty(NodeProperties.VALUE)));", "-", "-        // Set the type property", "-        node.setProperty(NodeProperties.TYPE, boolean.class);", "-        return boolean.class;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ccb3bab9b96f4234c8a456dde979698", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 822, "methodNumberAfterChange": 720, "signatureBeforeChange": "    final private boolean jj_3R_111()", "signatureAfterChange": "    final private boolean jj_3R_114()", "diff": ["-", "-  final private boolean jj_3R_111() {", "-    if (jj_scan_token(FOR)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_90()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_112()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_179()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_114() {", "+    if (jj_scan_token(FOR)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_92()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_115()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_182()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cd2ef9f7e9fdcf701222b8f0b760265", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/gui/Main.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public Action getAction(String key) throws MissingListenerException", "signatureAfterChange": "   public Action getAction(String key) throws MissingListenerException", "diff": ["-     */", "-    public Action getAction(String key) throws MissingListenerException {", "-\treturn (Action)listeners.get(key);", "-    }", "+   */", "+  public Action getAction(String key) throws MissingListenerException {", "+    return listeners.get(key);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cf2dc71b9ed8ee8107c8e6e0e468e91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/GlobalContext.java", "commitBeforeChange": "9e3824633ee746290537e9b5e107ba2db1504674", "commitAfterChange": "31da1983d1819399d97822faa171f51ddfde661b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void declareMemberStaticImport(String member)", "signatureAfterChange": "   public void declareMemberStaticImport(String member) throws ClassNotFoundException", "diff": ["-  public void declareMemberStaticImport(String member) {", "+  public void declareMemberStaticImport(String member) throws ClassNotFoundException{"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d01a49a970c151e793329e820a403cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ec5c7b65c72ae4439436619fa81e04fbea3f0c07", "commitAfterChange": "2c0187dc2f9d55623655e85f4610811768ae2c9f", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 160, "signatureBeforeChange": "   private OpenDefinitionsDocument[] _openFiles(File[] files)     throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   private OpenDefinitionsDocument[] _openFiles(File[] files)     throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["+        if(_state.isExcludedFile(f))", "+          _state.removeExcludedFile(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d4db499b8c1e349bde30d51a92215c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FileSelectorComponent.java", "commitBeforeChange": "79e38a44be6c4c379730bdfb5468461330077836", "commitAfterChange": "3be3cfbc674d7ccc211966342e06cebac6416af4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public boolean validateTextField()", "signatureAfterChange": "   public synchronized boolean validateTextField()", "diff": ["-  public boolean validateTextField() {", "-    if (_validationInProgress) return true;", "-    _validationInProgress = true;", "+  public synchronized boolean validateTextField() {", "+//    if (_validationInProgress) return true;", "+//    _validationInProgress = true;", "-      _validationInProgress = false;", "+//      _validationInProgress = false;", "-      _validationInProgress = false;", "+//      _validationInProgress = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d509cdbd058de92033e38e9579c9161", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   public abstract StaticMethodInvocation lookupStaticMethod(Type t, String name,                                                             Iterable<? extends Type> typeArgs,                                                              Iterable<? extends Expression> args,                                                             Option<Type> expected)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "   public abstract StaticMethodInvocation lookupStaticMethod(Type t, String name,                                                             Iterable<? extends Type> typeArgs,                                                              Iterable<? extends Expression> args,                                                             Option<Type> expected, Access.Module accessModule)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-                                                            Option<Type> expected)", "+                                                            Option<Type> expected, Access.Module accessModule)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d50a6060eec03f40ce8bd4e0c4c4d65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "e8c00117275c4794f9b044ac36c056a72d163888", "commitAfterChange": "615ff23a704e8a18c51abf1bd9015de115551141", "methodNumberBeforeChange": 255, "methodNumberAfterChange": 255, "signatureBeforeChange": "              private String nameForVariable(VariableType t)", "signatureAfterChange": "              private String nameForVariable(VariableType t)", "diff": ["+        }", "+        if (!_seenVars.contains(t)) {", "+          _seenVars.add(t);", "-          if (printUpper || printLower) _boundedVars.add(t);", "+          if (printUpper || printLower) { _boundedVars.add(t); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d79df3e07724480ec04e3b5b3b90b67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "c0487ade35919fa6d08b7c39361898d3c5751c04", "commitAfterChange": "7b4296c095d59b57f25b910a8bdce57816e7621f", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "signatureAfterChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "diff": ["-    StringBuffer keyBuf = new StringBuffer(\"findPrevDelimiter:\").append(pos);", "+    StringBuilder keyBuf = new StringBuilder(\"findPrevDelimiter:\").append(pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d851b2b0a166b3f39ac291788169e9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Bob.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public TypeData forThrowStatementOnly(ThrowStatement that, TypeData thrown_result)", "signatureAfterChange": "   public TypeData forThrowStatementOnly(ThrowStatement that, TypeData thrown_result)", "diff": ["-    if (thrown_result == null || !assertFound(thrown_result, that.getThrown())) {return null;}", "+    if (thrown_result == null || !assertFound(thrown_result, that.getThrown())) return null;", "-      _addError(\"You cannot throw a class or interface name.  Perhaps you mean to instantiate the exception \" + thrown_result.getSymbolData().getName() + \" that you are throwing\", that);", "+      _addError(\"You cannot throw a class or interface name.  Perhaps you mean to instantiate the exception class \" + ", "+                thrown_result.getSymbolData().getName() + \" that you are throwing\", that);", "+//    System.err.println(\"getSymbolData(\\\"java.lang.Throwable\\\", that, false, true) = \" + ", "+//                       getSymbolData(\"java.lang.Throwable\", that, false, true));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d8fefe836c56d08ce293c5e5e6874e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ConfigFrame(MainFrame frame)", "signatureAfterChange": "   public ConfigFrame(MainFrame frame)", "diff": ["+    ", "+    initDone(); // call mandated by SwingFrame contract"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d9544e94fca7596693d7538aaca7747", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 405, "methodNumberAfterChange": 391, "signatureBeforeChange": "    final private boolean jj_3R_292()", "signatureAfterChange": "    final private boolean jj_3R_295()", "diff": ["-", "-  final private boolean jj_3R_292() {", "-    if (jj_3R_303()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_337()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_295() {", "+    if (jj_3R_306()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_340()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d987297d4033aab03fa691624fa0c93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/HistoryTest.java", "commitBeforeChange": "f64c69c26757bdbe8f4b64cff2c4f8aa2bb32b08", "commitAfterChange": "6a3834a3c5c8eaa789999544deeecfe26c96787a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testHistoryIsBounded()", "signatureAfterChange": "   public void testHistoryIsBounded()", "diff": ["+    CONFIG.setSetting(HISTORY_MAX_SIZE, new Integer(maxLength));", "-\t\t maxLength,", "-\t\t _history.size());", "+   maxLength,", "+   _history.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d9d1feff83e22c58d1559aa25efcd89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 696, "methodNumberAfterChange": 728, "signatureBeforeChange": "    final private boolean jj_3R_105()", "signatureAfterChange": "    final private boolean jj_3R_106()", "diff": ["-", "-  final private boolean jj_3R_105() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_158()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_159()) return true;", "-    }", "+  final private boolean jj_3R_106() {", "+    xsp = jj_scanpos;", "+    if (jj_3R_159()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_160()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3da90e93b5997684b3891bc5d9bbd719", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Boolean isAnonymousClass()", "signatureAfterChange": "      public Boolean isAnonymousClass()", "diff": ["-    int lastIndex = _name.lastIndexOf(\"$\");", "+    int lastIndex = _name.lastIndexOf('$');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3db7995b54713e1fba071af0342e15f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "c3686d18afe86d8459a6ef71e5f779589d915dd8", "commitAfterChange": "1e5237b2401d25a04c08b7b54162568a6d55c836", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   private void _setupMiscPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupMiscPanel(ConfigPanel panel)", "diff": ["+    ", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.AUTO_CLOSE_COMMENTS, \"Automatically Close Block Comments\", this,", "+                                                  \"<html>Automatically inserts a closing comment tag (\\\"*/\\\")<br>\" +", "+                                                  \"when the enter key is pressed after typing a new<br>\" +", "+                                                  \"block comment tag (\\\"/*\\\" or \\\"/**\\\").</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dea175c80fb66cbfc28788bd16f5c07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 459, "methodNumberAfterChange": 455, "signatureBeforeChange": "    final private boolean jj_3R_78()", "signatureAfterChange": "    final private boolean jj_3R_78()", "diff": ["-    if (jj_3R_109()) return true;", "+    if (jj_3R_112()) return true;", "-    if (jj_3R_110()) jj_scanpos = xsp;", "-    if (jj_3R_95()) return true;", "+    if (jj_3R_113()) jj_scanpos = xsp;", "+    if (jj_3R_96()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dea178fae8281149e3c9140543d8b77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "7b186e8cfa737bd39a9facf1a855bea0de04458e", "commitAfterChange": "a3df75dea2230d74c46433fee8cffdc0bfeefcea", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DirectoryChooser(Dialog owner, boolean allowMultiple)", "signatureAfterChange": "   public DirectoryChooser(Dialog owner)", "diff": ["+   */", "+  public DirectoryChooser(Dialog owner) {", "+    this(owner, null, false, false);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dfe5e4b9c99d3e1e64c1ea465552ea3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 100, "signatureBeforeChange": "      protected OpenDefinitionsDocument openFileHelper(FileOpenSelector com) throws IOException,      OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "      protected OpenDefinitionsDocument openFileHelper(FileOpenSelector com) throws IOException,      OperationCanceledException, AlreadyOpenException", "diff": ["-    final File file = (com.getFiles())[0].getCanonicalFile();", "+    final File file = (com.getFiles())[0].getCanonicalFile();  // may throw an IOException if path is invalid", "-      if (odd.inProject() || odd.isAuxiliaryFile())", "-        throw new UnsupportedOperationException(\"Cannot add new project files to classPath\");", "-//        _interactionsModel.addProjectFilesClassPath(classpath.toURL());", "-//      else _interactionsModel.addExternalFilesClassPath(classpath.toURL());", "+      addDocToClassPath(odd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e3ef76ceb2b5736d48c40993168f4c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 457, "methodNumberAfterChange": 722, "signatureBeforeChange": "    final private boolean jj_3R_452()", "signatureAfterChange": "    final private boolean jj_3R_520()", "diff": ["-  final private boolean jj_3R_452() {", "-    if (jj_3R_474()) return true;", "-      if (jj_3R_488()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_520() {", "+    if (jj_3R_541()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_576()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e4384c066b24a17c4a7cd871db3c2a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "     public Object visit(OrExpression node)", "signatureAfterChange": "   public Class visit(OrExpression node)", "diff": ["+   */", "+  public Class visit(OrExpression node) {", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    Class lc = (Class)ln.acceptVisitor(this);", "+    Class rc = (Class)rn.acceptVisitor(this);", "+    ", "+    // Check the types of the operands", "+    if (lc != boolean.class || rc != boolean.class) {", "+      throw new ExecutionError(\"or.type\", node);", "+    }", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         (((Boolean)ln.getProperty(NodeProperties.VALUE)).booleanValue() ||", "+          ((Boolean)rn.getProperty(NodeProperties.VALUE)).booleanValue())", "+           ? Boolean.TRUE : Boolean.FALSE);", "+    }", "+    ", "+    // Set the type property", "+    node.setProperty(NodeProperties.TYPE, boolean.class);", "+    return boolean.class;", "+  }", "-     */", "-    public Object visit(OrExpression node) {", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-        Class lc = (Class)ln.acceptVisitor(this);", "-        Class rc = (Class)rn.acceptVisitor(this);", "-", "-        // Check the types of the operands", "-        if (lc != boolean.class || rc != boolean.class) {", "-            throw new ExecutionError(\"or.type\", node);", "-        }", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 (((Boolean)ln.getProperty(NodeProperties.VALUE)).booleanValue() ||", "-                  ((Boolean)rn.getProperty(NodeProperties.VALUE)).booleanValue())", "-                 ? Boolean.TRUE : Boolean.FALSE);", "-\t}", "-", "-        // Set the type property", "-        node.setProperty(NodeProperties.TYPE, boolean.class);", "-        return boolean.class;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e49ce44a1bf4175f8d971144448a15e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 55, "signatureBeforeChange": "      public void testLiveUpdateOfIndentLevel() throws BadLocationException", "signatureAfterChange": "      public void testLiveUpdateOfIndentLevel() throws BadLocationException", "diff": ["-    indentLines(0, _doc.getLength());", "+    safeIndentLines(0, _doc.getLength());", "-    DrJava.getConfig().setSetting(OptionConstants.INDENT_LEVEL, Integer.valueOf(8));", "+    DrJava.getConfig().setSetting(OptionConstants.INDENT_LEVEL, 8);", "-    indentLines(0, _doc.getLength());", "+//    System.err.println(\"level is \" + DrJava.getConfig().getSetting(OptionConstants.INDENT_LEVEL));", "+    safeIndentLines(0, _doc.getLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e5d840b016d93a7621f0aca469b815f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 294, "methodNumberAfterChange": 841, "signatureBeforeChange": "    final private boolean jj_3R_464()", "signatureAfterChange": "    final private boolean jj_3R_465()", "diff": ["-", "-  final private boolean jj_3R_464() {", "-    if (jj_3R_483()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_512()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_465() {", "+    if (jj_3R_484()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_513()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e6ca124ecc3ed013b51d84169784a5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/Interpreter.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public Interpreter(Options opt, TypeContext typeContext, RuntimeBindings bindings)", "signatureAfterChange": "      public Interpreter(Options opt, TypeContext typeContext, RuntimeBindings bindings)", "diff": ["-    new JavaCCParser(new StringReader(\"\")).parseStream();", "+    new JavaCCParser(new StringReader(\"\"), _opt).parseStream();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e6daca45df145ca60ba7ae53e167529", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 336, "methodNumberAfterChange": 340, "signatureBeforeChange": "     public boolean checkIfClassFileInSync()", "signatureAfterChange": "     public boolean checkIfClassFileInSync()", "diff": ["+      _log.log(\"checkIfClassFileInSync() called for \" + this);", "-      if (isUntitled()) return true;", "+      if (isUntitled()) return true; // unmodified, untitled document", "+      }", "+      if (sourceFile != null) {", "+        _log.log(sourceFile + \" has timestamp \" + sourceFile.lastModified());", "+        _log.log(classFile + \" has timestamp \" + classFile.lastModified());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e72aa451514ee236bdc46c996a3f21b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ProcessCreator.java", "commitBeforeChange": "21836dcccd81c2207652ee85b319b723ac9ff10b", "commitAfterChange": "18f7005907576031115bfb0859e7ff6d53506e5e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public List<String> command()", "signatureAfterChange": "   public String cmdline()", "diff": ["-   */", "-  public List<String> command() {", "-    return new ArrayList<String>(_command);", "+  public String cmdline() {", "+    return _cmdline;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e72c6679f84d033da95baa8a441a050", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/VariableData.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void addModifier(String s)", "signatureAfterChange": "   public void addModifier(String s)", "diff": ["-      _modifiersAndVisibility = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, newModifiers);", "+      _modifiersAndVisibility = new ModifiersAndVisibility(SourceInfo.NO_INFO, newModifiers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e9aa0f2229a4ede5ced5d072eee222a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 506, "methodNumberAfterChange": 494, "signatureBeforeChange": "    final private boolean jj_3R_258()", "signatureAfterChange": "    final private boolean jj_3R_268()", "diff": ["-  final private boolean jj_3R_258() {", "+", "+  final private boolean jj_3R_268() {", "-    if (jj_3R_94()) return true;", "+    if (jj_3R_97()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eb5856cc22351b2f09a5f5f04c2e4a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 607, "methodNumberAfterChange": 610, "signatureBeforeChange": "    final private boolean jj_3R_454()", "signatureAfterChange": "    final private boolean jj_3R_454()", "diff": ["-", "-    if (jj_3R_464()) jj_scanpos = xsp;", "+    if (jj_3R_465()) jj_scanpos = xsp;", "-    if (jj_3R_90()) return true;", "+    if (jj_3R_91()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3efcb4d0ccfe79e14530539ff5d60397", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "       private LeafNode<ItemT> getNodeForDoc(ItemT doc)", "signatureAfterChange": "   private LeafNode<ItemT> getNodeForDoc(ItemT doc)", "diff": ["+  /** Assumes lock on _model is already held */", "-    synchronized(_model) { return _doc2node.get(doc); }", "+//    synchronized(_model) { ", "+      return _doc2node.get(doc); ", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f034ff10158984f4e1908d612d0fa15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public Object visit(ComplementExpression node)", "signatureAfterChange": "   public Class visit(ComplementExpression node)", "diff": ["-     */", "-    public Object visit(ComplementExpression node) {", "-        // Check the type", "-        Node  n = node.getExpression();", "-        Class c = (Class)n.acceptVisitor(this);", "-", "-        if (c == char.class || c == byte.class || c == short.class) {", "-            node.setProperty(NodeProperties.TYPE, c = int.class);", "-        } else if (c == int.class  || c == long.class) {", "-            node.setProperty(NodeProperties.TYPE, c);", "-        } else {", "-            throw new ExecutionError(\"complement.expression.type\", node);", "-        }", "-", "-        // Compute the expression if it is constant", "-        if (n.hasProperty(NodeProperties.VALUE)) {", "-            Object o = n.getProperty(NodeProperties.VALUE);", "-            if (o instanceof Character) {", "-                o = new Integer(((Character)o).charValue());", "-            }", "-            if (c == int.class) {", "-\t\to = new Integer(~((Number)o).intValue());", "-            } else {", "-\t\to = new Long(~((Number)o).longValue());", "-            }", "-\t    node.setProperty(NodeProperties.VALUE, o);", "-        }", "-        return c;", "+   */", "+  public Class visit(ComplementExpression node) {", "+    // Check the type", "+    Node  n = node.getExpression();", "+    Class c = (Class)n.acceptVisitor(this);", "+    ", "+    if (c == char.class || c == byte.class || c == short.class) {", "+      node.setProperty(NodeProperties.TYPE, c = int.class);", "+    } else if (c == int.class  || c == long.class) {", "+      node.setProperty(NodeProperties.TYPE, c);", "+    } else {", "+      throw new ExecutionError(\"complement.expression.type\", node);", "+    ", "+    // Compute the expression if it is constant", "+    if (n.hasProperty(NodeProperties.VALUE)) {", "+      Object o = n.getProperty(NodeProperties.VALUE);", "+      if (o instanceof Character) {", "+        o = new Integer(((Character)o).charValue());", "+      }", "+      if (c == int.class) {", "+        o = new Integer(~((Number)o).intValue());", "+      } else {", "+        o = new Long(~((Number)o).longValue());", "+      }", "+      node.setProperty(NodeProperties.VALUE, o);", "+    }", "+    return c;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f078699208f18132b8fa75f30fd871b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "28f2b1ea23c948581f63408215b04510a86e87f3", "commitAfterChange": "45f11437d24a95250c66e3a94437d7de4d6682c1", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-        ", "-      workDir = new File( System.getProperty(\"user.dir\"));", "+      workDir = new File(System.getProperty(\"user.dir\"));", "-    _openChooser = new JFileChooser(workDir);", "+    _openChooser = new JFileChooser();", "+    _openChooser.setCurrentDirectory(workDir);", "-    _saveChooser = new JFileChooser(workDir);", "+    _saveChooser = new JFileChooser();", "+    _saveChooser.setCurrentDirectory(workDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f3a7eb442bdca57fee421fb7c85439d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "14370880ba431a91577f4a6da91962f3187c5d5d", "commitAfterChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public boolean runTestSuite()", "signatureAfterChange": "   public boolean runTestSuite()", "diff": ["+    ", "+    _log.log(\"runTestSuite() called\");", "-      ", "+      _reset();", "-      errors[0] = new JUnitError(null, -1, -1, e.getMessage(),", "-                                 false, \"\", \"\", StringOps.getStackTrace(e));", "+      errors[0] = new JUnitError(null, -1, -1, e.getMessage(), false, \"\", \"\", StringOps.getStackTrace(e));", "+      _reset();", "-      ", "-    finally {", "-      _suite = null;", "-      _testClassNames = null;", "-      _testFiles = null;", "-    }", "+    _log.log(\"Exiting runTestSuite()\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f57cbfad93acf06cac60e2e27571f8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/LogTest.java", "commitBeforeChange": "c797f7e57ea0230b6931e66637aa0a3d00547f03", "commitAfterChange": "0a16594b9476a5c9cc31dd37e345bf51d1d17aa2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testConcurrentWrites() throws IOException, InterruptedException", "signatureAfterChange": "   public void testConcurrentWrites() throws IOException, InterruptedException", "diff": ["-    File FILE3 = IOUtil.createAndMarkTempFile(\"logtest003\",\".txt\");", "-    Log log3 = new Log(FILE3, true);", "+    File file3 = IOUtil.createAndMarkTempFile(\"logtest003\",\".txt\");", "+    Log log3 = new Log(file3, true);", "-    BufferedReader fin = new BufferedReader(new FileReader(FILE3));", "+    BufferedReader fin = new BufferedReader(new FileReader(file3));", "-    assertEquals(\"Log open message\", \"Log '\" + FILE3.getName() + \"' opened\", s0.substring(30, 43+FILE3.getName().length()));", "+    assertEquals(\"Log open message\", \"Log '\" + file3.getName() + \"' opened\", s0.substring(30, 43+file3.getName().length()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f5ae75f3e0fe161c8ea44118d2c552c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "     @Override public Type visit(SuperFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(SuperFieldAccess node)", "diff": ["-        // TODO: Check accessibility of field", "+        checkAccessibility(ref.field(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f62ab5a51b986a4e86228c14bf9efd4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Object visit(ForStatement node)", "signatureAfterChange": "   public Class visit(ForStatement node)", "diff": ["+   */", "+  public Class visit(ForStatement node) {", "+    // Enter a new scope", "+    context.enterScope();", "+    ", "+    List l;", "+    // Check the statements", "+    if ((l = node.getInitialization()) != null) {", "+      checkList(l);", "+    }", "+    ", "+    Node cond = node.getCondition();", "+    if (cond != null) {", "+      // Check the condition", "+      if (cond.acceptVisitor(this) != boolean.class) {", "+        throw new ExecutionError(\"condition.type\", node);", "+      }", "+    }", "+    ", "+    if ((l = node.getUpdate()) != null) {", "+      checkList(l);", "+    }", "+    ", "+    node.getBody().acceptVisitor(this);", "+    ", "+    // Leave the current scope and store the defined variables", "+    // (a map of String-Class mappings) in the \"variables\" property", "+    node.setProperty(NodeProperties.VARIABLES, context.leaveScope());", "+    return null;", "+  }", "-     */", "-    public Object visit(ForStatement node) {", "-        // Enter a new scope", "-        context.enterScope();", "-", "-        List l;", "-        // Check the statements", "-        if ((l = node.getInitialization()) != null) {", "-            checkList(l);", "-        }", "-", "-\tNode cond = node.getCondition();", "-        if (cond != null) {", "-            // Check the condition", "-            if (cond.acceptVisitor(this) != boolean.class) {", "-                throw new ExecutionError(\"condition.type\", node);", "-            }", "-        }", "-", "-        if ((l = node.getUpdate()) != null) {", "-            checkList(l);", "-        }", "-", "-        node.getBody().acceptVisitor(this);", "-", "-        // Leave the current scope and store the defined variables", "-        // (a map of String-Class mappings) in the \"variables\" property", "-        node.setProperty(NodeProperties.VARIABLES, context.leaveScope());", "-        return null;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f671e49b994c4b7a0354e4d0bfd52f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 790, "methodNumberAfterChange": 795, "signatureBeforeChange": "    final private boolean jj_3R_88()", "signatureAfterChange": "    final private boolean jj_3R_89()", "diff": ["-", "-  final private boolean jj_3R_88() {", "-    if (jj_3R_131()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3_25()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_89() {", "+    if (jj_3R_135()) return true;", "+      if (jj_3_26()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f796cd54fe172799498330afad6f05c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/DiagonalCartesianIterable.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public boolean isFixed()", "signatureAfterChange": "      public R last()", "diff": ["-  public boolean isFixed() { return IterUtil.isFixed(_left) && IterUtil.isFixed(_right); }", "+  ", "+  public R last() { return _combiner.value(IterUtil.last(_left), IterUtil.last(_right)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f80f901503383e583225df625ea145b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "aa7f147d71330aa12463dfbc7a233e3ed25560e6", "commitAfterChange": "cfaac02e8e33f506b730c3f8ce96676d16b8f705", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 24, "signatureBeforeChange": "   void moveToPrompt()", "signatureAfterChange": "   void moveToPrompt()", "diff": ["-    _pane.setCaretPosition(_doc.getPromptPos());", "+    moveTo(_doc.getPromptPos());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f8447a29a47dad3777e61bc2d5297ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void defineConstant(String name, boolean value)", "signatureAfterChange": "   public void defineConstant(String name, boolean value)", "diff": ["-    ((InterpreterExtension)_djInterpreter).defineConstant(name, value);", "+    _djInterpreter.defineConstant(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f8cb55f285d48bb044a0ef2cd67c967", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 322, "methodNumberAfterChange": 769, "signatureBeforeChange": "    final private boolean jj_3R_264()", "signatureAfterChange": "    final private boolean jj_3R_264()", "diff": ["-", "-  final private boolean jj_3R_264() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_320()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_321()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_264() {", "+    if (jj_3R_321()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_322()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "400976e5aae8ec3cb82de36d446464ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 345, "methodNumberAfterChange": 345, "signatureBeforeChange": "    final private boolean jj_3R_425()", "signatureAfterChange": "    final private boolean jj_3R_426()", "diff": ["-", "-  final private boolean jj_3R_425() {", "-    if (jj_3R_206()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_446()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_426() {", "+    if (jj_3R_207()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_447()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "402e16328bf355e3de0d70aebad5c157", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2707043a47325658db92e0290e695128c6817bba", "commitAfterChange": "0c506ac270d6b542eb2c43fb49629be8c2634151", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": "   private boolean _closeProject()", "signatureAfterChange": "   private boolean _closeProject()", "diff": ["-      _saveProjectAction.setEnabled(false);", "+//      _saveProjectAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40359254e5052f15b80046611c46c082", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public void notifyActive()", "signatureAfterChange": "   public void notifyActive()", "diff": ["-//    int loc = _doc.getCurrentDefinitionsLocation();", "-    ", "-    super.setDocument(_doc.getDocument());", "+    super.setDocument(_doc);", "+    if(_doc.getUndoableEditListeners().length == 0){", "+      _resetUndo();", "+    }", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40360e5f72bcac18598062edaa3f9194", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 459, "methodNumberAfterChange": 456, "signatureBeforeChange": "    final private boolean jj_3R_481()", "signatureAfterChange": "    final private boolean jj_3R_490()", "diff": ["-  final private boolean jj_3R_481() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_483()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_484()) return true;", "-    }", "+  final private boolean jj_3R_490() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_492()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_493()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4044bb7ef8fae71b23ae07dc09c655e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ReverseHighlighter.java", "commitBeforeChange": "2aadb81a716e2a196f82baa127c28e3225664fab", "commitAfterChange": "c4ec4fbaa86590f5d9d73c067159d69b14149c37", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void removeAllHighlights()", "signatureAfterChange": "   public void removeAllHighlights()", "diff": ["-      int len = highlights.size();", "+      int len = _highlights.size();", "-          HighlightInfo hi = highlights.elementAt(i);", "+          HighlightInfo hi = _highlights.get(i);", "-        highlights.removeAllElements();", "+        _highlights.clear();", "-      int len = highlights.size();", "+      int len = _highlights.size();", "-          HighlightInfo info = highlights.elementAt(i);", "+          HighlightInfo info = _highlights.get(i);", "-        highlights.removeAllElements();", "+        _highlights.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "404c858709e9b3f0dbb38b41159e1305", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "c7cf97829e412463c33fef76eb49ab99dfa7be2a", "commitAfterChange": "3a763dc9fed92965e7c7369ee145c417374432d3", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public int _getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)", "signatureAfterChange": "   public int _getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)", "diff": ["-    /* */ assert Utilities.TEST_MODE || EventQueue.isDispatchThread();", "+    assert Utilities.TEST_MODE || EventQueue.isDispatchThread();", "-      // From the previous delimiter or start, find the next non-whitespace character (why?)", "+      // From the previous delimiter or start, find the next non-whitespace character (skips over blank lines)", "-      _storeInCache(key, wSPrefix, firstNonWS);  // relying on autoboxing", "+      _storeInCache(key, wSPrefix, Math.max(pos - 1, firstNonWS));  // relying on autoboxing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4055f9210b010d139180553378e9c4e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "22da2bba7b95020932a8f270ac3cc4c0581bd5d1", "commitAfterChange": "1acb63fa1c578959b54f9766299c6e0a8865f601", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testDocumentSwitching() throws BadLocationException", "signatureAfterChange": "   public void testDocumentSwitching() throws BadLocationException", "diff": ["-    clearEventQueue();", "-    clearEventQueue();", "-    clearEventQueue();", "-    clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4059c21e25bcab65444645701cf4d7dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testCompileAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException, InterruptedException", "diff": ["-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(false) {", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "405aaca4d4787b2828ebde87b5737b27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/HighlightManagerTest.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void setUp() throws Exception", "signatureAfterChange": "      public void setUp() throws Exception", "diff": ["+    jtc.setHighlighter(new ReverseHighlighter());", "-    p = new DefaultHighlighter.DefaultHighlightPainter(Color.BLACK);", "-    p1 = new DefaultHighlighter.DefaultHighlightPainter(Color.RED);", "-    p2 = new DefaultHighlighter.DefaultHighlightPainter(Color.BLACK);", "+    p = new ReverseHighlighter.DefaultHighlightPainter(Color.BLACK);", "+    p1 = new ReverseHighlighter.DefaultFrameHighlightPainter(Color.RED, 2);", "+    p2 = new ReverseHighlighter.DefaultHighlightPainter(Color.BLACK);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407274079a3604c1f488af59ae083d4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 601, "methodNumberAfterChange": 682, "signatureBeforeChange": "    final private boolean jj_3R_264()", "signatureAfterChange": "    final private boolean jj_3R_264()", "diff": ["-  final private boolean jj_3R_264() {", "-    if (jj_3R_290()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_316()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_264() {", "+    if (jj_3R_290()) {", "+    if (jj_3R_291()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407403d2bde1c796048fef17b97b2f66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionPrevLineStartsComment.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-      System.err.println(\"QuestionPrevLineStartsComment\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407832d82bd241e076e96901d5686a29", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testCancelSaveAsAlreadySaved()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCancelSaveAsAlreadySaved()     throws BadLocationException, IOException", "diff": ["-    setupDocument(FOO_TEXT);", "+    OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "-    _model.saveFile(new FileSelector(file));", "-    assertModified(false);", "-    assertContents(FOO_TEXT);", "+    doc.saveFile(new FileSelector(file));", "+    assertModified(false, doc);", "+    assertContents(FOO_TEXT, doc);", "-    changeDocumentText(BAR_TEXT);", "+    changeDocumentText(BAR_TEXT, doc);", "-    _model.saveFileAs(new CancelingSelector());", "+    doc.saveFileAs(new CancelingSelector());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407cecceca8b282c7bf3cea21da99e45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     @Override public Type visit(SimpleFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(SimpleFieldAccess node)", "diff": ["-      catch (InvalidTargetException e) { throw new RuntimeException(\"context produced bad type\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40809c4a91d3b2b703696af79c699618", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "791fd5c3da235c904ec8d063d9af32ea0cdcd48d", "commitAfterChange": "1fc28e4ffd44f1f2d7b1d062fbdf9f18f80ec19a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void buildInterface()", "signatureAfterChange": "     public void buildInterface()", "diff": ["-//js       _debugger.attachLogWriter(_logger);", "+      _debugger.attachLogWriter(_logger);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40859d3cfeb30f81275ef3bca3b96d93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testStartsWithPrefixNoText() throws BadLocationException", "signatureAfterChange": "   public void testStartsWithPrefixNoText() throws BadLocationException", "diff": ["-    assertTrue(\"line before brace (no space)\", !rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "-    assertTrue(\"just before brace (no space)\", rule.applyRule(_doc, 7, Indenter.IndentReason.OTHER));", "-    assertTrue(\"just after brace (no space)\", rule.applyRule(_doc, 8, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after brace (no space)\", !rule.applyRule(_doc, 10, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line before brace (no space)\", !rule.testApplyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"just before brace (no space)\", rule.testApplyRule(_doc, 7, Indenter.IndentReason.OTHER));", "+    assertTrue(\"just after brace (no space)\", rule.testApplyRule(_doc, 8, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after brace (no space)\", !rule.testApplyRule(_doc, 10, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line before brace (with space)\", !rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "-    assertTrue(\"just before brace (with space)\", rule.applyRule(_doc, 7, Indenter.IndentReason.OTHER));", "-    assertTrue(\"just after brace (with space)\", rule.applyRule(_doc, 11, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after brace (with space)\", !rule.applyRule(_doc, 14, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line before brace (with space)\", !rule.testApplyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"just before brace (with space)\", rule.testApplyRule(_doc, 7, Indenter.IndentReason.OTHER));", "+    assertTrue(\"just after brace (with space)\", rule.testApplyRule(_doc, 11, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after brace (with space)\", !rule.testApplyRule(_doc, 14, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40ba751f2565990340cbee38c0ddd179", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 805, "methodNumberAfterChange": 719, "signatureBeforeChange": "    final private boolean jj_3R_238()", "signatureAfterChange": "    final private boolean jj_3R_203()", "diff": ["-", "-  final private boolean jj_3R_238() {", "-    if (jj_scan_token(AND_ASSIGN)) return true;", "-    if (jj_3R_87()) return true;", "+", "+  final private boolean jj_3R_203() {", "+    if (jj_scan_token(AND_ASSIGN)) return true;", "+    if (jj_3R_78()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40e7010c978e5ae0c74552a69248e661", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "   public Class visit(InstanceOfExpression node)", "signatureAfterChange": "   public Class visit(InstanceOfExpression node)", "diff": ["-    ", "+", "-    if (((Class)node.getExpression().acceptVisitor(this)).isPrimitive()) {", "+    if ((node.getExpression().acceptVisitor(this)).isPrimitive()) {", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40ededd6cb3f26f5e815240983c1c81a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 590, "methodNumberAfterChange": 587, "signatureBeforeChange": "    final private boolean jj_3R_181()", "signatureAfterChange": "    final private boolean jj_3R_194()", "diff": ["-  final private boolean jj_3R_181() {", "+  final private boolean jj_3R_194() {", "-    if (jj_3R_100()) return true;", "+    if (jj_3R_102()) return true;", "-      if (jj_3R_573()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_269()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41026b79b01347b162e897ea9ebe2605", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void defineConstant(String name, float value)", "signatureAfterChange": "   public void defineConstant(String name, float value)", "diff": ["-    ((InterpreterExtension)_djInterpreter).defineConstant(name, value);", "+    _djInterpreter.defineConstant(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4102995da51ffc1f72313d16367143ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/TagFactory.java", "commitBeforeChange": "ab5f98cfbaf4d4f03ed7df38b403a2ed47f6970f", "commitAfterChange": "2956623adadc4e9d463894cafecdb1725bf77715", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static BuildDirTag makeBuildDirTag(File projFile, Reader r) throws IOException", "signatureAfterChange": "   public static BuildDirTag makeBuildDirTag(File projFile, Reader r) throws IOException", "diff": ["-    return new BuildDirTagImpl(_readAllEntries(BUILDDIR_TAG, projFile, r));", "+    return new BuildDirTagImpl(_readAllEntries(BUILDDIR_TAG, null, r));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41394a9c507fcd8b0567cf2fb31bb747", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void setListFont(Font f)", "signatureAfterChange": "   public void setListFont(Font f)", "diff": ["-    doc.acquireWriteLock();", "-    try { doc.setCharacterAttributes(0, doc.getLength() + 1, set, false); }", "-    finally { doc.releaseWriteLock(); }", "+//    doc.acquireWriteLock();", "+//    try { ", "+    doc.setCharacterAttributes(0, doc.getLength() + 1, set, false); ", "+//    }", "+//    finally { doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "419a95bf0516a1731a87e6c48e193453", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/MappedIterable.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public boolean isFixed()", "signatureAfterChange": "      public T last()", "diff": ["-  public boolean isFixed() { return IterUtil.isFixed(_source); }", "+  ", "+  public T last() { return _map.value(IterUtil.last(_source)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "419dc2cb19510b83dbf8c9fa46686af2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "95027e22cc0cbfaaf79d5f202e24f2763a52eb00", "commitAfterChange": "acb61ff7586f62b61a15637f6576fc3aff67ead1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public boolean isOnMatch()", "signatureAfterChange": "   public boolean isOnMatch()", "diff": ["-      return matchSpace.equals(_findWord);", "+      if (_matchCase)", "+        return matchSpace.equals(_findWord);", "+      else", "+        return matchSpace.toLowerCase().equals(_findWord.toLowerCase());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41b8f126867c2da336b0e481d2372a84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 811, "methodNumberAfterChange": 784, "signatureBeforeChange": "    final private boolean jj_3R_496()", "signatureAfterChange": "    final private boolean jj_3R_449()", "diff": ["-", "-  final private boolean jj_3R_496() {", "-    if (jj_3R_516()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_550()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_449() {", "+    if (jj_3R_463()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_501()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41ecd17bc9359596bf4722b21710e165", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 275, "methodNumberAfterChange": 448, "signatureBeforeChange": "    final private boolean jj_3R_172()", "signatureAfterChange": "    final private boolean jj_3R_104()", "diff": ["-", "-  final private boolean jj_3R_172() {", "-    if (jj_3R_31()) return true;", "-    if (jj_3R_187()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_104() {", "+    if (jj_3R_88()) return true;", "+    if (jj_3R_35()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41fd65a599905e4c187ecb9379dcdc20", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void runBare() throws Throwable", "signatureAfterChange": "   public void runBare() throws Throwable", "diff": ["-      _model.setActiveCompiler(compilers[i]);", "+      _model.getCompilerModel().setActiveCompiler(compilers[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41ffaedaf64f131714fb7648f1ee0c25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "a797200d44688f476bb3b782947a0efc580dd5e8", "commitAfterChange": "1de5cb95fee280565741d04f9d0c9ba9427f28c2", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 180, "signatureBeforeChange": "   boolean _closeProject()", "signatureAfterChange": "   boolean _closeProject()", "diff": ["+      _jarProjectAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4221330d246ba9082c5f9183242e83e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 350, "methodNumberAfterChange": 349, "signatureBeforeChange": "     public boolean checkIfClassFileInSync()", "signatureAfterChange": "     public boolean checkIfClassFileInSync()", "diff": ["-//        _log.log(\"checkIfClassFileInSync = false because isModifiedSinceSave()\");", "+        _log.log(\"checkIfClassFileInSync = false because isModifiedSinceSave()\");", "-//      _log.log(\"In checkIfClassFileInSync cacched value of classFile = \" + classFile);", "-      if (classFile == null) {", "+      _log.log(\"In checkIfClassFileInSync cacched value of classFile = \" + classFile);", "+      if (classFile == FileOps.NULL_FILE) {", "-//        _log.log(this + \": in checkIfClassFileInSync _locateClassFile() = \" + classFile);", "+        _log.log(this + \": in checkIfClassFileInSync _locateClassFile() = \" + classFile);", "-        if ((classFile == null) || (! classFile.exists())) {", "+        if ((classFile == FileOps.NULL_FILE) || (! classFile.exists())) {", "-//          _log.log(this + \": Could not find class file\");", "+          _log.log(this + \": Could not find class file\");", "-//        _log.log(this + \": File moved\");", "+        _log.log(this + \": File moved\");", "-//        _log.log(this + \": date stamps indicate modification\");", "+        _log.log(this + \": date stamps indicate modification\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42254d35913ae02b018ca557acd4dfab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 541, "methodNumberAfterChange": 544, "signatureBeforeChange": "    final private boolean jj_3R_470()", "signatureAfterChange": "    final private boolean jj_3R_472()", "diff": ["-  final private boolean jj_3R_470() {", "-    if (jj_3R_90()) return true;", "+  final private boolean jj_3R_472() {", "+    if (jj_3R_91()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42289f77952129b8c04b32889378715e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "cd56f7a2a82093e6e34728c0b5dc6babe9356e0a", "commitAfterChange": "6f37af6087e88b55d504fabdb6eee22be7ba1948", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public TestInteractionsModel(InteractionsDJDocument adapter)", "signatureAfterChange": "     public TestInteractionsModel(InteractionsDJDocument adapter)", "diff": ["-      super(adapter, 1000, 25);", "+      super(adapter, new File(System.getProperty(\"user.dir\")), 1000, 25);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "423600758aca501f2079fa7c2dfdea00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ToolbarOptionComponent.java", "commitBeforeChange": "9c5777f5c4beabc12e35e029719473305aed7334", "commitAfterChange": "6f3940face1890969eb276e9b92d09c044ad9646", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void resetToCurrent()", "signatureAfterChange": "   public void resetToCurrent()", "diff": ["-                 DrJava.getConfig().getSetting(OptionConstants.TOOLBAR_ICONS_ENABLED).booleanValue());", "+                 DrJava.getConfig().getSetting(OptionConstants.TOOLBAR_ICONS_ENABLED).booleanValue(),", "+                 DrJava.getConfig().getSetting(OptionConstants.TOOLBAR_ENABLED).booleanValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "423e48cf00554bf8beb39218788866ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/HistoryTest.java", "commitBeforeChange": "ae91856b53b869dea43c60b3424279a87db75fb5", "commitAfterChange": "a357e82c74cb27dc4ce8ef007203ad2bd5dfa25b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testGetHistoryAsString()", "signatureAfterChange": "   public void testGetHistoryAsString()", "diff": ["+", "+    Utilities.clearEventQueue();", "-    assertEquals(\"testGetHistoryAsString:\",", "-                 \"some text\" + newLine + \"some more text\" + newLine +", "-                 \"some text followed by a newline\" + newLine + newLine,", "-                 _history.getHistoryAsString());", "+    String str = ", "+      \"some text\" + newLine + \"some more text\" + newLine + \"some text followed by a newline\" + newLine + newLine;", "+    assertEquals(\"testGetHistoryAsString:\", str, _history.getHistoryAsString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "425f117d5b67d2aa7eaa4a31b7e1dca6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-eclipse/edu/rice/cs/drjava/model/compiler/EclipseCompiler.java", "commitBeforeChange": "8e720afa329dc77cc45a6aba8a5a211e38ce857f", "commitAfterChange": "8a50a7d4180dfbf8ce4f8b3b2ddf43887adf7c81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public boolean isAvailable()", "signatureAfterChange": "      public boolean isAvailable()", "diff": ["-      // Diagnostic was intruced in the Java 1.6 compiler", "+      // Diagnostic was introduced in the Java 1.6 compiler", "-      // javax.tools.Diagnostic is also found in rt.jar; to test if tools.jar", "-      // is availble, we need to test for a class only found in tools.jar", "-      Class.forName(\"com.sun.tools.javac.main.JavaCompiler\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "426143e3fd692274d2f9fb040a15a3a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocumentTest.java", "commitBeforeChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "commitAfterChange": "d07989306c43e4045df83ca1211956d5a85a21bd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testPackageNameWeird1() throws BadLocationException", "signatureAfterChange": "   public void testPackageNameWeird1()     throws BadLocationException, InvalidPackageException", "diff": ["-  public void testPackageNameWeird1() throws BadLocationException {", "+  public void testPackageNameWeird1()", "+    throws BadLocationException, InvalidPackageException", "+  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4276d4f8dfd0edc6056d7336e003557f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public Component getTreeCellRendererComponent(JTree tree, Object value, boolean isSelected, boolean isExpanded,                                                    boolean leaf, int row, boolean hasFocus)", "signatureAfterChange": "     public Component getTreeCellRendererComponent(JTree tree, Object value, boolean isSelected, boolean isExpanded,                                                    boolean leaf, int row, boolean hasFocus)", "diff": ["-            doc.acquireReadLock();", "+//            doc.acquireReadLock();", "-            finally { doc.releaseReadLock(); }", "+//            finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42789670dabe9bcc4c1b43d87dae8b3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "09bec3d114e78a39aad7410d5a4ed3ab2cdf1dc4", "commitAfterChange": "8ece0edfbf0fa97c28d74f8231f220f413cd26e5", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public void resetInteractions()", "signatureAfterChange": "   public void resetInteractions()", "diff": ["+    if (DrJava.getConfig().getSetting(OptionConstants.RESET_CLEAR_CONSOLE).booleanValue()) {", "+      resetConsole();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "427a5634d60a986de8039a93445abef3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "af1d1f7c09d0639a913d397da4b034d6533c94dd", "commitAfterChange": "b69aef73e5b8d21dd4d2a656e29a8bb8886fe618", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   private void _setupMiscPanel( ConfigPanel panel)", "signatureAfterChange": "   private void _setupMiscPanel(ConfigPanel panel)", "diff": ["-  private void _setupMiscPanel( ConfigPanel panel) {", "-    panel.addComponent( new IntegerOptionComponent ( OptionConstants.INDENT_LEVEL, \"Indent Level\", this));", "+  private void _setupMiscPanel(ConfigPanel panel) {", "+    panel.addComponent(new IntegerOptionComponent(OptionConstants.INDENT_LEVEL,", "+                                                  \"Indent Level\", this));", "-      new FileOptionComponent ( OptionConstants.WORKING_DIRECTORY, \"Working Directory\", this);", "+      new FileOptionComponent(OptionConstants.WORKING_DIRECTORY,", "+                               \"Working Directory\", this, _fileOptionChooser);", "-      public boolean accept (File f) {", "+      public boolean accept(File f) {", "-    panel.addComponent( workDir );", "-    panel.addComponent( new IntegerOptionComponent( OptionConstants.HISTORY_MAX_SIZE, \"Size of Interactions History\", this));", "-    panel.addComponent( new IntegerOptionComponent( OptionConstants.RECENT_FILES_MAX_SIZE, \"Recent Files List Size\", this));", "-    panel.addComponent( new BooleanOptionComponent ( OptionConstants.JAVAC_ALLOW_ASSERT, \"Allow Assert Keyword in Java 1.4\", this));", "-    panel.addComponent( new BooleanOptionComponent( OptionConstants.INTERACTIONS_EXIT_PROMPT, \"Prompt if Interactions Pane Exits Unexpectedly\", this));", "-    panel.addComponent( new BooleanOptionComponent( OptionConstants.QUIT_PROMPT, \"Prompt Before Quit\", this));", "-    panel.addComponent( new BooleanOptionComponent( OptionConstants.BACKUP_FILES, \"Keep emacs style backup files\", this));", "-    panel.addComponent( new BooleanOptionComponent( OptionConstants.JAVADOC_ALL_PACKAGES, \"Generate JavaDoc From Source Roots\", this));", "+    panel.addComponent(workDir);", "+    panel.addComponent(new IntegerOptionComponent(OptionConstants.HISTORY_MAX_SIZE, \"Size of Interactions History\", this));", "+    panel.addComponent(new IntegerOptionComponent(OptionConstants.RECENT_FILES_MAX_SIZE, \"Recent Files List Size\", this));", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.JAVAC_ALLOW_ASSERT, \"Allow Assert Keyword in Java 1.4\", this));", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.INTERACTIONS_EXIT_PROMPT, \"Prompt if Interactions Pane Exits Unexpectedly\", this));", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.QUIT_PROMPT, \"Prompt Before Quit\", this));", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.BACKUP_FILES, \"Keep emacs style backup files\", this));", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.JAVADOC_ALL_PACKAGES, \"Generate JavaDoc From Source Roots\", this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4293b381cef79f5a8950602eee3a4a5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "cbb9f04386fdbcd6c82a6f2a5ae6b635359499fb", "commitAfterChange": "e77b9389e0feb3169a20412f8892f630db108f0e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private void junitOpenDefDocs(final List<OpenDefinitionsDocument> lod, final boolean allTests)", "signatureAfterChange": "   private void junitOpenDefDocs(final List<OpenDefinitionsDocument> lod, final boolean allTests)", "diff": ["-      _notifier.compileBeforeJUnit(testAfterCompile);", "+      _notifyCompileBeforeJUnit(testAfterCompile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42941e303d8cd39661cdb4e631dd91a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavadocErrorPanel.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    protected CompilerErrorModel getErrorModel()", "signatureAfterChange": "    protected CompilerErrorModel getErrorModel()", "diff": ["-    return getModel().getJavadocErrorModel();", "+    return getModel().getJavadocModel().getJavadocErrorModel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "429a1a3d83636c72ad8970f3d51272c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavadocErrorPanel.java", "commitBeforeChange": "e2dfab60fe06b4a75e9a9d17c0a9c2d622def7c7", "commitAfterChange": "9ee7f82d7f7234787f3748460b46ad8c5d1fc967", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "signatureAfterChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "diff": ["-      DefaultStyledDocument doc = new DefaultStyledDocument();", "+      SwingDocument doc = new SwingDocument();", "-", "-      doc.insertString(doc.getLength(),", "-                       msg,", "-                       NORMAL_ATTRIBUTES);", "+      doc.append(msg, NORMAL_ATTRIBUTES);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "429cd70e398530c1295621151ce81085", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public int balanceForward()", "signatureAfterChange": "   public int balanceForward()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }  ", "+    finally { releaseReadLock(); }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42beebd79ff006af6f19d2c989aadaed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "ef93e6cc3a79f29ed28debb1108f1338b9a974ad", "commitAfterChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   private void _setupDebugPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDebugPanel(ConfigPanel panel)", "diff": ["-    sourcePath.setFileFilter(new DirectoryFilter(\"Source Directories\"));", "+    sourcePath.getFileChooser().setFileFilter(new DirectoryFilter(\"Source Directories\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42c2115ec9bccdf6352ade67a245824b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9d671cad5f849049059b2e199aea7279dd398525", "commitAfterChange": "ef7e8ed674f3435dc8cfe861d137f1cab241f5c2", "methodNumberBeforeChange": 706, "methodNumberAfterChange": 708, "signatureBeforeChange": "          public void interpreterReady(File wd)", "signatureAfterChange": "          public void interpreterReady(File wd)", "diff": ["+      _runAppletAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42c95202aa7236a2a4353bdc4d3c4952", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 839, "methodNumberAfterChange": 839, "signatureBeforeChange": "    final private boolean jj_3R_424()", "signatureAfterChange": "    final private boolean jj_3R_425()", "diff": ["-", "-  final private boolean jj_3R_424() {", "-    if (jj_3R_438()) return true;", "+  final private boolean jj_3R_425() {", "+    if (jj_3R_439()) return true;", "-      if (jj_3R_461()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_463()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42cb03b5ace0edbbe4069168d2d34a56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "c8a7a8a9d3d089ab42661ede7d141969c6ed2339", "commitAfterChange": "edb148d96e488bb5de94fe3df6063e44425ab166", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void compile(List<OpenDefinitionsDocument> defDocs) throws IOException", "signatureAfterChange": "   public void compile(List<OpenDefinitionsDocument> defDocs) throws IOException", "diff": ["-    File[] files = filesToCompile.toArray(new File[0]);", "+    File[] files = filesToCompile.toArray(new File[filesToCompile.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42d5ca9ffd5746746a668e9d66209850", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "32ba174b30cfff4f2c73188ded7fd810622e7e12", "commitAfterChange": "273b9e6fd6b611d74f03283118f3b2c112f6192d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected boolean _checkInteraction(String toCheck)", "signatureAfterChange": "   protected boolean _checkInteraction(String toCheck)", "diff": ["-        _notifier.interactionIncomplete();", "+        _notifyInteractionIncomplete();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f352233750700f3b2d7c11f62b027f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentRule.java", "commitBeforeChange": "558f3e76b0939d235eb8771fbc6a284d80a06f72", "commitAfterChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc);", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc, BraceReduction reducedModel);", "diff": ["-  public void indentLine(DefinitionsDocument doc);", "+  public void indentLine(DefinitionsDocument doc, BraceReduction reducedModel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "430078cb5b17a355d2480cc12b4e2ed9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 493, "methodNumberAfterChange": 490, "signatureBeforeChange": "    final private boolean jj_3R_187()", "signatureAfterChange": "    final private boolean jj_3R_188()", "diff": ["-", "-  final private boolean jj_3R_187() {", "+  final private boolean jj_3R_188() {", "-      if (jj_3R_573()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_576()) { jj_scanpos = xsp; break; }", "-    if (jj_3R_574()) jj_scanpos = xsp;", "+    if (jj_3R_577()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4308ed6468cc4740e7b45797128e9098", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "97a825e752ef3da28458a0080f0990b0f0659788", "commitAfterChange": "3f50a00dbfaba534529de5a114a9d7c30612e9a7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public DefaultGlobalModel()", "signatureAfterChange": "   public DefaultGlobalModel()", "diff": ["-    super();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4314659f63e2685c813dc9508910559d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/DebugTest.java", "commitBeforeChange": "9297bd3255995599281a9a548fcd6e849eecaf7b", "commitAfterChange": "b8d26b54d9d0d791e5e97a6dd352ae0f9f5f3b20", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public synchronized void XXXtestMultiThreadedSetCurrentThread() throws Exception", "signatureAfterChange": "   public synchronized void XXXtestMultiThreadedSetCurrentThread() throws Exception", "diff": ["-    _debugger.toggleBreakpoint(doc,index, 11, true);", "+    _debugger.toggleBreakpoint(doc,index, true);", "-    _debugger.toggleBreakpoint(doc,index, 17, true);", "+    _debugger.toggleBreakpoint(doc,index, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "431a02eef65f48a06852482c18f37174", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testIndentSameAsLineAboveAtEnd()       throws BadLocationException, OperationCanceledException", "signatureAfterChange": "   public void testIndentSameAsLineAboveAtEnd()       throws BadLocationException, OperationCanceledException", "diff": ["-    openDoc.syncCurrentLocationWithDefinitions(openDoc.getLength() - 1);", "-    int loc = openDoc.getCurrentDefinitionsLocation();", "+    openDoc.setCurrentLocation(openDoc.getLength() - 1);", "+    int loc = openDoc.getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43298c80ca562ab43362478f886dc9fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "1936e795bc2ab8d34c4602bb0e83d92772acfbeb", "commitAfterChange": "172a137f78cd92204a7df0201baea721bb8f9866", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 166, "signatureBeforeChange": "   private OpenDefinitionsDocument[] _openFiles(File[] files)     throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   private OpenDefinitionsDocument[] _openFiles(File[] files)     throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["-    throws IOException, OperationCanceledException, AlreadyOpenException {", "-    ", "-    //Log call stack", "-    LOG.log(\"_openFiles(...)\", new Throwable());", "-    //End log", "-    ", "+    throws IOException, OperationCanceledException, AlreadyOpenException {    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43585196cd065f751912dab19973309a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/repl/EclipseInteractionsModel.java", "commitBeforeChange": "1827cec0a07b944a36f95e36eebdc6666dc9617c", "commitAfterChange": "302914e42441eaa34fb8588c2f19600c7ec3298a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   protected void _notifyInterpreterResetting()", "signatureAfterChange": "   protected void _notifyInterpreterResetting()", "diff": ["-      ((InteractionsListener)_listeners.get(i)).interpreterResetting();", "+      _listeners.get(i).interpreterResetting();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "435c0add87507a020279d84b92f9da25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testReopenFile() throws BadLocationException, IOException", "signatureAfterChange": "   public void testReopenFile() throws BadLocationException, IOException", "diff": ["-", "+    _log.log(\"testReopenFile completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4369c08e424d505b774b5221a465254f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "d8dc2cdeba22db2fb0316de83a445bb83f56ae4d", "commitAfterChange": "fecb09777cd63cca239611fe19e85d2f0e8401e9", "methodNumberBeforeChange": 366, "methodNumberAfterChange": 350, "signatureBeforeChange": "    final private boolean jj_3R_607()", "signatureAfterChange": "    final private boolean jj_3R_603()", "diff": ["-  final private boolean jj_3R_607() {", "+  final private boolean jj_3R_603() {", "-    if (jj_3R_609()) {", "+    if (jj_3R_605()) {", "-    if (jj_3R_610()) return true;", "+    if (jj_3R_606()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "436d91150979736d48bb4f01387d36c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocument.java", "commitBeforeChange": "3bfda0ffd8a22eda2f2daab913b510305e1ef801", "commitAfterChange": "02d5c825c13aaa4caad6b7e4e89ccbdbfdc16c9f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 14, "signatureBeforeChange": "      protected int startCompoundEdit()", "signatureAfterChange": "     protected int startCompoundEdit()", "diff": ["-  protected int startCompoundEdit() { return 0; /* Do nothing */ }", "+ ", "+  protected int startCompoundEdit() { return _undoManager.startCompoundEdit(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43900fbbab5a30271b49f1e546b42a38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   private synchronized void _stepHelper(int flag, boolean shouldNotify)     throws DebugException", "signatureAfterChange": "   private synchronized void _stepHelper(int flag, boolean shouldNotify)     throws DebugException", "diff": ["-    List<StepRequest> steps = _eventManager.stepRequests();  // Added parameterization <StepRequest>. JDK 1.5 will eliminate this type warning", "+    List steps = _eventManager.stepRequests();  // Add parameterization <StepRequest>. JDK 1.5 will eliminate this type warning", "-      StepRequest step = steps.get(i);", "+      StepRequest step = (StepRequest)steps.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43a3f5667e2646acf7d1fa0ca9bd5e65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "5c952c5847e3008cec3ed5ff89d03d335c050f54", "commitAfterChange": "e3e56a8c058b51612dfa6f1f21259a37eadcdcbb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void setupDocs()", "signatureAfterChange": "   private void setupDocs()", "diff": ["-    { new File(\"//nowhere1\"),", "-      new File(\"//nowhere2\"),", "-      new File(\"//nowhere3\"),", "-      new File(\"//nowhere4\"),", "-      new File(\"//nowhere5\") };", "+    { new File(\"/tmp/nowhere1\"),", "+      new File(\"/tmp/nowhere2\"),", "+      new File(\"/tmp/nowhere3\"),", "+      new File(\"/tmp/nowhere4\"),", "+      new File(\"/tmp/nowhere5\") };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43b0035833b20a89e7328ffa625abe39", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public synchronized void testStepOverWithPackage()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testStepOverWithPackage()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-    throws DebugException, BadLocationException, IOException, InterruptedException", "+    throws DebugException, BadLocationException, DocumentAdapterException,", "+    IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43e5bd85eef9993cb9855c8e284aac0f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/SimpleInteractionsModel.java", "commitBeforeChange": "802c4acbf71daa5d149dbcd67d1f360241574951", "commitAfterChange": "aa79388b4b48beaf4e69dfd58d93bc4faeacb281", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public String getConsoleInput()", "signatureAfterChange": "   public String getConsoleInput()", "diff": ["+   */", "+  public String getConsoleInput() {", "+    _document.insertBeforeLastPrompt(\"Cannot read from System.in.\" + _newLine,", "+                                     InteractionsDocument.ERROR_STYLE);", "+    return \"\";", "+  }", "-   */", "-  public String getConsoleInput() {", "-    throw new UnsupportedOperationException(\"Cannot get input from System.in\");", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43eb23f6cfa1f1226ff433422ac3775d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void compileProject() throws IOException", "signatureAfterChange": "   public void compileProject() throws IOException", "diff": ["-    if (_prepareForCompile()) {", "-      _doCompile(_model.getProjectDocuments());", "-    }", "+    if (_prepareForCompile()) { _doCompile(_model.getProjectDocuments()); }", "+    else _notifier.compileAborted(new UnexpectedException(\"Project contains unsaved modified files\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43f41c3960080adb71038d266858a70a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ReaderWriterLockTest.java", "commitBeforeChange": "7933cc364884763a44a085994870596faa04b316", "commitAfterChange": "b978cac1d85997e83464382e4a499c19d736223c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testMultipleReaders() throws InterruptedException", "signatureAfterChange": "   public void testMultipleReaders() throws InterruptedException", "diff": ["-   */", "+    */", "-    final StringBuffer buf = new StringBuffer();", "+    final StringBuilder buf = new StringBuilder();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43f567b6917c1b06a1382887019e9bec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 268, "methodNumberAfterChange": 235, "signatureBeforeChange": "    final private boolean jj_3R_134()", "signatureAfterChange": "    final private boolean jj_3R_131()", "diff": ["-  final private boolean jj_3R_134() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_40()) return true;", "-    if (jj_3R_176()) {", "-    if (jj_3R_177()) return true;", "+", "+  final private boolean jj_3R_131() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_37()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_173()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_174()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "443102166f951eb3f05e3f88d2fcadc1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorStringOptionComponent.java", "commitBeforeChange": "b59ea5c5062a947f96790df7fe854009e693434a", "commitAfterChange": "51e686ba41ead06ef0f1c4bec2b00eaf247dbe80", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void chooseString()", "signatureAfterChange": "   public void chooseString()", "diff": ["-        _listModel.addElement(s);", "+        _addValue(s);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44428d16b661c6dee242ac27250826e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b5ca75a763639d99a2083bfdef1e75146bdb59d3", "commitAfterChange": "7f0431102d802f25498e6ad5a22057f937b25cb6", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    _outputView.makeActive();", "+    //_outputView.makeActive();", "+    /*", "+    */", "-    getContentPane().add(split3, BorderLayout.SOUTH);", "+    getContentPane().add(_errorPanel, BorderLayout.SOUTH);", "-", "-    //getContentPane().setLayout(new BoxLayout(getContentPane(),BoxLayout.Y_AXIS));", "-//    show();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44494dfebbf8caa0040cd8c32f9de4a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "2707043a47325658db92e0290e695128c6817bba", "commitAfterChange": "0c506ac270d6b542eb2c43fb49629be8c2634151", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 77, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException", "diff": ["-    ", "+    setBuildDirectory(buildDir);", "+    ", "+    setProjectChanged(false);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4451b594cc46305e831d3b9e5cbc916d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void forAnonymousClassInstantiation(AnonymousClassInstantiation e)", "signatureAfterChange": "   public void forAnonymousClassInstantiation(AnonymousClassInstantiation e)", "diff": ["-", "+    _log.log(\"Augmenting anonymous class \" + e + \" with SymbolData \" + sd);", "-      else {writeEquals(className, sd, baseIndent, valueEqualsName);}", "+      else { writeEquals(className, sd, baseIndent, valueEqualsName); }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44605eb21db59243c7487b516c10df52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 218, "methodNumberAfterChange": 221, "signatureBeforeChange": "      private void _compileFolder()", "signatureAfterChange": "      private void _compileFolder()", "diff": ["+    update(getGraphics()); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "446555f4a19a86fc0affe4d57b1a47d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "     public Object visit(ExclusiveOrExpression node)", "signatureAfterChange": "   public Class visit(ExclusiveOrExpression node)", "diff": ["+   */", "+  public Class visit(ExclusiveOrExpression node) {", "+    Class c = visitBitwiseExpression(node);", "+    ", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.xOr", "+           (c,", "+            ln.getProperty(NodeProperties.VALUE),", "+            rn.getProperty(NodeProperties.VALUE)));", "+    }", "+    return c;", "+  }", "-     */", "-    public Object visit(ExclusiveOrExpression node) {", "-        Class c = visitBitwiseExpression(node);", "-", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.xOr", "-                     (c,", "-                      ln.getProperty(NodeProperties.VALUE),", "-                      rn.getProperty(NodeProperties.VALUE)));", "-        }", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4489a8b49bdaf894120bf70705f3f313", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "ef93e6cc3a79f29ed28debb1108f1338b9a974ad", "commitAfterChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "    public Component _excludedFilesComponent()", "signatureAfterChange": "    public Component _excludedFilesComponent()", "diff": ["-    _excludedFilesList.setFileFilter(new JavaSourceFilter());", "+    _excludedFilesList.getFileChooser().resetChoosableFileFilters();", "+    _excludedFilesList.getFileChooser().addChoosableFileFilter(new JavaSourceFilter());", "+    _excludedFilesList.getFileChooser().setFileFilter(new SmartSourceFilter());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4491829deb90ef76f0bbd27d85ff263c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelConverter.java", "commitBeforeChange": "9e497bdeba5d2ec8cfd80ebdb938cf6935007939", "commitAfterChange": "8015cc1e53ce6d8dc00c5faf652f2b4ef39fe4e9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>   convert(File[] files, Options options)", "signatureAfterChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>   convert(File[] files, Options options)", "diff": ["-                files = (File[]) newFiles.toArray(new File[newFiles.size()]);", "+                files = newFiles.toArray(new File[newFiles.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "449483a546cf0998530cee1d4c12d003", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 898, "signatureBeforeChange": "    final private boolean jj_3R_107()", "signatureAfterChange": "    final private boolean jj_3R_110()", "diff": ["-", "-  final private boolean jj_3R_107() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_52()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_174()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_110() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_56()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_177()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44a3d39aea06aa5183827b9a2755042a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DefaultInteractionsModel.java", "commitBeforeChange": "802c4acbf71daa5d149dbcd67d1f360241574951", "commitAfterChange": "aa79388b4b48beaf4e69dfd58d93bc4faeacb281", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "   protected void _notifyInterpreterResetFailed(Throwable t)", "signatureAfterChange": "   protected void _notifyInterpreterResetFailed(final Throwable t)", "diff": ["-  protected void _notifyInterpreterResetFailed(Throwable t) {", "-    // Print the exception to the console", "-//    StringWriter sw = new StringWriter();", "-//    PrintWriter pw = new PrintWriter(sw);", "-//    t.printStackTrace(pw);", "-//    _model.systemErrPrint(sw.toString());", "-    _model.systemErrPrint(StringOps.getStackTrace(t));", "+  protected void _notifyInterpreterResetFailed(final Throwable t) {", "-        l.interpreterResetFailed();", "+        l.interpreterResetFailed(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44b3647f1005b0e69fdf28d0eb44fbb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 474, "methodNumberAfterChange": 441, "signatureBeforeChange": "    final private boolean jj_3R_127()", "signatureAfterChange": "    final private boolean jj_3R_130()", "diff": ["-", "-  final private boolean jj_3R_127() {", "-    if (jj_3R_102()) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_130() {", "+    if (jj_3R_105()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44b8e74a74c7cef768147dcf889810de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1c3947ce9682f305287b6afe6b5c5d87597bae6f", "commitAfterChange": "0acb22a1f5b2329a270795e5839a4690952252ed", "methodNumberBeforeChange": 398, "methodNumberAfterChange": 398, "signatureBeforeChange": "   private void _openProjectHelper(File projectFile)", "signatureAfterChange": "   private void _openProjectHelper(File projectFile)", "diff": ["+      _setUpProjectButtons(projectFile);", "+      _openProjectUpdate();", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44dafac3c34943a53948f6fcb6e10799", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 314, "methodNumberAfterChange": 457, "signatureBeforeChange": "    final private boolean jj_3R_437()", "signatureAfterChange": "    final private boolean jj_3R_452()", "diff": ["-", "-  final private boolean jj_3R_437() {", "-    if (jj_3R_449()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_480()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_452() {", "+    if (jj_3R_474()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_488()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45178f32aac6e722cde90922abe97f1b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": "   public void toggleBookmark(int pos1, int pos2)", "signatureAfterChange": "   public void toggleBookmark(int pos1, int pos2)", "diff": ["-//    final OpenDefinitionsDocument doc = getActiveDocument();", "-//    doc.acquireReadLock();", "-//    try { ", "-      _toggleBookmark(pos1, pos2); ", "-//    }", "-//    finally { doc.releaseReadLock(); }", "+    final OpenDefinitionsDocument doc = getActiveDocument();", "+    doc.acquireReadLock();", "+    try { _toggleBookmark(pos1, pos2); }", "+    finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4518cfacf2160e2d2b2acbd7a741c136", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 527, "methodNumberAfterChange": 524, "signatureBeforeChange": "    final private boolean jj_3_43()", "signatureAfterChange": "    final private boolean jj_3_45()", "diff": ["-", "-  final private boolean jj_3_43() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_91()) return true;", "-    if (jj_3R_328()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3_45() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_92()) return true;", "+    if (jj_3R_331()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "451e291b5bbe1a4e7687d73bf6ea91d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "e46a32975ae91e70bdf8060ed36ba4beb682ced4", "commitAfterChange": "5cb9931cd4d17d4bcf0e028e2763a314647f8344", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   private static List<File> _testFileSort(List<File> files)", "signatureAfterChange": "   private static List<File> _testFileSort(List<File> files)", "diff": ["-//    return otherFiles.addAll(testFiles);  // rejected by compiler bug!", "-    for (File f: testFiles) otherFiles.add(f);", "+    otherFiles.addAll(testFiles);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4535875312833c2945d56400b4ba0f1a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "522409555bee6fc5adafe9f990caa841ba94a3ec", "commitAfterChange": "52a1b40a342403f03cb2b7e4cdf8d8b28874a356", "methodNumberBeforeChange": 746, "methodNumberAfterChange": 746, "signatureBeforeChange": "   private void _setUpKeyBindingMaps()", "signatureAfterChange": "   private void _setUpKeyBindingMaps()", "diff": ["-    kbm.put(KEY_BACKWARD_SELECT, actionMap.get(DefaultEditorKit.selectionBackwardAction), null, \"Select Backward\");", "+    kbm.put(KEY_BACKWARD_SELECT, actionMap.get(DefaultEditorKit.selectionBackwardAction), null, \"Backward (Select)\");", "-    kbm.put(KEY_BEGIN_DOCUMENT_SELECT, actionMap.get(DefaultEditorKit.selectionBeginAction), null, \"Select Begin Document\");", "+    kbm.put(KEY_BEGIN_DOCUMENT_SELECT, actionMap.get(DefaultEditorKit.selectionBeginAction), null, \"Begin Document (Select)\");", "-    kbm.put(KEY_BEGIN_LINE_SELECT, _selectionBeginLineAction, null, \"Select Begin Line\");", "+    kbm.put(KEY_BEGIN_LINE_SELECT, _selectionBeginLineAction, null, \"Begin Line (Select)\");", "-    kbm.put(KEY_PREVIOUS_WORD_SELECT, actionMap.get(_currentDefDoc.getEditor().selectionPreviousWordAction), null, \"Select Previous Word\");", "+    kbm.put(KEY_PREVIOUS_WORD_SELECT, actionMap.get(_currentDefDoc.getEditor().selectionPreviousWordAction), null, \"Previous Word (Select)\");", "-    kbm.put(KEY_DOWN_SELECT, actionMap.get(DefaultEditorKit.selectionDownAction), null, \"Select Down\");", "+    kbm.put(KEY_DOWN_SELECT, actionMap.get(DefaultEditorKit.selectionDownAction), null, \"Down (Select)\");", "-    kbm.put(KEY_END_DOCUMENT_SELECT, actionMap.get(DefaultEditorKit.selectionEndAction), null, \"Select End Document\");", "+    kbm.put(KEY_END_DOCUMENT_SELECT, actionMap.get(DefaultEditorKit.selectionEndAction), null, \"End Document (Select)\");", "-    kbm.put(KEY_END_LINE_SELECT, actionMap.get(DefaultEditorKit.selectionEndLineAction), null, \"Select End Line\");", "+    kbm.put(KEY_END_LINE_SELECT, actionMap.get(DefaultEditorKit.selectionEndLineAction), null, \"End Line (Select)\");", "-    kbm.put(KEY_NEXT_WORD_SELECT, actionMap.get(_currentDefDoc.getEditor().selectionNextWordAction), null, \"Select Next Word\");", "+    kbm.put(KEY_NEXT_WORD_SELECT, actionMap.get(_currentDefDoc.getEditor().selectionNextWordAction), null, \"Next Word (Select)\");", "-    kbm.put(KEY_FORWARD_SELECT, actionMap.get(DefaultEditorKit.selectionForwardAction), null, \"Select Forward\");", "+    kbm.put(KEY_FORWARD_SELECT, actionMap.get(DefaultEditorKit.selectionForwardAction), null, \"Forward (Select)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "456fa47e41a7f0379adb4f2824de9617", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "1ca22d8d9e892abbe72cd6aa5627cc7ce0e56b03", "commitAfterChange": "024873f55ad7ba6280213fee7183c6688ba3b395", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "       public Object forValueResult(ValueResult that)", "signatureAfterChange": "       public Object forValueResult(ValueResult that)", "diff": ["-        synchronized(TestJVMExtension.this) {", "+        synchronized(_testLock) {", "-          TestJVMExtension.this.notify();", "+          _testLock.notify();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45729178068ab195e05025068f78b5d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/EventHandlerThread.java", "commitBeforeChange": "27f4730bb628f4f21b5ace9b8592e93a615017f8", "commitAfterChange": "08f616afaebe02cc02ba5da4da4990852caead81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void run()", "signatureAfterChange": "   public void run()", "diff": ["+    _log.log(\"Debugger starting\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4583a083d34ae8ce8067773b47333958", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 273, "methodNumberAfterChange": 273, "signatureBeforeChange": "    public JViewport getDefViewport()", "signatureAfterChange": "    public JViewport getDefViewport()", "diff": ["-    JScrollPane defScroll = (JScrollPane)", "-      _defScrollPanes.get(_model.getActiveDocument());", "+    JScrollPane defScroll = _defScrollPanes.get(_model.getActiveDocument());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4598b86a87725a381cc39c44d235846c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "86073a7fb314101fbea8399fc18b3a4415cbc887", "commitAfterChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 99, "signatureBeforeChange": "   private JMenu _setUpToolsMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpToolsMenu(int mask)", "diff": ["-    tmpItem = toolsMenu.add(_compileAction);", "-    tmpItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0));", "-", "-    // keep track of the compile menu item", "-    _compileMenuItem = tmpItem;", "+    if (!CodeStatus.DEVELOPMENT) {", "+      tmpItem = toolsMenu.add(_compileAction);", "+      tmpItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0));", "+    }", "+    else", "+      _addMenuItem(toolsMenu, _compileAction, KEY_COMPILE);", "-    _abortInteractionMenuItem = toolsMenu.add(_abortInteractionAction);", "-    _abortInteractionMenuItem", "-      .setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0));", "+    if (!CodeStatus.DEVELOPMENT) {", "+      tmpItem = toolsMenu.add(_abortInteractionAction);", "+      tmpItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0));", "+    }", "+    else", "+      _addMenuItem(toolsMenu, _abortInteractionAction, KEY_ABORT_INTERACTION);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "459b07303be121451a6da8729d34cd45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private void _javadocDocumentWorker(File destDirFile, File docFile, String classPath)", "signatureAfterChange": "   private void _javadocDocumentWorker(File destDir, File docFile, String classPath)", "diff": ["-   */", "-  private void _javadocDocumentWorker(File destDirFile, File docFile, String classPath) {", "-    if (!_ensureValidToolsJar()) return;", "+    */", "+  private void _javadocDocumentWorker(File destDir, File docFile, String classPath) {", "+//    if (!_ensureValidToolsJar()) return;  // addresses on 1.3/1.4 incompatiblies; no longer relevant", "-    String destDir = destDirFile.getAbsolutePath();", "-    ArrayList<String> args = _buildCommandLineArgs(docFile, destDir, classPath);", "+    String destDirName = destDir.getAbsolutePath();", "+    ArrayList<String> args = _buildCommandLineArgs(docFile, destDirName, classPath);", "-    _runJavadoc(args, classPath, destDirFile, false);", "+    _runJavadoc(args, classPath, destDir, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45a42fac9a309f4e884ac8d0089e0031", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "7c08a03fcf153ca2c9048dee25c86a55f361ac62", "commitAfterChange": "54139845b7b497599e6df6198987b23e58827d38", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 166, "signatureBeforeChange": "   private OpenDefinitionsDocument[] _openFiles(File[] files)     throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   private OpenDefinitionsDocument[] _openFiles(File[] files)     throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["+    ", "+    //Log call stack", "+    LOG.log(\"_openFiles(...)\", new Throwable());", "+    //End log", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45c62d375dde7fe39a50d720f1836fe3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "   void _openJavadocUnderCursor()", "signatureAfterChange": "   void _openJavadocUnderCursor()", "diff": ["-    odd.readLock();", "+    odd.acquireReadLock();", "-    finally { odd.readUnlock(); }", "+    finally { odd.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45f40211d4493ce21a4cf0a802e66698", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "200037d181721d5a77f697343bf01da60193d9d5", "commitAfterChange": "7800062ae81518c3396891f7a26a405437cbcbf7", "methodNumberBeforeChange": 762, "methodNumberAfterChange": 762, "signatureBeforeChange": "   public static void openExtProcessJarFile(File file)", "signatureAfterChange": "   public static void openExtProcessJarFile(File file)", "diff": ["-      ExecuteExternalDialog.addToMenu(xc.get(\"drjava/extprocess/name\"), xc.get(\"drjava/extprocess/cmdline\"),", "+      String name = xc.get(\"drjava/extprocess/name\");", "+      ExecuteExternalDialog.addToMenu(name, xc.get(\"drjava/extprocess/cmdline\"),", "+      JOptionPane.showMessageDialog(null, \"The installation was successful for:\\n\"+name,", "+                                    \"Installation Successful\", JOptionPane.INFORMATION_MESSAGE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45fb9c382f5d1380db7829faecf9fb78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public ClassInfo get(String cn)", "signatureAfterChange": "   public ClassInfo get(String cn)", "diff": ["-    return (ClassInfo)classes.get(cn);", "+    return classes.get(cn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4605fdf62077233e5adf7912136ee5b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AboutDialog.java", "commitBeforeChange": "97f966af08ae6bec968f68d8b2fce6c5531a12b8", "commitAfterChange": "d4f8b5e1e15fc2c34ba6969d4ef7bdb04cc8916b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public AboutDialog(JFrame owner, String text)", "signatureAfterChange": "      public AboutDialog(JFrame owner)", "diff": ["-  public AboutDialog(JFrame owner, String text) {", "-    this(owner);", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "460a3e19682e1685e8a5e4435a6f630a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ae443ba61aae036767efae485582e591ba7ac6b0", "commitAfterChange": "3d4c01f25680b3cdf3ea4a15c4351cb56ab5c8db", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "   public void generateJavaAPIList()", "signatureAfterChange": "   public void generateJavaAPIList()", "diff": ["-        BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));", "-        String line = br.readLine();", "-        while(line != null) {", "-          final String aText = \"<a href=\\\"\";", "-          int aPos = line.toLowerCase().indexOf(aText);", "-          int aEndPos = line.toLowerCase().indexOf(\".html\\\" \",aPos);", "-          if ((aPos>=0) && (aEndPos>=0)) {", "-            String link = line.substring(aPos+aText.length(), aEndPos);", "-            String fullClassName = link.replace('/', '.');", "-            String simpleClassName = fullClassName;", "-            int lastDot = fullClassName.lastIndexOf('.');", "-            if (lastDot>=0) { simpleClassName = fullClassName.substring(lastDot + 1); }", "-            try {", "-              _javaAPIList.add(new JavaAPIListEntry(simpleClassName, fullClassName, new URL(base + \"/\" + link + \".html\")));", "+        InputStream urls = url.openStream();", "+        InputStreamReader is = null;", "+        BufferedReader br = null;", "+        try {", "+          is = new InputStreamReader(urls);", "+          br = new BufferedReader(is);", "+          String line = br.readLine();", "+          while(line != null) {", "+            final String aText = \"<a href=\\\"\";", "+            int aPos = line.toLowerCase().indexOf(aText);", "+            int aEndPos = line.toLowerCase().indexOf(\".html\\\" \",aPos);", "+            if ((aPos>=0) && (aEndPos>=0)) {", "+              String link = line.substring(aPos+aText.length(), aEndPos);", "+              String fullClassName = link.replace('/', '.');", "+              String simpleClassName = fullClassName;", "+              int lastDot = fullClassName.lastIndexOf('.');", "+              if (lastDot>=0) { simpleClassName = fullClassName.substring(lastDot + 1); }", "+              try {", "+                _javaAPIList.add(new JavaAPIListEntry(simpleClassName, fullClassName, new URL(base + \"/\" + link + \".html\")));", "+              }", "+              catch(MalformedURLException mue) { /* ignore, we'll just not put this class in the list */ }", "-            catch(MalformedURLException mue) { /* ignore, we'll just not put this class in the list */ }", "+            line = br.readLine();", "-          line = br.readLine();", "+        }", "+        finally {", "+\t  if (br!=null) { br.close(); }", "+          if (is!=null) { is.close(); }", "+          if (urls!=null) { urls.close(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "463f6ac77c856d351ff2b2265b922322", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "54a2d5af359edd99cce3e2b74ded93b4c8c0d9e9", "commitAfterChange": "7c8486700bb21647b6fbe2818464471123c8ab80", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "     public void updateKeyBindings()", "signatureAfterChange": "     public void updateKeyBindings()", "diff": ["-      for(KeyStroke ks: im.keys()) { im.remove(ks); }", "-      for(KeyStroke ks: _oldInputMap.keys()) { im.put(ks, _oldInputMap.get(ks)); }", "+      if (im.keys()!=null) { // im.keys() may be null!", "+        for(KeyStroke ks: im.keys()) { im.remove(ks); }", "+      }", "+      if (_oldInputMap.keys()!=null) { // keys() may return null!", "+        for(KeyStroke ks: _oldInputMap.keys()) { im.put(ks, _oldInputMap.get(ks)); }", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4644eeabf0a1f8437236e5297ce39ab6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/CompletionMonitor.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   synchronized public boolean waitOne()", "signatureAfterChange": "   public boolean attemptInsureSignalled()", "diff": ["-   * @return returns true, unless the waiting thread was interrupted */", "-  synchronized public boolean waitOne() {", "-    while (!_flag) {", "-      try { this.wait(); } ", "-      catch (InterruptedException e) { return false; }", "-    }", "-    return true;", "+   */", "+  public boolean attemptInsureSignalled() {", "+    try { insureSignalled(); return true; }", "+    catch (InterruptedException e) { return false; }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46543cb89db7fbc44137a57fa43f3591", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "8ef01ff7dae7656ff59dc814e0fb4a096d2a2827", "commitAfterChange": "76ce5c1e6d0d42efdd9a8c7d0d65c94a26775711", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public void toggleDebugger()", "signatureAfterChange": "   public void toggleDebugger()", "diff": ["-      _debuggerEnabledMenuItem.setState(false);", "+      _setDebugMenuItemsEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4662a74e5c79dafee35d8c0434ad2a5d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testCompileAbortsIfUnsaved() throws BadLocationException", "signatureAfterChange": "   public void testCompileAbortsIfUnsaved()     throws BadLocationException, IOException", "diff": ["-  public void testCompileAbortsIfUnsaved() throws BadLocationException {", "+  public void testCompileAbortsIfUnsaved()", "+    throws BadLocationException, IOException", "+  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46740cb5317c9899a4b03a1eb9db3b90", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 45, "signatureBeforeChange": "       public void compileAll() throws IOException", "signatureAfterChange": "     public void compileAll() throws IOException", "diff": ["-      //throws UnsupportedOperationException", "-      public void compileAll() throws IOException{", "-        throw new UnsupportedOperationException(\"AbstractGlobalModel does not support compilation\");", "-        }", "+    //throws UnsupportedOperationException", "+    public void compileAll() throws IOException {", "+      throw new UnsupportedOperationException(\"AbstractGlobalModel does not support compilation\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46810fbd523c76d2b61a88a172577bf4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 412, "methodNumberAfterChange": 295, "signatureBeforeChange": "    final private boolean jj_3R_603()", "signatureAfterChange": "    final private boolean jj_3R_628()", "diff": ["+  final private boolean jj_3R_628() {", "+    if (jj_3R_83()) return true;", "+    if (jj_3R_589()) return true;", "-", "-  final private boolean jj_3R_603() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_80()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_585()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46875db77af4571e98b6146bcb6b1db8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected String getQualifiedClassName(String className)", "signatureAfterChange": "   protected String getQualifiedClassName(String className)", "diff": ["-    if (!_package.equals(\"\") && ! className.startsWith(_package)) { return _package + \".\" + className;}", "+    if (! _package.equals(\"\") && ! className.startsWith(_package)) { return _package + '.' + className;}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "468eb8e0f42f5a82a470613d18130b64", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "65d59a6eb5c83a25b9e6bfdf698fd61ca6d2f695", "commitAfterChange": "28f2b1ea23c948581f63408215b04510a86e87f3", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 69, "signatureBeforeChange": "   public File getSaveFile() throws OperationCanceledException", "signatureAfterChange": "   public File getSaveFile(JFileChooser jfc) throws OperationCanceledException", "diff": ["-  public File getSaveFile() throws OperationCanceledException {", "+  public File getSaveFile(JFileChooser jfc) throws OperationCanceledException {", "-    File selection = _saveChooser.getSelectedFile();", "+    File selection = jfc.getSelectedFile();//_saveChooser.getSelectedFile();", "-      _saveChooser.setSelectedFile(new File(active.getClassName()));", "-    } ", "-", "-    int rc = _saveChooser.showSaveDialog(this);", "-    return getChosenFile(_saveChooser, rc);", "+      jfc.setSelectedFile(new File(active.getClassName()));", "+    }", "+    int rc = jfc.showSaveDialog(this);//_saveChooser.showSaveDialog(this);", "+    return getChosenFile(jfc, rc);//_saveChooser, rc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "469cda5b354f2ce8c78401fd3428cbd4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 702, "methodNumberAfterChange": 689, "signatureBeforeChange": "    final private boolean jj_3R_482()", "signatureAfterChange": "    final private boolean jj_3R_485()", "diff": ["-", "-  final private boolean jj_3R_482() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_33()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_485()) return true;", "+  final private boolean jj_3R_485() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_34()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_488()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46af9bcdde531cdaf25079994744f3b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "fe8313235aadf72c5997fe5caee2f8dfd83cf0f0", "commitAfterChange": "83ec4c1ee83807974f1120df6a09cd37da57c105", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public Pair<R, R> getRegionInterval(OpenDefinitionsDocument odd, int offset)", "signatureAfterChange": "   public Pair<R, R> getRegionInterval(OpenDefinitionsDocument odd, int offset)", "diff": ["-/* */ assert Utilities.TEST_MODE || EventQueue.isDispatchThread();", "+    assert Utilities.TEST_MODE || EventQueue.isDispatchThread();", "-    @SuppressWarnings(\"unchecked\")", "-    SortedSet<R> tail = getTailSet((R) new DocumentRegion(odd, 0, offset - 119));", "+    @SuppressWarnings(\"unchecked\") // max operator inserted to ensure that [start,end) interval is non-degenerate.", "+    SortedSet<R> tail = getTailSet((R) new DocumentRegion(odd, 0, Math.max(0, offset - 119)));  ", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46b6c8a78f6f80b83e636cf68ac96ae6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 720, "methodNumberAfterChange": 256, "signatureBeforeChange": "    final private boolean jj_3R_460()", "signatureAfterChange": "    final private boolean jj_3R_440()", "diff": ["+", "+  final private boolean jj_3R_440() {", "+    if (jj_3R_87()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_459()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_460() {", "-    if (jj_3R_85()) return true;", "-    if (jj_3R_462()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46bc80a6fcdb81c948e4572904788248", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "ae91856b53b869dea43c60b3424279a87db75fb5", "commitAfterChange": "a357e82c74cb27dc4ce8ef007203ad2bd5dfa25b", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "diff": ["+    ", "+    Utilities.clearEventQueue();", "-", "-    assertEquals(\"contents of saved file 2nd write\",", "-                 BAR_TEXT,", "-                 FileOps.readFileAsString(file));", "-", "+    assertEquals(\"contents of saved file 2nd write\", BAR_TEXT, FileOps.readFileAsString(file));", "-", "-", "+    Utilities.clearEventQueue();", "+    ", "+        ", "+    Utilities.clearEventQueue();", "-", "-    assertEquals(\"contents of saved file 3rd write\",", "-                 FOO_TEXT,", "-                 FileOps.readFileAsString(file));", "-    assertEquals(\"contents of backup file 3rd write\",", "-                 BAR_TEXT,", "-                 FileOps.readFileAsString(backup));", "+    assertEquals(\"contents of saved file 3rd write\", FOO_TEXT, FileOps.readFileAsString(file));", "+    assertEquals(\"contents of backup file 3rd write\", BAR_TEXT, FileOps.readFileAsString(backup));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46c67af3eba982874d0df3b3a6548ae8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 435, "methodNumberAfterChange": 399, "signatureBeforeChange": "    final private boolean jj_3R_210()", "signatureAfterChange": "    final private boolean jj_3R_207()", "diff": ["-", "-  final private boolean jj_3R_210() {", "-    if (jj_scan_token(WHILE)) return true;", "-    Token xsp;", "-    if (jj_scan_token(78)) {", "-    if (jj_3R_254()) return true;", "-    if (jj_3R_37()) return true;", "-    if (jj_3R_255()) return true;", "-    if (jj_3R_173()) return true;", "+", "+  final private boolean jj_3R_207() {", "+    if (jj_scan_token(WHILE)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(78)) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_253()) return true;", "+    }", "+    if (jj_3R_34()) return true;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(79)) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_254()) return true;", "+    }", "+    if (jj_3R_170()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46d2e5b368d003821ee0c38e470589af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/KeyStrokeOptionComponent.java", "commitBeforeChange": "5323cbe0456b733643ef09074d427edff3b9adaa", "commitAfterChange": "72163ebd454d71c0955c00c7a1a43c6fa207331b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "              public void processKeyEvent(KeyEvent e)", "signatureAfterChange": "              public void processKeyEvent(KeyEvent e)", "diff": ["-        KeyStroke ks = KeyStroke.getKeyStrokeForEvent(e);", "-        System.out.println(ks);     ", "+        KeyStroke ks = KeyStroke.getKeyStrokeForEvent(e);    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ecfeedec014114227e8b6987055035", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 635, "methodNumberAfterChange": 640, "signatureBeforeChange": "    final private boolean jj_3R_166()", "signatureAfterChange": "    final private boolean jj_3R_170()", "diff": ["-  final private boolean jj_3R_166() {", "+  final private boolean jj_3R_170() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;", "-    if (jj_3R_206()) return true;", "+    if (jj_3R_211()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4712b1f69f1ffb10b0fef78bbbad267a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "c0487ade35919fa6d08b7c39361898d3c5751c04", "commitAfterChange": "7b4296c095d59b57f25b910a8bdce57816e7621f", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public int findPrevCharPos(int pos, char[] whitespace) throws BadLocationException", "signatureAfterChange": "   public int findPrevCharPos(int pos, char[] whitespace) throws BadLocationException", "diff": ["-    StringBuffer keyBuf = new StringBuffer(\"findPrevCharPos:\").append(pos);", "+    StringBuilder keyBuf = new StringBuilder(\"findPrevCharPos:\").append(pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "471d3fbbbd8a11aa22ad351096b1ae70", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "aac5f34523ac0f0412292e9d65f671aa46b752f4", "commitAfterChange": "10c44767bf3d5eefd230820d6106fe1ea2534e6f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void cancel()", "signatureAfterChange": "   public void cancel()", "diff": ["+    _applyButton.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "473202e3e140adcfd1c304907e8db29a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void selectNothing()", "signatureAfterChange": "     public void selectNothing()", "diff": ["-      _removePreviousHighlight();", "+      _resetEnabledStatus();", "+", "+      // Remove highlight from the defPane that has it", "+      _lastDefPane.removeErrorHighlight();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4750f362af412a7b3aa92982b250965a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 343, "methodNumberAfterChange": 654, "signatureBeforeChange": "    final private boolean jj_3R_323()", "signatureAfterChange": "    final private boolean jj_3R_321()", "diff": ["-", "-  final private boolean jj_3R_323() {", "-    if (jj_3R_332()) return true;", "-      if (jj_3R_344()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_321() {", "+    if (jj_3R_326()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_327()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "475f75d205c4e2bd370632bc90cfe2ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "555a52426e0b7a46bbe7591ec5d5d45d18885291", "commitAfterChange": "ff0c2424af3b72f584c63b0ff8ffed31ae421f7b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testCaretMovementCyclesWhenAtPrompt() throws EditDocumentException", "signatureAfterChange": "   public void testCaretMovementCyclesWhenAtPrompt() throws EditDocumentException", "diff": ["-    _doc.insertText(_doc.getLength(), \"test text\", InteractionsDocument.DEFAULT_STYLE);", "+    _doc.append(\"test text\", InteractionsDocument.DEFAULT_STYLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4773985683742b43c928d1bd83a4a367", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/JVMUtilities.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public static String getName(String c)", "signatureAfterChange": "   public static String getName(String c)", "diff": ["-    String s = (String)stypes.get(c);", "+    String s = stypes.get(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47768d4842bce9ae277399bda3cfbd3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 350, "signatureBeforeChange": "    final private boolean jj_3R_313()", "signatureAfterChange": "    final private boolean jj_3R_323()", "diff": ["-", "-  final private boolean jj_3R_313() {", "-    if (jj_scan_token(SYNCHRONIZED)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_102()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_151()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_323() {", "+    if (jj_scan_token(SYNCHRONIZED)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_105()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_155()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "477d0d591aadd35fe59962dca67666dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": "     public void uncommentLinesInDefinitions(int selStart, int selEnd)", "signatureAfterChange": "     public void uncommentLinesInDefinitions(int selStart, int selEnd)", "diff": ["-      _doc.uncommentLines(selStart, selEnd);", "+      getDocument().uncommentLines(selStart, selEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "477e3b5bff35a5ffc7302939daa46b83", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 559, "methodNumberAfterChange": 820, "signatureBeforeChange": "    final private boolean jj_3R_450()", "signatureAfterChange": "    final private boolean jj_3R_451()", "diff": ["-  final private boolean jj_3R_450() {", "-    if (jj_3R_458()) {", "-    if (jj_3R_459()) return true;", "+", "+  final private boolean jj_3R_451() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_459()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_460()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "478ebe3074dab7482f2a0b683f6fb78a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 495, "methodNumberAfterChange": 405, "signatureBeforeChange": "    final private boolean jj_3R_480()", "signatureAfterChange": "    final private boolean jj_3R_482()", "diff": ["-  final private boolean jj_3R_480() {", "-    if (jj_3R_448()) return true;", "+  final private boolean jj_3R_482() {", "+    if (jj_3R_450()) return true;", "-    if (jj_3R_78()) return true;", "+    if (jj_3R_79()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47a52e53341488c32360faeab7437950", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public Object visit(AddExpression node)", "signatureAfterChange": "   public Class visit(AddExpression node)", "diff": ["-     */", "-    public Object visit(AddExpression node) {", "-        // Check the types", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-        Class lc = (Class)ln.acceptVisitor(this);", "-        Class rc = (Class)rn.acceptVisitor(this);", "-\tClass c  = String.class;", "-", "-\tif (lc != String.class && rc != String.class) {", "-\t    c = visitNumericExpression(node, \"addition.type\");", "-\t} else {", "-\t    node.setProperty(NodeProperties.TYPE, c = String.class);", "-\t}", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.add(c,", "-                                          ln.getProperty(NodeProperties.VALUE),", "+   */", "+  public Class visit(AddExpression node) {", "+    // Check the types", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    Class lc = (Class)ln.acceptVisitor(this);", "+    Class rc = (Class)rn.acceptVisitor(this);", "+    Class c  = String.class;", "+    ", "+    if (lc != String.class && rc != String.class) {", "+      c = visitNumericExpression(node, \"addition.type\");", "+    } else {", "+      node.setProperty(NodeProperties.TYPE, c = String.class);", "+    }", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.add(c,", "+                                  ln.getProperty(NodeProperties.VALUE),", "+                                  rn.getProperty(NodeProperties.VALUE)));", "+    }", "+    return c;", "+  }", "-        }", "-\treturn c;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47babff616e1497013610bcbb7d1ba5e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugThreadData.java", "commitBeforeChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "commitAfterChange": "b1b91197c778ee62ce767051b412c31f7bcdddb8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DebugThreadData(ThreadReference thread)", "signatureAfterChange": "   public DebugThreadData(ThreadReference thread)", "diff": ["-    if( thread.isSuspended() && status.equals(\"RUNNING\") ){", "+    if( isSuspended() && status.equals(\"RUNNING\") ){", "-    ", "+    _uniqueID = _thread.uniqueID();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47c07cdfdf6512b1330cfcb62fb76ab8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 330, "methodNumberAfterChange": 326, "signatureBeforeChange": "      private void _compileAll()", "signatureAfterChange": "      private void _compileAll()", "diff": ["-    simpleHourglassOn();", "+    hourglassOn();", "-    finally { simpleHourglassOff();}", "+    finally { hourglassOff();}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47c7214fd89136945fcefb60eb0c41bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 343, "methodNumberAfterChange": 332, "signatureBeforeChange": "    final private boolean jj_3R_99()", "signatureAfterChange": "    final private boolean jj_3R_100()", "diff": ["+", "+  final private boolean jj_3R_100() {", "+    if (jj_3R_151()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_67()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_99() {", "-    if (jj_3R_149()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3_63()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47ce31d8efdbb7f6e9ac5783f873a516", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "8468328336764977b1a392d354ad9fa8332d6cf0", "commitAfterChange": "b5065bdb57d50a5108c714db64f9cb4417931362", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private File mkTempDir(String funnyName)", "signatureAfterChange": "   private File mkTempDir(String funnyName)", "diff": ["-    System.err.println(\"newDirectory.exists() = \" + newDirectory.exists());", "+//    System.err.println(\"newDirectory.exists() = \" + newDirectory.exists());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47dbbdc2a60936668501e5a276995e1c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "1ff154e9eb4de7b8f07ce9a8120997b76e53aa3f", "commitAfterChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void removeRegion(final R r)", "signatureAfterChange": "   public void removeRegion(final R r)", "diff": ["+//    System.err.println(\"RegionsTreePanel.removeRegion(\" + r + \") called\");", "-    ", "+//    System.err.println(\"panel region count in \" + r.getDocument() + \" = \" + parent.getChildCount());", "-      OpenDefinitionsDocument doc = r.getDocument();  // r must not have bee disposed above", "+      OpenDefinitionsDocument doc = r.getDocument();  // r must not have been disposed above", "-      if (parent == _cachedDocNode) _cachedDoc = null;", "+//      if (parent == _cachedDocNode) _cachedDoc = null;", "+//    System.err.println(\"_regionManager.getDocuments() = \" + _regionManager.getDocuments());", "+    if (_regionManager.getDocuments().isEmpty()) _close(); // _regTreeModel.getChildCount(_regTreeModel.getRoot()) == 0"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47ec276bbddb8680f06f948408a3ee22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "a9e88c9896a0247806cc1a6d54ae50329689432b", "commitAfterChange": "87dc6eec48d92797c0b33779a71935f55ec078b5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private OpenDefinitionsDocument _getOpenDoc()", "signatureAfterChange": "   private OpenDefinitionsDocument _getOpenDoc()", "diff": ["-    _model.newFile();", "+    OpenDefinitionsDocument doc = _model.newFile();", "+    doc.setDefinitionsIndent(2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47f0791e9fa4652c049e87b9c6000dd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 492, "methodNumberAfterChange": 261, "signatureBeforeChange": "    final private boolean jj_3R_144()", "signatureAfterChange": "    final private boolean jj_3R_197()", "diff": ["+", "+  final private boolean jj_3R_197() {", "+    if (jj_3R_216()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_217()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_144() {", "-    if (jj_3R_181()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_208()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47f432442e4b64cc202067aba410ea83", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public abstract ConstructorInvocation lookupConstructor(Type t, Iterable<? extends Type> typeArgs,                                                            Iterable<? extends Expression> args,                                                           Option<Type> expected)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "   public abstract ConstructorInvocation lookupConstructor(Type t, Iterable<? extends Type> typeArgs,                                                            Iterable<? extends Expression> args,                                                           Option<Type> expected, Access.Module accessModule)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-                                                          Option<Type> expected)", "+                                                          Option<Type> expected, Access.Module accessModule)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48017bbdbc95258c11b7d1ba745e0b66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/ConstantPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public short put(Float cst)", "signatureAfterChange": "   public short put(Float cst)", "diff": ["-    Info info = (Info)constants.get(cst);", "+    Info info = constants.get(cst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4807fbe29554c96c6f5dc6cfa24cf63f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testGetLine4() throws BadLocationException", "signatureAfterChange": "   public void testGetLine4() throws BadLocationException", "diff": ["-    defModel.insertString(0, s, null);", "-    defModel.gotoLine(8);", "-    assertEquals(\"#0.0\", 4, defModel.getCurrentLine());", "+    _defModel.insertString(0, s, null);", "+    _defModel.gotoLine(8);", "+    assertEquals(\"#0.0\", 4, _defModel.getCurrentLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4821b1bfdf451e557562970fc5ed126e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void testSaveAsAlreadySaved()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAsAlreadySaved()     throws BadLocationException, IOException", "diff": ["-    setupDocument(FOO_TEXT);", "+    OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "-    _model.saveFile(new FileSelector(file1));", "-    assertModified(false);", "-    assertContents(FOO_TEXT);", "+    doc.saveFile(new FileSelector(file1));", "+    assertModified(false, doc);", "+    assertContents(FOO_TEXT, doc);", "-    changeDocumentText(BAR_TEXT);", "+    changeDocumentText(BAR_TEXT, doc);", "-    _model.saveFileAs(new FileSelector(file2));", "+    doc.saveFileAs(new FileSelector(file2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48269bdfad6c851ab26d1b7d3b00de66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BraceTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testMakeBraceFailure()", "signatureAfterChange": "   public void testMakeBraceFailure()", "diff": ["-    Brace brace;", "-      brace = Brace.MakeBrace(\"k\", FREE);", "+      Brace.MakeBrace(\"k\", FREE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "482a2c99c81554ed2122df5b81ac6b55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InsertVariableDialog.java", "commitBeforeChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "commitAfterChange": "fdb0eba529d65804f971cdb52c673713ef0d4616", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   protected void updatePanes()", "signatureAfterChange": "   protected void updatePanes()", "diff": ["+          _helpPane.setCaretPosition(0);", "+      _helpPane.setCaretPosition(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48375efc06007eeda0744dd0dbf6b641", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 492, "methodNumberAfterChange": 773, "signatureBeforeChange": "    final private boolean jj_3R_264()", "signatureAfterChange": "    final private boolean jj_3R_544()", "diff": ["-  final private boolean jj_3R_264() {", "-      if (jj_3R_320()) { jj_scanpos = xsp; break; }", "-    if (jj_3R_321()) jj_scanpos = xsp;", "+", "+  final private boolean jj_3R_544() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_562()) { jj_scanpos = xsp; break; }", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_3R_563()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48386af74a435fc0dda6a23c939fa6e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ColorOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void testApplyThenResetDefault()", "signatureAfterChange": "    public void testApplyThenResetDefault()", "diff": ["-", "+    System.err.println(\"NORMAL_COLOR in config = \" + DrJava.getConfig().getSetting(OptionConstants.DEFINITIONS_NORMAL_COLOR));", "+//    System.err.println(\"NORMAL_COLOR in config = \" + DrJava.getConfig().getSetting(OptionConstants.DEFINITIONS_NORMAL_COLOR));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48456d46dbd2eb9f6808b0a876494a04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "d1ffac675273323f7a1b9777462d16896d09a1af", "commitAfterChange": "c0ad820565377d42d023afeab71166682f497054", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testDancingUIFileOpened() throws IOException", "signatureAfterChange": "   public void testDancingUIFileOpened() throws IOException", "diff": ["-//     _log.log(\"testDancingUIFileOpened completed\");", "+     _log.log(\"testDancingUIFileOpened completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4847459e340fd9896fd00bcf9977364b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "c0487ade35919fa6d08b7c39361898d3c5751c04", "commitAfterChange": "7b4296c095d59b57f25b910a8bdce57816e7621f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public int findNextEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "signatureAfterChange": "   public int findNextEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "diff": ["-    StringBuffer keyBuf = new StringBuffer(\"findNextEnclosingBrace:\").append(opening).append(':').append(closing).append(':').append(pos);", "+    StringBuilder keyBuf = new StringBuilder(\"findNextEnclosingBrace:\").append(opening).append(':').append(closing).append(':').append(pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484da0f2c7f0b82c47702c3574f7f035", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void testStarted(String name)", "signatureAfterChange": "     public void testStarted(String name)", "diff": ["-//      doc.acquireWriteLock();", "+      doc.acquireWriteLock();", "-//      finally { doc.releaseWriteLock(); }", "+      finally { doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48783082e6e3fa797229d744eea1a6b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "bf372fc29acf6ea260cc55361328f14ce539744d", "commitAfterChange": "ec5c7b65c72ae4439436619fa81e04fbea3f0c07", "methodNumberBeforeChange": 760, "methodNumberAfterChange": 760, "signatureBeforeChange": "   public synchronized void installModalWindowAdapter(final Window w,                                                      final Lambda<Void,WindowEvent> toFrontAction,                                                      final Lambda<Void,WindowEvent> closeAction)", "signatureAfterChange": "   public synchronized void installModalWindowAdapter(final Window w,                                                      final Lambda<Void,WindowEvent> toFrontAction,                                                      final Lambda<Void,WindowEvent> closeAction)", "diff": ["-    w.setAlwaysOnTop(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "487de72f51386e0e7bb03fa7e1310c85", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void suspend(DebugThreadData d);", "signatureAfterChange": "   public void suspend(DebugThreadData d) throws DebugException;", "diff": ["-  public void suspend(DebugThreadData d);", "+  public void suspend(DebugThreadData d) throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48842dd0a8ca7fce84eb53fb897bf96b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 621, "methodNumberAfterChange": 454, "signatureBeforeChange": "    final private boolean jj_3R_207()", "signatureAfterChange": "    final private boolean jj_3R_212()", "diff": ["+", "+  final private boolean jj_3R_212() {", "+    if (jj_3R_249()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_287()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_207() {", "-    if (jj_3R_247()) return true;", "-      if (jj_3R_280()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "488505292227ed1347b7bff87bbac1a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 79, "signatureBeforeChange": "     DefinitionsDocumentHandler(DefinitionsDocument doc)", "signatureAfterChange": "          DefinitionsDocumentHandler()", "diff": ["-    DefinitionsDocumentHandler(DefinitionsDocument doc) {", "-      _doc = doc;", "-      /*", "-          try{", "-            final _file = doc.getFile();", "-            DocReconstructor reconstruct = new DocReconstructor(){", "-              public void make(){", "-                // make doc from file", "-                _file;", "-              }", "-            };", "-          }catch(IllegalStateException e){", "-            DocReconstructor reconstruct = new DocReconstructor(){", "-              public void make(){", "-                // make the untitled doc", "-              }", "-          }", "-      ", "-      cache.put(this, reconstruct);", "-      cache.get(this);", "-      cache.clear(this);", "-      ", "-      */", "+    ", "+    DefinitionsDocumentHandler(){", "+      _file = null;", "+      init();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4888eaceaa23f5904ddfe7317faeca9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ForcedChoiceOptionComponent.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void setDescription(String description)", "signatureAfterChange": "    public void setDescription(String description)", "diff": ["+    _label.setToolTipText(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4894a54a9d9496d7d84cba05ed653ea1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 195, "signatureBeforeChange": "     public boolean isFixed()", "signatureAfterChange": "     public Character last()", "diff": ["-    public boolean isFixed() { return _fixed; }", "+    public boolean isStatic() { return !_mutable; }", "+    public Character last() { return _s.charAt(_s.length()-1); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "489de07fb5f83ffd4eaee164ffab784c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ClipboardHistoryFrame.java", "commitBeforeChange": "37449cba11f74bdf3921e2b515b5228eef23235b", "commitAfterChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   private void updatePreview()", "signatureAfterChange": "   private void updatePreview()", "diff": ["-        text = ((ListItem)_historyList.getModel().getElementAt(_historyList.getSelectedIndex())).getFull();", "+        text = _historyList.getModel().getElementAt(_historyList.getSelectedIndex()).getFull();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b417901a4946a1dc953c67a26f9cf2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6595282fd67e77d6079df1ee1647ba51751bbcec", "commitAfterChange": "de0f38d123822794b2970bd8e5814e75677feb46", "methodNumberBeforeChange": 756, "methodNumberAfterChange": 747, "signatureBeforeChange": "    final private boolean jj_3R_551()", "signatureAfterChange": "    final private boolean jj_3R_551()", "diff": ["+", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_561()) { jj_scanpos = xsp; break; }", "+    xsp = jj_scanpos;", "+    if (jj_3R_561()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_562()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48c969fc4a9acf262d98aea2e5662890", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 520, "methodNumberAfterChange": 527, "signatureBeforeChange": "    final private boolean jj_3R_105()", "signatureAfterChange": "    final private boolean jj_3R_105()", "diff": ["+  final private boolean jj_3R_105() {", "+    if (jj_3R_75()) return true;", "-  final private boolean jj_3R_105() {", "-    if (jj_scan_token(DOT)) return true;", "-    if (jj_3R_151()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48d17949e9b517f0bfbd8e097604926d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public int findPrevCharPos(int pos, char[] whitespace) throws BadLocationException", "signatureAfterChange": "   public int findPrevCharPos(int pos, char[] whitespace) throws BadLocationException", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48edf420c8d80a326f8d80fb89c99872", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 521, "methodNumberAfterChange": 397, "signatureBeforeChange": "    final private boolean jj_3R_330()", "signatureAfterChange": "    final private boolean jj_3R_338()", "diff": ["+", "+  final private boolean jj_3R_338() {", "+    if (jj_3R_101()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_463()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_330() {", "-    if (jj_3R_100()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_340()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48f8361069e6323324d0b277e394b462", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2500166c0751d6a8cb3d1502502bde53fcc48afb", "commitAfterChange": "e8cc87f4c1373cc71556480da6b0490c23688c68", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 132, "signatureBeforeChange": "   private void _closeProject()", "signatureAfterChange": "   private void _closeProject()", "diff": ["+    _saveProjectAction.setEnabled(false);", "+    _currentProjFile = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49062662555587e7d473d4bfaae9e090", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 693, "methodNumberAfterChange": 691, "signatureBeforeChange": "    final private boolean jj_3_41()", "signatureAfterChange": "    final private boolean jj_3_45()", "diff": ["+  final private boolean jj_3_45() {", "+    if (jj_3R_98()) return true;", "+    if (jj_3R_380()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3_41() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_97()) return true;", "-    if (jj_3R_377()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "490eed017a5eb345a04954196e23c83a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelDeleteTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected void setUp()", "signatureAfterChange": " \t \tprotected void setUp()", "diff": ["-\t\t\tmodel0 = new ReducedModel();", "-\t\t\tmodel1 = new ReducedModel();", "-\t\t\tmodel2 = new ReducedModel();", "+\t\t\tmodel0 = new ReducedModelControl();", "+\t\t\tmodel1 = new ReducedModelControl();", "+\t\t\tmodel2 = new ReducedModelControl();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49118285436cbcd0a40186c8bdbd175a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/ExecJVMTest.java", "commitBeforeChange": "ce99ad77121aabff91f9c6fba762f853ca2a34f5", "commitAfterChange": "c7e182b04aa52ae1423064c733cc8609017cc26d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public void testExecFileCreator() throws IOException, InterruptedException", "signatureAfterChange": "    public void testExecFileCreator() throws IOException, InterruptedException", "diff": ["-    File tempFile = File.createTempFile(\"drjava-test\", \".tmp\");", "+    File tempFile = File.createTempFile(\"drjava-test\", \".tmp\").getCanonicalFile();", "-    finally {", "-    }", "-", "+    finally { /*do nothing */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49183686927b5f7b4e721a65aeb19f26", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testStartsWithPrefixWithText() throws BadLocationException", "signatureAfterChange": "   public void testStartsWithPrefixWithText() throws BadLocationException", "diff": ["-    assertTrue(\"line before brace (no space)\", !rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "-    assertTrue(\"just before brace (no space)\", rule.applyRule(_doc, 7, Indenter.IndentReason.OTHER));", "-    assertTrue(\"just after brace (no space)\", rule.applyRule(_doc, 9, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after brace (no space)\", !rule.applyRule(_doc, 15, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line before brace (no space)\", !rule.testApplyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"just before brace (no space)\", rule.testApplyRule(_doc, 7, Indenter.IndentReason.OTHER));", "+    assertTrue(\"just after brace (no space)\", rule.testApplyRule(_doc, 9, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after brace (no space)\", !rule.testApplyRule(_doc, 15, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line before star (with space)\", !rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "-    assertTrue(\"just before star (with space)\", rule.applyRule(_doc, 4, Indenter.IndentReason.OTHER));", "-    assertTrue(\"just after star (with space)\", rule.applyRule(_doc, 6, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after star (with space)\", !rule.applyRule(_doc, 15, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line before star (with space)\", !rule.testApplyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"just before star (with space)\", rule.testApplyRule(_doc, 4, Indenter.IndentReason.OTHER));", "+    assertTrue(\"just after star (with space)\", rule.testApplyRule(_doc, 6, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after star (with space)\", !rule.testApplyRule(_doc, 15, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49435fb48d6caeaac86b45194252277e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testGotoLine1() throws BadLocationException", "signatureAfterChange": "   public void testGotoLine1() throws BadLocationException", "diff": ["-    _defModel.insertString(0, s, null);", "-    _defModel.gotoLine(2);", "-    assertEquals(\"#0.0\", 2, _defModel.getCurrentLocation());", "+    _doc.insertString(0, s, null);", "+    _doc.gotoLine(2);", "+    assertEquals(\"#0.0\", 2, _doc.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49467e4c72cfb4eb8e9572d7b4f1df2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "97f966af08ae6bec968f68d8b2fce6c5531a12b8", "commitAfterChange": "d4f8b5e1e15fc2c34ba6969d4ef7bdb04cc8916b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void setUp() throws IOException", "signatureAfterChange": "   protected void setUp() throws IOException", "diff": ["+    DrJava.getConfig().resetToDefaults();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4950a3a8c3599d1764bd72a692df739a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void testOpenMultipleNonexistentFiles() throws IOException", "signatureAfterChange": "   public void testOpenMultipleNonexistentFiles() throws IOException", "diff": ["+    ", "+    _log.log(\"testOpenMultipleNonexistentFiles completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "495a5b1987884424e0a1d0bbf249d8ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "   boolean atStart()", "signatureAfterChange": "   boolean atStart()", "diff": ["-  boolean atStart() { return (rmb._cursor.atStart() || rmc._cursor.atStart()); }", "+  boolean atStart() { return (getRMB()._cursor.atStart() || getRMC()._cursor.atStart()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4968721eb257e223260276f5dcaa7f79", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "b6c98c2729d523213cf8ee6bbc9636575f25da66", "commitAfterChange": "4bdaddc150401ace7c16f01fa5c54525f5642ceb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public InteractionsDocument(ConsoleDocumentInterface document, String banner)", "signatureAfterChange": "   public InteractionsDocument(ConsoleDocumentInterface document)", "diff": ["-  public InteractionsDocument(ConsoleDocumentInterface document, String banner) { ", "-    this(document, new History(), banner); ", "+  public InteractionsDocument(ConsoleDocumentInterface document) { ", "+    this(document, new History()); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "497c4d711993c74165e856bad2500ad6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "d1ffac675273323f7a1b9777462d16896d09a1af", "commitAfterChange": "c0ad820565377d42d023afeab71166682f497054", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testSaveButtonEnabled() throws IOException", "signatureAfterChange": "   public void testSaveButtonEnabled() throws IOException", "diff": ["-//    _log.log(\"testSaveButtonEnabled completed\");", "+    _log.log(\"testSaveButtonEnabled completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49822656a086bb62e0e70a9dbde12b2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 330, "methodNumberAfterChange": 317, "signatureBeforeChange": "    final private boolean jj_3R_297()", "signatureAfterChange": "    final private boolean jj_3R_299()", "diff": ["-", "-  final private boolean jj_3R_297() {", "+  final private boolean jj_3R_299() {", "-      if (jj_3R_487()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_490()) { jj_scanpos = xsp; break; }", "-    if (jj_3R_488()) jj_scanpos = xsp;", "+    if (jj_3R_491()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4997ea6cd9f6a861c55c02121681e508", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 377, "signatureBeforeChange": "     public int _getLineEndPos(int pos)", "signatureAfterChange": "     public int _getLineEndPos(int pos)", "diff": ["-      doc.acquireReadLock();", "-      try { return doc._getLineEndPos(pos); }", "-      finally { doc.releaseReadLock(); }", "+//      doc.acquireReadLock();", "+//      try { ", "+        return doc._getLineEndPos(pos); ", "+//      }", "+//      finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49a233d99a090f8314b324d8d51836b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "aa7f147d71330aa12463dfbc7a233e3ed25560e6", "commitAfterChange": "cfaac02e8e33f506b730c3f8ce96676d16b8f705", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 23, "signatureBeforeChange": "   protected void handleSlaveConnected()", "signatureAfterChange": "   protected void handleSlaveConnected()", "diff": ["-    // _model may be null if we're running a test on this", "-    if (_model != null) {", "-      _model.interactionsReady();", "-    }", "+    _interactionsModel.interpreterReady();", "+    _junitModel.junitJVMReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49a5361d8d22ccd466c4e7dde0902a89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 517, "methodNumberAfterChange": 515, "signatureBeforeChange": "    final private boolean jj_3R_253()", "signatureAfterChange": "    final private boolean jj_3R_263()", "diff": ["-", "-  final private boolean jj_3R_253() {", "-    if (jj_scan_token(PLUS_ASSIGN)) return true;", "-    if (jj_3R_94()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_263() {", "+    if (jj_scan_token(PLUS_ASSIGN)) return true;", "+    if (jj_3R_97()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49bb251b230dd821f21c4f5483b986cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 216, "methodNumberAfterChange": 219, "signatureBeforeChange": "      private void _compile()", "signatureAfterChange": "      private void _compile()", "diff": ["-    finally { hourglassOff(); }", "+    finally { hourglassOff();}", "+    update(getGraphics());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49ccfd258a8caea4b5959112db66fd72", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "e28d42989a089b15d3a01e7dd19b426bc7021c04", "commitAfterChange": "261ca8732921a2a5c58b2777d5419ddfe2c261df", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "signatureAfterChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49ed2d8e2880f32b9b004f85cdb4a2a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "          public void testGetInnerClassOrInterface()", "signatureAfterChange": "          public void testGetInnerClassOrInterface()", "diff": ["-      System.err.println(\"testGetInnerClassOrInterface finished\");", "+//      System.err.println(\"testGetInnerClassOrInterface finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a00d5b3b03909461874f0fbb50fe2d6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void xtestNoJUnitErrors() throws Exception", "signatureAfterChange": "   public void testNoJUnitErrors() throws Exception", "diff": ["-   */", "-  public void xtestNoJUnitErrors() throws Exception {", "+  /** Tests that a JUnit file with no errors is reported to have no errors. */", "+  public void testNoJUnitErrors() throws Exception {", "-    synchronized(listener) {", "-      doc.startJUnit();", "-      listener.assertJUnitStartCount(1);", "-      listener.wait();", "-    }", "+    _runJUnit(doc);", "+    ", "+    listener.assertJUnitStartCount(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a0936a9a42ba556edb76b546762a41a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public synchronized void setBreakpoint(final Breakpoint breakpoint)", "signatureAfterChange": "   public synchronized void setBreakpoint(final Breakpoint breakpoint)", "diff": ["-", "-    System.out.println(\"setting: \" + breakpoint);", "+    //System.out.println(\"setting: \" + breakpoint);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a315352df6c63d2b9441676424be483", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public void testQualifiedClassNameWithPackage()     throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public void testQualifiedClassNameWithPackage()     throws BadLocationException, ClassNameNotFoundException", "diff": ["-    defModel.insertString(0, classes, null);", "+    _defModel.insertString(0, classes, null);", "-                 defModel.getQualifiedClassName());", "+                 _defModel.getQualifiedClassName());", "-                 defModel.getEnclosingTopLevelClassName(23));", "+                 _defModel.getEnclosingTopLevelClassName(23));", "-                 defModel.getQualifiedClassName(23));", "+                 _defModel.getQualifiedClassName(23));", "-                 defModel.getQualifiedClassName(35));", "+                 _defModel.getQualifiedClassName(35));", "-      String result = defModel.getQualifiedClassName(15);", "+      String result = _defModel.getQualifiedClassName(15);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a4ebf44287b1ac1ea73cf4e72ae0c93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "c0ad820565377d42d023afeab71166682f497054", "commitAfterChange": "e5397d7a7281355ff68e92ebc632fb4dd42a39d9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testDancingUIFileClosed() throws IOException", "signatureAfterChange": "   public void testDancingUIFileClosed() throws IOException", "diff": ["-    _log.log(\"Waiting for file closing\");", "+//    _log.log(\"Waiting for file closing\");", "-    _log.log(\"testDancingUIClosed completed\");", "+//    _log.log(\"testDancingUIClosed completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a5fb6f15dc5771a9ef8be4b7b721e68", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4dc5ace86e9b2c575f2b09ebb783f4d8d9db5e9a", "commitAfterChange": "798fcd5fdec1efc6698cb1c49cd62bdab41daffc", "methodNumberBeforeChange": 784, "methodNumberAfterChange": 795, "signatureBeforeChange": "    final private boolean jj_3_68()", "signatureAfterChange": "    final private boolean jj_3_68()", "diff": ["-  final private boolean jj_3_68() {", "+  final private boolean jj_3_68() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a694416aeace50b8acafcaca0b27e2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/AbstractInteractionsDocument.java", "commitBeforeChange": "772d55948f939a494c28e52313a1162cba5534b8", "commitAfterChange": "444cb9c318707ca2f9a6eaa5854ba2be0fcd383e", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void saveHistory(FileSaveSelector selector, String editedVersion) throws IOException", "signatureAfterChange": "   public void saveHistory(FileSaveSelector selector) throws IOException", "diff": ["-  public void saveHistory(FileSaveSelector selector, String editedVersion) throws IOException {", "+  public void saveHistory(FileSaveSelector selector) throws IOException {", "+    _history.writeToFile(selector);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a6f29ab8ace0e8e6655f996ff296a44", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlusTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testLeavesOtherLinesAlone() throws javax.swing.text.BadLocationException", "signatureAfterChange": "   public void testLeavesOtherLinesAlone() throws javax.swing.text.BadLocationException", "diff": ["-    assertEquals(\"foo\\nbar\\n   blah\", _doc.getText(0, 15));", "+    assertEquals(\"foo\\nbar\\n   blah\", _doc.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a76cde443bcda406792c64a5c69c3af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelListTest.java", "commitBeforeChange": "591ec87995880046281596623701cb5a561fc66e", "commitAfterChange": "ce73fdb27a8e7aa886580e240ca54bfd98e64031", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "    public void testNotifyRemove()", "signatureAfterChange": "    public void testNotifyRemove()", "diff": ["+    assertEquals(\"#0.1\", new Integer(1), itFull.current());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a7a04916c8999a8a4e62b3bccac561d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "a5a766c0abe1a94ea1cfa69aac7995654eda0886", "commitAfterChange": "e89db6424eb4d447de92442bb5bec9b31ff0f5d0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public boolean open()", "signatureAfterChange": "   public boolean open()", "diff": ["-    JFileChooser fc = new JFileChooser();", "+    JFileChooser fc = _openChooser;", "+\t\tfc.setSelectedFile(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a7d73ad284a326835d9f1b6ab4f8108", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0ef216d80b2e9cc63f2ef7b2c23490480ef77851", "commitAfterChange": "c5aaf72fbd7fa889788e2cd72fe646345421a547", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 167, "signatureBeforeChange": "    private void _setUpTabs()", "signatureAfterChange": "    private void _setUpTabs()", "diff": ["+    _interactionsController.setPrevPaneAction(_switchToPreviousPaneAction);", "+    _interactionsController.setNextPaneAction(_switchToNextPaneAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a885ad96f1511c8e480eedac2a1b056", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 684, "methodNumberAfterChange": 671, "signatureBeforeChange": "    final private boolean jj_3R_557()", "signatureAfterChange": "    final private boolean jj_3R_560()", "diff": ["+", "+  final private boolean jj_3R_560() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_561()) { jj_scanpos = xsp; break; }", "+    xsp = jj_scanpos;", "+    if (jj_3R_562()) jj_scanpos = xsp;", "-  final private boolean jj_3R_557() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_558()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_559()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a990f5bdce872b8895ee050a3b4353c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "de5d6cb8095b8316a5027b98971107ba8d8608ac", "commitAfterChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private void assertInteractionsContains(String text) throws BadLocationException", "signatureAfterChange": "   protected void assertInteractionsContains(String text) throws BadLocationException", "diff": ["+   */", "+  protected void assertInteractionsContains(String text) throws BadLocationException{", "+    _assertInteractionContainsHelper(text, true);", "+  }", "-   */", "-  private void assertInteractionsContains(String text) throws BadLocationException{", "-    assertInteractionHelper(text, true);", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ab8eebc6e464ae99f80826f0922d2d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public boolean hasHistoryPrevious()", "signatureAfterChange": "   public boolean hasHistoryPrevious()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ae20455c6f2cc866bbc69566deac279", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b43f29e50ad9a747c307023da2022e85812a7a06", "commitAfterChange": "f9bd2a484c4505cc2dff97c8f9bad6e0c712ff50", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testInterpretCurrentInteraction() throws EditDocumentException", "signatureAfterChange": "   public void testInterpretCurrentInteraction() throws EditDocumentException", "diff": ["+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aef58357bc4b68d94683620ca559ae5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/VectorOptionTest.java", "commitBeforeChange": "ba6275930e25f1b0898c45319a21c16860b3e177", "commitAfterChange": "1bd0fb2319802a0180bca30c066879626028c532", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testParse()", "signatureAfterChange": "      public void testParse()", "diff": ["-    Vector<Integer> iv = new Vector<Integer>();", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4afec6224213f1bd6b9b6d421f5a30f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          public void saveBeforeCompile()", "signatureAfterChange": "          public void saveBeforeCompile()", "diff": ["-      try {", "-        _model.saveAllFiles(new FileSaveSelector() {", "-          public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "-          public boolean warnFileOpen(File f) { return false; }", "-          public boolean verifyOverwrite() { return true; }", "-          public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "-        });", "-      }", "-      catch(IOException e) { throw new UnexpectedException(e); }  ", "+      saveAllFiles(_model, new FileSaveSelector() {", "+        public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "+        public boolean warnFileOpen(File f) { return false; }", "+        public boolean verifyOverwrite() { return true; }", "+        public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "+      });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b03abb93eef76f2b6f20d9bf87549e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classinfo/TreeClassInfo.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     MembersVisitor()", "signatureAfterChange": "     MembersVisitor()", "diff": ["-                                            new LinkedList<Node>(), false);", "+                                            new LinkedList<Node>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b0551957c096f74988cdc9c5173d6dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f04b27133e1dfdd1ba7aef9e8d008a92f888d6d9", "commitAfterChange": "99b38c17e39f8591bf821ecb0016a46b269f3561", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "     public void newFileCreated()", "signatureAfterChange": "     public void newFileCreated()", "diff": ["-      installNewDocumentListener((DefinitionsDocument)_model.getDefinitionsDocument());", "+      installNewDocumentListener(_model.getDefinitionsDocument());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b3b77b9dcfc8c20f23ca8b5556b96a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 310, "signatureBeforeChange": "    final private boolean jj_3R_262()", "signatureAfterChange": "    final private boolean jj_3R_296()", "diff": ["-", "-  final private boolean jj_3R_262() {", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_110()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_171()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_296() {", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_112()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_179()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b3b9c7a2b03fd9795217c83eb7f8ee4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "14ecd0c683c3a654631edbe7cd556951ec682439", "commitAfterChange": "b4e48852da60211c31b0141438d3f04d6c627263", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void optionChanged(OptionEvent<Color> oce)", "signatureAfterChange": "      public void optionChanged(OptionEvent<Color> oce)", "diff": ["+  private class BreakpointColorOptionListener implements OptionListener<Color> { ", "+    public void optionChanged(OptionEvent<Color> oce) {", "+      BREAKPOINT_PAINTER = new DefaultHighlighter.DefaultHighlightPainter(oce.value);", "+    }", "-  private class MatchColorOptionListener implements OptionListener<Color> { ", "-    public void optionChanged(OptionEvent<Color> oce) {", "-      //Set the highlightPainter to the most recent one.", "-      MATCH_PAINTER = ", "-        new DefaultHighlighter.DefaultHighlightPainter( DrJava.CONFIG.getSetting(DEFINITIONS_MATCH_COLOR) );", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b4e64c24cd51c967ff2ae06b0f7d6ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 394, "methodNumberAfterChange": 525, "signatureBeforeChange": "    final private boolean jj_3R_588()", "signatureAfterChange": "    final private boolean jj_3R_466()", "diff": ["-  final private boolean jj_3R_588() {", "-    if (jj_3R_595()) {", "+", "+  final private boolean jj_3R_466() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_473()) {", "-      if (jj_3R_596()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_474()) { jj_scanpos = xsp; break; }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b51bbc6a2ba6639e3d969e9060c4ec4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "commitAfterChange": "d4622e1c95180ad4b8f3b6eca04eb1a3a2eca2e9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void remove(int offset, int len) throws BadLocationException", "signatureAfterChange": "    public void remove(int offset, int len) throws BadLocationException", "diff": ["-    _reduced.move(locationChange);", "-    _reduced.delete(len);", "+    //_reduced.move(locationChange);", "+    //_reduced.delete(len);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b5776237110b933a9216ea2334331b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "a72aa0a4c1f252999ab0a9a3163ec82bfbbfaea2", "commitAfterChange": "7eb08657532d9784c123b1d1294465471514e8b5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private static FullVersion guessVersion(File f)", "signatureAfterChange": "      private static FullVersion guessVersion(File f)", "diff": ["-            jf.getJarEntry(\"com/sun/source/tree/BracketExprTree.class\")!=null &&", "-            jf.getJarEntry(\"com/sun/source/tree/BracketStatTree.class\")!=null &&", "-            jf.getJarEntry(\"com/sun/source/tree/EscapeExprTree.class\")!=null &&", "-            jf.getJarEntry(\"com/sun/source/tree/EscapeStatTree.class\")!=null &&", "-            jf.getJarEntry(\"com/sun/tools/javac/util/DefaultFileManager.class\")==null) {", "+            jf.getJarEntry(\"edu/rice/cs/mint/comp/com/sun/source/tree/BracketExprTree.class\")!=null &&", "+            jf.getJarEntry(\"edu/rice/cs/mint/comp/com/sun/source/tree/BracketStatTree.class\")!=null &&", "+            jf.getJarEntry(\"edu/rice/cs/mint/comp/com/sun/source/tree/EscapeExprTree.class\")!=null &&", "+            jf.getJarEntry(\"edu/rice/cs/mint/comp/com/sun/source/tree/EscapeStatTree.class\")!=null &&", "+            jf.getJarEntry(\"edu/rice/cs/mint/comp/com/sun/tools/javac/util/DefaultFileManager.class\")==null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b6259b39bba93151336daf0390bde2d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessTest.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testCompileReferenceToNonPublicClass()      throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileReferenceToNonPublicClass()      throws BadLocationException, IOException, InterruptedException", "diff": ["-    System.out.println(\"testCompileReferenceToNonPublicClass()\");", "+//    System.out.println(\"testCompileReferenceToNonPublicClass()\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b656381482200688c87661ea277abbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 607, "methodNumberAfterChange": 594, "signatureBeforeChange": "    final private boolean jj_3R_151()", "signatureAfterChange": "    final private boolean jj_3R_214()", "diff": ["-", "-  final private boolean jj_3R_151() {", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_214() {", "+    if (jj_3R_288()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b6a7ccccc8aac45d3fa6eb976e909af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 454, "methodNumberAfterChange": 606, "signatureBeforeChange": "    final private boolean jj_3R_212()", "signatureAfterChange": "    final private boolean jj_3R_200()", "diff": ["-", "-  final private boolean jj_3R_212() {", "-    if (jj_3R_249()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_287()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_200() {", "+    if (jj_3R_222()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_285()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b6d8681e6487262336af5de571b4789", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "commitAfterChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "methodNumberBeforeChange": 456, "methodNumberAfterChange": 452, "signatureBeforeChange": "      private void _compileAll()", "signatureAfterChange": "      private void _compileAll()", "diff": ["-//    new Thread(\"Compile All\") {", "-//      public void run() {", "-    finally { hourglassOff();}", "-//      }", "-//    }.start();", "-//    update(getGraphics()); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b6fa80abc81b13e715654fb32dc9480", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 699, "methodNumberAfterChange": 695, "signatureBeforeChange": "    final private boolean jj_3_31()", "signatureAfterChange": "    final private boolean jj_3_32()", "diff": ["+  final private boolean jj_3_32() {", "+    if (jj_3R_99()) return true;", "+    if (jj_3R_489()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3_31() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_98()) return true;", "-    if (jj_3R_485()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b724ce26c3e93c0737e02eab3673862", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "c7cf97829e412463c33fef76eb49ab99dfa7be2a", "commitAfterChange": "3a763dc9fed92965e7c7369ee145c417374432d3", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public DefinitionsPane(MainFrame mf, final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public DefinitionsPane(MainFrame mf, final OpenDefinitionsDocument doc)", "diff": ["-    OptionListener<Integer> iTemp = new OptionListener<Integer>() {", "+    OptionListener<Integer> iListener = new OptionListener<Integer>() {", "-      new Pair<Option<Integer>, OptionListener<Integer>>(OptionConstants.RIGHT_MARGIN_COLUMNS, iTemp);", "+      new Pair<Option<Integer>, OptionListener<Integer>>(OptionConstants.RIGHT_MARGIN_COLUMNS, iListener);", "-    DrJava.getConfig().addOptionListener(OptionConstants.RIGHT_MARGIN_COLUMNS, iTemp);", "+    DrJava.getConfig().addOptionListener(OptionConstants.RIGHT_MARGIN_COLUMNS, iListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b7359c8dc82d2c3aea0a8edee18ead7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/MixedQuoteTest.java", "commitBeforeChange": "75615d6339345db6e253403db9b318fe78732c66", "commitAfterChange": "cfb5c0d7a42de99cbc0ae424116ea39ceac84b66", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testDoubleEclipsesSingle()", "signatureAfterChange": "   public void testDoubleEclipsesSingle()", "diff": ["-    assertEquals(\"#0.1\", FREE, stateAtCurrentToken(model));", "+    assertEquals(\"#0.1\", FREE, stateOfCurrentToken(model));", "-    assertEquals(\"#1.1\", INSIDE_SINGLE_QUOTE, stateAtCurrentToken(model));", "+    assertEquals(\"#1.1\", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(model));", "-    assertEquals(\"#2.1\", INSIDE_DOUBLE_QUOTE, stateAtCurrentToken(model));", "+    assertEquals(\"#2.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model));", "-    assertEquals(\"#3.1\", INSIDE_DOUBLE_QUOTE, stateAtCurrentToken(model));", "+    assertEquals(\"#3.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b7df560020d98cada34fd66c9ef74e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   protected ArrayList<String> _getHistoryText(FileOpenSelector selector)     throws IOException, OperationCanceledException", "signatureAfterChange": "   protected ArrayList<String> _getHistoryText(FileOpenSelector selector)     throws IOException, OperationCanceledException", "diff": ["-    File[] files = null;", "-    files = selector.getFiles();", "+    File[] files = selector.getFiles();", "-    ", "+", "-      ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b909f091b68bafb7262489140cf9dab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public TypeData forSimpleNameReference(SimpleNameReference that)", "signatureAfterChange": "   public TypeData forSimpleNameReference(SimpleNameReference that)", "diff": ["-      if (reference.getType() == null || reference.getType().getInstanceData() == null) ", "-        System.err.println(\"Expression type checking in \" + _data + \" blows up; AST = \" + that);", "+//      if (reference.getType() == null || reference.getType().getInstanceData() == null) ", "+//        System.err.println(\"Expression type checking in \" + _data + \" blows up; AST = \" + that);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b936020dec857e59df4165db4b37994", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public boolean contains(INavigatorItem doc)", "signatureAfterChange": "   public boolean contains(INavigatorItem doc)", "diff": ["-  public boolean contains(INavigatorItem doc) {", "-    return (_docs.indexOf(doc) != -1 );", "-  }", "+  public boolean contains(INavigatorItem doc) { return _model.contains(doc); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b938ee4cc79717fcfc4044545668599", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavadocErrorPanel.java", "commitBeforeChange": "da631ae365e5ae3fe7064b60f098ede0150c39bb", "commitAfterChange": "574257b530483460a9c0ce0cc5577b7fd93532dd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "signatureAfterChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "diff": ["-      SwingDocument doc = new SwingDocument();", "+      ErrorDocument doc = new ErrorDocument(getErrorDocumentTitle());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b9754c5059b5bb3132223eee8f43728", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 461, "methodNumberAfterChange": 440, "signatureBeforeChange": "    final private boolean jj_3R_186()", "signatureAfterChange": "    final private boolean jj_3R_189()", "diff": ["+  final private boolean jj_3R_189() {", "+    if (jj_3R_217()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_265()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_186() {", "-    if (jj_3R_212()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_258()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ba2a5e6185e171542d169f72680d428", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ConsoleController.java", "commitBeforeChange": "b6c98c2729d523213cf8ee6bbc9636575f25da66", "commitAfterChange": "4bdaddc150401ace7c16f01fa5c54525f5642ceb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "    protected void _setupModel()", "signatureAfterChange": "    protected void _setupModel()", "diff": ["-", "-    _swingConsoleDocument.addDocumentListener(new CaretUpdateListener());", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bcdbe397832b6851395413bcb4f85bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   protected void _docAppend(String s, String styleName)", "signatureAfterChange": "   public void append(String s, String styleName)", "diff": ["-  protected void _docAppend(String s, String styleName) {", "+  public void append(String s, String styleName) {", "-        _document.insertText(_document.getLength(), s, styleName);", "+        _document.append(s, styleName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bfbbdbe194992005b94d0a1e14fa7a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 425, "methodNumberAfterChange": 759, "signatureBeforeChange": "    final private boolean jj_3R_450()", "signatureAfterChange": "    final private boolean jj_3R_145()", "diff": ["-  final private boolean jj_3R_450() {", "+  final private boolean jj_3R_145() {", "+    if (jj_3R_204()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c08b499773c67e00752fc00a2d476d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "cdddd415c8ee9888478b5a253ffbb086fce1ed57", "commitAfterChange": "f1f97edd57f558d6d34abcd1fe039afc22f7a202", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "   private void _setDebugMenuItemsEnabled(boolean enabled)", "signatureAfterChange": "   private void _setDebugMenuItemsEnabled(boolean enabled)", "diff": ["-    //_printBreakpointsMenuItem.setEnabled(enabled);", "+    _printBreakpointsMenuItem.setEnabled(enabled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c0c859b69c57ef271d2c62e4b88e000", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": "     public void viewInteractionsClassPath()", "signatureAfterChange": "     public void viewInteractionsClassPath()", "diff": ["-    new DrJavaScrollableDialog(MainFrame.this, \"Interactions Classpath\", \"Current Interpreter Classpath\", classPath).", "-      show();", "+    new DrJavaScrollableDialog(this, \"Interactions Classpath\", \"Current Interpreter Classpath\", classPath).show();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c1f364cbc0254f4b42aa16e0642b8c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "91734830bfc37ccb85bb6b7693b74ec1fa3e1c29", "commitAfterChange": "29114a3ab27f49e46885f181f9f058e018ee6b61", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public boolean saveSettings()", "signatureAfterChange": "   public boolean saveSettings()", "diff": ["+    _model.setAutoRefreshStatus(_autoRefreshComponent.isSelected());", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c264208c3e2454c40bb63714725e475", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlusTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testBothIndentedAddSpaces() throws javax.swing.text.BadLocationException", "signatureAfterChange": "   public void testBothIndentedAddSpaces() throws javax.swing.text.BadLocationException", "diff": ["-    assertEquals(\"  foo\\n     bar\", _doc.getText(0, 14));", "+    assertEquals(\"  foo\\n     bar\", _doc.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c2ba25213fd251239605646eaf101f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyElementaryVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Void forConcreteMethodDef(ConcreteMethodDef that)", "signatureAfterChange": "   public Void forConcreteMethodDef(ConcreteMethodDef that)", "diff": ["-    that.getBody().visit(new BodyBodyElementaryVisitor(md, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    that.getBody().visit(new BodyBodyElementaryVisitor(md, _file, _package, _importedFiles, _importedPackages, ", "+                                                       _classNamesInThisFile, continuations, _innerClassesToBeParsed));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c57e099df53f96c882d6d1aaa65b267", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "commitAfterChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 60, "signatureBeforeChange": "     public ThreadMouseAdapter()", "signatureAfterChange": "     public ThreadMouseAdapter()", "diff": ["-      super(_threadTable, _threadMenuItem, _threadPopupMenu);", "+      super(_threadTable);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c73fc6810405802382681b9fb73f5cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 344, "methodNumberAfterChange": 447, "signatureBeforeChange": "    final private boolean jj_3R_116()", "signatureAfterChange": "    final private boolean jj_3R_103()", "diff": ["+", "+  final private boolean jj_3R_103() {", "+    if (jj_3R_154()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_220()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_116() {", "-    if (jj_3R_172()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_222()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c917c80963fe7b49f85c9cebc14fd6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/SingleQuoteTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testDeleteAndCombine2()", "signatureAfterChange": "   public void testDeleteAndCombine2()", "diff": ["-    assertEquals(\"#0.1\", FREE, model0.getStateAtCurrent());", "+    assertEquals(\"#0.1\", FREE, model0._getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c91dcb17e360afbc232b2b7c1883b9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 732, "methodNumberAfterChange": 737, "signatureBeforeChange": "    final private boolean jj_3R_492()", "signatureAfterChange": "    final private boolean jj_3R_499()", "diff": ["-", "-  final private boolean jj_3R_492() {", "-    if (jj_3R_496()) return true;", "-    if (jj_3R_281()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_499() {", "+    if (jj_3R_503()) return true;", "+    if (jj_3R_289()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ca63120d1c929da88a6bd03c3178921", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ArrayInitializer.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void setElementType(TypeName t)", "signatureAfterChange": "   public void setElementType(TypeName t)", "diff": ["-      Iterator  it = cells.iterator();", "-      while (it.hasNext()) {", "-        Object init = it.next();", "+      for (Expression init : cells) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cc024a07aabdcd1d1f4d54ceee72a41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 851, "methodNumberAfterChange": 378, "signatureBeforeChange": "    final private boolean jj_3R_494()", "signatureAfterChange": "    final private boolean jj_3R_417()", "diff": ["+  final private boolean jj_3R_417() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_446()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_447()) return true;", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_494() {", "-    if (jj_3R_514()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_515()) return true;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cc04c7b9dec696a691ff872d7c89457", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 325, "signatureBeforeChange": "      private void _compileProject()", "signatureAfterChange": "      private void _compileProject()", "diff": ["-    simpleHourglassOn();", "+    hourglassOn();", "-    finally { simpleHourglassOff();}", "+    finally { hourglassOff();}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d16fd1bce7c85fda8725616258d412b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ClasspathVectorTest.java", "commitBeforeChange": "cf133e63dac33b490f37f86f2c16723ac73d3ddb", "commitAfterChange": "a9bbc10d38df86a38f2ef6e21e38b24699a8fc7f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void test_toString()", "signatureAfterChange": "   public void test_toString()", "diff": ["-    assertEquals(\"One element classpath\", \"/jsr14.jar\"+File.pathSeparator,v.toString());", "+    assertEquals(\"One element classpath\", File.separator+\"jsr14.jar\"+File.pathSeparator,v.toString());", "-    assertEquals(\"Multiple element classpath\", \"/jsr14.jar\" + File.pathSeparator + \"/wherever/supercool.jar\" + File.pathSeparator, v.toString());", "+    assertEquals(\"Multiple element classpath\", File.separator+\"jsr14.jar\" + File.pathSeparator + \"/wherever/supercool.jar\" + File.pathSeparator, v.toString());", "-    assertEquals(\"Multiple element classpath\", \"/jsr14.jar\" + File.pathSeparator + \"/wherever/supercool.jar\" + File.pathSeparator + \"/hosted.jar\" + File.pathSeparator, v.toString());", "+    assertEquals(\"Multiple element classpath\", File.separator+\"jsr14.jar\" + File.pathSeparator + \"/wherever/supercool.jar\" + File.pathSeparator + \"/hosted.jar\" + File.pathSeparator, v.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d3af899c720abc86fd53cd652c01d51", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "     public Object visit(PreIncrement node)", "signatureAfterChange": "   public Class visit(PreIncrement node)", "diff": ["+   */", "+  public Class visit(PreIncrement node) {", "+    Node exp = node.getExpression();", "+    Class c  = (Class)exp.acceptVisitor(this);", "+    ", "+    // The type of the subexpression must be numeric", "+    if (!c.isPrimitive()   ||", "+        c == void.class    ||", "+        c == boolean.class) {", "+      throw new ExecutionError(\"pre.increment.type\", node);", "+    }", "+    ", "+    // The subexpression must be a variable", "+    if (!exp.hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"pre.increment.type\", node);", "+    }", "+    ", "+    node.setProperty(NodeProperties.TYPE, c);", "+    return c;", "+  }", "-     */", "-    public Object visit(PreIncrement node) {", "-        Node exp = node.getExpression();", "-        Class c  = (Class)exp.acceptVisitor(this);", "-", "-        // The type of the subexpression must be numeric", "-        if (!c.isPrimitive()   ||", "-            c == void.class    ||", "-            c == boolean.class) {", "-            throw new ExecutionError(\"pre.increment.type\", node);", "-        }", "-", "-        // The subexpression must be a variable", "-        if (!exp.hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"pre.increment.type\", node);", "-        }", "-", "-        node.setProperty(NodeProperties.TYPE, c);", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d5357868b469e38c76d521aa3ff8544", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e62ed8297c798946c8d04e911cb118b8a9e10779", "commitAfterChange": "edc3544a227872bc7c7b20e7fb9fc2b7a3017d2d", "methodNumberBeforeChange": 347, "methodNumberAfterChange": 348, "signatureBeforeChange": "   private void _setUpToolBar()", "signatureAfterChange": "   private void _setUpToolBar()", "diff": ["-    _toolBar.add(_createToolbarButton(_runAction));", "+    _toolBar.add(_runButton = _createToolbarButton(_runAction));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d669ec5a4064c1aefd1f1b351431077", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "cb029f12bd6c2fdcdba02605492a4baf5ca47e02", "commitAfterChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": "      public void interactionsReset()", "signatureAfterChange": "      public void interactionsReset()", "diff": ["+      if (_model.getDebugManager() != null) {", "+        _toggleDebuggerAction.setEnabled(true);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d6a3cdafdb3b0c201a7daa5d3a926f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "91734830bfc37ccb85bb6b7693b74ec1fa3e1c29", "commitAfterChange": "29114a3ab27f49e46885f181f9f058e018ee6b61", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 43, "signatureBeforeChange": "      public void write(OutputStream os) throws IOException", "signatureAfterChange": "      public void write(OutputStream os) throws IOException", "diff": ["+    xc.set(\"drjava/project.autorefresh\", String.valueOf(_autoRefreshStatus));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d6e9efafa5c9272e4067580565d260f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "be84679bc73e85f88d6958fbfdf8b35be73855ab", "commitAfterChange": "a6b0a623369310bca609596a45d42dfc11ddae97", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   static void ventBuffers(BufferedReader jdOut, BufferedReader jdErr,                           LinkedList outLines, LinkedList errLines)     throws IOException", "signatureAfterChange": "   static void ventBuffers(BufferedReader jdOut, BufferedReader jdErr,                           LinkedList outLines, LinkedList errLines)     throws IOException", "diff": ["+      System.out.println(\"[stdout]: \" + output);", "+      System.out.println(\"[stderr] \" + output);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dabadb4c3721d785a335ca49dbbb931", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "8cfaf2efb8ae59b79b9538e0bd5eaf251c6db08b", "commitAfterChange": "b732820bc2f8849bda78001b782e555a753cad1e", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "   public boolean closeFiles(List<OpenDefinitionsDocument> docList)", "signatureAfterChange": "   public boolean closeFiles(List<OpenDefinitionsDocument> docList)", "diff": ["-    for (OpenDefinitionsDocument doc : docList) { if (!doc.canAbandonFile()) return false; }", "+    for (OpenDefinitionsDocument doc : docList) { if (! doc.canAbandonFile()) return false; }", "-    // an active file that is not in the list of closing files.", "-    OpenDefinitionsDocument newDoc = null;", "-    if (docList.size() == getOpenDefinitionsDocumentsSize()) newDoc = newFile();", "+    // a potentially active file that is not in the list of closing files.", "+    if (docList.size() == getOpenDefinitionsDocumentsSize()) newFile();", "-    // first document in docList.", "+    // first document in docList.  A new file does not appear in docList."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4de313e474b576746cb661d3aa2aca4c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   protected String interpret(final String input) throws EditDocumentException", "signatureAfterChange": "   protected String interpret(final String input) throws EditDocumentException", "diff": ["-    try { listener.waitInteractionDone(); }", "-    catch (InterruptedException ie) { throw new UnexpectedException(ie); }", "+    listener.waitInteractionDone();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4deacb815e29907c009924e847246e4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "32543485a6c30402f49deaf8c43253937744fd6f", "commitAfterChange": "785973c3139c615cf62589c63d8216d8eae75cbb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public JUnitPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public JUnitPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["+    _progressBar.setUI(new javax.swing.plaf.basic.BasicProgressBarUI());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4def7445c441bd1c734a634544ec46cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/repl/EclipseInteractionsModel.java", "commitBeforeChange": "bfc3e0843658fe88dfa445991b253f3abfe88628", "commitAfterChange": "bd2e852d4b09497531ae79af49475815d01d70b1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   protected void _notifyInteractionStarted()", "signatureAfterChange": "   protected void _notifyInteractionStarted()", "diff": ["-      ((InteractionsListener)_listeners.get(i)).interactionStarted();", "+      _listeners.get(i).interactionStarted();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e2286196a5c8aaf715ad82980ded8b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0bcb8da0b79cf218cc2712f201e3771599202c44", "commitAfterChange": "c34979036dca11c3afc06b42fcb087eaf85bc790", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 182, "signatureBeforeChange": "   boolean _closeProject()", "signatureAfterChange": "   boolean _closeProject()", "diff": ["-      boolean couldClose = _model.closeFiles(projDocs, true);", "+      boolean couldClose = _model.closeFiles(projDocs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e2726be6771f150447f090df65ab6d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public Void forConcreteMethodDef(ConcreteMethodDef that)", "signatureAfterChange": "   public Void forConcreteMethodDef(ConcreteMethodDef that)", "diff": ["-    that.getBody().visit(new BodyBodyIntermediateVisitor(md, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    that.getBody().visit(new BodyBodyIntermediateVisitor(md, _file, _package, _importedFiles, _importedPackages, ", "+                                                         _classNamesInThisFile, continuations, _innerClassesToBeParsed));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e5d42e5c195fd510c9f7cf1fa89a11e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DrJavaTestCaseClassLoader.java", "commitBeforeChange": "cd41b34cec4c099dc551839a16c1a804b7900ef0", "commitAfterChange": "91f1790d793689beae896db47015b721b602919f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public boolean isExcluded(String name)", "signatureAfterChange": "   public boolean isExcluded(String name)", "diff": ["-      if (name.startsWith((String) fExcluded.elementAt(i))) {", "-        return true;", "-      }", "+      if (name.startsWith(fExcluded.elementAt(i))) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e60635e77f9e6ba883cd7537e6552b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "408446b2528763b45ba1c173b0d3db2685562747", "commitAfterChange": "bf7190c8946c28e9e6bd599bd6f030a6339f362e", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": "      private void _openProjectUpdate()", "signatureAfterChange": "      private void _openProjectUpdate()", "diff": ["-//      _saveProjectAction.setEnabled(false);", "+      _saveProjectAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e72acc93d1b67e0b90a70c7c24d6336", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 280, "methodNumberAfterChange": 547, "signatureBeforeChange": "    final private boolean jj_3R_454()", "signatureAfterChange": "    final private boolean jj_3R_456()", "diff": ["-  final private boolean jj_3R_454() {", "-    if (jj_3R_90()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3_30()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_456() {", "+    if (jj_3R_91()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_30()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e8861178d3e67666741187da54fbc74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/JavaClass.java", "commitBeforeChange": "fa20bbad84f51c844e01bca2b3fd5eacb2aa37bd", "commitAfterChange": "90ca22f045f683896f275759514c21a8010630fa", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "          public Object evaluate(Object receiver, Iterable<Object> args, RuntimeBindings bindings,                             Options options) throws EvaluatorException", "signatureAfterChange": "          public Object evaluate(Object receiver, Iterable<Object> args, RuntimeBindings bindings,                             Options options) throws EvaluatorException", "diff": ["-        return _m.invoke(receiver, IterUtil.asList(args).toArray());", "+        return _m.invoke(receiver, IterUtil.toArray(args, Object.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e8b6259542580b7dbceb18d2516b795", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 554, "methodNumberAfterChange": 550, "signatureBeforeChange": "    final private boolean jj_3R_426()", "signatureAfterChange": "    final private boolean jj_3R_428()", "diff": ["-", "-  final private boolean jj_3R_426() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_446()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(86)) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_447()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_428() {", "+    if (jj_3R_448()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(86)) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_449()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e9915dfbdca997ba28252320518839e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BrowserHistoryPanel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-      _region.getDocument().acquireReadLock();", "+//      _region.getDocument().acquireReadLock();", "+//      try {", "+      sb.append(\"<html>\");", "+      if (_region==_model.getBrowserHistoryManager().getCurrentRegion()) {", "+        sb.append(\"<font color=\\\"red\\\">\");", "+      }", "+      sb.append(_region.getDocument().toString());", "+      sb.append(':');", "+      sb.append(lineNumber());", "-        sb.append(\"<html>\");", "-        if (_region==_model.getBrowserHistoryManager().getCurrentRegion()) {", "-          sb.append(\"<font color=\\\"red\\\">\");", "-        }", "-        sb.append(_region.getDocument().toString());", "-        sb.append(':');", "-        sb.append(lineNumber());", "-        try {", "-          sb.append(\": \");", "-          int length = Math.min(120, _region.getEndOffset()-_region.getStartOffset());", "-          sb.append(_region.getDocument().getText(_region.getStartOffset(), length).trim());", "-        } catch(BadLocationException bpe) { /* ignore, just don't display line */ }", "-        if (_region.equals(_model.getBrowserHistoryManager().getCurrentRegion())) {", "-          sb.append(\"</font>\");", "-        }", "-        sb.append(\"</html>\");", "-      } finally { _region.getDocument().releaseReadLock(); }", "+        sb.append(\": \");", "+        int length = Math.min(120, _region.getEndOffset()-_region.getStartOffset());", "+        sb.append(_region.getDocument().getText(_region.getStartOffset(), length).trim());", "+      } catch(BadLocationException bpe) { /* ignore, just don't display line */ }", "+      if (_region.equals(_model.getBrowserHistoryManager().getCurrentRegion())) {", "+        sb.append(\"</font>\");", "+      }", "+      sb.append(\"</html>\");", "+//      } ", "+//      finally { _region.getDocument().releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e9bb6ea60753f8c0424f9bae7530271", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 284, "methodNumberAfterChange": 865, "signatureBeforeChange": "    final private boolean jj_3R_269()", "signatureAfterChange": "    final private boolean jj_3R_303()", "diff": ["-", "-  final private boolean jj_3R_269() {", "-    if (jj_scan_token(SYNCHRONIZED)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_110()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_167()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_303() {", "+    if (jj_scan_token(SYNCHRONIZED)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_112()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_175()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ecbb073fe2a2dfc031659515123d49b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Node processTree(Node node)", "signatureAfterChange": "   public Node processTree(Node node)", "diff": ["-    return (Node) node.acceptVisitor(_translationVisitor);", "+    return node.acceptVisitor(_translationVisitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ed0e5e72296971ab06ce8e3bf62561b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/sexp/NumberAtom.java", "commitBeforeChange": "76c0b2960b62020d46b810955623e0af759eee20", "commitAfterChange": "936042cad9bfa0086510cc58a96357306371fb07", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public NumberAtom(int num)", "signatureAfterChange": "   public NumberAtom(int num)", "diff": ["-    _num = (double)num;", "+    _num = num;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ed303bde247afe00e4c83e06874128b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["-    _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "+    _tempDir = IOUtil.createAndMarkTempDirectory(\"DrJava-test-\" + user, \"\");", "-//    FileOps.deleteDirectoryOnExit(_tempDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4edd77b7019a6e391d6d7f84787bd950", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 597, "methodNumberAfterChange": 582, "signatureBeforeChange": "    final private boolean jj_3R_571()", "signatureAfterChange": "    final private boolean jj_3R_574()", "diff": ["-  final private boolean jj_3R_571() {", "-    if (jj_3R_286()) return true;", "+  final private boolean jj_3R_574() {", "+    if (jj_3R_288()) return true;", "-      if (jj_3R_577()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_580()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eead34ba89d07ae2804d77af4814817", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "1ff154e9eb4de7b8f07ce9a8120997b76e53aa3f", "commitAfterChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void removeRegions(final OpenDefinitionsDocument odd)", "signatureAfterChange": "   public void removeRegions(final OpenDefinitionsDocument odd)", "diff": ["-    if (docNode == _cachedDocNode) _cachedDoc = null;", "+//    if (docNode == _cachedDocNode) _cachedDoc = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eee0ab4551ca1c54361c62ead9a603b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "6f37af6087e88b55d504fabdb6eee22be7ba1948", "commitAfterChange": "7fcdc5820c7f1c50a17a282e38bc904783e87e7f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testAccessFieldsAndMethodsOfOuterClasses()     throws DebugException, BadLocationException, EditDocumentException, IOException, InterruptedException", "signatureAfterChange": "   public void testAccessFieldsAndMethodsOfOuterClasses()     throws DebugException, BadLocationException, EditDocumentException, IOException, InterruptedException", "diff": ["-    assertInteractionsDoesNotContain(\"18\");", "-    assertInteractionsDoesNotContain(\"6\");", "-    assertInteractionsContains(\"8\" + _newLine + \"13\" + _newLine);", "+    assertInteractionsDoesNotMatch(\".*^18$.*\");", "+    assertInteractionsDoesNotMatch(\".*^6$.*\");", "+    assertInteractionsMatches(\".*^8\" + _newLine + \"13$.*\");", "-    assertInteractionsContains(\"6\");", "+    assertInteractionsMatches(\".*^6$.*\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eef34a9892b17ad5dbac7c3b8818701", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "65add9d9f0de9278803d6c9a77b3294a4ab082f3", "commitAfterChange": "1ad8d0f619615b40333c2ef2eca24506e4639e2b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected void doCompile(OpenDefinitionsDocument doc, File file)     throws IOException, InterruptedException", "signatureAfterChange": "   protected void doCompile(OpenDefinitionsDocument doc, File file)     throws IOException, InterruptedException", "diff": ["-        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "+        fail(\"compile failed: \" + getCompilerErrorString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f1fe69ae471c6accbcf06eac13e75b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 340, "methodNumberAfterChange": 854, "signatureBeforeChange": "    final private boolean jj_3R_89()", "signatureAfterChange": "    final private boolean jj_3R_91()", "diff": ["-", "-  final private boolean jj_3R_89() {", "-    if (jj_3R_120()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_144()) jj_scanpos = xsp;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_91() {", "+    if (jj_3R_123()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_147()) jj_scanpos = xsp;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f357cda6efefa7ba16c12bf77a5290d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 490, "methodNumberAfterChange": 627, "signatureBeforeChange": "    final private boolean jj_3R_115()", "signatureAfterChange": "    final private boolean jj_3R_114()", "diff": ["-  final private boolean jj_3R_115() {", "-    if (jj_3R_99()) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_114() {", "+    if (jj_3R_94()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f5c32655b6acd8293ee587248d2bc15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JarOptionsDialog.java", "commitBeforeChange": "7fcdc5820c7f1c50a17a282e38bc904783e87e7f", "commitAfterChange": "d830817ad51f719712b51fdb2a8f1a777c48c977", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private void _loadSettings()", "signatureAfterChange": "   private void _loadSettings()", "diff": ["-    if ((_model.getBuildDirectory() == null) || (_model.hasOutOfSyncDocuments())) {", "+    boolean outOfSync = true;", "+    if (_model.getBuildDirectory() != null) {", "+      outOfSync = _model.hasOutOfSyncDocuments();", "+    }", "+    if ((_model.getBuildDirectory() == null) || (outOfSync)) {", "-      if ((_model.getBuildDirectory() == null) && (_model.hasOutOfSyncDocuments())) {", "+      if ((_model.getBuildDirectory() == null) && (outOfSync)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f5d00802c6263bdf57ee8758e2dfb02", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 364, "methodNumberAfterChange": 364, "signatureBeforeChange": "   public void debuggerToggle()", "signatureAfterChange": "   public void debuggerToggle()", "diff": ["-      if (isDebuggerReady()) debugger.shutdown();", "+      if (isDebuggerReady()) {", "+        debugger.shutdown();", "+        _breakpointsPanel._close();", "+      }", "-    catch (DebugException de) {", "-      _showError(de, \"Debugger Error\", \"Could not start the debugger.\");", "-    }", "+    catch (DebugException de) { _showError(de, \"Debugger Error\", \"Could not start the debugger.\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f5e28826aa3914db8d751c8c5e97896", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private void _updateWithErrors() throws BadLocationException", "signatureAfterChange": "     private void _updateWithErrors() throws BadLocationException", "diff": ["-          filename = file.getAbsolutePath();", "+          filename = file.getName();", "-", "+          JUnitError currError = errorsWithPositions[j];", "+          ", "-          doc.insertString(doc.getLength(), filename + \"\\n\", NORMAL_ATTRIBUTES);", "+          String fileAndLineNumber = filename + \"  [line: \" + (currError.lineNumber()+1) + \"]\";", "+          doc.insertString(doc.getLength(), fileAndLineNumber + \"\\n\", NORMAL_ATTRIBUTES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f61c6e37b154be48f67c94e907920f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyIntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testForSimpleThisReferenceDoFirst()", "signatureAfterChange": "      public void testForSimpleThisReferenceDoFirst()", "diff": ["-     SimpleThisReference tl = new SimpleThisReference(JExprParser.NO_SOURCE_INFO);", "+     SimpleThisReference tl = new SimpleThisReference(SourceInfo.NO_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f64120cea56815aa4b8cab30622c753", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public int getPositionBeforePrompt()", "signatureAfterChange": "   public int getPositionBeforePrompt()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f7957479901bc3f40b9b27de3b78b4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "4cc63aff8a22c85ad1d78de9f4e0b9395e7d4e72", "commitAfterChange": "e330f3abbead97d3e3ac8751976bab81936096c2", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "\r \r     public void testIsElementaryFile()", "signatureAfterChange": "      public void testIsElementaryFile()", "diff": ["-\r", "-    public void testIsElementaryFile() {\r", "-      _llv = new ElementaryVisitor(new File(\"elementary.dj0\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>(), null);\r", "-      assertTrue(\"This is an elementary file\", _isElementaryFile());\r", "-      _llv = new IntermediateVisitor(new File(\"intermediate.dj1\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>(), null);\r", "-      assertFalse(\"This is an intermediate file\", _isElementaryFile());\r", "-      _llv = new AdvancedVisitor(new File(\"advanced.dj2\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>(), null);\r", "-      assertFalse(\"This is an advanced file\", _isElementaryFile());\r", "-      _llv = new ElementaryVisitor(new File(\"full.java\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>(), null);\r", "-      assertFalse(\"This is a full file\", _isElementaryFile());\r", "-    }\r", "+", "+    public void testIsElementaryFile() {", "+      _llv = new ElementaryVisitor(new File(\"elementary.dj0\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>());", "+      assertTrue(\"This is an elementary file\", _isElementaryFile());", "+      _llv = new IntermediateVisitor(new File(\"intermediate.dj1\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>());", "+      assertFalse(\"This is an intermediate file\", _isElementaryFile());", "+      _llv = new AdvancedVisitor(new File(\"advanced.dj2\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>());", "+      assertFalse(\"This is an advanced file\", _isElementaryFile());", "+      _llv = new ElementaryVisitor(new File(\"full.java\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>());", "+      assertFalse(\"This is a full file\", _isElementaryFile());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f7d49becc4edf42a197ba98ce982866", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "37cb2bfb22e115a398b71e747e8ea20db8f942c4", "commitAfterChange": "91c53cd07983b56bb23a0364083f48fb65943845", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+    _openChooser.setMultiSelectionEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f7e8c0bf90828375a85f9a95c25fa23", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "2ec67558fcc2be0c684677fea7ee9feb674b02bc", "commitAfterChange": "a937ccbbfe3e2271b14c781e19a341556df45efe", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "signatureAfterChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "diff": ["-      throw new RuntimeException(e);", "+      throw new RuntimeException(e.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f8565a98f76b2ba6a0746258b4833b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/gui/Editor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public Action getAction(String key) throws MissingListenerException", "signatureAfterChange": "   public Action getAction(String key) throws MissingListenerException", "diff": ["+   */", "+  public Action getAction(String key) throws MissingListenerException {", "+    Action[] editorActions = getActions();", "+    ", "+    for (int i = 0; i < editorActions.length; i++) {", "+      if (editorActions[i].getValue(Action.NAME).equals(key)) {", "+        return editorActions[i];", "+      }", "-     */", "-    public Action getAction(String key) throws MissingListenerException {", "-        Action [] actions = getActions();", "-", "-        for (int i = 0; i < actions.length; i++) {", "-            if (actions[i].getValue(Action.NAME).equals(key)) {", "-                return actions[i];", "-            }", "-        }", "-        return (Action)this.actions.get(key);", "-    }", "+    return actions.get(key);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4faeedfcbf2982ef24e00f988b5b35af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "5fd3be9fe9ba8de5c8aa1fa3961e1d5624c85202", "commitAfterChange": "688e157c7573e27d29048be4b5c2986e80d14e52", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public static void main(final String[] args)", "signatureAfterChange": "   public static void main(final String[] args)", "diff": ["-      if (!_forceNewInstance && (_filesToOpen.size()>0)) {", "+      if (!_forceNewInstance &&", "+          DrJava.getConfig().getSetting(edu.rice.cs.drjava.config.OptionConstants.REMOTE_CONTROL_ENABLED) &&", "+          (_filesToOpen.size()>0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fce56638beceb9cdb70b00b92b05ef8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private int _getFirstNonWSCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   private int getFirstNonWSCharPos(int pos) throws BadLocationException", "diff": ["-  private int _getFirstNonWSCharPos(int pos) throws BadLocationException {", "-    return _doc._getFirstNonWSCharPos(pos); ", "+  private int getFirstNonWSCharPos(int pos) throws BadLocationException {", "+    return _doc.getFirstNonWSCharPos(pos); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ff594907f56fd1be3de09ce2ea543f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "commitAfterChange": "1f8260d28d77ced05a0c3194c27d53226694751c", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "   public Document getPrevDocument(Document doc)", "signatureAfterChange": "   public Document getPrevDocument(Document doc)", "diff": ["-      return getODDGivenIDoc(nextitem).getDocument();", "+      return getODDGivenIDoc(nextitem);", "-      return getODDGivenIDoc(nextitem).getDocument();", "+      return getODDGivenIDoc(nextitem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ffad4c3ce005ab11823fbe07d7edcf0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "e7812efd9f0ea9fd7f568ab9b267e30ff5e61cca", "commitAfterChange": "de8c1f4e7df585e05a2e0cd69ddbb07d6d45c773", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \t\tpublic boolean findText (String fWord)", "signatureAfterChange": "  \t\tpublic boolean findText (String fWord)", "diff": ["-\t\t\t\tSystem.out.println(\"find \" + fWord);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "501af0e25c60619f0813d99a0f192023", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "53d061333fe3393f6569c1f553912f1a449482ad", "commitAfterChange": "12c8304e14a6d9eafe2f7093583d8040569150c1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testInteractionsCanSeeChangedClass() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsCanSeeChangedClass() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "diff": ["-//    _log.log(\"testInteractionsCanSeeChangedClass() completed\");", "+    _log.log(\"testInteractionsCanSeeChangedClass() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "502e24d15c159e1a3734a1766e92b7dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 700, "signatureBeforeChange": "    final private boolean jj_3R_440()", "signatureAfterChange": "    final private boolean jj_3R_477()", "diff": ["-", "-  final private boolean jj_3R_440() {", "-    if (jj_3R_87()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_459()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_477() {", "+    if (jj_3R_89()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_479()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50599f23c2597872ee40bdef3d9d5f99", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 446, "methodNumberAfterChange": 450, "signatureBeforeChange": "    final private boolean jj_3R_225()", "signatureAfterChange": "    final private boolean jj_3R_233()", "diff": ["-  final private boolean jj_3R_225() {", "+  final private boolean jj_3R_233() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;", "-    if (jj_3R_150()) return true;", "+    if (jj_3R_154()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50677d43f2aa73793807fd5ee5ed3edc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/BooleanOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testApplyDoesChangeConfig()", "signatureAfterChange": "    public void testApplyDoesChangeConfig()", "diff": ["+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "509a693e38cf54152dbf3a89674ccfdd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/FileOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testApplyDoesChangeConfig()", "signatureAfterChange": "    public void testApplyDoesChangeConfig()", "diff": ["+", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50ba2d661d5d62564ed585b0a245f78e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorKeyStrokeOptionComponent.java", "commitBeforeChange": "433b13a797196089fe338c13ae74a57a898d3d4c", "commitAfterChange": "dffb568c2302b16a97ba0780ebf9b8a7292012c9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public VectorKeyStrokeOptionComponent (VectorOption<KeyStroke> opt, String text, SwingFrame parent, boolean moveButtonEnabled)", "signatureAfterChange": "   public VectorKeyStrokeOptionComponent (VectorOption<KeyStroke> opt, String text, SwingFrame parent, boolean moveButtonEnabled)", "diff": ["-    super(opt, text, parent, true);  // creates three buttons, no remove", "+    super(opt, text, parent);  // creates all four buttons"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50c323f1450373e66dd48ef22767b904", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassInfoCompiler.java", "commitBeforeChange": "0cc20e52ff83b7000f2c534f4df717db22d53165", "commitAfterChange": "01976b859dcbb21fcccdad846dcb4a0675ac7cca", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Class compile()", "signatureAfterChange": "   public Class compile()", "diff": ["-                               new BlockStatement(classInitializer),", "-                               false),", "+                               new BlockStatement(classInitializer)),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50ce35683b828dac1e35d752b42b9056", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 367, "methodNumberAfterChange": 736, "signatureBeforeChange": "    final private boolean jj_3R_192()", "signatureAfterChange": "    final private boolean jj_3R_197()", "diff": ["-  final private boolean jj_3R_192() {", "-    if (jj_3R_225()) return true;", "-      if (jj_3R_263()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_197() {", "+    if (jj_3R_229()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_230()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50d123243abe9e70f9864f6a77301ca8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DefaultInteractionsModel.java", "commitBeforeChange": "fa78ee7a06602f123abf33b8aef0005c93bb3efa", "commitAfterChange": "f26f93ad5e4b158c960a6cefd64cf99f7137ecbc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DefaultInteractionsModel(DefaultGlobalModel model, MainJVM control, DocumentAdapter adapter)", "signatureAfterChange": "   public DefaultInteractionsModel(DefaultGlobalModel model, MainJVM control, DocumentAdapter adapter)", "diff": ["-    Boolean allow =", "-      DrJava.getConfig().getSetting(OptionConstants.JAVAC_ALLOW_ASSERT);", "+    Boolean allow = DrJava.getConfig().getSetting(OptionConstants.JAVAC_ALLOW_ASSERT);", "-                                         _document.getHistory().", "-                                           new HistorySizeOptionListener());", "+                                         _document.getHistoryOptionListener());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50d29f5bbf147cbdd5ccf94fe4c7569a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/GenericTreeTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "    public void testHandParsedGenericClass()", "signatureAfterChange": "    public void testHandParsedGenericClass()", "diff": ["-    ReferenceType numberType = new ReferenceType(numberIds);", "-    TypeParameter t = new TypeParameter(new SourceInfo(), tIds, numberType, new LinkedList<ReferenceType>()); // T extends Number", "+    ReferenceTypeName numberType = new ReferenceTypeName(numberIds);", "+    TypeParameter t = new TypeParameter(new SourceInfo(), tIds, numberType, new LinkedList<ReferenceTypeName>()); // T extends Number", "-    ConstructorDeclaration c = new ConstructorDeclaration(accessFlags, \"C\", cparams, new LinkedList<ReferenceType>(), null, cstmts);", "+    ConstructorDeclaration c = new ConstructorDeclaration(accessFlags, \"C\", cparams, new LinkedList<ReferenceTypeName>(), null, cstmts);", "-    List<ReferenceType> mexcepts = new LinkedList<ReferenceType>();", "+    List<ReferenceTypeName> mexcepts = new LinkedList<ReferenceTypeName>();", "-    List<ReferenceType> targs = new LinkedList<ReferenceType>();", "-    targs.add(new ReferenceType(iIds));", "-    List<List<? extends Type>> alltargs = new LinkedList<List<? extends Type>>();", "-    alltargs.add(new LinkedList<ReferenceType>());", "-    alltargs.add(new LinkedList<ReferenceType>());", "+    List<ReferenceTypeName> targs = new LinkedList<ReferenceTypeName>();", "+    targs.add(new ReferenceTypeName(iIds));", "+    List<List<? extends TypeName>> alltargs = new LinkedList<List<? extends TypeName>>();", "+    alltargs.add(new LinkedList<ReferenceTypeName>());", "+    alltargs.add(new LinkedList<ReferenceTypeName>());", "-    Type genericCType = new GenericReferenceType(ids, alltargs);", "+    TypeName genericCType = new GenericReferenceTypeName(ids, alltargs);", "-    mccargs.add(new SimpleAllocation(new ReferenceType(iIds), fiveExps));", "+    mccargs.add(new SimpleAllocation(new ReferenceTypeName(iIds), fiveExps));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "511ba38e315a9ba84a40f09af0f7647a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "7cfeec5d0573a05afa60f045397b7528ba2aa086", "commitAfterChange": "b155114812a8cbcc9237269e7062e3599ab1f574", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   public InterpreterJVMRemoteI ensureInterpreterConnected()", "signatureAfterChange": "   public InterpreterJVMRemoteI ensureInterpreterConnected()", "diff": ["-    try {", "-      synchronized(_interpreterLock) {", "-        /* Now we silently fail if interpreter is disabled instead of throwing an exception. This situation", "-         * occurs only in test cases and when DrJava is about to quit. ", "-         */", "-        if (! _restart) { throw new IllegalStateException(\"Interpreter is disabled\"); }", "-        InterpreterJVMRemoteI slave = _interpreterJVM();", "-        while (slave == null) {", "-          debug.log(\"Interpreter is null, waiting for it to register\");", "-          _interpreterLock.wait();", "-          slave = _interpreterJVM();", "+    synchronized(_interpreterLock) {", "+      /* Now we silently fail if interpreter is disabled instead of throwing an exception. This situation", "+       * occurs only in test cases and when DrJava is about to quit. ", "+       */", "+      if (! _restart) { throw new IllegalStateException(\"Interpreter is disabled\"); }", "+      InterpreterJVMRemoteI slave = _interpreterJVM();", "+      // Use a DelayedInterrupter for timeout rather than wait(timeout) because the latter doesn't", "+      // trigger an exception, so it's indistinguishable from a spurious wakeup", "+      if (slave == null) {", "+        try {", "+          DelayedInterrupter timeout = new DelayedInterrupter(REGISTRATION_TIMEOUT);", "+          while (slave == null) {", "+            debug.logStart(\"Interpreter is null, waiting for it to register\");", "+            _interpreterLock.wait();", "+            slave = _interpreterJVM();", "+          }", "+          timeout.abort();", "+          debug.logEnd(\"Interpreter registered\");", "-        debug.log(\"Interpreter registered\");", "-        ", "-        return slave;", "+        catch (InterruptedException ie) {", "+          debug.logEnd(\"Interpreter failed to register\");", "+          throw new UnexpectedException(ie, \"Wait for interpreter to register was interrupted (probably timed out)\");", "+        }", "+      return slave;", "-    catch (InterruptedException ie) { throw new UnexpectedException(ie); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "511e9d7ddf01454117d0b7c2d452d864", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "cf1b07a5f122d4faa57c9cb7ed7def1489ba2183", "commitAfterChange": "cf133e63dac33b490f37f86f2c16723ac73d3ddb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public String getClasspathString()", "signatureAfterChange": "   public ClasspathVector getClasspath()", "diff": ["-  public String getClasspathString() {", "-    return _jvm.getClasspathString();", "+  public ClasspathVector getClasspath() {", "+    return _jvm.getClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "513ad0201bab2c365c3e7aca81f632da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "5ac038fd2393232341f24ed3abaede1deb4e977a", "commitAfterChange": "a0db040e26a6b2489480a68886f9804fd65f5264", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public List<String> findTestClasses(final List<String> classNames, final List<File> files)", "signatureAfterChange": "   public List<String> findTestClasses(final List<String> classNames, final List<File> files)", "diff": ["-    // new ScrollableDialog(null, \"JUnitManager.findTestClasses invoked\", \"Candidate classes are = \" + classNames, \"files = \" + files).show();", "+//    new ScrollableDialog(null, \"JUnitManager.findTestClasses invoked\", \"Candidate classes are = \" + classNames, \"files = \" + files).show();", "-        // new ScrollableDialog(null, \"Class to be checked in JUnitManager: \" + cName, \"\", \"\").show();", "+//        new ScrollableDialog(null, \"Class to be checked in JUnitManager: \" + cName, \"\", \"\").show();", "-            // new ScrollableDialog(null, \"Test class \" + cName + \" found!\", \"\", \"\").show();", "+//            new ScrollableDialog(null, \"Test class \" + cName + \" found!\", \"\", \"\").show();", "-          _jmc.classFileError(new ClassFileError(files.get(i).getCanonicalPath(), e));", "+//          new ScrollableDialog(null, \"LinkageError(\" + e + \") encountered in JUnitTestManager\", \"\", \"\").show();", "+          _jmc.classFileError(new ClassFileError(cName, files.get(i).getCanonicalPath(), e));", "-    // new ScrollableDialog(null, \"TestClassNames are: \" + _testClassNames, \"\", \"\").show();", "+//    new ScrollableDialog(null, \"TestClassNames are: \" + _testClassNames, \"\", \"\").show();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5149c1c0bd3ec2db3ed4b26a7b18757d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testCompileAbortsIfAnyUnsaved()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileAbortsIfAnyUnsaved()     throws BadLocationException, IOException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "514a8a82e403aa5fb9539d606e263559", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6f3940face1890969eb276e9b92d09c044ad9646", "commitAfterChange": "65470e7b91e9f1ddb83697a2b834c11e593097a6", "methodNumberBeforeChange": 322, "methodNumberAfterChange": 327, "signatureBeforeChange": "     private void _fileClosed(OpenDefinitionsDocument doc)", "signatureAfterChange": "     private void _fileClosed(OpenDefinitionsDocument doc)", "diff": ["+      _df.closeDocument(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "514edbdf93e7987875bb2f5169a1807d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "commitAfterChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "      public void caretUpdate( CaretEvent ce )", "signatureAfterChange": "      public void caretUpdate( CaretEvent ce )", "diff": ["-      _model.getActiveDocument().", "-        syncCurrentLocationWithDefinitions(ce.getDot());", "+      //_model.getActiveDocument().", "+      //  syncCurrentLocationWithDefinitions(ce.getDot());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5151a894d80828668989c19b7d372d15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "     public int balanceBackward()", "signatureAfterChange": "     public int balanceBackward()", "diff": ["-      return _doc.balanceBackward();", "+      return getDocument().balanceBackward();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "515c40d07d20b7dc1c9d612ceb7b509c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "8a099b753fcfb83be248d39f70edd5788e8b1222", "commitAfterChange": "4701dc92d8eb3da9b7f829b98cf858de261361f6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   protected EditorKit createDefaultEditorKit()", "signatureAfterChange": "   protected EditorKit createDefaultEditorKit()", "diff": ["-    return new DefinitionsEditorKit();", "+    return EDITOR_KIT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51616f2f945675a26ee828173ccc933a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaRoot.java", "commitBeforeChange": "01c62517d281ffc6534fc475329bd814c0e2c112", "commitAfterChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public static void showDrJavaDebugConsole(MainFrame mf)", "signatureAfterChange": "   public static void showDrJavaDebugConsole(MainFrame mf)", "diff": ["-      _debugConsole.setInterpreterPrivateAccessible(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51759a171923e3450ac10e5d34703b9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 270, "methodNumberAfterChange": 273, "signatureBeforeChange": "    final private boolean jj_3R_202()", "signatureAfterChange": "    final private boolean jj_3R_208()", "diff": ["-", "-  final private boolean jj_3R_202() {", "-    if (jj_3R_223()) return true;", "+  final private boolean jj_3R_208() {", "+    if (jj_3R_231()) return true;", "-    if (jj_3R_224()) jj_scanpos = xsp;", "+    if (jj_3R_232()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "519eadbc063a75f8fd99d6b860569f13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfig.java", "commitBeforeChange": "f21f60b12bbd978bd39980f3ff0792b181091994", "commitAfterChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r   public XMLConfig()", "signatureAfterChange": "\r   public XMLConfig()", "diff": ["+      _document.setXmlStandalone(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51a0020593248530f56817ff4ca6be8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/repl/EclipseInteractionsModel.java", "commitBeforeChange": "1827cec0a07b944a36f95e36eebdc6666dc9617c", "commitAfterChange": "302914e42441eaa34fb8588c2f19600c7ec3298a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   protected void _notifyInterpreterReady()", "signatureAfterChange": "   protected void _notifyInterpreterReady()", "diff": ["-      ((InteractionsListener)_listeners.get(i)).interpreterReady();", "+      _listeners.get(i).interpreterReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51a452a6ecbef4fac2bfcff6f0506ec5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 605, "methodNumberAfterChange": 402, "signatureBeforeChange": "    final private boolean jj_3R_272()", "signatureAfterChange": "    final private boolean jj_3R_267()", "diff": ["+  final private boolean jj_3R_267() {", "+    if (jj_3R_295()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_322()) { jj_scanpos = xsp; break; }", "+    }", "-  final private boolean jj_3R_272() {", "-    if (jj_3R_298()) return true;", "-      if (jj_3R_323()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51b2b1e605ed0a0fd593f3c2becb382d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "0e447714063de4343f51d85c5c1b4138c2abd929", "commitAfterChange": "f838e31186be1112c8fc006f9ffcbc7f004729c1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void reload(R startRegion, R endRegion)", "signatureAfterChange": "   public void reload(R startRegion, R endRegion)", "diff": ["-      System.err.println(\"Reloading region '\" + r.getString() + \"'\");", "+//      System.err.println(\"Reloading region '\" + r.getString() + \"'\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51ba93da474b03bea0a0664a01a948e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 357, "methodNumberAfterChange": 885, "signatureBeforeChange": "    final private boolean jj_3R_399()", "signatureAfterChange": "    final private boolean jj_3R_407()", "diff": ["-", "-  final private boolean jj_3R_399() {", "-    if (jj_scan_token(REMAINDER_ASSIGN)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_407() {", "+    if (jj_scan_token(REMAINDER_ASSIGN)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51cc9ae4076156c9049dad6b3fa4bf59", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 510, "methodNumberAfterChange": 717, "signatureBeforeChange": "    final private boolean jj_3R_412()", "signatureAfterChange": "    final private boolean jj_3R_384()", "diff": ["-", "-  final private boolean jj_3R_412() {", "-    if (jj_3R_98()) return true;", "-      if (jj_3_38()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_384() {", "+    if (jj_3R_90()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_30()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d7538fbdf774f07c7ba5a75faca0a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeClass.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public boolean isAbstract()", "signatureAfterChange": "   public boolean isAbstract()", "diff": ["-  public boolean isStatic() { return Modifier.isStatic(_accessFlags); }", "-  public boolean isAbstract() { return Modifier.isAbstract(_accessFlags); }", "+  public boolean isStatic() { return _mods.isStatic(); }", "+  public boolean isAbstract() { return _mods.isAbstract(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51e152b762988916e05a2beb64d404c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyTypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public TypeData forConstructorDef(ConstructorDef that)", "signatureAfterChange": "   public TypeData forConstructorDef(ConstructorDef that)", "diff": ["-      throw new RuntimeException(\"The constructor \" + LanguageLevelVisitor.getUnqualifiedClassName(_symbolData.getName()) + \" was not in the class \" + _symbolData.getName() + \".\");", "+      throw new RuntimeException(\"The constructor \" + LanguageLevelVisitor.getUnqualifiedClassName(_symbolData.getName()) + \" was not in the class \" + _symbolData.getName() + '.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "520d3f137ec5c8e80b18a040eb58898a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 740, "methodNumberAfterChange": 437, "signatureBeforeChange": "    final private boolean jj_3R_192()", "signatureAfterChange": "    final private boolean jj_3R_455()", "diff": ["+  final private boolean jj_3R_455() {", "+    if (jj_3R_92()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_465()) { jj_scanpos = xsp; break; }", "+    }", "-", "-  final private boolean jj_3R_192() {", "-    if (jj_3R_99()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_226()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "521ca1a2a1b19e316d04c5399e06edfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "   public boolean posInParenPhrase()", "signatureAfterChange": "   public boolean posInParenPhrase()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "527c38e0120c6dbc78311fe0df03059d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "commitAfterChange": "4e52eec7688cbd5ec3584417f424923ba61a75e0", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": "   private SymbolData _identifyType(String name, SourceInfo si, String enclosingClassName)", "signatureAfterChange": "   protected SymbolData _identifyType(String name, SourceInfo si, String enclosingClassName)", "diff": ["-  private SymbolData _identifyType(String name, SourceInfo si, String enclosingClassName) {", "+  protected SymbolData _identifyType(String name, SourceInfo si, String enclosingClassName) {", "-    if (sd != null) return sd;", "-//    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "528d54c8bf664e67b074c37e338f59b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b81ae5f4bf2be2738e0e30bb4843dd8f256869d7", "commitAfterChange": "24e790b85d3a1a29de15955ca1ba9200a6865f83", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["+    docPanePopupMenu.add(_revertAction);", "+    docPanePopupMenu.addSeparator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "529b91a51e2e7d581c822fa8452933c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandler.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void _handleThreadDeathEvent(ThreadDeathEvent e)", "signatureAfterChange": "      private void _handleThreadDeathEvent(ThreadDeathEvent e)", "diff": ["-      _manager.setCurrentThread((DebugThreadData) null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52a20fd37608a8a9996c483e4fd78417", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "diff": ["-        catch(InterruptedException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52a4e9544c6c9e2e083435fb7982561e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "eclipse/src/edu/rice/cs/drjava/plugins/eclipse/repl/EclipseInteractionsModel.java", "commitBeforeChange": "201b599e7e14dfbbe8e927af829c37bc841f5d12", "commitAfterChange": "21fabb90978768abb803c1055129fe3f21f171fa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void interpreterReady(File wd)", "signatureAfterChange": "  public void interpreterReady(File wd)", "diff": ["+   debug.logStart();", "+   debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52bbe48f56c98a03206cfe16d80b1bee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "55ffd5d461fa009444744f2527631191c6f9decc", "commitAfterChange": "0fed03351fa05790a48229380b62c5e4589b0332", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   protected void generateDirTree()", "signatureAfterChange": "   protected void generateDirTree()", "diff": ["+    ", "-    FileTextField textField = new FileTextField();", "+    FileTextField textField = new FileTextField(_fdManager);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52e04743e2f490cc7d0ec38c00fa8a66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsController.java", "commitBeforeChange": "bd3609d73f910b773bb009bd9fec801547e38ce7", "commitAfterChange": "ee77a4b190fe991345758d9ffc949583a7709b61", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void dispose()", "signatureAfterChange": "   public void dispose()", "diff": ["+    _clipboard.dispose();", "-    IPreferenceStore store = EclipsePlugin.getDefault().getPreferenceStore();", "+    Preferences store = EclipsePlugin.getDefault().getPluginPreferences();", "+    //IPreferenceStore store = EclipsePlugin.getDefault().getPreferenceStore();", "-    JFaceResources.getFontRegistry().removeListener(_preferenceListener);", "+    JFaceResources.getFontRegistry().removeListener(_jfacePreferenceListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52f22cc270b64bffed466c9e92b117e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testInterpretJavaQuotedEscapedArgs() throws DocumentAdapterException", "signatureAfterChange": "   public void testInterpretJavaQuotedEscapedArgs()", "diff": ["-  public void testInterpretJavaQuotedEscapedArgs() throws DocumentAdapterException {", "+  public void testInterpretJavaQuotedEscapedArgs() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52f4ad00938f0312c1a23077e6afcd9e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/AFindReplaceMachineState.java", "commitBeforeChange": "82f2ed0c10073d0b45d405a9ea26c9aa3f37c661", "commitAfterChange": "6bfab9f5cad6f12d0935dd59b83d99bfc86909eb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public boolean replaceCurrent()", "signatureAfterChange": "   public boolean replaceCurrent()", "diff": ["+    _doc.acquireWriteLock();", "+    finally { _doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5306657b58a73ac59845a814dbd2f650", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "51b2542de7f979f07f8d8b46f0a6d987d196a9d1", "commitAfterChange": "4edad8e8a80e806b7e00866e949c609589a8b7ed", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _setUpAction(_closeAction, \"Close\", \"Close\");", "-    _setUpAction(_closeAllAction, \"CloseAll\", \"Close all\");", "+    _setUpAction(_closeAction, \"Close\", \"Close the current document\");", "+    _setUpAction(_closeAllAction, \"CloseAll\", \"Close all documents\");", "-    _setUpAction(_compileAction, \"Play\", \"Compile the current document\");", "-    _setUpAction(_printAction, \"Print\", \"Print\");", "+    _setUpAction(_compileAction, \"Compile\", \"Compile the current document\");", "+    _setUpAction(_printAction, \"Print\", \"Print the current document\");", "-    _setUpAction(_undoAction, \"Undo\", \"Undo\");", "-    _setUpAction(_redoAction, \"Redo\", \"Redo\");", "-    _setUpAction(_abortInteractionAction, \"Stop\", \"Abort the current interaction\");", "-    _setUpAction(_resetInteractionsAction, \"Refresh\", \"Reset interactions\");", "+    _setUpAction(_undoAction, \"Undo\", \"Undo previous command\");", "+    _setUpAction(_redoAction, \"Redo\", \"Redo last undo\");", "+    ", "+    _undoAction.putValue(Action.NAME, \"Undo Previous Command\");", "+    _redoAction.putValue(Action.NAME, \"Redo Last Undo\");", "+    ", "+    _setUpAction(_abortInteractionAction, \"Break\", \"Abort the current interaction\");", "+    _setUpAction(_resetInteractionsAction, \"Reset\", \"Reset interactions\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "530bbd363ccc422345ffe4e328ada5af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "25d973a9f45bdba84ad4514eba518ee94f041daf", "commitAfterChange": "fa5a46f3cc65ec85b9fa37599dc6542e75cee25e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private String _matchText(int braceIndex)", "signatureAfterChange": "   private String _matchText(int braceIndex)", "diff": ["-    doc.acquireReadLock();", "-    try {", "-      docText = doc.getText();", "-    }", "-    finally{doc.releaseReadLock();}", "-    ", "+    docText = doc.getText();", "+   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5327061cdb9542f0a6f0d1f421d8e1dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d8ed07c181201a238142caf2537f1e0f6da8bb42", "commitAfterChange": "5faad565deecfb82b97073634322d0015dfa1839", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 138, "signatureBeforeChange": "   private JMenu _setUpToolsMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpToolsMenu(int mask)", "diff": ["+    toolsMenu.add(_copyInteractionToDefinitionsAction);", "-    toolsMenu.add(_clearOutputAction);", "+    toolsMenu.add(_clearConsoleAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "532f3c4093c212e39b03a9435cf06998", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "b42121281abc84b5922f4d3c2653d8341fced477", "commitAfterChange": "6b690d7e50bc9f782260d6c38aaf261dfe0715e0", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      private void _replaceFindNext()", "signatureAfterChange": "      private void _replaceFindNext()", "diff": ["-    String replaceWord = _replaceField.getText();", "+    final String replaceWord = _replaceField.getText();", "-      _selectReplacedItem(replaceWord.length());", "+      _selectFoundOrReplacedItem(replaceWord.length());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "533dc752235c797d1f1e40dd25ced246", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public DefinitionsPane(MainFrame mf,                          GlobalModel model,                          OpenDefinitionsDocument doc)", "signatureAfterChange": "   public DefinitionsPane(MainFrame mf,                          GlobalModel model,                          OpenDefinitionsDocument doc)", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      createPopupMenu();", "+    createPopupMenu();", "-      //Add listener to components that can bring up popup menus.", "-      _popupMenuMA = new PopupMenuMouseAdapter();", "-      this.addMouseListener( _popupMenuMA );", "+    //Add listener to components that can bring up popup menus.", "+    _popupMenuMA = new PopupMenuMouseAdapter();", "+    this.addMouseListener( _popupMenuMA );", "-      _highlightManager = new HighlightManager(this);", "-    }", "+    _highlightManager = new HighlightManager(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "535cadc26d8839bb83f8d4340b74a749", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private int _moveRight(int count, int currentOffset)", "signatureAfterChange": "     private int _moveRight(int count, int currentOffset)", "diff": ["-          if (count == 0) {", "-            break;", "-          }", "+          if (count == 0) break;", "-            throw new IllegalArgumentException(\"Moved into tail\");", "+            throw new IllegalArgumentException(\"At end\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5362dfb8580daf175ff98f353bfc0425", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 24, "signatureBeforeChange": "     @Override public Type visit(ObjectFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(ObjectFieldAccess node)", "diff": ["-        // TODO: Check accessibility of field", "+        checkAccessibility(ref.field(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "536901999d4fb76fa9a28b66ea7e7215", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileIOTest.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testClassFileSynchronizationAfterRename() throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronizationAfterRename() throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "diff": ["-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(false);", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "537c76e7a89c831fef30f4d5a25e458a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "diff": ["-    try {", "-      Utilities.invokeAndWait(new Runnable() { ", "-        public void run() { _documentNavigator.removeDocument(doc); }", "-      });", "-    }", "-    catch(InterruptedException e) { throw new UnexpectedException(e); }", "+    ", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { _documentNavigator.removeDocument(doc); }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5384f59411bf785e503e3435a1cae803", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/Log.java", "commitBeforeChange": "f91b09256cbc7d44e744c76dc19b432fcf16cae2", "commitAfterChange": "f89cd9edd7246921a8235127770c2e959370e033", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _init()", "signatureAfterChange": "   protected void _init()", "diff": ["-          File f = new File(_name);", "-          FileWriter w = new FileWriter(f.getAbsolutePath(), true);", "+          FileWriter w = new FileWriter(_file.getAbsolutePath(), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "539fe426559afc128813c7e08ee47b9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "commitAfterChange": "2d393792d3779835588c185ebb45db67c3e34dc4", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void addRegion(final R r)", "signatureAfterChange": "   public void addRegion(final R r)", "diff": ["+    try {", "+//    System.err.println(\"Adding region '\" + r + \"'\");", "+    DefaultMutableTreeNode docNode;", "-    File file = doc.getRawFile();", "-    DefaultMutableTreeNode docNode = _docToTreeNode.get(doc);", "-    if (docNode == null) {", "-      // No matching document node was found, so create one", "-      docNode = new DefaultMutableTreeNode(file);", "-      _regTreeModel.insertNodeInto(docNode, _rootNode, _rootNode.getChildCount());", "-      // Create link from doc to docNode", "-      _docToTreeNode.put(doc, docNode);", "+    if (doc == _cachedDoc) docNode = _cachedDocNode;", "+    else {", "+      docNode = _docToTreeNode.get(doc);", "+      if (docNode == null) {", "+        // No matching document node was found, so create one", "+        docNode = new DefaultMutableTreeNode(doc.getRawFile());", "+        _regTreeModel.insertNodeInto(docNode, _rootNode, _rootNode.getChildCount());", "+        // Create link from doc to docNode", "+        _docToTreeNode.put(doc, docNode);", "+        _cachedDoc = doc;", "+        _cachedDocNode = docNode;", "+        _cachedStartOffset = -1;  // a sentinel value guaranteed to be less than r.getStartOffset()", "+        _cachedRegionIndex = -1;  // The next region in this document will have index 0", "+      }", "-    @SuppressWarnings(\"unchecked\")", "-    Enumeration<DefaultMutableTreeNode> regionNodes = (Enumeration<DefaultMutableTreeNode>) docNode.children();", "-    ", "-    // Create a new region node in this document node list, where regions are sorted by start offset.", "-    int offset = r.getStartOffset();", "-    ", "-    for (int index = 0; true ; index++) {  // infinite loop incrementing index on each iteration", "-  ", "-      if (! regionNodes.hasMoreElements()) { // exhausted all elements; insert new region node at end", "-        insertNewRegionNode(r, docNode, index);", "-        break;", "-      }", "-      DefaultMutableTreeNode node = regionNodes.nextElement();", "-      ", "+    if (doc == _cachedDoc & r.getStartOffset() >= _cachedStartOffset) { // insert new region after previous insert", "+      _cachedRegionIndex++;", "+      _cachedStartOffset = r.getStartOffset();", "+      insertNewRegionNode(r, docNode, _cachedRegionIndex);", "+    }", "+    else {", "-      RegionTreeUserObj<R> userObject = (RegionTreeUserObj<R>) node.getUserObject();", "-      R nodeRegion = userObject.region();", "-      int nodeOffset = nodeRegion.getStartOffset();", "+      Enumeration<DefaultMutableTreeNode> regionNodes = (Enumeration<DefaultMutableTreeNode>) docNode.children();", "-      if (nodeOffset == offset) {", "-        // region with same start offset already exists", "-        if (nodeRegion.getEndOffset() == r.getEndOffset()) {", "-          // silently suppress inserting region; can this happen?  Caller should suppress it.", "-          _changeState.scrollPathToVisible(new TreePath(node));", "-          _changeState.setLastAdded(node);", "-          break;", "-        }", "-        else { // new region is distinct from nodeRegion", "+      // Create a new region node in this document node list, where regions are sorted by start offset.", "+      int startOffset = r.getStartOffset();", "+      for (int index = 0; true ; index++) {  // infinite loop incrementing index on each iteration", "+        ", "+        if (! regionNodes.hasMoreElements()) { // exhausted all elements; insert new region node at end", "+//          System.err.println(\"inserting \" + r + \" at end, unaided by caching\");", "+          _cachedDoc = doc;", "+          _cachedDocNode = docNode;", "+          _cachedRegionIndex = index;", "+          _cachedStartOffset = startOffset;", "+          break;", "+        }", "+        DefaultMutableTreeNode node = regionNodes.nextElement();", "+        ", "+        @SuppressWarnings(\"unchecked\")", "+        RegionTreeUserObj<R> userObject = (RegionTreeUserObj<R>) node.getUserObject();", "+        R nodeRegion = userObject.region();", "+        int nodeOffset = nodeRegion.getStartOffset();", "+        ", "+//        if (nodeOffset == startOffset) {", "+//          // region with same start offset already exists", "+//          if (nodeRegion.getEndOffset() == r.getEndOffset()) {", "+//            // silently suppress inserting region; can this happen?  Caller should suppress it.", "+//            _changeState.scrollPathToVisible(new TreePath(node));", "+//            _changeState.setLastAdded(node);", "+//            break;", "+//          }", "+//          else { // new region is distinct from nodeRegion", "+//            insertNewRegionNode(r, docNode, index);", "+//            break;", "+//          }", "+//        }", "+//        else ", "+        if (nodeOffset >= startOffset) {", "+          insertNewRegionNode(r, docNode, index);", "+          _cachedDoc = null;  // insertion was not at the end of the region list for doc", "-      else if (nodeOffset > offset) {", "-        insertNewRegionNode(r, docNode, index);", "-        break;", "-      }", "-    }    ", "+    }", "+  catch(Exception e) { DrJavaErrorHandler.record(e); throw new UnexpectedException(e); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53d494f8b18d6478a2add8fbb1ebe182", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "1a21d93c6026fc975d9f1a1bda2fbd55942a0154", "commitAfterChange": "7cbabe0b7b5f77b58eac69afdca15c16ef2f6a9b", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   private int processAll(Lambda<Void, FindResult> findAction, boolean searchAll)", "signatureAfterChange": "   private int processAll(Runnable1<FindResult> findAction, boolean searchAll)", "diff": ["-  private int processAll(Lambda<Void, FindResult> findAction, boolean searchAll) {", "+  private int processAll(Runnable1<FindResult> findAction, boolean searchAll) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53d9c2568e9cbfa2564cb9a2950cf16e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "     public Object visit(ConditionalExpression node)", "signatureAfterChange": "   public Class visit(ConditionalExpression node)", "diff": ["+   */", "+  public Class visit(ConditionalExpression node) {", "+    // Check the condition", "+    if (node.getConditionExpression().acceptVisitor(this) != boolean.class) {", "+      throw new ExecutionError(\"condition.type\", node);", "+    }", "+    ", "+    // Determine the type of the expression", "+    Node  n1 = node.getIfTrueExpression();", "+    Node  n2 = node.getIfFalseExpression();", "+    Class c1 = (Class)n1.acceptVisitor(this);", "+    Class c2 = (Class)n2.acceptVisitor(this);", "+    Class ec = null;", "+    ", "+    if (c1 == c2) {", "+      ec = c1;", "+    } else if (c1 == null) {", "+      ec = c2;", "+    } else if (c2 == null) {", "+      ec = c1;", "+    } else if (!c1.isPrimitive() && !c2.isPrimitive()) {", "+      if (c1.isAssignableFrom(c2)) {", "+        ec = c1;", "+      } else if (c2.isAssignableFrom(c1)) {", "+        ec = c2;", "+      } else {", "+        throw new ExecutionError(\"incompatible.types\", node);", "+      }", "+    } else if (c1 == boolean.class || c2 == boolean.class ||", "+               c1 == void.class    || c2 == void.class) {", "+      throw new ExecutionError(\"incompatible.types\", node);", "+    } else if ((c1 == short.class && c2 == byte.class) ||", "+               (c1 == byte.class  && c2 == short.class)) {", "+      ec = short.class;", "+    } else if ((c2 == byte.class || c2 == short.class || c2 == char.class) &&", "+               n1.hasProperty(NodeProperties.VALUE) && c1 == int.class) {", "+      Number n = (Number)n1.getProperty(NodeProperties.VALUE);", "+      if (c2 == byte.class) {", "+        if (n.intValue() == n.byteValue()) {", "+          ec = byte.class;", "+        } else {", "+          ec = int.class;", "+      } else if (n.intValue() == n.shortValue()) {", "+        ec = (c2 == char.class) ? char.class : short.class;", "+      } else {", "+        ec = int.class;", "+      }", "+    } else if ((c1 == byte.class || c1 == short.class || c1 == char.class) &&", "+               n2.hasProperty(NodeProperties.VALUE) && c2 == int.class) {", "+      Number n = (Number)n2.getProperty(NodeProperties.VALUE);", "+      if (c1 == byte.class) {", "+        if (n.intValue() == n.byteValue()) {", "+          ec = byte.class;", "+        } else {", "+          ec = int.class;", "+      } else if (n.intValue() == n.shortValue()) {", "+        ec = (c1 == char.class) ? char.class : short.class;", "+      } else {", "+        ec = int.class;", "+      }       ", "+    } else if (c1 == double.class || c2 == double.class) {", "+      ec = double.class;", "+    } else if (c1 == float.class || c2 == float.class) {", "+      ec = float.class;", "+    } else if (c1 == long.class || c2 == long.class) {", "+      ec = long.class;", "+    } else {", "+      ec = int.class;", "+    }", "+    node.setProperty(NodeProperties.TYPE, ec);", "+    ", "+    return ec;", "+  }", "-     */", "-    public Object visit(ConditionalExpression node) {", "-        // Check the condition", "-        if (node.getConditionExpression().acceptVisitor(this) != boolean.class) {", "-            throw new ExecutionError(\"condition.type\", node);", "-        }", "-", "-        // Determine the type of the expression", "-        Node  n1 = node.getIfTrueExpression();", "-        Node  n2 = node.getIfFalseExpression();", "-        Class c1 = (Class)n1.acceptVisitor(this);", "-        Class c2 = (Class)n2.acceptVisitor(this);", "-        Class ec = null;", "-", "-        if (c1 == c2) {", "-            ec = c1;", "-        } else if (c1 == null) {", "-            ec = c2;", "-        } else if (c2 == null) {", "-            ec = c1;", "-        } else if (!c1.isPrimitive() && !c2.isPrimitive()) {", "-            if (c1.isAssignableFrom(c2)) {", "-                ec = c1;", "-            } else if (c2.isAssignableFrom(c1)) {", "-                ec = c2;", "-                throw new ExecutionError(\"incompatible.types\", node);", "-        } else if (c1 == boolean.class || c2 == boolean.class ||", "-                   c1 == void.class    || c2 == void.class) {", "-            throw new ExecutionError(\"incompatible.types\", node);", "-        } else if ((c1 == short.class && c2 == byte.class) ||", "-                   (c1 == byte.class  && c2 == short.class)) {", "-            ec = short.class;", "-        } else if ((c2 == byte.class || c2 == short.class || c2 == char.class) &&", "-                   n1.hasProperty(NodeProperties.VALUE) && c1 == int.class) {", "-            Number n = (Number)n1.getProperty(NodeProperties.VALUE);", "-            if (c2 == byte.class) {", "-                if (n.intValue() == n.byteValue()) {", "-                    ec = byte.class;", "-                } else {", "-                    ec = int.class;", "-                }", "-            } else if (n.intValue() == n.shortValue()) {", "-                ec = (c2 == char.class) ? char.class : short.class;", "-            } else {", "-                ec = int.class;", "-        } else if ((c1 == byte.class || c1 == short.class || c1 == char.class) &&", "-                   n2.hasProperty(NodeProperties.VALUE) && c2 == int.class) {", "-            Number n = (Number)n2.getProperty(NodeProperties.VALUE);", "-            if (c1 == byte.class) {", "-                if (n.intValue() == n.byteValue()) {", "-                    ec = byte.class;", "-                } else {", "-                    ec = int.class;", "-                }", "-            } else if (n.intValue() == n.shortValue()) {", "-                ec = (c1 == char.class) ? char.class : short.class;", "-            } else {", "-                ec = int.class;", "-            }       ", "-        } else if (c1 == double.class || c2 == double.class) {", "-            ec = double.class;", "-        } else if (c1 == float.class || c2 == float.class) {", "-            ec = float.class;", "-        } else if (c1 == long.class || c2 == long.class) {", "-            ec = long.class;", "-        } else {", "-            ec = int.class;", "-        }", "-        node.setProperty(NodeProperties.TYPE, ec);", "-", "-        return ec;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53dad76fdc4503a427f3bae1e83d193a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "65add9d9f0de9278803d6c9a77b3294a4ab082f3", "commitAfterChange": "1ad8d0f619615b40333c2ef2eca24506e4639e2b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void testCompileWithJavaAssert()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileWithJavaAssert()     throws BadLocationException, IOException, InterruptedException", "diff": ["-          fail(\"compile failed: \" + doc.getCompilerErrorModel());", "+          fail(\"compile failed: \" + getCompilerErrorString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53dbb97911abdece001c26448b72f52e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3c18a1d03b53a699adfbc2df00845e9d60f9d1f5", "commitAfterChange": "4ec6eda5e5d4bd8e2b6e61afae08eb8548f8c4b5", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 147, "signatureBeforeChange": "      private void _openProjectUpdate()", "signatureAfterChange": "      private void _openProjectUpdate()", "diff": ["+      _junitProjectAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53e968d6612b4fc4ca5fcfa892ab5285", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public String getText()", "signatureAfterChange": "   public String getText()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53eb155341743ca3ffa6c869fbb3699d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "53d061333fe3393f6569c1f553912f1a449482ad", "commitAfterChange": "12c8304e14a6d9eafe2f7093583d8040569150c1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "    public void testGetSourceRootDefaultPackage() throws BadLocationException, IOException", "signatureAfterChange": "    public void testGetSourceRootDefaultPackage() throws BadLocationException, IOException", "diff": ["-//    _log.log(\"testGetSourceRootDefaultPackage() completed\");", "+    _log.log(\"testGetSourceRootDefaultPackage() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53fa4be1dcb1bdc3734ffd82c6a95c2d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "e7660fffdb51451a3d4a61981945f6529addb874", "commitAfterChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 8, "signatureBeforeChange": "    public void testWriteFile() throws IOException, MalformedProjectFileException", "signatureAfterChange": "    public void testWriteFilePJT() throws IOException, MalformedProjectFileException", "diff": ["-  public void testWriteFile() throws IOException, MalformedProjectFileException {", "-    File pf = new File(parent, \"test2.pjt\");", "+  public void testWriteFilePJT() throws IOException, MalformedProjectFileException {", "+    File pf = new File(parent, \"test3.pjt\");", "-    fb.write();", "+    fb.writeOld();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53facee33bf0345865f3a8b4918e6577", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6d55d86705248616cac5b324a7c528485ceb6104", "commitAfterChange": "d9483f6c228cd09f3431ad6b50a3d96bdaf83832", "methodNumberBeforeChange": 569, "methodNumberAfterChange": 569, "signatureBeforeChange": "     public void compileBeforeJUnit(final CompilerListener testAfterCompile)", "signatureAfterChange": "     public void compileBeforeJUnit(final CompilerListener testAfterCompile)", "diff": ["-      System.err.println(\"in compileBeforeJUnit, TEST_MODE = \" + Utilities.TEST_MODE);", "+//      System.err.println(\"in compileBeforeJUnit, TEST_MODE = \" + Utilities.TEST_MODE);", "-                throw new RuntimeException(\"Invalid returnCode from showConfirmDialog: \" + rc);", "+                throw new UnexpectedException(\"Invalid returnCode from showConfirmDialog: \" + rc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5411b83bcd48cd5603af89ed5b7935aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public Void visit(ConstructorInvocation node)", "signatureAfterChange": "   public Void visit(ConstructorCall node)", "diff": ["-  public Void visit(ConstructorInvocation node) {", "-    print(\"l.\"+node.getBeginLine()+\" ConstructorInvocation {\");", "+  public Void visit(ConstructorCall node) {", "+    print(\"l.\"+node.getBeginLine()+\" ConstructorCall {\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54558faef9a339d7ad859f0060093318", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 393, "methodNumberAfterChange": 393, "signatureBeforeChange": "          private void _fileOpened(final OpenDefinitionsDocument doc)", "signatureAfterChange": "          private void _fileOpened(final OpenDefinitionsDocument doc)", "diff": ["-      catch (IllegalStateException ise) { throw new UnexpectedException(ise); } /* impossible */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5497e7a25a657a26c595fe18c2c92f28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-    //synchronized(listener) {", "-      doc.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener.wait();", "-    //}", "+    doc.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54a869548e7cc448b863f3d957fc54b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "1936e795bc2ab8d34c4602bb0e83d92772acfbeb", "commitAfterChange": "172a137f78cd92204a7df0201baea721bb8f9866", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void addDocument(ItemT doc, String path)", "signatureAfterChange": "   public void addDocument(ItemT doc, String path)", "diff": ["-  public void addDocument(ItemT doc, String path) { LOG.log(\"addCoument(\"+doc+\")\", new Throwable()); addDocument(doc); }", "+  public void addDocument(ItemT doc, String path) { addDocument(doc); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54b15fd28100236f78b7e3a02a7345c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "diff": ["+                       newStringOptionComponent(OptionConstants.JAVADOC_1_7_LINK));", "+    addOptionComponent(panel, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54bff47658af2d278c937543b9c6f928", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testAutoboxing14()", "signatureAfterChange": "   public void testAutoboxing14()", "diff": ["-    TigerUtilities.setTigerEnabled(false);", "+    setTigerEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54c81b9984cb59bf221d1617490522ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DefaultCompilerModel(IGetDocuments getter)", "signatureAfterChange": "   public DefaultCompilerModel(GlobalModel m)", "diff": ["-  public DefaultCompilerModel(IGetDocuments getter) {", "-    _model = getter;", "+  public DefaultCompilerModel(GlobalModel m) {", "+    _model = m;", "+    _workDir = DrJava.getConfig().getSetting(OptionConstants.WORKING_DIRECTORY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54cbc334297e906f546ab796248c6416", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 592, "methodNumberAfterChange": 370, "signatureBeforeChange": "    final private boolean jj_3R_336()", "signatureAfterChange": "    final private boolean jj_3R_334()", "diff": ["+  final private boolean jj_3R_334() {", "+    if (jj_3R_343()) return true;", "+    if (jj_3R_354()) jj_scanpos = xsp;", "-", "-  final private boolean jj_3R_336() {", "-    if (jj_3R_345()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_358()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54f276fa67b914b640acb7082fd74126", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "af1eb2bf0d9c9c21950a26d58b7d3250b6cf7431", "commitAfterChange": "ba7bb9791eb66188927c0d0910ec99f369dab883", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 181, "signatureBeforeChange": "      public void compileStarted()", "signatureAfterChange": "      public void compileStarted()", "diff": ["-      if (!_errorPanel.isDisplayed()) {", "-        showTab(_errorPanel);", "-      }", "+      showTab(_errorPanel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54fafe204ce2c3b6684edc7c55b1396d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 413, "methodNumberAfterChange": 560, "signatureBeforeChange": "    final private boolean jj_3R_228()", "signatureAfterChange": "    final private boolean jj_3R_432()", "diff": ["-", "-  final private boolean jj_3R_228() {", "-    if (jj_3R_267()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_302()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_432() {", "+    if (jj_3R_445()) return true;", "+      if (jj_3R_456()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55121a65886329d10fbf01008ad2fee6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 605, "methodNumberAfterChange": 608, "signatureBeforeChange": "    final private boolean jj_3R_455()", "signatureAfterChange": "    final private boolean jj_3R_455()", "diff": ["+  final private boolean jj_3R_455() {", "+    if (jj_3_25()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_466()) jj_scanpos = xsp;", "+    if (jj_scan_token(SUPER)) return true;", "+    if (jj_3R_91()) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "-", "-  final private boolean jj_3R_455() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_23()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_465()) jj_scanpos = xsp;", "-    if (jj_scan_token(SUPER)) return true;", "-    if (jj_3R_90()) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5513a2082e1ed99d159286ddb6b2d390", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 341, "methodNumberAfterChange": 648, "signatureBeforeChange": "    final private boolean jj_3R_604()", "signatureAfterChange": "    final private boolean jj_3R_247()", "diff": ["-  final private boolean jj_3R_604() {", "-    if (jj_3R_359()) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_607()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_247() {", "+    if (jj_3R_259()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_260()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "551ae825607be2907ef9b73f23efe709", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 485, "methodNumberAfterChange": 446, "signatureBeforeChange": "    final private boolean jj_3R_490()", "signatureAfterChange": "    final private boolean jj_3R_431()", "diff": ["+  final private boolean jj_3R_431() {", "+    if (jj_3R_452()) {", "+    if (jj_3R_453()) return true;", "-  final private boolean jj_3R_490() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_492()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_493()) return true;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55223b9af395f003c0e11c9fe80df6fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "43b808b9e05f3378c0faae83fe4225562adc4c6e", "commitAfterChange": "723910d837b2fcdd9f4127559df4832f71fb62e8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testErrorsArrayInOrder() throws Exception", "signatureAfterChange": "   public void testErrorsArrayInOrder() throws Exception", "diff": ["-    TestShouldSucceedListener listener = new TestShouldSucceedListener();", "+    JUnitTestListener listener = new JUnitTestListener();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "552b3fc240137ad2ad1420bea8db6643", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartCurrStmtPlus.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    try {", "-      indent = doc.getIndentOfCurrStmt(doc.getCurrentLocation(), new char[] {';','{','}'}, new char[] {' ', '\\t','\\n'});", "-    } ", "-    catch (BadLocationException e) { throw new UnexpectedException(e); }", "+", "+    indent = doc.getIndentOfCurrStmt(doc.getCurrentLocation(), new char[] {';','{','}'}, new char[] {' ', '\\t','\\n'});", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55527473e5ee6aea5ce364caa48e62d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testIndentShrinkTabAtEnd()       throws BadLocationException, OperationCanceledException", "signatureAfterChange": "   public void testIndentShrinkTabAtEnd()       throws BadLocationException, OperationCanceledException", "diff": ["-    openDoc.syncCurrentLocationWithDefinitions(openDoc.getLength() - 1);", "-    int loc = openDoc.getCurrentDefinitionsLocation();", "+    openDoc.setCurrentLocation(openDoc.getLength() - 1);", "+    int loc = openDoc.getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5558f6c2104bf39c056646ce3bcbb912", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void ensureInterpreterConnected()", "signatureAfterChange": "   public void ensureInterpreterConnected()", "diff": ["-   */", "-  public void ensureInterpreterConnected() {", "-    try {", "-      synchronized(this) {", "-        while (_interpreterJVM == null) {", "-          wait();", "-        }", "-      }", "-    }", "-    catch (InterruptedException ie) {", "-      throw new edu.rice.cs.util.UnexpectedException(ie);", "-    }", "-  }", "+   */", "+  public void ensureInterpreterConnected() {", "+    try {", "+      synchronized(this) {", "+        // Now we silently fail if interpreter is disabled instead of", "+        // throwing an exception. This situation occurs only in test cases", "+        // and when DrJava is about to quit.", "+        //if (! _enabled) {", "+          //throw new IllegalStateException(\"Interpreter is disabled\");", "+        //}", "+", "+        while (_interpreterJVM() == null) {", "+          wait();", "+        }", "+      }", "+    }", "+    catch (InterruptedException ie) {", "+      throw new edu.rice.cs.util.UnexpectedException(ie);", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "555f82e9e5afa909b211aec19620fd9e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 836, "methodNumberAfterChange": 731, "signatureBeforeChange": "    final private boolean jj_3R_299()", "signatureAfterChange": "    final private boolean jj_3R_303()", "diff": ["-", "-  final private boolean jj_3R_299() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_371()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_372()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_303() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_378()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_379()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5565407bf7ca3c86eb23e1ac49c7bd52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "   private void _indentAndCompare(File unindented, File correct)      throws IOException", "signatureAfterChange": "   private void _indentAndCompare(File unindented, File correct)      throws IOException", "diff": ["+      test.deleteOnExit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55669eee746f3b96b770ce5e81e9be56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException,      InterruptedException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException,      InterruptedException", "diff": ["-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(false) {", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "559b96c5c2c08e14d192db4ac9819c9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "d1ffac675273323f7a1b9777462d16896d09a1af", "commitAfterChange": "c0ad820565377d42d023afeab71166682f497054", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testCorrectInteractionsDocument() throws DocumentAdapterException", "signatureAfterChange": "   public void testCorrectInteractionsDocument() throws DocumentAdapterException", "diff": ["-//    _log.log(\"testCorrectInteractionsDocument completed\");", "+    _log.log(\"testCorrectInteractionsDocument completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55abfe2e564f2c39653da3307e69f3ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "      public abstract boolean containsStaticMethod(Type t, String name);", "signatureAfterChange": "      public abstract boolean containsStaticMethod(Type t, String name, Access.Module accessModule);", "diff": ["-  public abstract boolean containsStaticMethod(Type t, String name);", "+  public abstract boolean containsStaticMethod(Type t, String name, Access.Module accessModule);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55ba7a5735c0a6539b0284a7366dfd8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 63, "signatureBeforeChange": "     public void setWorkingDirectory(File f)", "signatureAfterChange": "     public void setWorkingDirectory(File f)", "diff": ["-    public void setWorkingDirectory(File f) { DrJava.getConfig().setSetting(OptionConstants.WORKING_DIRECTORY, f); }", "+    public void setWorkingDirectory(File f) { }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55c69a2ffe992d42fc1496805f439fa9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "commitAfterChange": "3d71370f387f5ff990190106fcbfa93f8a159b9b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   private void _findAgain()", "signatureAfterChange": "   private void _findAgain()", "diff": ["-      assert _rootNode == _regTreeModel.getRoot();", "-      _rootNode.removeAllChildren();", "+      assert getRootNode() == getRegTreeModel().getRoot();", "+      getRootNode().removeAllChildren();", "-      _regTreeModel.nodeStructureChanged(_rootNode);", "+      getRegTreeModel().nodeStructureChanged(getRootNode());", "-//      System.err.println(\"Root has been cleared; child count = \" + _rootNode.getChildCount());", "+//      System.err.println(\"Root has been cleared; child count = \" + getRootNode().getChildCount());", "-      _regTree.scrollRowToVisible(0);  // Scroll to the first line in the new panel", "+      getRegTree().scrollRowToVisible(0);  // Scroll to the first line in the new panel"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f0271efc083d04d5de6f9e14445c30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   private void _setupMiscPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupMiscPanel(ConfigPanel panel)", "diff": ["-                                                  \"Specifies the indentation level DrJava's indenter should use.\"));", "+                                                  \"The number of spaces to use for each level of indentation.\"));", "-                              \"Specifies the directory that DrJava should consider the current working directory.\",", "+                              \"The directory that DrJava should consider the current working directory.\",", "-                                                  \"Specifies that maximum number of interactions that will be kept in the history.\"));", "+                                                  \"The number of interactions to remember in the history.\"));", "-                                                  \"<html>Specifies the number of files to remember<br>\" +", "-                                                  \"in the recently used files list in the File menu.</html>\"));", "+                                                  \"<html>The number of files to remember in<br>\" +", "+                                                  \"the recently used files list in the File menu.</html>\"));", "-                                                  \"<html>Specifies that the <code>assert</code> keyword should be allowed under Java 1.4.</html>\"));", "+                                                  \"<html>Whether to allow the <code>assert</code> keyword when compiling in Java 1.4.</html>\"));", "-                                                  \"<html>Specifies that DrJava should bring up a dialog<br>\" +", "-                                                  \"if the interactions pane is exits unexpectedly.</html>\"));", "+                                                  \"<html>Whether DrJava should show a dialog box if a program<br>\" +", "+                                                  \"in the Interactions Pane exits without the user clicking Reset.</html>\"));", "-                                                  \"Specifies that DrJava should bring up a confirm dialog before exiting.\"));", "+                                                  \"Whether DrJava should prompt the user before quitting.\"));", "-                                                  \"<html>Specifies that DrJava should keep a backup copy of each<br>\" +", "-                                                  \"open file, named with a tilde (~) at the end of the filename.</html>\"));", "+                                                  \"<html>Whether DrJava should keep a backup copy of each file that<br>\" +", "+                                                  \"the user modifies, saved with a '~' at the end of the filename.</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "560e158337e0ee3531776aa8224c0104", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void testCompileAfterFileMoved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileAfterFileMoved() throws BadLocationException, IOException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5622203eff828daa6356b3a5ddb6f254", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "        public void setUp() throws Exception", "signatureAfterChange": "        public void setUp() throws Exception", "diff": ["-    _log.log(\"INVOKing DrJava._initConfig() for \" + this);", "-    DrJava._initConfig();", "+//    _log.log(\"INVOKing DrJava._initConfig() for \" + this);", "+//    DrJava._initConfig();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "562ba084c540c242d1e1e15d2ba3a226", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/SimpleInteractionsModel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected void _interpreterResetFailed(Throwable t)", "signatureAfterChange": "   protected void _interpreterResetFailed(Throwable t)", "diff": ["-    _document.insertBeforeLastPrompt(\"Reset Failed!\" + StringOps.NEWLINE, InteractionsDocument.ERROR_STYLE);", "+    _document.insertBeforeLastPrompt(\"Reset Failed!\" + _newLine, InteractionsDocument.ERROR_STYLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5632629d7bb62d608cc1e6627a2e1def", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 22, "signatureBeforeChange": "   protected String getInteractionsText() throws EditDocumentException", "signatureAfterChange": "   protected String getInteractionsText() throws EditDocumentException", "diff": ["-    EditDocumentInterface doc = _model.getInteractionsDocument();", "-    return doc.getDocText(0, doc.getLength());", "+    InteractionsDocument doc = _model.getInteractionsDocument();", "+    return doc.getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "564f3d9fb66064c91e875b8bb06fbb01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "bf372fc29acf6ea260cc55361328f14ce539744d", "commitAfterChange": "ec5c7b65c72ae4439436619fa81e04fbea3f0c07", "methodNumberBeforeChange": 756, "methodNumberAfterChange": 756, "signatureBeforeChange": "   public synchronized void installModalWindowAdapter(Window w)", "signatureAfterChange": "   public synchronized void installModalWindowAdapter(Window w)", "diff": ["-", "-    w.setAlwaysOnTop(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5653c59688af07a6599e9486efe064c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 327, "methodNumberAfterChange": 311, "signatureBeforeChange": "    final private boolean jj_3R_469()", "signatureAfterChange": "    final private boolean jj_3R_322()", "diff": ["+", "+  final private boolean jj_3R_322() {", "+    if (jj_scan_token(CATCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_92()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_166()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_469() {", "-    if (jj_scan_token(CATCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_447()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_162()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5654d33b1e718d4dcbbfaf7c74af1faa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartCurrStmtPlus.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-    System.err.println(\"ActionStartCurrStmtPlus\");", "+    /**", "+     * This method is simply a call to getIndentOfCurrStmt, which is", "+     * fully tested in IndentHelperTest, so no additional tests are", "+     * provided for this class.", "+     */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "566c2602ecdf07fbda8ebbd1016cd0d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 372, "methodNumberAfterChange": 655, "signatureBeforeChange": "    final private boolean jj_3R_173()", "signatureAfterChange": "    final private boolean jj_3R_409()", "diff": ["-", "-  final private boolean jj_3R_173() {", "-    if (jj_3R_115()) return true;", "-      if (jj_3R_231()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_409() {", "+    if (jj_3R_117()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_83()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "568d3eff9a0dabdcb71e531a25687f4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 433, "methodNumberAfterChange": 427, "signatureBeforeChange": "    final private boolean jj_3R_234()", "signatureAfterChange": "    final private boolean jj_3R_275()", "diff": ["+", "+  final private boolean jj_3R_275() {", "+    if (jj_scan_token(HOOK)) return true;", "+    if (jj_3R_100()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_158()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_234() {", "-    if (jj_scan_token(HOOK)) return true;", "-    if (jj_3R_99()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_154()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "568f470a8f2298bb830640e8f43d3853", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "762f9487498790edfa8d7b58c3d83cb6592af447", "commitAfterChange": "1ea7874872b93b44444c8711a298524cf05a221e", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    ", "-    if (CodeStatus.DEVELOPMENT) {  // no key bindings in stable", "-      _keyBindingManager = new KeyBindingManager(this);", "-    }", "-      _keyBindingManager.setActionMap(_currentDefPane.getActionMap());", "+      KeyBindingManager.Singleton.setMainFrame(this);", "+      KeyBindingManager.Singleton.setActionMap(_currentDefPane.getActionMap());", "+    ", "+    KeyBindingManager.Singleton.setShouldCheckConflict(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5697860b20b52e9fc7c290d6558cab09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Object visit(SwitchStatement node)", "signatureAfterChange": "   public Class visit(SwitchStatement node)", "diff": ["+   */", "+  public Class visit(SwitchStatement node) {", "+    // Visits the components of this node", "+    Class c = (Class)node.getSelector().acceptVisitor(this);", "+    if (c != char.class && c != byte.class && c != short.class && c != int.class) {", "+      node.setProperty(NodeProperties.ERROR_STRINGS,", "+                       new String[] { c.getName() });", "+      throw new ExecutionError(\"selector.type\", node);", "+    }", "+    ", "+    // Check the type of the case labels", "+    Iterator it = node.getBindings().iterator();", "+    while (it.hasNext()) {", "+      SwitchBlock sb = (SwitchBlock)it.next();", "+      sb.acceptVisitor(this);", "+      Expression exp = sb.getExpression();", "+      if (exp != null) {", "+        Class lc = NodeProperties.getType(exp);", "+        if (lc != char.class &&  lc != byte.class &&", "+            lc != short.class && lc != int.class) {", "+          node.setProperty(NodeProperties.ERROR_STRINGS,", "+                           new String[] { lc.getName() });", "+          throw new ExecutionError(\"switch.label.type\", node);", "-     */", "-    public Object visit(SwitchStatement node) {", "-        // Visits the components of this node", "-        Class c = (Class)node.getSelector().acceptVisitor(this);", "-        if (c != char.class && c != byte.class && c != short.class && c != int.class) {", "-\t    node.setProperty(NodeProperties.ERROR_STRINGS,", "-\t\t\t     new String[] { c.getName() });", "-            throw new ExecutionError(\"selector.type\", node);", "-        }", "-", "-        // Check the type of the case labels", "-        Iterator it = node.getBindings().iterator();", "-        while (it.hasNext()) {", "-\t    SwitchBlock sb = (SwitchBlock)it.next();", "-\t    sb.acceptVisitor(this);", "-            Expression exp = sb.getExpression();", "-            if (exp != null) {", "-                Class lc = NodeProperties.getType(exp);", "-                if (lc != char.class &&  lc != byte.class &&", "-                    lc != short.class && lc != int.class) {", "-\t\t    node.setProperty(NodeProperties.ERROR_STRINGS,", "-\t\t\t\t     new String[] { lc.getName() });", "-                    throw new ExecutionError(\"switch.label.type\", node);", "-                }", "-                if (c != lc) {", "-                    Number n = null;", "-                    if (exp.hasProperty(NodeProperties.VALUE)) {", "-                        Object cst = exp.getProperty(NodeProperties.VALUE);", "-                        if (lc == char.class) {", "-                            n = new Integer(((Character)cst).charValue());", "-                        } else {", "-                            n = (Number)cst;", "-                        }", "-                    }", "-                    if (c == byte.class) {", "-                        if (exp.hasProperty(NodeProperties.VALUE)) {", "-                            if (n.byteValue() != n.intValue()) {", "-\t\t\t\tnode.setProperty(NodeProperties.ERROR_STRINGS,", "-\t\t\t\t\t\t new String[] { c.getName() });", "-\t\t\t\tthrow new ExecutionError", "-                                    (\"switch.label.type\", node);", "-                            }", "-                        } else {", "-                            throw new ExecutionError(\"switch.label.type\", node);", "-                        }", "-                    } else if (c == short.class || c == char.class) {", "-                        if (exp.hasProperty(NodeProperties.VALUE)) {", "-                            if (n.shortValue() != n.intValue()) {", "-\t\t\t\tnode.setProperty(NodeProperties.ERROR_STRINGS,", "-\t\t\t\t\t\t new String[] { c.getName() });", "-                                throw new ExecutionError", "-                                    (\"switch.label.type\", node);", "-                            }", "-                        } else if (lc == int.class) {", "-\t\t\t    node.setProperty(NodeProperties.ERROR_STRINGS,", "-\t\t\t\t\t     new String[] { c.getName() });", "-                            throw new ExecutionError(\"switch.label.type\", node);", "-                        }", "-                    }", "-                }", "-            }", "-        }", "-        return null;", "-    }", "+        if (c != lc) {", "+          Number n = null;", "+          if (exp.hasProperty(NodeProperties.VALUE)) {", "+            Object cst = exp.getProperty(NodeProperties.VALUE);", "+            if (lc == char.class) {", "+              n = new Integer(((Character)cst).charValue());", "+              n = (Number)cst;", "+          }", "+          if (c == byte.class) {", "+            if (exp.hasProperty(NodeProperties.VALUE)) {", "+              if (n.byteValue() != n.intValue()) {", "+                node.setProperty(NodeProperties.ERROR_STRINGS,", "+                                 new String[] { c.getName() });", "+                throw new ExecutionError", "+                  (\"switch.label.type\", node);", "+              }", "+            } else {", "+              throw new ExecutionError(\"switch.label.type\", node);", "+            }", "+          } else if (c == short.class || c == char.class) {", "+            if (exp.hasProperty(NodeProperties.VALUE)) {", "+              if (n.shortValue() != n.intValue()) {", "+                node.setProperty(NodeProperties.ERROR_STRINGS,", "+                                 new String[] { c.getName() });", "+                throw new ExecutionError", "+                  (\"switch.label.type\", node);", "+              }", "+            } else if (lc == int.class) {", "+              node.setProperty(NodeProperties.ERROR_STRINGS,", "+                               new String[] { c.getName() });", "+              throw new ExecutionError(\"switch.label.type\", node);", "+            }", "+          }", "+      }", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56cc9a4bc43e33801bf8d5084e17f067", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaRoot.java", "commitBeforeChange": "4ede6d67d66fb68d14677a9908f13e6cf52acd10", "commitAfterChange": "0185cf35193b78b2ab0203dc3474f3d620ec0d5c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static void main(final String[] args)", "signatureAfterChange": "      public static void main(final String[] args)", "diff": ["-      // false means \"do not jump to the line number that may be specified, just open the file\"", "-      _openCommandLineFiles(_mainFrame, filesToOpen, numFiles, false);", "-      ", "-          if (anyLineNumbersSpecified) { // this time, we do want to jump to the line number", "-            _openCommandLineFiles(_mainFrame, filesToOpen, numFiles, true);", "-          }", "+          ", "+          // now open the files specified on the command line. must be done here", "+          // after _mainFrame.start() to address bug", "+          // [ drjava-Bugs-2831253 ] Starting DrJava with Project as Parameter", "+          _openCommandLineFiles(_mainFrame, filesToOpen, numFiles, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56db4f2870efe18323df8af884b01f02", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 547, "methodNumberAfterChange": 593, "signatureBeforeChange": "    final private boolean jj_3R_134()", "signatureAfterChange": "    final private boolean jj_3R_121()", "diff": ["-", "-  final private boolean jj_3R_134() {", "-    if (jj_scan_token(COMMA)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_182()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_183()) return true;", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_121() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_3R_164()) {", "+    if (jj_3R_165()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56de91c1559ff0d673d58825c1128f4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "c750f23eb2b9150b4fb75772deac7c17626a7d1c", "commitAfterChange": "74e4ff93e186e54c8f3a2ca5764d77cf5247e4cc", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   private void _setupFontPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupFontPanel(ConfigPanel panel)", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.TEXT_ANTIALIAS, \"Use anti-aliased text\", this,", "+    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.TEXT_ANTIALIAS, \"Use anti-aliased text\", this,", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56ea6b59350558c1e3bfbc5ac0eeccef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 625, "methodNumberAfterChange": 621, "signatureBeforeChange": "    final private boolean jj_3R_86()", "signatureAfterChange": "    final private boolean jj_3R_87()", "diff": ["-  final private boolean jj_3R_86() {", "+  final private boolean jj_3R_87() {", "-    if (jj_3R_127()) {", "+    if (jj_3R_129()) {", "-    if (jj_3R_128()) return true;", "+    if (jj_3R_130()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "571129a043ea1039da6c683ef1ec21cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SymbolData.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public SymbolData(String name)", "signatureAfterChange": "   public SymbolData(String name)", "diff": ["-    _modifiersAndVisibility = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, new String[0]);", "+    _modifiersAndVisibility = new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5716303c46c869eb9eee0ec89b4d9112", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "b6c98c2729d523213cf8ee6bbc9636575f25da66", "commitAfterChange": "4bdaddc150401ace7c16f01fa5c54525f5642ceb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public InteractionsDocument(ConsoleDocumentInterface document, int maxHistorySize, String banner)", "signatureAfterChange": "   public InteractionsDocument(ConsoleDocumentInterface document, int maxHistorySize)", "diff": ["-  public InteractionsDocument(ConsoleDocumentInterface document, int maxHistorySize, String banner) {", "-    this(document, new History(maxHistorySize), banner);", "+  public InteractionsDocument(ConsoleDocumentInterface document, int maxHistorySize) {", "+    this(document, new History(maxHistorySize));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57180457df62cd8460fa3ae9f5b7c77b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "84a2e5bc04f326e6b7de95f0109d8486b696d5bd", "commitAfterChange": "d110e119006c011827e8460a43b7e9c5f471aa6c", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public Iterable<File> getClassPath()", "signatureAfterChange": "   public Iterable<File> getClassPath()", "diff": ["-  public Iterable<File> getClassPath() { return _classPathManager.getClassPath(); }", "+  public Iterable<File> getClassPath() {", "+    // need to make a serializable snapshot", "+    return IterUtil.snapshot(_classPathManager.getClassPath());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "571b661a3cb3aca8f9fa1e0ced5361ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "e4966eebfccbb573b6679624160fc9ffb723a509", "commitAfterChange": "632cdc2196d6c4bf9f5c64cd463fe20db7ac52b4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   private void _attachToVM() throws DebugException", "signatureAfterChange": "   private void _attachToVM() throws DebugException", "diff": ["-      System.out.println(\"args: \" + args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "573363905fa141667345110c1e0a199d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/FileListProperty.java", "commitBeforeChange": "098248186c2cd94be6c7bc9bfe60fa3101b5a0ba", "commitAfterChange": "200037d181721d5a77f697343bf01da60193d9d5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r   public void resetAttributes()", "signatureAfterChange": "\r   public void resetAttributes()", "diff": ["+    _attributes.put(\"squote\", null);\r", "+    _attributes.put(\"dquote\", null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5734face99c63f931f94ce933a2eb733", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "         public FileGroupingState _makeProjectFileGroupingState(final File jarMainClass,                                                           final File buildDir,                                                           final File projectFile,                                                           final File[] projectFiles,                                                          final ClasspathVector classpath)", "signatureAfterChange": "         public FileGroupingState _makeProjectFileGroupingState(final File jarMainClass,                                                           final File buildDir,                                                           final File projectFile,                                                           final File[] projectFiles,                                                          final ClasspathVector classpath)", "diff": ["-      private ArrayList<File> _auxFiles = new ArrayList<File>();", "+      //private ArrayList<File> _auxFiles = new ArrayList<File>();", "+//        ScrollableDialog sd = new ScrollableDialog(null, \"FileGroupingState.compileAll() called\", \"\", \"\");", "+//        sd.show();", "-        List<File>lof = new LinkedList<File>(); // the list of files to compile", "-        List<File>los = new LinkedList<File>(); // the list of sourceroots for the files", "+        List<File> lof = new LinkedList<File>(); // the list of files to compile", "+        List<File> los = new LinkedList<File>(); // the list of sourceroots for the files", "-          try{", "+          try {", "-            if(!los.contains(sourceroot)){", "-              los.add(sourceroot);", "-            }", "+            if (!los.contains(sourceroot)) los.add(sourceroot);", "-          } catch(InvalidPackageException e){", "-            // continue (don't add the file or root)", "-          }", "+          } ", "+          catch(InvalidPackageException e) { /* do nothing */ }", "+        ", "+//        ScrollableDialog sd1 = new ScrollableDialog(null, \"Constructed list of files to compile: \" + lof, \"\", \"\");", "+//        sd1.show();", "-              } catch(FileMovedException fme) {", "+              } ", "+              catch(FileMovedException fme) {", "-              } catch(IllegalStateException e) {", "-                // it doesn't have a file, so don't try and test it...", "-              }", "-            } catch(InvalidPackageException e) {", "-              // don't add it if we don't have a valid packagename", "-            }", "+              } ", "+              catch(IllegalStateException e) { /* do nothing */ }", "+            } ", "+            catch(InvalidPackageException e) { /* do nothing */ }", "+//        ScrollableDialog sd2 = new ScrollableDialog(null, \"Constructed list of sourceroots for compile: \" + lof, \"\", \"\");", "+//        sd2.show();", "-            try{", "+            try {", "-              try{", "+              try {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "574358cc19017800542f4331a47624fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 579, "methodNumberAfterChange": 564, "signatureBeforeChange": "    final private boolean jj_3R_373()", "signatureAfterChange": "    final private boolean jj_3R_376()", "diff": ["-  final private boolean jj_3R_373() {", "-    if (jj_3R_386()) return true;", "+  final private boolean jj_3R_376() {", "+    if (jj_3R_389()) return true;", "-      if (jj_3R_420()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_423()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5746566511968a7de2e0801ca7a527b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public void notifyInactive()", "signatureAfterChange": "   public void notifyInactive()", "diff": ["-      getOpenDocument().syncCurrentLocationWithDefinitions(getCaretPosition());", "+      getOpenDefDocument().setCurrentLocation(getCaretPosition());", "-      _position = _doc.getCurrentDefinitionsLocation();", "+      _position = _doc.getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "574a68b679bafcd2b117c7df413caff3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "                public void testForNumericAssignmentExpressionOnly()", "signatureAfterChange": "                public void testForNumericAssignmentExpressionOnly()", "diff": ["-      NumericAssignmentExpression nae = new MinusAssignmentExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\")), new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5));", "+      NumericAssignmentExpression nae = new MinusAssignmentExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\")), new IntegerLiteral(SourceInfo.NO_INFO, 5));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "574ad8ae7c78a717db9880de754c394f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 421, "methodNumberAfterChange": 410, "signatureBeforeChange": "    final private boolean jj_3R_273()", "signatureAfterChange": "    final private boolean jj_3R_592()", "diff": ["-  final private boolean jj_3R_273() {", "+  final private boolean jj_3R_592() {", "-    if (jj_3R_343()) {", "+    if (jj_3R_599()) {", "-      if (jj_3R_344()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_600()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "575a5416b7f200e0cb3719fcd4b7c8b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessTest.java", "commitBeforeChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "commitAfterChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testCompileAllDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "diff": ["-    doc.saveFile(new FileSelector(file));", "+    saveFile(doc, new FileSelector(file));", "-    doc2.saveFile(new FileSelector(file2));", "+    saveFile(doc2, new FileSelector(file2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "575fb770b2657fc706b0067c54a11947", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testVarArgs15()", "signatureAfterChange": "   public void testVarArgs15()", "diff": ["-    TigerUtilities.setTigerEnabled(true);", "+    setTigerEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5770e1e423a991e8d50355c20269b3ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 836, "methodNumberAfterChange": 778, "signatureBeforeChange": "    final private boolean jj_3R_535()", "signatureAfterChange": "    final private boolean jj_3R_536()", "diff": ["-", "-  final private boolean jj_3R_535() {", "-    if (jj_3R_554()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_579()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_536() {", "+    if (jj_3R_555()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_580()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5776ef6fd79f9d8a3f299eca66f25e69", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 795, "methodNumberAfterChange": 801, "signatureBeforeChange": "    final private boolean jj_3R_525()", "signatureAfterChange": "    final private boolean jj_3R_532()", "diff": ["-", "-  final private boolean jj_3R_525() {", "-    if (jj_scan_token(ASSIGN)) return true;", "-    if (jj_3R_90()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_532() {", "+    if (jj_scan_token(ASSIGN)) return true;", "+    if (jj_3R_91()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57aaa4d889371b060d25110834bb3276", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "2b371f46cbe5fba581bc2ddd38ce1509ce9a6d65", "commitAfterChange": "44c6b68dcb4045b67b8248b43a9b998505409543", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   private void _findAgain()", "signatureAfterChange": "   private void _findAgain()", "diff": ["-      System.err.println(\"Root has been cleared; child count = \" + _rootNode.getChildCount());", "+//      System.err.println(\"Root has been cleared; child count = \" + _rootNode.getChildCount());", "-      _regTree.scrollRowToVisible(0);  // Select the first document in the new panel", "+      _regTree.scrollRowToVisible(0);  // Scroll to the first line in the new panel"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57addcfe181fd8ce7ac1948314a0a906", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "53d061333fe3393f6569c1f553912f1a449482ad", "commitAfterChange": "12c8304e14a6d9eafe2f7093583d8040569150c1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "    public void testGetSourceRootPackageOneDeepValid() throws BadLocationException, IOException", "signatureAfterChange": "    public void testGetSourceRootPackageOneDeepValid() throws BadLocationException, IOException", "diff": ["-//    _log.log(\"testGetSourceRootPackageOneDeepValid() completed\");", "+    _log.log(\"testGetSourceRootPackageOneDeepValid() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57ade565f12cd82fb543b42a8eacae87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/TreeLog.java", "commitBeforeChange": "a8bdfee12d75aa9a066652d8f975838df6021bb2", "commitAfterChange": "73b7f0a42ebcf824c132189e958d58c40bbacf0e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "          public void write(final String time, final String thread, final String location,                       final SizedIterable<? extends String> messages)", "signatureAfterChange": "          public void write(final String time, final String thread, final String location,                       final SizedIterable<? extends String> messages)", "diff": ["+      if (System.currentTimeMillis() - _lastPainted > 200) {", "+        // Ensure that paint events are handled periodically.  Without this check,", "+        // expensive or frequent logging can lead to all paint events being", "+        // coalesced (and placed on the *back* of the queue) before they have a chance", "+        // to run.", "+        SwingUtil.attemptClearEventQueue();", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57ca526d60f295e4469100b57e024492", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "2707043a47325658db92e0290e695128c6817bba", "commitAfterChange": "0c506ac270d6b542eb2c43fb49629be8c2634151", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public DefaultGlobalModel()", "signatureAfterChange": "   public DefaultGlobalModel()", "diff": ["+    _interactionsModel.addListener(_interactionsListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57e87252d75aff309def12b7c71cec00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "          public void testForBracedBody()", "signatureAfterChange": "          public void testForBracedBody()", "diff": ["-      System.err.println(\"Interfaces for java.lang.RuntimeException = \" + re.getInterfaces());", "+//      System.err.println(\"Interfaces for java.lang.RuntimeException = \" + re.getInterfaces());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57fad95ceffb307f9c23ae63ac9034bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "08f616afaebe02cc02ba5da4da4990852caead81", "commitAfterChange": "879a487e79b03eab55f32f29728bf19cb9181971", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void xtestInfiniteLoop() throws Exception", "signatureAfterChange": "   public void testInfiniteLoop() throws Exception", "diff": ["-  public void xtestInfiniteLoop() throws Exception {", "+  public void testInfiniteLoop() throws Exception {", "-      fail(\"slave JVM should throw an exception because testing is interrupted by resetting interactions\");", "+      // auxiliary thread silently swallows the exception and terminates.", "+//      fail(\"slave JVM should throw an exception because testing is interrupted by resetting interactions\");", "-    listener.assertJUnitEndCount(1);", "+    listener.assertJUnitEndCount(0);  // Testing was aborted before test end"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57fd042d7cfc5a4ce5fd2559f6791b8e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeInterpreter.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public static Object invokeMethod(String key, Object obj, Object[] params)", "signatureAfterChange": "   public static Object invokeMethod(String key, Object obj, Object[] params)", "diff": ["-    MethodDescriptor md = (MethodDescriptor)methods.get(key);", "+    MethodDescriptor md = methods.get(key);", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "581670c4d112c9757882cb7914d1a07d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/JVMBuilder.java", "commitBeforeChange": "0e2962e67fbd4bb0610b6df816f609e60a33a28f", "commitAfterChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public Process start(String mainClass, Iterable<? extends String> mainParams) throws IOException", "signatureAfterChange": "   public Process start(String mainClass, Iterable<? extends String> mainParams) throws IOException", "diff": ["+    debug.logValues(\"Starting JVM\", new String[]{\"command\", \"env\", \"dir\"}, command, env, _dir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5853523f71ef57d0ade25a95316d8cb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 61, "signatureBeforeChange": "     public void interactionStarted()", "signatureAfterChange": "     public void interactionStarted()", "diff": ["-        if (printEvents) System.out.println(\"interactionStarted \" + interactionStartCount);", "+        if (printEvents) printStream.println(\"interactionStarted \" + interactionStartCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58631ce1ea108160343ce731db87bcf4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "5402d816f4ee865f7ec73de4093cafaa0c215bb0", "commitAfterChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void tearDown() throws IOException", "signatureAfterChange": "   public void tearDown() throws IOException", "diff": ["-  ", "+   */", "-    _debugger = (JPDADebugger) _model.getDebugger();", "-    assertTrue(\"Debug Manager should not be null\", _debugger != null);", "+//     _debugger = (JPDADebugger) _model.getDebugger();", "+//     assertTrue(\"Debug Manager should not be null\", _debugger != null);", "+    _debugger = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "588bd88b9b4b41712246407c55993a05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "69b7f744a06a218546e1e05a5acb1e8cacf5750d", "commitAfterChange": "e10e7bd83f125e1856c739971a7fde05620d52b1", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   synchronized void currThreadSuspended()", "signatureAfterChange": "   synchronized void currThreadSuspended()", "diff": ["+    _runningThread = null;", "+        /** ", "+         * Anytime a thread is suspended, it becomes the current thread.", "+         * This makes sure the debug panel will correctly put the", "+         * current thread in bold.", "+         */", "+        l.currThreadSet(new DebugThreadData(_suspendedThreads.peek()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "588d78fb8d297f408ecccf6d262e2df2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "1f1e1c194ec79b5577db174af86a812206a9ebf6", "commitAfterChange": "8470bac42027a288eff50252d965c363d15d41dc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void testInteractionsLiveUpdateClasspath()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testInteractionsLiveUpdateClasspath()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    throws BadLocationException, IOException", "+    throws BadLocationException, IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "589d8baf5f38ed3ab22613d3ef343e3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 402, "methodNumberAfterChange": 387, "signatureBeforeChange": "    final private boolean jj_3R_333()", "signatureAfterChange": "    final private boolean jj_3R_336()", "diff": ["+", "+  final private boolean jj_3R_336() {", "+    if (jj_3R_342()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_357()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_333() {", "-    if (jj_3R_339()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_354()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58b24401eeefccb8f23ceedc100cf9c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelNaming.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public static String getDisplayFilename(OpenDefinitionsDocument doc)", "signatureAfterChange": "   public static String getDisplayFilename(OpenDefinitionsDocument doc)", "diff": ["-    String filename = doc.getFilename();", "+    String fileName = doc.getFilename();", "-    if (filename.endsWith(\".java\")) {", "-      int extIndex = filename.lastIndexOf(\".java\");", "+    if (fileName.endsWith(\".java\")) {", "+      int extIndex = fileName.lastIndexOf(\".java\");", "-        filename = filename.substring(0, extIndex);", "+        fileName = fileName.substring(0, extIndex);", "-      filename = filename + \" *\";", "+      fileName = fileName + \" *\";", "-    return filename;", "+    return fileName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58bd97857dfbeb82ac9ca1961a00e848", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 747, "methodNumberAfterChange": 744, "signatureBeforeChange": "    final private boolean jj_3R_556()", "signatureAfterChange": "    final private boolean jj_3R_341()", "diff": ["+", "+  final private boolean jj_3R_341() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(30)) jj_scanpos = xsp;", "+    if (jj_3R_203()) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_408()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_556() {", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(30)) jj_scanpos = xsp;", "-    if (jj_3R_190()) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-      if (jj_3R_566()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58beff8fbc4b6186ed757475c1b17883", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocumentTest.java", "commitBeforeChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "commitAfterChange": "d07989306c43e4045df83ca1211956d5a85a21bd", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testPackageNameWeird2() throws BadLocationException", "signatureAfterChange": "   public void testPackageNameWeird2()     throws BadLocationException, InvalidPackageException", "diff": ["-  public void testPackageNameWeird2() throws BadLocationException {", "+  public void testPackageNameWeird2()", "+    throws BadLocationException, InvalidPackageException", "+  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58e2dab1fc26f7724785a6a1d7af40b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "d6f67da504ad61f8681827b1ed9e34bdf47096b1", "commitAfterChange": "0a854931d2d0d982ce19ec1350fad796e2685223", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected static void collectValidResults(GlobalModel model,                                             LinkedHashMap<File,Set<JDKDescriptor>> jars,                                             Map<FullVersion, Iterable<JarJDKToolsLibrary>> results,                                             Map<FullVersion, Iterable<JarJDKToolsLibrary>> compoundResults)", "signatureAfterChange": "   protected static void collectValidResults(GlobalModel model,                                             LinkedHashMap<File,Set<JDKDescriptor>> jars,                                             Map<FullVersion, Iterable<JarJDKToolsLibrary>> results,                                             Map<FullVersion, Iterable<JarJDKToolsLibrary>> compoundResults)", "diff": ["+    JDKToolsLibrary.msg(\"---- Collecting Valid Results ----\");", "-        if (desc!=null) {", "-          boolean containsCompiler = desc.containsCompiler(jar.getKey());", "-          JDKToolsLibrary.msg(\"Checking file \"+jar.getKey()+\" for \"+desc);", "-          JDKToolsLibrary.msg(\"\\t\"+containsCompiler);", "-          if (!containsCompiler) continue;", "-        }", "+        assert desc != null;", "+", "+        boolean containsCompiler = desc.containsCompiler(jar.getKey());", "+        JDKToolsLibrary.msg(\"Checking file \"+jar.getKey()+\" for \"+desc);", "+        JDKToolsLibrary.msg(\"    \"+containsCompiler);", "+        if (!containsCompiler) continue;", "+", "-          if ((desc!=null)&&(desc.isCompound())) { mapToAddTo = compoundResults; }", "+          if (desc.isCompound()) { mapToAddTo = compoundResults; }", "-          JDKToolsLibrary.msg(\"\\tlibrary is not valid: compiler=\"+lib.compiler().isAvailable()+", "+          JDKToolsLibrary.msg(\"    library is not valid: compiler=\"+lib.compiler().isAvailable()+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58ee786327a55543e9d3830a98fdd8d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/KeyBindingManager.java", "commitBeforeChange": "762f9487498790edfa8d7b58c3d83cb6592af447", "commitAfterChange": "1ea7874872b93b44444c8711a298524cf05a221e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private boolean shouldUpdate(KeyStroke ks, Action a)", "signatureAfterChange": "   private boolean shouldUpdate(KeyStroke ks, Action a)", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      /*", "+    if (CodeStatus.DEVELOPMENT) {      ", "-        return false;", "-      */", "+        return true;", "+      ", "-        KeyStrokeOption opt = new KeyStrokeOption(null,null);", "-        KeyStrokeData conflictKSD = (KeyStrokeData)_keyToDataMap.get(ks);", "-        String key = opt.format(ks);", "-        KeyStrokeData newKSD = (KeyStrokeData)_actionToDataMap.get(a);", "-        String text = \"\\\"\"+ key +\"\\\"\" + \" is already assigned to \\\"\" + conflictKSD.getName() + ", "-          \"\\\".\\nWould you like to assign \\\"\" + key + \"\\\" to \\\"\" + newKSD.getName() + \"\\\"?\";", "-        int rc = JOptionPane.showConfirmDialog(_mainFrame,", "-                                               text,", "-                                               \"DrJava\",", "-                                               JOptionPane.YES_NO_CANCEL_OPTION);", "-        ", "-        switch (rc) {", "-          case JOptionPane.YES_OPTION:", "-            return true;", "-          case JOptionPane.NO_OPTION:", "-            return false;", "-          case JOptionPane.CLOSED_OPTION:", "-            return false;", "-          case JOptionPane.CANCEL_OPTION:", "-            return false;", "-          default:", "-            throw new RuntimeException(\"Invalid rc: \" + rc);", "+        if (_shouldCheckConflict) {", "+          KeyStrokeOption opt = new KeyStrokeOption(null,null);", "+          KeyStrokeData conflictKSD = (KeyStrokeData)_keyToDataMap.get(ks);", "+          String key = opt.format(ks);", "+          KeyStrokeData newKSD = (KeyStrokeData)_actionToDataMap.get(a);", "+          String text = \"\\\"\"+ key +\"\\\"\" + \" is already assigned to \\\"\" + conflictKSD.getName() + ", "+            \"\\\".\\nWould you like to assign \\\"\" + key + \"\\\" to \\\"\" + newKSD.getName() + \"\\\"?\";", "+          int rc = JOptionPane.showConfirmDialog(_mainFrame,", "+                                                 text,", "+                                                 \"DrJava\",", "+                                                 JOptionPane.YES_NO_CANCEL_OPTION);", "+          ", "+          switch (rc) {", "+            case JOptionPane.YES_OPTION:", "+              return true;", "+            case JOptionPane.NO_OPTION:", "+              return false;", "+            case JOptionPane.CLOSED_OPTION:", "+              return false;", "+            case JOptionPane.CANCEL_OPTION:", "+              return false;", "+            default:", "+              throw new RuntimeException(\"Invalid rc: \" + rc);", "+          }", "+        else", "+          return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58eec5e8cbb31538f92f48210988e6ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 139, "signatureBeforeChange": "   public static <T> ConsList<T> asConsList(Iterable<T> iter)", "signatureAfterChange": "   public static <T> ConsList<T> asConsList(Iterable<T> iter)", "diff": ["-   */", "-  public static <T> ConsList<T> asConsList(Iterable<T> iter) {", "-    if (iter instanceof ConsList<?>) { return (ConsList<T>) iter; }", "-    else {", "-      ConsList<T> result = ConsList.empty();", "-      for (T elt : ReverseIterable.make(iter)) {", "-        result = ConsList.cons(elt, result);", "-      }", "-      return result;", "-    }", "-  }", "+   */", "+  public static <T> ConsList<T> asConsList(Iterable<T> iter) {", "+    if (iter instanceof ConsList<?>) { return (ConsList<T>) iter; }", "+    else {", "+      ConsList<T> result = ConsList.empty();", "+      for (T elt : reverse(iter)) { result = ConsList.cons(elt, result); }", "+      return result;", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58f41defe542a051cd37a26eb6136751", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b6bfdc97713285768c8b922127b436d974f9f1e4", "commitAfterChange": "25355ecd0bc01ef2920944ee4f7366c5c45c1e55", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testInterpretJavaQuotedEscapedArgs()", "signatureAfterChange": "   public void testInterpretJavaQuotedEscapedArgs()", "diff": ["+    _log.log(\"testInterpretJavaQuotedEscapedArgs started\");", "-    /*    _assertMainTransformation(\"java Foo \\\"\\\\n\\\"\",", "-     \"Foo.main(new String[]{\\\"\\\\n\\\"});\");", "+    /*    _assertMainTransformation(\"java Foo \\\"\\\\n\\\"\", \"Foo.main(new String[]{\\\"\\\\n\\\"});\");", "-     _assertMainTransformation(\"java Foo \\\"\\\\t\\\"\",", "-     \"Foo.main(new String[]{\\\"\\\\t\\\"});\");", "+     _assertMainTransformation(\"java Foo \\\"\\\\t\\\"\", \"Foo.main(new String[]{\\\"\\\\t\\\"});\");", "-     _assertMainTransformation(\"java Foo \\\"\\\\r\\\"\",", "-     \"Foo.main(new String[]{\\\"\\\\r\\\"});\");", "+     _assertMainTransformation(\"java Foo \\\"\\\\r\\\"\", \"Foo.main(new String[]{\\\"\\\\r\\\"});\");", "-     _assertMainTransformation(\"java Foo \\\"\\\\f\\\"\",", "-     \"Foo.main(new String[]{\\\"\\\\f\\\"});\");", "+     _assertMainTransformation(\"java Foo \\\"\\\\f\\\"\", \"Foo.main(new String[]{\\\"\\\\f\\\"});\");", "-     _assertMainTransformation(\"java Foo \\\"\\\\b\\\"\",", "-     \"Foo.main(new String[]{\\\"\\\\b\\\"});\"); */", "+     _assertMainTransformation(\"java Foo \\\"\\\\b\\\"\", \"Foo.main(new String[]{\\\"\\\\b\\\"});\"); */", "+    _log.log(\"testInterpretJavaQuotedEscapedArgs started\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59049398e2de67f9645193da22e70004", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/ExecJVM.java", "commitBeforeChange": "efe2cdfa860877c37343dbc5d29e380b33344492", "commitAfterChange": "c46b51159c995a9970485b3c515f743b3910e9fc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static Process runJVM(String mainClass,                                String[] classParams,                                String classPath,                                String[] jvmParams) throws IOException", "signatureAfterChange": "   public static Process runJVM(String mainClass,                                String[] classParams,                                String classPath,                                String[] jvmParams) throws IOException", "diff": ["-    String[] jvmWithCP = (String[]) args.toArray(new String[0]);", "-    ", "+    String[] jvmWithCP = args.toArray(new String[0]);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59182b9d4ffdbe62e94ee4cbcc6c85a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BookmarksPanel.java", "commitBeforeChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "commitAfterChange": "3d71370f387f5ff990190106fcbfa93f8a159b9b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public BookmarksPanel(MainFrame frame, RegionManager<MovingDocumentRegion> bookmarkManager)", "signatureAfterChange": "   public BookmarksPanel(MainFrame frame, RegionManager<MovingDocumentRegion> bookmarkManager)", "diff": ["-    _regionManager.addListener(new RegionManagerListener<MovingDocumentRegion>() {      ", "+    getRegionManager().addListener(new RegionManagerListener<MovingDocumentRegion>() {      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5918b4a42339c5a79c1aefb262b4af1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "936df97bedea66175f36cae49ba74b17abf11e8a", "commitAfterChange": "d43c6d20ec903cbbb4ee5291a112b3b3ae570823", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": "   protected void saveAllFilesHelper(FileSaveSelector com) throws IOException", "signatureAfterChange": "   protected void saveAllFilesHelper(FileSaveSelector com) throws IOException", "diff": ["-    ", "-    OpenDefinitionsDocument[] docs;", "-    synchronized(_documentsRepos) { docs = _documentsRepos.toArray(new OpenDefinitionsDocument[0]); }", "-    for (final OpenDefinitionsDocument doc: docs) {", "+  ", "+    for (final OpenDefinitionsDocument doc: getOpenDefinitionsDocuments()) {  // getOpen... makes a copy"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "591b32bf796988d3c171ac011759ca46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 409, "methodNumberAfterChange": 383, "signatureBeforeChange": "    final private boolean jj_3_7()", "signatureAfterChange": "    final private boolean jj_3_7()", "diff": ["+  final private boolean jj_3_7() {", "-  final private boolean jj_3_7() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5939f77d76de54c6283e973dd6334294", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   public void requestSelectionUpdate(ItemT ini)", "signatureAfterChange": "   public void requestSelectionUpdate(ItemT ini)", "diff": ["-  /** If the currently selected item is not an INavigatorItem, select the one given. */", "+  /** If the currently selected item is not an INavigatorItem, select the one given. Only runs in event thread. */", "-    synchronized (_model) {", "+//    synchronized (_model) {", "-    }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59439c3b280e1fa63baaf376e4406511", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavadocErrorPanel.java", "commitBeforeChange": "da631ae365e5ae3fe7064b60f098ede0150c39bb", "commitAfterChange": "574257b530483460a9c0ce0cc5577b7fd93532dd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setJavadocInProgress()", "signatureAfterChange": "     public void setJavadocInProgress()", "diff": ["-      SwingDocument doc = new SwingDocument();", "+      ErrorDocument doc = new ErrorDocument(getErrorDocumentTitle());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5950c0aa03e784a689483231f1b11001", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 368, "methodNumberAfterChange": 610, "signatureBeforeChange": "    final private boolean jj_3R_358()", "signatureAfterChange": "    final private boolean jj_3R_88()", "diff": ["-", "-  final private boolean jj_3R_358() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_365()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_366()) return true;", "-    }", "-    return false;", "-  }", "+    if (jj_3R_136()) {", "+    if (jj_3R_137()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "596655fdcf1f9dd7a415d05d12d18e20", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "29ec68db51be49631902c1a08dc8658c156745b6", "commitAfterChange": "ab72d5391a7476aed8a2fc83f5cb9b83bb5fe1d3", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "   private void _toggleBreakpoint()", "signatureAfterChange": "   void toggleBreakpoint()", "diff": ["-  private void _toggleBreakpoint() {", "+  void toggleBreakpoint() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5973ff8fc53f27b7cfc7cc620fe23b52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public void testSaveAsAlreadySaved()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAsAlreadySaved() throws BadLocationException, IOException", "diff": ["-   */", "-  public void testSaveAsAlreadySaved()", "-    throws BadLocationException, IOException", "-  {", "+  /** Ensures that saveAs saves to a different file. */", "+  public void testSaveAsAlreadySaved() throws BadLocationException, IOException {", "-    assertEquals(\"contents of saved file\",", "-                 FOO_TEXT,", "-                 FileOps.readFileAsString(file1));", "+    assertEquals(\"contents of saved file\", FOO_TEXT, FileOps.readFileAsString(file1));", "-        catch (FileMovedException fme) {", "-          // We know file should exist", "-          fail(\"file does not exist\");", "-        }", "+        catch (FileMovedException fme) { fail(\"file does not exist\");   /* We know file should exist */ }", "+    ", "+    _log.log(\"testSaveAsAlreadySaved completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "597b4984b9052eaf0ff5dceadacef5c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/FileProperty.java", "commitBeforeChange": "1a21d93c6026fc975d9f1a1bda2fbd55942a0154", "commitAfterChange": "7cbabe0b7b5f77b58eac69afdca15c16ef2f6a9b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r   public FileProperty(String name, Lambda<File,Void> getFile, String help)", "signatureAfterChange": "   public FileProperty(String name, Thunk<File> getFile, String help)", "diff": ["-  /** Create an eager file property. */\r", "-  public FileProperty(String name, Lambda<File,Void> getFile, String help) {\r", "-    super(name,help);\r", "-    _getFile = getFile;\r", "-    resetAttributes();\r", "-  }\r", "+  /** Create an eager file property. */", "+  public FileProperty(String name, Thunk<File> getFile, String help) {", "+    super(name,help);", "+    _getFile = getFile;", "+    resetAttributes();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "597fa84f40af3589dc34f798a8012b8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/SingleDisplayModelTest.java", "commitBeforeChange": "97f966af08ae6bec968f68d8b2fce6c5531a12b8", "commitAfterChange": "d4f8b5e1e15fc2c34ba6969d4ef7bdb04cc8916b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void createModel()", "signatureAfterChange": "   protected void createModel()", "diff": ["-    _model = new SingleDisplayModel();", "+    _model = new SingleDisplayModel(_originalModel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59a9ed6aaab04d2f5f5d347b0e1bf94b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/SingleDisplayModel.java", "commitBeforeChange": "7bb32c28070a4b5d5697c7c88ea0d664289c76e8", "commitAfterChange": "b2ad80c49aaa09f293a5bc1f6664d4cc5243219e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public OpenDefinitionsDocument openFile(FileOpenSelector com)     throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   public OpenDefinitionsDocument openFile(FileOpenSelector com)     throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["-    return super.openFile(com);", "+    // Close an untitled, unchanged document if it is the only one open", "+    boolean closeUntitled = _hasOneEmptyDocument();", "+    OpenDefinitionsDocument oldDoc = _activeDocument;", "+", "+    OpenDefinitionsDocument openedDoc = super.openFile(com);", "+    if (closeUntitled) {", "+      super.closeFile(oldDoc);", "+    }", "+", "+    setActiveDocument(openedDoc);", "+    return openedDoc;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59b1da9349a9eb9f4baac31a0d45a629", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/TypeCheckerExtension.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Object visit(InstanceOfExpression node)", "signatureAfterChange": "   public Class visit(InstanceOfExpression node)", "diff": ["-  public Object visit(InstanceOfExpression node) {", "+  public Class visit(InstanceOfExpression node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59be54e94adcab554e5757e6a0f19817", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected void _log(String message)", "signatureAfterChange": "   private void _log(String message)", "diff": ["-  protected void _log(String message) {", "-    _log.logTime(message);", "-  }", "+  private void _log(String message) { _log.log(message); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59c70f692fc6874a0fa262f42f0d62ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   private void initJarOptionsDialog()", "signatureAfterChange": "   private void initJarOptionsDialog()", "diff": ["-    if (_jarOptionsDialog==null) {", "-      _jarOptionsDialog = new JarOptionsDialog(MainFrame.this);", "-      if (DrJava.getConfig().getSetting(DIALOG_JAROPTIONS_STORE_POSITION).booleanValue()) {", "-        _jarOptionsDialog.setFrameState(DrJava.getConfig().getSetting(DIALOG_JAROPTIONS_STATE));", "-      }      ", "-    }", "+    if (DrJava.getConfig().getSetting(DIALOG_JAROPTIONS_STORE_POSITION).booleanValue())", "+      _jarOptionsDialog.setFrameState(DrJava.getConfig().getSetting(DIALOG_JAROPTIONS_STATE));  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d71639a9b7fcdbbd5230c6f60683ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 603, "methodNumberAfterChange": 385, "signatureBeforeChange": "    final private boolean jj_3R_339()", "signatureAfterChange": "    final private boolean jj_3R_341()", "diff": ["+", "+  final private boolean jj_3R_341() {", "+    if (jj_3R_349()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_360()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_339() {", "-    if (jj_3R_347()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_364()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59def03a2185e9d5d76eefb8513e965d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/UtilitiesTest.java", "commitBeforeChange": "3c8d894853a99e6e32b5d7c276413441b9c000ec", "commitAfterChange": "68fac9302e6b2358c3b67dbd6346f2e01189b049", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testClearEventQueue()", "signatureAfterChange": "   public void testClearEventQueue()", "diff": ["-        System.out.println(\"Runnable 0\");", "+//        System.out.println(\"Runnable 0\");", "-          System.out.println(\"Runnable 1\");", "+//          System.out.println(\"Runnable 1\");", "-    System.out.println(\"Before clearEventQueue\");", "-    Utilities.clearEventQueue(true);", "-    System.out.println(\"After clearEventQueue\");", "+//    System.out.println(\"Before clearEventQueue\");", "+    Utilities.clearEventQueue();", "+//    System.out.println(\"After clearEventQueue\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59e694675ff03e56888fe55c9d4b01cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "b31f8d4bbae421be3e83afd67fe1e431f6bb7d04", "commitAfterChange": "17538ca2acd72a3d226b027cd2593c234c30ba46", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public static File getValidDirectory(File file)", "signatureAfterChange": "   public static File getValidDirectory(File file)", "diff": ["-    // if it's the NULL_FILE, use \"user.home\"", "-    if (file==FileOption.NULL_FILE) {", "+    // if it's the NULL_FILE or null, use \"user.home\"", "+    if ((file==FileOption.NULL_FILE)||(file==null)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59f852ced0391f5eae97c21c349b2c62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testItAll() throws Exception", "signatureAfterChange": "     public void testItAll() throws Exception", "diff": ["+    _log.log(\"testItAll completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a042e0bf0259baf91ece3cab5dca740", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorOptionComponent.java", "commitBeforeChange": "c7cf97829e412463c33fef76eb49ab99dfa7be2a", "commitAfterChange": "3a763dc9fed92965e7c7369ee145c417374432d3", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   protected java.util.List<JButton> getButtons()", "signatureAfterChange": "   protected java.util.List<JButton> getButtons()", "diff": ["+    buttons.add(_removeButton);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a164e86fb04efcdde70c815ac66d917", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "commitAfterChange": "62776e907e3e6dddd6b4161559ae3b70f27cc2e5", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public CompilerError getErrorAtOffset(OpenDefinitionsDocument odd, int offset)", "signatureAfterChange": "   public CompilerError getErrorAtOffset(OpenDefinitionsDocument odd, int offset)", "diff": ["-", "-      catch (BadLocationException willNeverHappen) { throw new UnexpectedException(willNeverHappen); }", "+      catch (BadLocationException e) { /* source document has been edited; fail silently */ }", "-      catch (BadLocationException e) { throw new UnexpectedException(e); }", "+      catch (BadLocationException e) { /* source document has been edited; fail silently */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a167e64c13613e4467fe1a41a109298", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ReaderWriterLockTest.java", "commitBeforeChange": "7933cc364884763a44a085994870596faa04b316", "commitAfterChange": "b978cac1d85997e83464382e4a499c19d736223c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testMultipleWriters() throws InterruptedException", "signatureAfterChange": "   public void testMultipleWriters() throws InterruptedException", "diff": ["-   */", "+  /** Tests that multiple writers run in mutually exclusive intervals without causing deadlock. */", "-    final StringBuffer buf = new StringBuffer();", "+    final StringBuilder buf = new StringBuilder();", "-    assertTrue(\"w1 writes should happen in order\",", "-               output.indexOf(\"w1 w1 w1 \") != -1);", "-    assertTrue(\"w2 writes should happen in order\",", "-               output.indexOf(\"w2 w2 w2 \") != -1);", "-    assertTrue(\"w1 writes should happen in order\",", "-               output.indexOf(\"w3 w3 w3 \") != -1);", "+    assertTrue(\"w1 writes should happen in order\", output.indexOf(\"w1 w1 w1 \") != -1);", "+    assertTrue(\"w2 writes should happen in order\", output.indexOf(\"w2 w2 w2 \") != -1);", "+    assertTrue(\"w1 writes should happen in order\", output.indexOf(\"w3 w3 w3 \") != -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a2d3adebd87ae4905c1848164c82ddc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "d1ffac675273323f7a1b9777462d16896d09a1af", "commitAfterChange": "c0ad820565377d42d023afeab71166682f497054", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testDancingUIFileClosed() throws IOException", "signatureAfterChange": "   public void testDancingUIFileClosed() throws IOException", "diff": ["-//     _log.log(\"Waiting for file closing\");", "+    _log.log(\"Waiting for file closing\");", "-//     _log.log(\"testDancingUIClosed completed\");", "+    _log.log(\"testDancingUIClosed completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a434dc368d4c686f8976f6075a2619c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "b121ed20db87231f3836df8854d99256d5781f05", "commitAfterChange": "5e4fadedf6da2c2718ee8846afe69f5d1e599662", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private Iterable<JDKToolsLibrary> findLibraries()", "signatureAfterChange": "      private Iterable<JDKToolsLibrary> findLibraries()", "diff": ["-      if (!results.containsKey(coarsenVersion(tVersion))) {", "-        JarJDKToolsLibrary.msg(\"From search: \"+t);", "-        results.put(coarsenVersion(tVersion), t);", "+      JarJDKToolsLibrary.msg(\"From search: \"+t);", "+      JavaVersion.FullVersion coarsenedVersion = coarsenVersion(tVersion);", "+      JarJDKToolsLibrary.msg(\"\\ttVersion: \"+tVersion+\" \"+tVersion.vendor());", "+      JarJDKToolsLibrary.msg(\"\\tcoarsenedVersion: \"+coarsenedVersion+\" \"+coarsenedVersion.vendor());", "+      if (!results.containsKey(coarsenedVersion)) {", "+        JarJDKToolsLibrary.msg(\"\\tadded\");", "+        results.put(coarsenedVersion, t);", "-      else { JarJDKToolsLibrary.msg(\"From search: duplicate \"+t); }", "+      else { JarJDKToolsLibrary.msg(\"\\tduplicate\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a45c160ba9b9cb7575d2554108fecca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "97a825e752ef3da28458a0080f0990b0f0659788", "commitAfterChange": "3f50a00dbfaba534529de5a114a9d7c30612e9a7", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void testDancingUIFileOpened() throws IOException", "signatureAfterChange": "   public void testDancingUIFileOpened() throws IOException", "diff": ["+     Utilities.clearEventQueue();", "+     Utilities.clearEventQueue();", "+     Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a5e5cf5234a2120bdb9428d87d1418d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaErrorWindow.java", "commitBeforeChange": "536c00239bf186b1c81bb087b131d4cbb6302c23", "commitAfterChange": "ed1069955672117b4c9aac0875c5704fb5071788", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public static String getSystemAndDrJavaInfo()", "signatureAfterChange": "   public static String getSystemAndDrJavaInfo()", "diff": ["+    b.append(\"Compiler Discovery Log:\\n\");", "+    b.append(edu.rice.cs.drjava.model.JarJDKToolsLibrary.LOG_STRINGWRITER.toString());", "+    b.append(\"\\n\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a5f50b12192290c88b390cf0dab7705", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 610, "methodNumberAfterChange": 452, "signatureBeforeChange": "    final private boolean jj_3R_159()", "signatureAfterChange": "    final private boolean jj_3R_154()", "diff": ["+  final private boolean jj_3R_154() {", "+    if (jj_3R_197()) return true;", "+    if (jj_3R_233()) jj_scanpos = xsp;", "-  final private boolean jj_3R_159() {", "-    if (jj_3R_200()) return true;", "-    if (jj_3R_258()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a69a64757314692ef59126171655456", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 56, "signatureBeforeChange": "   public int findCharOnLine(final int pos, final char findChar)", "signatureAfterChange": "   public int findCharOnLine(final int pos, final char findChar)", "diff": ["-          if (_reduced.getStateAtCurrent().equals(ReducedModelState.FREE)) break; // found matching char", "+          if (_reduced.getStateAtCurrent().equals(FREE)) break; // found matching char"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a6aa8eaeaeb925721832d76b03fd524", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testDebugSourcepath()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testDebugSourcepath()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-      _asynchStep(Debugger.STEP_INTO);", "+      _asyncStep(Debugger.STEP_INTO);", "-    synchronized(_notifierLock){", "-      _asynchStep(Debugger.STEP_OVER);", "+    synchronized(_notifierLock) {", "+      _asyncStep(Debugger.STEP_OVER);", "-    synchronized(_debugger){", "+    synchronized(_debugger) {", "-    synchronized(_notifierLock){", "-      _asynchStep(Debugger.STEP_OVER);", "+    synchronized(_notifierLock) {", "+      _asyncStep(Debugger.STEP_OVER);", "-       public void interpreterChanged(boolean inProgress){", "+       public void interpreterChanged(boolean inProgress) {", "-    interpretListener.assertInteractionEndCount(1);", "+    interpretListener.assertInteractionEndCount(1);  // fires", "+    interpretListener.assertInterpreterChangedCount(1);  // fires (don't wait)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a79d1a2d7f5ad23215ee75354a1c16f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 510, "methodNumberAfterChange": 393, "signatureBeforeChange": "    final private boolean jj_3R_271()", "signatureAfterChange": "    final private boolean jj_3R_275()", "diff": ["-", "-  final private boolean jj_3R_271() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_341()) jj_scanpos = xsp;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    xsp = jj_scanpos;", "-    if (jj_3R_342()) jj_scanpos = xsp;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    xsp = jj_scanpos;", "-    if (jj_3R_343()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_275() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_346()) jj_scanpos = xsp;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    xsp = jj_scanpos;", "+    if (jj_3R_347()) jj_scanpos = xsp;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    xsp = jj_scanpos;", "+    if (jj_3R_348()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a7e9fd042e5752beea6aae604e5b46a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testFindPartialSubstrings() throws BadLocationException", "signatureAfterChange": "   public void testFindPartialSubstrings() throws BadLocationException", "diff": ["-    doc.insertString(0, \"ooAooAoo\", null);", "+    _doc.insertString(0, \"ooAooAoo\", null);", "-    frm.setFindWord(\"ooAo\");", "-    frm.setMatchCase(false);", "-    frm.setSearchBackwards(false);", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 4);", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 4);", "+    _frm.setFindWord(\"ooAo\");", "+    _frm.setMatchCase(false);", "+    _frm.setSearchBackwards(false);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 4);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 4);", "-    frm.setSearchBackwards(true);", "-    _testFindNextSucceeds(frm, CONTINUE, 8, 3);", "-    _testFindNextSucceeds(frm, CONTINUE, 8, 3);", "+    _frm.setSearchBackwards(true);", "+    _testFindNextSucceeds(_frm, CONTINUE, 8, 3);", "+    _testFindNextSucceeds(_frm, CONTINUE, 8, 3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a7f2aef9234579d2d7ecc0d0d0df256", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5944dd2b12a74ebad6e3549d813d2dd557403c7e", "commitAfterChange": "53735c967d2add6a16ab5776bac9111426f41996", "methodNumberBeforeChange": 171, "methodNumberAfterChange": 172, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["+    _docPanePopupMenu.add(_javadocCurrentAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a831bc570f85d158cef62e9eb134d62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 18, "signatureBeforeChange": "    public JUnitErrorModel getJUnitErrorModel()", "signatureAfterChange": "   public JUnitModel getJUnitModel()", "diff": ["-  public JUnitErrorModel getJUnitErrorModel() {", "-    return _junitErrorModel;", "-  }", "+   */", "+  public JUnitModel getJUnitModel() {", "+    return _junitModel;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a946580b4bef982ee5fd2bb767f0eee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "b578b7b4c7a4a91c29761e9d3bf28b378645bfda", "commitAfterChange": "7d20b14faca1d500f599ed54f40d60f42cf8097e", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "   public void saveProject(String filename, Hashtable<OpenDefinitionsDocument,DocumentInfoGetter> info)      throws IOException", "signatureAfterChange": "   public void saveProject(String filename, Hashtable<OpenDefinitionsDocument,DocumentInfoGetter> info)      throws IOException", "diff": ["-    String base = filename.substring(0, filename.lastIndexOf(File.separator) + 1);", "-    ProjectFileBuilder builder = new ProjectFileBuilder(base);", "+//    String base = filename.substring(0, filename.lastIndexOf(File.separator) + 1);", "+    ProjectFileBuilder builder = new ProjectFileBuilder(filename);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5abe672ca7cf7413f856298a74585f94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 47, "signatureBeforeChange": "     public void debuggerStarted()", "signatureAfterChange": "     public void debuggerStarted()", "diff": ["-        if (printEvents) System.out.println(\"debuggerStarted \" + debuggerStartedCount);", "+        if (printEvents) printStream.println(\"debuggerStarted \" + debuggerStartedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5abff3ae818607d69acca6bfbe0af3fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 634, "methodNumberAfterChange": 612, "signatureBeforeChange": "    final private boolean jj_3R_205()", "signatureAfterChange": "    final private boolean jj_3R_213()", "diff": ["+  final private boolean jj_3R_213() {", "+    if (jj_3R_251()) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_205() {", "-    if (jj_3R_242()) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ad3aec68c46003c0b27e0facf462d75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "07df9e8611c650306e145606873296ce77e32d2e", "commitAfterChange": "ffef92d973721c01556f7c658b9620d6a7c5fd34", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic void testInsertMultipleBraces()", "signatureAfterChange": " \t \tpublic void testInsertMultipleBraces()", "diff": ["-\t\t\tmodel1.insertBlockCommentStart();", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertStar();", "-\t\t\tmodel1.insertBlockCommentEnd();", "+\t\t\tmodel1.insertStar();", "+\t\t\tmodel1.insertSlash();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ae93ede3641e8f7d92efa6665bfa870", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 331, "methodNumberAfterChange": 384, "signatureBeforeChange": "    final private boolean jj_3R_361()", "signatureAfterChange": "    final private boolean jj_3R_346()", "diff": ["-", "-  final private boolean jj_3R_361() {", "-    if (jj_3R_369()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_377()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_346() {", "+    if (jj_3R_362()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_373()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5af429862d3c58d6683a27449064cb9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 418, "methodNumberAfterChange": 416, "signatureBeforeChange": "    final private boolean jj_3R_419()", "signatureAfterChange": "    final private boolean jj_3R_420()", "diff": ["-  final private boolean jj_3R_419() {", "+  final private boolean jj_3R_420() {", "-    if (jj_3R_426()) jj_scanpos = xsp;", "+    if (jj_3R_427()) jj_scanpos = xsp;", "-    if (jj_3R_427()) return true;", "+    if (jj_3R_428()) return true;", "-    if (jj_3R_428()) jj_scanpos = xsp;", "+    if (jj_3R_429()) jj_scanpos = xsp;", "-    if (jj_3R_429()) {", "+    if (jj_3R_430()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5af66934282f390daeca053c6bf4d4f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 323, "methodNumberAfterChange": 311, "signatureBeforeChange": "    final private boolean jj_3R_83()", "signatureAfterChange": "    final private boolean jj_3R_85()", "diff": ["-  final private boolean jj_3R_83() {", "-    if (jj_3R_107()) return true;", "-    if (jj_scan_token(CLASS)) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_85() {", "+    if (jj_3R_109()) return true;", "+    if (jj_scan_token(INTERFACE)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b0352a192e26493783141eca5b45749", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public synchronized void testStepIntoOverBreakpoint()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testStepIntoOverBreakpoint()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-      _asynchStep(Debugger.STEP_OVER);", "+      _asyncStep(Debugger.STEP_OVER);", "-      _asynchStep(Debugger.STEP_OVER);", "+      _asyncStep(Debugger.STEP_OVER);", "-      _asynchResume();", "+      _asyncResume();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b193279f96d63bfdac0e4a8556e0a55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyElementaryVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "          public void testForInitializedVariableDeclaratorDoFirst()", "signatureAfterChange": "          public void testForInitializedVariableDeclaratorDoFirst()", "diff": ["-      InitializedVariableDeclarator ivd = new InitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO,", "-                                                                            new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"),", "-                                                                            new Word(JExprParser.NO_SOURCE_INFO, \"i\"),", "-                                                                            new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5));", "+      InitializedVariableDeclarator ivd = new InitializedVariableDeclarator(SourceInfo.NO_INFO,", "+                                                                            new PrimitiveType(SourceInfo.NO_INFO, \"int\"),", "+                                                                            new Word(SourceInfo.NO_INFO, \"i\"),", "+                                                                            new IntegerLiteral(SourceInfo.NO_INFO, 5));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b22dc35c18af1fc959a919328e4e815", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "1f215280ffb4deee1474aa0ea630d96d544831f9", "commitAfterChange": "36da33844ba54377479a55c5dc3b578eed405d70", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public TestJVMExtension(final GlobalModel model) throws RemoteException", "signatureAfterChange": "      public TestJVMExtension() throws RemoteException", "diff": ["-    public TestJVMExtension(final GlobalModel model) throws RemoteException { ", "-      super(model);", "+    public TestJVMExtension() throws RemoteException { ", "+      super();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b3f133f02255b4040a32de88bc9013b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "commitAfterChange": "6df23b9d947a754084cff460e34d203b0d81fd48", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public synchronized void testBreakpointsWithSameNamePrefix() throws Exception", "signatureAfterChange": "   public synchronized void testBreakpointsWithSameNamePrefix() throws Exception", "diff": ["-    _model.removeListener(interpretListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b5d807cd7b4bc6d8fcffa6793588874", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 668, "methodNumberAfterChange": 585, "signatureBeforeChange": "    final private boolean jj_3R_266()", "signatureAfterChange": "    final private boolean jj_3R_582()", "diff": ["+", "+  final private boolean jj_3R_582() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_584()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_585()) return true;", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_266() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_293()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_294()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b6088cfcf3fb9a71310bce352ae1aa3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 628, "methodNumberAfterChange": 606, "signatureBeforeChange": "    final private boolean jj_3R_188()", "signatureAfterChange": "    final private boolean jj_3R_193()", "diff": ["+  final private boolean jj_3R_193() {", "+    if (jj_3R_105()) return true;", "-", "-  final private boolean jj_3R_188() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b653371975d255622354b88ede8a0fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public void testCancelFirstSave() throws BadLocationException, IOException", "signatureAfterChange": "   public void testCancelFirstSave() throws BadLocationException, IOException", "diff": ["-    assertTrue(\"doc should not have been saved\", !saved);", "+    assertTrue(\"doc should not have been saved\", ! saved);", "+    ", "+    _log.log(\"testForceFileOpen completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b6ebbf1dd40d7bfb84dc9d9a5f7c0ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "facb31d52d0108009578d6a1708ac1dfc68b98b8", "commitAfterChange": "417b6d282f87d7da5aa7274e065294c3e7058851", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "      public void junitStarted()", "signatureAfterChange": "      public void junitStarted()", "diff": ["-      //_tabbedPane.setSelectedIndex(JUNIT_TAB);", "+      _tabbedPane.setSelectedIndex(JUNIT_TAB);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b8449eaa09b552e4791960ffe01e293", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "0c20285038247d5808496669253a627b33ccda12", "commitAfterChange": "05fa29784d50c4b6d27e9281d10d687f9f629cc3", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": "   private void _okCommand()", "signatureAfterChange": "   private void _okCommand()", "diff": ["+      File wd = _commandWorkDirSelector.getFileFromField();", "+      // LOG.log(\"_commandWorkDirSelector.getFileField().getText() = \"+_commandWorkDirSelector.getFileField().getText());", "+      // LOG.log(\"ok. wd = \"+wd);", "+      if (!_commandWorkDirSelector.getFileField().getText().equals(\"\")) {", "+        // LOG.log(\"setting!\");", "+        pc.setDir(wd);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b8583c386b05f450b6cbfe71edd01c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 303, "methodNumberAfterChange": 716, "signatureBeforeChange": "    final private boolean jj_3R_102()", "signatureAfterChange": "    final private boolean jj_3R_105()", "diff": ["-  final private boolean jj_3R_102() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_67()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_154()) return true;", "-    }", "+  final private boolean jj_3R_105() {", "+    if (jj_3R_158()) {", "+    if (jj_3R_159()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b939e45425044fe0b982d3466594685", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void testInsertNewlineChainReaction()", "signatureAfterChange": "   public void testInsertNewlineChainReaction()", "diff": ["-    assertEquals(\"#0.0\", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());", "+    assertEquals(\"#0.0\", INSIDE_LINE_COMMENT, model1._getStateAtCurrent());", "-    assertEquals(\"#1.0\", INSIDE_DOUBLE_QUOTE, model1.getStateAtCurrent());", "+    assertEquals(\"#1.0\", INSIDE_DOUBLE_QUOTE, model1._getStateAtCurrent());", "-    assertEquals(\"#3.0\", FREE, model1.getStateAtCurrent());", "+    assertEquals(\"#3.0\", FREE, model1._getStateAtCurrent());", "-    assertEquals(\"#4.0\", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());", "+    assertEquals(\"#4.0\", INSIDE_BLOCK_COMMENT, model1._getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bb0136fc84180eaaafd94616af20ee1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "5607cf775ad2ef70ccd49a101fe31fb06f6903bb", "commitAfterChange": "a139a9e69c4b7dea4b85588b3ff50e2c7a8a902f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          private String _getTestFromName(String name)", "signatureAfterChange": "          private String _getTestFromName(String name)", "diff": ["-      if ((paren > -1) && (paren < name.length())) return name.substring(0, paren);", "+      if (paren > 0) return name.substring(0, paren);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bc77e036e47bbc957a2ff180ab3429e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public int balanceBackward()", "signatureAfterChange": "   public int balanceBackward()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }  ", "+    finally { releaseReadLock(); }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bd9786798a8c29429ced8d8d631e61e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 730, "methodNumberAfterChange": 537, "signatureBeforeChange": "    final private boolean jj_3R_580()", "signatureAfterChange": "    final private boolean jj_3R_433()", "diff": ["+  final private boolean jj_3R_433() {", "+    if (jj_3R_447()) return true;", "+    if (jj_3R_320()) return true;", "-", "-  final private boolean jj_3R_580() {", "-    if (jj_scan_token(GREATER_OR_EQUAL)) return true;", "-    if (jj_3R_520()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bea53d2bc3c3a36245c48bd4f22be14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 707, "methodNumberAfterChange": 712, "signatureBeforeChange": "    final private boolean jj_3_29()", "signatureAfterChange": "    final private boolean jj_3_30()", "diff": ["-", "-  final private boolean jj_3_29() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_97()) return true;", "-    if (jj_3R_475()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3_30() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_482()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c1ae06e4257343e61456a67a6d76b2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 379, "signatureBeforeChange": "    final private boolean jj_3R_318()", "signatureAfterChange": "    final private boolean jj_3R_322()", "diff": ["-", "-  final private boolean jj_3R_318() {", "-    if (jj_scan_token(FOR)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_453()) jj_scanpos = xsp;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    xsp = jj_scanpos;", "-    if (jj_3R_454()) jj_scanpos = xsp;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    xsp = jj_scanpos;", "-    if (jj_3R_455()) jj_scanpos = xsp;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_280()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_322() {", "+    if (jj_scan_token(FOR)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    xsp = jj_scanpos;", "+    if (jj_3R_455()) jj_scanpos = xsp;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    xsp = jj_scanpos;", "+    if (jj_3R_456()) jj_scanpos = xsp;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    xsp = jj_scanpos;", "+    if (jj_3R_457()) jj_scanpos = xsp;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_287()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c1db1e9a926e4375d9cabf80fbbb59b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "997d67839eca4386dbc5f66cebcd8a080dee4cfc", "commitAfterChange": "6321c6a506dc33e42eaf8a2fcb096efc58a17cfa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["+    super(frame, \"Compiler output\");", "-    _frame = frame;", "-    setLayout(new BorderLayout());", "+    _mainPanel.setLayout(new BorderLayout());", "-    add(scroller, BorderLayout.CENTER);", "-    add(compilerPanel, BorderLayout.EAST);", "+    _mainPanel.add(scroller, BorderLayout.CENTER);", "+    _mainPanel.add(compilerPanel, BorderLayout.EAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c20a0a7b1c36dc66445c6d1c44b26a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 609, "methodNumberAfterChange": 609, "signatureBeforeChange": "    final private boolean jj_3R_177()", "signatureAfterChange": "    final private boolean jj_3R_178()", "diff": ["-  final private boolean jj_3R_177() {", "+  final private boolean jj_3R_178() {", "-    if (jj_3R_237()) return true;", "+    if (jj_3R_238()) return true;", "-    if (jj_3R_569()) jj_scanpos = xsp;", "+    if (jj_3R_572()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c240d385ff318c3bdbb6ddb75b30db2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 818, "methodNumberAfterChange": 811, "signatureBeforeChange": "    final private boolean jj_3R_459()", "signatureAfterChange": "    final private boolean jj_3R_481()", "diff": ["+  final private boolean jj_3R_481() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_189()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_438()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_459() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_181()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_387()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c2a9eaaaeac5ebe5b9fa0d7554601b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "e28d42989a089b15d3a01e7dd19b426bc7021c04", "commitAfterChange": "261ca8732921a2a5c58b2777d5419ddfe2c261df", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testNoJUnitErrors() throws Exception", "signatureAfterChange": "   public void testNoJUnitErrors() throws Exception", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c33f04ddb8dd06308a46e6f77f36671", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 450, "methodNumberAfterChange": 697, "signatureBeforeChange": "    final private boolean jj_3R_247()", "signatureAfterChange": "    final private boolean jj_3R_227()", "diff": ["-  final private boolean jj_3R_247() {", "-    if (jj_3R_259()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_292()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_227() {", "+    if (jj_3R_250()) return true;", "+      if (jj_3R_251()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c4104e434a11d3a4c57d5048e1c5d35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/ExecJVM.java", "commitBeforeChange": "682bd0a2b528d852a57206c89ed5bb4a5b484c14", "commitAfterChange": "c8a7a8a9d3d089ab42661ede7d141969c6ed2339", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public static Process runJVM(String mainClass,                                String[] classParams,                                String[] jvmParams) throws IOException", "signatureAfterChange": "   public static Process runJVM(String mainClass,                                String[] classParams,                                String[] jvmParams) throws IOException", "diff": ["-    String[] argArray = args.toArray(new String[0]);", "+    String[] argArray = args.toArray(new String[args.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c5310fe4fc1b50f0a2b42d886d3f5e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavadocDialog.java", "commitBeforeChange": "6d214db24b68a17f17e0cc8f3030a6df6dfa9e3d", "commitAfterChange": "b1335a3b17a414ac9a5047d93a0387148d0d6ac9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public File getDirectory(File start) throws OperationCanceledException", "signatureAfterChange": "   public File getDirectory(File start) throws OperationCanceledException", "diff": ["+      MainFrame.setPopupLoc(_dialog);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c6f7c1079a6373a0cadd0116df609a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/GJv6Compiler.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public CompilerError[] getErrors()", "signatureAfterChange": "     public CompilerError[] getErrors()", "diff": ["-      return  (CompilerError[])_errors.toArray(new CompilerError[0]);", "+      return _errors.toArray(new CompilerError[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c7cbcad6e667d46156aa7a5f39749d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 693, "methodNumberAfterChange": 682, "signatureBeforeChange": "    final private boolean jj_3R_301()", "signatureAfterChange": "    final private boolean jj_3R_303()", "diff": ["-", "-  final private boolean jj_3R_301() {", "+  final private boolean jj_3R_303() {", "-    if (jj_3R_312()) {", "+    if (jj_3R_314()) {", "-    if (jj_3R_313()) return true;", "+    if (jj_3R_315()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c99b81de157dad0d4662127a25c4e1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "dab739e9c0a893840c19d552b534083722093495", "commitAfterChange": "9d7de430d203354a52d3faa0378a92c50af92fb7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testRunJUnitUnsavedButSaveWhenAsked()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testRunJUnitUnsavedButSaveWhenAsked()     throws Exception", "diff": ["-    throws BadLocationException, IOException ", "-  {", "+    throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cbed30bf65692a1e6d8eadcde3227f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 660, "methodNumberAfterChange": 622, "signatureBeforeChange": "    final private boolean jj_3R_528()", "signatureAfterChange": "    final private boolean jj_3R_528()", "diff": ["-  final private boolean jj_3R_528() {", "-    if (jj_scan_token(PUBLIC)) return true;", "+  final private boolean jj_3R_528() {", "+    if (jj_3R_551()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cc02614f2eb2984d14928974755f3a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AboutDialog.java", "commitBeforeChange": "f6644ed8bacb691af161dd2a81bf7ef2eb6ae97e", "commitAfterChange": "8b39e36f223ab70cac21c18457bdd21f1978e8e2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void buildGUI(Container cp)", "signatureAfterChange": "    public void buildGUI(Container cp)", "diff": ["+    addTab(_tabs,\"Eclipse License\",createTextScroller(ECLIPSE_LICENSE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ccc854035f59bcb84b576a718c5afd1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 605, "methodNumberAfterChange": 512, "signatureBeforeChange": "    final private boolean jj_3_35()", "signatureAfterChange": "    final private boolean jj_3_39()", "diff": ["-", "-  final private boolean jj_3_35() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_101()) return true;", "-    if (jj_3R_532()) return true;", "+  final private boolean jj_3_39() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_104()) return true;", "+    if (jj_3R_558()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cdf8764e7804b76e8c78d170b6cdbd3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 547, "methodNumberAfterChange": 502, "signatureBeforeChange": "    final private boolean jj_3R_454()", "signatureAfterChange": "    final private boolean jj_3R_376()", "diff": ["+  final private boolean jj_3R_376() {", "+    if (jj_3R_103()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_389()) jj_scanpos = xsp;", "-", "-  final private boolean jj_3R_454() {", "-    if (jj_3R_101()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_478()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ced91621f5d6e2a7ad0457faea864ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "     public Object visit(ShiftLeftAssignExpression node)", "signatureAfterChange": "   public Class visit(ShiftLeftAssignExpression node)", "diff": ["+   */", "+  public Class visit(ShiftLeftAssignExpression node) {", "+    Class c = visitShiftExpression(node);", "+    ", "+    // The left subexpression must be a variable", "+    if (!node.getLeftExpression().hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"shift.left.type\", node);", "+    }", "+    ", "+    return c;", "+  }", "-     */", "-    public Object visit(ShiftLeftAssignExpression node) {", "-        Class c = visitShiftExpression(node);", "-", "-        // The left subexpression must be a variable", "-        if (!node.getLeftExpression().hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"shift.left.type\", node);", "-        }", "-", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cf5292e4f402664c89ea219cab6fb00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "a1978d98aea3cdbfd80a763b6474ba523e607de6", "commitAfterChange": "ac55d90528653f74034b709e69818ba05a360584", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testDeleteDoc()", "signatureAfterChange": "  \tpublic void testDeleteDoc()", "diff": ["-\t\t\ttry", "-\t\t\t\t{", "-\t\t\t\t\tdefModel.insertString(0,\"a/*bc */\",null);", "-\t\t\t\t\tdefModel.remove(3,3);", "-\t\t\t\t\tassertEquals(\"#0.0\",\"a/**/\",defModel.getText(0,5));", "-\t\t\t\t\tassertEquals(\"#0.1\",3,defModel._currentLocation);", "+\t\t\ttry {", "+\t\t\t\tdefModel.insertString(0,\"a/*bc */\",null);", "+\t\t\t\tdefModel.remove(3,3);", "+\t\t\t\tassertEquals(\"#0.0\",\"a/**/\",defModel.getText(0,5));", "+\t\t\t\tassertEquals(\"#0.1\",3,defModel._currentLocation);", "-\t\t\t\t\tReducedModel rm = defModel._reduced;", "-\t\t\t\t\tassertEquals(\"1.0\",\"*/\",rm._cursor.current().getType());", "-\t\t\t\t\tassertEquals(\"1.1\",0,rm._offset);", "-\t\t\t\t\tassertEquals(\"1.2\",\"/*\",rm._cursor.prevItem().getType());", "-\t\t\t\t\tassertEquals(\"1.3\",ReducedToken.INSIDE_BLOCK_COMMENT,", "-\t\t\t\t\t\t\t\t\t\t\t rm.getStateAtCurrent());", "-\t\t\t\t}", "+\t\t\t\tReducedModel rm = defModel._reduced;", "+\t\t\t\tassertEquals(\"1.0\",\"*/\",rm._cursor.current().getType());", "+\t\t\t\tassertEquals(\"1.1\",0,rm._offset);", "+\t\t\t\tassertEquals(\"1.2\",\"/*\",rm._cursor.prevItem().getType());", "+\t\t\t\tassertEquals(\"1.3\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t\t rm.getStateAtCurrent());", "+\t\t\t}", "-\t\t\t\t\tSystem.out.println(\"EXCEPTION\");", "+\t\t\t\t\tSystem.out.println(e.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d0c2445d7dba067a77f31168303d65a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private void _runJavadoc(ArrayList<String> args, String[] classpath,                            File destDirFile, JavadocListener listener,                            boolean allDocs)", "signatureAfterChange": "   private void _runJavadoc(ArrayList<String> args, String[] classpath,                            File destDirFile, JavadocListener listener,                            boolean allDocs)", "diff": ["-      ", "-      result = _javadoc_1_3((String[]) args.toArray(new String[0]), classpath);", "-      ", "+", "+      result = _javadoc_1_3(args.toArray(new String[0]), classpath);", "+", "-      ", "+", "-    } ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d1fad7dbcecd5d72a125d2cd999584e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyAdvancedVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void testForSimpleThisReferenceDoFirst()", "signatureAfterChange": "      public void testForSimpleThisReferenceDoFirst()", "diff": ["-     SimpleThisReference tl = new SimpleThisReference(JExprParser.NO_SOURCE_INFO);", "+     SimpleThisReference tl = new SimpleThisReference(SourceInfo.NO_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d5c2218100c6fbbe455437703f6d62f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/repl/EclipseInteractionsModel.java", "commitBeforeChange": "896d23e2fc31ecf410625227cad5c5d61f4d6309", "commitAfterChange": "42ea1215d087769992b70c17510a0d200de6d9cd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public String getConsoleInput()", "signatureAfterChange": "   public String getConsoleInput()", "diff": ["+    _document.insertBeforeLastPrompt(\"System.in is not yet supported.\" + _newLine,", "+                                     InteractionsDocument.ERROR_STYLE);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d5c587df2692e8a871d083e99b1557e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testCompilePackageAsField() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompilePackageAsField() throws BadLocationException, IOException, InterruptedException", "diff": ["-    doc.saveFile(new FileSelector(file));", "+    saveFile(doc,new FileSelector(file));", "-    doc.startCompile();", "+    testStartCompile(doc);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d81899e130144f5805a7f875d58a0a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 615, "methodNumberAfterChange": 618, "signatureBeforeChange": "    final private boolean jj_3R_374()", "signatureAfterChange": "    final private boolean jj_3R_375()", "diff": ["+    if (jj_3R_168()) return true;", "+    if (jj_3R_340()) return true;", "-", "-  final private boolean jj_3R_374() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_167()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_339()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d91b648d2e0ba7c61b4a55c7837de90", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 308, "signatureBeforeChange": "    final private boolean jj_3R_371()", "signatureAfterChange": "    final private boolean jj_3R_373()", "diff": ["-", "-  final private boolean jj_3R_371() {", "-    if (jj_3R_100()) return true;", "+  final private boolean jj_3R_373() {", "+    if (jj_3R_101()) return true;", "-    if (jj_3R_379()) jj_scanpos = xsp;", "+    if (jj_3R_381()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5da2b05b7c60b1f943c425a7066bfefc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 269, "methodNumberAfterChange": 236, "signatureBeforeChange": "    final private boolean jj_3_39()", "signatureAfterChange": "    final private boolean jj_3_41()", "diff": ["-  final private boolean jj_3_39() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_39()) return true;", "-    if (jj_3R_175()) return true;", "+", "+  final private boolean jj_3_41() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_36()) return true;", "+    if (jj_3R_172()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5da2baf5a2fe5728cc69fcce1ebaae60", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   @SuppressWarnings(\"unchecked\")   private <T> T newDocumentRegion(OpenDefinitionsDocument odd, int start, int end)", "signatureAfterChange": "   @SuppressWarnings(\"unchecked\")   private <T> T newDocumentRegion(OpenDefinitionsDocument odd, int start, int end)", "diff": ["-    return (T) new DocumentRegion(odd, start, end);", "+    return (T) new MovingDocumentRegion(odd, start, end, odd._getLineStartPos(start), odd._getLineEndPos(end));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dbf8ba0dd1865abee0b27faa223fedf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fee21edb1b15f1499b5409a250cdb90d3f204739", "commitAfterChange": "e100da4da75b9cbdfc04df45bf52679ed811f23a", "methodNumberBeforeChange": 457, "methodNumberAfterChange": 468, "signatureBeforeChange": "   private JMenu _setUpProjectMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpProjectMenu(int mask)", "diff": ["-    projectMenu.add(_cleanAction);", "-    projectMenu.add(_jarProjectAction);", "-    projectMenu.add(_runProjectAction);", "+    projectMenu.add(_runProjectAction);", "+    projectMenu.add(_cleanAction);", "+    projectMenu.add(_autoRefreshAction);", "+    projectMenu.add(_jarProjectAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc0993b8bb8643114bb6daa7ad9cd88", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 553, "methodNumberAfterChange": 581, "signatureBeforeChange": "    final private boolean jj_3R_337()", "signatureAfterChange": "    final private boolean jj_3R_332()", "diff": ["-  final private boolean jj_3R_337() {", "-    if (jj_scan_token(MINUS)) return true;", "-    if (jj_3R_327()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_332() {", "+    if (jj_3R_321()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc1fa950d4d5617164afa0fd17121f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void compileAll()", "signatureAfterChange": "   public void compileAll() throws IOException", "diff": ["-  public void compileAll() { ", "+  public void compileAll() throws IOException { "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc46146cbd1b9fecbfce791230528f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4827c31f832b0b658b5049b701f441bcd4cd2853", "commitAfterChange": "c9a582a01c4727c2040c438bfb469bb6c612160b", "methodNumberBeforeChange": 712, "methodNumberAfterChange": 712, "signatureBeforeChange": "          public void javadocEnded(final boolean success, final File destDir, final boolean allDocs)", "signatureAfterChange": "          public void javadocEnded(final boolean success, final File destDir, final boolean allDocs)", "diff": ["+      // Utilities.showDebug(\"javadocEnded: success=\"+success);", "+        _javadocErrorPanel.getErrorListPane().setJavadocEnded(success);", "+        _javadocErrorPanel.reset();", "-        _javadocErrorPanel.reset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc676d81afc06c72d17e4e4d8d180ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/GlobalContext.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public Method lookupMethod(Node prefix, String mname, Class[] params)     throws NoSuchMethodException", "signatureAfterChange": "   public Method lookupMethod(Node prefix, String mname, Class[] params)     throws NoSuchMethodException", "diff": ["-    Class  c = (Class)NodeProperties.getType(prefix);", "+    Class  c = NodeProperties.getType(prefix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dd2380f5bf5ae8686d86b2866f86eb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "43b808b9e05f3378c0faae83fe4225562adc4c6e", "commitAfterChange": "723910d837b2fcdd9f4127559df4832f71fb62e8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testRealError() throws Exception", "signatureAfterChange": "   public void testRealError() throws Exception", "diff": ["-    TestShouldSucceedListener listener = new TestShouldSucceedListener();", "+    JUnitTestListener listener = new JUnitTestListener();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5de1770838841f3d9926c633ade474c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "eclipse/src/edu/rice/cs/util/text/SWTDocumentAdapter.java", "commitBeforeChange": "bd3609d73f910b773bb009bd9fec801547e38ce7", "commitAfterChange": "ee77a4b190fe991345758d9ffc949583a7709b61", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected boolean _canInsert(VerifyEvent e)", "signatureAfterChange": "     protected boolean _canInsert(VerifyEvent e)", "diff": ["-        _condition.canInsertText(e.start, e.text, null);", "+\t  _condition.canInsertText(e.start); //, e.text, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e0a3c947bc66e83b3e1a56784b085c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "e9864b9d4feda0aaaa7d286763a6fb9bc57982f2", "commitAfterChange": "5657946315ab5ce6a6abd701e9240ac5b6980d60", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public Enumeration<ItemT> getDocuments()", "signatureAfterChange": "   public ArrayList<ItemT> getDocuments()", "diff": ["-  public Enumeration<ItemT> getDocuments() { ", "+  public ArrayList<ItemT> getDocuments() { ", "-      @SuppressWarnings(\"unchecked\") Enumeration<ItemT> result = (Enumeration<ItemT>) _model.elements();", "-      return result;  ", "+      @SuppressWarnings(\"unchecked\") Enumeration<ItemT> items = (Enumeration<ItemT>) _model.elements();", "+      ArrayList<ItemT> result = new ArrayList<ItemT>(_model.size());", "+      while (items.hasMoreElements()) result.add(items.nextElement());", "+      return result;                               "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e125a5a4a1e367052ef460a9c8db4d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/Configuration.java", "commitBeforeChange": "7748aa0d84a52f8872bfaa33a4544c287e2cb350", "commitAfterChange": "32a6a91e5456ec4c66a7ab498cfc3e6e0c6e281e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public String[] getExtraClasspath()", "signatureAfterChange": "   public String[] getExtraClasspath()", "diff": ["-    String path = (String) _properties.get(EXTRA_CLASSPATH_KEY);", "+    String path = _properties.getProperty(EXTRA_CLASSPATH_KEY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e271ad917ed0e86e7e1e0301110237e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 346, "signatureBeforeChange": "    final private boolean jj_3R_269()", "signatureAfterChange": "    final private boolean jj_3R_279()", "diff": ["-", "-  final private boolean jj_3R_269() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(30)) jj_scanpos = xsp;", "-    if (jj_3R_75()) return true;", "-    if (jj_3R_395()) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_445()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_279() {", "+    if (jj_scan_token(30)) jj_scanpos = xsp;", "+    if (jj_3R_78()) return true;", "+    if (jj_3R_408()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_460()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e3a6ae7bf926b58629e193e7bc027c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "dfd810274f578220ac2bc25dd7ac216d6cba7d82", "commitAfterChange": "124ee663125910ebb6f94bc3c28dc900fe2c43b7", "methodNumberBeforeChange": 223, "methodNumberAfterChange": 223, "signatureBeforeChange": "      public void interactionEnded()", "signatureAfterChange": "      public void interactionEnded()", "diff": ["+      _runAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e3ed5030a19c0daa92d7d0093ab3e87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 173, "signatureBeforeChange": "   public void configNewProject() throws IOException", "signatureAfterChange": "   public void configNewProject() throws IOException", "diff": ["-    List<File> exCp = new LinkedList<File>();", "-    ", "+//    List<File> exCp = new LinkedList<File>();  // not used", "+     "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e4286bb8e2fdf42919d56ee69411e4c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "d4f8b5e1e15fc2c34ba6969d4ef7bdb04cc8916b", "commitAfterChange": "bd0c5f6fb57379a8699a4cf01148b0c907e9220d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "    private String _createIdentifier()", "signatureAfterChange": "   private String _createIdentifier()", "diff": ["+   */", "-      return file.getName();", "+      String id = \"//127.0.0.1:\" + _rmiPort + \"/\" + file.getName();", "+      //DrJava.consoleOut().println(\"Identifier: \" + id);", "+      return id;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e4359697b613845907dc8608b36c044", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void fullSetup()", "signatureAfterChange": "   private void fullSetup()", "diff": ["-    { new CompilerError(files[0], \"Test error with File\", false),", "+    { new CompilerError(files[0], \"Test error with File (no line)\", false),", "-      new CompilerError(files[2], \"Test warning with File\", true),", "-      new CompilerError(files[4], \"Test warning with File\", true),", "+      new CompilerError(files[2], \"Test warning with File (no line)\", true),", "+      new CompilerError(files[4], \"Test warning with File (no line)\", true),", "-      new CompilerError(files[1], \"Test warning with File\", true),", "-      new CompilerError(files[1], \"Test error with File\", false),", "-      new CompilerError(files[2], \"Test error with File\", false),", "-      new CompilerError(files[3], \"Test error with File\", false),", "+      new CompilerError(files[1], \"Test warning with File (no line)\", true),", "+      new CompilerError(files[1], \"Test error with File (no line)\", false),", "+      new CompilerError(files[2], \"Test error with File (no line)\", false),", "+      new CompilerError(files[3], \"Test error with File (no line)\", false),", "-      new CompilerError(files[4], \"Test error with File\", false),", "+      new CompilerError(files[4], \"Test error with File (no line)\", false),", "-    ", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e462279e5f3a8c8263fd7f4e88a58c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandler.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void run()", "signatureAfterChange": "      public void run()", "diff": ["-      } catch (InterruptedException exc) {", "+      }", "+      catch (InterruptedException exc) {", "-      } catch (VMDisconnectedException discExc) {", "+      }", "+      catch (VMDisconnectedException discExc) {", "+      }", "+      catch (Exception ex) {", "+        _manager.printMessage(\"An unexpected exception occurred:\\n\" + ex);", "+        _manager.printMessage(\"The debugger may have become unstable as a result.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e4990b300eeae0dfb5f881bf4cd5fd1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public synchronized void shutdown()", "signatureAfterChange": "   public synchronized void shutdown()", "diff": ["-    ", "+", "-    ", "+", "-      ((DefaultInteractionsModel)_model.getInteractionsModel()).setToDefaultInterpreter();", "+      _model.getInteractionsModel().setToDefaultInterpreter();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e52b99efdce98f616e5bd3f0f858482", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "29c3bda128fd5f9135d2acdf59b35d53b6387d06", "commitAfterChange": "555a52426e0b7a46bbe7591ec5d5d45d18885291", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    private static void createAndShowGUI(final String[] args)", "signatureAfterChange": "    private static void createAndShowGUI(final String[] args)", "diff": ["-       net.java.plaf.LookAndFeelPatchManager.initialize();  ", "+//       net.java.plaf.LookAndFeelPatchManager.initialize();  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e5908d2ddecdf1431b1d6e58df412c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringView.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   ColoringView(Element elem)", "signatureAfterChange": "   ColoringView(Element elem)", "diff": ["-    // Might be a PlainDocument (when DefPane is first constructed).", "-    //   See comments for DefinitionsEditorKit.createNewDocument() for details.", "-    Document doc = getDocument();", "-    if (doc instanceof DefinitionsDocument) {", "-      _doc = (DefinitionsDocument)doc;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e599e111f6264cb4841b033ab5eec7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c30106317498d02d92fbbd0cc4ce9a990565ac26", "commitAfterChange": "c6eef485d37fbeefd4688bcaf23dcc49c934da14", "methodNumberBeforeChange": 484, "methodNumberAfterChange": 484, "signatureBeforeChange": "          public void slaveJVMUsed()", "signatureAfterChange": "          public void slaveJVMUsed()", "diff": ["-    public void slaveJVMUsed() { _resetInteractionsAction.setEnabled(true); }", "+    public void slaveJVMUsed() { /* _resetInteractionsAction.setEnabled(true);  */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e70f530428dd4898f4f7d100ce3353a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "3f81b37285813b52f5c285ae3a68ee4a21753a7e", "commitAfterChange": "844a54657c2f878fc1ea01131f59375a436ab7c8", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "      public void assertSaveAllBeforeProceedingCount(int i)", "signatureAfterChange": "      public void assertSaveBeforeCompileCount(int i)", "diff": ["-    public void assertSaveAllBeforeProceedingCount(int i) {", "-      assertEquals(\"number of times saveAllBeforeProceeding fired\",", "+    public void assertSaveBeforeCompileCount(int i) {", "+      assertEquals(\"number of times saveBeforeCompile fired\",", "-                   saveAllBeforeProceedingCount);", "+                   saveBeforeCompileCount);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e8074989b57fe2f31c82648ee44fec6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public Object visit(MethodDeclaration node)", "signatureAfterChange": "   public Class visit(MethodDeclaration node)", "diff": ["-     */", "-    public Object visit(MethodDeclaration node) {", "-\tcontext.defineFunction(node);", "-", "-\tnode.setProperty(NodeProperties.TYPE, node.getReturnType().acceptVisitor(this));", "-\tnode.setProperty(NodeProperties.FUNCTIONS, context.getFunctions());", "-\tnode.setProperty(NodeProperties.IMPORTATION_MANAGER,", "-\t\t\t context.getImportationManager().clone());", "-", "-\tcontext.enterScope();", "-\tcheckList(node.getParameters());", "-\tcontext.leaveScope();", "-\treturn null;", "-    }", "+   */", "+  public Class visit(MethodDeclaration node) {", "+    context.defineFunction(node);", "+    ", "+    node.setProperty(NodeProperties.TYPE, node.getReturnType().acceptVisitor(this));", "+    node.setProperty(NodeProperties.FUNCTIONS, context.getFunctions());", "+    node.setProperty(NodeProperties.IMPORTATION_MANAGER,", "+                     context.getImportationManager().clone());", "+    ", "+    context.enterScope();", "+    checkList(node.getParameters());", "+    context.leaveScope();", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e89fc418641367ae055891ad26b33a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public synchronized void testBreakpoints() throws Exception", "signatureAfterChange": "   public synchronized void testBreakpoints() throws Exception", "diff": ["-    debugListener.assertBreakpointSetCount(1);", "+    debugListener.assertRegionAddedCount(1);", "-    debugListener.assertBreakpointSetCount(2);", "+    debugListener.assertRegionAddedCount(2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ead592a2a98e53bb1eae39eb31decfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "df2b79c4755a48b6d68cea0053ee5b504fa8b5d0", "commitAfterChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 120, "signatureBeforeChange": "   void initOpenJavadocDialog()", "signatureAfterChange": "   void initOpenJavadocDialog()", "diff": ["-                                                   new JavaAPIListEntry(\"dummy\", \"dummy\", null)) {", "+                                                   new JavaAPIListEntry(\"dummyJavadoc\", \"dummyJavadoc\", null)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eb30f7d869bdad4e1e356d13441bd0d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "51e8ea430c01509f87d3823d7a75f90d00225716", "commitAfterChange": "5425ae0e836a7ee6f00ac774f834187d377d72ad", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      public void mousePressed(MouseEvent e)", "signatureAfterChange": "      public void mousePressed(MouseEvent e)", "diff": ["-", "-      //Don't show the \"Toggle Breakpoint\" option in the contextual menu, if the JMenuItem is null.", "-      if (_toggleBreakpointMenuItem != null) {", "-        _toggleBreakpointMenuItem.setEnabled(_mainFrame.inDebugMode());", "-      }", "-      //Don't show the \"Add Watch\" option in the contextual menu, if the JMenuItem is null.", "-      //if (_addWatchMenuItem != null) {", "-      //  _addWatchMenuItem.setEnabled(_mainFrame.inDebugMode());", "-      //}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ebe5df401fb7896c4740ede5baed597", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testOpenMultipleFilesError()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testOpenMultipleFilesError()", "diff": ["-  public void testOpenMultipleFilesError()", "-    throws BadLocationException, IOException", "-  {", "+  public void testOpenMultipleFilesError() {", "-        public File getFile() throws OperationCanceledException {", "+        public File getFile() {", "-        public File[] getFiles() throws OperationCanceledException {", "+        public File[] getFiles() {", "-        public File getFile() throws OperationCanceledException {", "+        public File getFile() {", "-        public File[] getFiles() throws OperationCanceledException {", "+        public File[] getFiles() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5edb90a8f69228262e405ab5694678a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListSortNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void addDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "signatureAfterChange": "   public void addDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "diff": ["-    this.setListData(_docs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ede9b48481f6ae4b64b3e5f6281e2c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorAbsRelFileOptionComponent.java", "commitBeforeChange": "893c07e82b5df8a5ee457745ae613e9f4f3395b7", "commitAfterChange": "e7565df68be50967f0383d34df0b493ae42a4e83", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public VectorAbsRelFileOptionComponent (VectorOption<AbsRelFile> opt, String text, SwingFrame parent)", "signatureAfterChange": "      public VectorAbsRelFileOptionComponent (VectorOption<AbsRelFile> opt, String text, SwingFrame parent)", "diff": ["-    this(opt, text, parent, false);", "+    this(opt, text, parent, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f100c569e01d8c4bc659e93b1224c57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "364d0b19a9e3896eddcd174b6cb5aa4a53e74f1f", "commitAfterChange": "65d59a6eb5c83a25b9e6bfdf698fd61ca6d2f695", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void reset()", "signatureAfterChange": "     public void resetToCurrent()", "diff": ["-    public void reset() {", "-      _panel.reset();", "+    public void resetToCurrent() {", "+      _panel.resetToCurrent();", "-        ((PanelTreeNode)childNodes.nextElement()).reset();", "+        ((PanelTreeNode)childNodes.nextElement()).resetToCurrent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f22edadbdcb3174f102356d664c5a07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "14164b6a15fd606e897810fd89f2e7edec0280c4", "commitAfterChange": "52c187d5d51895f0b58a56680e35117f80ff45ef", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 32, "signatureBeforeChange": "   private FindResult      _findNextInDocSegment(OpenDefinitionsDocument doc, int start, int len, boolean wrapped, boolean allWrapped)", "signatureAfterChange": "   private FindResult      _findNextInDocSegment(OpenDefinitionsDocument doc, int start, int len, boolean wrapped, boolean allWrapped)", "diff": ["-    doc.readLock();", "-    finally { doc.readUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f2a791af4434eea4f3f74aa3a53b9e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      public void testTryStatementWithCatchBlock() throws ParseException", "signatureAfterChange": "      public void testTryStatementWithCatchBlock() throws ParseException", "diff": ["-    catchSt.add(new CatchStatement(new FormalParameter(false, new ReferenceTypeName(\"IOException\"), \"ioe\"), new BlockStatement(stmts2), SourceInfo.NONE));", "+    catchSt.add(new CatchStatement(new FormalParameter(ModifierSet.make(), new ReferenceTypeName(\"IOException\"), \"ioe\"),", "+                                   new BlockStatement(stmts2), SourceInfo.NONE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f2d5b7015e999c4964b461c63cfce3c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 575, "methodNumberAfterChange": 576, "signatureBeforeChange": "    final private boolean jj_3R_402()", "signatureAfterChange": "    final private boolean jj_3R_406()", "diff": ["-", "-  final private boolean jj_3R_402() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_424()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_425()) jj_scanpos = xsp;", "-    if (jj_scan_token(RPAREN)) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_406() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_428()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_429()) jj_scanpos = xsp;", "+    if (jj_scan_token(RPAREN)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f37750d45ce1bc28b0ee3d3b5e5048c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 347, "methodNumberAfterChange": 345, "signatureBeforeChange": "    final private boolean jj_3R_346()", "signatureAfterChange": "    final private boolean jj_3R_347()", "diff": ["+", "+  final private boolean jj_3R_347() {", "+    if (jj_3R_363()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_374()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_346() {", "-    if (jj_3R_362()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_373()) { jj_scanpos = xsp; break; }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f3d1e5e6057e1e0ad9961e0cd6a2771", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 382, "methodNumberAfterChange": 385, "signatureBeforeChange": "    final private boolean jj_3R_499()", "signatureAfterChange": "    final private boolean jj_3R_501()", "diff": ["-  final private boolean jj_3R_499() {", "-    if (jj_3R_286()) return true;", "+  final private boolean jj_3R_501() {", "+    if (jj_3R_287()) return true;", "-      if (jj_3R_502()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_504()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f4c751d080a3f6551c9762d5e98b3db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/PopupConsole.java", "commitBeforeChange": "297c6f7de2e895bf8eb6c301cb70d6927f0b7243", "commitAfterChange": "bd3609d73f910b773bb009bd9fec801547e38ce7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   protected String silentInput()", "signatureAfterChange": "   private String silentInput()", "diff": ["-  protected String silentInput() {", "+  private String silentInput() {", "-    final StringBuffer input = new StringBuffer();", "+    monitorNotified = false;", "+    final StringBuffer input = new StringBuffer();  /* shared variable guarded by commandLock */ ", "-          /* Runs inside synchronized(commandLock) */", "+          /* This Runnable only runs inside synchronized(commandLock) */", "-          synchronized (monitor) { monitor.notify(); }  // wake-up the enclosing thread waiting on monitor", "+          synchronized (monitor) { ", "+            monitorNotified = true;", "+            monitor.notify();   // wake-up the enclosing thread waiting on monitor", "+          }", "-      try { while (_interruptCommand != null) monitor.wait(); }   // wait until input is finished", "+      try { while (! monitorNotified) monitor.wait(); }   // wait until input is finished"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f51a46f6de50f360442a1c085ef21d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/UncaughtExceptionWindow.java", "commitBeforeChange": "1c71f2ec50e1716eff94d3660975e86f39311a17", "commitAfterChange": "314d22ac0d7c366fb95e9616b11f4e08fcd207a1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public UncaughtExceptionWindow(Throwable exception)", "signatureAfterChange": "      public UncaughtExceptionWindow(Throwable exception)", "diff": ["-    _okPanel.add(_okButton, BorderLayout.NORTH);", "+    _okPanel.add(_okButton, BorderLayout.SOUTH);", "+    this.setTitle(\"Uncaught Exception\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f7dbe9517998dc6c58e95f8679c19af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testIndentShrinkTabAtMiddle()       throws BadLocationException, OperationCanceledException", "signatureAfterChange": "   public void testIndentShrinkTabAtMiddle()       throws BadLocationException, OperationCanceledException", "diff": ["-    openDoc.syncCurrentLocationWithDefinitions(FOO_EX_1.length() + 5);", "-    int loc = openDoc.getCurrentDefinitionsLocation();", "+    openDoc.setCurrentLocation(FOO_EX_1.length() + 5);", "+    int loc = openDoc.getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f8d0e4fd1342c841ac7b66c8e997539", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 516, "methodNumberAfterChange": 512, "signatureBeforeChange": "    final private boolean jj_3R_254()", "signatureAfterChange": "    final private boolean jj_3R_264()", "diff": ["-", "-  final private boolean jj_3R_254() {", "-    if (jj_scan_token(MINUS_ASSIGN)) return true;", "-    if (jj_3R_94()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_264() {", "+    if (jj_scan_token(MINUS_ASSIGN)) return true;", "+    if (jj_3R_97()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fa39461070a08d529919a722abc6769", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/VariableDeclaration.java", "commitBeforeChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "commitAfterChange": "9ce155a1f3e34352032d821032cb2dc70024460f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public VariableDeclaration(boolean fin, TypeName type, String name, Expression init,                              String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public VariableDeclaration(boolean fin, TypeName type, String name, Expression init,                              String fn, int bl, int bc, int el, int ec)", "diff": ["-    if (type == null) throw new IllegalArgumentException(\"type == null\");", "+    // TODO: restore this check? -- we're allowing an inferred type for now", "+    //if (type == null) throw new IllegalArgumentException(\"type == null\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fa579220eed5d97cb7eeb1914df7b7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "          public void testClassFile2SymbolData()", "signatureAfterChange": "          public void testClassFile2SymbolData()", "diff": ["-                   _llv.getSymbolData(\"java.lang.String\", JExprParser.NO_SOURCE_INFO).getPackage());", "+                   _llv.getSymbolData(\"java.lang.String\", SourceInfo.NO_INFO).getPackage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fc8be5105d62a0de28fb8729ee3ea66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "7228cea597c372946661a7e1f1db20fd24b9dee1", "commitAfterChange": "8bb2649bd077e2bf6ccaf611ff49da8ad083e7b7", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean isExpanded,                                                   boolean leaf, int row, boolean hasFocus)", "signatureAfterChange": "     public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean isExpanded,                                                   boolean leaf, int row, boolean hasFocus)", "diff": ["-     */", "+      */", "-      super.getTreeCellRendererComponent(tree, value, sel, isExpanded, leaf, row, hasFocus);", "+      // changing last argument from hasFocus to false appears to fix a focus bug when selecting a new document", "+      super.getTreeCellRendererComponent(tree, value, sel, isExpanded, leaf, row, false);  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ffa9b9c668b3a0fb62a377209818b7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "0bbc4205cb6cdac938c33646446cffe67a254d86", "commitAfterChange": "32c1a96bda59745efd4d13dbac97b7a11f8d7d24", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testMultilineCommentOrUncommentAfterScroll() throws BadLocationException", "signatureAfterChange": "   public void testMultilineCommentOrUncommentAfterScroll() throws BadLocationException", "diff": ["+    // Need to do this here since the commentLines action in MainFrame usually takes care of this.  ", "+    // I can't run the test here because I'm not sure how to select the text so that we can comment it.", "+    pane.endCompoundEdit();", "+//    pane.endCompoundEdit();", "-", "+    ", "+    // Need to do this here since the commentLines action in MainFrame usually takes care of this.  ", "+    // I can't simulate a keystroke here because I'm not sure how to select the text so that we can comment it.", "+    pane.endCompoundEdit();    ", "+//    pane.endCompoundEdit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6013e593e3d55020a41c431c3f83562b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartStmtOfBracePlus.java", "commitBeforeChange": "41e184b1aabfa466589eae2bb1a9101d9be4de38", "commitAfterChange": "57a37f35b71c66341cae7312e856c3bb4a0b6fcf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-  public void indentLine(DefinitionsDocument doc)", "-  {", "+  public void indentLine(DefinitionsDocument doc){", "+    super.indentLine(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60280b2a832ada34e85046057d312298", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "4294d4cc553e93457f1d00d126d1e59656e5953f", "commitAfterChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp()", "signatureAfterChange": "   public void setUp()", "diff": ["+    _globalContext.define(\"X\", Integer.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60433d5afae47e5ddbdc1ba7bffbcd2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 608, "methodNumberAfterChange": 447, "signatureBeforeChange": "    final private boolean jj_3R_156()", "signatureAfterChange": "    final private boolean jj_3R_150()", "diff": ["+", "+  final private boolean jj_3R_150() {", "+    if (jj_3R_189()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_225()) jj_scanpos = xsp;", "+    return false;", "+  }", "-  final private boolean jj_3R_156() {", "-    if (jj_3R_195()) return true;", "-    xsp = jj_scanpos;", "-    if (jj_3R_250()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6057e497bea1b06a47272cb9cdd764b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "2e5b18a99b7dadcdbc9d721e596e386200a1c0d7", "commitAfterChange": "5b3114a7ac9ae00c529dfb2d67c43e022bde4173", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testSwitchActiveInterpreter() throws InterruptedException", "signatureAfterChange": "   public void testSwitchActiveInterpreter() throws InterruptedException", "diff": ["+    ", "+    // test syntax error handling", "+    synchronized(_jvm) {", "+      _jvm.interpret(\"x+\");", "+      _jvm.wait();", "+      assertTrue(\"syntax error was reported\",", "+                 ! _jvm.syntaxErrorMsgBuf.equals(\"\") );", "+    }", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "606c06fbdf357e2f72d6c7f8ecd2fc51", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public boolean onMatch()", "signatureAfterChange": "   public boolean onMatch()", "diff": ["-    _doc.readLock();", "+    _doc.acquireReadLock();", "-    finally { _doc.readUnlock(); }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6087b3cfe31ce12fff5cc504f2e5f6ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 825, "methodNumberAfterChange": 798, "signatureBeforeChange": "    final private boolean jj_3R_92()", "signatureAfterChange": "    final private boolean jj_3R_94()", "diff": ["+", "+  final private boolean jj_3R_94() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(32)) jj_scanpos = xsp;", "+    if (jj_3R_85()) return true;", "+    if (jj_3R_138()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_92() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(32)) jj_scanpos = xsp;", "-    if (jj_3R_83()) return true;", "-    if (jj_3R_148()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "608d215f9fd56241b62502338080263d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TigerTest.java", "commitBeforeChange": "9e3824633ee746290537e9b5e107ba2db1504674", "commitAfterChange": "31da1983d1819399d97822faa171f51ddfde661b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testStaticImportOfMethods()", "signatureAfterChange": "   public void testStaticImportOfMethods()", "diff": ["-    catch(Error e) {", "+    catch(InterpreterException e) {", "-    } catch(Error e) {", "+    } catch(InterpreterException e) {", "-    catch(RuntimeException e) {", "+    catch(InterpreterException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "609118c789ffb5ba30b46de0f74d4168", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b1a32460e7865e87ff1cef41f79110513af4e989", "commitAfterChange": "c76fe963c6a762c896b91a64faa06b83223b5217", "methodNumberBeforeChange": 398, "methodNumberAfterChange": 398, "signatureBeforeChange": "   private void _openProjectHelper(File projectFile)", "signatureAfterChange": "   private void _openProjectHelper(File projectFile)", "diff": ["-      _model.addToBrowserHistory();", "+      addToBrowserHistory();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "609b3286001331c169b474aa501b1b8e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/DebugContextTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testWatchLocalVarsFromInnerClass() throws Exception", "signatureAfterChange": "   public void XXXtestWatchLocalVarsFromInnerClass() throws Exception", "diff": ["-  public void testWatchLocalVarsFromInnerClass() throws Exception {", "+  public void XXXtestWatchLocalVarsFromInnerClass() throws Exception {", "+    debug.logStart();", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60a4183fe8a1f7f507160667a309de88", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BraceInfoTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void _lineEnclosingBraceTestHelper(int location, String msg, int expDist, String expBraceType)", "signatureAfterChange": "      private void _lineEnclosingBraceTestHelper(int location, String msg, int expDist, String expBraceType)", "diff": ["-    _document.acquireReadLock();", "-    try {", "-      _document.setCurrentLocation(location);", "-      //_reduced = _document.getReduced();", "-      BraceInfo info = _document._getLineEnclosingBrace();", "-      assertEquals(msg + \": distance\", expDist, info.distance());", "-      assertEquals(msg + \": braceType\", expBraceType, info.braceType());", "-    }", "-    finally { _document.releaseReadLock(); }", "+//    _document.acquireReadLock();", "+//    try {", "+    _document.setCurrentLocation(location);", "+    //_reduced = _document.getReduced();", "+    BraceInfo info = _document._getLineEnclosingBrace();", "+    assertEquals(msg + \": distance\", expDist, info.distance());", "+    assertEquals(msg + \": braceType\", expBraceType, info.braceType());", "+//    }", "+//    finally { _document.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60ada4932e24638a01e67d156ded7286", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentAdapter.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public String getDocText(int offs, int len) throws DocumentAdapterException", "signatureAfterChange": "   public String getDocText(int offs, int len)", "diff": ["-  public String getDocText(int offs, int len) throws DocumentAdapterException {", "-    try {", "-      return getText(offs, len);  // locking is unnecessary because getText is already thread-safe", "-    }", "-    catch (BadLocationException e) {", "-      throw new DocumentAdapterException(e);", "-    }", "+  public String getDocText(int offs, int len) {", "+    try { return getText(offs, len); }  // locking is unnecessary because getText is already thread-safe", "+    catch (BadLocationException e) { throw new DocumentAdapterException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60d9d6657701aac3c80d6f5ce3c26f36", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "cbb9f04386fdbcd6c82a6f2a5ae6b635359499fb", "commitAfterChange": "e77b9389e0feb3169a20412f8892f630db108f0e", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public boolean toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean isEnabled)      throws DebugException", "signatureAfterChange": "   public boolean toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean isEnabled)      throws DebugException", "diff": ["-        assert EventQueue.isDispatchThread();", "+    assert EventQueue.isDispatchThread();", "-    if (offset < 0 || offset > doc.getLength()) return false;", "+    if (offset < 0) return false;", "-    if (breakpoint == null) {", "-      if (offset == doc._getLineEndPos(offset)) {", "+    if (breakpoint == null) {  // no breakpoint on this line", "+      if (offset == doc._getLineEndPos(offset)) {  // line is empty", "-      else {", "+      else {  // set breakpoint", "-    else {", "+    else { // breakpoint already set on this line"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60e22078b6135241cf4814fc78d330c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 635, "methodNumberAfterChange": 613, "signatureBeforeChange": "    final private boolean jj_3R_102()", "signatureAfterChange": "    final private boolean jj_3R_105()", "diff": ["+", "+  final private boolean jj_3R_105() {", "+    if (jj_3R_156()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_213()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_102() {", "-    if (jj_3R_152()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_205()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60e5816d7a8087869347a64e6d0f848b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 542, "methodNumberAfterChange": 547, "signatureBeforeChange": "    final private boolean jj_3R_444()", "signatureAfterChange": "    final private boolean jj_3R_448()", "diff": ["-", "-  final private boolean jj_3R_444() {", "-    if (jj_scan_token(32)) jj_scanpos = xsp;", "-    if (jj_3R_164()) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_457()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_448() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(32)) jj_scanpos = xsp;", "+    if (jj_3R_166()) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_461()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60e8d7acf472655eec791ecd87c2ecd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 591, "methodNumberAfterChange": 599, "signatureBeforeChange": "    final private boolean jj_3R_329()", "signatureAfterChange": "    final private boolean jj_3R_318()", "diff": ["-  final private boolean jj_3R_329() {", "-    if (jj_3R_339()) return true;", "-      if (jj_3R_352()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_318() {", "+    if (jj_3R_336()) return true;", "+      if (jj_3R_351()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60e94f8c4319e46094edf28dc5ae5909", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "fe86fb3e9d5f6b77a0aff2e2b95736069832eb4a", "commitAfterChange": "094b2c0ac07bfea53ecb65f7d561070a7519352a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t   public void remove(int offset, int len) throws BadLocationException", "signatureAfterChange": " \t   public void remove(int offset, int len) throws BadLocationException", "diff": ["-\t\t_modifiedHighlights = true;", "+\t\t_modifiedHighlights = _reduced.hasHighlightChanged();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60fddcb43f5097919be197a40cd5bb75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "52a1b40a342403f03cb2b7e4cdf8d8b28874a356", "commitAfterChange": "202fe65b6d19b63d8f3941f6eff8e18c68fa7232", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void findAll(String searchStr, final boolean searchAll, final boolean matchCase,                       final boolean wholeWord, final boolean noComments, final boolean noTestCases,                       final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm,                       final FindResultsPanel panel)", "signatureAfterChange": "   public void findAll(String searchStr, final boolean searchAll, final boolean searchSelectedText, final boolean matchCase,                       final boolean wholeWord, final boolean noComments, final boolean noTestCases,                       final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm, MovingDocumentRegion region,                       final FindResultsPanel panel)", "diff": ["-  public void findAll(String searchStr, final boolean searchAll, final boolean matchCase,", "+  public void findAll(String searchStr, final boolean searchAll, final boolean searchSelectedText, final boolean matchCase,", "-                      final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm,", "+                      final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm, MovingDocumentRegion region,", "+    boolean oldSearchSelectedText = _machine.getSearchSelectedText();", "+    _machine.setSearchSelectedText(searchSelectedText);", "-      });", "+      }, region.getStartOffset(), region.getEndOffset());", "+      _machine.setSearchSelectedText(oldSearchSelectedText);", "-        int lineEnd = doc._getLineEndPos(end);                                          ", "+        int lineEnd = doc._getLineEndPos(end);", "-        rm.addRegion(new MovingDocumentRegion(doc, start, end, lineStart, lineEnd));", "+        rm.addRegion(new MovingDocumentRegion(doc, start, end, lineStart, lineEnd));                       "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "610130f2993c7f5698dbedc0d089746e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 285, "methodNumberAfterChange": 802, "signatureBeforeChange": "    final private boolean jj_3R_452()", "signatureAfterChange": "    final private boolean jj_3R_494()", "diff": ["-", "-  final private boolean jj_3R_452() {", "-    if (jj_scan_token(INCREMENT)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_494() {", "+    if (jj_3R_496()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_502()) jj_scanpos = xsp;", "+    if (jj_3R_248()) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    if (jj_3R_498()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_503()) { jj_scanpos = xsp; break; }", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_3R_504()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_505()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_506()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "611c38e3efaa5beebf551946a9fe311a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "34921a1a3d031bdf7caa876f32f38a6fdc9dedda", "commitAfterChange": "fca5fcebd9a0a23f563d800e635b0c2ebad1969e", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 156, "signatureBeforeChange": "   public void openFolder(DirectorySelector openSelector)", "signatureAfterChange": "   public void openFolder(DirectorySelector openSelector)", "diff": ["+      System.err.println(\"finding files\");", "+      System.err.println(\"sorting files\");", "+        System.err.println(\"opening files\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "611c7fca6a751efaf2bbcb1efe65287e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": "          public void testAddSymbolData()", "signatureAfterChange": "          public void testAddSymbolData()", "diff": ["-        new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"Awesome\"),", "+        new ClassDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"Awesome\"),", "-                     new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.lang.Object\", new Type[0]), ", "+                     new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), ", "-                     new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                     new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61586afea9a4bd472756afb29488f353", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "   public Class visit(PostIncrement node)", "signatureAfterChange": "   public Class visit(PostIncrement node)", "diff": ["-    Class c  = (Class)exp.acceptVisitor(this);", "-    ", "+    Class c  = exp.acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61652911a52e0260b42ed1e757e77459", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/SlaveJVMRunner.java", "commitBeforeChange": "2f90ba6e59e411b316824d2f23ed366de171632d", "commitAfterChange": "a8ca493ddf5cf029f49ecf9b980d8fcf5bf2653b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static void main(String[] args)", "signatureAfterChange": "   public static void main(String[] args)", "diff": ["-        SlaveRemote slave = (SlaveRemote) slaveClass.newInstance();", "+        SlaveRemote slave = _getInstance(slaveClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61655c6bc7229138a8842a6f739535c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "eccc0f4ca399d1b769babc36cdb28f136cc1e3a4", "commitAfterChange": "cd4dd52c44e1088dca0dd0286c0899f125ae070a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public synchronized void startup() throws DebugException", "signatureAfterChange": "      public synchronized void startup() throws DebugException", "diff": ["+      ThreadDeathRequest tdr = _eventManager.createThreadDeathRequest();", "+      tdr.setSuspendPolicy(EventRequest.SUSPEND_EVENT_THREAD);", "+      tdr.enable();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6169e3e7b80457d6035d66a13124c681", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "53d061333fe3393f6569c1f553912f1a449482ad", "commitAfterChange": "12c8304e14a6d9eafe2f7093583d8040569150c1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testInteractionsVariableWithLowercaseClassName() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsVariableWithLowercaseClassName() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "diff": ["-//    _log.log(\"testInteractionsVariableWithLowercaseClassName() completed\");", "+    _log.log(\"testInteractionsVariableWithLowercaseClassName() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "618ece55b619fa29c86faf9994af289c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 405, "methodNumberAfterChange": 381, "signatureBeforeChange": "    final private boolean jj_3R_346()", "signatureAfterChange": "    final private boolean jj_3R_348()", "diff": ["-", "-  final private boolean jj_3R_346() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_353()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_354()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_348() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_355()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_356()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61b13ccf79007b31707212b5549dc699", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public int _findPrevCharPos(final int pos, final char[] whitespace) throws BadLocationException", "signatureAfterChange": "   public int _findPrevCharPos(final int pos, final char[] whitespace) throws BadLocationException", "diff": ["-    // assert EventQueue.isDispatchThread();", "+    // assert isReadLocked();", "-//    synchronized(_reduced) {", "+    final int oldPos = _currentLocation;", "+    // Move reduced model to location reducedPpos", "+    setCurrentLocation(reducedPos);", "+    ", "+    // Walk backward from specified position", "+    ", "+    while (i >= 0) { ", "+      /* Invariant: reduced model points to reducedPos, 0 <= i < reducedPos <= pos, ", "+       * text[i+1:pos-1] contains invalid chars */", "-      final int oldPos = _currentLocation;", "-      // Move reduced model to location reducedPpos", "-      _setCurrentLocation(reducedPos);", "-      ", "-      // Walk backward from specified position", "-      ", "-      while (i >= 0) { ", "-        /* Invariant: reduced model points to reducedPos, 0 <= i < reducedPos <= pos, ", "-         * text[i+1:pos-1] contains invalid chars */", "-        ", "-        if (_match(text.charAt(i), whitespace)) {", "-          // ith char is whitespace", "-          i--;", "-          continue;", "-        }", "-        ", "-        // Found a non-whitespace char;  move reduced model to location i", "-        _setCurrentLocation(i);", "-        reducedPos = i;                  // reduced model points to i == reducedPos", "-        ", "-        // Check if matching char is within a comment (not including opening two characters)", "-        if ((_reduced._getStateAtCurrent().equals(INSIDE_LINE_COMMENT)) ||", "-            (_reduced._getStateAtCurrent().equals(INSIDE_BLOCK_COMMENT))) {", "-          i--;", "-          continue;", "-        }", "-        ", "-        if (i > 0 && _isStartOfComment(text, i - 1)) { /* char i is second character in opening comment marker */  ", "-          // Move i past the first comment character and continue searching", "-          i = i - 2;", "-          continue;", "-        }", "-        ", "-        // Found valid previous character", "-        break;", "+      if (match(text.charAt(i), whitespace)) {", "+        // ith char is whitespace", "+        i--;", "+        continue;", "-      /* Exit invariant same as for loop except that i <= reducedPos because at break i = reducedPos */", "-      _setCurrentLocation(oldPos);", "-//    }", "+      // Found a non-whitespace char;  move reduced model to location i", "+      setCurrentLocation(i);", "+      reducedPos = i;                  // reduced model points to i == reducedPos", "+      ", "+      // Check if matching char is within a comment (not including opening two characters)", "+      if ((_reduced.getStateAtCurrent().equals(INSIDE_LINE_COMMENT)) ||", "+          (_reduced.getStateAtCurrent().equals(INSIDE_BLOCK_COMMENT))) {", "+        i--;", "+        continue;", "+      }", "+      ", "+      if (i > 0 && _isStartOfComment(text, i - 1)) { /* char i is second character in opening comment marker */  ", "+        // Move i past the first comment character and continue searching", "+        i = i - 2;", "+        continue;", "+      }", "+      ", "+      // Found valid previous character", "+      break;", "+    }", "+    ", "+    /* Exit invariant same as for loop except that i <= reducedPos because at break i = reducedPos */", "+    setCurrentLocation(oldPos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61d9989626a492334e2aa72ef417b904", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DefaultInteractionsModel.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected void _notifySlaveJVMUsed(final File wd)", "signatureAfterChange": "         protected void _interpreterWontStart(final Exception e)", "diff": ["+  ", "+  protected void _interpreterWontStart(final Exception e) {", "+    Utilities.invokeLater(new Runnable() { ", "+      public void run() {", "+        _document.insertBeforeLastPrompt(\"JVM failed to start.  Make sure a firewall is not blocking \" +", "+                                         StringOps.NEWLINE +", "+                                         \"inter-process communication.  See the console tab for details.\" +", "+                                         StringOps.NEWLINE,", "+                                         InteractionsDocument.ERROR_STYLE);", "+         // Print the exception to the console", "+        _model.systemErrPrint(StringOps.getStackTrace(e));  // redundantly moves code to event thread", "+      }", "+    });", "-  /** In the event thread, notifies listeners that slave JVM has been used. */", "-  protected void _notifySlaveJVMUsed(final File wd) { ", "-    Utilities.invokeLater(new Runnable() { public void run() { _notifier.slaveJVMUsed(); } });", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61db0017d1cff1ac76b3d17a6649527d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "d187ef0ae751d72da55c4bc4f82be93731c1e46f", "commitAfterChange": "d8ed07c181201a238142caf2537f1e0f6da8bb42", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void interpreterReady()", "signatureAfterChange": "   public void interpreterReady()", "diff": ["+      _document.setInProgress(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61dcd1c966eee6bad3ad03685c2eda2d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 412, "methodNumberAfterChange": 406, "signatureBeforeChange": "    final private boolean jj_3R_255()", "signatureAfterChange": "    final private boolean jj_3R_257()", "diff": ["-  final private boolean jj_3R_255() {", "-    if (jj_scan_token(INTERFACE)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_420()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_421()) jj_scanpos = xsp;", "-    if (jj_scan_token(LBRACE)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_422()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(RBRACE)) return true;", "+", "+  final private boolean jj_3R_257() {", "+    if (jj_scan_token(INTERFACE)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_424()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_425()) jj_scanpos = xsp;", "+    if (jj_scan_token(LBRACE)) return true;", "+      if (jj_3R_426()) { jj_scanpos = xsp; break; }", "+    if (jj_scan_token(RBRACE)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61e029a9dcdde31cdbdb0e0ea967e4b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "commitAfterChange": "6082e28d363f7796f6c9506e0c82e9e5f29262e2", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": "   private void _openProjectHelper(File projectFile)", "signatureAfterChange": "   private void _openProjectHelper(File projectFile)", "diff": ["-    for(OpenDefinitionsDocument d: projDocs){", "-      _model.closeFile(d);", "-    }", "+//    for(OpenDefinitionsDocument d: projDocs){", "+//      _model.closeFile(d);", "+//    }", "+    closeFiles(projDocs);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61e193ffbeddc998b68da6d4b4bb7d75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 376, "signatureBeforeChange": "         public int _getLineStartPos(int pos)", "signatureAfterChange": "         public int _getLineStartPos(int pos)", "diff": ["-      doc.acquireReadLock();", "-      try { return doc._getLineStartPos(pos); }", "-      finally { doc.releaseReadLock(); }", "+//      doc.acquireReadLock();", "+//      try { ", "+      return doc._getLineStartPos(pos); ", "+//      }", "+//      finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61ec17a3d9b5a20d46ea61fc2ae67a6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "commitAfterChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 57, "signatureBeforeChange": "      synchronized void currThreadSet(final DebugThreadData thread)", "signatureAfterChange": "      synchronized void currThreadSet(final DebugThreadData thread)", "diff": ["+  synchronized void currThreadSet(final DebugThreadData thread) {", "+    _model.printDebugMessage(\"The current thread has been set.\");", "+    notifyListeners(new EventNotifier() {", "+      public void notifyListener(DebugListener l) {", "+        l.currThreadSet(thread);", "+      }", "+    });", "+  }", "-  ", "-  synchronized void currThreadSet(final DebugThreadData thread) {", "-    _model.printDebugMessage(\"The current thread is now \" + thread.getName() + \".\");", "-    notifyListeners(new EventNotifier() {", "-      public void notifyListener(DebugListener l) {", "-        l.currThreadSet(thread);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61ee271b851f8091a79d14292e4ff6f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "7b4296c095d59b57f25b910a8bdce57816e7621f", "commitAfterChange": "f3b30de075946ab18141ef0ec7abdb9f0f10037b", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 173, "signatureBeforeChange": "   private void shutdown()", "signatureAfterChange": "   private void shutdown()", "diff": ["-    Utilities.show(\"Shutting Down!\");", "-    ", "+//    Utilities.show(\"Shutting Down!\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61fa508b07c128fc53dd12b3bfaefd6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 835, "methodNumberAfterChange": 812, "signatureBeforeChange": "    final private boolean jj_3R_565()", "signatureAfterChange": "    final private boolean jj_3R_449()", "diff": ["+", "+  final private boolean jj_3R_449() {", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    if (jj_3R_460()) return true;", "+      if (jj_3R_468()) { jj_scanpos = xsp; break; }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_565() {", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    if (jj_3R_583()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_587()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "620d4195ef52c21e3c587167e1a3baf5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 358, "methodNumberAfterChange": 686, "signatureBeforeChange": "    final private boolean jj_3R_283()", "signatureAfterChange": "    final private boolean jj_3R_285()", "diff": ["-", "-  final private boolean jj_3R_283() {", "-    if (jj_3R_299()) return true;", "-      if (jj_3R_317()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_285() {", "+    if (jj_3R_302()) return true;", "+      if (jj_3R_303()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "621e6ce456a0e736d20b51d5ed7c48ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/HashMultiset.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Set<T> asSet()", "signatureAfterChange": "   public PredicateSet<T> asSet()", "diff": ["-  public Set<T> asSet() { return _counts.keySet(); }", "+  public PredicateSet<T> asSet() { return CollectUtil.asPredicateSet(_counts.keySet()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "622df4c0455e45b2ddbfb0f996c0e97f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "5a42b92d770342c963138046c93f1390dcf62017", "commitAfterChange": "b29182d94c1064d5f838746a211b47a58b37d210", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private void _setupNotificationsPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupNotificationsPanel(ConfigPanel panel)", "diff": ["+    panel.addComponent(new BooleanOptionComponent(OptionConstants.WARN_PATH_CONTAINS_POUND,", "+                                                  \"Warn if File's Path Contains a '#' Symbol\", this,", "+                                                  \"<html>Whether DrJava should warn the user if the file being<br>\" +", "+                                                  \"saved has a path that contains a '#' symbol.<br>\" +", "+                                                  \"Users cannot use such files in the Interactions Pane<br>\" +", "+                                                  \"because of a bug in Java.</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62340937e54e56e367fd37a556ab77ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "    private static void _dialog(String s)", "signatureAfterChange": "   private static void _dialog(String s)", "diff": ["+  private static final Log _log = new Log(\"IntJVM\");", "-    javax.swing.JOptionPane.showMessageDialog(null, s);", "+    //javax.swing.JOptionPane.showMessageDialog(null, s);", "+    _log.log(s);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "623a51e8bc6b145567df8b6a86be5a67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "e75c44dca53d5633e70ed3badd03d3667a23d4c8", "commitAfterChange": "c11896795d0041b0e5728ede27aa1fce3454d97c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["-    _tempDir = IOUtil.createAndMarkTempDirectory(\"DrJava-test-\" + user, \"\");", "+    _tempDir = /* IOUtil.createAndMarkTempDirectory */ FileOps.createTempDirectory(\"DrJava-test-\" + user /*, \"\"*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "623a9b798316c657238fcf954d239bd0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentBox.java", "commitBeforeChange": "4c6ea82220432e241db0b4fb1cb40b44b6d98377", "commitAfterChange": "82896652cf54077fb09a0c01380b5de955346d36", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public T value()", "signatureAfterChange": "      public T value()", "diff": ["-  public void set(T val) { _val = val; }", "-  public T value() { return _val; }", "+  public T value() { return get(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "623c7697100e429a70c79e0301b3b950", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "887c8657a83950a6c8947a7e9fe4ff97dd2e6556", "commitAfterChange": "bd1423ca3aa30e7ae329b2e3779dd5855237b9c8", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 162, "signatureBeforeChange": "      private void _openProjectUpdate()", "signatureAfterChange": "      private void _openProjectUpdate()", "diff": ["+      _compileOpenProjectAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6245e7a8f7d12c9769519039fc72eb56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testStaticImport14()", "signatureAfterChange": "   public void testStaticImport14()", "diff": ["-    TigerUtilities.setTigerEnabled(false);", "+    setTigerEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "624f00a6272237519d391893c77e2109", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "df472bcb2bf0d8ba296911d59ac250fe6e447811", "commitAfterChange": "896d23e2fc31ecf410625227cad5c5d61f4d6309", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   private void _switchPaneFocus(boolean next)", "signatureAfterChange": "   private void _switchPaneFocus(boolean next)", "diff": ["-      if (_currentDefPane.hasFocus()) {", "+//      if (_currentDefPane.hasFocus()) {", "-      }     ", "+//      }     ", "-      if (_interactionsPane.hasFocus()) {", "+//      if (_interactionsPane.hasFocus()) {", "-      }", "+//      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62681721ed0318b3dc40c9a2d96aaa4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 693, "signatureBeforeChange": "    final private boolean jj_3R_87()", "signatureAfterChange": "    final private boolean jj_3R_301()", "diff": ["-", "-  final private boolean jj_3R_87() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_129()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_130()) return true;", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_301() {", "+    if (jj_3R_312()) {", "+    if (jj_3R_313()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6268528b8f1366ac130a329bc82945b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testIndentShrinkTabAtStart()       throws BadLocationException, OperationCanceledException", "signatureAfterChange": "   public void testIndentShrinkTabAtStart()       throws BadLocationException, OperationCanceledException", "diff": ["-    openDoc.syncCurrentLocationWithDefinitions(FOO_EX_1.length());", "-    int loc = openDoc.getCurrentDefinitionsLocation();", "+    openDoc.setCurrentLocation(FOO_EX_1.length());", "+    int loc = openDoc.getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62774cd27fb0749a94545f8c46f85a9c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testCompileAbortsIfUnsaved() throws BadLocationException", "signatureAfterChange": "   public void testCompileAbortsIfUnsaved() throws BadLocationException", "diff": ["-    setupDocument(FOO_TEXT);", "+    final OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "-        assertModified(true);", "+        assertModified(true, doc);", "-    _model.startCompile();", "+    doc.startCompile();", "-    assertModified(true);", "-    assertContents(FOO_TEXT);", "+    assertModified(true, doc);", "+    assertContents(FOO_TEXT, doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62a50213de28aa5b4e78eaf98efb7f4c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "commitAfterChange": "9ce155a1f3e34352032d821032cb2dc70024460f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   @Override public Type visit(SimpleAllocation node)", "signatureAfterChange": "   @Override public Type visit(SimpleAllocation node)", "diff": ["-      // TODO: Check for uncaught exceptions", "+      checkThrownExceptions(inv.thrown(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62a95504de683444c6e25a704f92e7b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 694, "methodNumberAfterChange": 694, "signatureBeforeChange": "    final private boolean jj_3R_216()", "signatureAfterChange": "    final private boolean jj_3R_218()", "diff": ["+", "+  final private boolean jj_3R_218() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_45()) {", "+    if (jj_3R_245()) return true;", "-", "-  final private boolean jj_3R_216() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_41()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_243()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62cafa8c9d4a36eac4f8ae6212549bbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocument.java", "commitBeforeChange": "3bfda0ffd8a22eda2f2daab913b510305e1ef801", "commitAfterChange": "02d5c825c13aaa4caad6b7e4e89ccbdbfdc16c9f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 17, "signatureBeforeChange": "   protected void addUndoRedo(AbstractDocument.DefaultDocumentEvent chng, Runnable undoCommand, Runnable doCommand)", "signatureAfterChange": "      protected void addUndoRedo(AbstractDocument.DefaultDocumentEvent chng, Runnable undoCommand, Runnable doCommand)", "diff": ["-  protected void endLastCompoundEdit() { /* Do nothing */ }", "-  protected void addUndoRedo(AbstractDocument.DefaultDocumentEvent chng, Runnable undoCommand, Runnable doCommand) { }", "+  ", "+  protected void addUndoRedo(AbstractDocument.DefaultDocumentEvent chng, Runnable undoCommand, Runnable doCommand) {", "+    chng.addEdit(new CommandUndoableEdit(undoCommand, doCommand));    ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e28f29eb1dbdf87204d8c839fcce9e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorStringOptionComponent.java", "commitBeforeChange": "893c07e82b5df8a5ee457745ae613e9f4f3395b7", "commitAfterChange": "e7565df68be50967f0383d34df0b493ae42a4e83", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public VectorStringOptionComponent(VectorOption<String> opt, String text, SwingFrame parent)", "signatureAfterChange": "   public VectorStringOptionComponent(VectorOption<String> opt, String text, SwingFrame parent)", "diff": ["-  ", "-    this(opt, text, parent, false);", "+    this(opt, text, parent, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62f5238e480b8743374e29ee5c148c58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "9733ea984edf5c88dfc9e5dd3cc5f81a60e43f6c", "commitAfterChange": "2ed8afbf73f136505e1c6343cadd0edf92562826", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public int getCurrentLine()", "signatureAfterChange": "   public int getCurrentLine()", "diff": ["-    if( _cachedLocation - here > here ){ ", "+    if( (_cachedLocation - here > here ) ||", "+        ( here <= getFirstNewLine() ) ){ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "630dbc8b8d818f5a2ddd61c6ef458919", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6595282fd67e77d6079df1ee1647ba51751bbcec", "commitAfterChange": "de0f38d123822794b2970bd8e5814e75677feb46", "methodNumberBeforeChange": 674, "methodNumberAfterChange": 663, "signatureBeforeChange": "    final private boolean jj_3R_564()", "signatureAfterChange": "    final private boolean jj_3R_566()", "diff": ["-  final private boolean jj_3R_564() {", "+  final private boolean jj_3R_566() {", "-      if (jj_3R_565()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_567()) { jj_scanpos = xsp; break; }", "-    if (jj_3R_566()) jj_scanpos = xsp;", "+    if (jj_3R_568()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "631638de2f9d4d32f01c0c81cbaff5a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6bdcaa1031d63e5f58edf8d0e2313eac60ac2bdc", "commitAfterChange": "c6ab4cad3515b44035f93fe56438ef0ad4e6d24d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void move(int dist)", "signatureAfterChange": "   public void move(int dist)", "diff": ["-      if (newLoc < 0) {", "-        //      throw new RuntimeException(\"location < 0?! oldLoc=\" + _currentLocation + \" dist=\" +", "-        //                                  dist);", "-        throw new IllegalStateException(\"Tried to cursor to a negative location\");", "-      }", "+      if (newLoc < 0)", "+        throw new IllegalStateException(\"Tried to move cursor to a negative location\");", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "631bd6177a721e5e459955c376d3be98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaScrollableDialog.java", "commitBeforeChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "commitAfterChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DrJavaScrollableDialog(JFrame parent, String title, String header,                                 String text, int width, int height)", "signatureAfterChange": "   public DrJavaScrollableDialog(JFrame parent, String title, String header,                                 String text, int width, int height)", "diff": ["-                                String text, int width, int height)", "-  {", "-    super(parent, title, header, text, width, height);", "+                                String text, int width, int height) {", "+    this(parent, title, header, text, width, height, false);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63205eeb694b885df597d4c4fe66b78a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TypeNameChecker.java", "commitBeforeChange": "a1c288a48316b1c91a6ebecbbeffc93089c5ebaa", "commitAfterChange": "df01c8be1037a04090a700d45d88a837db8c2901", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     @Override public Type visit(HookTypeName node)", "signatureAfterChange": "     @Override public Type visit(HookTypeName node)", "diff": ["-      if (!ts.isSubtype(lower, upper)) {", "-        setErrorStrings(node, ts.userRepresentation(upper), ts.userRepresentation(lower));", "-        throw new ExecutionError(\"wildcard.bounds\", node);", "-      }", "-      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6344b25d523ccce15caeb944112dc540", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testHighlightKeywords2() throws BadLocationException", "signatureAfterChange": "   public void testHighlightKeywords2() throws BadLocationException", "diff": ["-    defModel.insertString(defModel.getLength(), s, null);", "+    _defModel.insertString(_defModel.getLength(), s, null);", "-    v = defModel.getHighlightStatus(0, defModel.getLength());", "-    _checkHighlightStatusConsistent(v, 0, defModel.getLength());", "+    v = _defModel.getHighlightStatus(0, _defModel.getLength());", "+    _checkHighlightStatusConsistent(v, 0, _defModel.getLength());", "-    v = defModel.getHighlightStatus(0, 2);", "+    v = _defModel.getHighlightStatus(0, 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63493f7345ce2e2eaa7f664bebdc3bc5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "8a099b753fcfb83be248d39f70edd5788e8b1222", "commitAfterChange": "4701dc92d8eb3da9b7f829b98cf858de261361f6", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void replSystemOutPrint(String s)", "signatureAfterChange": "   public void replSystemOutPrint(String s)", "diff": ["+    _interactionsDoc.insertBeforeLastPrompt(s, SYSTEM_OUT_INTERACTIONS_STYLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63696b6e4209ae534753d13d934e66f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "f6810ad68cbb0aaa0d9f5ff0052437da87098ab7", "commitAfterChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   public int getLineEndPos(final int pos)", "signatureAfterChange": "   public int getLineEndPos(final int pos)", "diff": ["+      _storeInCache(key, pos + dist);", "-    _storeInCache(key, new Integer(pos + dist));", "+   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6370668725023847127a7c3d20b52219", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public ClasspathVector getClasspath()", "signatureAfterChange": "   public ClassPathVector getClassPath()", "diff": ["-  public ClasspathVector getClasspath() {  return _jvm.getClasspath(); }", "+  public ClassPathVector getClassPath() {  return _jvm.getClassPath(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63aca08a24d1e62ab8bda1cefc754a37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "0fad47bdd1e942c86310a487dc6b4049e75b2486", "commitAfterChange": "24fd18576de91656692e4434c7903f02e1278dd5", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "     @Override public Type visit(AddAssignExpression node)", "signatureAfterChange": "     @Override public Type visit(AddAssignExpression node)", "diff": ["+          setLeftExpression(node, node.getLeftExpression()); // not to be confused with node.setLeftExpression(...)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63c7ec5cf95bec989bfb7f9e98d74a1c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 207, "methodNumberAfterChange": 207, "signatureBeforeChange": "          public void close()", "signatureAfterChange": "          public void close()", "diff": ["-      _cache.removeDoc(this);      ", "+      _cacheAdapter.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63d38f81238f3f9831b88d6214ad6d8e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 778, "methodNumberAfterChange": 335, "signatureBeforeChange": "    final private boolean jj_3R_536()", "signatureAfterChange": "    final private boolean jj_3R_530()", "diff": ["+  final private boolean jj_3R_530() {", "+    if (jj_3R_553()) return true;", "+      if (jj_3R_569()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_536() {", "-    if (jj_3R_555()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_580()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63ded008a947e92dc00d7c332a20e5da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          public void testCheckDifferentReturnTypes()", "signatureAfterChange": "          public void testCheckDifferentReturnTypes()", "diff": ["-      MethodDef mDef = new ConcreteMethodDef(SourceInfo.NO_INFO, _publicMav, new TypeParameter[0], new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                             new Word(SourceInfo.NO_INFO, \"methodName\"), new FormalParameter[0], new ReferenceType[0], ", "-                                             new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 76))}));", "+      MethodDef mDef = new ConcreteMethodDef(SourceInfo.NONE, _publicMav, new TypeParameter[0], new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                             new Word(SourceInfo.NONE, \"methodName\"), new FormalParameter[0], new ReferenceType[0], ", "+                                             new BracedBody(SourceInfo.NONE, new BodyItemI[] {new ValueReturnStatement(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 76))}));", "-      mDef = new AbstractMethodDef(SourceInfo.NO_INFO, _publicMav, new TypeParameter[0], new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                   new Word(SourceInfo.NO_INFO, \"methodName\"), new FormalParameter[0], new ReferenceType[0]);", "+      mDef = new AbstractMethodDef(SourceInfo.NONE, _publicMav, new TypeParameter[0], new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                   new Word(SourceInfo.NONE, \"methodName\"), new FormalParameter[0], new ReferenceType[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63e9973f93d84d00715fe1effea4b4e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorFileOptionComponent.java", "commitBeforeChange": "893c07e82b5df8a5ee457745ae613e9f4f3395b7", "commitAfterChange": "e7565df68be50967f0383d34df0b493ae42a4e83", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public VectorFileOptionComponent (VectorOption<File> opt, String text, SwingFrame parent)", "signatureAfterChange": "      public VectorFileOptionComponent(VectorOption<File> opt, String text, SwingFrame parent)", "diff": ["-  public VectorFileOptionComponent (VectorOption<File> opt, String text, SwingFrame parent) {", "-    this(opt, text, parent, false);", "+  public VectorFileOptionComponent(VectorOption<File> opt, String text, SwingFrame parent) {", "+    this(opt, text, parent, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63fe72fff69c39e39551987f4677f594", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void compileProject() throws IOException", "signatureAfterChange": "   public void compileProject() throws IOException", "diff": ["-    if (_prepareForCompile()) {", "-      _doCompile(_model.getProjectDocuments());", "-    }", "+    if (_prepareForCompile()) { _doCompile(_model.getProjectDocuments()); }", "+    else _notifier.compileAborted(new UnexpectedException(\"Project contains unsaved modified files\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64117aeeae729067af2882d54876af6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "936df97bedea66175f36cae49ba74b17abf11e8a", "commitAfterChange": "d43c6d20ec903cbbb4ee5291a112b3b3ae570823", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": "   public ProjectProfile _makeProjectProfile(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info) throws IOException", "signatureAfterChange": "   public ProjectProfile _makeProjectProfile(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info) throws IOException", "diff": ["-    OpenDefinitionsDocument[] docs;", "-    ", "-    synchronized(_documentsRepos) { docs = _documentsRepos.toArray(new OpenDefinitionsDocument[0]); }", "-    for (OpenDefinitionsDocument doc: docs) {", "+ ", "+    for (OpenDefinitionsDocument doc: getOpenDefinitionsDocuments()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "641417b6c2f767ba4e5c5be13ef01d50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerProxy.java", "commitBeforeChange": "978434ebe6c8e1cfcaf0965ea54500f7e3e475c0", "commitAfterChange": "d82c4ab6a249467ad025941135ce9c4a462237a5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    private void _recreateCompiler()", "signatureAfterChange": "    private void _recreateCompiler()", "diff": ["+      _realCompiler.setWarningsEnabled(_warningsEnabled);", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64292ce184495863b7cdce8134965d9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TopLevelTest.java", "commitBeforeChange": "875709ea758d694dda7555b8eeb2e15fa58e98c5", "commitAfterChange": "d29db164117e7452d6023bc6a73abe9d53f7d65b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "          private BenchmarkResult interpret(PackageName p, String header, String body,                                       boolean staticError, boolean runtimeError)", "signatureAfterChange": "          private BenchmarkResult interpret(PackageName p, String header, String body,                                       boolean staticError, boolean runtimeError)", "diff": ["-        i.interpret(\"void assertTrue(boolean b) { if (!b) throw new Error(\\\"Assertion failed\\\"); }\");", "+        i.interpret(\"void assertTrue(boolean b) { if (!b) throw new java.lang.Error(\\\"Assertion failed\\\"); }\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6436b90bedbfb26ef9d57e8600bbab84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "     public Object visit(FormalParameter node)", "signatureAfterChange": "   public Class visit(FormalParameter node)", "diff": ["+   */", "+  public Class visit(FormalParameter node) {", "+    Class c = (Class)node.getType().acceptVisitor(this);", "+    ", "+    if (node.isFinal()) {", "+      context.defineConstant(node.getName(), c);", "+    } else {", "+      context.define(node.getName(), c);", "+    }", "+    node.setProperty(NodeProperties.TYPE, c);", "+    ", "+    return c;", "+  }", "-     */", "-    public Object visit(FormalParameter node) {", "-        Class c = (Class)node.getType().acceptVisitor(this);", "-", "-        if (node.isFinal()) {", "-            context.defineConstant(node.getName(), c);", "-        } else {", "-            context.define(node.getName(), c);", "-        }", "-        node.setProperty(NodeProperties.TYPE, c);", "-\t", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "644212059dc68de0043ca11b86ca85e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 70, "signatureBeforeChange": "     protected void updateRedoState()", "signatureAfterChange": "     protected void updateRedoState()", "diff": ["-      if (_doc.getDocument().getUndoManager().canRedo()) {", "+      if (_doc.getUndoManager().canRedo()) {", "-        putValue(Action.NAME, _doc.getDocument().getUndoManager().getRedoPresentationName());", "+        putValue(Action.NAME, _doc.getUndoManager().getRedoPresentationName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "645db11072600f202deccbd9cccf6df2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "commitAfterChange": "e7a6b9c5a51a2cf7b9cfb5a10d90c24a3c7c3844", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected void handleInnerClassDef(InnerClassDef that, Data data, String name)", "signatureAfterChange": "   protected void handleInnerClassDef(InnerClassDef that, Data data, String name)", "diff": ["-//    that.getSuperclass().visit(this);", "+    that.getSuperclass().visit(this);  // formerly commented out.  Why?", "+    ", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "645fc68701923e207df5f0a999978ea2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsController.java", "commitBeforeChange": "c967e58952709e4269e937aeff522c6db9ffc4fb", "commitAfterChange": "b98ab62a97f1830b1ba51069d5e9abdc9ef2e5d4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public InteractionsController(EclipseInteractionsModel model,                                 SWTDocumentAdapter adapter,                                 InteractionsView view)", "signatureAfterChange": "   public InteractionsController(EclipseInteractionsModel model,                                 SWTDocumentAdapter adapter,                                 InteractionsView view)", "diff": ["+    _enabled = true;", "+    ", "+    // Initialize preferences", "+    IPreferenceStore store = EclipsePlugin.getDefault().getPreferenceStore();", "+    IPropertyChangeListener listener = new PrefChangeListener();", "+    store.addPropertyChangeListener(listener);", "+    JFaceResources.getFontRegistry().addListener(listener);", "+    _updatePreferences();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647675f8275eb3680b2fac2ddeb2739e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "c750f23eb2b9150b4fb75772deac7c17626a7d1c", "commitAfterChange": "74e4ff93e186e54c8f3a2ca5764d77cf5247e4cc", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public static URL toURL(File f) throws MalformedURLException", "signatureAfterChange": "   public static URL toURL(File f) throws MalformedURLException", "diff": ["-  public static URL toURL(File f) throws MalformedURLException { return f.toURL(); }", "+  public static URL toURL(File f) throws MalformedURLException { return f.toURI().toURL(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647cee61dd56dda82fe9c79e9406d562", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 546, "methodNumberAfterChange": 284, "signatureBeforeChange": "    final private boolean jj_3R_99()", "signatureAfterChange": "    final private boolean jj_3R_439()", "diff": ["+  final private boolean jj_3R_439() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_447()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_448()) return true;", "+    }", "-  final private boolean jj_3R_99() {", "-    if (jj_3R_150()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64a47ffe5674b300b28bd9c093d723ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartAfterOpenBrace.java", "commitBeforeChange": "b17c3d3d0edf27a5d35f38839287840198b5808d", "commitAfterChange": "80e5b2a4860b03c09786e96e9454b1209681f568", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    doc.setCurrentLocation(lineStart);", "+//    doc.setCurrentLocation(lineStart);", "-    doc.setCurrentLocation(origin);    ", "+//    doc.setCurrentLocation(origin);    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64a95be1798196dbec696fd55d03c905", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 579, "methodNumberAfterChange": 656, "signatureBeforeChange": "    final private boolean jj_3R_386()", "signatureAfterChange": "    final private boolean jj_3R_386()", "diff": ["-", "-  final private boolean jj_3R_386() {", "-    if (jj_3R_176()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_386() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_15()) {", "+    if (jj_3R_387()) {", "+    if (jj_3R_388()) {", "+    if (jj_3R_389()) {", "+    if (jj_3R_390()) {", "+    if (jj_3R_391()) {", "+    if (jj_3R_392()) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(85)) return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64af368a47a1d2677b8b183a2a80af7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "commitAfterChange": "37eb7cd9abe39acb853d1fd344f27a2631ce2406", "methodNumberBeforeChange": 543, "methodNumberAfterChange": 544, "signatureBeforeChange": "      private void _showError(Throwable e, String title, String message)", "signatureAfterChange": "      void _showError(Throwable e, String title, String message)", "diff": ["-  private void _showError(Throwable e, String title, String message) {    ", "-    JOptionPane.showMessageDialog(this, message + \"\\n\" + e + \"\\n\"+ StringOps.getStackTrace(e),", "-                                  title, JOptionPane.ERROR_MESSAGE);", "+  void _showError(Throwable e, String title, String message) {    ", "+    MainFrameUtils.showError(this, e, title, message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64b3158ba5d85481989f2f67036c6a3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocument.java", "commitBeforeChange": "25c6efa4fee666f10304502f8f42fa30cbab79a2", "commitAfterChange": "e193e4674aaab3350b36cbc521ecf3bf9c098bc6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public boolean inCommentBlock()", "signatureAfterChange": "   public boolean inBlockComment()", "diff": ["-  public boolean inCommentBlock() {", "+  public boolean inBlockComment() {", "-        resetReducedModelLocation();", "-        ReducedModelState state = stateAtRelLocation(getLength() - _currentLocation);", "-        boolean toReturn = (state.equals(ReducedModelStates.INSIDE_BLOCK_COMMENT));", "+//        resetReducedModelLocation();", "+//        ReducedModelState state = stateAtRelLocation(getLength() - _currentLocation);", "+//        boolean toReturn = (state.equals(ReducedModelStates.INSIDE_BLOCK_COMMENT));", "+        boolean toReturn = inBlockComment(getLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64bb015e210ca5b68bf245b0fde18443", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void addErrorHighlight(int from, int to)     throws BadLocationException", "signatureAfterChange": "   public void addErrorHighlight(int from, int to)     throws BadLocationException", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      _errorHighlightTag = (HighlightManager.HighlightInfo)_highlightManager.addHighlight(from, to, ERROR_PAINTER);", "-    }", "-    else {", "-      _errorHighlightTag =", "-        getHighlighter().addHighlight(from, to, ERROR_PAINTER);", "-    }", "+    _errorHighlightTag = (HighlightManager.HighlightInfo)", "+      _highlightManager.addHighlight(from, to, ERROR_PAINTER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64c09479677bbe22f94bbe6cead8d0a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 318, "methodNumberAfterChange": 906, "signatureBeforeChange": "    final private boolean jj_3R_167()", "signatureAfterChange": "    final private boolean jj_3R_105()", "diff": ["-", "-  final private boolean jj_3R_167() {", "-    if (jj_3R_220()) return true;", "-    if (jj_3R_336()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_105() {", "+    if (jj_3R_170()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_271()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64e0753444e7d046e7a194c0f3a5de72", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 90, "signatureBeforeChange": "   private void _debugStep(int flag)", "signatureAfterChange": "   void debuggerStep(int flag)", "diff": ["-  private void _debugStep(int flag) {", "+  void debuggerStep(int flag) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64e60608146884bd7b573e65eb78a82a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9c5777f5c4beabc12e35e029719473305aed7334", "commitAfterChange": "6f3940face1890969eb276e9b92d09c044ad9646", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+      (TOOLBAR_ENABLED, new ToolbarOptionListener());", "+    config.addOptionListener"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64f1fc31aaab5b154f02b4c154479eb8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   protected void slaveQuitDuringStartup(int status)", "signatureAfterChange": "   protected void slaveQuitDuringStartup(int status)", "diff": ["-    // The slave JVM is not enabled after this.", "+    if (Utilities.TEST_MODE) return;  // Some tests kill the slave immediately after it starts.", "+", "+//    // The slave JVM is not enabled after this.", "+    // Signal that an internal error occurred"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64f5c84ecee7048181c39e222670ce50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "4427ad83551d20b6933cd5a6acd403abdb7b0d92", "commitAfterChange": "8e9d6d4a3458f4fb8d197d118149328dfb2ae150", "methodNumberBeforeChange": 245, "methodNumberAfterChange": 263, "signatureBeforeChange": "    final private boolean jj_3_12()", "signatureAfterChange": "    final private boolean jj_3_12()", "diff": ["-  final private boolean jj_3_12() {", "+  final private boolean jj_3_12() {", "+    if (jj_3R_28()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "650ceb08a07411846b3db890222ddcbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testThreadShouldDie() throws Exception", "signatureAfterChange": "   public void testThreadShouldDie() throws Exception", "diff": ["-      System.out.println(\"----testThreadShouldDie----\");", "+      printStream.println(\"----testThreadShouldDie----\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "653f787c113b87e1cad5b423350ce9d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 797, "methodNumberAfterChange": 706, "signatureBeforeChange": "    final private boolean jj_3R_442()", "signatureAfterChange": "    final private boolean jj_3R_484()", "diff": ["+  final private boolean jj_3R_484() {", "+    if (jj_3R_90()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_486()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_442() {", "-    if (jj_3R_88()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_461()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "654290aeab7c636d5406848353467b0c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpretResult.java", "commitBeforeChange": "bfbbbb34f309b13ef404f393392d7ea8745940cd", "commitAfterChange": "9d671cad5f849049059b2e199aea7279dd398525", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     public ExceptionResult(InterpreterException e)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     public ExceptionResult(InterpreterException e)", "diff": ["-        _stackTrace = e.getStackTrace();", "+        _stackTrace = e.getCause().getStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65437fa0bf8878317354da692ab0964e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "0c20285038247d5808496669253a627b33ccda12", "commitAfterChange": "05fa29784d50c4b6d27e9281d10d687f9f629cc3", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": "   private void _okJava()", "signatureAfterChange": "   private void _okJava()", "diff": ["+      File wd = _javaCommandWorkDirSelector.getFileFromField();", "+      // LOG.log(\"ok. wd = \"+wd);", "+      if (!_javaCommandWorkDirSelector.getFileField().getText().equals(\"\")) {", "+        // LOG.log(\"setting!\");", "+        pc.setDir(wd);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6548e7becce8805bee833f11a6415af8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "   public void indent(final int reason)", "signatureAfterChange": "   public void indent(final int reason)", "diff": ["-    _doc.syncCurrentLocationWithDefinitions(getCaretPosition());", "+    _doc.setCurrentLocation(getCaretPosition());", "-      //_doc.syncCurrentLocationWithDefinitions(caretPos);", "-      setCaretPosition(_doc.getCurrentDefinitionsLocation());", "+      //_doc.setCurrentLocation(caretPos);", "+      setCaretPosition(_doc.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65886d6b66a399333966a1b16d981d28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileIOTest.java", "commitBeforeChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "commitAfterChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testClassFileSynchronizationAfterRename() throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronizationAfterRename() throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "diff": ["-    doc.saveFile(new FileSelector(file));", "+    saveFile(doc, new FileSelector(file));", "-    doc.saveFileAs(new FileSelector(file2));", "+    saveFileAs(doc, new FileSelector(file2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "658dbc7c809b9ab212daa8026135531b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 528, "methodNumberAfterChange": 525, "signatureBeforeChange": "    final private boolean jj_3R_102()", "signatureAfterChange": "    final private boolean jj_3R_104()", "diff": ["-", "-  final private boolean jj_3R_102() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_43()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_154()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_104() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_45()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_157()) return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65a924c6fd0899bf4754a4aa710f6e11", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "43b808b9e05f3378c0faae83fe4225562adc4c6e", "commitAfterChange": "723910d837b2fcdd9f4127559df4832f71fb62e8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testNoClassFile() throws Exception", "signatureAfterChange": "   public void testNoClassFile() throws Exception", "diff": ["-    TestShouldSucceedListener listener = new TestShouldSucceedListener() {", "+    JUnitTestListener listener = new JUnitTestListener() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65b3ba6df023066ee14d76823c6704ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "72163ebd454d71c0955c00c7a1a43c6fa207331b", "commitAfterChange": "cdddd415c8ee9888478b5a253ffbb086fce1ed57", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public synchronized void startup() throws DebugException", "signatureAfterChange": "      public synchronized void startup() throws DebugException", "diff": ["+      DrJava.consoleOut().println(\"Starting up...\");", "+      DrJava.consoleOut().println(\"Attached. VM = \" +_vm);", "+      ", "+      DrJava.consoleOut().println(\"EventHandler started...\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65b77b85c0b9254abbedc214db27fa01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 525, "methodNumberAfterChange": 529, "signatureBeforeChange": "    final private boolean jj_3_45()", "signatureAfterChange": "    final private boolean jj_3_46()", "diff": ["-  final private boolean jj_3_45() {", "+  final private boolean jj_3_46() {", "-    if (jj_3R_92()) return true;", "-    if (jj_3R_331()) return true;", "+    if (jj_3R_93()) return true;", "+    if (jj_3R_338()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65bba827e1288366ff6a98ecfc0c3d77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/OpenDefinitionsDocument.java", "commitBeforeChange": "03dd354632fbfc12bf279640160bfd934404dc39", "commitAfterChange": "2714f88d04f312c23b21ec6a440193d44b7121ba", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "    public void print() throws PrinterException, BadLocationException;", "signatureAfterChange": "    public void print() throws PrinterException, BadLocationException, FileMovedException;", "diff": ["-  public void print() throws PrinterException, BadLocationException;", "+  public void print() throws PrinterException, BadLocationException, FileMovedException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65cf370fe49c3beddad9dd3128186768", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "9e497bdeba5d2ec8cfd80ebdb938cf6935007939", "commitAfterChange": "8015cc1e53ce6d8dc00c5faf652f2b4ef39fe4e9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public TypeData forIfThenElseStatement(IfThenElseStatement that)", "signatureAfterChange": "   public TypeData forIfThenElseStatement(IfThenElseStatement that)", "diff": ["-      Expression exp = (Expression) that.getTestExpression();", "+      Expression exp = that.getTestExpression();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65e3454c2fef23c0b8c1d2fbea4c762a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 708, "methodNumberAfterChange": 332, "signatureBeforeChange": "    final private boolean jj_3R_212()", "signatureAfterChange": "    final private boolean jj_3R_108()", "diff": ["+    if (jj_3R_164()) {", "+    if (jj_3R_165()) return true;", "-", "-  final private boolean jj_3R_212() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_29()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_254()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65e48a767f87cf6e51f8243beb3248f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 748, "methodNumberAfterChange": 715, "signatureBeforeChange": "    final private boolean jj_3R_184()", "signatureAfterChange": "    final private boolean jj_3R_490()", "diff": ["-    if (jj_3R_98()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_215()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_490() {", "+    if (jj_3R_91()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_20()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65e5d07d27b313494f1037e80c4913cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "fb266d92ba9efd43e20ccabcb8837490fbeddaea", "commitAfterChange": "9b317c4ea1656d56bf74b4b1688b4337b5b40277", "methodNumberBeforeChange": 171, "methodNumberAfterChange": 171, "signatureBeforeChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "diff": ["+    _log.log(\"closeFileWithoutPrompt(\" + doc + \") called; getRawFile() = \" + doc.getRawFile());", "+    _log.log(\"_documentsRepos = \" + _documentsRepos);", "-    synchronized(_documentsRepos) { found = _documentsRepos.remove(doc); }", "+    synchronized(_documentsRepos) { found = (_documentsRepos.remove(doc.getRawFile()) != null); }", "-    if (! found) return false;", "+    if (! found) {", "+      _log.log(\"Cannot close \" + doc + \"; not found!\");", "+      return false;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65e748243dd650ed0c5e172919f90b5f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5e30c7f70ee8822945ce8efbfadabc105dbf602f", "commitAfterChange": "d1b53b456f7dd4cc72458a21036639096a69a74e", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "          public void fileSaved(File file)", "signatureAfterChange": "          public void fileSaved(File file)", "diff": ["+      _fileNameField.setText(file.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65eb87bbbaa1894d76e92ea77ae300e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 310, "methodNumberAfterChange": 580, "signatureBeforeChange": "    final private boolean jj_3R_369()", "signatureAfterChange": "    final private boolean jj_3R_366()", "diff": ["-", "-  final private boolean jj_3R_369() {", "-    if (jj_3R_374()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_390()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_366() {", "+    if (jj_3R_372()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_385()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65fa2f2dca71e7141d2953342dc726b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void removeWatch(String field);", "signatureAfterChange": "   public void removeWatch(String field) throws DebugException;", "diff": ["-  public void removeWatch(String field);", "+  public void removeWatch(String field) throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6615d3a5747e0f17d184ab93e827972c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void addDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "signatureAfterChange": "   public void addDocument(INavigatorItem doc, String path)", "diff": ["-  public void addDocument(INavigatorItem doc, String path) throws IllegalArgumentException {", "-    _model.addElement(doc);", "+  public void addDocument(INavigatorItem doc, String path) {", "+    addDocument(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "662632b50e4f5446cf39c7d9b781a8f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassMemberChecker.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "          @Override public Void visit(ConstructorDeclaration node)", "signatureAfterChange": "          @Override public Void visit(ConstructorDeclaration node)", "diff": ["+      ExpressionChecker callChecker = new ExpressionChecker(bodyContext, _opt);", "-      if (call == null) { call = new ConstructorCall(null, null, true); }", "-      new ExpressionChecker(bodyContext, _opt).check(call);", "+      if (call != null) { callChecker.checkConstructorCall(call); }", "+      // if the call is implicit, check it *after* checking the body (better error messages this way) ", "+      if (call == null) { callChecker.checkConstructorCall(new ConstructorCall(null, null, true)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6626b8f4163232624581eb5d774cafc1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    if (_model.getNumErrors() > 0) {", "+    if (_model.getCompilerModel().getNumErrors() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "662a633172ff114f39726078d28b15e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/Utilities.java", "commitBeforeChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "commitAfterChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public static void showMessageBox(final String msg, final String title)", "signatureAfterChange": "   public static void showMessageBox(final String msg, final String title)", "diff": ["-    //Utilities.invokeAndWait(new Runnable() { public void run() { JOptionPane.showMessageDialog(null, msg); } } );", "-    Utilities.invokeAndWait(new Runnable() { public void run() {", "-      Utilities.TextAreaMessageDialog.showDialog(null, title, msg); ", "-    } } );", "+    if (TEST_MODE) System.out.println(title + \": \" + msg); else {", "+      //Utilities.invokeAndWait(new Runnable() { public void run() { JOptionPane.showMessageDialog(null, msg); } } );", "+      Utilities.invokeAndWait(new Runnable() { public void run() {", "+        new edu.rice.cs.drjava.ui.DrJavaScrollableDialog(null,", "+                                                         title,", "+                                                         \"Message:\",", "+                                                         msg,", "+                                                         false).show();", "+      } } );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6631b13ab18c0cd6a50b4efb56f47d5c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JarOptionsDialog.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public void setVisible(boolean vis)", "signatureAfterChange": "   public void setVisible(boolean vis)", "diff": ["-      _mainFrame.simpleHourglassOn();", "+      _mainFrame.hourglassOn();", "-      _mainFrame.simpleHourglassOff();", "+      _mainFrame.hourglassOff();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6644a6d86cf5e344e4efcfd62d8f5b00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 284, "methodNumberAfterChange": 557, "signatureBeforeChange": "    final private boolean jj_3R_444()", "signatureAfterChange": "    final private boolean jj_3R_441()", "diff": ["-  final private boolean jj_3R_444() {", "-    xsp = jj_scanpos;", "-    if (jj_3R_452()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_453()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_441() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_449()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_450()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66454cb26d2902d93cec3a71a1c4b1f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "8468328336764977b1a392d354ad9fa8332d6cf0", "commitAfterChange": "b5065bdb57d50a5108c714db64f9cb4417931362", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void testStarted(String name)", "signatureAfterChange": "     public void testStarted(String name)", "diff": ["-        int index = doc.getLength();", "+        int len = doc.getLength();", "-          doc.insertString(index, \"  \" + className + \"\\n\", NORMAL_ATTRIBUTES);", "-          index = doc.getLength();", "+          doc.insertString(len, \"  \" + className + \"\\n\", NORMAL_ATTRIBUTES);", "+          len = doc.getLength();", "-        doc.insertString(index, \"    \", NORMAL_ATTRIBUTES);", "-        index = doc.getLength();", "-        doc.insertString(index, testName + \"\\n\", NORMAL_ATTRIBUTES);", "-        Position pos = doc.createPosition(index);", "+        doc.insertString(len, \"    \", NORMAL_ATTRIBUTES);", "+        len = doc.getLength();", "+        doc.insertString(len, testName + \"\\n\", NORMAL_ATTRIBUTES);", "+        Position pos = doc.createPosition(len);", "-        setCaretPosition(index);", "+        setCaretPosition(len);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "664b62c83ef76b9b7e4083c687a020c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 868, "methodNumberAfterChange": 811, "signatureBeforeChange": "    final private boolean jj_3R_495()", "signatureAfterChange": "    final private boolean jj_3R_496()", "diff": ["-  final private boolean jj_3R_495() {", "-    if (jj_3R_515()) return true;", "-      if (jj_3R_549()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_496() {", "+    if (jj_3R_516()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_550()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "665a5f0add53e205335a169b40c38bb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 327, "methodNumberAfterChange": 307, "signatureBeforeChange": "    final private boolean jj_3R_263()", "signatureAfterChange": "    final private boolean jj_3R_297()", "diff": ["-", "-  final private boolean jj_3R_263() {", "-    if (jj_scan_token(DO)) return true;", "-    if (jj_3R_171()) return true;", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_110()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_297() {", "+    if (jj_scan_token(DO)) return true;", "+    if (jj_3R_179()) return true;", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_112()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "665df1e85d3139598d1cf88734c4893e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, final boolean allTests)", "signatureAfterChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, final boolean allTests)", "diff": ["-      List<String> tests;", "-//      Utilities.show(\"Finding test classes\");", "-      try { tests = _jvm.findTestClasses(classNames, files); }", "-      catch(IOException e) { throw new UnexpectedException(e); }", "-      ", "+      List<String> tests = _jvm.findTestClasses(classNames, files).unwrap(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66608bab10ef68b45a8dac185a170712", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 645, "methodNumberAfterChange": 577, "signatureBeforeChange": "    final private boolean jj_3R_554()", "signatureAfterChange": "    final private boolean jj_3R_554()", "diff": ["+", "+  final private boolean jj_3R_554() {", "+    if (jj_3R_565()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_554() {", "-    if (jj_scan_token(PUBLIC)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "667504894032d35b0b7d85fe66bf37bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 599, "methodNumberAfterChange": 599, "signatureBeforeChange": "    final private boolean jj_3R_379()", "signatureAfterChange": "    final private boolean jj_3R_381()", "diff": ["-", "-  final private boolean jj_3R_379() {", "-    if (jj_scan_token(INCREMENT)) return true;", "+", "+  final private boolean jj_3R_381() {", "+    if (jj_scan_token(DECREMENT)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66778daee384161b59ec479d6e2791c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public Object visit(ArrayInitializer node)", "signatureAfterChange": "   public Class visit(ArrayInitializer node)", "diff": ["-     */", "-    public Object visit(ArrayInitializer node) {", "-        node.getElementType().acceptVisitor(this);", "-", "-        checkList(node.getCells());", "-        return null;", "+   */", "+  public Class visit(ArrayInitializer node) {", "+    node.getElementType().acceptVisitor(this);", "+    ", "+    checkList(node.getCells());", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66788fe6da3d426f994a573ed9ae284e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected void _insertErrorText(CompilerError error, Document doc)       throws BadLocationException", "signatureAfterChange": "     protected void _insertErrorText(CompilerError error, Document doc)       throws BadLocationException", "diff": ["-        // Show file and line number", "-        doc.insertString(doc.getLength(), \"File: \", BOLD_ATTRIBUTES);", "-        String fileAndLineNumber = error.getFileMessage() + \"  [line: \" + error.getLineMessage() + \"]\";", "-        doc.insertString(doc.getLength(), fileAndLineNumber + \"\\n\", NORMAL_ATTRIBUTES);", "-", "-", "-        if (error.isWarning()) {", "-          doc.insertString(doc.getLength(), \"Warning: \", BOLD_ATTRIBUTES);", "-        }", "-        else {", "-          doc.insertString(doc.getLength(), \"Error: \", BOLD_ATTRIBUTES);", "-        }", "-", "-        doc.insertString(doc.getLength(), error.message(), NORMAL_ATTRIBUTES);", "-        doc.insertString(doc.getLength(), \"\\n\", NORMAL_ATTRIBUTES);", "+      // Show file and line number", "+      doc.insertString(doc.getLength(), \"File: \", BOLD_ATTRIBUTES);", "+      String fileAndLineNumber = error.getFileMessage() + \"  [line: \" + error.getLineMessage() + \"]\";", "+      doc.insertString(doc.getLength(), fileAndLineNumber + \"\\n\", NORMAL_ATTRIBUTES);", "+      ", "+      ", "+      if (error.isWarning()) {", "+        doc.insertString(doc.getLength(), _getWarningText(), BOLD_ATTRIBUTES);", "+      else {", "+        doc.insertString(doc.getLength(), _getErrorText(), BOLD_ATTRIBUTES);", "+      }", "+      ", "+      doc.insertString(doc.getLength(), error.message(), NORMAL_ATTRIBUTES);", "+      doc.insertString(doc.getLength(), \"\\n\", NORMAL_ATTRIBUTES);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66799c57a6e67dfc3e37b413f2e3fec7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testForEach15()", "signatureAfterChange": "   public void testForEach15()", "diff": ["-    TigerUtilities.setTigerEnabled(true);", "+    setTigerEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "668489ba54dd3eb7063e9e89c8ae6380", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "99105223925683ee669479026ce3b62dfa0eda84", "commitAfterChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 226, "signatureBeforeChange": "      private void _openProjectUpdate()", "signatureAfterChange": "      private void _openProjectUpdate()", "diff": ["+      _saveProjectAsAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6695d376a523658a58b1beaab998fd42", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "cdd5bfddeabecbf376396cd4887f5e333be94323", "commitAfterChange": "d5f668008f61b88aab5fb41a10a8350134677c1a", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+    // Platform-specific UI setup.", "+    PlatformFactory.ONLY.beforeUISetup();", "+    ", "+    ", "+    // Platform-specific UI setup.", "+    PlatformFactory.ONLY.afterUISetup(_aboutAction, _editPreferencesAction, _quitAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "669ad668f68aa70429c0fc8541a65430", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelBrace.java", "commitBeforeChange": "c5393075df9303b791f0a8e80d6b5a15f548551a", "commitAfterChange": "826853cc9405a53970a4e3ba9d7145b4ff5544e8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private int _move(int count,                      ModelList<ReducedToken>.Iterator copyCursor,                     int currentOffset)", "signatureAfterChange": "   private int _move(int count,                      ModelList<ReducedToken>.Iterator copyCursor,                     int currentOffset)", "diff": ["-    ModelList<ReducedToken>.Iterator copyCursor2 = copyCursor.copy();", "-    if (count == 0)", "+    ModelList<ReducedToken>.Iterator copyCursor2 = copyCursor.copy();", "+", "+    if (count == 0) {", "+      copyCursor2.dispose();", "+    }", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "669c409fa08fc1952d79b470699cbe01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ddcbad2909e9c9411b7283368e21d7790422a21d", "commitAfterChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "     private void _save()", "signatureAfterChange": "     private void _save()", "diff": ["+      _currentDefPane.hasWarnedAboutModified(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c8ff499d37fa7e1e9bbac3ee1385db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 51, "signatureBeforeChange": "   public void setProjectExtraClasspath(ClasspathVector cp)", "signatureAfterChange": "   public void setExtraClassPath(ClassPathVector cp)", "diff": ["-  public void setProjectExtraClasspath(ClasspathVector cp) {", "-    _state.setExtraClasspath(cp);", "+  public void setExtraClassPath(ClassPathVector cp) {", "+    _state.setExtraClassPath(cp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66da67d02bbeb61969bc978358532ec4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testOpenOne() throws BadLocationException", "signatureAfterChange": "   public void testOpenOne() throws BadLocationException", "diff": ["-//    _log.log(\"testOpenOne completed\");", "+    _log.log(\"testOpenOne completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66e834dbd038f3bbe2c3f8a7713aed16", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "df9cbdf4ec8cbcbc3942b966a48a15d33dcac7ed", "commitAfterChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public TestMasterJVM()", "signatureAfterChange": "      public TestMasterJVM() throws RemoteException", "diff": ["-    public TestMasterJVM() { super(CounterSlave.class.getName()); }", "+    public TestMasterJVM() throws RemoteException { super(CounterSlave.class.getName()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66f74df911eb2f35af88c0cc30270b36", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 585, "methodNumberAfterChange": 493, "signatureBeforeChange": "    final private boolean jj_3R_260()", "signatureAfterChange": "    final private boolean jj_3R_263()", "diff": ["-  final private boolean jj_3R_260() {", "+  final private boolean jj_3R_263() {", "-    if (jj_3R_94()) return true;", "+    if (jj_3R_97()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67030282a5689608c27ffdda55516fd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "43b808b9e05f3378c0faae83fe4225562adc4c6e", "commitAfterChange": "723910d837b2fcdd9f4127559df4832f71fb62e8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "signatureAfterChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "diff": ["-    TestShouldSucceedListener listener = new TestShouldSucceedListener(true);", "+    JUnitTestListener listener = new JUnitTestListener(true);", "-    listener = new TestShouldSucceedListener();", "+    listener = new JUnitTestListener();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67069f910f006b09cecbc44fa2f1267b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "43f41a369ae2fab400ffccc265d57e86cf8989d7", "commitAfterChange": "e0e957550963e046bdbb3a11cc062ff5ce5c9c2b", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "   private void _copyBack(ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,      IncompatibleThreadStateException, AbsentInformationException,      InvocationException, DebugException", "signatureAfterChange": "   private void _copyBack(ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,      IncompatibleThreadStateException, AbsentInformationException,      InvocationException, DebugException", "diff": ["-          break;", "+          break;          ", "+        catch (InvalidTypeException ite) {", "+          printMessage(\"Could not update the value of '\" + localVar.name() + \"' (invalid type exception)\");", "+          break;          ", "+        }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67161732ea72a8028aff26473313e7ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "cf96eb967b0121c0683cbf9a30a0ed919bd996d9", "commitAfterChange": "b53d99e3450a80916c5424f3c5e89716cbcce71b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void selectItem(JUnitError error)", "signatureAfterChange": "     public void selectItem(JUnitError error)", "diff": ["-", "+      ", "+        //System.err.println(\"error = \" + error + \" i = \" + i + \" startPos = \" + startPos + \" startRect = \" + startRect);", "+        ", "-        _mainPanel.scrollRectToVisible(startRect);", "+        scrollRectToVisible(startRect);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "672143f790f90c4495e9fc6234d9e8e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DCacheAdapter.java", "commitBeforeChange": "b6f32808055835a9481d2cee68a36bc82ce5f558", "commitAfterChange": "3b63bd62ccd1666c210054736f0739b2d5581af4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public String getText(int offset, int length);", "signatureAfterChange": "   public String getText(int offset, int length) throws BadLocationException;", "diff": ["-  public String getText(int offset, int length);", "+  public String getText(int offset, int length) throws BadLocationException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67355115c291dd42ea83091b5caec155", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 575, "methodNumberAfterChange": 549, "signatureBeforeChange": "    final private boolean jj_3R_161()", "signatureAfterChange": "    final private boolean jj_3R_588()", "diff": ["+", "+  final private boolean jj_3R_588() {", "+    if (jj_3R_340()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_591()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_161() {", "-      if (jj_3R_214()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6741d389de745deaf77ea55fe41c312a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void setActiveDocument(OpenDefinitionsDocument doc)", "signatureAfterChange": "   public void setActiveDocument(OpenDefinitionsDocument doc)", "diff": ["-    try { _documentNavigator.setActiveDoc(getIDocGivenODD(doc)); } ", "-    catch(DocumentClosedException dce) { /* do nothing */ }", "+    try { _documentNavigator.setActiveDoc(doc); } ", "+    catch(DocumentClosedException dce) { ", "+      /* do nothing; findbugs signals a bug unless this catch clause spans more than two lines */", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "677843759aca31ad30d4ced2114bff7c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 296, "methodNumberAfterChange": 695, "signatureBeforeChange": "    final private boolean jj_3R_380()", "signatureAfterChange": "    final private boolean jj_3R_380()", "diff": ["-", "-  final private boolean jj_3R_380() {", "-    if (jj_scan_token(PUBLIC)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_380() {", "+    if (jj_3R_115()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67ab6bbdd0f7343724a89c6492e8bd12", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/HistorySaveDialog.java", "commitBeforeChange": "766cb210913604064ad31aa3d7f4068a2fd0ac5f", "commitAfterChange": "8a3aaf6e3fe6fafb27249a8ad4b2c013ef4ae05a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public HistorySaveDialog (MainFrame frame)", "signatureAfterChange": "      public HistorySaveDialog (MainFrame frame)", "diff": ["+    _textArea.setFont(DrJava.CONFIG.getSetting(OptionConstants.FONT_MAIN));", "-    scrollWrapper.add(new JLabel(\"Make your editing changes, and then click \\\"Save\\\".\"),BorderLayout.NORTH);", "+    scrollWrapper.add(new JLabel(\"Make any changes to the history, and then click \\\"Save\\\".\"),BorderLayout.NORTH);", "-    _buttonPanel.add(_cancelButton);", "+    _buttonPanel.add(_cancelButton);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67d38fc01dd700fbb1219566a4738171", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Void forInnerInterfaceDef(InnerInterfaceDef that)", "signatureAfterChange": "   public Void forInnerInterfaceDef(InnerInterfaceDef that)", "diff": ["-    System.err.println(\"***Signalling local interface error\");", "+//    System.err.println(\"***Signalling local interface error\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67d5ed765d1867d60c62353650f91160", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ModelList.java", "commitBeforeChange": "28c4be6b04d5867405916840b451c47e4acad060", "commitAfterChange": "db16e322f21576ce25b97ab99611f7c7362cef3e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t\tprivate Iterator(Iterator iter)", "signatureAfterChange": " \t\tprivate Iterator(Iterator iter)", "diff": ["-\t\t\t\tModelList.this._listeners.add(this);", "+\t\t\t\tModelList.this.addListener(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67d69669803374694250a120e41256f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   private ModifiersAndVisibility _createMav(int flags)", "signatureAfterChange": "   private ModifiersAndVisibility _createMav(int flags)", "diff": ["-    return new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, strings.toArray(new String[strings.size()]));", "+    return new ModifiersAndVisibility(SourceInfo.NO_INFO, strings.toArray(new String[strings.size()]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67e0f2234419d4f150d57d09bd1dd626", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/InterpreterException.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public SourceInformation getSourceInformation()", "signatureAfterChange": "   public SourceInfo getSourceInfo()", "diff": ["-     */", "-    public SourceInformation getSourceInformation() {", "-\treturn sourceInformation;", "-    }", "+   */", "+  public SourceInfo getSourceInfo() {", "+    return sourceInfo;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67f4907b08e87ba6e3690b17dbbf31a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 382, "methodNumberAfterChange": 383, "signatureBeforeChange": "    final private boolean jj_3R_317()", "signatureAfterChange": "    final private boolean jj_3R_321()", "diff": ["-", "-  final private boolean jj_3R_317() {", "-    if (jj_scan_token(DO)) return true;", "-    if (jj_3R_280()) return true;", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_105()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "+", "+  final private boolean jj_3R_321() {", "+    if (jj_scan_token(DO)) return true;", "+    if (jj_3R_287()) return true;", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_107()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67f88b218cbe8643ecfab15573e99be0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsController.java", "commitBeforeChange": "216fad0aa8523dbc9402b5e83d2d0e4e9e0fc64e", "commitAfterChange": "4297ff328013eaae7e900c94d6d5500e0fe9b17c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   void moveToEnd()", "signatureAfterChange": "   void moveToEnd()", "diff": ["+\t_view.getTextPane().showSelection();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68009ab8d6dcc2be738fb4f7e29720dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "93940c21f6995f648e815e21c209f78be7209afc", "commitAfterChange": "a81421c85ea0de5b8b8c763de6071719d4028205", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "   public void hourglassOff()", "signatureAfterChange": "   public void hourglassOff()", "diff": ["+    _currentDefPane.setEditable(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "680e849ae6c423d4b1724746ea3dd346", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 630, "methodNumberAfterChange": 628, "signatureBeforeChange": "    final private boolean jj_3R_79()", "signatureAfterChange": "    final private boolean jj_3R_79()", "diff": ["-    if (jj_3R_111()) {", "+    if (jj_3R_114()) {", "-    if (jj_3R_112()) return true;", "+    if (jj_3R_115()) return true;", "-      if (jj_3R_113()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_116()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6825d34c739b3f4d66a1c0ef5a4bf13b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 610, "methodNumberAfterChange": 609, "signatureBeforeChange": "    final private boolean jj_3R_134()", "signatureAfterChange": "    final private boolean jj_3R_137()", "diff": ["-  final private boolean jj_3R_134() {", "+  final private boolean jj_3R_137() {", "-    if (jj_3_40()) jj_scanpos = xsp;", "+    if (jj_3_41()) jj_scanpos = xsp;", "-    if (jj_3R_102()) return true;", "+    if (jj_3R_103()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "684a9d392483d471683de9a4a3fd2fd2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 113, "signatureBeforeChange": "   private JMenu _setUpDebugMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpDebugMenu(int mask)", "diff": ["-    /*debugMenu.add(new AbstractAction( \"Turn on debugger\") {", "-      public void actionPerformed(ActionEvent ae) {", "-        try {", "-        _model.getDebugManager().startup();", "-        }", "-        catch (DebugException de) {", "-          // couldn't load DM", "-        }", "-      }", "-    });*/", "-    ", "-    _printBreakpointsMenuItem = debugMenu.add(_printBreakpointsAction);", "+    //_printBreakpointsMenuItem = debugMenu.add(_printBreakpointsAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "684da9a21010b9a0be0ca23d9032e08a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private void compileMethod(MethodDeclaration ast)", "signatureAfterChange": "      private void compileMethod(MethodDeclaration ast)", "diff": ["-      emitUnbox(mv, returnT, stack);", "+      emitConvert(mv, returnT, stack);", "-        @Override public void forClassType(ClassType t) {", "-          // The bytecode verifier requires this cast", "-          mv.visitTypeInsn(CHECKCAST, className(t.ofClass()));", "-          mv.visitInsn(ARETURN);", "-        }", "+        @Override public void forClassType(ClassType t) { mv.visitInsn(ARETURN); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68699f3caf812f8702dd04dd0760aa5f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "fb266d92ba9efd43e20ccabcb8837490fbeddaea", "commitAfterChange": "9b317c4ea1656d56bf74b4b1688b4337b5b40277", "methodNumberBeforeChange": 193, "methodNumberAfterChange": 193, "signatureBeforeChange": "   public List<OpenDefinitionsDocument> getOpenDefinitionsDocuments()", "signatureAfterChange": "   public List<OpenDefinitionsDocument> getOpenDefinitionsDocuments()", "diff": ["-   */", "+    */", "-      for (OpenDefinitionsDocument doc: _documentsRepos) { docs.add(doc); }", "+      for (OpenDefinitionsDocument doc: _documentsRepos.values()) { docs.add(doc); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "687dc7c4af72ec73633d35fffd28f9de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b6bfdc97713285768c8b922127b436d974f9f1e4", "commitAfterChange": "25355ecd0bc01ef2920944ee4f7366c5c45c1e55", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testInterpretCurrentInteractionWithIncompleteInput() throws EditDocumentException, InterruptedException,     RemoteException", "signatureAfterChange": "      public void testInterpretCurrentInteractionWithIncompleteInput() throws EditDocumentException, InterruptedException,     RemoteException", "diff": ["+    _log.log(\"testInterpretCurrentInteractionWithIncompleteInput ended\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68831a13d3e4f2428e416c27e16f1092", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 452, "methodNumberAfterChange": 615, "signatureBeforeChange": "    final private boolean jj_3R_372()", "signatureAfterChange": "    final private boolean jj_3R_374()", "diff": ["-  final private boolean jj_3R_372() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_166()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_337()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_374() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_167()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_339()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6899a33b0a09bbd9fe510543930bbbe9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": "   public void dispose()", "signatureAfterChange": "   public void dispose()", "diff": ["-", "+    ", "-    try {", "-      Utilities.invokeAndWait(new Runnable() { ", "-        public void run() { _documentNavigator.clear(); }", "-      });", "-    }", "-    catch(InterruptedException e) { throw new UnexpectedException(e); }", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { _documentNavigator.clear(); }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "689fd359d02817d17a96edb0b0d0efdb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "a452bc1c75053221683fa7723a55972e27a5b54c", "commitAfterChange": "9bce8671af84f7e65989f2592fb3cf5b37102c42", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   private FindResult _findNextInDocSegment(final OpenDefinitionsDocument doc, final int start, final int origLen,                                             final boolean wrapped, final boolean allWrapped)", "signatureAfterChange": "   private FindResult _findNextInDocSegment(final OpenDefinitionsDocument doc, final int start, final int origLen,                                             final boolean wrapped, final boolean allWrapped)", "diff": ["+    assert start > -1;", "+    ", "+          ", "-//        Utilities.show(\"Finished iteration with text = \" + text + \"; len = \" + len);", "+//        _log.log(\"Finished iteration with text = \" + text + \"; len = \" + len + \"; foundLocation = \" + foundLocation);", "+        assert foundLocation > -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68a1f6d6f5aa49d57c602e590c9b8e7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "a84367d6c7dd279d0237f04d04b6df32e0ca3dea", "commitAfterChange": "e0bd33385fe12c251b9b7a0e7bbf6a1bd4867d62", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void dispose()", "signatureAfterChange": "   public void dispose()", "diff": ["-    try { _jvmStarter.join(); } // some tests were reach this point before _jvmStarter has completed", "-    catch (InterruptedException e) { throw new UnexpectedException(e); }", "+    ensureJVMStarterFinished();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68b16f0308d66c45dad120bc179c5330", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "2707043a47325658db92e0290e695128c6817bba", "commitAfterChange": "0c506ac270d6b542eb2c43fb49629be8c2634151", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void setFileGroupingState(FileGroupingState state)", "signatureAfterChange": "   public void setFileGroupingState(FileGroupingState state)", "diff": ["+    _notifier.projectBuildDirChanged();", "+    _notifier.projectModified();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68bc1dd935d11e5fe43c2bff07bf6fa4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 582, "methodNumberAfterChange": 297, "signatureBeforeChange": "    final private boolean jj_3R_574()", "signatureAfterChange": "    final private boolean jj_3R_399()", "diff": ["+  final private boolean jj_3R_399() {", "+    if (jj_3R_111()) return true;", "+      if (jj_3_64()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_574() {", "-    if (jj_3R_288()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_580()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68f7ae90bde8f6b39b4158766e17b22b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": "          public void waitInteractionDone() throws InterruptedException", "signatureAfterChange": "          public void waitInteractionDone()", "diff": ["-    public void waitInteractionDone() throws InterruptedException {", "-      synchronized(_interactionLock) { while (! _interactionDone) _interactionLock.wait(); }", "+    public void waitInteractionDone() {", "+      assertTrue(\"Interaction did not complete before timeout\",", "+                 _interactionDone.attemptEnsureSignaled(WAIT_TIMEOUT));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "690425f7f69470e25a2df6b5af25256e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 396, "methodNumberAfterChange": 394, "signatureBeforeChange": "    final private boolean jj_3R_314()", "signatureAfterChange": "    final private boolean jj_3R_318()", "diff": ["-  final private boolean jj_3R_314() {", "-    if (jj_scan_token(SWITCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_105()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(LBRACE)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_451()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(RBRACE)) return true;", "+", "+  final private boolean jj_3R_318() {", "+    if (jj_scan_token(SWITCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_107()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(LBRACE)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_453()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(RBRACE)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69167581bbe4d3a6d0e96f4da0fc8b05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "098be4c27233835145531c86355bc697a3b62bfd", "commitAfterChange": "28db8fb2942dc00cad50f5244fe215d573867721", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public BraceInfo _getLineEnclosingBrace()", "signatureAfterChange": "   public BraceInfo _getLineEnclosingBrace()", "diff": ["+//    System.err.println(\"_getLineEnclosingBrace.distToStart = \" + distToStart);", "-    int relDistance = distToStart + 1;  // distance to start of current line (right edge of preceding newline)", "-    int distance = relDistance;", "+    int relDistance = distToStart + 1;  // distance to end of preceding line", "+    int distance = 1;                   // distance from right edge of newline", "+//    System.err.println(\"After moving to start, reduced model = \" + _parent.simpleString());", "+//      System.err.println(\"Adding \" + size + \" to dist for token \" + curToken);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "691cb171fa91f915871c7d54e18bc6f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 791, "methodNumberAfterChange": 797, "signatureBeforeChange": "    final private boolean jj_3R_523()", "signatureAfterChange": "    final private boolean jj_3R_526()", "diff": ["-", "-  final private boolean jj_3R_523() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_539()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_540()) jj_scanpos = xsp;", "-    return false;", "-  }", "+  final private boolean jj_3R_526() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_542()) { jj_scanpos = xsp; break; }", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_3R_543()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6924ab0d90599e13814a4ab1d4d4236d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyAdvancedVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          public void testForConcreteMethodDefDoFirst()", "signatureAfterChange": "          public void testForConcreteMethodDefDoFirst()", "diff": ["-      ConcreteMethodDef cmd = new ConcreteMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      ConcreteMethodDef cmd = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "-                                                    new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                                    new Word(JExprParser.NO_SOURCE_INFO, \"methodName\"),", "+                                                    new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                                    new Word(SourceInfo.NO_INFO, \"methodName\"),", "-                                                    new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "693359abd3b3df93ab53dc7bf803db31", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public void testSaveClearAndLoadHistory() throws BadLocationException,      InterruptedException, IOException", "signatureAfterChange": "   public void testSaveClearAndLoadHistory() throws DocumentAdapterException,      BadLocationException, InterruptedException, IOException", "diff": ["-  public void testSaveClearAndLoadHistory() throws BadLocationException, ", "-    InterruptedException, IOException", "+  public void testSaveClearAndLoadHistory() throws DocumentAdapterException, ", "+    BadLocationException, InterruptedException, IOException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "693f407c6cf8a61b4b9b46f715928bb5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 375, "methodNumberAfterChange": 376, "signatureBeforeChange": "          public void fileNotFound(File f)", "signatureAfterChange": "          public void fileNotFound(File f)", "diff": ["+      _model.setProjectChanged(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6943ca82d163273bd6c57c2d52ace1db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testLanguageLevelJUnitErrorLine() throws Exception", "signatureAfterChange": "    public void testLanguageLevelJUnitErrorLine() throws Exception", "diff": ["-    Utilities.clearEventQueue();", "+    ", "+", "+    listener.waitCompileDone();", "-    _runJUnit(doc);", "+    listener.runJUnit(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6958cca5b2432c83147736ea805c55f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e69ba1eec2cb635c70a9fe0a1398fd66d2a7ddb9", "commitAfterChange": "521b5a6ad4ead519c4e7d942bbf2dde99a3dae4b", "methodNumberBeforeChange": 282, "methodNumberAfterChange": 282, "signatureBeforeChange": "      public void openProject(FileOpenSelector projectSelector)", "signatureAfterChange": "      public void openProject(FileOpenSelector projectSelector)", "diff": ["-    try {", "-      hourglassOn();", "-      final File[] file = projectSelector.getFiles();", "-      if (file.length < 1)", "+    try { ", "+      final File[] files = projectSelector.getFiles();", "+      if (files.length < 1)", "+      final File file = files[0];", "-      // make sure there are no open projects", "-      if (!_model.isProjectActive() || (_model.isProjectActive() && _closeProject())) _openProjectHelper(file[0]);", "+      updateStatusField(\"Opening project \" + file);", "+      ", "+      try {", "+        hourglassOn();", "+        // make sure there are no open projects", "+        if (!_model.isProjectActive() || (_model.isProjectActive() && _closeProject())) _openProjectHelper(file);", "+      }", "+      catch(Exception e) { e.printStackTrace(System.out); }", "+      finally { hourglassOff(); } ", "-    catch(OperationCanceledException oce) {", "-      /* do nothing, we just won't open anything */", "-    }", "-    catch(Exception e) { e.printStackTrace(System.out); }", "-    finally { hourglassOff(); }    ", "-  }", "+    catch(OperationCanceledException oce) { /* do nothing, we just won't open anything */ }", "+   ", "+  }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "696d1f69da6686201fcd6decf32955e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "f68f43e5a680bb235f87f6125c6c0de6d15a12f4", "commitAfterChange": "2526c65e608c685b2ba6cdb8c1784ca704d1153b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "diff": ["-                                                  \"Whether to also display fully-qualified class names in the \\\"Go to File\\\" dialog.\\n\"+", "-                                                         \"Enabling this option on network drives might cause the dialog to display after a slight delay.\"));", "+                                                  \"<html>Whether to also display fully-qualified class names in the \\\"Go to File\\\" dialog.<br>\"+", "+                                                         \"Enabling this option on network drives might cause the dialog to display after a slight delay.</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_COMPLETE_SCAN_CLASS_FILES,", "-                                                  \"Scan Class Files For Auto-Completion After Each Compile\", this,", "-                                                  \"Whether to scan the class files after a compile to generate auto-completion class names.\\n\"+", "-                                                         \"Enabling this option will slow compiles down.\"));", "+    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_COMPLETE_SCAN_CLASS_FILES,", "+                                                  \"Scan Class Files After Each Compile For Auto-Completion and Auto-Import\", this,", "+                                                  \"<html>Whether to scan the class files after a compile to generate class names<br>\"+", "+                                                         \"used for auto-completion and auto-import.<br>\"+", "+                                                         \"Enabling this option will slow compiles down.</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "698369acc34bcc46729882c1f1125119", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 380, "signatureBeforeChange": "          public void indentLines(int selStart, int selEnd)", "signatureAfterChange": "          public void indentLines(int selStart, int selEnd)", "diff": ["-      doc.acquireWriteLock();", "-      try { doc.indentLines(selStart, selEnd); }", "-      finally { doc.releaseWriteLock(); }", "+//      doc.acquireWriteLock();", "+//      try { ", "+      doc.indentLines(selStart, selEnd); ", "+//      }", "+//      finally { doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69877f422f94332cec0990970d1e5bfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 388, "methodNumberAfterChange": 386, "signatureBeforeChange": "    final private boolean jj_3R_206()", "signatureAfterChange": "    final private boolean jj_3R_207()", "diff": ["-  final private boolean jj_3R_206() {", "-    if (jj_3R_253()) return true;", "+  final private boolean jj_3R_207() {", "+    if (jj_3R_254()) return true;", "-      if (jj_3R_326()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_327()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69890f92fc1f3691fa9099b04afd7440", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "17590567cb9f06269b33249dad955c39164a9028", "commitAfterChange": "6222fd84e3aa6c7b8b3da9d73ccf7a9a3370487b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testStaticWatches() throws Exception", "signatureAfterChange": "   public void testStaticWatches() throws Exception", "diff": ["-      System.out.println(\"----teststaticWatches----\");", "+      System.out.println(\"----testStaticWatches----\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "699577d48566c022f5bce3696dd14bc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 622, "methodNumberAfterChange": 326, "signatureBeforeChange": "    final private boolean jj_3R_87()", "signatureAfterChange": "    final private boolean jj_3R_387()", "diff": ["+  final private boolean jj_3R_387() {", "+    if (jj_3R_407()) {", "+    if (jj_3R_408()) return true;", "-  final private boolean jj_3R_87() {", "-    if (jj_3R_129()) {", "-    if (jj_3R_130()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69a6ce290d7c26d81da99f0bdf31d240", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StreamRedirectorTest.java", "commitBeforeChange": "9390586c4a81d420b2ce238c494fbf61cf010b84", "commitAfterChange": "d187ef0ae751d72da55c4bc4f82be93731c1e46f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testMultiLineInput() throws IOException", "signatureAfterChange": "   public void testMultiLineInput() throws IOException", "diff": ["-    catch(RuntimeException ex) {", "-      // correct behavior", "+    catch(RuntimeException re) {", "+      assertEquals(\"Should have thrown correct exception.\",", "+                   \"_getInput() has already been called!\", re.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69a96ece4d9182aaa508d191f8fa032b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 395, "methodNumberAfterChange": 379, "signatureBeforeChange": "    final private boolean jj_3R_303()", "signatureAfterChange": "    final private boolean jj_3R_306()", "diff": ["-  final private boolean jj_3R_303() {", "-    if (jj_3R_322()) return true;", "+  final private boolean jj_3R_306() {", "+    if (jj_3R_325()) return true;", "-      if (jj_3R_347()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_350()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69ab6388fb2f7e45e40301ad35de4e72", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DynamicJavaAdapter.java", "commitBeforeChange": "42453ef03053968f9ca85cc1f502a43bd9378c76", "commitAfterChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public DynamicJavaAdapter()", "signatureAfterChange": "    public DynamicJavaAdapter()", "diff": ["-    _djInterpreter.setAccessible(true);", "+    //_djInterpreter.setAccessible(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b54aa3b364e1c621f351a6a6a51c93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6572078744d5462302a5712b2d3e4dd3c67ea5fb", "commitAfterChange": "123a2bf7d0ed947a362f9d9fd67ccb6733aff62d", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "          public void compileEnded()", "signatureAfterChange": "          public void compileEnded()", "diff": ["+      _compileButton.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69d13f1c890be2fc2664520d58f286a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileIOTest.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testClassFileSynchronization()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronization()     throws BadLocationException, IOException, InterruptedException", "diff": ["-               doc.getDocument().getCachedClassFile() == null);", "+               doc.getCachedClassFile() == null);", "-    doc.getDocument().insertString(0, \"hi\", null);", "+    doc.insertString(0, \"hi\", null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69de5dd20b68b026de9ab647bc0ae392", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": "    private void _threwException(Throwable t)", "signatureAfterChange": "   private void _threwException(Throwable t)", "diff": ["-", "-  private void _threwException(Throwable t) {", "-    StringWriter writer = new StringWriter();", "-    t.printStackTrace(new PrintWriter(writer));", "-", "-    try {", "-      threwException(t.getClass().getName(), t.getMessage(), writer.toString());", "-    }", "-    catch (RemoteException re) {", "-      // impossible, we're not calling it remotely!", "-      throw new edu.rice.cs.util.UnexpectedException(re);", "-    }", "-  }", "+   */", "+  private void _threwException(Throwable t) {", "+    StringWriter writer = new StringWriter();", "+    t.printStackTrace(new PrintWriter(writer));", "+", "+    // model may be null if we're running a test", "+    if (_model != null) {", "+      _model.replThrewException(t.getClass().getName(),", "+                                t.getMessage(),", "+                                writer.toString());", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69df3494d077036e0eb0ec78b20ecd0d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7228cea597c372946661a7e1f1db20fd24b9dee1", "commitAfterChange": "8bb2649bd077e2bf6ccaf611ff49da8ad083e7b7", "methodNumberBeforeChange": 477, "methodNumberAfterChange": 482, "signatureBeforeChange": "   public void scrollToDocumentAndOffset(final OpenDefinitionsDocument doc, final int offset,                                          final boolean shouldHighlight, final boolean shouldAddToHistory)", "signatureAfterChange": "   public void scrollToDocumentAndOffset(final OpenDefinitionsDocument doc, final int offset,                                          final boolean shouldHighlight, final boolean shouldAddToHistory)", "diff": ["-", "-        if (shouldHighlight) {", "+        ", "+        if (_showDebugger) {", "+//          System.err.println(\"Showing Interactions Tab\" );", "+          _updateDebugStatus();", "-        _updateDebugStatus();", "-     * Consequently, we need to use SwingUtilities.invokeLater if ! toSameDoc. */", "-    if (toSameDoc) Utilities.invokeLater(command);  ", "-    else SwingUtilities.invokeLater(command);", "+     * Consequently, we need to use EventQueue.invokeLater if ! toSameDoc. */", "+    /* if (toSameDoc) Utilities.invokeLater(command);  ", "+    else */ EventQueue.invokeLater(command);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69e6fa77002991fcdf659a53306bfb6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 395, "methodNumberAfterChange": 393, "signatureBeforeChange": "    final private boolean jj_3R_349()", "signatureAfterChange": "    final private boolean jj_3R_350()", "diff": ["-", "-  final private boolean jj_3R_349() {", "-    if (jj_3R_136()) return true;", "+  final private boolean jj_3R_350() {", "+    if (jj_3R_137()) return true;", "-    if (jj_3R_363()) jj_scanpos = xsp;", "+    if (jj_3R_364()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69fce81440c93b1c67f8925562806bb1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public boolean _indentLine(int reason)", "signatureAfterChange": "   public boolean _indentLine(int reason)", "diff": ["-  public boolean _indentLine(int reason) { return _indenter.indent(this, reason); }", "+  public boolean _indentLine(int reason) { return getIndenter().indent(this, reason); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a00b4fa6c8043ec19ee54908cbda0f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "875709ea758d694dda7555b8eeb2e15fa58e98c5", "commitAfterChange": "d29db164117e7452d6023bc6a73abe9d53f7d65b", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 36, "signatureBeforeChange": "   @Override public Type visit(TypeExpression node)", "signatureAfterChange": "     @Override public Type visit(TypeExpression node)", "diff": ["-   */", "-  @Override public Type visit(TypeExpression node) {", "-    Type t = node.getType().acceptVisitor(this);", "-    setErasedType(node.getType(), ts.erasedClass(t));", "+     */", "+    @Override public Type visit(TypeExpression node) {", "+      Type t = checkTypeName(node.getType());", "+      setErasedType(node.getType(), ts.erasedClass(t));", "+      ", "+      Type targ = t;", "+      if (ts.isEqual(t, TypeSystem.VOID)) { targ = TypeSystem.VOID_CLASS; }", "+      else if (!ts.isReference(t)) {", "+        Expression pseudoExp = TypeUtil.makeEmptyExpression(node.getType());", "+        setType(pseudoExp, t);", "+        try {", "+          Expression boxedPseudoExp = ts.makeReference(pseudoExp);", "+          targ = getType(boxedPseudoExp);", "+        }", "+        catch (UnsupportedConversionException e) {", "+          throw new ExecutionError(\"reference.type\", node);", "+        }", "+      }", "+      return setType(node, ts.reflectionClassOf(targ));", "+    }", "-    Type targ = t;", "-    if (ts.isEqual(t, TypeSystem.VOID)) { targ = TypeSystem.VOID_CLASS; }", "-    else if (!ts.isReference(t)) {", "-      Expression pseudoExp = TypeUtil.makeEmptyExpression(node.getType());", "-      setType(pseudoExp, t);", "-        Expression boxedPseudoExp = ts.makeReference(pseudoExp);", "-        targ = getType(boxedPseudoExp);", "-        throw new ExecutionError(\"reference.type\", node);", "-      }", "-    }", "-    return setType(node, ts.reflectionClassOf(targ));", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a01210f901a654b90a28092c503e711", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/KeyStrokeOptionTest.java", "commitBeforeChange": "45f11437d24a95250c66e3a94437d7de4d6682c1", "commitAfterChange": "97bb3c70440590a053a3f2aff064ff2a0f94447e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testParse()", "signatureAfterChange": "      public void testParse()", "diff": ["+      assertEquals(KeyStrokeOption.NULL_KEYSTROKE,", "+                   io.parse(\"<none>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a32977408954ba5dd2381c67fb3f4b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 752, "methodNumberAfterChange": 730, "signatureBeforeChange": "    final private boolean jj_3R_451()", "signatureAfterChange": "    final private boolean jj_3R_353()", "diff": ["+", "+  final private boolean jj_3R_353() {", "+    if (jj_3R_272()) return true;", "+    if (jj_3R_116()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_451() {", "-    if (jj_3R_311()) return true;", "-    if (jj_3R_115()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a42572d890d978d86e3c16be6cabecc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 677, "methodNumberAfterChange": 505, "signatureBeforeChange": "    final private boolean jj_3R_467()", "signatureAfterChange": "    final private boolean jj_3R_469()", "diff": ["+", "+  final private boolean jj_3R_469() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_472()) { jj_scanpos = xsp; break; }", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_3R_473()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_467() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_470()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_471()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a5168e0240a9b960f64a19e9d6458b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsListPanel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-      _region.getDocument().acquireReadLock();", "-      try {", "+//      _region.getDocument().acquireReadLock();", "+//      try {", "-      } finally { _region.getDocument().releaseReadLock(); }", "+//      } ", "+//      finally { _region.getDocument().releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a64d0d1dd4b0bf96dc95f7a9da8cb6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 158, "signatureBeforeChange": "    final private boolean jj_3R_125()", "signatureAfterChange": "    final private boolean jj_3R_122()", "diff": ["-", "-  final private boolean jj_3R_125() {", "-    if (jj_scan_token(LBRACE)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_220()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(85)) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(81)) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_221()) return true;", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_122() {", "+    if (jj_scan_token(LBRACE)) return true;", "+    if (jj_3R_217()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(85)) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(81)) {", "+    if (jj_3R_218()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a6d30b0f1cc75c9e32280f2a842f438", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "ca02ff4600fd67c877e0699a55ea8bfbf72efbf0", "commitAfterChange": "cf96eb967b0121c0683cbf9a30a0ed919bd996d9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void setUp()", "signatureAfterChange": "   public void setUp()", "diff": ["+    configIndent = ConfigurationTool.CONFIG.getSetting(OptionConstants.INDENT_LEVEL);", "+    ConfigurationTool.CONFIG.setSetting(OptionConstants.INDENT_LEVEL,indentLevel);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a6fc3f578e87c4ed7648c64d563e90d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessOptionsTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testCompileWithJavaAssert()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileWithJavaAssert()     throws BadLocationException, IOException, InterruptedException", "diff": ["-      doc.startCompile();", "+      listener.compile(doc);", "-        doc.startCompile();", "+        listener2.compile(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a7104fcb25bc22ae41d62bf06cd1f4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandler.java", "commitBeforeChange": "84e7921bd32edcfceaf3be1ebd8104fc4d274516", "commitAfterChange": "cd663e9bf0c95c5bb5b12db38fbcd366660d665e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void _handleThreadDeathEvent(ThreadDeathEvent e)", "signatureAfterChange": "      private void _handleThreadDeathEvent(ThreadDeathEvent e)", "diff": ["+  ", "+    else {", "+      _manager.nonCurrThreadDied(new DebugThreadData(e.thread()));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a78b9a748e639eaeb7029890ecd1d0c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "51e8ea430c01509f87d3823d7a75f90d00225716", "commitAfterChange": "5425ae0e836a7ee6f00ac774f834187d377d72ad", "methodNumberBeforeChange": 311, "methodNumberAfterChange": 313, "signatureBeforeChange": "   private void _setDebugMenuItemsEnabled(boolean enabled)", "signatureAfterChange": "   private void _setDebugMenuItemsEnabled(boolean enabled)", "diff": ["-    _toggleBreakpointAction.setEnabled(enabled);", "-    //_printBreakpointsAction.setEnabled(enabled);", "-    _clearAllBreakpointsAction.setEnabled(enabled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a9d805567eda31948ceac0982d04ab3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "facb31d52d0108009578d6a1708ac1dfc68b98b8", "commitAfterChange": "417b6d282f87d7da5aa7274e065294c3e7058851", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "   private JMenu _setUpToolsMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpToolsMenu(int mask)", "diff": ["-    //toolsMenu.add(_junitAction);", "+    toolsMenu.add(_junitAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ac0d3e44a1af8206bdecbfb06f448fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public int balanceBackward()", "signatureAfterChange": "   public int balanceBackward()", "diff": ["-  public int balanceBackward() { return rmb.balanceBackward(); }", "+  public int balanceBackward() { return getRMB().balanceBackward(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ac0db6e0b7fdc5024e13e704da87e6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 840, "methodNumberAfterChange": 804, "signatureBeforeChange": "    final private boolean jj_3R_341()", "signatureAfterChange": "    final private boolean jj_3R_178()", "diff": ["+    if (jj_scan_token(HOOK)) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_130()) return true;", "-  final private boolean jj_3R_341() {", "-    if (jj_scan_token(HOOK)) return true;", "-    if (jj_3R_105()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_170()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6acda2658f8328b0701ee28d04f55c66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "11e630b08382faca40628146b7f40625d89f190c", "commitAfterChange": "4742de9e9abcc9abfbe963657e41dfd407aaaeee", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 18, "signatureBeforeChange": "   private void _remove()", "signatureAfterChange": "   private void _remove()", "diff": ["-      _model.getFindResultsManager().removeRegion(r);", "+      _regionManager.removeRegion(r);", "+    if (_regionManager.getRegions().size()==0) { _close(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6adbd969faf55873929a6368df011a27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/FileOptionComponentTest.java", "commitBeforeChange": "331da9dae5ca8d07aef3df8e995cb58d0f6f24d7", "commitAfterChange": "ad6842e7f3f5b3d0f8c5827298c4ec26a70a9f28", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void testApplyThenResetDefault()", "signatureAfterChange": "    public void testApplyThenResetDefault()", "diff": ["+    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6adc7ad6c8aa6579c92f06dd3401a930", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TryCatchBodyTypeChecker.java", "commitBeforeChange": "2b3538f4ec792670cfb28bc41a5aee6f4c8718c0", "commitAfterChange": "c302d1db72cb508e0cec30d24e39d48cce8fd663", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "          public void testCompareThrownAndCaught()", "signatureAfterChange": "          public void testCompareThrownAndCaught()", "diff": ["-      System.out.println(\"thrown = \" + thrown);", "+//      System.err.println(\"thrown = \" + thrown);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b04dae876b1fd7b673cb554c576a136", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 826, "methodNumberAfterChange": 510, "signatureBeforeChange": "    final private boolean jj_3R_600()", "signatureAfterChange": "    final private boolean jj_3R_587()", "diff": ["+", "+  final private boolean jj_3R_587() {", "+    if (jj_3R_99()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_39()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_600() {", "-    if (jj_3R_92()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_610()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b068f1802cf24665acc7c7a307e36cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public void notifyActive()", "signatureAfterChange": "   public void notifyActive()", "diff": ["-    int len = getDJDocument().getLength();", "-    if (len < _position) {", "+    ", "+    _doc.acquireWriteLock();", "+    int len = _doc.getLength();", "+    if (len < _position || len < _selEnd) {", "-", "-    _doc.acquireWriteLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b1248f453a571834fb467d003841760", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 264, "methodNumberAfterChange": 231, "signatureBeforeChange": "    final private boolean jj_3R_177()", "signatureAfterChange": "    final private boolean jj_3R_174()", "diff": ["-", "-  final private boolean jj_3R_177() {", "-    if (jj_3R_38()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_206()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_174() {", "+    if (jj_3R_35()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_203()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b1c471accf7055d45bcd9ca1219a5d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "50f8ddd53ad051b199f7d13e98934938f25bd2ae", "commitAfterChange": "963348ced7921c9036c4d0267a79aecf5dc0da09", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testRunJUnitUnsavedButSaveWhenAsked()     throws Exception", "signatureAfterChange": "   public void testRunJUnitUnsavedButSaveWhenAsked()     throws Exception", "diff": ["-      public void saveBeforeProceeding(GlobalModelListener.SaveReason reason) {", "+      public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason) {", "-        saveBeforeProceedingCount++;", "+        saveAllBeforeProceedingCount++;", "-        assertSaveBeforeProceedingCount(0);", "+        assertSaveAllBeforeProceedingCount(0);", "-    listener.assertSaveBeforeProceedingCount(1);", "+    listener.assertSaveAllBeforeProceedingCount(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b219a49a1663064a8c7cf13c5328b7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 508, "methodNumberAfterChange": 503, "signatureBeforeChange": "    final private boolean jj_3R_471()", "signatureAfterChange": "    final private boolean jj_3R_473()", "diff": ["-", "-  final private boolean jj_3R_471() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_474()) { jj_scanpos = xsp; break; }", "-    xsp = jj_scanpos;", "-    if (jj_3R_475()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_473() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_476()) { jj_scanpos = xsp; break; }", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_3R_477()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b3c619e9f5d9782d65283d89600f25c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "6222fd84e3aa6c7b8b3da9d73ccf7a9a3370487b", "commitAfterChange": "a6f0da7db6181f31273ee7bf3cfd92ed3fabb503", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void _setupResourceLocPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupResourceLocPanel(ConfigPanel panel)", "diff": ["+    FileOptionComponent browserLoc =", "+      new FileOptionComponent(OptionConstants.BROWSER_FILE,", "+                              \"Web Browser\", this,", "+                              \"<html>Location of a web browser to use for Javadoc and Help links.<br>\" +", "+                              \"If left blank, only the Web Browser Command will be used.<br>\" +", "+                              \"This is not necessary if a default browser is available on your system.\",", "+                              _browserChooser);", "+    panel.addComponent(browserLoc);", "+    ", "+    StringOptionComponent browserCommand =", "+      new StringOptionComponent(OptionConstants.BROWSER_STRING,", "+                              \"Web Browser Command\", this,", "+                              \"<html>Command to send to the web browser to view a web location.<br>\" +", "+                              \"The string &lt;URL&gt; will be replaced with the URL address.<br>\" +", "+                              \"This is not necessary if a default browser is available on your system.\");", "+    panel.addComponent(browserCommand);", "+    ", "-    ", "-    FileOptionComponent browserLoc =", "-      new FileOptionComponent(OptionConstants.BROWSER_FILE,", "-                              \"Web Browser Location\", this,", "-                              \"<html>Location of a web browser to use for Javadoc and Help links.<br>\" +", "-                              \"If left blank, only the Web Browser Command will be used.<br>\" +", "-                              \"This is not necessary if a default is available on your system.\",", "-                              _browserChooser);", "-    panel.addComponent(browserLoc);", "-    ", "-    StringOptionComponent browserCommand =", "-      new StringOptionComponent(OptionConstants.BROWSER_STRING,", "-                              \"Web Browser Command\", this,", "-                              \"<html>Command to send to the web browser to view a web location.<br>\" +", "-                              \"The string &lt;URL&gt; will be replaced with the URL address.<br>\" +", "-                              \"This is not necessary if a default is available on your system.\");", "-    panel.addComponent(browserCommand);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b3cb17e6395c34b7a1f4f8d7b598f53", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 22, "signatureBeforeChange": "      public JPanel _workDirectoryPanel()", "signatureAfterChange": "      public JPanel _workDirectoryPanel()", "diff": ["-    dirChooser.setSelectedDirectory(_getWorkDir());", "+    dirChooser.setSelectedFile(_getWorkDir());", "-    dirChooser.setEditable(true);", "+//    dirChooser.setEditable(true);", "+    ", "-      public void insertUpdate(DocumentEvent e) {", "-        _applyButton.setEnabled(true);", "-      }", "-      public void removeUpdate(DocumentEvent e) {", "-        _applyButton.setEnabled(true);", "-      }", "-      public void changedUpdate(DocumentEvent e) {", "-        _applyButton.setEnabled(true);", "-      }", "+      public void insertUpdate(DocumentEvent e) { _applyButton.setEnabled(true); }", "+      public void removeUpdate(DocumentEvent e) { _applyButton.setEnabled(true); }", "+      public void changedUpdate(DocumentEvent e) { _applyButton.setEnabled(true); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b3f3aae9b77ef563c527ea7b935f46d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/BraceTest.java", "commitBeforeChange": "a454f078c900245b418db671925f6207d6f1ff60", "commitAfterChange": "533552b81f1020221bb3fe1df1f370a4168db503", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testMakeBraceSuccess()", "signatureAfterChange": "   public void testMakeBraceSuccess()", "diff": ["-    Brace brace = Brace.MakeBrace(\"{\", ReducedToken.FREE);", "+    Brace brace = Brace.MakeBrace(\"{\", FREE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b63e4a706409df3a382c4cfcbb25bbd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testWatchLocalVarsFromInnerClass() throws Exception", "signatureAfterChange": "   public void testWatchLocalVarsFromInnerClass() throws Exception", "diff": ["-      System.out.println(\"----testWatchLocalVarsFromInnerClass----\");", "+      printStream.println(\"----testWatchLocalVarsFromInnerClass----\");", "-    _debugger.toggleBreakpoint(doc, index, 7);", "+    _debugger.toggleBreakpoint(doc, index, 7, true);", "+    Utilities.clearEventQueue();", "+    debugListener.assertWatchSetCount(3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b6899482726ba3f7a27dd2cee66d335", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "c916ec3f8333c65c1423a4941944c1bdf676e3b4", "commitAfterChange": "65add9d9f0de9278803d6c9a77b3294a4ab082f3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "    private void _setupFontPanel ( ConfigPanel panel)", "signatureAfterChange": "    private void _setupFontPanel ( ConfigPanel panel)", "diff": ["-    panel.addComponent( new BooleanOptionComponent ( OptionConstants.TEXT_ANTIALIAS,", "-                                                    \"Use anti-aliased text in Definitions\",", "-                                                    this));", "+    if (CodeStatus.DEVELOPMENT) {", "+      panel.addComponent( new BooleanOptionComponent ( OptionConstants.TEXT_ANTIALIAS,", "+                                                      \"Use anti-aliased text in Definitions\",", "+                                                      this));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b72be1aa0c725dccfb1dc9edef9168e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 411, "methodNumberAfterChange": 414, "signatureBeforeChange": "    final private boolean jj_3R_137()", "signatureAfterChange": "    final private boolean jj_3R_138()", "diff": ["-  final private boolean jj_3R_137() {", "+  final private boolean jj_3R_138() {", "-    if (jj_3R_100()) return true;", "+    if (jj_3R_101()) return true;", "-    if (jj_3R_181()) return true;", "+    if (jj_3R_182()) return true;", "+    }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b73193000c938ce81ad852f3b2dc020", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 223, "methodNumberAfterChange": 223, "signatureBeforeChange": "    private void _compile()", "signatureAfterChange": "    private void _compile()", "diff": ["+    final OpenDefinitionsDocument doc = _model.getActiveDocument();", "-        try {", "-          _model.getActiveDocument().startCompile();", "-        }", "-        catch (FileMovedException fme) {", "-          _showFileMovedError(fme);", "-        }", "-        catch (IOException ioe) {", "-          _showIOError(ioe);", "-        }", "+        try { _model.getCompilerModel().compile(doc); }", "+        catch (FileMovedException fme) { _showFileMovedError(fme); }", "+        catch (IOException ioe) { _showIOError(ioe); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b8286753cb0b169fa8369e70b4e7cd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public int balanceForward()", "signatureAfterChange": "   public int balanceForward()", "diff": ["-    int relDistance = 0;", "+    int relDistance;", "-    if (iter.atStart() ||", "-        iter.atFirstItem() ||", "-        !openBraceImmediatelyLeft())", "-    {", "+    if (iter.atStart() || iter.atFirstItem() || !openBraceImmediatelyLeft()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b9af78a20aaae3dab08e60639dbcf9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 288, "methodNumberAfterChange": 270, "signatureBeforeChange": "    final private boolean jj_3R_530()", "signatureAfterChange": "    final private boolean jj_3R_533()", "diff": ["+", "+  final private boolean jj_3R_533() {", "+    if (jj_scan_token(LESS)) return true;", "+    if (jj_3R_209()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_552()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_3R_131()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_530() {", "-    if (jj_scan_token(LESS)) return true;", "-    if (jj_3R_208()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_549()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_3R_131()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bb5579b373c253ff1110ee37eceefa2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "1f215280ffb4deee1474aa0ea630d96d544831f9", "commitAfterChange": "36da33844ba54377479a55c5dc3b578eed405d70", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public boolean isReady()", "signatureAfterChange": "   public boolean isReady()", "diff": ["-    return _isReady;", "+    return _vm != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bb71e959b740a1d2265cf545553cd63", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 533, "methodNumberAfterChange": 533, "signatureBeforeChange": "      private void _setUpPanes()", "signatureAfterChange": "      private void _setUpPanes()", "diff": ["-    JScrollPane defScroll = _defScrollPanes.get(_model.getActiveDocument());", "+//    JScrollPane defScroll = _defScrollPanes.get(_model.getActiveDocument());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bbfe20e8b1df9415d4add64229412f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "7f62f2f9bc3bd568f4385528634c331480fbe08e", "commitAfterChange": "d55b82d942f5baa7bd5bf3a1d9f1f1f9dce04a39", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   protected static void _saveConfig()", "signatureAfterChange": "   protected static void _saveConfig()", "diff": ["-      // for now, do nothing", "+      JOptionPane.showMessageDialog(null,", "+                                    \"Could not save the location of tools.jar in \\n\" +", "+                                    \"the '.drjava' file in your home directory. \\n\" +", "+                                    \"Another process may be using the file.\\n\\n\" + e,", "+                                    \"Could Not Save Changes\",", "+                                    JOptionPane.ERROR_MESSAGE);  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bd51991ca1da690f2d806e33935ac58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 543, "methodNumberAfterChange": 424, "signatureBeforeChange": "    final private boolean jj_3R_193()", "signatureAfterChange": "    final private boolean jj_3R_196()", "diff": ["-  final private boolean jj_3R_193() {", "+", "+  final private boolean jj_3R_196() {", "-    if (jj_3R_266()) return true;", "+    if (jj_3R_270()) return true;", "-    if (jj_3R_102()) return true;", "+    if (jj_3R_105()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6be7c32e526d750043c78b71e99c8751", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "634bad3816e5a89c71c174f08f33c3f80727cfeb", "commitAfterChange": "d1ffac675273323f7a1b9777462d16896d09a1af", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 234, "signatureBeforeChange": "      private void _compileAll()", "signatureAfterChange": "      private void _compileAll()", "diff": ["-    update(getGraphics()); ", "+//    update(getGraphics()); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bedf0d980e3b7b4358d6e6cec9d74f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 334, "methodNumberAfterChange": 735, "signatureBeforeChange": "    final private boolean jj_3R_331()", "signatureAfterChange": "    final private boolean jj_3R_330()", "diff": ["-", "-  final private boolean jj_3R_331() {", "-    if (jj_3R_338()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_353()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_330() {", "+    if (jj_3R_107()) return true;", "+      if (jj_3_77()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bf091cc61f5d6f13156231a85bbea9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "22da2bba7b95020932a8f270ac3cc4c0581bd5d1", "commitAfterChange": "1acb63fa1c578959b54f9766299c6e0a8865f601", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testCloseFiles() throws BadLocationException", "signatureAfterChange": "   public void testCloseFiles() throws BadLocationException", "diff": ["-    clearEventQueue();", "-    clearEventQueue();", "-    clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c09035864e60c2209fc1ec686860218", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2707043a47325658db92e0290e695128c6817bba", "commitAfterChange": "0c506ac270d6b542eb2c43fb49629be8c2634151", "methodNumberBeforeChange": 285, "methodNumberAfterChange": 285, "signatureBeforeChange": "     public void fileClosed(final OpenDefinitionsDocument doc)", "signatureAfterChange": "     public void fileClosed(final OpenDefinitionsDocument doc)", "diff": ["-            _saveProjectAction.setEnabled(true);", "+//            _saveProjectAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c35f13d4c16c9c1558f1a204cc93e03", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "6b9d21c46904df78c4c42153380af1416ff61bab", "commitAfterChange": "7ee1de808f3f616f32f05bbcf5fc74efb00c8d4a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testCaretMovesUpToPromptAfterInsert() throws EditDocumentException", "signatureAfterChange": "   public void testCaretMovesUpToPromptAfterInsert() throws EditDocumentException", "diff": ["+    _controller.setCachedCaretPos(1);", "+    System.err.println(\"caretPos = \" + _pane.getCaretPosition() + \" cached caretPos = 1\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c43d3f881b8fd278f96b68a16d02354", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 115, "signatureBeforeChange": "          public void testForClassImportStatementOnly()", "signatureAfterChange": "          public void testForClassImportStatementOnly()", "diff": ["-      _llv.forClassImportStatementOnly(cis);", "-      assertTrue(\"imported files should contain alpha.beta\", _llv._importedFiles.contains(\"alpha.beta\"));", "-      assertEquals(\"There should be a continuation.\", sd, symbolTable.get(\"alpha.beta\"));", "-      assertTrue(\"It should be in continuations.\", _llv.continuations.containsKey(\"alpha.beta\"));", "+      testLLVisitor.forClassImportStatementOnly(cis);", "+      assertTrue(\"imported files should contain alpha.beta\", testLLVisitor._importedFiles.contains(\"alpha.beta\"));", "+      assertEquals(\"There should be a continuation.\", sd, LanguageLevelConverter.symbolTable.get(\"alpha.beta\"));", "+      assertTrue(\"It should be in continuations.\", testLLVisitor.continuations.containsKey(\"alpha.beta\"));", "-      cis2.visit(_llv);", "+      cis2.visit(testLLVisitor);", "-      _llv._package = \"myPackage\";", "+      testLLVisitor._package = \"myPackage\";", "-      cis3.visit(_llv);", "+      cis3.visit(testLLVisitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c4a113ec827339c2adaa251420a2f6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testBreakBlockCommentWithStar()", "signatureAfterChange": "   public void testBreakBlockCommentWithStar()", "diff": ["-    assertEquals(\"#4.3\", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());", "+    assertEquals(\"#4.3\", INSIDE_BLOCK_COMMENT, model1._getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c620ad7842d069f335afc6c48a5a1bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "65d59a6eb5c83a25b9e6bfdf698fd61ca6d2f695", "commitAfterChange": "28f2b1ea23c948581f63408215b04510a86e87f3", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 117, "signatureBeforeChange": "   private JMenu _setUpToolsMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpToolsMenu(int mask)", "diff": ["+    if (CodeStatus.DEVELOPMENT) {", "+      toolsMenu.add(_loadHistoryAction);", "+      toolsMenu.add(_saveHistoryAction);", "+      toolsMenu.add(_clearHistoryAction);", "+    }", "+    toolsMenu.addSeparator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c69bf6aee6b0646534af57774310a3f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void testGetLine7() throws BadLocationException", "signatureAfterChange": "   public void testGetLine7() throws BadLocationException", "diff": ["-    defModel.insertString(0, s, null);", "-    defModel.setCurrentLocation(12);", "-    assertEquals(\"#0.0\", 3, defModel.getCurrentLine());", "-    defModel.move(-5);", "-    assertEquals(\"#0.1\", 2, defModel.getCurrentLine());", "-    defModel.setCurrentLocation(19);", "-    assertEquals(\"#0.2\", 4, defModel.getCurrentLine());", "+    _defModel.insertString(0, s, null);", "+    _defModel.setCurrentLocation(12);", "+    assertEquals(\"#0.0\", 3, _defModel.getCurrentLine());", "+    _defModel.move(-5);", "+    assertEquals(\"#0.1\", 2, _defModel.getCurrentLine());", "+    _defModel.setCurrentLocation(19);", "+    assertEquals(\"#0.2\", 4, _defModel.getCurrentLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c73b67d59be67cc2847f91a27c55fa8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 370, "methodNumberAfterChange": 896, "signatureBeforeChange": "    final private boolean jj_3R_396()", "signatureAfterChange": "    final private boolean jj_3R_404()", "diff": ["-", "-  final private boolean jj_3R_396() {", "-    if (jj_scan_token(ASSIGN)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_404() {", "+    if (jj_scan_token(ASSIGN)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ca12794562bccea23542322ec32f520", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractSlaveJVM.java", "commitBeforeChange": "545558ad10034df1c23d84066b19e4c96d5c4d21", "commitAfterChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public final void start(final MasterRemote master) throws RemoteException", "signatureAfterChange": "   public final void start(final MasterRemote master) throws RemoteException", "diff": ["-    Thread thread = new Thread() {", "+    Thread thread = new Thread(_pollMasterThreadName) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6caa733a253af6581372f41d6e6b712e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/Utilities.java", "commitBeforeChange": "f205ca9d5d2412a2a1acf5f21508c01015abbdae", "commitAfterChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static void invokeAndWait(Runnable task) throws InterruptedException", "signatureAfterChange": "      public static void invokeAndWait(Runnable task)", "diff": ["-  public static void invokeAndWait(Runnable task) throws InterruptedException {", "+  public static void invokeAndWait(Runnable task) {", "-", "-    catch(InvocationTargetException e) { throw new UnexpectedException(e); }", "+    catch(Exception e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cd3f9bbb86e5fd590d0df989b7e5689", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "887c8657a83950a6c8947a7e9fe4ff97dd2e6556", "commitAfterChange": "bd1423ca3aa30e7ae329b2e3779dd5855237b9c8", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 163, "signatureBeforeChange": "   boolean _closeProject()", "signatureAfterChange": "   boolean _closeProject()", "diff": ["+      _compileOpenProjectAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cd72c831dc395636c5f3899626e29d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 453, "methodNumberAfterChange": 390, "signatureBeforeChange": "    final private boolean jj_3R_457()", "signatureAfterChange": "    final private boolean jj_3R_459()", "diff": ["-", "-  final private boolean jj_3R_457() {", "-    if (jj_scan_token(INCREMENT)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_459() {", "+    if (jj_scan_token(DECREMENT)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cdd586327e89351cf9d44214792a4c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocumentTest.java", "commitBeforeChange": "a1978d98aea3cdbfd80a763b6474ba523e607de6", "commitAfterChange": "ac55d90528653f74034b709e69818ba05a360584", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testDeleteDoc()", "signatureAfterChange": "  \tpublic void testDeleteDoc()", "diff": ["-\t\t\ttry", "-\t\t\t\t{", "-\t\t\t\t\tdefModel.insertString(0,\"a/*bc */\",null);", "-\t\t\t\t\tdefModel.remove(3,3);", "-\t\t\t\t\tassertEquals(\"#0.0\",\"a/**/\",defModel.getText(0,5));", "-\t\t\t\t\tassertEquals(\"#0.1\",3,defModel._currentLocation);", "+\t\t\ttry {", "+\t\t\t\tdefModel.insertString(0,\"a/*bc */\",null);", "+\t\t\t\tdefModel.remove(3,3);", "+\t\t\t\tassertEquals(\"#0.0\",\"a/**/\",defModel.getText(0,5));", "+\t\t\t\tassertEquals(\"#0.1\",3,defModel._currentLocation);", "-\t\t\t\t\tReducedModel rm = defModel._reduced;", "-\t\t\t\t\tassertEquals(\"1.0\",\"*/\",rm._cursor.current().getType());", "-\t\t\t\t\tassertEquals(\"1.1\",0,rm._offset);", "-\t\t\t\t\tassertEquals(\"1.2\",\"/*\",rm._cursor.prevItem().getType());", "-\t\t\t\t\tassertEquals(\"1.3\",ReducedToken.INSIDE_BLOCK_COMMENT,", "-\t\t\t\t\t\t\t\t\t\t\t rm.getStateAtCurrent());", "-\t\t\t\t}", "+\t\t\t\tReducedModel rm = defModel._reduced;", "+\t\t\t\tassertEquals(\"1.0\",\"*/\",rm._cursor.current().getType());", "+\t\t\t\tassertEquals(\"1.1\",0,rm._offset);", "+\t\t\t\tassertEquals(\"1.2\",\"/*\",rm._cursor.prevItem().getType());", "+\t\t\t\tassertEquals(\"1.3\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t\t rm.getStateAtCurrent());", "+\t\t\t}", "-\t\t\t\t\tSystem.out.println(\"EXCEPTION\");", "+\t\t\t\t\tSystem.out.println(e.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cfa217b5020de7cdbbe01e33fd4625f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "cc830d3cfb835e44d2498e98729c28536d682aad", "commitAfterChange": "611afcaf59528294d37f92105e692c81ac320af5", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public synchronized int findPrevDelimiter(int pos, char[] delims, boolean skipParenPhrases)     throws BadLocationException", "signatureAfterChange": "   public synchronized int findPrevDelimiter(int pos, char[] delims, boolean skipParenPhrases)     throws BadLocationException", "diff": ["-    ", "+", "-    _storeInCache(\"findPrevDelimiter:\" + pos, new Integer(ERROR_INDEX));", "+    ", "+    _storeInCache(key, new Integer(ERROR_INDEX));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cfff36c02b59eb3816a2c288f6bfb3b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 698, "methodNumberAfterChange": 371, "signatureBeforeChange": "          public void slaveJVMUsed()", "signatureAfterChange": "   public void dispose()", "diff": ["+  /** Clean up model and Swing resources. */", "+  public void dispose() {", "+    _model.dispose();", "+    super.dispose();", "+  }", "-    ", "-    public void slaveJVMUsed() { /* _resetInteractionsAction.setEnabled(true);  */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d0c676a736ecc9ffb52013a7c57d37d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 538, "methodNumberAfterChange": 271, "signatureBeforeChange": "    final private boolean jj_3R_407()", "signatureAfterChange": "    final private boolean jj_3R_412()", "diff": ["+  final private boolean jj_3R_412() {", "+    if (jj_3R_425()) return true;", "+      if (jj_3R_448()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_407() {", "-    if (jj_3R_422()) return true;", "-      if (jj_3R_431()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d1226a859650964ec07b7bf9bf96951", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "c8a7a8a9d3d089ab42661ede7d141969c6ed2339", "commitAfterChange": "edb148d96e488bb5de94fe3df6063e44425ab166", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public static File[] getSourceRootSet(List<OpenDefinitionsDocument> defDocs)", "signatureAfterChange": "   public static File[] getSourceRootSet(List<OpenDefinitionsDocument> defDocs)", "diff": ["-    return roots.toArray(new File[0]);", "+    return roots.toArray(new File[roots.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d2cacca4b16045fbb046746d820211d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ae025ece2387b12ae04306fdd94dd1060cdc00c5", "commitAfterChange": "0e6d6d4c130043dfa8d569e24f0f6f9c1f824f96", "methodNumberBeforeChange": 336, "methodNumberAfterChange": 336, "signatureBeforeChange": "     public void optionChanged(OptionEvent<Integer> oce)", "signatureAfterChange": "     public void optionChanged(OptionEvent<Integer> oce)", "diff": ["+      _recentProjectManager.updateMax(oce.value.intValue());", "+      _recentProjectManager.numberItems();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d358e6b76f7a9790bad03033d3b8bf8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "      private static String typeSignature(Type t)", "signatureAfterChange": "      private static String typeSignature(Type t)", "diff": ["-  private static String typeSignature(Type t) { return encodeType(t, '.'); }", "+  private static String typeSignature(Type t) { return encodeType(t); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d3987cda1aeda9f1a3acf2ea70572aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/UncaughtExceptionWindow.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private String _getStackTraceString()", "signatureAfterChange": "   private String _getStackTraceString()", "diff": ["-    return new String(swFail.toString());", "+    return swFail.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d3e06268e943b58f1eaae5bbc57e64d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "diff": ["-    setupDocument(FOO_TEXT);", "+    OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "-    _model.saveFile(new FileSelector(file));", "-    assertModified(false);", "-    assertContents(FOO_TEXT);", "+    doc.saveFile(new FileSelector(file));", "+    assertModified(false, doc);", "+    assertContents(FOO_TEXT, doc);", "-    changeDocumentText(BAR_TEXT);", "+    changeDocumentText(BAR_TEXT, doc);", "-    _model.saveFile(new FileSelector(file));", "+    doc.saveFile(new FileSelector(file));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d7c4536a0f6e942ad0c358ca25b9f79", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/GJv6Compiler.java", "commitBeforeChange": "7df412f6fa7cbfad04cdf72be8653b8f05b92b51", "commitAfterChange": "c56f2d498f34e494e55c625a22061d1e03ee5836", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private void _initCompiler (File[] sourceRoots)", "signatureAfterChange": "   private void _initCompiler (File[] sourceRoots)", "diff": ["-    String sourceRootString = JavacGJCompiler.getSourceRootString(sourceRoots);", "+    String sourceRootString = getSourceRootString(sourceRoots);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d88f1cdccd8f8bc8870c8565ca0304d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 366, "methodNumberAfterChange": 365, "signatureBeforeChange": "    final private boolean jj_3R_465()", "signatureAfterChange": "    final private boolean jj_3R_467()", "diff": ["-  final private boolean jj_3R_465() {", "-    if (jj_3R_313()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_472()) { jj_scanpos = xsp; break; }", "-    }", "+  final private boolean jj_3R_467() {", "+    if (jj_3R_317()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_474()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d96a2e8ffd037515377bdb29340956a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "f6810ad68cbb0aaa0d9f5ff0052437da87098ab7", "commitAfterChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public int findPrevEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "signatureAfterChange": "   public int findPrevEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "diff": ["+    ", "+      ", "+      if (i == DOCSTART-1) reducedPos = ERROR_INDEX; // No matching char was found", "+      _storeInCache(key, reducedPos);", "-    ", "-    if (i == DOCSTART-1) reducedPos = ERROR_INDEX; // No matching char was found", "-    _storeInCache(key, new Integer(reducedPos));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dd1c834f58df060c50363c002b5ef87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 625, "methodNumberAfterChange": 623, "signatureBeforeChange": "    final private boolean jj_3R_100()", "signatureAfterChange": "    final private boolean jj_3R_101()", "diff": ["-  final private boolean jj_3R_100() {", "+  final private boolean jj_3R_101() {", "-    if (jj_3R_155()) jj_scanpos = xsp;", "+    if (jj_3R_159()) jj_scanpos = xsp;", "-      if (jj_3_38()) { jj_scanpos = xsp; break; }", "+      if (jj_3_39()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dde0713338de1adb54416ac0f662656", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "         public abstract boolean containsClass(Type t, String name);", "signatureAfterChange": "         public abstract boolean containsClass(Type t, String name, Access.Module accessModule);", "diff": ["-  public abstract boolean containsClass(Type t, String name);", "+  public abstract boolean containsClass(Type t, String name, Access.Module accessModule);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6de8aff8a15ccba2f13679fa1fbfdabb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 78, "signatureBeforeChange": "   synchronized void currThreadDied()", "signatureAfterChange": "   synchronized void currThreadDied() throws DebugException", "diff": ["-  synchronized void currThreadDied() {", "-    _model.printDebugMessage(\"The current thread has finished.\");", "+  synchronized void currThreadDied() throws DebugException {", "+    printMessage(\"The current thread has finished.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dfddad9b3641b8667c519e4d2962dd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "2f086150330979ff4c62e4d5f92d3a639145eafa", "commitAfterChange": "85e6810afed66a817b7e17867b7bf9c936bb8354", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "signatureAfterChange": "   public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "diff": ["+      removeNode(node);", "-      _model.removeNodeFromParent(node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e2c65ce556567617bdf4d6ab64641a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitorTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testForStatement()", "signatureAfterChange": "   public void testForStatement()", "diff": ["-                                      \"    l.1 PrimitiveType <int>\\n\" +", "+                                      \"    l.1 PrimitiveTypeName <int>\\n\" +", "-                                      \"      l.1 PrimitiveType <int>\\n\" +", "+                                      \"      l.1 PrimitiveTypeName <int>\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e4132a6307d00696d9fd3510243b6a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "     public void indentLinesInDefinitions(int selStart, int selEnd,                                          int reason, ProgressMonitor pm)         throws OperationCanceledException", "signatureAfterChange": "     public void indentLinesInDefinitions(int selStart, int selEnd,                                          int reason, ProgressMonitor pm)         throws OperationCanceledException", "diff": ["-      _doc.indentLines(selStart, selEnd, reason, pm);", "+      getDocument().indentLines(selStart, selEnd, reason, pm);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e49fe42e63bd3e8acc7fe079a10ee1a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "   public Class visit(FormalParameter node)", "signatureAfterChange": "   public Class visit(FormalParameter node)", "diff": ["-    Class c = (Class)node.getType().acceptVisitor(this);", "-    ", "+    Class c = node.getType().acceptVisitor(this);", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e5e8986afbdc6743e6edefc786a8e71", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 94, "signatureBeforeChange": "   public String getNextTopLevelClassName(int startPos, int endPos)     throws ClassNameNotFoundException", "signatureAfterChange": "   public String getNextTopLevelClassName(int startPos, int endPos)     throws ClassNameNotFoundException", "diff": ["-      boolean done = false;", "-      int index = 0;", "+      boolean done;", "+      int index;", "-      if ( indexOfClass > -1 ) {", "+      if (indexOfClass > -1) {", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e64e2983fe5fa47d05b4a5403d6b920", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "65add9d9f0de9278803d6c9a77b3294a4ab082f3", "commitAfterChange": "1ad8d0f619615b40333c2ef2eca24506e4639e2b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["-        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "+        fail(\"compile failed: \" + getCompilerErrorString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e704add62a9db9f14bbce4cf5b15881", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 777, "methodNumberAfterChange": 296, "signatureBeforeChange": "    final private boolean jj_3R_462()", "signatureAfterChange": "    final private boolean jj_3R_624()", "diff": ["+  final private boolean jj_3R_624() {", "+    if (jj_3R_628()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_629()) return true;", "-", "-  final private boolean jj_3R_462() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_66()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_482()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e734ae02d1dab13e1aef2c501d73505", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void setCurrentThread(DebugThreadData d);", "signatureAfterChange": "   public void setCurrentThread(DebugThreadData d) throws DebugException;", "diff": ["-  public void setCurrentThread(DebugThreadData d);", "+  public void setCurrentThread(DebugThreadData d) throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e7c6fa5dbb8879b0d6f99d6765c2464", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public void startCompile()", "signatureAfterChange": "     public void startCompile() throws IOException", "diff": ["-    public void startCompile() {", "+    public void startCompile() throws IOException {", "+      CompilerError[] errors = new CompilerError[0];", "-            _compileErrors = compiler.compile(sourceRoot, files);", "+            errors = compiler.compile(sourceRoot, files);", "-            CompilerError err = new CompilerError(file.getAbsolutePath(),", "+            CompilerError err = new CompilerError(file,", "-            _compileErrors = new CompilerError[] { err };", "+            errors = new CompilerError[] { err };", "+            _distributeErrors(errors);", "+", "+            // Fire a compileEnded event", "-            if (_compileErrors.length == 0) {", "+            if (_numErrors == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e9d73a07a1ad3c016aa6b1fb5de7823", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassInfoCompiler.java", "commitBeforeChange": "0cc20e52ff83b7000f2c534f4df717db22d53165", "commitAfterChange": "01976b859dcbb21fcccdad846dcb4a0675ac7cca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void addConstructor(TreeConstructorInfo ci)", "signatureAfterChange": "   protected void addConstructor(TreeConstructorInfo ci)", "diff": ["-                            new BlockStatement(cd.getStatements()),", "-                            false);", "+                            new BlockStatement(cd.getStatements()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ea877e58cf4fff33e4865d67cb76f18", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWith.java", "commitBeforeChange": "558f3e76b0939d235eb8771fbc6a284d80a06f72", "commitAfterChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc, int pos)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc, BraceReduction reducedModel, int pos)", "diff": ["-  boolean applyRule(DefinitionsDocument doc, int pos) {", "+  boolean applyRule(DefinitionsDocument doc, BraceReduction reducedModel, int pos) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6eab585c917b0167ecbf6f470133c9a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 12, "signatureBeforeChange": "    public void testGetIndentOfCurrStmtIgnoreDelimsInParenPhrase() throws BadLocationException", "signatureAfterChange": "    public void testGetIndentOfCurrStmtIgnoreDelimsInParenPhrase() throws BadLocationException", "diff": ["-    assertEquals(\"ignores delimiter in paren phrase\", 2, _doc.getIndentOfCurrStmt(12));", "+    assertEquals(\"ignores delimiter in paren phrase\", 2, _getIndentOfCurrStmt(12));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ebc181d1e8dad2bf74b7596c57ca56c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 595, "methodNumberAfterChange": 590, "signatureBeforeChange": "    final private boolean jj_3R_325()", "signatureAfterChange": "    final private boolean jj_3R_329()", "diff": ["-", "-  final private boolean jj_3R_325() {", "-    if (jj_3R_336()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_350()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_329() {", "+    if (jj_3R_339()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_352()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ecd8674fdfc97289ead3e3c7f8149af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "51e8ea430c01509f87d3823d7a75f90d00225716", "commitAfterChange": "5425ae0e836a7ee6f00ac774f834187d377d72ad", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private void createPopupMenu()", "signatureAfterChange": "   private void createPopupMenu()", "diff": ["-      _toggleBreakpointMenuItem.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ed5b701d83fa081597b91bfc6986d10", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "cbb9f04386fdbcd6c82a6f2a5ae6b635359499fb", "commitAfterChange": "e77b9389e0feb3169a20412f8892f630db108f0e", "methodNumberBeforeChange": 452, "methodNumberAfterChange": 452, "signatureBeforeChange": "      private boolean _rename()", "signatureAfterChange": "      private boolean _rename()", "diff": ["-        _model.setActiveDocument(_model.getActiveDocument());", "+        _model.refreshActiveDocument();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ed9599ce4fd09608fb6c523a7b21fa3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   @Override public Type visit(InnerAllocation node)", "signatureAfterChange": "   @Override public Type visit(InnerAllocation node)", "diff": ["-      if (node.getArguments() != null) { args = node.getArguments(); }", "-      for (Expression e : args) { e.acceptVisitor(this); }", "+      if (node.getArguments() != null) { args = node.getArguments(); checkList(args); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ee3ecf48cda21d485588a0938121a48", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public void setUp() throws Exception", "signatureAfterChange": "    public void setUp() throws Exception", "diff": ["-    _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "+    _tempDir = IOUtil.createAndMarkTempDirectory(\"DrJava-test-\" + user, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ef93f5aa47b049cd801b0d4d50fd3d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 382, "methodNumberAfterChange": 377, "signatureBeforeChange": "    final private boolean jj_3R_328()", "signatureAfterChange": "    final private boolean jj_3R_259()", "diff": ["+", "+  final private boolean jj_3R_259() {", "+    if (jj_scan_token(SWITCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_110()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(LBRACE)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_317()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(RBRACE)) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_328() {", "-    if (jj_scan_token(SWITCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_107()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(LBRACE)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_463()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(RBRACE)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f169bf75b7612ad9ad755adb0762b09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/MainFrame.java", "commitBeforeChange": "1ed74444e7bc359a9a1bceeac912e2a7a23c2add", "commitAfterChange": "7c92e58e6451902680f99442fe1b0e5b6ce56b46", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  \tOutputView getOutView()", "signatureAfterChange": "  \tOutputPane getOutPane()", "diff": ["-\tOutputView getOutView()", "+\tOutputPane getOutPane()", "-\t\t\treturn _outputView;", "+\t\t\treturn _outputPane;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f21312f79c04ecbd582189f4b5c5fe4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassInfoCompiler.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Object visit(ConstructorInvocation node)", "signatureAfterChange": "     public Object visit(ConstructorInvocation node)", "diff": ["-        ", "+", "-      ", "+", "-      ", "+", "-        ", "+", "-          ", "+", "-          ", "+", "-            params[i++] = NodeProperties.getClassInfo((Expression)it.next());", "+            params[i++] = NodeProperties.getClassInfo(it.next());", "-        ", "+", "-      ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f24b3511b8c375fd34e4026a9588255", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 465, "methodNumberAfterChange": 384, "signatureBeforeChange": "    final private boolean jj_3R_86()", "signatureAfterChange": "    final private boolean jj_3R_87()", "diff": ["-", "-  final private boolean jj_3R_86() {", "+  final private boolean jj_3R_87() {", "-    if (jj_3R_128()) {", "+    if (jj_3R_129()) {", "-    if (jj_3R_129()) return true;", "+    if (jj_3R_130()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f51392c451e7c6a0a7398bf624ae170", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 381, "methodNumberAfterChange": 375, "signatureBeforeChange": "    final private boolean jj_3R_463()", "signatureAfterChange": "    final private boolean jj_3R_317()", "diff": ["+", "+  final private boolean jj_3R_317() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_354()) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(24)) return true;", "+    }", "+    if (jj_scan_token(COLON)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_355()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_463() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_474()) {", "-    jj_scanpos = xsp;", "-    if (jj_scan_token(24)) return true;", "-    }", "-    if (jj_scan_token(COLON)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_475()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f5be43d7d3aa59a673a028093d9abf7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "53d061333fe3393f6569c1f553912f1a449482ad", "commitAfterChange": "12c8304e14a6d9eafe2f7093583d8040569150c1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "    public void testGetSourceRootPackageThreeDeepValid() throws BadLocationException, IOException", "signatureAfterChange": "    public void testGetSourceRootPackageThreeDeepValid() throws BadLocationException, IOException", "diff": ["-//    _log.log(\"testGetSourceRootPackageThreeDeepValid() completed\");", "+    _log.log(\"testGetSourceRootPackageThreeDeepValid() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f661def0ae150e8717fa8dbe8b9a208", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecurUtil.java", "commitBeforeChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "commitAfterChange": "34d03e4ba66c612a034017381b72d822fe9c84d0", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public static String arrayToString(int[] array, ArrayStringMode stringMode)", "signatureAfterChange": "   public static String arrayToString(int[] array, ArrayStringMode stringMode)", "diff": ["-          else { result.append(\", \"); }", "+          else { result.append(stringMode.delimiter()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f750045559b16f678278b0793ed4a52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 431, "methodNumberAfterChange": 605, "signatureBeforeChange": "    final private boolean jj_3R_453()", "signatureAfterChange": "    final private boolean jj_3R_455()", "diff": ["-", "-  final private boolean jj_3R_453() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_23()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_463()) jj_scanpos = xsp;", "-    if (jj_scan_token(SUPER)) return true;", "-    if (jj_3R_89()) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_455() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_23()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_465()) jj_scanpos = xsp;", "+    if (jj_scan_token(SUPER)) return true;", "+    if (jj_3R_90()) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f807be843584926c2d805c13436e7d6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileTest.java", "commitBeforeChange": "e8f48651b4fb31b2a1907635fbd654b3f66a98b2", "commitAfterChange": "2499b0018a7f137bb1baaaf2d077c26486e3f12e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testParser() throws Exception", "signatureAfterChange": "      public void testParser() throws Exception", "diff": ["-    assertTrue(ir.getJarMainClass().equals(JAR_MAIN_CLASS));", "+    assertTrue(ir.getJarMainClass().getPath().equals(JAR_MAIN_CLASS));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f9e63fb6180da5a4c9f2d4b5fea35f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "commitAfterChange": "37eb7cd9abe39acb853d1fd344f27a2631ce2406", "methodNumberBeforeChange": 542, "methodNumberAfterChange": 543, "signatureBeforeChange": "      void _showJUnitInterrupted(String message)", "signatureAfterChange": "    void _showJUnitInterrupted(String message)", "diff": ["-  ", "+", "-    JOptionPane.showMessageDialog(this, message, \"JUnit Testing Interrupted\", JOptionPane.WARNING_MESSAGE);", "+    MainFrameUtils.showJUnitInterrupted(this, message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fb7c7d80565d69dcee6be8f316b8a41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/sexp/Tokens.java", "commitBeforeChange": "2aadb81a716e2a196f82baa127c28e3225664fab", "commitAfterChange": "c4ec4fbaa86590f5d9d73c067159d69b14149c37", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public SExpToken(String rep)", "signatureAfterChange": "     public SExpToken(String rep)", "diff": ["-    public SExpToken(String rep) { _rep = rep; }", "+    public SExpToken(String rep) { _rep = rep.intern(); }  // intern() supports use of == for equality testing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fc81261ef4afe8a50dfe846ecc9986b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 760, "methodNumberAfterChange": 617, "signatureBeforeChange": "    final private boolean jj_3R_502()", "signatureAfterChange": "    final private boolean jj_3R_563()", "diff": ["+  final private boolean jj_3R_563() {", "+    if (jj_3R_568()) {", "+    if (jj_3R_569()) return true;", "-", "-  final private boolean jj_3R_502() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_519()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_520()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ff282214e944ca5abd77f14dd057b4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "0f5802fd0bfcac88fdf9ed629119c5b60fc353ef", "commitAfterChange": "af3d2665565d850db91ca07a41202bb19156c449", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public DynamicJavaAdapter()", "signatureAfterChange": "    public DynamicJavaAdapter()", "diff": ["+", "+    // Allow access to private fields/methods from interpreter!", "+    _djInterpreter.setAccessible(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ffa7e71de4feed6f17a08aefebf6eab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "a25fe41044d292186863ba8ddd26164fdef4fc59", "commitAfterChange": "682bd0a2b528d852a57206c89ed5bb4a5b484c14", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 177, "signatureBeforeChange": "      private void _openProjectUpdate()", "signatureAfterChange": "      private void _openProjectUpdate()", "diff": ["-      _junitProjectAction.setEnabled(true);", "+//      _junitProjectAction.setEnabled(true);", "-      _compileOpenProjectAction.setEnabled(true);", "+//      _compileOpenProjectAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ffe903dec35a0367883742038521ae4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "ef93e6cc3a79f29ed28debb1108f1338b9a974ad", "commitAfterChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   private FindResult _findNextInDocSegment(final OpenDefinitionsDocument doc, final int start, int len,                                             final boolean wrapped, final boolean allWrapped)", "signatureAfterChange": "   private FindResult _findNextInDocSegment(final OpenDefinitionsDocument doc, final int start, int len,                                             final boolean wrapped, final boolean allWrapped)", "diff": ["-    boolean inTestCase = (doc.getFileName().endsWith(\"Test.java\"));", "+    boolean inTestCase = false;", "+    for(String ext: OptionConstants.LANGUAGE_LEVEL_EXTENSIONS) {", "+      inTestCase |= doc.getFileName().endsWith(\"Test\"+ext);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "701717f2837ec054d85456633a891352", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "408446b2528763b45ba1c173b0d3db2685562747", "commitAfterChange": "bf7190c8946c28e9e6bd599bd6f030a6339f362e", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": "   boolean _closeProject()", "signatureAfterChange": "   boolean _closeProject()", "diff": ["-//      _saveProjectAction.setEnabled(false);", "+      _saveProjectAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "703b91b65a5121f6afb2d17611ade620", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 542, "methodNumberAfterChange": 539, "signatureBeforeChange": "    final private boolean jj_3R_94()", "signatureAfterChange": "    final private boolean jj_3R_97()", "diff": ["-  final private boolean jj_3R_94() {", "-    if (jj_3R_144()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_192()) jj_scanpos = xsp;", "+", "+  final private boolean jj_3R_97() {", "+    if (jj_3R_148()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_200()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7069b077094f9e0a13a479b4b9ba9005", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f04b27133e1dfdd1ba7aef9e8d008a92f888d6d9", "commitAfterChange": "99b38c17e39f8591bf821ecb0016a46b269f3561", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "          public void fileOpened(File file)", "signatureAfterChange": "          public void fileOpened(File file)", "diff": ["-      installNewDocumentListener((DefinitionsDocument)_model.getDefinitionsDocument());", "+      installNewDocumentListener(_model.getDefinitionsDocument());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "706c44ba012521567dca8426bdf0d04f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "commitAfterChange": "f938008597ce54d16e4a865d30f8ef062ea55d2f", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 59, "signatureBeforeChange": "   private void _insertVariableCommand()", "signatureAfterChange": "   private void _insertVariableCommand()", "diff": ["-    PropertyMaps.ONLY.clearVariables();", "+    _props.clearVariables();", "-  }", "+  }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "707740885faac768f134e93c4e133ed9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fab79f2f445044e7a60a89e228042164713428d9", "commitAfterChange": "e139ee11210134ee5f270cffd65e7f4f3d39c78d", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "      public void activeDocumentChanged(OpenDefinitionsDocument active)", "signatureAfterChange": "      public void activeDocumentChanged(OpenDefinitionsDocument active)", "diff": ["+      active.getDocument().setCurrentLocation( pos );", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70aa2f5d6125f052ce7bc057a31a225b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public static <R> TaskController<R> computeInThread(Thunk<? extends R> task)", "signatureAfterChange": "   public static <R> TaskController<R> computeInThread(Thunk<? extends R> task)", "diff": ["-    return computeInThread(task, true);", "+    return computeWithExecutor(task, THREAD_EXECUTOR, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70be67427f043351af0c4c6c18f8c25d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "commitAfterChange": "37eb7cd9abe39acb853d1fd344f27a2631ce2406", "methodNumberBeforeChange": 544, "methodNumberAfterChange": 545, "signatureBeforeChange": "      private void _showWarning(Throwable e, String title, String message)", "signatureAfterChange": "      void _showWarning(Throwable e, String title, String message)", "diff": ["-  private void _showWarning(Throwable e, String title, String message) {", "-    JOptionPane.showMessageDialog(this, message + \"\\n\" + e, title, JOptionPane.WARNING_MESSAGE);", "+  void _showWarning(Throwable e, String title, String message) {", "+    MainFrameUtils.showWarning(this, e, title, message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70c73d465044a34e22f3d1f06fde5cc5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "1ea3dd9f63752abe86fd2373767db30462f2b9f6", "commitAfterChange": "f363167d40173f307f3b6d87b64a8df73677629e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   static boolean handleCommandLineArgs(String[] args)", "signatureAfterChange": "   static boolean handleCommandLineArgs(String[] args)", "diff": ["-//      _jvmArgs.add(\"-Xdock:icon=Users/cork/drjava/drjava/edu/rice/cs/drjava/ui/icons/DrJava.icns\");", "+      _jvmArgs.add(\"-Xdock:icon=/Applications/DrJava.app/Contents/Resources/DrJava.icns\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70cd20fc9eb8a96155c8abd05ef6b610", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   private void _runJavadoc(ArrayList<String> args, String[] classpath,                            File destDirFile, boolean allDocs)", "signatureAfterChange": "   private void _runJavadoc(ArrayList<String> args, String[] classpath,                            File destDirFile, boolean allDocs)", "diff": ["-    boolean result = false;", "+    boolean result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70cd43d2b517d4f79116bbb5b86f3429", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "commitAfterChange": "9ce155a1f3e34352032d821032cb2dc70024460f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   @Override public Type visit(StaticMethodCall node)", "signatureAfterChange": "   @Override public Type visit(StaticMethodCall node)", "diff": ["-      // TODO: Check for uncaught exceptions", "+      checkThrownExceptions(inv.thrown(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70cdda92a156ef91920294037d7833c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 246, "signatureBeforeChange": "   public void debuggerToggle()", "signatureAfterChange": "   public void debuggerToggle()", "diff": ["-        simpleHourglassOn();", "+        hourglassOn();", "-        finally { simpleHourglassOff(); }", "+        finally { hourglassOff(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70d75812f1d364fcfe218a33f7a5d19c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public String getEnclosingTopLevelClassName(int pos) throws ClassNameNotFoundException", "signatureAfterChange": "   public String getEnclosingTopLevelClassName(int pos) throws ClassNameNotFoundException", "diff": ["-    readLock();", "+    acquireReadLock();", "-        readUnlock();", "+        releaseReadLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70dc5b2fe3ae9d825c1ca9bf725f746a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public static synchronized FileConfiguration getConfig()", "signatureAfterChange": "   public static FileConfiguration getConfig()", "diff": ["-  public static synchronized FileConfiguration getConfig() {", "-    // Ensure config has been created (eg. in a test)", "-    if (_config == null) initConfig();", "-    return _config;", "-  }", "+  public static FileConfiguration getConfig() { return _config; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70de488bf167ab710bfda92186f73aa8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandler.java", "commitBeforeChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "commitAfterChange": "84d383e8fea49389da19c11522947d451646ef3e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void _handleStepEvent(StepEvent e)", "signatureAfterChange": "      private void _handleStepEvent(StepEvent e)", "diff": ["+      _manager.setCurrentThread(e.thread());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "710cfd3e794837d9dad4572c98ae7ebe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "72a0d444dc62ca781c9b91acdee71819a6f4cdd3", "commitAfterChange": "7144a04f8cef658fdd6189df9de3fd59eb678bec", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void initComponents()", "signatureAfterChange": "   private void initComponents()", "diff": ["-    _commandPanel = makeCommandPane();", "-    super.getContentPane().add(_commandPanel);", "-    super.setResizable(false);", "-    ", "-    setSize(FRAME_WIDTH, FRAME_HEIGHT);", "-    Utilities.setPopupLoc(this, _mainFrame);", "+        _commandPanel = makeCommandPane(); ", "+        ", "+        getContentPane().add(_commandPanel);", "+        setResizable(false);", "+        ", "+        setSize(FRAME_WIDTH, FRAME_HEIGHT);", "+        Utilities.setPopupLoc(ExecuteExternalDialog.this, _mainFrame);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7116b5c322f0e2b79b8bfd6854c3290d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TigerTest.java", "commitBeforeChange": "640d94c961319de37237c21816ee469b313568b5", "commitAfterChange": "dbdd53c636f6618ffbae999ad0ee607bc3e2b6a3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testStaticImportOfMethods()", "signatureAfterChange": "   public void testStaticImportOfMethods()", "diff": ["+  ", "+    testString = ", "+      \"package LL;\\n\"+", "+      \"import static java.lang.Double.*;\\n\"+", "+      \"public class MM {\\n\"+", "+      \"  public static double parseDouble(String s) {\\n\"+", "+      \"    return 0.0; \\n\"+", "+      \"  }\\n\"+", "+      \"  public static double m() {\\n\"+", "+      \"    return parseDouble(\\\"1.5\\\");\\n\"+", "+      \"  }\\n\"+", "+      \"}\\n\"+", "+      \"parseDouble(\\\"1.5\\\");\\n\";", "+    assertEquals(1.5,interpret(testString));", "+    testString = \"MM.m();\";", "+    assertEquals(\"Member of class should take precedence over staticly imported member\",0.0,interpret(testString));", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "711c01d0a9c0b251af4b8d2502b89785", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public int findPrevEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "signatureAfterChange": "   public int findPrevEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "711ec5b08ea9aa55d56fc67283f1cf71", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "5c952c5847e3008cec3ed5ff89d03d335c050f54", "commitAfterChange": "e3e56a8c058b51612dfa6f1f21259a37eadcdcbb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testHasErrorsWithPositions() throws IOException, OperationCanceledException", "signatureAfterChange": "   public void testHasErrorsWithPositions() throws IOException, OperationCanceledException", "diff": ["+    // Doc with errors", "+    ", "+    // Same doc with a different (but equivalent) file name", "+    doc.getDocument().setFile(new File(\"/tmp/./nowhere5\"));", "+    assertTrue(\"Same file should have errors with lines.\", model.hasErrorsWithPositions(doc));", "+    ", "+    // Doc without errors"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71356306215dc4fbbaa156b4cf6aa627", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 765, "methodNumberAfterChange": 666, "signatureBeforeChange": "    final private boolean jj_3R_463()", "signatureAfterChange": "    final private boolean jj_3R_439()", "diff": ["+", "+  final private boolean jj_3R_439() {", "+    if (jj_3R_455()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_456()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_463() {", "-    if (jj_3R_481()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_518()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "713811f4bebfe4ef8b22d22759ca8e44", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "76c0b2960b62020d46b810955623e0af759eee20", "commitAfterChange": "936042cad9bfa0086510cc58a96357306371fb07", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testCompileAllFailsDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllFailsDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "diff": ["+    debug.logStart();", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "713ae79dcf2cce2d4baaf948fb0aeaf4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 590, "signatureBeforeChange": "    final private boolean jj_3R_359()", "signatureAfterChange": "    final private boolean jj_3R_354()", "diff": ["-  final private boolean jj_3R_359() {", "-    if (jj_3R_364()) return true;", "-      if (jj_3R_380()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_354() {", "+    if (jj_3R_360()) return true;", "+      if (jj_3R_372()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71540aa0ba47e3b8923d322d81d167ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "a72aa0a4c1f252999ab0a9a3163ec82bfbbfaea2", "commitAfterChange": "7eb08657532d9784c123b1d1294465471514e8b5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   private InterpreterJVM()", "signatureAfterChange": "   private InterpreterJVM()", "diff": ["+", "+    // set the thread context class loader, this way NextGen and Mint can use the interpreter's class loader", "+    Thread.currentThread().setContextClassLoader(_interpreterLoader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7157df247ba4d8bef2363daf3ea28978", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 201, "signatureBeforeChange": "   public void toggleBookmark()", "signatureAfterChange": "   public void toggleBookmark()", "diff": ["-    _model.toggleBookmark(_currentDefPane.getSelectionStart(), _currentDefPane.getSelectionEnd());", "+    OpenDefinitionsDocument odd = getCurrentDefPane().getOpenDefDocument();", "+    odd.acquireReadLock();", "+    try { _model._toggleBookmark(_currentDefPane.getSelectionStart(), _currentDefPane.getSelectionEnd()); }", "+    finally { odd.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "715fba8fb637a0a2ab28af099ea12560", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 709, "methodNumberAfterChange": 585, "signatureBeforeChange": "    final private boolean jj_3R_193()", "signatureAfterChange": "    final private boolean jj_3R_316()", "diff": ["+", "+  final private boolean jj_3R_316() {", "+    if (jj_3R_321()) return true;", "+      if (jj_3R_322()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_193() {", "-    if (jj_3R_225()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_226()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "716a0f4779e2f77be84508f876c7e9a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 599, "methodNumberAfterChange": 584, "signatureBeforeChange": "    final private boolean jj_3R_318()", "signatureAfterChange": "    final private boolean jj_3R_321()", "diff": ["-  final private boolean jj_3R_318() {", "-    if (jj_3R_336()) return true;", "+  final private boolean jj_3R_321() {", "+    if (jj_3R_339()) return true;", "-      if (jj_3R_351()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_354()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71789ffd82ada8268f1ad28876b3f6b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "5f1b3bc3f3deca6d356567893a20298f4e5a94a7", "commitAfterChange": "3101443d576fa6f63ae40ca208e243a26acf0b6b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public CompilerErrorPanel(DefinitionsView view)", "signatureAfterChange": "    public CompilerErrorPanel(DefinitionsView view)", "diff": ["-    _errorListPane.setEditable(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "719d61a160f41eaaa628391d7a5c2ce4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 315, "methodNumberAfterChange": 301, "signatureBeforeChange": "    final private boolean jj_3R_301()", "signatureAfterChange": "    final private boolean jj_3R_303()", "diff": ["+", "+  final private boolean jj_3R_303() {", "+    if (jj_3R_88()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_487()) jj_scanpos = xsp;", "+    return false;", "+  }", "-    if (jj_3R_87()) return true;", "-    if (jj_3R_485()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71b60800a7f629d27fffe8971c601899", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "9e3824633ee746290537e9b5e107ba2db1504674", "commitAfterChange": "31da1983d1819399d97822faa171f51ddfde661b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Void visit(ImportDeclaration node)", "signatureAfterChange": "     public Void visit(ImportDeclaration node)", "diff": ["-          throw new RuntimeException(\"Uncaught Class Not Found Exception\");", "+          throw new CatchedExceptionError(e, node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71c45d63c0513d63154437a749266ea6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 695, "methodNumberAfterChange": 774, "signatureBeforeChange": "    final private boolean jj_3R_138()", "signatureAfterChange": "    final private boolean jj_3R_138()", "diff": ["-", "-  final private boolean jj_3R_138() {", "-    if (jj_3R_99()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_138() {", "+    if (jj_3R_193()) {", "+    if (jj_3R_194()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_195()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_196()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_197()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_198()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_199()) return true;", "+    }", "+    }", "+    }", "+    }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7202b3aea7864dfed9fff6d9add73b1d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/SimpleInteractionsWindow.java", "commitBeforeChange": "01c62517d281ffc6534fc475329bd814c0e2c112", "commitAfterChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public static void main(String[] args)", "signatureAfterChange": "   public static void main(String[] args)", "diff": ["-      w.setInterpreterPrivateAccessible(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7237b5f6f8ce3987d4aff89a54df1bc2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/MainFrame.java", "commitBeforeChange": "4dfb7e8e2c11d7b61367445afcbbd318e060ee7c", "commitAfterChange": "99c3d5bae5c904da6993da2891152b42aec91e01", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+", "+    _definitionsView = new DefinitionsView(this);", "+    _outputView = new OutputView();", "+    _fileMenu.add(_compileAction);", "+    ", "+    // Menu bars can actually hold anything!", "-", "-", "-    _definitionsView = new DefinitionsView(this);", "-    _outputView = new OutputView();", "-    ", "+   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7244170d7d4464e91ec8dad0116e4b51", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "529170b5e1f3ae51e7605361a4e0e7b51ac950b2", "commitAfterChange": "c41db23b64398f487a5aaf468732fd9fd28c85f7", "methodNumberBeforeChange": 626, "methodNumberAfterChange": 626, "signatureBeforeChange": "          public void currThreadSuspended()", "signatureAfterChange": "          public void currThreadSuspended()", "diff": ["+      _model.getInteractionsModel().autoImport();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "724fb8daa5f926a3241c46e3b7437210", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 716, "methodNumberAfterChange": 659, "signatureBeforeChange": "    final private boolean jj_3R_505()", "signatureAfterChange": "    final private boolean jj_3R_506()", "diff": ["-  final private boolean jj_3R_505() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_527()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_528()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_529()) return true;", "-    }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_506() {", "+    if (jj_3R_528()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_529()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_530()) return true;", "+    }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7256725ae8f720ce0acb1ec202df3f48", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessOptionsTest.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testCompileWithJavaAssert()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileWithJavaAssert()     throws BadLocationException, IOException, InterruptedException", "diff": ["-        CompileShouldSucceedListener listener2 = new CompileShouldSucceedListener(false);", "+        CompileShouldSucceedListener listener2 = new CompileShouldSucceedListener();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "726b0eb22e73b8b722e91836ec2f6aab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/AWTContainerNavigatorFactory.java", "commitBeforeChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "commitAfterChange": "6d55d86705248616cac5b324a7c528485ceb6104", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public IDocumentNavigator<ItemT> makeListNavigator(final IDocumentNavigator<ItemT> parent)", "signatureAfterChange": "     public IDocumentNavigator<ItemT> makeListNavigator(final IDocumentNavigator<ItemT> parent)", "diff": ["-   */", "+      */", "-      final IDocumentNavigator<ItemT> tbr = makeListNavigator();", "-      Utilities.invokeAndWait(new Runnable() { ", "-        public void run() { ", "-          migrateNavigatorItems(tbr, parent);", "-          migrateListeners(tbr, parent);", "-        }", "+      final IDocumentNavigator<ItemT> child = makeListNavigator();", "+      Utilities.invokeLater(new Runnable() { ", "+        public void run() {", "+//          synchronized (child.getModelLock()) { // dropped because of cost; each atomic action is still synchronized", "+            migrateNavigatorItems(child, parent);", "+            migrateListeners(child, parent);", "+          }", "+//        }", "-      return tbr;", "+      return child;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7281bb21f720a533c4d11f48665de73f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 670, "methodNumberAfterChange": 578, "signatureBeforeChange": "    final private boolean jj_3R_92()", "signatureAfterChange": "    final private boolean jj_3R_91()", "diff": ["+  final private boolean jj_3R_91() {", "+    if (jj_3R_146()) {", "+    if (jj_3R_147()) return true;", "-", "-  final private boolean jj_3R_92() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_142()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_143()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "729906e94f60f9af5cad87392920bb56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/JavacCompiler.java", "commitBeforeChange": "7f27d4def62ff1bda42279f1d632d1636f2811d4", "commitAfterChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public static String transformRunCommand(String s)", "signatureAfterChange": "   public static String transformRunCommand(String s)", "diff": ["-    System.out.println(ret);", "+    // System.out.println(ret);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72c617f652a3eb67f65c6b49b262326d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 347, "methodNumberAfterChange": 582, "signatureBeforeChange": "    final private boolean jj_3R_353()", "signatureAfterChange": "    final private boolean jj_3R_357()", "diff": ["-", "-  final private boolean jj_3R_353() {", "-    if (jj_3R_361()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_372()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_357() {", "+    if (jj_3R_366()) return true;", "+      if (jj_3R_371()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72c6dc43534a3d6d8bc4d4d65cfa1a06", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AbstractConsoleController.java", "commitBeforeChange": "92062677ca813cb9ab44428a0d2d54f0c3309b04", "commitAfterChange": "274f7defc49003e66c942e814c9ce22958b3814c", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   void moveToPrompt()", "signatureAfterChange": "   void moveToPrompt()", "diff": ["-  void moveToPrompt() { _pane.setCaretPos(getConsoleDoc().getPromptPos()); }", "+  void moveToPrompt() { ", "+    assert EventQueue.isDispatchThread();", "+    ConsoleDocument doc = getConsoleDoc();", "+    doc.acquireReadLock();", "+    try { _pane.setCaretPosition(getConsoleDoc().getPromptPos()); }", "+    finally {doc.releaseReadLock(); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72dc45a27137276c659bf43eda19ef98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "7b3e2baaa631329b7e3233840fa805eba66e7b61", "commitAfterChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 40, "signatureBeforeChange": "   private void _updateInsideLineComment(ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private void _updateInsideLineComment(ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-\t\t\t_splitCurrentIfCommentBlock(true, copyCursor);", "+\t\t\t_splitCurrentIfCommentBlock(true, false,copyCursor);", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\"\",copyCursor);  // \\-\"", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\"\",copyCursor);// \\-\\\"", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\\\",copyCursor);// \\-\\\\"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72df5eb272067939b709e7245c9b6692", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 502, "methodNumberAfterChange": 505, "signatureBeforeChange": "    final private boolean jj_3_45()", "signatureAfterChange": "    final private boolean jj_3_47()", "diff": ["-  final private boolean jj_3_45() {", "+  final private boolean jj_3_47() {", "-    if (jj_3R_99()) return true;", "-    if (jj_3R_382()) return true;", "+    if (jj_3R_100()) return true;", "+    if (jj_3R_383()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7306d5a90356690629dbcc1114d6999e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "     private File _locateClassFile()", "signatureAfterChange": "     private File _locateClassFile()", "diff": ["-        String className = _doc.getQualifiedClassName();", "+        String className = getDocument().getQualifiedClassName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7320224c0c6935d56b8ddacbf0939c5e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 534, "methodNumberAfterChange": 529, "signatureBeforeChange": "    final private boolean jj_3R_249()", "signatureAfterChange": "    final private boolean jj_3R_259()", "diff": ["-  final private boolean jj_3R_249() {", "-    if (jj_scan_token(ASSIGN)) return true;", "-    if (jj_3R_94()) return true;", "+  final private boolean jj_3R_259() {", "+    if (jj_scan_token(ASSIGN)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7324fd5fd2bec327c3b44b5b26b01cc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/javadoc/NoJavadocAvailable.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void javadocDocument(OpenDefinitionsDocument doc, FileSaveSelector saver)", "signatureAfterChange": "   public void javadocDocument(OpenDefinitionsDocument doc, FileSaveSelector saver) throws IOException", "diff": ["-  public void javadocDocument(OpenDefinitionsDocument doc, FileSaveSelector saver) {", "+  public void javadocDocument(OpenDefinitionsDocument doc, FileSaveSelector saver) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7343e70545130aa34c1999562e530753", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 411, "methodNumberAfterChange": 520, "signatureBeforeChange": "    final private boolean jj_3R_125()", "signatureAfterChange": "    final private boolean jj_3R_445()", "diff": ["-  final private boolean jj_3R_125() {", "-    if (jj_3R_99()) return true;", "+", "+  final private boolean jj_3R_445() {", "+    if (jj_3R_97()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7348e384a4fdf1053c718353313a8627", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void clear()", "signatureAfterChange": "   public void clear()", "diff": ["-   */", "-  public void clear()", "-  {", "-    _docs.clear();", "-    this.setListData(_docs);", "-  }", "+   */", "+  public void clear() { _model.clear(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "734a6b0f559083e93aec678568546f65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 345, "methodNumberAfterChange": 395, "signatureBeforeChange": "    final private boolean jj_3R_162()", "signatureAfterChange": "    final private boolean jj_3R_311()", "diff": ["+  final private boolean jj_3R_311() {", "+    if (jj_3R_316()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_331()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_162() {", "-    if (jj_3R_116()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_205()) { jj_scanpos = xsp; break; }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7350c7b352f011139c54fcca6d35d983", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 534, "methodNumberAfterChange": 532, "signatureBeforeChange": "     public void updateLocation()", "signatureAfterChange": "     public void updateLocation()", "diff": ["-      doc.acquireReadLock();  // lock to ensure consistency of two reads from doc", "-      try { ", "-        _line = doc.getCurrentLine();", "-        _col = doc.getCurrentCol(); ", "-      }", "-      finally { doc.releaseReadLock(); }", "+//      doc.acquireReadLock();  // lock to ensure consistency of two reads from doc", "+//      try { ", "+      _line = doc.getCurrentLine();", "+      _col = doc.getCurrentCol(); ", "+//      }", "+//      finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "738be27777ea5ee094e2736f5d99dda2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public Class visit(TypeExpression node)", "signatureAfterChange": "   public Class visit(TypeExpression node)", "diff": ["-    Class c = (Class)node.getType().acceptVisitor(this);", "+    Class c = node.getType().acceptVisitor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7394d2a6d479b4dcb8ac69de8f3ab166", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void junitAll()", "signatureAfterChange": "   public void junitAll()", "diff": ["-          DefinitionsDocument dd = doc.getDocument();", "-            String cn = dd.getQualifiedClassName();", "+            String cn = doc.getQualifiedClassName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73ca75e07e78629c875aadf1980433d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "b1b91197c778ee62ce767051b412c31f7bcdddb8", "commitAfterChange": "bb4b98f439d908bb82a053d84050800352efc81c", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   private Breakpoint _getSelectedBreakpoint() throws DebugException", "signatureAfterChange": "   private Breakpoint _getSelectedBreakpoint() throws DebugException", "diff": ["-    if (path.getPathCount() == 3) {", "+    if (path == null || path.getPathCount() != 3) {", "+      return null;", "+    }", "+    else {", "-    }", "-    else {", "-      return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73d0cd9c7ac6301f916fd58245fd78d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testVerifyErrorHandledCorrectly() throws Exception", "signatureAfterChange": "   public void testVerifyErrorHandledCorrectly() throws Exception", "diff": ["-    OpenDefinitionsDocument doc3 = setupDocument(ABC_CLASS_TWO);", "+    final OpenDefinitionsDocument doc3 = setupDocument(ABC_CLASS_TWO);", "-    doc3.startCompile();", "+    ", "+    _model.addListener(listener);", "+    ", "+    listener.compile(doc3);", "+", "-    _model.addListener(listener);", "+    listener.resetCounts();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73d3d6655880047581ee4629b8aaa230", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 692, "methodNumberAfterChange": 697, "signatureBeforeChange": "    final private boolean jj_3R_227()", "signatureAfterChange": "    final private boolean jj_3R_228()", "diff": ["-", "-  final private boolean jj_3R_227() {", "+  final private boolean jj_3R_228() {", "-    if (jj_3R_167()) return true;", "+    if (jj_3R_168()) return true;", "-      if (jj_3R_251()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_252()) { jj_scanpos = xsp; break; }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73d4d8542e64acd7c979204c2e864241", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   protected File tempDirectory() throws IOException", "signatureAfterChange": "   protected File tempDirectory() throws IOException", "diff": ["-    return FileOps.createTempDirectory(\"DrJava-test\", _tempDir);", "+    return IOUtil.createAndMarkTempDirectory(\"DrJava-test\", \"\", _tempDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "740704d0c8c3da0ffe60d9c37b54dae5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "commitAfterChange": "84d383e8fea49389da19c11522947d451646ef3e", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "      private void _showDebuggerPanel()", "signatureAfterChange": "      private void _showDebuggerPanel()", "diff": ["-    _debugPanel.updateData(false);", "+    _debugPanel.updateData();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7418cb7fd1ec434288f4a54ce05fdace", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelBrace.java", "commitBeforeChange": "a454f078c900245b418db671925f6207d6f1ff60", "commitAfterChange": "533552b81f1020221bb3fe1df1f370a4168db503", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void _insertNewBrace(String text,                                ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private void _insertNewBrace(String text,                                ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-    copyCursor.insert(Brace.MakeBrace(text, ReducedToken.FREE));", "+    copyCursor.insert(Brace.MakeBrace(text, FREE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "741a090bf75d7b70d05073b547aba438", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      if (_model.getDebugManager() != null) {", "-        // add listener to debug manager", "-        _model.getDebugManager().addListener(new UIDebugListener());", "-      }", "+    if (_model.getDebugManager() != null) {", "+      // add listener to debug manager", "+      _model.getDebugManager().addListener(new UIDebugListener());", "+    DrJava.CONFIG.addOptionListener( OptionConstants.WORKING_DIRECTORY, new WorkingDirOptionListener());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7428e6d3184563cb2414ca2dfc6163c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 684, "methodNumberAfterChange": 677, "signatureBeforeChange": "    final private boolean jj_3R_300()", "signatureAfterChange": "    final private boolean jj_3R_302()", "diff": ["-  final private boolean jj_3R_300() {", "-    if (jj_3R_310()) return true;", "+  final private boolean jj_3R_302() {", "+    if (jj_3R_312()) return true;", "-    if (jj_3R_311()) jj_scanpos = xsp;", "+    if (jj_3R_313()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "742d63097ea715171d323b80b11d14fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": "          public void mousePressed(MouseEvent e)", "signatureAfterChange": "          public void mousePressed(MouseEvent e)", "diff": ["-      //Don't show the \"Add Watchpoint\" option in the contextual menu, if the JMenuItem is null.", "-      if (_addWatchpointMenuItem != null) {", "-        _addWatchpointMenuItem.setEnabled(_mainFrame.inDebugMode());", "-      }", "+      //Don't show the \"Add Watch\" option in the contextual menu, if the JMenuItem is null.", "+      //if (_addWatchMenuItem != null) {", "+      //  _addWatchMenuItem.setEnabled(_mainFrame.inDebugMode());", "+      //}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7436e22edd094315d64ab550bc26640d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "8c59b6d09078dbcf117925bc686cacee46ca999f", "commitAfterChange": "f8e25255cc9b1c52f4c1874e15c63efdafe32091", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   @Override public TypeContext visit(ImportDeclaration node)", "signatureAfterChange": "   @Override public TypeContext visit(ImportDeclaration node)", "diff": ["-        catch (AmbiguousNameException e) { throw new ExecutionError(\"ambiguous.name\", node); }", "+        catch (AmbiguousNameException e) {", "+          setErrorStrings(node, node.getName());", "+          throw new ExecutionError(\"ambiguous.name\", node);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7444e5cc3b8832054f1c35d93c873743", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Object visit(ForEachStatement node)", "signatureAfterChange": "   public Object visit(ForEachStatement node)", "diff": ["-                                     new IntType(),", "+                                     new IntTypeName(),", "-      List<List<? extends koala.dynamicjava.tree.Type>> typeArgs = new LinkedList<List<? extends koala.dynamicjava.tree.Type>>();", "-      List<koala.dynamicjava.tree.Type> arg1 = new LinkedList<koala.dynamicjava.tree.Type>();", "+      List<List<? extends koala.dynamicjava.tree.TypeName>> typeArgs = new LinkedList<List<? extends koala.dynamicjava.tree.TypeName>>();", "+      List<koala.dynamicjava.tree.TypeName> arg1 = new LinkedList<koala.dynamicjava.tree.TypeName>();", "-                                     new GenericReferenceType(ids,typeArgs),", "+                                     new GenericReferenceTypeName(ids,typeArgs),", "-      ArrayType art = new ArrayType(formalparam.getType(), 1);", "+      ArrayTypeName art = new ArrayTypeName(formalparam.getType(), 1);", "-      condition.setProperty(NodeProperties.TYPE,   new BooleanType());", "+      condition.setProperty(NodeProperties.TYPE,   new BooleanTypeName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74488f071784eb21b00185aadeceff86", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testResultOfNonPublicTestCase() throws Exception", "signatureAfterChange": "   public void testResultOfNonPublicTestCase() throws Exception", "diff": ["-    _model.setResetAfterCompile(false);", "-    //synchronized(listener) {", "-      doc.startCompile();", "-      //listener.wait();", "-    //}", "+    // Doesn't reset interactions because interpreter is not used", "+    doc.startCompile();", "-                 ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "744c501b798b728dd4480b3e5f77f588", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "05448f4a16d388258dac3b5fe6469699fb11175e", "commitAfterChange": "b128df4fa9d8df79a76ba9e19a170c160365e646", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 329, "signatureBeforeChange": "   public File getSaveFile(JFileChooser jfc) throws OperationCanceledException", "signatureAfterChange": "   public File getSaveFile(JFileChooser jfc) throws OperationCanceledException", "diff": ["+    // TODO: Why are we working with _saveChooser first, then call jfc.showSaveDialog(this)? (MGR)", "+    jfc.setMultiSelectionEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7451e6bfbb0771ee4650a80c1309189a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "7842792d64565cd346a6ae645d8530905901dfab", "commitAfterChange": "479880e2b62fcba3e57dbf3e96f57f9d3621e7c2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void insertString(int offset, String str, AttributeSet a)     throws BadLocationException", "signatureAfterChange": "   public void insertString(int offset, String str, AttributeSet a)     throws BadLocationException", "diff": ["-", "-", "-", "+\t\t_modifiedHighlights = false;", "+\t\t", "+\t\t\t\t_modifiedHighlights = _modifiedHighlights ||", "+\t\t\t\t\t_reduced.hasHighlightChanged();", "-", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7459e035378bcc85717402f0e4b552ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 539, "methodNumberAfterChange": 535, "signatureBeforeChange": "    final private boolean jj_3R_568()", "signatureAfterChange": "    final private boolean jj_3R_571()", "diff": ["-  final private boolean jj_3R_568() {", "+  final private boolean jj_3R_571() {", "-    if (jj_3R_547()) return true;", "+    if (jj_3R_551()) return true;", "-    if (jj_3R_132()) return true;", "+    if (jj_3R_135()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "746af17ddee9b2fbc0f916aff1b57a45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 337, "methodNumberAfterChange": 334, "signatureBeforeChange": "    final private boolean jj_3R_362()", "signatureAfterChange": "    final private boolean jj_3R_363()", "diff": ["-", "-  final private boolean jj_3R_362() {", "-    if (jj_3R_370()) return true;", "+  final private boolean jj_3R_363() {", "+    if (jj_3R_371()) return true;", "-      if (jj_3R_387()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_388()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "748614b0f31a06bd6829505652e375df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlusTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testLeaveBeMidLine() throws javax.swing.text.BadLocationException", "signatureAfterChange": "   public void testLeaveBeMidLine() throws javax.swing.text.BadLocationException", "diff": ["-    assertEquals(\"foo\\nbar\", _doc.getText(0, 7));", "+    assertEquals(\"foo\\nbar\", _doc.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "748a247ee59b335d34e77db90f6351db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/MatchWholeWordState.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private FindResult findNextHelp(String searchDocument, int                                     searchOriginLocation)", "signatureAfterChange": "    private FindResult findNextHelp(String searchDocument, int       searchOriginLocation)", "diff": ["+", "+  private FindResult findNextHelp(String searchDocument, int", "+      searchOriginLocation) {", "+", "+    if (_searchBackwards) {", "+      setPosition(getCurrentOffset() - _findWord.length());", "-    private FindResult findNextHelp(String searchDocument, int", "-                                    searchOriginLocation)", "-    {", "-        ", "-        if (_searchBackwards)", "-            setPosition(getCurrentOffset() - _findWord.length());", "-   ", "-        int findOffset = _searchBackwards ? -1 : 1;", "-        while(!hasLappedOriginalLocation(searchOriginLocation)) {", "-            // actually, may not even need this first clause... think about it...", "+    int findOffset = _searchBackwards ? -1 : 1;", "+    while (!hasLappedOriginalLocation(searchOriginLocation)) {", "+      // actually, may not even need this first clause... think about it...", "-            int current = getCurrentOffset();", "-            int nextPotentialMatchLocation = indexOf(searchDocument,", "-                                                     this._findWord, current);", "-            if(nextPotentialMatchLocation == -1)", "-            {", "-                if (_wrapped)", "-                    break;", "-                wrapAroundDocument();", "-            }", "-            else", "-            {", "-                setPosition(nextPotentialMatchLocation);", "-", "-                if(wholeWordFoundAtCurrent(searchDocument))", "-                {", "-                    System.err.println(\"I see word as: \" +", "-                                       searchDocument.substring(_current.getOffset(),", "-                                                                _current.getOffset()+_findWord.length()));", "-                    if (!_searchBackwards)", "-                        setPosition(getCurrentOffset()+_findWord.length());", "-", "-                    return new FindResult(_doc, getCurrentOffset(), _wrapped);", "-                }", "-                else", "-                {", "-                    if (nextPotentialMatchLocation+findOffset < 0 ||", "-                        nextPotentialMatchLocation+findOffset >= _doc.getLength())", "-                        wrapAroundDocument();", "-                    setPosition(nextPotentialMatchLocation + findOffset);", "-                }     ", "-            }", "+      int current = getCurrentOffset();", "+      int nextPotentialMatchLocation = indexOf(searchDocument, _findWord, current);", "+      if (nextPotentialMatchLocation == -1) {", "+        if (_wrapped) {", "+          break;", "-        setPosition(searchOriginLocation);", "-        return new FindResult(_doc, -1, this._wrapped);", "+        wrapAroundDocument();", "+      }", "+      else {", "+        setPosition(nextPotentialMatchLocation);", "+", "+        if (wholeWordFoundAtCurrent(searchDocument)) {", "+          System.err.println(\"I see word as: \" +", "+                             searchDocument.substring(_current.getOffset(),", "+                                                      _current.getOffset() + _findWord.length()));", "+          if (!_searchBackwards) {", "+            setPosition(getCurrentOffset() + _findWord.length());", "+          }", "+", "+          return new FindResult(_doc, getCurrentOffset(), _wrapped);", "+        }", "+        else {", "+          if (nextPotentialMatchLocation + findOffset < 0 ||", "+              nextPotentialMatchLocation + findOffset >= _doc.getLength()) {", "+            wrapAroundDocument();", "+          }", "+          setPosition(nextPotentialMatchLocation + findOffset);", "+        }", "+      }", "+    }", "+    setPosition(searchOriginLocation);", "+    return new FindResult(_doc, -1, _wrapped);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "748b2bbce88f7254addbaf1fe5b5acd7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void setBeep(Runnable beep)", "signatureAfterChange": "   public void setBeep(Runnable beep)", "diff": ["-    readLock();", "+    acquireReadLock();", "-    readUnlock();", "+    releaseReadLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74b69c80038dc0efec6902d284582909", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testErrorsArrayInOrder() throws Exception", "signatureAfterChange": "   public void testErrorsArrayInOrder() throws Exception", "diff": ["-   */", "+  /** Tests that the errors array contains all encountered failures and error in the right order. */", "-    if (_model.getCompilerModel().getNumErrors() > 0) {", "+    if (_model.getCompilerModel().getNumErrors() > 0)", "-    }", "-    synchronized(listener) {", "-      doc.startJUnit();", "-      listener.assertJUnitStartCount(1);", "-      listener.wait();", "-    }", "+    ", "+    _runJUnit(doc);", "+    ", "+    listener.assertJUnitStartCount(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74f80c8fa3f6579064914ab2923c216c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/Log.java", "commitBeforeChange": "de9a74b95459b3c3644152e88e6c7584955956bf", "commitAfterChange": "d4ef034d69b5fa1749fc45485a48a54743383a3f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public Log(String s)", "signatureAfterChange": "    public Log(String s)", "diff": ["-        FileWriter w = new FileWriter(f, true);", "+        FileWriter w = new FileWriter(f.getAbsolutePath(), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7516614a4372f10a653dc422e0a6ae89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "commitAfterChange": "3d71370f387f5ff990190106fcbfa93f8a159b9b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected void _updateButtons()", "signatureAfterChange": "   protected void _updateButtons()", "diff": ["-    _removeAllButton.setEnabled(_rootNode != null && _rootNode.getDepth() > 0);", "+    _removeAllButton.setEnabled(getRootNode() != null && getRootNode().getDepth() > 0);", "-    _removeAllButton.setEnabled(_rootNode != null && _rootNode.getDepth() > 0);", "+    _removeAllButton.setEnabled(getRootNode() != null && getRootNode().getDepth() > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7526ad75e722af34adbfca5c283dd21a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "405bec7d97445f0020939e0560dc10393430aac1", "commitAfterChange": "070ce5905e33fc289f79bfc0035862d6493d03f5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void setUp() throws IOException", "signatureAfterChange": "   public void setUp() throws IOException", "diff": ["+    _model.setResetAfterCompile(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "753ccdabca5052625a775e773fdc7a33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5481b029dfc07ee092049dc1e5006c0f887620a2", "commitAfterChange": "abf4f1180f29753cd298d5a45275f68e5c2b9b58", "methodNumberBeforeChange": 275, "methodNumberAfterChange": 279, "signatureBeforeChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "signatureAfterChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "diff": ["+    pane.addFocusListener(_focusListenerForRecentDocs);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75414eb70a6ca5c1f9abb54ddee6bcd1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "b578b7b4c7a4a91c29761e9d3bf28b378645bfda", "commitAfterChange": "7d20b14faca1d500f599ed54f40d60f42cf8097e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ProjectFileIR parse(File projFile)      throws IOException, FileNotFoundException, MalformedProjectFileException", "signatureAfterChange": "   public ProjectFileIR parse(File projFile)      throws IOException, FileNotFoundException, MalformedProjectFileException", "diff": ["-        evaluateExpression(exp, pfir);", "+        evaluateExpression(exp, pfir, new FileListVisitor(projFile.getParent()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7546ac3a7f235dd15ce29c55f54dea27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testGotoLine3() throws BadLocationException", "signatureAfterChange": "   public void testGotoLine3() throws BadLocationException", "diff": ["-    defModel.insertString(0, s, null);", "-    defModel.gotoLine(4);", "-    assertEquals(\"#0.0\", 6, defModel.getCurrentLocation());", "+    _defModel.insertString(0, s, null);", "+    _defModel.gotoLine(4);", "+    assertEquals(\"#0.0\", 6, _defModel.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "756d6be4ffd654d58d22b7c401f7c7ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Brace.java", "commitBeforeChange": "7b3e2baaa631329b7e3233840fa805eba66e7b61", "commitAfterChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic boolean isMultipleCharBrace()", "signatureAfterChange": "  \tpublic boolean isMultipleCharBrace()", "diff": ["-\t\t\treturn (isLineComment() || isBlockCommentStart() || isBlockCommentEnd());", "+\t\t\treturn (isLineComment() || isBlockCommentStart() ||", "+\t\t\t\t\t\t\tisBlockCommentEnd() || isDoubleEscapeSequence());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "758789213fdf298582cc0ab5c9e0a5df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtilTest.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testComputeInThreadWithException()", "signatureAfterChange": "      public void testComputeInThreadWithException()", "diff": ["+    debug.logStart();", "+    ", "-      assertTrue(e.getCause() instanceof InvocationTargetException);", "+      assertTrue(e.getCause() instanceof ExecutionException);", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "758cdd2595c8ac4d4005b5e67d7cef97", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ShadowingClassLoaderTest.java", "commitBeforeChange": "98a0206bc90f5eb73be3e2e6e290a67ee1cd136d", "commitAfterChange": "bd4a771b77ba1887596583ce142a4b7d1fa91b7e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testShadowedClassLoading() throws ClassNotFoundException", "signatureAfterChange": "      public void testShadowedClassLoading() throws ClassNotFoundException", "diff": ["+    debug.logStart();", "+    ", "-", "+    ", "+    ", "+    ShadowingClassLoader l3 = new ShadowingClassLoader(BASE_LOADER, false, \"edu.rice.cs.plt.reflect\");", "+    assertLoadsClass(BASE_LOADER, \"edu.rice.cs.plt.iter.IterUtil\");", "+    assertDoesNotLoadClass(l3, \"edu.rice.cs.plt.iter.IterUtil\");", "+    assertLoadsSameClass(BASE_LOADER, l3, \"edu.rice.cs.plt.reflect.ReflectUtil\");", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "758de2d37a31fe58d7021c45bbccf217", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testDoubleOps()", "signatureAfterChange": "   public void testDoubleOps() throws ExceptionReturnedException", "diff": ["-  public void testDoubleOps() {", "+  public void testDoubleOps() throws ExceptionReturnedException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75afe1fefcd7a008ab69ee868aadc2b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionInsideComment.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    System.err.println(\"QuestionInsideComment\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c049e609c1c50693475f601655133d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FontChooser.java", "commitBeforeChange": "6d214db24b68a17f17e0cc8f3030a6df6dfa9e3d", "commitAfterChange": "b1335a3b17a414ac9a5047d93a0387148d0d6ac9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public static Font showDialog(Frame parent, String title, Font font)", "signatureAfterChange": "   public static Font showDialog(Frame parent, String title, Font font)", "diff": ["+    ", "+    MainFrame.setPopupLoc(fd);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c65deff3634809fdf67caf510e1514", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 208, "methodNumberAfterChange": 235, "signatureBeforeChange": "   public static <T1, T2, R> Iterable<R>      valuesOf(Iterable<? extends Lambda2<? super T1, ? super T2, ? extends R>> iter, T1 arg1, T2 arg2)", "signatureAfterChange": "   public static <T1, T2, R> Iterable<R>      valuesOf(Iterable<? extends Lambda2<? super T1, ? super T2, ? extends R>> iter, T1 arg1, T2 arg2)", "diff": ["-    return new MappedIterable<Lambda2<? super T1, ? super T2, ? extends R>, R>", "-                 (iter, new Lambda2Value<T1, T2, R>(arg1, arg2));", "+    Lambda<Lambda2<? super T1, ? super T2, ? extends R>, R> l = ", "+      LambdaUtil.bindSecond(LambdaUtil.bindThird(LambdaUtil.<T1, T2, R>binaryApplicationLambda(), arg2), arg1);", "+    return new MappedIterable<Lambda2<? super T1, ? super T2, ? extends R>, R>(iter, l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75d0e3fd9d2a4d5c01ef74aa3ae4ac40", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "7159df222d88dee270188fe2cbffe74bb173d159", "commitAfterChange": "c73227da8024bfd14e7a2df3af6435d7a78133b3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testMemoryLeak() throws InterruptedException", "signatureAfterChange": "   public void testMemoryLeak() throws InterruptedException", "diff": ["-    // Adding the listeners will load the document into the cache", "+    // The model already has one empty document in the cache when the model is created", "+    // Attach a finalization listener to the DefinitionsDocument embedded in each of the", "+    // following OpenDefinitionsDocs.", "+    // At this point, 6 documents exist but only 4 can be in the cache; hence 2 embedded", "+    // DefinitionsDocuments have been freed", "+    // System.out.println(doc1 + \" \" + doc2 + \" \" + doc3 + \" \" + doc4 + \" \" + doc5);", "+    ", "-    assertEquals(\"One doc should have been collected\", 1, _memLeakCounter);", "+    assertEquals(\"Two docs should have been collected\", 2, _memLeakCounter);", "-", "+    // System.out.println(doc1 + \" \" + doc2 + \" \" + doc3 + \" \" + doc4 + \" \" + doc5);", "+    ", "+    ", "-    assertEquals(\"several docs should have been collected\", 6, _memLeakCounter);", "+    assertEquals(\"several docs should have been collected\", 4, _memLeakCounter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75d65cb75896f87b0c735e66436e5423", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "4cc63aff8a22c85ad1d78de9f4e0b9395e7d4e72", "commitAfterChange": "e330f3abbead97d3e3ac8751976bab81936096c2", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "\r \r     public void testIsIntermediateFile()", "signatureAfterChange": "      public void testIsIntermediateFile()", "diff": ["-\r", "-    public void testIsIntermediateFile() {\r", "-      _llv = new ElementaryVisitor(new File(\"elementary.dj0\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>(), null);\r", "-      assertFalse(\"This is an elementary file\", _isIntermediateFile());\r", "-      _llv = new IntermediateVisitor(new File(\"intermediate.dj1\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>(), null);\r", "-      assertTrue(\"This is an intermediate file\", _isIntermediateFile());\r", "-      _llv = new AdvancedVisitor(new File(\"advanced.dj2\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>(), null);\r", "-      assertFalse(\"This is an advanced file\", _isIntermediateFile());\r", "-      _llv = new ElementaryVisitor(new File(\"full.java\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>(), null);\r", "-      assertFalse(\"This is a full file\", _isIntermediateFile());\r", "-    }\r", "+", "+    public void testIsIntermediateFile() {", "+      _llv = new ElementaryVisitor(new File(\"elementary.dj0\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>());", "+      assertFalse(\"This is an elementary file\", _isIntermediateFile());", "+      _llv = new IntermediateVisitor(new File(\"intermediate.dj1\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>());", "+      assertTrue(\"This is an intermediate file\", _isIntermediateFile());", "+      _llv = new AdvancedVisitor(new File(\"advanced.dj2\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>());", "+      assertFalse(\"This is an advanced file\", _isIntermediateFile());", "+      _llv = new ElementaryVisitor(new File(\"full.java\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>());", "+      assertFalse(\"This is a full file\", _isIntermediateFile());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75f7c8d920e43cee4fb0cadadbe8f6b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/KeyStrokeOptionComponent.java", "commitBeforeChange": "c6d47a91516f048d660d1fffa90740efe29371c5", "commitAfterChange": "68368361f4380d060555d6ff4452e2a0dbbd3540", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public void promptKey(KeyStrokeOptionComponent k)", "signatureAfterChange": "         public void promptKey(KeyStrokeOptionComponent k)", "diff": ["-      _instructionLabel.setText(\"Type in the keystroke you want to use for \" +", "+      _instructionLabel.setText(\"Type in the keystroke you want to use for \\\"\" +", "-                                \" and click \\\"OK\\\"\");", "+                                \"\\\" and click \\\"OK\\\"\");", "-      _actionLabel.setText(\"<none>\");", "-      _inputField.setText(\"\");", "+      _actionLabel.setText(k.getLabelText());", "+      _inputField.setText(_option.format(_currentKeyStroke));", "-      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7609012f59bca1e1f7252ad90d3e9cef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testGotoLine7() throws BadLocationException", "signatureAfterChange": "   public void testGotoLine7() throws BadLocationException", "diff": ["-    _defModel.insertString(0, s, null);", "-    _defModel.gotoLine(3);", "-    assertEquals(\"#0.0\", 11, _defModel.getCurrentLocation());", "+    _doc.insertString(0, s, null);", "+    _doc.gotoLine(3);", "+    assertEquals(\"#0.0\", 11, _doc.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "762472826817c508e2f986a67b5ab316", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "b0d972d74202b06a8aec19804a46939a0aac3bf3", "commitAfterChange": "f81eb3cdab335666760ab0cb868fe3567723e9df", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "   public void resetUndoManager()", "signatureAfterChange": "   public void resetUndoManager()", "diff": ["-    _undoManager = new CompoundUndoManager();", "+    _undoManager = new CompoundUndoManager(_notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "765cdc0d2435f064b6f1e3538e31fc58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private static void _ensureColInRow(String fullString, int col, int rowStartIndex)", "signatureAfterChange": "   private static void _ensureColInRow(String fullString, int col, int rowStartIndex)", "diff": ["-    int endOfLine = fullString.indexOf(NEWLINE,rowStartIndex);", "+    int endOfLine = fullString.indexOf(\"\\n\",rowStartIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "767afd418343237bb46f843b4e693696", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 645, "methodNumberAfterChange": 650, "signatureBeforeChange": "    final private boolean jj_3R_165()", "signatureAfterChange": "    final private boolean jj_3R_169()", "diff": ["-  final private boolean jj_3R_165() {", "+  final private boolean jj_3R_169() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;", "-    if (jj_3R_206()) return true;", "+    if (jj_3R_211()) return true;", "-    if (jj_3R_553()) jj_scanpos = xsp;", "+    if (jj_3R_560()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76a8aab9017569190c94ecc9b43196b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 686, "methodNumberAfterChange": 687, "signatureBeforeChange": "    final private boolean jj_3R_461()", "signatureAfterChange": "    final private boolean jj_3R_467()", "diff": ["+", "+  final private boolean jj_3R_467() {", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_470()) { jj_scanpos = xsp; break; }", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_3R_471()) jj_scanpos = xsp;", "-  final private boolean jj_3R_461() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_464()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_465()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76afe5391ea709c69b910014b829e6fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 512, "methodNumberAfterChange": 374, "signatureBeforeChange": "    final private boolean jj_3R_98()", "signatureAfterChange": "    final private boolean jj_3R_341()", "diff": ["+  final private boolean jj_3R_341() {", "+    if (jj_3R_350()) return true;", "+    if (jj_3R_361()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_98() {", "-    if (jj_3R_150()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_205()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76b0d821cc06f4c8beff2cf4b0522890", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 415, "methodNumberAfterChange": 325, "signatureBeforeChange": "    final private boolean jj_3R_334()", "signatureAfterChange": "    final private boolean jj_3R_106()", "diff": ["+  final private boolean jj_3R_106() {", "+    if (jj_3R_157()) {", "+    if (jj_3R_158()) return true;", "-", "-  final private boolean jj_3R_334() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_341()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_342()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76b4f945fe61ddc6da5b77d0c8b33892", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "936df97bedea66175f36cae49ba74b17abf11e8a", "commitAfterChange": "d43c6d20ec903cbbb4ee5291a112b3b3ae570823", "methodNumberBeforeChange": 218, "methodNumberAfterChange": 218, "signatureBeforeChange": "   public boolean hasUntitledDocuments()", "signatureAfterChange": "   public boolean hasUntitledDocuments()", "diff": ["-    OpenDefinitionsDocument[] docs;", "-    ", "-    synchronized(_documentsRepos) { docs = _documentsRepos.toArray(new OpenDefinitionsDocument[0]); }", "-    for (OpenDefinitionsDocument doc: docs) {", "+    for (OpenDefinitionsDocument doc: getOpenDefinitionsDocuments()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76b7163a8f7254c54cb691befc971d2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "5a42b92d770342c963138046c93f1390dcf62017", "commitAfterChange": "b29182d94c1064d5f838746a211b47a58b37d210", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   private void _setupMiscPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupMiscPanel(ConfigPanel panel)", "diff": ["-    if(CodeStatus.DEVELOPMENT){", "-      panel.addComponent(new StringOptionComponent(OptionConstants.JVM_ARGS, \"JVM Args\", this,", "-                                                   \"The command-line arguments to pass to the Interpreter JVM.\"));", "-    }", "+    panel.addComponent(new StringOptionComponent(OptionConstants.JVM_ARGS, \"JVM Args for Interactions\", this,", "+                                                 \"The command-line arguments to pass to the Interactions JVM.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76c2271d04f5ffa96bc3ccbaab0eef9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyFullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "          public void xtestForMethodDefDoFirst()", "signatureAfterChange": "          public void xtestForMethodDefDoFirst()", "diff": ["-      ConcreteMethodDef cmd = new ConcreteMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      ConcreteMethodDef cmd = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "-                                                    new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                                    new Word(JExprParser.NO_SOURCE_INFO, \"methodName\"),", "+                                                    new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                                    new Word(SourceInfo.NO_INFO, \"methodName\"),", "-                                                    new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76c41b894f520120a7ec1bb508299283", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlusTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testBothIndented() throws javax.swing.text.BadLocationException", "signatureAfterChange": "   public void testBothIndented() throws javax.swing.text.BadLocationException", "diff": ["-    assertEquals(\"  foo\\n  bar\", _doc.getText(0, 11));", "+    assertEquals(\"  foo\\n  bar\", _doc.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76ce0ce27566875df449cf3e6413a3d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "5e30c7f70ee8822945ce8efbfadabc105dbf602f", "commitAfterChange": "d1b53b456f7dd4cc72458a21036639096a69a74e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public DefinitionsPane(MainFrame mf, GlobalModel model)", "signatureAfterChange": "   public DefinitionsPane(MainFrame mf, GlobalModel model)", "diff": ["+    setDocument(_model.getDefinitionsDocument());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76ed0ba61c71eeabc4c6f750c80f4a21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsController.java", "commitBeforeChange": "a8ba898ce33911122e91ee2c93e5825d2f8c0e22", "commitAfterChange": "54ca35a697068e061a6e4015227b37b547246d01", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected void _setupModel()", "signatureAfterChange": "   protected void _setupModel()", "diff": ["+    _model.setInputListener(_inputListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7703f037d0a9ce50c074edad9a824719", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 328, "methodNumberAfterChange": 324, "signatureBeforeChange": "      private void _compileFolder()", "signatureAfterChange": "      private void _compileFolder()", "diff": ["-    simpleHourglassOn();", "+    hourglassOn();", "-    finally { simpleHourglassOff(); }", "+    finally { hourglassOff(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77097d13020342e7509efecb79962307", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/tuple/Option.java", "commitBeforeChange": "0e1d09dde6936169177bd564168991351deb65d8", "commitAfterChange": "a4e2145de592013fb29da195ee7f505ebce1be18", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "   @SuppressWarnings(\"unchecked\")   public static <T> Option<T> none()", "signatureAfterChange": "   @SuppressWarnings(\"unchecked\") public static <T> Option<T> none()", "diff": ["-  @SuppressWarnings(\"unchecked\")", "-  public static <T> Option<T> none() {", "-    // Compiler doesn't like this (!):", "-    // return (Option<T>) Null.INSTANCE;", "-    Option<Void> result = Null.INSTANCE;", "-    return (Option<T>) result;", "+  @SuppressWarnings(\"unchecked\") public static <T> Option<T> none() {", "+    return (Option<T>) Null.INSTANCE;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "775a40b7682f3f3f52233b66a43b63a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 580, "methodNumberAfterChange": 579, "signatureBeforeChange": "    final private boolean jj_3R_284()", "signatureAfterChange": "    final private boolean jj_3R_287()", "diff": ["-  final private boolean jj_3R_284() {", "+", "+  final private boolean jj_3R_287() {", "-    if (jj_3R_252()) return true;", "+    if (jj_3R_254()) return true;", "-    if (jj_3R_469()) return true;", "+    if (jj_3R_475()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "776b5b000ae2498cc252ed5ec1fbab0e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public File getWorkingDirectory()", "signatureAfterChange": "     public File getWorkingDirectory()", "diff": ["-    /** @return the working directory stored in this project file (null is converted to FileOption.NULL_FILE. */", "-    public File getWorkingDirectory() {", "-      if (_workDir != null) return _workDir; ", "-      return FileOption.NULL_FILE;", "-    }", "+    /** @return the working directory stored in this project file . */", "+    public File getWorkingDirectory() { return _workDir; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "777c17c0c1e79b043e7354b625876f3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "0f5802fd0bfcac88fdf9ed629119c5b60fc353ef", "commitAfterChange": "af3d2665565d850db91ca07a41202bb19156c449", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void addClassPath(String path)", "signatureAfterChange": "    public void addClassPath(String path)", "diff": ["-\t\tSystem.out.println(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7787278b1da13bb3e6c507018d443a69", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 457, "methodNumberAfterChange": 454, "signatureBeforeChange": "    final private boolean jj_3R_245()", "signatureAfterChange": "    final private boolean jj_3R_247()", "diff": ["+  final private boolean jj_3R_247() {", "+    if (jj_scan_token(HOOK)) return true;", "+    if (jj_3R_104()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_157()) return true;", "-  final private boolean jj_3R_245() {", "-    if (jj_scan_token(HOOK)) return true;", "-    if (jj_3R_103()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_155()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77a5b5a621f325f49b2a26e3be7d5ad0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testInteractionsCanSeeChangedClass()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsCanSeeChangedClass()     throws BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-    throws BadLocationException, IOException, InterruptedException", "+    throws BadLocationException, DocumentAdapterException,", "+    IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77a92e96652a1306fafb86db8dfd5f89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testInterpretJavaArguments() throws DocumentAdapterException", "signatureAfterChange": "   public void testInterpretJavaArguments()", "diff": ["-  public void testInterpretJavaArguments() throws DocumentAdapterException {", "+  public void testInterpretJavaArguments() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77ab07be03c490c8183e594ce09ad521", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "ce73fdb27a8e7aa886580e240ca54bfd98e64031", "commitAfterChange": "4cf68dc70458288095c944d37276893b11daf353", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   private FindResult _findNextInDocSegment(final OpenDefinitionsDocument doc, final int start, final int origLen,                                             final boolean wrapped, final boolean allWrapped)", "signatureAfterChange": "   private FindResult _findNextInDocSegment(final OpenDefinitionsDocument doc, final int start, final int origLen,                                             final boolean wrapped, final boolean allWrapped)", "diff": ["-      doc.acquireReadLock(); ", "-      try { text = doc.getText(start, len); }", "-      finally { doc.releaseReadLock(); }", "+      //doc.acquireReadLock(); ", "+      text = doc.getText(start, len);", "+      //finally { doc.releaseReadLock(); }", "-        _current = doc.createPosition(matchLocation);   // formerly doc.createPosition(...)", "+        //_current = doc.createPosition(matchLocation);   // formerly doc.createPosition(...)", "+        setPosition(matchLocation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77af14517da3d2e67c43c6068d67cb6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "24a1f858d68df0b918509903332d1ccee255eb85", "commitAfterChange": "4a3f93e2a406e3962e60f635bd24485059967bca", "methodNumberBeforeChange": 393, "methodNumberAfterChange": 392, "signatureBeforeChange": "    public void hourglassOff()", "signatureAfterChange": "    public void hourglassOff()", "diff": ["-      _menuBar.setEnabled(true);", "+      // _menuBar.setEnabled(true); // causes problems on Mac OS 10.6; make sure this runs in the event thread?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77fc4d9483d3cecf6ff761aa7890cf1d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 267, "methodNumberAfterChange": 270, "signatureBeforeChange": "    final private boolean jj_3_71()", "signatureAfterChange": "    final private boolean jj_3_73()", "diff": ["-  final private boolean jj_3_71() {", "+  final private boolean jj_3_73() {", "-    if (jj_3R_94()) return true;", "-    if (jj_3R_304()) return true;", "+    if (jj_3R_95()) return true;", "+    if (jj_3R_305()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77fc5105c4ae7fcf593f37fc6ada659c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "d1ffac675273323f7a1b9777462d16896d09a1af", "commitAfterChange": "c0ad820565377d42d023afeab71166682f497054", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testCreateManualToolbarButton()", "signatureAfterChange": "   public void testCreateManualToolbarButton()", "diff": ["-//    _log.log(\"testCreateManualToobarButton completed\");", "+    _log.log(\"testCreateManualToobarButton completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7803535a8339df455c9782e1b2422981", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-      _region.getDocument().readLock();", "+      _region.getDocument().acquireReadLock();", "-      } finally { _region.getDocument().readUnlock(); }", "+      } finally { _region.getDocument().releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "781c028b973a7dd9092c972ecfc63175", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public synchronized void scrollToSource(DebugStackData stackData)     throws DebugException", "signatureAfterChange": "   public synchronized void scrollToSource(DebugStackData stackData)     throws DebugException", "diff": ["-    Iterator<StackFrame> i = null;", "+    Iterator i = null;", "-      i = threadRef.frames().iterator(); // JDK 1.5 will eliminate this warning", "+      i = threadRef.frames().iterator();", "-      StackFrame frame = i.next();", "+      StackFrame frame = (StackFrame) i.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "782908ebd8188232dbad3fa9df2e8743", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5944dd2b12a74ebad6e3549d813d2dd557403c7e", "commitAfterChange": "53735c967d2add6a16ab5776bac9111426f41996", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 164, "signatureBeforeChange": "   private void _setUpToolBar()", "signatureAfterChange": "   private void _setUpToolBar()", "diff": ["-    _javadocButton = _createToolbarButton(_javadocAction);", "+    _javadocButton = _createToolbarButton(_javadocAllAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7834ff212cdb6d64e0f1944b777d4cc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testReplaceCreatesMatchBackwards() throws BadLocationException", "signatureAfterChange": "   public void testReplaceCreatesMatchBackwards() throws BadLocationException", "diff": ["-    _frm.replaceAll();", "+    replaceAll();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7837023fd33a3e7b92cdcaff08c231ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 749, "methodNumberAfterChange": 717, "signatureBeforeChange": "    final private boolean jj_3R_488()", "signatureAfterChange": "    final private boolean jj_3R_536()", "diff": ["+  final private boolean jj_3R_536() {", "-  final private boolean jj_3R_488() {", "-    if (jj_scan_token(DECREMENT)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "785032d3f90dca972fe8bae4c3bc0c5d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "3d71370f387f5ff990190106fcbfa93f8a159b9b", "commitAfterChange": "c7cf97829e412463c33fef76eb49ab99dfa7be2a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   private void _bookmark()", "signatureAfterChange": "   private void _bookmark()", "diff": ["-    RegionManager<MovingDocumentRegion> bm = _model.getBookmarkManager();", "+    RegionManager<MovingDocumentRegion> bm = getGlobalModel().getBookmarkManager();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "785db865d79107e5713d1d7af4d137c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 722, "methodNumberAfterChange": 723, "signatureBeforeChange": "    final private boolean jj_3R_160()", "signatureAfterChange": "    final private boolean jj_3R_162()", "diff": ["-  final private boolean jj_3R_160() {", "-    if (jj_3R_193()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_194()) { jj_scanpos = xsp; break; }", "-    }", "+  final private boolean jj_3R_162() {", "+    if (jj_3R_195()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_196()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7860669a3264ff9283739f9b11651b1a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testSemicolon()", "signatureAfterChange": "   public void testSemicolon() throws ExceptionReturnedException", "diff": ["-  public void testSemicolon() {", "+  public void testSemicolon() throws ExceptionReturnedException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7866d8195e7d1ecee12ffbf16ecd24ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "commitAfterChange": "3d71370f387f5ff990190106fcbfa93f8a159b9b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   protected void enableDisableBreakpoint()", "signatureAfterChange": "   protected void enableDisableBreakpoint()", "diff": ["-        _regionManager.changeRegion(bp, new Lambda<Breakpoint,Object>() {", "+        getRegionManager().changeRegion(bp, new Lambda<Breakpoint,Object>() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78718a685b907950dbcee8eb195703f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 367, "signatureBeforeChange": "    final private boolean jj_3R_330()", "signatureAfterChange": "    final private boolean jj_3R_261()", "diff": ["+", "+  final private boolean jj_3R_261() {", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_110()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_170()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_330() {", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_107()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_298()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78ad2ce4c0a611b64bd0d8f0cdade47a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public void testWorksAfterRestartConstant() throws Throwable", "signatureAfterChange": "    public void testWorksAfterRestartConstant() throws Throwable", "diff": ["+    _jvm.resetFlags();", "-    assertEquals(\"result\", \"5\", _jvm.returnBuf);", "+    assertEquals(\"result\", \"5\", _jvm.returnBuf());", "-    synchronized(_testLock) {", "-      _jvm.killInterpreter(FileOps.NULL_FILE);  // \"\" is not null: start back up", "-      _testLock.wait();", "-    }", "+    _jvm.killInterpreterJVM(FileOps.NULL_FILE);  // \"\" is not null: start back up", "+    _jvm.resetFlags();", "-    assertEquals(\"result\", \"4\", _jvm.returnBuf);", "+    assertEquals(\"result\", \"4\", _jvm.returnBuf());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78b2d1e511ec3b4f21294db34d9821bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsEditorKit.java", "commitBeforeChange": "b05d6101d72721dc72e1089de24af7a09f520884", "commitAfterChange": "1c36c4f5a2718b62938a20268edf5b2f24819a2b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void actionPerformed(ActionEvent e)", "signatureAfterChange": "      public void actionPerformed(ActionEvent e)", "diff": ["-      LOG.log(\"NextWordAction.actionPerformed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c56cbe7babd86d6fd1f7018a2ae048", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 367, "methodNumberAfterChange": 709, "signatureBeforeChange": "    final private boolean jj_3R_418()", "signatureAfterChange": "    final private boolean jj_3R_391()", "diff": ["-  final private boolean jj_3R_418() {", "-    if (jj_3R_402()) return true;", "-      if (jj_3R_448()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_391() {", "+    if (jj_3R_406()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_407()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c63c24cd3913ee8186def9b7bf50bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 160, "signatureBeforeChange": "   final public void methodDeclarationLookahead() throws ParseException", "signatureAfterChange": "   final public void constructorDeclarationLookahead() throws ParseException", "diff": ["+      jj_la1[181] = jj_gen;", "-      jj_la1[183] = jj_gen;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78d2350b7ee6321501eb545ab30828e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3bfda0ffd8a22eda2f2daab913b510305e1ef801", "commitAfterChange": "02d5c825c13aaa4caad6b7e4e89ccbdbfdc16c9f", "methodNumberBeforeChange": 566, "methodNumberAfterChange": 568, "signatureBeforeChange": "   private void _setUpTabs()", "signatureAfterChange": "   private void _setUpTabs()", "diff": ["+     _interactionsPane.addFocusListener(_undoRedoInteractionFocusListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78f1d648e3e66488709d3b5b770fb766", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 568, "methodNumberAfterChange": 565, "signatureBeforeChange": "    final private boolean jj_3R_271()", "signatureAfterChange": "    final private boolean jj_3R_305()", "diff": ["-    if (jj_scan_token(HOOK)) return true;", "-    if (jj_3R_110()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_172()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_305() {", "+    if (jj_scan_token(HOOK)) return true;", "+    if (jj_3R_112()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_180()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78f855b5497f5b3ba5aa24098b3c4dde", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3c18a1d03b53a699adfbc2df00845e9d60f9d1f5", "commitAfterChange": "4ec6eda5e5d4bd8e2b6e61afae08eb8548f8c4b5", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 148, "signatureBeforeChange": "   boolean _closeProject()", "signatureAfterChange": "   boolean _closeProject()", "diff": ["+      _junitProjectAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7905915aeaf3c5e7980d893c64eaa7d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CompoundUndoManager.java", "commitBeforeChange": "eceb1efda2a64c0d1777a241a780b6640565e74e", "commitAfterChange": "985a2a7aa160a776eff6e6187000ef0ccbcb7ce0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void undo()", "signatureAfterChange": "   public void undo()", "diff": ["-      throw new CannotUndoException();", "+      while (_keys.size() > 0) {", "+        endCompoundEdit(_keys.get(0).intValue());", "+      }", "+      super.undo();", "+//      throw new CannotUndoException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7911e28746b95bf665516e878bff0707", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "      public void testRepeatedName()", "signatureAfterChange": "      public void testRepeatedName()", "diff": ["-      System.err.println(\"testRepeatedName finished\");", "+//      System.err.println(\"testRepeatedName finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "791ed5724ddd8858b8c55d645fc2cd23", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testVerifyErrorHandledCorrectly() throws Exception", "signatureAfterChange": "   public void testVerifyErrorHandledCorrectly() throws Exception", "diff": ["-    synchronized(listener2) {", "-//      System.out.println(\"starting junit\");", "-      doc2.startJUnit();", "-      listener2.wait();", "-    }", "+    _runJUnit(doc2);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79485f1a185b503a9b35992b7c4d284f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testNotEmptyOnStartup() throws BadLocationException", "signatureAfterChange": "   public void testNotEmptyOnStartup() throws BadLocationException", "diff": ["-//    _log.log(\"testNotEmptyOnStartup completed\");", "+    _log.log(\"testNotEmptyOnStartup completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7957e0ac0729f1acfa93582b356d84c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TigerTest.java", "commitBeforeChange": "e70766c672e058ab37ae5757bf5008b997a8ff63", "commitAfterChange": "5089bb7a50fb7750f9e599079bf91522d8072d34", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void xtestStaticImport()", "signatureAfterChange": "   public void testStaticImport()", "diff": ["-  // Interpreting STATIC IMPORT, NOT YET SUPPORTED", "-  public void xtestStaticImport(){", "-    //STATIC FIELD", "-    testString =", "-      \"import static java.lang.Integer.MAX_VALUE;\\n\"+", "-      \"class A{\\n\"+", "-      \"  int m(){return MAX_VALUE;}\\n\"+", "-      \"}\\n\"+", "-      \"A a = new A(); a.m();\\n\";", "-    ", "-    assertEquals(new Integer(java.lang.Integer.MAX_VALUE), interpret(testString));", "+  // Interpreting static import. Static import of fields not yet supported", "+  public void testStaticImport(){", "+//    //STATIC FIELD", "+//    testString =", "+//      \"import static java.lang.Integer.MAX_VALUE;\\n\"+", "+//      \"class A{\\n\"+", "+//      \"  int m(){return MAX_VALUE;}\\n\"+", "+//      \"}\\n\"+", "+//      \"A a = new A(); a.m();\\n\";", "+//    ", "+//    assertEquals(new Integer(java.lang.Integer.MAX_VALUE), interpret(testString));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79638a4ef876dc3a42480055adcfc30b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b6bfdc97713285768c8b922127b436d974f9f1e4", "commitAfterChange": "25355ecd0bc01ef2920944ee4f7366c5c45c1e55", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void testSetChangeInputListener()", "signatureAfterChange": "   public void testSetChangeInputListener()", "diff": ["+    _log.log(\"testSetChangeInputListener started\");", "+    _log.log(\"testSetChangeInputListener ended\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79651c1a7662b5ad73f148cf4efb5409", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6d9f2ce37ba22041a5b2840cffbd0f66339165b6", "commitAfterChange": "b153c43e59717c98f32c67f14d61a00a81016991", "methodNumberBeforeChange": 284, "methodNumberAfterChange": 390, "signatureBeforeChange": "    final private boolean jj_3R_501()", "signatureAfterChange": "    final private boolean jj_3R_501()", "diff": ["-", "-  final private boolean jj_3R_501() {", "-    if (jj_scan_token(DECREMENT)) return true;", "+", "+  final private boolean jj_3R_501() {", "+    if (jj_3R_507()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7988891b685c4374a8feee70b3053bf3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 610, "methodNumberAfterChange": 610, "signatureBeforeChange": "    final private boolean jj_3R_571()", "signatureAfterChange": "    final private boolean jj_3R_570()", "diff": ["+  final private boolean jj_3R_570() {", "+    if (jj_scan_token(THIS)) return true;", "+    if (jj_3R_97()) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_571() {", "-    if (jj_scan_token(THIS)) return true;", "-    if (jj_3R_95()) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79a240694fd81a3d480dd6791730813a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 440, "methodNumberAfterChange": 371, "signatureBeforeChange": "    final private boolean jj_3R_157()", "signatureAfterChange": "    final private boolean jj_3R_158()", "diff": ["-", "-  final private boolean jj_3R_157() {", "-    if (jj_3R_191()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_247()) jj_scanpos = xsp;", "+", "+  final private boolean jj_3R_158() {", "+    if (jj_3R_192()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_248()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79d11c0c0ecdd798640c4113a148ceee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "a25fe41044d292186863ba8ddd26164fdef4fc59", "commitAfterChange": "682bd0a2b528d852a57206c89ed5bb4a5b484c14", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public static void restartIfNecessary(boolean forToolsJar, String[] args)", "signatureAfterChange": "   public static void restartIfNecessary(boolean forToolsJar, String[] args)", "diff": ["-    if (!forToolsJar) {", "-      if (!_usingJSR14v20 || bootClasspathHasJSR14v20()) {", "-        return;", "-      }", "-    }", "+    if (!forToolsJar && (!_usingJSR14v20 || bootClasspathHasJSR14v20())) return;", "-    else {", "-      jvmArgs = new String[0];", "-    }", "+    else jvmArgs = new String[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79e5f69874ef1db6c8704dd86527d800", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/GJv6Compiler.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public CompilerError[] compile(File sourceRoot, File[] files)", "signatureAfterChange": "   public CompilerError[] compile(File sourceRoot, File[] files)", "diff": ["-        new CompilerError(\"\", -1, -1, \"Compile exception: \" + t, false)", "+        new CompilerError(\"Compile exception: \" + t, false)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79e80d9e82d104c7cf006d827153c5f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/GlobalContext.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public Class<?> setProperties(ClassAllocation node, Class<?> c, Class<?>[] args, List<Node> memb)", "signatureAfterChange": "   public Class<?> setProperties(ClassAllocation node, Class<?> c, Class<?>[] args, List<Node> memb)", "diff": ["-                                     new LinkedList<ReferenceType>(),", "+                                     new LinkedList<ReferenceTypeName>(),", "-    ReferenceType ext = null;", "-    List<ReferenceType> impl = null;", "+    ReferenceTypeName ext = null;", "+    List<ReferenceTypeName> impl = null;", "-      impl = new LinkedList<ReferenceType>();", "+      impl = new LinkedList<ReferenceTypeName>();", "-      impl.add(new ReferenceType(intf));", "+      impl.add(new ReferenceTypeName(intf));", "-      ext = new ReferenceType(l);", "+      ext = new ReferenceTypeName(l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a0c2df01c92ff306e113830542fdd4c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 66, "signatureBeforeChange": "   public void testFileMovedWhenTriedToSave()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testFileMovedWhenTriedToSave()     throws BadLocationException, IOException", "diff": ["+    ", "+    ", "+    _log.log(\"testFileMovedWhenTriedToSave completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a36cc013b406f906b40417aeac8029f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "72163ebd454d71c0955c00c7a1a43c6fa207331b", "commitAfterChange": "cdddd415c8ee9888478b5a253ffbb086fce1ed57", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": "   private JMenu _setUpEditMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpEditMenu(int mask)", "diff": ["-      tmpItem = editMenu.add(_cutAction);", "+      tmpItem = editMenu.add(cutAction);", "-      tmpItem = editMenu.add(_copyAction);", "+      tmpItem = editMenu.add(copyAction);", "-      tmpItem = editMenu.add(_pasteAction);", "+      tmpItem = editMenu.add(pasteAction);", "-      _addMenuItem(editMenu, _cutAction, KEY_CUT);", "-      _addMenuItem(editMenu, _copyAction, KEY_COPY);", "-      _addMenuItem(editMenu, _pasteAction, KEY_PASTE);", "+      _addMenuItem(editMenu, cutAction, KEY_CUT);", "+      _addMenuItem(editMenu, copyAction, KEY_COPY);", "+      _addMenuItem(editMenu, pasteAction, KEY_PASTE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a385fba681888f69d8634c7db1ff3d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 477, "methodNumberAfterChange": 815, "signatureBeforeChange": "    final private boolean jj_3R_377()", "signatureAfterChange": "    final private boolean jj_3R_366()", "diff": ["-", "-  final private boolean jj_3R_377() {", "-    if (jj_3R_423()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_441()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_366() {", "+    if (jj_3R_420()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_462()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a3e1458287713aca2a5ffc26c40ec4c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6321c6a506dc33e42eaf8a2fcb096efc58a17cfa", "commitAfterChange": "3ab388200c9c1c0450b2c8e9399bd85a6a67bf11", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "    private void _junit()", "signatureAfterChange": "    private void _junit()", "diff": ["+    catch (ExitingNotAllowedException enae) {", "+      JOptionPane.showMessageDialog(this,", "+                                    \"An exception occurred while running JUnit, which could\\n\" +", "+                                    \"not be caught be DrJava.  Details about the exception should\\n\" +", "+                                    \"have been printed to your console.\\n\\n\",", "+                                    \"Error Running JUnit\",", "+                                    JOptionPane.ERROR_MESSAGE);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a658e01d0e6ee68cc11526236449df9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 644, "methodNumberAfterChange": 624, "signatureBeforeChange": "    final private boolean jj_3R_377()", "signatureAfterChange": "    final private boolean jj_3R_376()", "diff": ["-", "-  final private boolean jj_3R_377() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_82()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_397()) return true;", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_376() {", "+    if (jj_3_44()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_379()) return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a93e0d217abf185537691f332f3ce18", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testIndentGrowTabAtMiddle()       throws BadLocationException, OperationCanceledException", "signatureAfterChange": "   public void testIndentGrowTabAtMiddle()       throws BadLocationException, OperationCanceledException", "diff": ["-    openDoc.syncCurrentLocationWithDefinitions(FOO_EX_1.length() + 5);", "-    int loc = openDoc.getCurrentDefinitionsLocation();", "+    openDoc.setCurrentLocation(FOO_EX_1.length() + 5);", "+    int loc = openDoc.getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aa0a47236916735b97d22815b2f84d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "e99723007606c50032c4a82ba80b9d94aaabe6bc", "commitAfterChange": "958f548f8cc751514e1497672b492b70657c4b6e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public boolean saveSettings()", "signatureAfterChange": "   public boolean saveSettings()", "diff": ["-    File mc = _mainDocumentSelector.getFileFromField();", "-    if (_mainDocumentSelector.getFileField().getText().equals(\"\")) mc = FileOps.NULL_FILE;", "+    String mc = _mainDocumentSelector.getText();", "+    Log.log(\"set: \"+mc+\"\\n\");", "+    if(mc == null) mc = \"\";", "+    Log.log(\"get: \"+_model.getMainClass());", "+    Log.log(\"file: \"+_model.getMainClassContainingFile());", "+    ", "+    Log.log(\"post: \"+_mainDocumentSelector.getText());", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aa38265f68f38e84cdaac2aabb4c46b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "     public Object visit(NotEqualExpression node)", "signatureAfterChange": "   public Class visit(NotEqualExpression node)", "diff": ["+   */", "+  public Class visit(NotEqualExpression node) {", "+    // Check the types", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    Class lc = (Class)ln.acceptVisitor(this);", "+    Class rc = (Class)rn.acceptVisitor(this);", "+    ", "+    checkEqualityStaticRules(lc, rc, node);", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.notEqualTo(lc, rc,", "+                                         ln.getProperty(NodeProperties.VALUE),", "+                                         rn.getProperty(NodeProperties.VALUE)));", "+    }", "+    ", "+    // Set the type property", "+    node.setProperty(NodeProperties.TYPE, boolean.class);", "+    return boolean.class;", "+  }", "-     */", "-    public Object visit(NotEqualExpression node) {", "-        // Check the types", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-        Class lc = (Class)ln.acceptVisitor(this);", "-        Class rc = (Class)rn.acceptVisitor(this);", "-", "-        checkEqualityStaticRules(lc, rc, node);", "-                                 ", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.notEqualTo(lc, rc,", "-\t\t\t\t\t\t ln.getProperty(NodeProperties.VALUE),", "-\t\t\t\t\t\t rn.getProperty(NodeProperties.VALUE)));", "-", "-        // Set the type property", "-        node.setProperty(NodeProperties.TYPE, boolean.class);", "-        return boolean.class;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aecec8c4b569a59a8a8469514e559b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 635, "methodNumberAfterChange": 553, "signatureBeforeChange": "    final private boolean jj_3R_409()", "signatureAfterChange": "    final private boolean jj_3R_312()", "diff": ["+  final private boolean jj_3R_312() {", "+    if (jj_3R_317()) return true;", "+      if (jj_3R_318()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_409() {", "-    if (jj_3R_117()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3_83()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7af6ba4a1baa8d617edec3413c2d3d14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 364, "methodNumberAfterChange": 366, "signatureBeforeChange": "    final private boolean jj_3R_366()", "signatureAfterChange": "    final private boolean jj_3R_505()", "diff": ["+", "+  final private boolean jj_3R_505() {", "+    if (jj_3R_510()) return true;", "+    if (jj_3R_342()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_366() {", "-    if (jj_scan_token(NOT_EQUAL)) return true;", "-    if (jj_3R_344()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b156eaf4c75f962aa6704322747287a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public boolean findCharInStmtBeforePos(char findChar, int position)", "signatureAfterChange": "   public boolean findCharInStmtBeforePos(char findChar, int position)", "diff": ["-    boolean found = false;", "+    boolean found;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b1ce8ef4660d875dfbf8b0cbf3cab0c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public Void visit(PostIncrement node)", "signatureAfterChange": "   public Void visit(CharTypeName node)", "diff": ["+   */", "+  public Void visit(CharTypeName node) {", "+    handlePrimitiveTypeName(node, \"char\");", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b1d6775645431d5611187335348f173", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 766, "methodNumberAfterChange": 752, "signatureBeforeChange": "    final private boolean jj_3R_202()", "signatureAfterChange": "    final private boolean jj_3R_210()", "diff": ["+", "+  final private boolean jj_3R_210() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_3R_97()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_202() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_3R_94()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b3d33d29f7839645f887660f85010aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyFullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Void forSimpleAnonymousClassInstantiation(SimpleAnonymousClassInstantiation that)", "signatureAfterChange": "   public Void forSimpleAnonymousClassInstantiation(SimpleAnonymousClassInstantiation that)", "diff": ["-//    System.err.println(\"Calling simpleAnonymousClassInstantiation Helper from InterfaceBody \" + that.getSourceInfo());", "+    System.err.println(\"Calling simpleAnonymousClassInstantiation Helper from InterfaceBody \" + that.getSourceInfo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b452d1f6e2ec7603f24968418ab9781", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 408, "methodNumberAfterChange": 406, "signatureBeforeChange": "     public boolean shouldRevertFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public boolean shouldRevertFile(OpenDefinitionsDocument doc)", "diff": ["-      if (! _model.getActiveDocument().equals(doc)) {", "-        _model.setActiveDocument(doc);", "-      }", "+      if (! _model.getActiveDocument().equals(doc)) _model.setActiveDocument(doc);", "-      catch (IllegalStateException ise) {", "-        // No file exists", "-        fname = \"Untitled file\";", "-      }", "-      catch (FileMovedException fme) {", "-        // File was deleted, but use the same name anyway", "-        fname = fme.getFile().getName();", "-      }", "+      catch (IllegalStateException ise) { fname = \"Untitled file\"; } // No file exists", "+        ", "+      catch (FileMovedException fme) { fname = fme.getFile().getName(); }", "+      // File was deleted, but use the same name anyway", "-      String text = fname + \" has changed on disk. Would you like to \" +", "-      \"reload it?\\nThis will discard any changes you have made.\";", "+      String text = fname + \" has changed on disk. Would you like to reload it?\\n\" + ", "+        \"This will discard any changes you have made.\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b4776d18c73e21eb9b4ba7589af3985", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testInteractionsVariableWithLowercaseClassName() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsVariableWithLowercaseClassName() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "diff": ["+    debug.logStart();", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b54a4703026b38b3da4f6a673165872", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "      public void testForBitwiseAssignmentExpressionOnly()", "signatureAfterChange": "      public void testForBitwiseAssignmentExpressionOnly()", "diff": ["-      BitwiseAssignmentExpression bae = new BitwiseXorAssignmentExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"j\")), new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 2));", "+      BitwiseAssignmentExpression bae = new BitwiseXorAssignmentExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"j\")), new IntegerLiteral(SourceInfo.NO_INFO, 2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5715dfbdd4ba3264e620fab1afeda4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "7b3e2baaa631329b7e3233840fa805eba66e7b61", "commitAfterChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 41, "signatureBeforeChange": "   private void _updateInsideBlockComment(ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private void _updateInsideBlockComment(ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-\t\t\t_splitCurrentIfCommentBlock(false, copyCursor);", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\"\",copyCursor);  // \\-\"", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\"\",copyCursor);// \\-\\\"", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\\\",copyCursor);// \\-\\\\", "+\t\t\t", "+\t\t\t_splitCurrentIfCommentBlock(false, false,copyCursor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b67c41a27fb3d33a94c3181c3e3ae58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "     public Object visit(GreaterOrEqualExpression node)", "signatureAfterChange": "   public Class visit(GreaterOrEqualExpression node)", "diff": ["+   */", "+  public Class visit(GreaterOrEqualExpression node) {", "+    Class c = visitRelationalExpression(node);", "+    ", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.greaterOrEqual(ln.getProperty(NodeProperties.VALUE),", "+    return c;", "+  }", "-     */", "-    public Object visit(GreaterOrEqualExpression node) {", "-        Class c = visitRelationalExpression(node);", "-", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.greaterOrEqual(ln.getProperty(NodeProperties.VALUE),", "-\t\t\t\t\t\t  rn.getProperty(NodeProperties.VALUE)));", "-        }", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b6c3432d4e70d25cf490677a6bd6179", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentFileManagerTest.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testAddMoreThanMaxSize() throws IOException, AlreadyOpenException, OperationCanceledException", "signatureAfterChange": "   public void testAddMoreThanMaxSize() throws IOException", "diff": ["-  public void testAddMoreThanMaxSize() throws IOException, AlreadyOpenException, OperationCanceledException {", "+  public void testAddMoreThanMaxSize() throws IOException {", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b70d965c4d677cff3003f7d3ecc1ffe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public boolean selectDocumentAt(int x, int y)", "signatureAfterChange": "   public boolean selectDocumentAt(int x, int y)", "diff": ["-    synchronized (_model) {", "+//    synchronized (_model) {", "-    }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b70ee0e4446e41deed37944217b3e9c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "    public void testSaveAsExistsAndOpen() throws BadLocationException, IOException", "signatureAfterChange": "    public void testSaveAsExistsAndOpen() throws BadLocationException, IOException", "diff": ["-    catch (OpenWarningException e) {", "-      // good behavior for file saving...", "-    }", "+    catch (OpenWarningException e) { /* Good behavior for file saving ... */ }", "+    ", "+    _log.log(\"testSaveAsExistsAndOpen completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b73927814292eec3ef9e21853d02a37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "fa3002b037df55391c4f74b18fce7cb5d20b82f3", "commitAfterChange": "5f12d16bf856e43a5e3999099b39d12f17d7ad32", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tint absOffset()", "signatureAfterChange": "  \tint absOffset()", "diff": ["-\t\t\tif (it.atEnd())", "-\t\t\t\t_cursor.prev();", "+\t\t\tif (!it.atStart())", "+\t\t\t\tit.prev();", "-\t\t\t\t\t_cursor.prev();", "-\t\t\t\t\toff += _cursor.current().getSize();", "+\t\t\t\t\toff += it.current().getSize();", "+\t\t\t\t\tit.prev();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b85196820f57348ba5038aaf8033bc7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "cd663e9bf0c95c5bb5b12db38fbcd366660d665e", "commitAfterChange": "22cb21cbc806aa257284ccfb5bed593a93cc9671", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public boolean replaceCurrent()", "signatureAfterChange": "   public boolean replaceCurrent()", "diff": ["-        _doc.remove(getCurrentOffset() - _findWord.length(),", "-                    _findWord.length());", "-        // the current offset will be correct since we keep track", "-        // of it as a Position.", "+        boolean atStart = false;", "+        int position = getCurrentOffset();", "+        if(!_searchBackwards) {", "+          position -= _findWord.length();", "+        }", "+        _doc.remove(position, _findWord.length());", "+        if (position == 0){", "+          atStart = true;", "+        }", "+", "+        // the current offset will be the end of the inserted word", "+        //since we keep track of current as a Position.", "+        //The exception is if we are at the beginning of the document,", "+        //in which case the text is inserted AFTER the current position", "+        //So, current offset is correct for forwards searching unless", "+        //we were at the start of the document, in which case it is", "+        //correct for backwards searching.", "+        if(atStart && !_searchBackwards) {", "+          setPosition(_replaceWord.length());", "+        }", "+        if(!atStart && _searchBackwards){", "+          setPosition(getCurrentOffset() - _replaceWord.length());", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b9b3448d656b0b1046f8cb93beabb0a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "84a85300cfd775431a96c9067859d46fc9913a39", "commitAfterChange": "db64d6218289f5b8c2c9777bfd38b4160001ceaa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "          public synchronized void runTestSequence() throws Exception", "signatureAfterChange": "          public synchronized void runTestSequence() throws Exception", "diff": ["+      _currentTest = \"runTestSequence\";", "-      wait(); // for connection", "+      wait();  // for handleConnected", "+      ", "+      ((SlaveI)getSlave()).startLetterTest();", "-        wait();", "+        wait();  // for getLetter()", "-      //System.err.println((end-start) + \"ms waiting to quit\");      ", "+      //System.err.println((end-start) + \"ms waiting to quit\");", "+      _currentTest = \"\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b9e35e8a342271d0eef6e8f1cf6a13a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3128b34625edff5cab8d9e6ffbefd636ec646e03", "commitAfterChange": "199e047b938086cdc5d6842c124eb2c446a7e7b1", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 182, "signatureBeforeChange": "   private void _setUpStatusBar()", "signatureAfterChange": "   private void _setUpStatusBar()", "diff": ["+    // Set up the 3 labels:", "-", "-", "+    ", "+    _sbMessage = new JLabel();//(\"This is the text for the center message\");", "+    _sbMessage.setHorizontalAlignment(SwingConstants.RIGHT);", "+    ", "-    _currLocationField.setVisible(true);", "-", "-    _statusBar = new JPanel( new BorderLayout() );", "+    _currLocationField.setHorizontalAlignment(SwingConstants.RIGHT);", "+    _currLocationField.setPreferredSize(new Dimension(65,20));", "+    //_currLocationField.setVisible(true);", "+    ", "+    // Create the status bar panel", "+    //SpringLayout layout = new SpringLayout();", "+    _statusBar = new JPanel(new BorderLayout());//( layout );", "+    _statusBar.add( _sbMessage, BorderLayout.CENTER );", "+    ", "+    /*", "+    //Adjust constraints for the fileName label so it's next to the left edge.", "+    layout.getConstraints(_fileNameField).setX(Spring.constant(0));", "+    ", "+    //Adjust constraints for the message label so it's spaced a bit from the right.", "+    //and doesn't interfere with the left-most label", "+    layout.putConstraint(SpringLayout.EAST, _sbMessage, -65,", "+                         SpringLayout.EAST, _statusBar);", "+    ", "+    //Adjust constraints for the location label so it's next to the right edge.", "+    layout.putConstraint(SpringLayout.EAST, _currLocationField, 0,", "+                         SpringLayout.EAST, _statusBar);", "+    ", "+    //Adjust constraints for the panel to set its size", "+    layout.putConstraint(SpringLayout.SOUTH, _statusBar, 0,", "+                         SpringLayout.SOUTH, _currLocationField);*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb29dffb9abe5eab90b739ab4d885c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Symboltable.java", "commitBeforeChange": "9e497bdeba5d2ec8cfd80ebdb938cf6935007939", "commitAfterChange": "8015cc1e53ce6d8dc00c5faf652f2b4ef39fe4e9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r   public SymbolData put (String name, SymbolData sd)", "signatureAfterChange": "   public SymbolData put (String name, SymbolData sd)", "diff": ["-   * */\r", "-  public SymbolData put (String name, SymbolData sd) {\r", "-    SymbolData inTable = (SymbolData) this.get(sd.getName());\r", "-    if (inTable != null) {\r", "-      /**Replace all its fields with those of sd.*/\r", "-      inTable.setIsContinuation(sd.isContinuation());\r", "-      inTable.setTypeParameters(sd.getTypeParameters());\r", "-      inTable.setMethods(sd.getMethods());\r", "-      inTable.setSuperClass(sd.getSuperClass());\r", "-      inTable.setInterfaces(sd.getInterfaces());\r", "-      inTable.setOuterData(sd.getOuterData());\r", "-      inTable.setInnerClasses(sd.getInnerClasses());\r", "-    }\r", "-    else {\r", "-      super.put(sd.getName(), sd);\r", "-    }\r", "-    \r", "-    return sd;\r", "-  }\r", "+   * */", "+  public SymbolData put (String name, SymbolData sd) {", "+    SymbolData inTable = this.get(sd.getName());", "+    if (inTable != null) {", "+      /**Replace all its fields with those of sd.*/", "+      inTable.setIsContinuation(sd.isContinuation());", "+      inTable.setTypeParameters(sd.getTypeParameters());", "+      inTable.setMethods(sd.getMethods());", "+      inTable.setSuperClass(sd.getSuperClass());", "+      inTable.setInterfaces(sd.getInterfaces());", "+      inTable.setOuterData(sd.getOuterData());", "+      inTable.setInnerClasses(sd.getInnerClasses());", "+    }", "+    else {", "+      super.put(sd.getName(), sd);", "+    }", "+    ", "+    return sd;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bc1c25afca43c1b617c08d3db4aeb09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "bd322aadf7a22d1a4ec86b0a862694fe4a7061a2", "commitAfterChange": "3d4d8a63fa83bcea4096f34b202c50c11c830e2e", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      public void testDocumentPaneMemoryLeak()  throws InterruptedException, java.io.IOException", "signatureAfterChange": "      public void testDocumentPaneMemoryLeak()  throws InterruptedException, java.io.IOException", "diff": ["+    System.gc();", "+    System.runFinalization();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bcea2acaa170ecb808b607990cd9ea7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public Object visit(SwitchBlock node)", "signatureAfterChange": "   public Class visit(SwitchBlock node)", "diff": ["-     */", "-    public Object visit(SwitchBlock node) {", "-\tExpression exp = node.getExpression();", "-\tif (exp != null) {", "-\t    exp.acceptVisitor(this);", "-\t}", "-\tList l;", "-\tif ((l = node.getStatements()) != null) {", "-\t    checkList(l);", "-\t}", "-\treturn null;", "-    }", "+   */", "+  public Class visit(SwitchBlock node) {", "+    Expression exp = node.getExpression();", "+    if (exp != null) {", "+      exp.acceptVisitor(this);", "+    List l;", "+    if ((l = node.getStatements()) != null) {", "+      checkList(l);", "+    }", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bd0c44b4cddef20fcc17cf0eecae02e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 315, "methodNumberAfterChange": 571, "signatureBeforeChange": "    final private boolean jj_3R_367()", "signatureAfterChange": "    final private boolean jj_3R_395()", "diff": ["-  final private boolean jj_3R_367() {", "-    if (jj_3R_108()) return true;", "-      if (jj_3_61()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_395() {", "+    if (jj_3R_407()) return true;", "+      if (jj_3R_421()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bd7698a403c979a440c42e3fc8121e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": "     public String getPackageName() throws InvalidPackageException", "signatureAfterChange": "     public String getPackageName() throws InvalidPackageException", "diff": ["-      return _doc.getPackageName();", "+      return getDocument().getPackageName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7be0a7526a01808f01ad340de91d2b08", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "bdf0d961e3094e45012183b3b2277f169c5827d7", "commitAfterChange": "8782e19ccfa5357f9b140c38d08e98757ee04270", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": "   public void debuggerToggle()", "signatureAfterChange": "   public void debuggerToggle()", "diff": ["-    if (!debugger.isAvailable()) return;", "+//    if (!debugger.isAvailable()) return;  // Redundant! This test is the first check made by inDebugMode()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7be4c772923ec56ec94030f3e906c731", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyFullJavaVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Void forBlock(Block that)", "signatureAfterChange": "   public Void forBlock(Block that)", "diff": ["-                                                           new HashSet<String>()));", "+                                                           new HashSet<String>(), _genericTypes));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bec275deaad8eca3ede6a815d2eb839", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "520c98c03a1e651efb4dfbf7d7f2a55510c74658", "commitAfterChange": "3f953b8fb783fe3ca1b336468898f35cd9cde7db", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testVisitWhileStatement() throws ExceptionReturnedException", "signatureAfterChange": "   public void testVisitWhileStatement() throws ExceptionReturnedException", "diff": ["-    _interpreter.interpret(\"Boolean B = Boolean.FALSE; \" + text);", "+    _interpreter.interpret(text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bf26312677903d96e550b4e53a4fc68", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testGetLine3() throws BadLocationException", "signatureAfterChange": "   public void testGetLine3() throws BadLocationException", "diff": ["-    defModel.insertString(0, s, null);", "-    defModel.setCurrentLocation(6);", "-    assertEquals(\"#0.0\", 4, defModel.getCurrentLine());", "+    _defModel.insertString(0, s, null);", "+    _defModel.setCurrentLocation(6);", "+    assertEquals(\"#0.0\", 4, _defModel.getCurrentLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c19a96b5c67866ae7426a462469776f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "      protected InterpretResult.Visitor<Void> getResultHandler()", "signatureAfterChange": "      @Override protected InterpretResult.Visitor<Void> resultHandler()", "diff": ["-    protected InterpretResult.Visitor<Void> getResultHandler() {", "+    @Override protected InterpretResult.Visitor<Void> resultHandler() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c2ed5a9871c5a78f8b6fe47c4bd80f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void testStarted(String name)", "signatureAfterChange": "     public void testStarted(String name)", "diff": ["-      doc.acquireWriteLock();", "+//      doc.acquireWriteLock();", "-      finally { doc.releaseWriteLock(); }", "+//      finally { doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c3c416ffd85fe6cf1d028a4b0c7b2f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "11a167d5b0a97e55aef4d62ed18d4da71e30b762", "commitAfterChange": "a32847752bc1c4d9a9c65da4d91d56e3d8a61fa6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testConstructManyDocsWithoutLineNums()", "signatureAfterChange": "   public void testConstructManyDocsWithoutLineNums()", "diff": ["+    assertTrue(\"hasOnlyWarnings should return false.\", !model.hasOnlyWarnings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c5682350742577bbf062aba88c507d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 292, "methodNumberAfterChange": 551, "signatureBeforeChange": "    final private boolean jj_3R_423()", "signatureAfterChange": "    final private boolean jj_3R_425()", "diff": ["-", "-  final private boolean jj_3R_423() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_444()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(86)) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_445()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_425() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_446()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(86)) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_447()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c57995977cdb285a38c0fc0488ada87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testReplaceCreatesMatch() throws BadLocationException", "signatureAfterChange": "   public void testReplaceCreatesMatch() throws BadLocationException", "diff": ["-    doc.insertString(0, \"hhelloello\", null);", "+    _doc.insertString(0, \"hhelloello\", null);", "-    frm.setFindWord(\"hello\");", "-    frm.setMatchCase(false);", "-    frm.setSearchBackwards(false);", "-    frm.setReplaceWord(\"\");", "-    frm.replaceAll();", "-    assertEquals(\"replace creates new match\", \"hello\", doc.getText(0, doc.getLength()));", "+    _frm.setFindWord(\"hello\");", "+    _frm.setMatchCase(false);", "+    _frm.setSearchBackwards(false);", "+    _frm.setReplaceWord(\"\");", "+    _frm.replaceAll();", "+    assertEquals(\"replace creates new match\", \"hello\", _doc.getText(0, _doc.getLength()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c70773d1a9852eee3b0474af2ad3611", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "101c103fed282ea73966b5bc0dce7152a188fba5", "commitAfterChange": "2bbdbef8ef11cd93c30f52236eee8443bfc75e9d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   private InterpreterJVM()", "signatureAfterChange": "   private InterpreterJVM()", "diff": ["+", "+    // set the thread context class loader, this way NextGen and Mint can use the interpreter's class loader", "+    Thread.currentThread().setContextClassLoader(_interpreterLoader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c708fc6eaa147c654a9a63ac6bc7e93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "6dc623f6cf84dd216f6949b3ebdd52b19c8912b4", "commitAfterChange": "3bfda0ffd8a22eda2f2daab913b510305e1ef801", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public static void cleanUp()", "signatureAfterChange": "   public static void cleanUp()", "diff": ["-    _filesToOpen.clear();", "+    clearFilesToOpen();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c8378612113485823f55dac17b0f9ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyFullJavaVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "          public void testForVariableDeclarationOnly()", "signatureAfterChange": "          public void testForVariableDeclarationOnly()", "diff": ["-      System.err.println(\"_sd1 vars =  \" + _sd1.getVars());", "+//      System.err.println(\"_sd1 vars =  \" + _sd1.getVars());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c917cd03e31ada95c4bc9ef877e3721", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testCompileAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException, InterruptedException", "diff": ["-    doc.startCompile();", "+    testStartCompile(doc);", "+    _log.log(\"testCompileAnyUnsavedButSaveWhenAsked complete\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ca044c0e7d0bea3d3785c8d78864421", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": "   protected SymbolData getInnerClassOrInterfaceHelper(String nameToMatch, int firstIndexOfDot)", "signatureAfterChange": "   protected SymbolData getInnerClassOrInterfaceHelper(String relName, int firstIndexOfDot)", "diff": ["-  protected SymbolData getInnerClassOrInterfaceHelper(String nameToMatch, int firstIndexOfDot) {", "+  protected SymbolData getInnerClassOrInterfaceHelper(String relName, int firstIndexOfDot) {", "+      if (sdName.equals(\"Rod\")) System.err.println(\"In getInnerClass, sdName = 'Rod'; relName = '\" + relName +\"'\");", "-        if (sdName.equals(nameToMatch)) return sd;", "+        if (sdName.equals(relName)) return sd;", "-        if (sdName.equals(nameToMatch.substring(0, firstIndexOfDot))) {", "-          return sd.getInnerClassOrInterface(nameToMatch.substring(firstIndexOfDot + 1));", "+        if (sdName.equals(relName.substring(0, firstIndexOfDot))) {", "+          return sd.getInnerClassOrInterface(relName.substring(firstIndexOfDot + 1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ca98710aae3130b32adad7300895de9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "    public void testFindMatchWithCaretInMiddle() throws BadLocationException", "signatureAfterChange": "    public void testFindMatchWithCaretInMiddle() throws BadLocationException", "diff": ["-    _testFindNextSucceeds(_frm, CONTINUE, 3, 11);", "-    _testFindNextSucceeds(_frm, CONTINUE, 3, 5);", "+    _testFindNextSucceeds(_frm, 3, 11);", "+    _testFindNextSucceeds(_frm, 3, 5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ccc54337c7d54bfbe28ae90389a410d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testIndentSameAsLineAboveAtStart()       throws BadLocationException, OperationCanceledException", "signatureAfterChange": "   public void testIndentSameAsLineAboveAtStart()       throws BadLocationException, OperationCanceledException", "diff": ["-    openDoc.syncCurrentLocationWithDefinitions(FOO_EX_2.length());", "-    int loc = openDoc.getCurrentDefinitionsLocation();", "+    openDoc.setCurrentLocation(FOO_EX_2.length());", "+    int loc = openDoc.getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cd1cdb007ffb7d5620456396b186706", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void testInsertNewlineChainReaction()", "signatureAfterChange": "   public void testInsertNewlineChainReaction()", "diff": ["-    assertEquals(\"#0.0\", INSIDE_LINE_COMMENT, model1._getStateAtCurrent());", "+    assertEquals(\"#0.0\", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());", "-    assertEquals(\"#1.0\", INSIDE_DOUBLE_QUOTE, model1._getStateAtCurrent());", "+    assertEquals(\"#1.0\", INSIDE_DOUBLE_QUOTE, model1.getStateAtCurrent());", "-    assertEquals(\"#3.0\", FREE, model1._getStateAtCurrent());", "+    assertEquals(\"#3.0\", FREE, model1.getStateAtCurrent());", "-    assertEquals(\"#4.0\", INSIDE_BLOCK_COMMENT, model1._getStateAtCurrent());", "+    assertEquals(\"#4.0\", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cdaa66b8d65895a08849fdde6183af6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": "   public void toggleBookmark()", "signatureAfterChange": "   public void toggleBookmark()", "diff": ["-    doc.readLock();", "+    doc.acquireReadLock();", "-    finally { doc.readUnlock(); }", "+    finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ce08e7229fd6daf78d8b43924c73aa4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 46, "signatureBeforeChange": "          public void xtestSimpleAnonymousClassInstantiationHelper()", "signatureAfterChange": "     public void xtestSimpleAnonymousClassInstantiationHelper()", "diff": ["+    /* NOTE: This is test excluded because the tested method is now a no-op. */", "+      System.err.println(\"**** Starting testSimpleAnonymousClassInstantiationHelper\");", "-                                              new ClassOrInterfaceType(SourceInfo.NO_INFO, \"Object\", new Type[0]), ", "+                                              new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), ", "-     SymbolData obj = LanguageLevelConverter.symbolTable.get(\"java.lang.Object\");", "-     assertNotNull(\"Object should be in the symbol table\", obj);", "-     assertEquals(\"sd1 should have one inner class\", 1, _sd1.getInnerClasses().size());", "+     assertNotNull(\"Object should be in the symbol table\", _objectSD);", "+     assertEquals(\"_sd1 should have one inner class\", 1, _sd1.getInnerClasses().size());", "-     assertEquals(\"The inner class should have proper super class\", obj, inner.getSuperClass());", "+     assertEquals(\"The inner class should have proper super class\", _objectSD, inner.getSuperClass());", "+     ", "+     System.err.println(\"**** Ending testSimpleAnonymousClassInstantiationHelper\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cec4ac7fb809d5715363ae6c62f654d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "commitAfterChange": "62776e907e3e6dddd6b4161559ae3b70f27cc2e5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    DrJava.getConfig().addOptionListener(OptionConstants.JSR14_LOCATION, new CompilerLocationOptionListener<File>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cfa731d92f8c84daefa781e2b0291f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 558, "methodNumberAfterChange": 555, "signatureBeforeChange": "    final private boolean jj_3R_449()", "signatureAfterChange": "    final private boolean jj_3R_451()", "diff": ["-  final private boolean jj_3R_449() {", "-    if (jj_3R_78()) return true;", "-    if (jj_3R_377()) return true;", "+", "+  final private boolean jj_3R_451() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_79()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_379()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d08f9bf1b2704beff4c7fd5c9cc347b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 409, "methodNumberAfterChange": 390, "signatureBeforeChange": "    final private boolean jj_3R_428()", "signatureAfterChange": "    final private boolean jj_3R_538()", "diff": ["+", "+  final private boolean jj_3R_538() {", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    if (jj_3R_556()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_560()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_428() {", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    if (jj_3R_441()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_445()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d091f3f6393838580d44e94e137f05e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 831, "methodNumberAfterChange": 260, "signatureBeforeChange": "    final private boolean jj_3R_231()", "signatureAfterChange": "    final private boolean jj_3R_196()", "diff": ["+", "+  final private boolean jj_3R_196() {", "+    if (jj_scan_token(SLASH_ASSIGN)) return true;", "+    if (jj_3R_78()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_231() {", "-    if (jj_scan_token(SLASH_ASSIGN)) return true;", "-    if (jj_3R_87()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d13f40ba41ae37dbe899d1c98c6c981", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public synchronized void removeBreakpoint(final Breakpoint breakpoint)", "signatureAfterChange": "   public synchronized void removeBreakpoint(final Breakpoint breakpoint)", "diff": ["-    System.out.println(\"unsetting: \" + breakpoint);", "+    //System.out.println(\"unsetting: \" + breakpoint);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d20fdf31a043bd0d8ec1d7c9806883b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 60, "signatureBeforeChange": "     public void stepRequested()", "signatureAfterChange": "     public void stepRequested()", "diff": ["-      if (printEvents) System.out.println(\"stepRequested \" + stepRequestedCount);", "+      if (printEvents) printStream.println(\"stepRequested \" + stepRequestedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d2213546f0268ce33b657c90e16a5e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "d8dc2cdeba22db2fb0316de83a445bb83f56ae4d", "commitAfterChange": "fecb09777cd63cca239611fe19e85d2f0e8401e9", "methodNumberBeforeChange": 719, "methodNumberAfterChange": 700, "signatureBeforeChange": "    final private boolean jj_3R_559()", "signatureAfterChange": "    final private boolean jj_3R_555()", "diff": ["-  final private boolean jj_3R_559() {", "-    if (jj_3R_567()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_568()) { jj_scanpos = xsp; break; }", "-    }", "+", "+  final private boolean jj_3R_555() {", "+    if (jj_3R_563()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_564()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d23b7391635ef1d02b6da88224c4453", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public ClassInfo getFirstCompilable()", "signatureAfterChange": "   public ClassInfo getFirstCompilable()", "diff": ["-      ClassInfo ci = (ClassInfo)classes.get(it.next());", "+      ClassInfo ci = classes.get(it.next());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d2ee940e99c1b9dcf789d4ce5f052ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4276346051c6ab89c146c0041be28826e7dfbe12", "commitAfterChange": "86bed99990f6eb7fff2cb31d595e17b49135df26", "methodNumberBeforeChange": 400, "methodNumberAfterChange": 400, "signatureBeforeChange": "     public boolean canAbandonFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public boolean canAbandonFile(OpenDefinitionsDocument doc)", "diff": ["-      String fname;", "-", "+      String text,fname;", "+      OpenDefinitionsDocument lastActive = _model.getActiveDocument();", "-", "+      boolean notFound = false;", "+        text = fname + \" has been modified. Would you like to save it?\";", "+        text = \"Untitled file has been modified. Would you like to save it?\";", "+        text = fname + \" not found on disk. Would you like to save to another file?\";", "+        notFound = true;", "-", "-      String text = fname + \" has been modified. Would you like to save it?\";", "+      ", "-", "-          return _save();", "+          boolean r = false;", "+          if (notFound) r = _saveAs(); else r = _save();", "+          _model.setActiveDocument(lastActive);", "+          return r;", "+          _model.setActiveDocument(lastActive);", "-          throw new RuntimeException(\"Invalid rc: \" + rc);", "+          throw new RuntimeException(\"Invalid option: \" + rc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d3843e028fd83eb3e613a639e4ebc5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 599, "methodNumberAfterChange": 585, "signatureBeforeChange": "    final private boolean jj_3R_347()", "signatureAfterChange": "    final private boolean jj_3R_351()", "diff": ["-", "-  final private boolean jj_3R_347() {", "-    if (jj_3R_352()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_380()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+    if (jj_3R_359()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_376()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d61bc464d07d1c9009bd0afba8d8ba2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "d11247645bb07934951554afdf566907fa77ed82", "commitAfterChange": "9d9b807a3682312d575409204ac6a0dc51eca49a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["-    _findField.requestFocusInWindow();", "+    ", "+    if (!DrJava.getConfig().getSetting(OptionConstants.FIND_REPLACE_FOCUS_IN_DEFPANE).booleanValue()) {", "+      _findField.requestFocusInWindow();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d65743082473ec1c05c97bd772afd91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void cleanFolderNode(DefaultMutableTreeNode node)", "signatureAfterChange": "   private void cleanFolderNode(DefaultMutableTreeNode node)", "diff": ["-   */", "+    */", "-    synchronized(_model) {", "+//    synchronized(_model) {", "-    }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d87b666a1b75867e1690f26af0c5a78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "f835199d645f480bb352cc51cff6dc5ae32e7dc4", "commitAfterChange": "f25bc20d2dd4058b4cf2bf5f693569e62fb40d6b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "          public Predicate<Type> supertypes(Type sub)", "signatureAfterChange": "          public Predicate<Type> supertypes(Type sub)", "diff": ["-    public Predicate<Type> supertypes(Type sub) { return LambdaUtil.bindFirst((Order<Type>) this, sub); }", "+    public Predicate<Type> supertypes(Type sub) { return bindFirst((Order<Type>) this, sub); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d8ab4ed5e3e4e7a8ed41c370e2d16dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 718, "methodNumberAfterChange": 469, "signatureBeforeChange": "    final private boolean jj_3R_104()", "signatureAfterChange": "    final private boolean jj_3R_104()", "diff": ["+", "+  final private boolean jj_3R_104() {", "+    if (jj_3R_157()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_223()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_104() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_156()) {", "-    if (jj_3R_157()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d8b977c2fbc38c59badcc317a782832", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/MultiThreadedTestCase.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   protected static void listenerFail(String s)", "signatureAfterChange": "   protected static void listenerFail(String s)", "diff": ["-//    System.err.println(\"TEST FAILED in a listener thread\");", "-//    System.err.println(\"Failing thread stack trace:\\n \" + Log.traceToString(trace));", "+    System.out.println(\"TEST FAILED in a listener thread\");", "+    System.out.println(\"Failing thread stack trace:\\n \" + Log.traceToString(trace));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da58179c895b70e2a8070d60eb1d93c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public Object visit(StaticFieldAccess node)", "signatureAfterChange": "   public Class visit(StaticFieldAccess node)", "diff": ["-     */", "-    public Object visit(StaticFieldAccess node) {", "-        // Visit the field type", "-        Class c = (Class)node.getFieldType().acceptVisitor(this);", "-", "-        // Load the field object", "-        Field f = null;", "-        try {", "-            f = context.getField(c, node.getFieldName());", "-        } catch (Exception e) {", "-            throw new CatchedExceptionError(e, node);", "-        }", "-", "-        // Set the node properties", "-        node.setProperty(NodeProperties.FIELD, f);", "-        node.setProperty(NodeProperties.TYPE,  c = f.getType());", "-", "-\tnode.setProperty(NodeProperties.MODIFIER, context.getModifier(node));", "-\treturn c;", "-    }", "+   */", "+  public Class visit(StaticFieldAccess node) {", "+    // Visit the field type", "+    Class c = (Class)node.getFieldType().acceptVisitor(this);", "+    ", "+    // Load the field object", "+    Field f = null;", "+    try {", "+      f = context.getField(c, node.getFieldName());", "+    } catch (Exception e) {", "+      throw new CatchedExceptionError(e, node);", "+    }", "+    ", "+    // Set the node properties", "+    node.setProperty(NodeProperties.FIELD, f);", "+    node.setProperty(NodeProperties.TYPE,  c = f.getType());", "+    ", "+    node.setProperty(NodeProperties.MODIFIER, context.getModifier(node));", "+    return c;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da89c057e6275f4cd1ed72266fadb6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "aac5f34523ac0f0412292e9d65f671aa46b752f4", "commitAfterChange": "10c44767bf3d5eefd230820d6106fe1ea2534e6f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void cancel()", "signatureAfterChange": "   public void cancel()", "diff": ["+    _applyButton.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7daee6d829476f025fb745d41f119899", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public FindReplaceDialog(MainFrame frame, SingleDisplayModel model)", "signatureAfterChange": "   public FindReplaceDialog(MainFrame frame, SingleDisplayModel model)", "diff": ["-            _machine.makeCurrentOffsetStart();", "+//            _machine.makeCurrentOffsetStart();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dba8469a065749dd139376628da9f44", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 682, "methodNumberAfterChange": 673, "signatureBeforeChange": "    final private boolean jj_3R_478()", "signatureAfterChange": "    final private boolean jj_3R_440()", "diff": ["+", "+  final private boolean jj_3R_440() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_457()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_458()) return true;", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_478() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_71()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_502()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dd2f0809cd620e95f7b6dbdf5ec7252", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "    private void _save()", "signatureAfterChange": "    private void _save()", "diff": ["-      _model.saveFile(_saveSelector);", "+      _definitionsDocuments[0].saveFile(_saveSelector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dd7158529ef75d2553ee9c8e945158c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "0eaebdce24bcfe2760ebc5f3cb035431d62003fc", "commitAfterChange": "998d49ab48c08c55f388485512c281814a54c029", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public String getMainClassName() throws ClassNameNotFoundException", "signatureAfterChange": "   public String getMainClassName() throws ClassNameNotFoundException", "diff": ["+        final int indexOfEnum = _findKeywordAtToplevel(\"enum\", text, 0);", "-        if (indexOfPublic == -1)  return getFirstClassName(indexOfClass, indexOfInterface);", "+        if (indexOfPublic == -1)  return getFirstClassName(indexOfClass, indexOfInterface, indexOfEnum);", "+        int indexOfPublicEnum = _findKeywordAtToplevel(\"enum\", subText, afterPublic); // relative offset", "+        if (indexOfPublicEnum != -1) indexOfPublicEnum += afterPublic;", "-        return getFirstClassName(indexOfPublicClass, indexOfPublicInterface);", "+        return getFirstClassName(indexOfPublicClass, indexOfPublicInterface, indexOfPublicEnum);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e0206f8f88f499e13482e736be97219", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "24e790b85d3a1a29de15955ca1ba9200a6865f83", "commitAfterChange": "4ceb386773fd5eb837ddcd34820c563b6c3c20cb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public String toString()", "signatureAfterChange": "   public String toString()", "diff": ["-    for (int i=0; i < _errors.length; i++) {", "+    for (int i=0; i < _numErrors; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e069770725c34fcb553348b843bdcd8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 676, "methodNumberAfterChange": 593, "signatureBeforeChange": "    final private boolean jj_3R_212()", "signatureAfterChange": "    final private boolean jj_3R_215()", "diff": ["-  final private boolean jj_3R_212() {", "+  final private boolean jj_3R_215() {", "-    if (jj_3R_102()) return true;", "+    if (jj_3R_105()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e0efa540a38c5f6f8ac634669635a35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public Void visit(ClassAllocation node)", "signatureAfterChange": "   public Void visit(AnonymousAllocation node)", "diff": ["-  public Void visit(ClassAllocation node) {", "-    print(\"l.\"+node.getBeginLine()+\" ClassAllocation {\");", "+  public Void visit(AnonymousAllocation node) {", "+    print(\"l.\"+node.getBeginLine()+\" AnonymousAllocation {\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e21eb807dca6cf070097d53da595585", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/DebugContextTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testDebugSourcepath() throws Exception", "signatureAfterChange": "   public void XXXtestDebugSourcepath() throws Exception", "diff": ["-  public void testDebugSourcepath() throws Exception {", "+  public void XXXtestDebugSourcepath() throws Exception {", "+    debug.logStart();", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e24dc422f40fd6f599fea8b093c922a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 601, "methodNumberAfterChange": 598, "signatureBeforeChange": "    final private boolean jj_3R_145()", "signatureAfterChange": "    final private boolean jj_3R_153()", "diff": ["-  final private boolean jj_3R_145() {", "+  final private boolean jj_3R_153() {", "-    if (jj_3R_101()) return true;", "+    if (jj_3R_103()) return true;", "-    if (jj_3R_204()) return true;", "+    if (jj_3R_217()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e27d6bffc8024a13a2185e23af83486", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/print/DrJavaBook.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Printable getPrintable(int pageIndex)", "signatureAfterChange": "   public Printable getPrintable(int pageIndex)", "diff": ["-    return (Printable) _pagePrinters.get(pageIndex);", "+    return _pagePrinters.get(pageIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e501f06c9c594b59f6a9235405b2015", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "91061a0d47469bc7d07ba5fa464f35ab97f70dbb", "commitAfterChange": "296befb4a12a5cc35f5f70ed97c5006f2e9fc8bc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   protected void runAgainActionPerformed(ActionEvent e)", "signatureAfterChange": "   protected void runAgainActionPerformed(ActionEvent e)", "diff": ["+    abortActionPerformed(e);", "-    abortActionPerformed(e);", "-        _sb = new StringBuilder(\"Command line:\");", "+        _sb = new StringBuilder(\"Command line: \");", "-            _textArea.setText(_header);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ea1e2ab18dc35a1450f77fc816f4b68", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 504, "methodNumberAfterChange": 492, "signatureBeforeChange": "    final private boolean jj_3R_259()", "signatureAfterChange": "    final private boolean jj_3R_269()", "diff": ["-", "-  final private boolean jj_3R_259() {", "-    if (jj_scan_token(XOR_ASSIGN)) return true;", "-    if (jj_3R_94()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_269() {", "+    if (jj_scan_token(XOR_ASSIGN)) return true;", "+    if (jj_3R_97()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eb2ad3d61f36036e9fbeb415084456d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/KeyStrokeOptionComponentTest.java", "commitBeforeChange": "0dda00089189758fcd0a0e6dab08cb8c08b0176d", "commitAfterChange": "fe676b98ef48403caecec40bb6f3545ecd46a3ae", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testApplyThenResetDefault()", "signatureAfterChange": "    public void testApplyThenResetDefault()", "diff": ["-", "-//    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eb6aef419c07874ae0f883694806ecc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "4ddb555fbb20c498ee5f44bc087ce9c848b2e79c", "commitAfterChange": "95fa58e53b5e90bde2a488acc329b110ba78e88a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["+      Caret c = _defPane.getCaret();", "+      c.setDot(c.getDot());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7edd77ab3d5bd49037dc0ae5f411268a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     public Object visit(ReferenceType node)", "signatureAfterChange": "   public Class visit(ReferenceType node)", "diff": ["-     */", "-    public Object visit(ReferenceType node) {", "-\tClass c = null;", "-\ttry {", "-\t    c = context.lookupClass(node.getRepresentation());", "-\t} catch (ClassNotFoundException e) {", "-\t    node.setProperty(NodeProperties.ERROR_STRINGS,", "-\t\t\t     new String[] { node.getRepresentation() });", "-\t    throw new ExecutionError(\"undefined.class\", node);", "-\t}", "-\tnode.setProperty(NodeProperties.TYPE, c);", "-\treturn c;", "+   */", "+  public Class visit(ReferenceType node) {", "+    Class c = null;", "+    try {", "+      c = context.lookupClass(node.getRepresentation());", "+    } catch (ClassNotFoundException e) {", "+      node.setProperty(NodeProperties.ERROR_STRINGS,", "+                       new String[] { node.getRepresentation() });", "+      throw new ExecutionError(\"undefined.class\", node);", "+    node.setProperty(NodeProperties.TYPE, c);", "+    return c;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ee0b58cd29b9a7791d590d86e6a2619", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testCorrectInteractionsDocument() throws EditDocumentException", "signatureAfterChange": "   public void testCorrectInteractionsDocument() throws EditDocumentException", "diff": ["-//    _log.log(\"testCorrectInteractionsDocument completed\");", "+    _log.log(\"testCorrectInteractionsDocument completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ee4ca07aff3b3e771f45100fd42f7ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringGlyphPainter.java", "commitBeforeChange": "12434dc2dab84dfe1024e2e2b39fd8f27da62bbd", "commitAfterChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public Shape modelToView(GlyphView v, int pos, Position.Bias bias,                            Shape a) throws BadLocationException", "signatureAfterChange": "      public Shape modelToView(GlyphView v, int pos, Position.Bias bias,                            Shape a) throws BadLocationException", "diff": ["-    int p0 = v.getStartOffset();", "-    int p1 = v.getEndOffset();", "+    int start = v.getStartOffset();", "+    int end = v.getEndOffset();", "-    if(pos == p1) {", "+    if(pos == end) {", "-    if ((pos >= p0) && (pos <= p1)) {", "+    if ((pos >= start) && (pos <= end)) {", "-      text = v.getText(p0, pos);", "-      int width = Utilities.getTabbedTextWidth(text, _metrics, alloc.x, expander, p0);", "+      text = v.getText(start, pos);", "+      int width = Utilities.getTabbedTextWidth(text, _metrics, alloc.x, expander, start);", "-    throw new BadLocationException(\"modelToView - can't convert\", p1);", "+    throw new BadLocationException(\"modelToView - can't convert\", end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7efafa1f19d87454d901b8362dc433df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "99105223925683ee669479026ce3b62dfa0eda84", "commitAfterChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "methodNumberBeforeChange": 227, "methodNumberAfterChange": 228, "signatureBeforeChange": "   boolean _closeProject(boolean quitting)", "signatureAfterChange": "   boolean _closeProject(boolean quitting)", "diff": ["+      _saveProjectAsAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f09a53ef7a5b264819b85de96805e45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryLevelTest.java", "commitBeforeChange": "2b3538f4ec792670cfb28bc41a5aee6f4c8718c0", "commitAfterChange": "c302d1db72cb508e0cec30d24e39d48cce8fd663", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testShouldBeErrors()", "signatureAfterChange": "   public void testShouldBeErrors()", "diff": ["-      System.out.println(\"Test result = \" + result);", "+//      System.out.println(\"Test result = \" + result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f0cae26d53dc5d4fc10c447791ad2fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "f0e93e8f70d74090c83524f565ab98d73710c2e7", "commitAfterChange": "cea95770b041dbb7494d9ea4d762c8077631d283", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void itemStateChanged(ItemEvent e)", "signatureAfterChange": "     public void itemStateChanged(ItemEvent e)", "diff": ["+        DrJava.getConfig().setSetting(OptionConstants.FIND_SEARCH_BACKWARDS,", "+                                      false);", "+        DrJava.getConfig().setSetting(OptionConstants.FIND_SEARCH_BACKWARDS,", "+                                      true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f2dfea0bd632807f95c461827117a04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "commitAfterChange": "f938008597ce54d16e4a865d30f8ef062ea55d2f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public static List<String> commandLineToList(String cmdline)", "signatureAfterChange": "   public static List<String> commandLineToList(String cmdline)", "diff": ["-    tok.quoteChar('`');", "+    // tok.quoteChar('`'); // back tick not yet supported"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f3504034ef76b6001b7ce6ba85d11df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void scrollToSource(DebugStackData data);", "signatureAfterChange": "   public void scrollToSource(DebugStackData data) throws DebugException;", "diff": ["-  public void scrollToSource(DebugStackData data);", "+  public void scrollToSource(DebugStackData data) throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f35d118055f033f15619adb2f3e8f2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "875709ea758d694dda7555b8eeb2e15fa58e98c5", "commitAfterChange": "d29db164117e7452d6023bc6a73abe9d53f7d65b", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 38, "signatureBeforeChange": "   @Override public Type visit(ComplementExpression node)", "signatureAfterChange": "     @Override public Type visit(ComplementExpression node)", "diff": ["-   */", "-  @Override public Type visit(ComplementExpression node) {", "-    node.getExpression().acceptVisitor(this);", "-    try {", "-      Expression exp = ts.unaryPromote(ts.makePrimitive(node.getExpression()));", "-      if (!(getType(exp) instanceof IntegralType)) {", "-        throw new ExecutionError(\"complement.expression.type\", node);", "-      }", "-      node.setExpression(exp);", "-      return setType(node, getType(exp));", "-    }", "-    catch (UnsupportedConversionException e) {", "-      throw new ExecutionError(\"complement.expression.type\", node);", "-    }", "-  }", "+     */", "+    @Override public Type visit(ComplementExpression node) {", "+      check(node.getExpression());", "+        Expression exp = ts.unaryPromote(ts.makePrimitive(node.getExpression()));", "+        if (!(getType(exp) instanceof IntegralType)) {", "+          throw new ExecutionError(\"complement.expression.type\", node);", "+        }", "+        node.setExpression(exp);", "+        return setType(node, getType(exp));", "+        throw new ExecutionError(\"complement.expression.type\", node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f6545a2e8dc1bcfebb0dde276c9ee26", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/HTMLFrame.java", "commitBeforeChange": "e3e56a8c058b51612dfa6f1f21259a37eadcdcbb", "commitAfterChange": "71f0cebe149c327097ea40ca09774e0c57cdec3a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "    public void addHyperlinkListener(HyperlinkListener linkListener)", "signatureAfterChange": "    public void addHyperlinkListener(HyperlinkListener linkListener)", "diff": ["+    _hyperlinkListeners.addElement(linkListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f692288717afbdb672c6f5501c3d319", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/Relation.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public Set<T1> getFirsts(T2 second);", "signatureAfterChange": "   public PredicateSet<T1> matchSecond(T2 second);", "diff": ["-  /** The set of firsts corresponding to a specific second.  Does not allow mutation. */", "-  public Set<T1> getFirsts(T2 second);", "+   */", "+  public PredicateSet<T1> matchSecond(T2 second);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f739873622e57048e24b7717c065450", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "bd499b8e6c590fd3376a82010e399ae7edfc6975", "commitAfterChange": "af6ac1303ad90db685f17f710be85771c95a718d", "methodNumberBeforeChange": 633, "methodNumberAfterChange": 633, "signatureBeforeChange": "   private void _setMainFont()", "signatureAfterChange": "   private void _setMainFont()", "diff": ["-    _interactionsController.setDefaultFont(f);", "-    _consoleController.setDefaultFont(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f7e6a2fa4df405b0736a06ee091c778", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 517, "methodNumberAfterChange": 412, "signatureBeforeChange": "    final private boolean jj_3R_98()", "signatureAfterChange": "    final private boolean jj_3R_209()", "diff": ["+  final private boolean jj_3R_209() {", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    xsp = jj_scanpos;", "+    if (jj_3R_229()) jj_scanpos = xsp;", "+      if (jj_3R_230()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_98() {", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_148()) jj_scanpos = xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3_57()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f853ed776edbdbed9704eebc09ed8d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e38424ed07a882ee616fdf02e69d28f304b8294c", "commitAfterChange": "9eee5747334807e9f45caddd8a2cf9db0c48fe61", "methodNumberBeforeChange": 596, "methodNumberAfterChange": 596, "signatureBeforeChange": "          public void projectRunnableChanged()", "signatureAfterChange": "          public void projectRunnableChanged()", "diff": ["-        _runProjectAction.setEnabled(true);", "+        _runProjectAction.setEnabled(_model.isProjectActive());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f8accdca17a32af62e7d7ef7207320f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 691, "methodNumberAfterChange": 337, "signatureBeforeChange": "    final private boolean jj_3R_612()", "signatureAfterChange": "    final private boolean jj_3R_312()", "diff": ["+", "+  final private boolean jj_3R_312() {", "+    if (jj_3R_273()) return true;", "-", "-  final private boolean jj_3R_612() {", "-    if (jj_scan_token(STAR)) return true;", "-    if (jj_3R_581()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fa4be443b6af5f56cbfe3752cdc4b19", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "     public Object visit(SubtractExpression node)", "signatureAfterChange": "   public Class visit(SubtractExpression node)", "diff": ["+   */", "+  public Class visit(SubtractExpression node) {", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ln.acceptVisitor(this);", "+    rn.acceptVisitor(this);", "+    Class c = visitNumericExpression(node, \"subtraction.type\");", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.subtract(c,", "+                                       ln.getProperty(NodeProperties.VALUE),", "+                                       rn.getProperty(NodeProperties.VALUE)));", "+    }", "+    return c;", "+  }", "-     */", "-    public Object visit(SubtractExpression node) {", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-        ln.acceptVisitor(this);", "-        rn.acceptVisitor(this);", "-        Class c = visitNumericExpression(node, \"subtraction.type\");", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.subtract(c,", "-                                               ln.getProperty(NodeProperties.VALUE),", "-                                               rn.getProperty(NodeProperties.VALUE)));", "-        }", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fb29cdb1c942d1bcd1d46fa5f60edaa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsListPanel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-      _region.getDocument().acquireReadLock();", "-      try {", "+//      _region.getDocument().acquireReadLock();", "+//      try {", "-      } finally { _region.getDocument().releaseReadLock(); }", "+//      } ", "+//      finally { _region.getDocument().releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fb426825e75ec4576be4fd60ebb51ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5122b57870a06ce192633fae172ea410d4b7581b", "commitAfterChange": "8cb074150c1494bfc3b263a6dfa5f3cba6209da2", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 35, "signatureBeforeChange": "    private void _new()", "signatureAfterChange": "    private void _new()", "diff": ["-  private void _new() {", "-    _model.closeFile(_definitionsDocuments[0]);", "-    _model.newFile();", "-    _definitionsDocuments = _model.getDefinitionsDocuments();", "+  private void _new() {", "+    _model.newFile();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fc0a09e9e584e427961a81458c8354d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/XMLProjectFileParser.java", "commitBeforeChange": "72cd3e48e9b9e298f00a111fb5ffe96f331ffca4", "commitAfterChange": "d4a2d68c03fa1b918347931c3e594614ce00cce5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ProjectFileIR parse(File projFile) throws IOException, FileNotFoundException, MalformedProjectFileException", "signatureAfterChange": "   public ProjectFileIR parse(File projFile) throws IOException, FileNotFoundException, MalformedProjectFileException", "diff": ["+      pfir.setDrJavaVersion(version);", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fd43356c898fb890d7db4b2cb832cbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 689, "methodNumberAfterChange": 717, "signatureBeforeChange": "    final private boolean jj_3R_79()", "signatureAfterChange": "    final private boolean jj_3R_82()", "diff": ["+", "+  final private boolean jj_3R_82() {", "+    if (jj_3R_112()) return true;", "+    if (jj_scan_token(INTERFACE)) return true;", "-  final private boolean jj_3R_79() {", "-    if (jj_3R_111()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fde5fe4dbaff5d5d8555f78a66ea0a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": "   final public void primarySuffixLookahead() throws ParseException", "signatureAfterChange": "   final public void primarySuffixLookahead() throws ParseException", "diff": ["-    if (jj_2_65(2)) {", "+    if (jj_2_69(2)) {", "-    } else if (jj_2_66(2)) {", "+    } else if (jj_2_70(2)) {", "-        jj_la1[174] = jj_gen;", "+        jj_la1[175] = jj_gen;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ff6da7d03f330882718700f3253205c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void testStarted(String name)", "signatureAfterChange": "     public void testStarted(String name)", "diff": ["-      doc.acquireWriteLock();", "+//      doc.acquireWriteLock();", "-      finally { doc.releaseWriteLock(); }", "+//      finally { doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "801261c56b729092152e4fa7740f16ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   @Override public Type visit(StaticMethodCall node)", "signatureAfterChange": "   @Override public Type visit(StaticMethodCall node)", "diff": ["-    if (node.getArguments() != null) { args = node.getArguments(); }", "-    for (Expression e : args) { e.acceptVisitor(this); }", "+    if (node.getArguments() != null) { args = node.getArguments(); checkList(args); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8016ae391bec414db906c3d64c9dc377", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "      public void testForBitwiseBinaryExpressionOnly()", "signatureAfterChange": "      public void testForBitwiseBinaryExpressionOnly()", "diff": ["-      BitwiseBinaryExpression bbe = new BitwiseAndExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"j\")), new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 2));", "+      BitwiseBinaryExpression bbe = new BitwiseAndExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"j\")), new IntegerLiteral(SourceInfo.NO_INFO, 2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8017bf748d936200f2d002479bd41ddb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 580, "methodNumberAfterChange": 396, "signatureBeforeChange": "    final private boolean jj_3R_339()", "signatureAfterChange": "    final private boolean jj_3R_308()", "diff": ["+", "+  final private boolean jj_3R_308() {", "+    if (jj_3R_346()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_367()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_339() {", "-    if (jj_3R_349()) return true;", "-      if (jj_3R_362()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "801fddc3e982536018196f577d1ffc76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/LocalizedMessageReader.java", "commitBeforeChange": "8c59b6d09078dbcf117925bc686cacee46ca999f", "commitAfterChange": "f8e25255cc9b1c52f4c1874e15c63efdafe32091", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public String getMessage(String key, String[] strings)", "signatureAfterChange": "   public String getMessage(String key, String[] strings)", "diff": ["-            result += (n < strings.length) ? strings[n] : \"%\"+n;", "+            result += strings[n];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8021def20e2566f4740e57944d1392e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/io/IOUtil.java", "commitBeforeChange": "a4e2145de592013fb29da195ee7f505ebce1be18", "commitAfterChange": "47d80006b1fee008ed7ba52e8eff3cd92ddf84ff", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   private static Iterable<File> listFilesRecursively(final File f, final FileFilter filter,                                                       final FileFilter recursionFilter,                                                       final RecursionStack<File> stack)", "signatureAfterChange": "   private static Iterable<File> listFilesRecursively(final File f, final FileFilter filter,                                                       final FileFilter recursionFilter,                                                       final RecursionStack<File> stack)", "diff": ["-      try {", "-        final File canonicalF = f.getCanonicalFile();", "-        Thunk<Iterable<File>> getMembers = new Thunk<Iterable<File>>() {", "-          public Iterable<File> value() {", "-            Iterable<File> dirFiles = IterUtil.empty();", "-            for (File child : attemptListFilesAsIterable(canonicalF)) {", "-              dirFiles = IterUtil.compose(dirFiles, listFilesRecursively(child, filter, recursionFilter, stack));", "-            }", "-            return dirFiles;", "+      Thunk<Iterable<File>> getMembers = new Thunk<Iterable<File>>() {", "+        public Iterable<File> value() {", "+          Iterable<File> dirFiles = IterUtil.empty();", "+          for (File child : attemptListFilesAsIterable(f)) {", "+            dirFiles = IterUtil.compose(dirFiles, listFilesRecursively(child, filter, recursionFilter, stack));", "-        };", "-        result = IterUtil.compose(result, stack.apply(getMembers, IterUtil.<File>empty(), canonicalF));", "+          return dirFiles;", "+        }", "+      };", "+      try {", "+        result = IterUtil.compose(result, stack.apply(getMembers, IterUtil.<File>empty(), f.getCanonicalFile()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80240eabc3d88b4102e0b32d6ac7d7fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "94f0a27f33bac9f77c517bf8ab75dfe92afa1ace", "commitAfterChange": "60280b438c8e4415d1e3fb7cae7f2c5284f4ab7d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public FindReplacePanel(MainFrame frame, SingleDisplayModel model)", "signatureAfterChange": "   public FindReplacePanel(MainFrame frame, SingleDisplayModel model)", "diff": ["+    KeyStroke shiftEnter = KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, Event.SHIFT_MASK);", "+    findIM.put(shiftEnter, \"Insert Newline\");", "+    replaceIM.put(shiftEnter, \"Insert Newline\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8036405fa9498a1c3725de42bc55d613", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 559, "methodNumberAfterChange": 563, "signatureBeforeChange": "    final private boolean jj_3R_174()", "signatureAfterChange": "    final private boolean jj_3R_178()", "diff": ["-  final private boolean jj_3R_174() {", "+  final private boolean jj_3R_178() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;", "-    if (jj_3R_128()) return true;", "+    if (jj_3R_132()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "805ea852d74948a1ea3f2c85fc1553c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Object visit(ImportDeclaration node)", "signatureAfterChange": "   public Class visit(ImportDeclaration node)", "diff": ["+   */", "+  public Class visit(ImportDeclaration node) {", "+    // Declare the package or class importation", "+    if (node.isPackage()) {", "+      context.declarePackageImport(node.getName());", "+    } else {", "+      try {", "+        context.declareClassImport(node.getName());", "+      } catch (ClassNotFoundException e) {", "+        throw new CatchedExceptionError(e, node);", "+      }", "+    return null;", "+  }", "-     */", "-    public Object visit(ImportDeclaration node) {", "-        // Declare the package or class importation", "-        if (node.isPackage()) {", "-            context.declarePackageImport(node.getName());", "-        } else {", "-            try {", "-                context.declareClassImport(node.getName());", "-            } catch (ClassNotFoundException e) {", "-                throw new CatchedExceptionError(e, node);", "-            }", "-        return null;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "806387924da1549b561571db03e69c4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "5293cb4cfbc2f45d6061ba4101ad60348aa251ed", "commitAfterChange": "f68f43e5a680bb235f87f6125c6c0de6d15a12f4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void removeInterpreter(String name)", "signatureAfterChange": "   public void removeInterpreter(String name)", "diff": ["-  public void removeInterpreter(String name) { _interpreters.remove(name); }", "+  public void removeInterpreter(String name) {", "+    _interpreters.remove(name);", "+    _environments.remove(name);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8067c48d114a60cb47ac73394b0bb1a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 420, "methodNumberAfterChange": 602, "signatureBeforeChange": "    final private boolean jj_3R_369()", "signatureAfterChange": "    final private boolean jj_3R_371()", "diff": ["-  final private boolean jj_3R_369() {", "-    if (jj_3R_87()) return true;", "-    if (jj_3R_374()) jj_scanpos = xsp;", "+", "+  final private boolean jj_3R_371() {", "+    if (jj_3R_88()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_376()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8086072e8fa4511d980f63762f8d767a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 579, "methodNumberAfterChange": 562, "signatureBeforeChange": "    final private boolean jj_3R_427()", "signatureAfterChange": "    final private boolean jj_3R_442()", "diff": ["-", "-  final private boolean jj_3R_427() {", "-    if (jj_3R_96()) return true;", "+  final private boolean jj_3R_442() {", "+    if (jj_3R_99()) return true;", "-    if (jj_3R_451()) jj_scanpos = xsp;", "+    if (jj_3R_466()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8092b116149f6cd8da1d0a87092ee7c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SpecialTypeChecker.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void handleUncheckedException(SymbolData sd, JExpression j)", "signatureAfterChange": "   public void handleUncheckedException(SymbolData sd, JExpression j)", "diff": ["-    System.err.println(\"***** handleUncheckedException called for \" + sd + \" and \" + j);", "+//    System.err.println(\"***** handleUncheckedException called for \" + sd + \" and \" + j);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809db96cc3062716dbf4455d53a7229f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testStaticImport15()", "signatureAfterChange": "   public void testStaticImport15()", "diff": ["-    TigerUtilities.setTigerEnabled(true);", "+    setTigerEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809ecd50297d9f5c8387426a271f7ee8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "    public void testForEach14()", "signatureAfterChange": "    public void testForEach14()", "diff": ["-    TigerUtilities.setTigerEnabled(false);", "+    setTigerEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80baf49be48d8365bb04c53065f8dbb5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void resume(DebugThreadData data);", "signatureAfterChange": "   public void resume(DebugThreadData data) throws DebugException;", "diff": ["-  public void resume(DebugThreadData data);", "+  public void resume(DebugThreadData data) throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80ce13651725a052c13ff18d487fb389", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "43f41a369ae2fab400ffccc265d57e86cf8989d7", "commitAfterChange": "e0e957550963e046bdbb3a11cc062ff5ce5c9c2b", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": "    private void _showError(Throwable e, String title, String message)", "signatureAfterChange": "    private void _showError(Throwable e, String title, String message)", "diff": ["+    System.out.println(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80d561c354046031b08991250dfa434b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsList.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public <Ret> Ret apply(ConsVisitor<? super T, ? extends Ret> visitor)", "signatureAfterChange": "     public <Ret> Ret apply(ConsVisitor<? super T, ? extends Ret> visitor)", "diff": ["-      return visitor.forEmpty(this);", "+      return visitor.forEmpty();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80e856ca21e32479c2645fd9f6517e57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "     public Object visit(ShiftRightExpression node)", "signatureAfterChange": "   public Class visit(ShiftRightExpression node)", "diff": ["+   */", "+  public Class visit(ShiftRightExpression node) {", "+    Class c = visitShiftExpression(node);", "+    ", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.shiftRight", "+           (NodeProperties.getType(node),", "+            ln.getProperty(NodeProperties.VALUE),", "+            rn.getProperty(NodeProperties.VALUE)));", "+    }", "+    return c;", "+  }", "-     */", "-    public Object visit(ShiftRightExpression node) {", "-        Class c = visitShiftExpression(node);", "-", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.shiftRight", "-                     (NodeProperties.getType(node),", "-                      ln.getProperty(NodeProperties.VALUE),", "-                      rn.getProperty(NodeProperties.VALUE)));", "-        }", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80f9f3e6102eb5043a9794938aa652c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 581, "methodNumberAfterChange": 558, "signatureBeforeChange": "    final private boolean jj_3R_171()", "signatureAfterChange": "    final private boolean jj_3R_174()", "diff": ["+", "+  final private boolean jj_3R_174() {", "+    if (jj_scan_token(SYNCHRONIZED)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_98()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_128()) return true;", "+    return false;", "+  }", "-    if (jj_scan_token(SYNCHRONIZED)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_97()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_126()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81049ff9041f005390eafd2ce12600fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "1cb938b1998dc1cd68c3e4689c986e43001ea1ec", "commitAfterChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "   public OpenDefinitionsDocument newTestCase(String name, boolean makeSetUp, boolean makeTearDown)", "signatureAfterChange": "   public OpenDefinitionsDocument newTestCase(String name, boolean makeSetUp, boolean makeTearDown)", "diff": ["-      buf.append(\"void setUp() {\\n}\\n\\n\");", "+      buf.append(\"void setUp() throws Exception {\\n}\\n\\n\");", "-      buf.append(\"void tearDown() {\\n}\\n\\n\");", "+      buf.append(\"void tearDown() throws Exception {\\n}\\n\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "812e6a43955a9b574e5d11869dd5b666", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4dc5ace86e9b2c575f2b09ebb783f4d8d9db5e9a", "commitAfterChange": "798fcd5fdec1efc6698cb1c49cd62bdab41daffc", "methodNumberBeforeChange": 722, "methodNumberAfterChange": 705, "signatureBeforeChange": "    final private boolean jj_3R_554()", "signatureAfterChange": "    final private boolean jj_3R_556()", "diff": ["-  final private boolean jj_3R_554() {", "+  final private boolean jj_3R_556() {", "-    if (jj_3R_90()) return true;", "+    if (jj_3R_91()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8150ce62e25b74dff24012d8b6bac41f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ff65482ac0c34f9d18b211e3b1fa05371a07fb91", "commitAfterChange": "43bd3e08ba052e97e1d0271e7f1e324beac2ba86", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 179, "signatureBeforeChange": "   private JMenu _setUpFileMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpFileMenu(int mask)", "diff": ["+    _addMenuItem(fileMenu, _openProjectAction, KEY_OPEN_PROJECT);", "+    ", "+    fileMenu.add(_saveProjectAction);", "+    _addMenuItem(fileMenu, _closeProjectAction, KEY_CLOSE_PROJECT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "818340aecd394d2879b3e7667939431f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "commitAfterChange": "b1b91197c778ee62ce767051b412c31f7bcdddb8", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 73, "signatureBeforeChange": "   synchronized void currThreadSuspended()", "signatureAfterChange": "   synchronized void currThreadSuspended()", "diff": ["+        _switchToSuspendedThread();", "+        _hideWatches();", "+        // don't updateWatches in _switchToSuspendedThread since it will display the default", "+        // interpreter's watch information.", "+        _switchToSuspendedThread(false);", "-      _switchToSuspendedThread();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "818da24ecac92bb4abd4025ed4229039", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartStmtOfBracePlus.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    boolean supResult = super.indentLine(doc, reason);", "+    boolean supResult = super.indentLine(doc, reason); // This call does nothing other than record some indent tracing", "-    // If there is no brace, align to left margin", "+    // If there is no brace, align to left margin; can't happen when called from rule 19", "-    // Get the absolute position of the brace", "-    int bracePos = pos - distToLineEnclosingBrace;", "-", "-    String indent = \"\";", "-    try {", "-      indent = doc.getIndentOfCurrStmt(bracePos);", "-    } catch (BadLocationException e) {", "-      // Should not happen", "-      throw new UnexpectedException(e);", "-    }", "-    indent = indent + _suffix;", "+    // Get the absolute position of the (left edge of the) brace", "+    final int bracePos = pos - distToLineEnclosingBrace;", "+    final String indent = doc.getIndentOfCurrStmt(bracePos) + _suffix;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "819cea541e94d0f2a533bdd3d9031451", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "cd41b34cec4c099dc551839a16c1a804b7900ef0", "commitAfterChange": "91f1790d793689beae896db47015b721b602919f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "signatureAfterChange": "   private void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "diff": ["-      compilerErrorsArray = (CompilerError[]) compilerErrors.toArray(new CompilerError[compilerErrors.size()]);", "+      compilerErrorsArray = compilerErrors.toArray(new CompilerError[compilerErrors.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81b0ec5cbf8c5ea9b2ac6ec4e1360e6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 377, "signatureBeforeChange": "     public int _getLineEndPos(int pos)", "signatureAfterChange": "     public int _getLineEndPos(int pos)", "diff": ["-      doc.acquireReadLock();", "-      try { return doc._getLineEndPos(pos); }", "-      finally { doc.releaseReadLock(); }", "+//      doc.acquireReadLock();", "+//      try { ", "+        return doc._getLineEndPos(pos); ", "+//      }", "+//      finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81b38016e24428d83d84ff0f66d20910", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public static boolean isFixed(Iterable<?> iter)", "signatureAfterChange": "   public static boolean hasFixedSize(Iterable<?> iter)", "diff": ["-  public static boolean isFixed(Iterable<?> iter) {", "-    if (iter instanceof SizedIterable<?>) { return ((SizedIterable<?>) iter).isFixed(); }", "-    else if (iter instanceof Collection<?>) { return isFixedCollection((Collection<?>) iter); }", "+  public static boolean hasFixedSize(Iterable<?> iter) {", "+    if (iter instanceof SizedIterable<?>) { return ((SizedIterable<?>) iter).hasFixedSize(); }", "+    else if (iter instanceof Collection<?>) { return isFixedSizeCollection((Collection<?>) iter); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81cc8860f2ed17c7c8f5376eb255a1b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "9e497bdeba5d2ec8cfd80ebdb938cf6935007939", "commitAfterChange": "8015cc1e53ce6d8dc00c5faf652f2b4ef39fe4e9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public TypeData forDoStatement(DoStatement that)", "signatureAfterChange": "   public TypeData forDoStatement(DoStatement that)", "diff": ["-      Expression exp = (Expression) that.getCondition();", "+      Expression exp = that.getCondition();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d49a443535541af061f07561579108", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": "   public void toggleBookmark(int pos1, int pos2)", "signatureAfterChange": "   public void toggleBookmark(int pos1, int pos2)", "diff": ["-    final OpenDefinitionsDocument doc = getActiveDocument();", "-    doc.acquireReadLock();", "-    try { _toggleBookmark(pos1, pos2); }", "-    finally { doc.releaseReadLock(); }", "+//    final OpenDefinitionsDocument doc = getActiveDocument();", "+//    doc.acquireReadLock();", "+//    try { ", "+      _toggleBookmark(pos1, pos2); ", "+//    }", "+//    finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81daf656018294a4cbd67775b237fafa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModel.java", "commitBeforeChange": "facb31d52d0108009578d6a1708ac1dfc68b98b8", "commitAfterChange": "417b6d282f87d7da5aa7274e065294c3e7058851", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public JUnitErrorModel()", "signatureAfterChange": "   public JUnitErrorModel()", "diff": ["+    _errorsWithoutPositions = new JUnitError[0];", "+    _testsHaveRun = false;", "+    _errorsWithPos = 0;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ef342005f1b824194663e45006d752", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "76c0b2960b62020d46b810955623e0af759eee20", "commitAfterChange": "936042cad9bfa0086510cc58a96357306371fb07", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   protected final void quitSlave()", "signatureAfterChange": "   protected final void quitSlave()", "diff": ["-    debug.log(\"Entered state \" + State.FRESH);", "+    //debug.log(\"Entered state \" + State.FRESH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81f52e2a9b69ebbdfe4d20502eb1c23a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b1a32460e7865e87ff1cef41f79110513af4e989", "commitAfterChange": "c76fe963c6a762c896b91a64faa06b83223b5217", "methodNumberBeforeChange": 523, "methodNumberAfterChange": 523, "signatureBeforeChange": "     public void updateLocation()", "signatureAfterChange": "     public void updateLocation()", "diff": ["-      OpenDefinitionsDocument doc = _model.getActiveDocument();", "-//      doc.acquireReadLock();  // lock to ensure consistency of two reads from doc", "-//      try { ", "-      _line = doc.getCurrentLine();", "-      _col = doc.getCurrentCol(); ", "-//      }", "-//      finally { doc.releaseReadLock(); }", "+//      OpenDefinitionsDocument doc = _model.getActiveDocument();", "+      _line = _currentDefDoc.getCurrentLine();", "+      _col = _currentDefDoc.getCurrentCol(); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81f67906600b3ee3537d31bdc7d8e594", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelState.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         boolean      _combineCurrentAndNextIfEscape(TokenList.Iterator copyCursor)", "signatureAfterChange": "    boolean _combineCurrentAndNextIfEscape(TokenList.Iterator copyCursor)", "diff": ["-  ", "-  boolean ", "-    _combineCurrentAndNextIfEscape(TokenList.Iterator copyCursor)", "-  { ", "-    boolean combined = false;", "-    combined = combined || _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\", "+", "+  boolean _combineCurrentAndNextIfEscape(TokenList.Iterator copyCursor) {", "+    boolean combined = _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8205c825d6060b9260e07c115e07e6d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TopLevelContext.java", "commitBeforeChange": "6b388fb1877469cd91350296fabdf9fe8d522b74", "commitAfterChange": "b5cc61b9509dcda722d6dd7d5605a055e9915381", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public Type typeContainingField(String name, TypeSystem ts) throws AmbiguousNameException", "signatureAfterChange": "   public ClassType typeContainingField(String name, TypeSystem ts) throws AmbiguousNameException", "diff": ["-  public Type typeContainingField(String name, TypeSystem ts) throws AmbiguousNameException {", "+  public ClassType typeContainingField(String name, TypeSystem ts) throws AmbiguousNameException {", "-    Type result = explicitImport == null ? null : ts.makeClassType(explicitImport);", "+    ClassType result = explicitImport == null ? null : ts.makeClassType(explicitImport);", "-      LinkedList<Type> onDemandMatches = new LinkedList<Type>();", "+      LinkedList<ClassType> onDemandMatches = new LinkedList<ClassType>();", "-        Type t = ts.makeClassType(c);", "+        ClassType t = ts.makeClassType(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "822547fbe6af55de14dab42ded909559", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaErrorWindow.java", "commitBeforeChange": "fcd44b069955d5a8c8e628fd06f8d74718eca4f0", "commitAfterChange": "61b9a404e491e16ca3ff41abdf2517de0d9b5a07", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public static String getSystemAndDrJavaInfo()", "signatureAfterChange": "   public static String getSystemAndDrJavaInfo()", "diff": ["+    b.append(\"DrJava Revision \");", "+    b.append(edu.rice.cs.drjava.Version.getRevisionNumber());", "+    b.append(\"\\n\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824acdd9ace98e9fd0a9ab6776561b27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "87780b8b29e29760153c854d847bcdc00db37ade", "commitAfterChange": "4dfb7e8e2c11d7b61367445afcbbd318e060ee7c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+    ", "+    // Make the output view the active one", "+    _outputView.makeActive();", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824befd859fb45606fc9e11293bd7a95", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentRulesTestCase.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected final void _setDocText(String text) throws BadLocationException", "signatureAfterChange": "   protected final void _setDocText(String text) throws BadLocationException", "diff": ["-//    _doc.acquireWriteLock();", "-//    try {", "-    _doc.clear();", "-    _doc._insertString(0, text, null);", "-//    }", "-//    finally { _doc.releaseWriteLock(); }", "+    _doc.acquireWriteLock();", "+    try {", "+      _doc.clear();", "+      _doc._insertString(0, text, null);", "+    }", "+    finally { _doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8252307e70b21e67159b4771e210b22b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 570, "methodNumberAfterChange": 435, "signatureBeforeChange": "    final private boolean jj_3R_172()", "signatureAfterChange": "    final private boolean jj_3R_102()", "diff": ["+", "+  final private boolean jj_3R_102() {", "+    if (jj_3R_167()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_267()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_172() {", "-    if (jj_3R_233()) return true;", "-    if (jj_3R_271()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82657320f1a75c0c08d6c4d68691bccf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 666, "methodNumberAfterChange": 450, "signatureBeforeChange": "    final private boolean jj_3_33()", "signatureAfterChange": "    final private boolean jj_3_52()", "diff": ["+  final private boolean jj_3_52() {", "+    if (jj_3R_96()) return true;", "+    if (jj_3R_461()) return true;", "-", "-  final private boolean jj_3_33() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_99()) return true;", "-    if (jj_3R_491()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82681096683bda3eb6a964fd2142883e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public ReducedToken prevItem()", "signatureAfterChange": "   public ReducedToken prevItem()", "diff": ["-    int rmbOffset = rmb.getBlockOffset();", "-    int rmcOffset = rmc.getBlockOffset();", "+    int rmbOffset = getRMB().getBlockOffset();", "+    int rmcOffset = getRMC().getBlockOffset();", "-    rmb.setBlockOffset(rmbOffset);", "-    rmc.setBlockOffset(rmcOffset);", "+    getRMB().setBlockOffset(rmbOffset);", "+    getRMC().setBlockOffset(rmcOffset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "827c6d0d652e62ef1bc78a1773355816", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "dab739e9c0a893840c19d552b534083722093495", "commitAfterChange": "9d7de430d203354a52d3faa0378a92c50af92fb7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testOneJUnitError() throws BadLocationException, IOException", "signatureAfterChange": "   public void testOneJUnitError() throws Exception", "diff": ["-  public void testOneJUnitError() throws BadLocationException, IOException {", "+  public void testOneJUnitError() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82bfc74c7546913f638a3766425daf19", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 740, "methodNumberAfterChange": 731, "signatureBeforeChange": "    final private boolean jj_3R_316()", "signatureAfterChange": "    final private boolean jj_3R_318()", "diff": ["-  final private boolean jj_3R_316() {", "+  final private boolean jj_3R_318() {", "-    if (jj_3R_321()) return true;", "+    if (jj_3R_323()) return true;", "-      if (jj_3R_321()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_323()) { jj_scanpos = xsp; break; }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82de1bd723b0055a736aa938335e8634", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/MixedQuoteTest.java", "commitBeforeChange": "75615d6339345db6e253403db9b318fe78732c66", "commitAfterChange": "cfb5c0d7a42de99cbc0ae424116ea39ceac84b66", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testSingleEclipsesDouble()", "signatureAfterChange": "   public void testSingleEclipsesDouble()", "diff": ["-    assertEquals(\"#0.1\", FREE, stateAtCurrentToken(model));", "+    assertEquals(\"#0.1\", FREE, stateOfCurrentToken(model));", "-    assertEquals(\"#1.1\", INSIDE_DOUBLE_QUOTE, stateAtCurrentToken(model));", "+    assertEquals(\"#1.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model));", "-    assertEquals(\"#2.1\", INSIDE_SINGLE_QUOTE, stateAtCurrentToken(model));", "+    assertEquals(\"#2.1\", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(model));", "-    assertEquals(\"#3.1\", INSIDE_SINGLE_QUOTE, stateAtCurrentToken(model));", "+    assertEquals(\"#3.1\", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(model));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "830b8993c223b9ee8a2a8e916c165a1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 302, "methodNumberAfterChange": 302, "signatureBeforeChange": "     public boolean modifiedOnDisk()", "signatureAfterChange": "     public boolean modifiedOnDisk()", "diff": ["-        dd.readLock();", "+        dd.acquireReadLock();", "-      finally { dd.readUnlock(); }", "+      finally { dd.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8312e39d48483b1469f48b3cee8008dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "      public void testLiveUpdateOfIndentLevel() throws BadLocationException", "signatureAfterChange": "      public void testLiveUpdateOfIndentLevel() throws BadLocationException", "diff": ["+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "831f749078b366bfc5f253a39e269383", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 115, "signatureBeforeChange": "      public void revertFile() throws IOException", "signatureAfterChange": "      public void revertFile() throws IOException", "diff": ["-        tempDoc.resetModification();", "+        resetModification();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "833178902bb8306812fa80f8d46f5cd7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public Object visit(InnerAllocation node)", "signatureAfterChange": "   public Class visit(InnerAllocation node)", "diff": ["-     */", "-    public Object visit(InnerAllocation node) {", "-        // Visit the expression", "-        Class ec = (Class)node.getExpression().acceptVisitor(this);", "-", "-        // Check the type to declare", "-        Node type = node.getCreationType();", "-        if (type instanceof ReferenceType) {", "-            ReferenceType rt = (ReferenceType)type;", "-            rt.setRepresentation(ec.getName() + \"$\" + rt.getRepresentation());", "-        } else {", "-            throw new ExecutionError(\"allocation.type\", node);", "-        }", "-        Class c = (Class)type.acceptVisitor(this);", "-\tClass dc = InterpreterUtilities.getDeclaringClass(c);", "-", "-        // Do the type checking of the arguments", "-        List args = node.getArguments();", "-        Class[] cargs = null;", "-", "-        if (dc != null && dc.isAssignableFrom(ec)) {", "-            // Adds an argument if the class to build is an innerclass", "-            if (args != null) {", "-                cargs = new Class[args.size() + 1];", "-                ", "-                cargs[0] = ec;", "-                ListIterator it = args.listIterator();", "-                int i  = 1;", "-                while (it.hasNext()) {", "-                    cargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "-                }", "-                cargs = new Class[] { ec };", "-        } else {", "-            throw new ExecutionError(\"allocation.type\", node);", "-        Constructor cons = null;", "-        try {", "-            cons = context.lookupConstructor(c, cargs);", "-        } catch (Exception e) {", "-            throw new CatchedExceptionError(e, node);", "-        }", "-        ", "-        // Set the properties of this node", "-        node.setProperty(NodeProperties.TYPE,        c);", "-        node.setProperty(NodeProperties.CONSTRUCTOR, cons);", "-", "-        return c;", "+   */", "+  public Class visit(InnerAllocation node) {", "+    // Visit the expression", "+    Class ec = (Class)node.getExpression().acceptVisitor(this);", "+    ", "+    // Check the type to declare", "+    Node type = node.getCreationType();", "+    if (type instanceof ReferenceType) {", "+      ReferenceType rt = (ReferenceType)type;", "+      rt.setRepresentation(ec.getName() + \"$\" + rt.getRepresentation());", "+    } else {", "+      throw new ExecutionError(\"allocation.type\", node);", "+    }", "+    Class c = (Class)type.acceptVisitor(this);", "+    Class dc = InterpreterUtilities.getDeclaringClass(c);", "+    ", "+    // Do the type checking of the arguments", "+    List args = node.getArguments();", "+    Class[] cargs = null;", "+    ", "+    if (dc != null && dc.isAssignableFrom(ec)) {", "+      // Adds an argument if the class to build is an innerclass", "+      if (args != null) {", "+        cargs = new Class[args.size() + 1];", "+        cargs[0] = ec;", "+        ListIterator it = args.listIterator();", "+        int i  = 1;", "+        while (it.hasNext()) {", "+          cargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "+      } else {", "+        cargs = new Class[] { ec };", "+      }", "+    } else {", "+      throw new ExecutionError(\"allocation.type\", node);", "+    Constructor cons = null;", "+    try {", "+      cons = context.lookupConstructor(c, cargs);", "+    } catch (Exception e) {", "+      throw new CatchedExceptionError(e, node);", "+    ", "+    // Set the properties of this node", "+    node.setProperty(NodeProperties.TYPE,        c);", "+    node.setProperty(NodeProperties.CONSTRUCTOR, cons);", "+    ", "+    return c;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8334978441eac93cddd4d6d136d0d02b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "6d214db24b68a17f17e0cc8f3030a6df6dfa9e3d", "commitAfterChange": "b1335a3b17a414ac9a5047d93a0387148d0d6ac9", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void setVisible(boolean b)", "signatureAfterChange": "   public void setVisible(boolean b)", "diff": ["+      MainFrame.setPopupLoc(this);", "+      ", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "833d407329b3cb39a33388c4ba59a189", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "facb31d52d0108009578d6a1708ac1dfc68b98b8", "commitAfterChange": "417b6d282f87d7da5aa7274e065294c3e7058851", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "   private void _removeErrorListener(OpenDefinitionsDocument doc)", "signatureAfterChange": "   private void _removeErrorListener(OpenDefinitionsDocument doc)", "diff": ["+      pane.removeCaretListener(pane.getJUnitErrorCaretListener());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8341c0560a81855357c230b7bc49ee10", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 550, "methodNumberAfterChange": 534, "signatureBeforeChange": "    final private boolean jj_3R_400()", "signatureAfterChange": "    final private boolean jj_3R_320()", "diff": ["-", "-  final private boolean jj_3R_400() {", "-    if (jj_scan_token(ENUM)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_437()) jj_scanpos = xsp;", "-    if (jj_scan_token(LBRACE)) return true;", "-    if (jj_3R_438()) return true;", "+  final private boolean jj_3R_320() {", "+    if (jj_scan_token(ENUM)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_466()) jj_scanpos = xsp;", "+    if (jj_scan_token(LBRACE)) return true;", "+    if (jj_3R_467()) return true;", "+    if (jj_scan_token(RBRACE)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8358f2183ec49d53e725ac40c929133d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "diff": ["-    assertEquals(\"contents of saved file\", FOO_TEXT, FileOps.readFileAsString(file));", "+    assertEquals(\"contents of saved file\", FOO_TEXT, IOUtil.toString(file));", "-    assertEquals(\"contents of saved file 2nd write\", BAR_TEXT, FileOps.readFileAsString(file));", "+    assertEquals(\"contents of saved file 2nd write\", BAR_TEXT, IOUtil.toString(file));", "-    assertEquals(\"contents of saved file 3rd write\", FOO_TEXT, FileOps.readFileAsString(file));", "-    assertEquals(\"contents of backup file 3rd write\", BAR_TEXT, FileOps.readFileAsString(backup));", "+    assertEquals(\"contents of saved file 3rd write\", FOO_TEXT, IOUtil.toString(file));", "+    assertEquals(\"contents of backup file 3rd write\", BAR_TEXT, IOUtil.toString(backup));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83830e363ce254af1f58a1e57a066300", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/HashRelation.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public boolean isEmpty()", "signatureAfterChange": "        @Override public boolean isEmpty()", "diff": ["-  ", "-  public boolean isEmpty() { return _pairs.isEmpty(); }", "+    ", "+  @Override public boolean isEmpty() { return _firstIndex.isEmpty(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a107b2b23942469a13aeaf15799a72", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/EventHandlerThread.java", "commitBeforeChange": "c7f46cbabffac9cd7a89bd5cf54ec2af8aadbdee", "commitAfterChange": "17e9ff215a4a2c21db9a54255ff006382033889b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private void _handleStepEvent(StepEvent e) throws DebugException", "signatureAfterChange": "   private void _handleStepEvent(StepEvent e) throws DebugException", "diff": ["+    // preload document without holding _debugger lock to avoid deadlock", "+    // in bug [ 1696060 ] Debugger Infinite Loop", "+    // if the document is not already open, the event thread may load the document and then call a", "+    // synchronized method in the debugger, so we must do this before we hold the _debugger lock", "+    _debugger.preloadDocument(e.location());", "+    // now acquire _debugger lock, the event thread won't need tge _debugger lock anymore"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a21ae9f76eb4f0704e87235f8515c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public int _findPrevDelimiter(final int pos, final char[] delims, final boolean skipBracePhrases)     throws BadLocationException", "signatureAfterChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipBracePhrases)     throws BadLocationException", "diff": ["-  public int _findPrevDelimiter(final int pos, final char[] delims, final boolean skipBracePhrases)", "+  public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipBracePhrases)", "-//      synchronized(_reduced) {", "-        final int origPos = _currentLocation;", "-        ", "-        // Walk backwards from specificed position, scanning current line for a delimiter", "-        for (i = pos - 1; i >= lineStartPos; i--) {", "-          /* Invariant: reduced model points to reducedPos, text[i+1:pos] contains no valid delims, ", "-           * 0 <= i < reducedPos <= pos */", "-          // Move reduced model to location pos", "-          int irel = i - lineStartPos;", "-          _setCurrentLocation(i);  // reduced model points to i", "-          if (_isShadowed() || isCommentOpen(line, irel)) {", "+      final int origPos = _currentLocation;", "+      ", "+      // Walk backwards from specificed position, scanning current line for a delimiter", "+      for (i = pos - 1; i >= lineStartPos; i--) {", "+        /* Invariant: reduced model points to reducedPos, text[i+1:pos] contains no valid delims, ", "+         * 0 <= i < reducedPos <= pos */", "+        // Move reduced model to location pos", "+        int irel = i - lineStartPos;", "+        setCurrentLocation(i);  // reduced model points to i", "+        if (isShadowed() || isCommentOpen(line, irel)) {", "-            continue;", "-          }", "-          char ch = line.charAt(irel);", "-          ", "-          if (_match(ch, delims) /* && ! isShadowed() && (! skipParenPhrases || ! posInParenPhrase())*/) {", "-            reducedPos = i;    // record valid match                                                                              ", "+          continue;", "+        }", "+        char ch = line.charAt(irel);", "+        ", "+        if (match(ch, delims) /* && ! isShadowed() && (! skipParenPhrases || ! posInParenPhrase())*/) {", "+          reducedPos = i;    // record valid match                                                                              ", "+          break;", "+        }", "+        ", "+        if (skipBracePhrases && match(ch, CLOSING_BRACES) ) {  // note that delims have already been matched", "+//            Utilities.show(\"closing bracket is '\" + ch + \"' at pos \" + i);", "+          setCurrentLocation(i + 1); // move cursor immediately to right of ch (a brace)", "+//            Utilities.show(\"_currentLocation = \" + _currentLocation);", "+          int dist = balanceBackward();  // bypasses redundant read locking", "+          if (dist == -1) { // if braces do not balance, return failure", "+            i = -1;", "+//              Utilities.show(\"dist = \" + dist + \" No matching brace found\");", "-          ", "-          if (skipBracePhrases && _match(ch, CLOSING_BRACES) ) {  // note that delims have already been matched", "-//            Utilities.show(\"closing bracket is '\" + ch + \"' at pos \" + i);", "-            _setCurrentLocation(i + 1); // move cursor immediately to right of ch (a brace)", "-//            Utilities.show(\"_currentLocation = \" + _currentLocation);", "-            int dist = balanceBackward();  // bypasses redundant read locking", "-            if (dist == -1) { // if braces do not balance, return failure", "-              i = -1;", "-//              Utilities.show(\"dist = \" + dist + \" No matching brace found\");", "-              break;", "-            }", "-            assert dist > 0;", "-//            Utilities.show(\"text = '\" + getText(i + 1 - dist, dist) + \"' dist = \" + dist + \" matching bracket is '\" + text.charAt(i) + \"' at pos \" + i);", "-            _setCurrentLocation(i + 1 - dist);  // skip over balanced brace text, decrementing _currentLocation", "-            i = _currentLocation;", "-            // Decrementing i skips over matching brace; could skip back into text preceding current line", "-            continue;", "-          }", "-        }  // end for", "-        ", "-        _setCurrentLocation(origPos);    // Restore the state of the reduced model;", "-//      }  // end synchronized", "+          assert dist > 0;", "+//            Utilities.show(\"text = '\" + getText(i + 1 - dist, dist) + \"' dist = \" + dist + \" matching bracket is '\" ", "+//            + text.charAt(i) + \"' at pos \" + i);", "+          setCurrentLocation(i + 1 - dist);  // skip over balanced brace text, decrementing _currentLocation", "+          i = _currentLocation;", "+          // Decrementing i skips over matching brace; could skip back into text preceding current line", "+          continue;", "+        }", "+      }  // end for", "+      ", "+      setCurrentLocation(origPos);    // Restore the state of the reduced model;", "-      else reducedPos = _findPrevDelimiter(i, delims, skipBracePhrases); ", "+      else reducedPos = findPrevDelimiter(i, delims, skipBracePhrases); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a283293f4ed671f26c659edf8e5ac0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testNoJUnitErrors() throws Exception", "signatureAfterChange": "   public void testNoJUnitErrors() throws Exception", "diff": ["-    _model.setResetAfterCompile(false);", "-    //synchronized(listener) {", "-      doc.startCompile();", "-      //listener.wait();", "-    //}", "+    // Doesn't reset interactions because interpreter is not used", "+    doc.startCompile();", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83b78f688d288a9bd861ba9c5067a26f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 380, "signatureBeforeChange": "          public void indentLines(int selStart, int selEnd)", "signatureAfterChange": "          public void indentLines(int selStart, int selEnd)", "diff": ["-      doc.acquireWriteLock();", "-      try { doc.indentLines(selStart, selEnd); }", "-      finally { doc.releaseWriteLock(); }", "+//      doc.acquireWriteLock();", "+//      try { ", "+      doc.indentLines(selStart, selEnd); ", "+//      }", "+//      finally { doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83bf222c1b1966d4727aaf6e44e46224", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "314c962d7f6ed2c6b00f5edc6e764b582b016016", "commitAfterChange": "3b2b8c4279d3d3c19a0254256362d4d46aeeddaf", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public File[] openProject(File fine) throws IOException;", "signatureAfterChange": "   public File[] openProject(File fine) throws IOException, MalformedProjectFileException;", "diff": ["-  public File[] openProject(File fine) throws IOException;", "+  public File[] openProject(File fine) throws IOException, MalformedProjectFileException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "841dde1f546127c6aec46406267dd2d6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 759, "methodNumberAfterChange": 765, "signatureBeforeChange": "    final private boolean jj_3R_530()", "signatureAfterChange": "    final private boolean jj_3R_534()", "diff": ["-  final private boolean jj_3R_530() {", "-    if (jj_3R_547()) return true;", "-      if (jj_3R_548()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_534() {", "+    if (jj_3R_551()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_552()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8423785117416bdf26072cf5b163a6e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsView.java", "commitBeforeChange": "9d169028680f58d3e3b47cc25c8de1afe15038ec", "commitAfterChange": "cefd91ea5953c77c9fe2f6c1dd90708535579037", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic DefinitionsView(MainFrame mf)", "signatureAfterChange": " \t \tpublic DefinitionsView(MainFrame mf)", "diff": ["-\t\t\t", "-", "-", "-\t\t//????KEEP??????", "+\t\t_openChooser.setFileFilter(new JavaSourceFilter());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "842cae5da0c444ae7e80852528975267", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 297, "methodNumberAfterChange": 264, "signatureBeforeChange": "    final private boolean jj_3R_158()", "signatureAfterChange": "    final private boolean jj_3R_155()", "diff": ["-", "-  final private boolean jj_3R_158() {", "-    if (jj_3R_172()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_225()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_155() {", "+    if (jj_3R_169()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(84)) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_222()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "842cba057a13e1557a37507164a77faf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public File[] getSourceRootSet()", "signatureAfterChange": "   public File[] getSourceRootSet()", "diff": ["-        ", "+", "-    return (File[]) roots.toArray(new File[0]);", "+    return roots.toArray(new File[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84370ec218d33ab0237dbc64a44ebe30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "f0e93e8f70d74090c83524f565ab98d73710c2e7", "commitAfterChange": "cea95770b041dbb7494d9ea4d762c8077631d283", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void itemStateChanged(ItemEvent e)", "signatureAfterChange": "     public void itemStateChanged(ItemEvent e)", "diff": ["+        DrJava.getConfig().setSetting(OptionConstants.FIND_MATCH_CASE,", "+                                      false);", "+", "+        DrJava.getConfig().setSetting(OptionConstants.FIND_MATCH_CASE,", "+                                      true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "845b5fd8f978004ff874d6cda0819f67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListSortNavigatorTest.java", "commitBeforeChange": "7c4507413beb0e75cdce1379ffec8d0279bed992", "commitAfterChange": "d1bf0f940bc3d914d8d8293a0e85760984d7b371", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testTraversalOps()", "signatureAfterChange": "      public void testTraversalOps()", "diff": ["+    list.setNextChangeModelInitiated(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "845c41138461ec64c9dc8ed9238db101", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public void testSaveAllSaveCorrectFiles()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAllSaveCorrectFiles()     throws BadLocationException, IOException", "diff": ["-    assertEquals(\"contents of saved file1\",", "-                 FOO_TEXT,", "-                 FileOps.readFileAsString(file1));", "-    assertEquals(\"contents of saved file2\",", "-                 BAR_TEXT,", "-                 FileOps.readFileAsString(file2));", "-    assertEquals(\"contents of saved file3\",", "-                 \"third document contents\",", "-                 FileOps.readFileAsString(file3));", "+    assertEquals(\"contents of saved file1\", FOO_TEXT, FileOps.readFileAsString(file1));", "+    assertEquals(\"contents of saved file2\", BAR_TEXT, FileOps.readFileAsString(file2));", "+    assertEquals(\"contents of saved file3\", \"third document contents\", FileOps.readFileAsString(file3));", "+    ", "+    _log.log(\"testSaveAllSaveCorrectFiles completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84707da3c7f43396435638c73ff5c51e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b263b99edc1a8fc9521494e6572b87b01d16accc", "commitAfterChange": "378e279072139013d221fb34f1ba7c9988465f75", "methodNumberBeforeChange": 541, "methodNumberAfterChange": 541, "signatureBeforeChange": "   void _setUpMenuBar(JMenuBar menuBar)", "signatureAfterChange": "   void _setUpMenuBar(JMenuBar menuBar)", "diff": ["-                  _setUpFileMenu(mask), _setUpEditMenu(mask), _setUpToolsMenu(mask),", "-                  _setUpProjectMenu(mask), _showDebugger?_setUpDebugMenu(mask):null,", "-                  _setUpLanguageLevelMenu(mask), _setUpHelpMenu(mask));", "+                  _setUpFileMenu(mask, false), _setUpEditMenu(mask, false), _setUpToolsMenu(mask, false),", "+                  _setUpProjectMenu(mask, false), _showDebugger?_setUpDebugMenu(mask, false):null,", "+                  _setUpLanguageLevelMenu(mask, false), _setUpHelpMenu(mask, false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8472109adabb50b267039a57bc4e3078", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/CartesianIterable.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public boolean isFixed()", "signatureAfterChange": "      public R last()", "diff": ["-  public boolean isFixed() { return IterUtil.isFixed(_left) && IterUtil.isFixed(_right); }", "+  ", "+  public R last() { return _combiner.value(IterUtil.last(_left), IterUtil.last(_right)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8473303f4388e80bed917c7ee2f8bba1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ce1be4bebdf226da73b0f3a3408c7770e9d93c01", "commitAfterChange": "e48d5f3129b8001e5afe1a32af197a9281189fe3", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 204, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    _findReplace = new FindReplaceDialog(this, _model);", "+    _findReplace = new FindReplacePanel(this, _model);", "+    _findResultsPanel = new FindResultsPanel(this);", "+    _documentFindResultsHighlights = new java.util.Hashtable<DocumentRegion, HighlightManager.HighlightInfo>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "848654c35341efaf8c30a0c8b624d6bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "76c0b2960b62020d46b810955623e0af759eee20", "commitAfterChange": "936042cad9bfa0086510cc58a96357306371fb07", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private void transition(State from, State to)", "signatureAfterChange": "   private void transition(State from, State to)", "diff": ["-    debug.log(\"Entered state \" + to);", "+    //debug.log(\"Entered state \" + to);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "848ba5c05f5b95ff41ef283dc5081bb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 349, "methodNumberAfterChange": 351, "signatureBeforeChange": "    final private boolean jj_3R_350()", "signatureAfterChange": "    final private boolean jj_3R_357()", "diff": ["-", "-  final private boolean jj_3R_350() {", "-    if (jj_3R_363()) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_385()) { jj_scanpos = xsp; break; }", "-    }", "+    if (jj_3R_362()) return true;", "+      if (jj_3R_378()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "848cd21aab357394d3dc349349ac6a0f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6d9f2ce37ba22041a5b2840cffbd0f66339165b6", "commitAfterChange": "b153c43e59717c98f32c67f14d61a00a81016991", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 161, "signatureBeforeChange": "   final public void methodDeclarationLookahead() throws ParseException", "signatureAfterChange": "   final public void constructorDeclarationLookahead() throws ParseException", "diff": ["+      jj_la1[184] = jj_gen;", "-      jj_la1[184] = jj_gen;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84911d9475065621111c99017b3533d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/SkipFirstIterable.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public boolean isFixed()", "signatureAfterChange": "      public T last()", "diff": ["-  public boolean isFixed() { return IterUtil.isFixed(_iterable); }", "+  ", "+  public T last() {", "+    // assert that there is at least one element", "+    IterUtil.first(this);", "+    return IterUtil.last(_iterable);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84ab81a78cf87857938f89c3e80574f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 324, "methodNumberAfterChange": 309, "signatureBeforeChange": "    final private boolean jj_3R_341()", "signatureAfterChange": "    final private boolean jj_3R_374()", "diff": ["+", "+  final private boolean jj_3R_374() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_63()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_388()) return true;", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_341() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_60()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_351()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84addee6ee9f52d48890fcd6407c1691", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "c3fb656e676b9139addd78f759d02f23bc0ddcb3", "commitAfterChange": "0f1ebded0cf3f3c1433e87b9a6d077f0d67078af", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "    public void testWriteFilePJT() throws IOException, MalformedProjectFileException", "signatureAfterChange": "    public void testWriteFilePJT() throws IOException, MalformedProjectFileException", "diff": ["-", "-    String expected = \"\";", "-    String received = \"\";", "+    StringBuilder received = new StringBuilder();", "-      received += (char) c;", "+      received.append((char)c);", "+    fr.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84c6e9929dc06b7311cdc506aff87009", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecurUtil.java", "commitBeforeChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "commitAfterChange": "34d03e4ba66c612a034017381b72d822fe9c84d0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public static String arrayToString(byte[] array, ArrayStringMode stringMode)", "signatureAfterChange": "   public static String arrayToString(byte[] array, ArrayStringMode stringMode)", "diff": ["-          else { result.append(\", \"); }", "+          else { result.append(stringMode.delimiter()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84dc846b357cb9ed375c6bc97700828b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/StaticContext.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Method lookupMethod(Node prefix, String mname, Class[] params)     throws NoSuchMethodException", "signatureAfterChange": "   public Method lookupMethod(Node prefix, String mname, Class[] params)     throws NoSuchMethodException", "diff": ["-    Class  c = (Class)NodeProperties.getType(prefix);", "+    Class  c = NodeProperties.getType(prefix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84dc9476cf8d96394718c48745437b21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 429, "methodNumberAfterChange": 542, "signatureBeforeChange": "    final private boolean jj_3R_224()", "signatureAfterChange": "    final private boolean jj_3R_179()", "diff": ["-  final private boolean jj_3R_224() {", "-    if (jj_3R_249()) return true;", "-      if (jj_3R_279()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_179() {", "+    if (jj_3R_79()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_222()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84ee5a6f6495e860ec3df3eedfffb8eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "7933cc364884763a44a085994870596faa04b316", "commitAfterChange": "b978cac1d85997e83464382e4a499c19d736223c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static String replace (String fullString, String toReplace, String replacement)", "signatureAfterChange": "   public static String replace (String fullString, String toReplace, String replacement)", "diff": ["-      StringBuffer buff;", "+      StringBuilder buff;", "-        buff = new StringBuffer(fullString.substring(0, pos));", "+        buff = new StringBuilder(fullString.substring(0, pos));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84f03b3a5714f21158a01c0ca44e2d99", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ConstructorBodyTypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          public void setUp()", "signatureAfterChange": "          public void setUp()", "diff": ["+      VariableData[] vds = new VariableData[] { new VariableData(\"i\", _publicMav, SymbolData.INT_TYPE, true, null), ", "+                                                new VariableData(SymbolData.BOOLEAN_TYPE) };", "-                            new VariableData[] { new VariableData(\"i\", _publicMav, SymbolData.INT_TYPE, true, null), new VariableData(SymbolData.BOOLEAN_TYPE) },", "+                            vds,", "-      ((MethodData) _bd1).getParams()[0].setEnclosingData(_bd1);                      ", "-      ((MethodData) _bd1).getParams()[1].setEnclosingData(_bd1);                      ", "+      ", "+      _bd1.getParams()[0].setEnclosingData(_bd1);                      ", "+      _bd1.getParams()[1].setEnclosingData(_bd1);                      ", "-      _bd1.addVars(((MethodData)_bd1).getParams());", "-      _cbtc = new ConstructorBodyTypeChecker(_bd1, new File(\"\"), \"\", new LinkedList<String>(), new LinkedList<String>(), new LinkedList<VariableData>(), new LinkedList<Pair<SymbolData, JExpression>>());", "+      _bd1.addVars(_bd1.getParams());", "+      _cbtc = new ConstructorBodyTypeChecker(_bd1, ", "+                                             new File(\"\"), ", "+                                             \"\", ", "+                                             new LinkedList<String>(), ", "+                                             new LinkedList<String>(), ", "+                                             new LinkedList<VariableData>(), ", "+                                             new LinkedList<Pair<SymbolData, JExpression>>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84f5a02271ed356c11d2725c07dc2b83", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b97db40bea671594a37f7cabd8d363cab45e0154", "commitAfterChange": "fab79f2f445044e7a60a89e228042164713428d9", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "   private JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "signatureAfterChange": "   private JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "diff": ["-    //pane.addCaretListener( _posListener );", "-    //_posListener.updateLocation();", "+    pane.addCaretListener( _posListener );", "+    _posListener.updateLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84fe9b2c0e97ec14d03d6bf3db624fb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public synchronized void testStepOut()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testStepOut()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-    throws DebugException, BadLocationException, IOException, InterruptedException", "+    throws DebugException, BadLocationException, DocumentAdapterException,", "+    IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84ff04346e7b133cd06ccccf91cff274", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testNone()", "signatureAfterChange": "   public void testNone()", "diff": ["-//    _log.log(\"testNone() completed\");", "+    _log.log(\"testNone() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85074e55494669ddb4c20a14cc106f93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 236, "signatureBeforeChange": "   public static <T1, T2, T3, R> Iterable<R>     valuesOf(Iterable<? extends Lambda3<? super T1, ? super T2, ? super T3, ? extends R>> iter,               T1 arg1, T2 arg2, T3 arg3)", "signatureAfterChange": "   public static <T1, T2, T3, R> Iterable<R>     valuesOf(Iterable<? extends Lambda3<? super T1, ? super T2, ? super T3, ? extends R>> iter,               T1 arg1, T2 arg2, T3 arg3)", "diff": ["-    return new MappedIterable<Lambda3<? super T1, ? super T2, ? super T3, ? extends R>, R>", "-                 (iter, new Lambda3Value<T1, T2, T3, R>(arg1, arg2, arg3));", "+    Lambda<Lambda3<? super T1, ? super T2, ? super T3, ? extends R>, R> l = ", "+      LambdaUtil.bindSecond(LambdaUtil.bindThird(LambdaUtil.bindFourth(", "+                            LambdaUtil.<T1, T2, T3, R>ternaryApplicationLambda(), arg3), arg2), arg1);", "+    return new MappedIterable<Lambda3<? super T1, ? super T2, ? super T3, ? extends R>, R>(iter, l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85176ca280dfd5175c8e08ad4e9bac8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "3f81b37285813b52f5c285ae3a68ee4a21753a7e", "commitAfterChange": "844a54657c2f878fc1ea01131f59375a436ab7c8", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "      public void resetCounts()", "signatureAfterChange": "      public void resetCounts()", "diff": ["-      saveAllBeforeProceedingCount = 0;", "+      saveBeforeCompileCount = 0;", "+      saveBeforeJUnitCount = 0;", "+      saveBeforeJavadocCount = 0;", "+      saveBeforeDebugCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85298d6a1e970a5188b703a61f7ccb26", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 717, "methodNumberAfterChange": 651, "signatureBeforeChange": "    final private boolean jj_3R_601()", "signatureAfterChange": "    final private boolean jj_3R_626()", "diff": ["-", "-  final private boolean jj_3R_601() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_203()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_583()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_626() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_206()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_581()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "853fa51a638e46b59bf73f00b39c4d78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/repl/EclipseInteractionsModel.java", "commitBeforeChange": "1827cec0a07b944a36f95e36eebdc6666dc9617c", "commitAfterChange": "302914e42441eaa34fb8588c2f19600c7ec3298a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected void _notifyInterpreterExited(final int status)", "signatureAfterChange": "   protected void _notifyInterpreterExited(final int status)", "diff": ["-      ((InteractionsListener)_listeners.get(i)).interpreterExited(status);", "+      _listeners.get(i).interpreterExited(status);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "854261fe186f51edf5639d5827cb4b92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "1333ad40debe120f6d8fd5fb5ff36c57ce6b1ccf", "commitAfterChange": "3907c0e8430f2d380a191d1ad8364cbfdd1d1b28", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testStarted(String testName)", "signatureAfterChange": "   public void testStarted(String testName)", "diff": ["+      _log.log(re.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8545b3125ea85e222ea2ec147aebb34d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 547, "methodNumberAfterChange": 815, "signatureBeforeChange": "    final private boolean jj_3R_218()", "signatureAfterChange": "    final private boolean jj_3R_399()", "diff": ["-", "-  final private boolean jj_3R_218() {", "-    if (jj_3R_105()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_291()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_399() {", "+    if (jj_3R_107()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_410()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "854bbed2a6894d4e13f49e1fd53cb199", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testSwitchActiveInterpreter() throws InterruptedException", "signatureAfterChange": "   public void testSwitchActiveInterpreter() throws InterruptedException", "diff": ["+    _jvm.resetFlags();", "-    assertEquals(\"result\", \"6\", _jvm.returnBuf);", "+    assertEquals(\"result\", \"6\", _jvm.returnBuf());", "+    _jvm.resetFlags();", "-    assertNotNull(\"exception was thrown\", _jvm.exceptionMsgBuf);", "+    assertNotNull(\"exception was thrown\", _jvm.exceptionMsgBuf());", "+    _jvm.resetFlags();", "-    assertEquals(\"result\", \"6\", _jvm.returnBuf);", "+    assertEquals(\"result\", \"6\", _jvm.returnBuf());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "854f7c9743fcf564a4ee7f46c7937f93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testDotPaths()", "signatureAfterChange": "   public void testDotPaths()", "diff": ["-//    _log.log(\"testDotPaths completed\");", "+    _log.log(\"testDotPaths completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8567f997eb7b13d014f9c91e35286c3b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 699, "methodNumberAfterChange": 508, "signatureBeforeChange": "    final private boolean jj_3R_597()", "signatureAfterChange": "    final private boolean jj_3R_560()", "diff": ["+  final private boolean jj_3R_560() {", "+    if (jj_3R_95()) return true;", "+    if (jj_3R_574()) jj_scanpos = xsp;", "-", "-  final private boolean jj_3R_597() {", "-    if (jj_3R_92()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_605()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "857fc4cf6f6315b7b09f04303506b035", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public Object visit(ArrayType node)", "signatureAfterChange": "   public Class visit(ArrayType node)", "diff": ["-     */", "-    public Object visit(ArrayType node) {", "-        Node eType = node.getElementType();", "-        Class c = (Class)eType.acceptVisitor(this);", "-        Class ac = Array.newInstance(c, 0).getClass();", "-        ", "-        // Set the type property of this node", "-        node.setProperty(NodeProperties.TYPE, ac);", "-        return ac;", "+   */", "+  public Class visit(ArrayType node) {", "+    Node eType = node.getElementType();", "+    Class c = (Class)eType.acceptVisitor(this);", "+    Class ac = Array.newInstance(c, 0).getClass();", "+    ", "+    // Set the type property of this node", "+    node.setProperty(NodeProperties.TYPE, ac);", "+    return ac;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "858364359896d61e6dc1b7b89f863070", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 432, "methodNumberAfterChange": 607, "signatureBeforeChange": "    final private boolean jj_3R_452()", "signatureAfterChange": "    final private boolean jj_3R_454()", "diff": ["-", "-  final private boolean jj_3R_452() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_462()) jj_scanpos = xsp;", "-    if (jj_scan_token(THIS)) return true;", "-    if (jj_3R_89()) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_454() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_464()) jj_scanpos = xsp;", "+    if (jj_scan_token(THIS)) return true;", "+    if (jj_3R_90()) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "858769b05b06784e34b4ab5d7a5aab3d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 211, "signatureBeforeChange": "     public void startCompile()", "signatureAfterChange": "     public void startCompile() throws IOException", "diff": ["-    public void startCompile(){ ", "+    public void startCompile() throws IOException { "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "858abf6490fe8d16d7113ade6bf94956", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void setCurrentLocation(int loc)", "signatureAfterChange": "   public void setCurrentLocation(int loc)", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85d4e2806e8dc80a86c97320c47404a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "cd41b34cec4c099dc551839a16c1a804b7900ef0", "commitAfterChange": "91f1790d793689beae896db47015b721b602919f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public Node visit(IfThenStatement node)", "signatureAfterChange": "   public Node visit(IfThenStatement node)", "diff": ["-    node.setThenStatement((Node)node.getThenStatement().acceptVisitor(this));", "+    node.setThenStatement(node.getThenStatement().acceptVisitor(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85d5ed564f29701cb3c1ce50574edf90", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 242, "methodNumberAfterChange": 232, "signatureBeforeChange": "          public String toString()", "signatureAfterChange": "          public String toString()", "diff": ["-    public String toString() { return \"(ODD \" + _id + \":\" + getFilename() + \")\"; }", "+    public String toString() { return getFilename(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8609cee1bb8daf08bb505a9cde1d41d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/ConstantPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public short put(Double cst)", "signatureAfterChange": "   public short put(Double cst)", "diff": ["-    Info info = (Info)constants.get(cst);", "+    Info info = constants.get(cst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "861549e704be7efa2fc031e39d2bc4fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/HTMLFrame.java", "commitBeforeChange": "dd4842ca8ba89600798d5ff08666825edfadfb74", "commitAfterChange": "3e6dcdfe0dc2a3a2b00da441b478134258a2740f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public HTMLFrame(String frameName, URL introUrl, URL indexUrl, String iconString, File baseDir)", "signatureAfterChange": "   public HTMLFrame(String frameName, URL introUrl, URL indexUrl, String iconString, File baseDir)", "diff": ["-    MainFrame.setPopupLoc(this);", "+    MainFrame.setPopupLoc(this, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8628160608bf6e5e42ec0cca783e10a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "   protected void handleInnerClassDef(InnerClassDef that, Data data, String name)", "signatureAfterChange": "   protected void handleInnerClassDef(InnerClassDef that, Data data, String name)", "diff": ["-   */", "+    */", "+//    System.err.println(\"Processing InnerClassDef for \" + name);", "-    ", "-      that.getBody().visit(new ClassBodyAdvancedVisitor(sd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+      that.getBody().visit(new ClassBodyAdvancedVisitor(sd, name, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8628436ee43e8c290e7c6ae0d0eec3de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "e28d42989a089b15d3a01e7dd19b426bc7021c04", "commitAfterChange": "261ca8732921a2a5c58b2777d5419ddfe2c261df", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testDoNotRunJUnitIfFileHasBeenMoved() throws Exception", "signatureAfterChange": "      public void testDoNotRunJUnitIfFileHasBeenMoved() throws Exception", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "862dd404853cb2d58a39a74448baa1ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 331, "methodNumberAfterChange": 643, "signatureBeforeChange": "    final private boolean jj_3R_338()", "signatureAfterChange": "    final private boolean jj_3R_333()", "diff": ["-  final private boolean jj_3R_338() {", "-    if (jj_3R_344()) return true;", "-      if (jj_3R_359()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_333() {", "+    if (jj_3R_340()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_341()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8634950c248379873aae7283a2207123", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "930b1ef6cc279650a085c7c6499b1b57cb240018", "commitAfterChange": "73b3ce3968c13472938fea3d36b496150c938bd2", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": "   private void _clearAllBreakpoints()", "signatureAfterChange": "   private void _clearAllBreakpoints()", "diff": ["-    //_model.getDebugManager().clearAllBreakpoints(true);", "+    _model.getDebugManager().removeAllBreakpoints();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8641e5529534c3b264d96a4b8efe2d25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/Log.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _init()", "signatureAfterChange": "   protected void _init()", "diff": ["-          log(\"Log '\" + _name + \"' opened: \" + (new Date()));", "+          log(\"Log '\" + _name + \"' opened: \" + (new Date()).toGMTString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "864e04a825bf9065571118fba5506854", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/DocumentAdapter.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void forceInsertText(int offs, String str, String style)     throws DocumentAdapterException;", "signatureAfterChange": "   public void forceInsertText(int offs, String str, String style);", "diff": ["-  public void forceInsertText(int offs, String str, String style)", "-    throws DocumentAdapterException;", "+  public void forceInsertText(int offs, String str, String style);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8664af220be6ea159b2f255c77ab8200", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 778, "methodNumberAfterChange": 541, "signatureBeforeChange": "    final private boolean jj_3R_479()", "signatureAfterChange": "    final private boolean jj_3R_473()", "diff": ["+  final private boolean jj_3R_473() {", "+    if (jj_3R_488()) return true;", "+    if (jj_3R_503()) jj_scanpos = xsp;", "-", "-  final private boolean jj_3R_479() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_483()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_484()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "866d4254630d4435892f7a0f20c1271f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "85538cb484722f3ee8b8f52d4f19defc02bd67d5", "commitAfterChange": "ec727abc662388138ad4bf94694974ef5e13db3c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private void _createPanels()", "signatureAfterChange": "   private void _createPanels()", "diff": ["-    PanelTreeNode pathsNode = _createPanel(\"Paths\");", "-    _setupPathsPanel(pathsNode.getPanel());", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "866e45c4581f021fb582a6d0c9410e57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 431, "methodNumberAfterChange": 289, "signatureBeforeChange": "    final private boolean jj_3R_448()", "signatureAfterChange": "    final private boolean jj_3R_417()", "diff": ["+  final private boolean jj_3R_417() {", "+    if (jj_3R_112()) return true;", "+    if (jj_3R_347()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_448() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_3R_447()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "867af939d11bdc9db0d309d4d33703c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void systemErrPrint(String s) throws RemoteException", "signatureAfterChange": "   public void systemErrPrint(String s) throws RemoteException", "diff": ["+    debug.logStart();", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "868cdae4ad11c9e021c15e3604b4814e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "997d67839eca4386dbc5f66cebcd8a080dee4cfc", "commitAfterChange": "6321c6a506dc33e42eaf8a2fcb096efc58a17cfa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public JUnitPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public JUnitPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["+    super(frame, \"Test output\");", "-    _frame = frame;", "-", "-    setLayout(new BorderLayout());", "+    _mainPanel.setLayout(new BorderLayout());", "-    add(scroller, BorderLayout.CENTER);", "+    _mainPanel.add(scroller, BorderLayout.CENTER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86a5ff4318c541756220ae5e30a4dcef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlusTest.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testColonNotDelim() throws BadLocationException", "signatureAfterChange": "      public void testColonNotDelim() throws BadLocationException", "diff": ["-    IndentRuleAction rule = new ActionStartPrevStmtPlus(\"\", false);", "+    IndentRuleAction rule = new ActionStartPrevStmtPlus(0, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86a9ea3e79dceba84418b3209847855b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 846, "methodNumberAfterChange": 767, "signatureBeforeChange": "    final private boolean jj_3R_247()", "signatureAfterChange": "    final private boolean jj_3R_247()", "diff": ["-    if (jj_3R_496()) jj_scanpos = xsp;", "+    if (jj_3R_497()) jj_scanpos = xsp;", "-    if (jj_scan_token(84)) jj_scanpos = xsp;", "+    if (jj_scan_token(86)) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86b2cff0d85513ffe3ab5d10e7533516", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "7a9a1a584dbea988e52c91909a30a2d54f580df1", "commitAfterChange": "38289ebc7d35b217d991b224a08e60caae3469a0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         private Iterable<JDKToolsLibrary> findLibraries()", "signatureAfterChange": "         private Iterable<JDKToolsLibrary> findLibraries()", "diff": ["-    JavaVersion runtimeVersion = fromRuntime.version().majorVersion();", "-    if (fromRuntime.isValid() && !results.containsKey(runtimeVersion)) { results.put(runtimeVersion.fullVersion(), fromRuntime); }", "+    JavaVersion.FullVersion runtimeVersion = fromRuntime.version();", "+    if (fromRuntime.isValid() && !results.containsKey(runtimeVersion)) { results.put(runtimeVersion, fromRuntime); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86b59e71a8c80f973bcfb66f370cc916", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "     public abstract ClassType lookupClass(Expression object, String name, Iterable<? extends Type> typeArgs)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "     public abstract ClassType lookupClass(Expression object, String name, Iterable<? extends Type> typeArgs,                                         Access.Module accessModule)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-  public abstract ClassType lookupClass(Expression object, String name, Iterable<? extends Type> typeArgs)", "+  public abstract ClassType lookupClass(Expression object, String name, Iterable<? extends Type> typeArgs,", "+                                        Access.Module accessModule)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86b61eabf4259591f879c3359c7497c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "4ebe3c86a9c7402a414ee21bfa81b87bb3fb5032", "commitAfterChange": "a80c90b8428392cd32bdf80517cd25701896680b", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   protected SymbolData getSymbolData(String className, SourceInfo si, boolean resolve, boolean fromClassFile, boolean addError, boolean checkImportedStuff)", "signatureAfterChange": "   protected SymbolData getSymbolData(String className, SourceInfo si, boolean resolve, boolean fromClassFile,                                       boolean addError, boolean checkImportedStuff)", "diff": ["-   */", "-  protected SymbolData getSymbolData(String className, SourceInfo si, boolean resolve, boolean fromClassFile, boolean addError, boolean checkImportedStuff) {", "+    */", "+  protected SymbolData getSymbolData(String className, SourceInfo si, boolean resolve, boolean fromClassFile, ", "+                                     boolean addError, boolean checkImportedStuff) {", "+    ", "+    _log.log(\"getSymbolData(\" + className + \", \" + si + \", \" + resolve + \", \" + fromClassFile + \", \" + addError +", "+             \", \" + checkImportedStuff);", "+    ", "-    int indexOfNextDollar = className.indexOf(\"$\");  //we don't think this is necessay, but as a safety percausion, check the $ that denotes anonymous inner classes and inner classes", "+    /* we don't think this is necessay, but as a safety percausion, check the $ that denotes anonymous inner classes ", "+     * and inner classes. */", "+    int indexOfNextDollar = className.indexOf(\"$\");  ", "-            SymbolData sd = getSymbolData(className.substring(0, className.length() - 2), si, resolve, fromClassFile, addError, checkImportedStuff);", "+            SymbolData sd = ", "+              getSymbolData(className.substring(0, className.length() - 2), si, resolve, fromClassFile, addError, ", "+                            checkImportedStuff);", "-            _addAndIgnoreError(\"Class \" + innerClassName + ", "-                               \" is not an inner class of the class \" + ", "+            _addAndIgnoreError(\"Class \" + innerClassName + \" is not an inner class of the class \" + ", "-    if (!fromClassFile && addError) {", "+    ", "+    if (! fromClassFile && addError) {", "+      _log.log(\"Returning an Invalid class name for \" + className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86c062e669557410bc85335eb8458491", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r   public void testNodesStarMiddle() throws Exception", "signatureAfterChange": "   public void testNodesStarMiddle() throws Exception", "diff": ["-  }\r", "-  public void testNodesStarMiddle() throws Exception {\r", "-    XMLConfig xc = new XMLConfig(new StringReader(\r", "-                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><foo a=\\\"foo.a\\\">\\n\"\r", "-                                                    + \"  <bar fee=\\\"xxx\\\" fuz=\\\"aaa\\\">abc</bar>\\n\"\r", "-                                                    + \"  <bar fee=\\\"yyy\\\" fuz=\\\"bbb\\\">ghi</bar>\\n\"\r", "-                                                    + \"  <fum fee=\\\"zzz\\\" fuz=\\\"ccc\\\">def</fum>\\n\"\r", "-                                                    + \"</foo>\"));\r", "-    List<String> r = xc.getMultiple(\"foo/*.fee\");\r", "-    assertEquals(3, r.size());\r", "-    assertEquals(\"xxx\", r.get(0));\r", "-    assertEquals(\"yyy\", r.get(1));\r", "-    assertEquals(\"zzz\", r.get(2));\r", "-    \r", "-    r = xc.getMultiple(\"foo/*.*\");\r", "-    assertEquals(6, r.size());\r", "-    assertEquals(\"xxx\", r.get(0));\r", "-    assertEquals(\"aaa\", r.get(1));\r", "-    assertEquals(\"yyy\", r.get(2));\r", "-    assertEquals(\"bbb\", r.get(3));\r", "-    assertEquals(\"zzz\", r.get(4));\r", "-    assertEquals(\"ccc\", r.get(5));\r", "-    \r", "-    xc = new XMLConfig(new StringReader(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><flub>\\n\"\r", "-                                          + \"  <foo/>\\n\"\r", "-                                          + \"  <fee/>\\n\"\r", "-                                          + \"  <fum foz=\\\"abc\\\"/>\"\r", "-                                          + \"</flub>\"));\r", "-    r = xc.getMultiple(\"flub/*\");\r", "-    assertEquals(3, r.size());\r", "-  }\r", "+  }", "+  public void testNodesStarMiddle() throws Exception {", "+    XMLConfig xc = new XMLConfig(new StringReader(", "+                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><foo a=\\\"foo.a\\\">\\n\"", "+                                                    + \"  <bar fee=\\\"xxx\\\" fuz=\\\"aaa\\\">abc</bar>\\n\"", "+                                                    + \"  <bar fee=\\\"yyy\\\" fuz=\\\"bbb\\\">ghi</bar>\\n\"", "+                                                    + \"  <fum fee=\\\"zzz\\\" fuz=\\\"ccc\\\">def</fum>\\n\"", "+                                                    + \"</foo>\"));", "+    List<String> r = xc.getMultiple(\"foo/*.fee\");", "+    assertEquals(3, r.size());", "+    assertEquals(\"xxx\", r.get(0));", "+    assertEquals(\"yyy\", r.get(1));", "+    assertEquals(\"zzz\", r.get(2));", "+    ", "+    r = xc.getMultiple(\"foo/*.*\");", "+    assertEquals(6, r.size());", "+    assertEquals(\"xxx\", r.get(0));", "+    assertEquals(\"aaa\", r.get(1));", "+    assertEquals(\"yyy\", r.get(2));", "+    assertEquals(\"bbb\", r.get(3));", "+    assertEquals(\"zzz\", r.get(4));", "+    assertEquals(\"ccc\", r.get(5));", "+    ", "+    xc = new XMLConfig(new StringReader(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><flub>\\n\"", "+                                          + \"  <foo/>\\n\"", "+                                          + \"  <fee/>\\n\"", "+                                          + \"  <fum foz=\\\"abc\\\"/>\"", "+                                          + \"</flub>\"));", "+    r = xc.getMultiple(\"flub/*\");", "+    assertEquals(3, r.size());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86c99e62914d379c112f9704c9bdd802", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public Object visit(Literal node)", "signatureAfterChange": "   public Class visit(Literal node)", "diff": ["-     */", "-    public Object visit(Literal node) {", "-        // Set the properties of the node ", "-\tClass c = node.getType();", "-        node.setProperty(NodeProperties.VALUE, node.getValue());", "-        node.setProperty(NodeProperties.TYPE, c);", "-        return c;", "-    }", "+   */", "+  public Class visit(Literal node) {", "+    // Set the properties of the node ", "+    Class c = node.getType();", "+    node.setProperty(NodeProperties.VALUE, node.getValue());", "+    node.setProperty(NodeProperties.TYPE, c);", "+    return c;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86f8dda07d0572d52635e27722ac1d88", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 512, "methodNumberAfterChange": 503, "signatureBeforeChange": "    final private boolean jj_3R_256()", "signatureAfterChange": "    final private boolean jj_3R_266()", "diff": ["-", "-  final private boolean jj_3R_256() {", "-    if (jj_scan_token(RIGHT_SIGNED_SHIFT_ASSIGN)) return true;", "-    if (jj_3R_94()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_266() {", "+    if (jj_scan_token(RIGHT_SIGNED_SHIFT_ASSIGN)) return true;", "+    if (jj_3R_97()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8709a6aa322b6fffff8c115138e438bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 693, "methodNumberAfterChange": 675, "signatureBeforeChange": "    final private boolean jj_3R_308()", "signatureAfterChange": "    final private boolean jj_3R_269()", "diff": ["+", "+  final private boolean jj_3R_269() {", "+    if (jj_scan_token(SYNCHRONIZED)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_116()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_167()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_308() {", "-    if (jj_scan_token(SYNCHRONIZED)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_115()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_178()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "872a5ced543fdaa125fe42af3f050671", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/BooleanOptionTest.java", "commitBeforeChange": "ab56c47a9f6c097d16c8c38565dec5edb6fb4d6f", "commitAfterChange": "0d80b47fa71022c1d579ad193bcaa14dd927885e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testParse()", "signatureAfterChange": "      public void testParse()", "diff": ["-    BooleanOption bo = new BooleanOption(\"enable JUnit\");", "+    BooleanOption bo = new BooleanOption(\"enable JUnit\",null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87598ea0f16e2c351d88630730803b81", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/Options.java", "commitBeforeChange": "ce42478b992adc6ef5f56e78e788484f10488ff4", "commitAfterChange": "a6ad77fef884f528ddfb31a18f08f168fcd5e3f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public TypeSystem typeSystem()", "signatureAfterChange": "   public TypeSystem typeSystem()", "diff": ["-  public TypeSystem typeSystem() { return ExtendedTypeSystem.INSTANCE; }", "+  public TypeSystem typeSystem() { return _ts; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "876efc53f325b40f9248ccc0c9d4713f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "6bdcaa1031d63e5f58edf8d0e2313eac60ac2bdc", "commitAfterChange": "c6ab4cad3515b44035f93fe56438ef0ad4e6d24d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testNone()", "signatureAfterChange": "   public void testNone()", "diff": ["+    DrJava.openCommandLineFiles(_mf, new String[0]);", "+    // ListModel<DefinitionsDocument> docs =", "+    // Wouldn't that be nice?", "-//    Logger.log(\"testNone complete\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8777af5852956684ac2ece25d650cca7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public Object visit(ObjectFieldAccess node)", "signatureAfterChange": "   public Class visit(ObjectFieldAccess node)", "diff": ["-     */", "-    public Object visit(ObjectFieldAccess node) {", "-        // Visit the expression", "-        Class c = (Class)node.getExpression().acceptVisitor(this);", "-\t", "-        // Load the field object", "-        if (!c.isArray()) {", "-            Field f = null;", "-            try {", "-                f = context.getField(c, node.getFieldName());", "-            } catch (Exception e) {", "-                throw new CatchedExceptionError(e, node);", "-            }", "-", "-\t    // Set the node properties", "-\t    node.setProperty(NodeProperties.FIELD, f);", "-\t    node.setProperty(NodeProperties.TYPE,  c = f.getType());", "-", "-\t    node.setProperty(NodeProperties.MODIFIER, context.getModifier(node));", "-\t    return c;", "-\t} else {", "-            if (!node.getFieldName().equals(\"length\")) {", "-\t\tString s0 = \"length\";", "-\t\tString s1 = c.getComponentType().getName() + \" array\";", "-\t\tnode.setProperty(NodeProperties.ERROR_STRINGS, new String[] { s0, s1 });", "-                throw new ExecutionError(\"no.such.field\", node);", "-            }", "-            node.setProperty(NodeProperties.TYPE,  int.class);", "-            node.setProperty(NodeProperties.MODIFIER, new InvalidModifier(node));", "-\t    return int.class;", "-\t}", "-    }", "+   */", "+  public Class visit(ObjectFieldAccess node) {", "+    // Visit the expression", "+    Class c = (Class)node.getExpression().acceptVisitor(this);", "+    ", "+    // Load the field object", "+    if (!c.isArray()) {", "+      Field f = null;", "+      try {", "+        f = context.getField(c, node.getFieldName());", "+      } catch (Exception e) {", "+        throw new CatchedExceptionError(e, node);", "+      }", "+      ", "+      // Set the node properties", "+      node.setProperty(NodeProperties.FIELD, f);", "+      node.setProperty(NodeProperties.TYPE,  c = f.getType());", "+      ", "+      node.setProperty(NodeProperties.MODIFIER, context.getModifier(node));", "+      return c;", "+    } else {", "+      if (!node.getFieldName().equals(\"length\")) {", "+        String s0 = \"length\";", "+        String s1 = c.getComponentType().getName() + \" array\";", "+        node.setProperty(NodeProperties.ERROR_STRINGS, new String[] { s0, s1 });", "+        throw new ExecutionError(\"no.such.field\", node);", "+      }", "+      node.setProperty(NodeProperties.TYPE,  int.class);", "+      node.setProperty(NodeProperties.MODIFIER, new InvalidModifier(node));", "+      return int.class;", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8783a7097f114e18c111fbccd85fca19", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 53, "signatureBeforeChange": "     public void debuggerShutdown()", "signatureAfterChange": "     public void debuggerShutdown()", "diff": ["-        _notifyObject(_notifierLock);", "+        _notifyLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8788f1f7193a9b41321d5cc353dd187c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "commitAfterChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public synchronized void resume()", "signatureAfterChange": "   public synchronized void resume() throws DebugException", "diff": ["-  public synchronized void resume() {", "+  public synchronized void resume() throws DebugException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "878cc3a1b3ef434bd9f3de3164f10bf8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-hj/edu/rice/cs/drjava/model/compiler/HjCompiler.java", "commitBeforeChange": "a0fae01c3fc47347d8f40022743d4545d81cb1cb", "commitAfterChange": "7f27d4def62ff1bda42279f1d632d1636f2811d4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Set<String> getSourceFileExtensions()", "signatureAfterChange": "   public Set<String> getSourceFileExtensions()", "diff": ["-    extensions.add(HJ_FILE_EXTENSION);", "+    extensions.add(getSuggestedFileExtension());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87aaf965d53b2437a0ad68ec8666966c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 684, "methodNumberAfterChange": 690, "signatureBeforeChange": "    final private boolean jj_3R_465()", "signatureAfterChange": "    final private boolean jj_3R_466()", "diff": ["-  final private boolean jj_3R_465() {", "-    if (jj_scan_token(ASSIGN)) return true;", "-    if (jj_3R_90()) return true;", "+  final private boolean jj_3R_466() {", "+    if (jj_3R_91()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87c282ba596f1265589871882ab7d4f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "          public void testForVariableDeclarationOnly()", "signatureAfterChange": "          public void testForVariableDeclarationOnly()", "diff": ["+      if (errors.size() > 0) System.err.println(\"Error was:\" + errors.get(0).getFirst());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87c4e0fcfa1e880c5bb595d8a93b905c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 614, "methodNumberAfterChange": 683, "signatureBeforeChange": "    final private boolean jj_3R_417()", "signatureAfterChange": "    final private boolean jj_3R_419()", "diff": ["-", "-  final private boolean jj_3R_417() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-      if (jj_3R_432()) { jj_scanpos = xsp; break; }", "-    xsp = jj_scanpos;", "-    if (jj_3R_433()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_419() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_434()) { jj_scanpos = xsp; break; }", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_3R_435()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87cf9dc7c0879551062baf4bb4ec60b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 409, "methodNumberAfterChange": 355, "signatureBeforeChange": "    final private boolean jj_3R_280()", "signatureAfterChange": "    final private boolean jj_3R_282()", "diff": ["-  final private boolean jj_3R_280() {", "-    if (jj_3R_296()) return true;", "+  final private boolean jj_3R_282() {", "+    if (jj_3R_298()) return true;", "-      if (jj_3R_314()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_316()) { jj_scanpos = xsp; break; }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87d0251cc4dbc464fc71836659ccc5f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 23, "signatureBeforeChange": "          public String toString()", "signatureAfterChange": "          public String toString()", "diff": ["-    ", "-    public String toString() { return \"Manager for: \" + _doc; } ", "+    public String toString() { return _filename; } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87dac7c7cb4adc90a20af4bd9c56a81d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 206, "methodNumberAfterChange": 207, "signatureBeforeChange": "   private void _close()", "signatureAfterChange": "   private void _close()", "diff": ["+      _model.setProjectChanged(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87dd5643868e6818063cdfa03e61027e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/DelayedInterrupter.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void abort()", "signatureAfterChange": "   public void abort()", "diff": ["-    _interrupter.interrupt();", "+    _task.cancel();", "+    TIMER.value().purge();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87e2d80105a9e1c5ea9c6dbe578a767b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "335e15356f81cc767efd4886353e6890e8c905fa", "commitAfterChange": "8ccb5b5787c23c1ec149415240d859632e14b0eb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "signatureAfterChange": "   public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "diff": ["-      \"   (file (name \\\"sexp\\\"))\\n\" +", "-      \"   (file (name \\\"[External]\\\")))\\n\" +", "+      \"   (path \\\"./[ Source Files ]/sexp/\\\")\\n\" +", "+      \"   (path \\\"./[ External ]/\\\"))\\n\" +", "-    assertEquals(\"last collapsed path\", \"[External]\", pfir.getCollapsedPaths()[1].getPath());", "+    assertEquals(\"last collapsed path\", \"./[ External ]/\", pfir.getCollapsedPaths()[1]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87e70fd9c5d3a1d999eb1d2221d977f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 660, "methodNumberAfterChange": 644, "signatureBeforeChange": "    final private boolean jj_3R_130()", "signatureAfterChange": "    final private boolean jj_3R_134()", "diff": ["-  final private boolean jj_3R_130() {", "-    if (jj_3R_95()) return true;", "+", "+  final private boolean jj_3R_134() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_98()) return true;", "-    if (jj_3R_178()) return true;", "+    if (jj_3R_183()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87efe7946b45475e2476513aad7b8f94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "791fd5c3da235c904ec8d063d9af32ea0cdcd48d", "commitAfterChange": "1fc28e4ffd44f1f2d7b1d062fbdf9f18f80ec19a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void performCommand(String command)", "signatureAfterChange": "   public void performCommand(String command)", "diff": ["-//js    Manager manager = _session.getManager(CommandManager.class);", "-//js    ((CommandManager)manager).handleInput(command);", "+    Manager manager = _session.getManager(CommandManager.class);", "+    ((CommandManager)manager).handleInput(command);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f8cc872fdaaf1a6137963026c42124", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 369, "methodNumberAfterChange": 372, "signatureBeforeChange": "    final private boolean jj_3R_248()", "signatureAfterChange": "    final private boolean jj_3R_249()", "diff": ["-  final private boolean jj_3R_248() {", "+  final private boolean jj_3R_249() {", "-    if (jj_3R_105()) return true;", "+    if (jj_3R_106()) return true;", "-    if (jj_3R_158()) return true;", "+    if (jj_3R_159()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8806b659cdd89a989720b4cb1a02452b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "1333ad40debe120f6d8fd5fb5ff36c57ce6b1ccf", "commitAfterChange": "3907c0e8430f2d380a191d1ad8364cbfdd1d1b28", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testEnded(String testName, boolean wasSuccessful, boolean causedError)", "signatureAfterChange": "   public void testEnded(String testName, boolean wasSuccessful, boolean causedError)", "diff": ["+      _log.log(re.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "881321260bb27b310cb69aa7e1ef9696", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "936df97bedea66175f36cae49ba74b17abf11e8a", "commitAfterChange": "d43c6d20ec903cbbb4ee5291a112b3b3ae570823", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": "   public void configNewProject() throws IOException", "signatureAfterChange": "   public void configNewProject() throws IOException", "diff": ["-", "-    OpenDefinitionsDocument[] docs;", "-    ", "-    synchronized(_documentsRepos) { docs = _documentsRepos.toArray(new OpenDefinitionsDocument[0]); }", "-    for (OpenDefinitionsDocument doc: docs) {", "+    for (OpenDefinitionsDocument doc: getOpenDefinitionsDocuments()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88166da7a4ee934b6ac85974652369ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "commitAfterChange": "35da9b77b7d75aca3d6277e27e3ba3dc86f3eaa9", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public int getIntelligentBeginLinePos(int currPos) throws BadLocationException", "signatureAfterChange": "   public int getIntelligentBeginLinePos(int currPos) throws BadLocationException", "diff": ["-    int firstChar = getLineStartPos(currPos);", "-    String prefix = getText(firstChar, currPos-firstChar);", "+", "+    String prefix;", "+    int firstChar;", "+    readLock();", "+    try {", "+      firstChar = getLineStartPos(currPos);", "+      prefix = getText(firstChar, currPos-firstChar);", "+    }", "+    finally { readUnlock(); }", "-    boolean found = false;", "-    for (i = 0; i < prefix.length() && !found; i++ ) {", "-      found = !Character.isWhitespace(prefix.charAt(i));", "-    }", "-    ", "+    int len = prefix.length();", "+   ", "+    for (i = 0; i < len; i++ ) { if (! Character.isWhitespace(prefix.charAt(i))) break; }", "+", "-    if (found) {", "-      i--;  // want the position just before the non-WS char", "+    if (i < len) {", "-      if (firstRealChar < currPos)  return firstRealChar;", "+      if (firstRealChar < currPos) return firstRealChar;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8826e1dbbdb0e3233d363bb293d3a696", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "d8dc2cdeba22db2fb0316de83a445bb83f56ae4d", "commitAfterChange": "fecb09777cd63cca239611fe19e85d2f0e8401e9", "methodNumberBeforeChange": 446, "methodNumberAfterChange": 424, "signatureBeforeChange": "    final private boolean jj_3R_581()", "signatureAfterChange": "    final private boolean jj_3R_577()", "diff": ["+", "+  final private boolean jj_3R_577() {", "+    Token xsp;", "+    if (jj_3R_584()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_584()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_3R_194()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_581() {", "-    Token xsp;", "-    if (jj_3R_588()) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_588()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_3R_194()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8827a8b7f702307b1ba7dc267802dfc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": "     protected DefinitionsDocument getDocument()", "signatureAfterChange": "     protected DefinitionsDocument getDocument()", "diff": ["-          try {", "-            Utilities.invokeAndWait(new Runnable() {", "-              public void run() { _documentNavigator.refreshDocument(ConcreteOpenDefDoc.this, path); }", "-            });", "-            return _cacheAdapter.getDocument(); ", "-          }", "-          catch(InterruptedException e) { throw new UnexpectedException(e); }", "+          Utilities.invokeAndWait(new Runnable() {", "+            public void run() { _documentNavigator.refreshDocument(ConcreteOpenDefDoc.this, path); }", "+          });", "+          return _cacheAdapter.getDocument(); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "883e134415865b882b5212eb024a925a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/HighlightManager.java", "commitBeforeChange": "c700f0baf9132c8d6ae724f82bf91ce8e4038f2f", "commitAfterChange": "da0a29e11c230fab76957a17e5a2991c9ab7978b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public HighlightInfo addHighlight(int startOffset, int endOffset, Highlighter.HighlightPainter p)", "signatureAfterChange": "     public HighlightInfo addHighlight(int startOffset, int endOffset, Highlighter.HighlightPainter p)", "diff": ["-      Stack<HighlightInfo> lineStack = _getStackAt(startOffset, endOffset);", "+      Stack<HighlightInfo> lineStack = _getStackAt(newLite);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "885789ee22a458f9cd99b49e4d9d799a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 268, "methodNumberAfterChange": 497, "signatureBeforeChange": "    final private boolean jj_3R_446()", "signatureAfterChange": "    final private boolean jj_3R_481()", "diff": ["-", "-  final private boolean jj_3R_446() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_462()) {", "-    if (jj_3R_463()) return true;", "+", "+  final private boolean jj_3R_481() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_485()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_486()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8859e5d7f1347a666ef8a44f773519de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "91038e12b29fc11caf546f667c73f75547bb1d1a", "commitAfterChange": "6e0e8e9a8a01e14b3e7edd822e686fec0ae8e6ce", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void tearDown() throws Exception", "signatureAfterChange": "   public void tearDown() throws Exception", "diff": ["+    // We have disposed of the model, remove all interaction listeners to ensure", "+    // we do not get any late notifications from the interpreter JVM.", "+    // This fixes the \"MainJVM is disposed\" errors.", "+    _model.getInteractionsModel().removeAllInteractionListeners();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "886d2168b4371e15487a81bd8192ba1c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/LongLiteral.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public LongLiteral(String rep, SourceInfo si)", "signatureAfterChange": "   public LongLiteral(String rep, SourceInfo si) throws NumberFormatException", "diff": ["-  public LongLiteral(String rep, SourceInfo si) {", "+  public LongLiteral(String rep, SourceInfo si) throws NumberFormatException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "886ef876ce26f2ce972b674c777c9871", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 738, "methodNumberAfterChange": 660, "signatureBeforeChange": "    final private boolean jj_3R_523()", "signatureAfterChange": "    final private boolean jj_3R_548()", "diff": ["-", "-  final private boolean jj_3R_523() {", "-    if (jj_3R_120()) return true;", "-    if (jj_3R_414()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_548() {", "+    if (jj_3R_123()) return true;", "+    if (jj_3R_421()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "887ec567ca214d9a55989504f9d37baf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 350, "methodNumberAfterChange": 350, "signatureBeforeChange": "    final private boolean jj_3R_323()", "signatureAfterChange": "    final private boolean jj_3R_327()", "diff": ["-  final private boolean jj_3R_323() {", "-    if (jj_scan_token(SYNCHRONIZED)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_105()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_155()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_327() {", "+    if (jj_scan_token(SYNCHRONIZED)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_107()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_158()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8880693349f2f0d023efb982e16f7d8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4dc5ace86e9b2c575f2b09ebb783f4d8d9db5e9a", "commitAfterChange": "798fcd5fdec1efc6698cb1c49cd62bdab41daffc", "methodNumberBeforeChange": 768, "methodNumberAfterChange": 747, "signatureBeforeChange": "    final private boolean jj_3R_89()", "signatureAfterChange": "    final private boolean jj_3R_90()", "diff": ["-", "-  final private boolean jj_3R_89() {", "-    if (jj_3R_138()) return true;", "-      if (jj_3_28()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_90() {", "+    if (jj_3R_139()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_29()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88a0cbf09e3687abc67a66b835363048", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Object visit(DoStatement node)", "signatureAfterChange": "   public Class visit(DoStatement node)", "diff": ["+   */", "+  public Class visit(DoStatement node) {", "+    node.getBody().acceptVisitor(this);", "+    ", "+    // Check the condition", "+    if (node.getCondition().acceptVisitor(this) != boolean.class) {", "+      throw new ExecutionError(\"condition.type\", node);", "+    }", "+    return null;", "+  }", "-     */", "-    public Object visit(DoStatement node) {", "-        node.getBody().acceptVisitor(this);", "-", "-        // Check the condition", "-        if (node.getCondition().acceptVisitor(this) != boolean.class) {", "-            throw new ExecutionError(\"condition.type\", node);", "-        }", "-        return null;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88a83e2d4798c4b8d87baf74c2231ca3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 593, "methodNumberAfterChange": 670, "signatureBeforeChange": "    final private boolean jj_3R_381()", "signatureAfterChange": "    final private boolean jj_3R_81()", "diff": ["-", "-  final private boolean jj_3R_381() {", "-    if (jj_scan_token(EXTENDS)) return true;", "-    if (jj_3R_107()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_81() {", "+    if (jj_3R_109()) return true;", "+    if (jj_scan_token(INTERFACE)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88aa2ef2141076a9bddbe04303ab4ddf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "520c98c03a1e651efb4dfbf7d7f2a55510c74658", "commitAfterChange": "3f953b8fb783fe3ca1b336468898f35cd9cde7db", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testIfThenElseStatement() throws ExceptionReturnedException", "signatureAfterChange": "   public void testIfThenElseStatement() throws ExceptionReturnedException", "diff": ["-    _interpreter.interpret(\"Boolean B = Boolean.TRUE;\" + text);", "+    _interpreter.interpret(text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88ccaa16b8c0a53da11910c1abec7f50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "28c4be6b04d5867405916840b451c47e4acad060", "commitAfterChange": "db16e322f21576ce25b97ab99611f7c7362cef3e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t\tpublic Iterator()", "signatureAfterChange": " \t\tpublic Iterator()", "diff": ["-\t\t\t\tModelList.this._listeners.add(this);", "+\t\t\t\tModelList.this.addListener(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88fdf00f6760f0862a0991d8f71921c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   private void createPopupMenu()", "signatureAfterChange": "   private void createPopupMenu()", "diff": ["-        _mainFrame.simpleHourglassOn();", "+        _mainFrame.hourglassOn();", "-        finally{ _mainFrame.simpleHourglassOff(); }", "+        finally{ _mainFrame.hourglassOff(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8916665cf3ed394c624c069c9e0f1d55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "1cda89f41e5a82d37339ff20e08702987c32bbfc", "commitAfterChange": "3b86afe47e23692474e8facf6c83b275a516f91e", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 65, "signatureBeforeChange": "   public void setThreadDependentButtons(boolean isSuspended)", "signatureAfterChange": "   public void setThreadDependentButtons(boolean isSuspended)", "diff": ["+    _automaticTraceButton.setEnabled(isSuspended);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "892d09ddaeb15b7062c47e3d7f6f4bf1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testDebugSourcepath() throws Exception", "signatureAfterChange": "   public void testDebugSourcepath() throws Exception", "diff": ["-    if (printMessages) System.out.println(\"----testDebugSourcePath----\");", "+    if (printMessages) printStream.println(\"----testDebugSourcePath----\");", "-    _debugger.toggleBreakpoint(doc,DEBUG_CLASS.indexOf(\"bar();\"),4);", "+    _debugger.toggleBreakpoint(doc,DEBUG_CLASS.indexOf(\"bar();\"),4,true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "893d038cec1c39c13597212949dfe71e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public synchronized void suspend(DebugThreadData threadData)", "signatureAfterChange": "   public synchronized void suspend(DebugThreadData threadData) throws DebugException", "diff": ["-  public synchronized void suspend(DebugThreadData threadData) {", "+  public synchronized void suspend(DebugThreadData threadData) throws DebugException{"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "894c6429192d85669498046b04c68233", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugAction.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DebugAction (JPDADebugger manager)     throws DebugException, IllegalStateException", "signatureAfterChange": "   public DebugAction(JPDADebugger manager)", "diff": ["-  public DebugAction (JPDADebugger manager)", "-    throws DebugException, IllegalStateException {", "+  public DebugAction(JPDADebugger manager) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89656e678e95dcfa8b050a0b4427512b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 469, "methodNumberAfterChange": 660, "signatureBeforeChange": "    final private boolean jj_3R_250()", "signatureAfterChange": "    final private boolean jj_3R_215()", "diff": ["-", "-  final private boolean jj_3R_250() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_50()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_294()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_215() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_41()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_242()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "898a09e683b48107dc5edc1cdab4dd7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 520, "methodNumberAfterChange": 519, "signatureBeforeChange": "    final private boolean jj_3R_252()", "signatureAfterChange": "    final private boolean jj_3R_262()", "diff": ["-  final private boolean jj_3R_252() {", "-    if (jj_scan_token(REMAINDER_ASSIGN)) return true;", "-    if (jj_3R_94()) return true;", "+  final private boolean jj_3R_262() {", "+    if (jj_scan_token(REMAINDER_ASSIGN)) return true;", "+    if (jj_3R_97()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "898ea82c5a3bfdcda01323afff5da5dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "ed1ea134c7261acf3843494210d96fbd7bd01666", "commitAfterChange": "3b895d570aa118c72b953464a0bcdde40bd40ffd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testResetConsole()     throws BadLocationException, InterruptedException", "signatureAfterChange": "   public void testResetConsole()     throws BadLocationException, InterruptedException", "diff": ["-    for (i = 0; i < 10; i++) {", "+    for (i = 0; i < 50; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "899a3534298ec945f01dee0f741a254a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6207c0d4b83ee23d6d4624c513f270e47c43cc83", "commitAfterChange": "f4c8eb851d98f4da2479f32fb767dac4b3a40e1c", "methodNumberBeforeChange": 493, "methodNumberAfterChange": 464, "signatureBeforeChange": "      void _saveProjectHelper(File file)", "signatureAfterChange": "      void _saveProjectHelper(File file)", "diff": ["-        file = MainFrameUtils.proposeToChangeExtension(MainFrame.this, file,", "-                                                       \"Change Extension?\",", "-                                                       \"The project will be saved in XML format.\"", "-                                                         + \"\\nDo you want to change the project file's extension to \\\"\"", "-                                                         + PROJECT_FILE_EXTENSION+ \"\\\"?\",", "-                                                       \"Change to \\\"\" + PROJECT_FILE_EXTENSION + \"\\\"\",", "-                                                       \"Keep \\\"\" + DrJavaFileUtils.getExtension(fileName) + \"\\\"\",", "-                                                       PROJECT_FILE_EXTENSION);", "+        file = proposeToChangeExtension(MainFrame.this, file,", "+                                        \"Change Extension?\",", "+                                        \"The project will be saved in XML format.\"", "+                                          + \"\\nDo you want to change the project file's extension to \\\"\"", "+                                          + PROJECT_FILE_EXTENSION+ \"\\\"?\",", "+                                        \"Change to \\\"\" + PROJECT_FILE_EXTENSION + \"\\\"\",", "+                                        \"Keep \\\"\" + DrJavaFileUtils.getExtension(fileName) + \"\\\"\",", "+                                        PROJECT_FILE_EXTENSION);", "-    catch(IOException ioe) { MainFrameUtils.showIOError(MainFrame.this, ioe); }", "+    catch(IOException ioe) { MainFrameStatics.showIOError(MainFrame.this, ioe); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89a26298a288cb411b3f40246cb9de2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "42453ef03053968f9ca85cc1f502a43bd9378c76", "commitAfterChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public DynamicJavaAdapter()", "signatureAfterChange": "    public DynamicJavaAdapter()", "diff": ["-    _djInterpreter.setAccessible(true);", "+    //_djInterpreter.setAccessible(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89a943c772bcb8f9a866aec43aaece81", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 409, "methodNumberAfterChange": 697, "signatureBeforeChange": "    final private boolean jj_3R_312()", "signatureAfterChange": "    final private boolean jj_3R_250()", "diff": ["-", "-  final private boolean jj_3R_312() {", "-    if (jj_scan_token(BITWISE_OR)) return true;", "-    if (jj_3R_284()) return true;", "+    if (jj_3R_287()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89b4224b47ae16cb8ad419399a043be1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 756, "methodNumberAfterChange": 761, "signatureBeforeChange": "    final private boolean jj_3R_84()", "signatureAfterChange": "    final private boolean jj_3R_85()", "diff": ["-  final private boolean jj_3R_84() {", "-    if (jj_3R_111()) return true;", "+  final private boolean jj_3R_85() {", "+    if (jj_3R_112()) return true;", "-    if (jj_3R_126()) jj_scanpos = xsp;", "+    if (jj_3R_127()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89b8e9b459965a03f9756705d705905d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testInteractionAbort()     throws BadLocationException, InterruptedException, IOException", "signatureAfterChange": "   public void testInteractionAbort()     throws BadLocationException, DocumentAdapterException,      InterruptedException, IOException", "diff": ["-    throws BadLocationException, InterruptedException, IOException", "+    throws BadLocationException, DocumentAdapterException, ", "+    InterruptedException, IOException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89be6331758e0a1ace4d29a15e142b9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "c2cccf3d2cd557fff7d01a0111e1dc7df943b427", "commitAfterChange": "64292becb14dc44418f35810edeb4a6d2191c842", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public int getSelectionCount()", "signatureAfterChange": "   public int getSelectionCount()", "diff": ["-  /** @return the number of selected items. Always 1 for JListSortNavigator */", "-  public int getSelectionCount() { return 1; }", "+  /** @return the number of selected items. */", "+  public int getSelectionCount() { return getSelectedIndices().length; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c006bb26520be58d62a0d097919224", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "c46b51159c995a9970485b3c515f743b3910e9fc", "commitAfterChange": "20a2512e394be5865ddd8dc1ebd648c5dfb08d0c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public OpenDefinitionsDocument newFile()", "signatureAfterChange": "   public OpenDefinitionsDocument newFile()", "diff": ["-    _notifier.notifyListeners(new NewFileNotifier(doc));", "+    _notifier.newFileCreated(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c5fa3b1a78d37d65313c1af9298316", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "commitAfterChange": "462c4a613a015a2dbcac948815ea1318bb028f22", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "    public void appendSyntaxErrorResult(String message, int startRow, int startCol,                                       int endRow, int endCol, String styleName)", "signatureAfterChange": "    public void appendSyntaxErrorResult(String message, String interaction, int startRow, int startCol,                                       int endRow, int endCol, String styleName)", "diff": ["-  public void appendSyntaxErrorResult(String message, int startRow, int startCol,", "+  public void appendSyntaxErrorResult(String message, String interaction, int startRow, int startCol,", "+      ", "+      if(message.indexOf(\"Lexical error\") != -1) {", "+        int i = message.lastIndexOf(':');", "+        if(i != -1)", "+          message = \"Syntax Error:\" + message.substring(i+2,message.length());                                ", "+      }", "+      ", "+      if(message.indexOf(\"Error\") == -1) ", "+        message = \"Error: \" + message;", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89ccc59977d074f4c8c2869c06b6c766", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ExternallySortedMultiMap.java", "commitBeforeChange": "6d6fa98f193d16ab3db62dbad1beca43c6bd6363", "commitAfterChange": "8899499d3b5cb3ea80f26187b2a2a457f05dfbc2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public boolean putAll(ExternallySortedMultiMap<? extends K, ? extends V, ? extends C> map)", "signatureAfterChange": "   public boolean putAll(ExternallySortedMultiMap<? extends K, ? extends V, ? extends C> map)", "diff": ["-      // capture: e is Map.Entry<k, s>; getValue() is s", "-      K k = e.getKey();", "-      // The following generates an apparently incorrect type error:", "+      // The following generates an incorrect type error (javac 5, fixed in javac 6):", "-", "-      // So does this:", "-      //ExternallySortedSet<? extends V, ? extends C> s = e.getValue();", "-      //result = result | set.addAll(s); // \"|\" instead of \"||\" to avoid short-circuit", "-      ", "-      ExternallySortedSet s = e.getValue();", "+      @SuppressWarnings(\"unchecked\") ExternallySortedSet s = e.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89d7a81e48786505ec488a98f74b0188", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "de413eda4232899a577fad80816630301e25a4de", "commitAfterChange": "1510cae783655f3e20fbad13671dbf97008c3ec2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected void updatePanel()", "signatureAfterChange": "   protected void updatePanel()", "diff": ["-    _regTreeModel.reload();", "-    expandTree();", "+//    _regTreeModel.reload();", "+    revalidate();", "+    repaint();", "+//    expandTree();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89eb4053526d9dbd689c6acd8ea6d7be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 361, "methodNumberAfterChange": 353, "signatureBeforeChange": "    final private boolean jj_3R_275()", "signatureAfterChange": "    final private boolean jj_3R_279()", "diff": ["-", "-  final private boolean jj_3R_275() {", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_344()) jj_scanpos = xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_345()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_279() {", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_349()) jj_scanpos = xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_350()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89fc468c8e34628b64cbfd1e7589b81c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void compileAll() throws IOException", "signatureAfterChange": "   public void compileAll() throws IOException", "diff": ["-    if (_prepareForCompile()) {", "-      _doCompile(_model.getOpenDefinitionsDocuments());", "-    }", "+    if (_prepareForCompile()) { _doCompile(_model.getOpenDefinitionsDocuments()); }", "+    else _notifier.compileAborted(new UnexpectedException(\"Some modified open files are unsaved\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a15309f6c83c2a81119c61025967cce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 388, "methodNumberAfterChange": 371, "signatureBeforeChange": "    final private boolean jj_3R_322()", "signatureAfterChange": "    final private boolean jj_3R_325()", "diff": ["-  final private boolean jj_3R_322() {", "-    if (jj_3R_341()) return true;", "+  final private boolean jj_3R_325() {", "+    if (jj_3R_344()) return true;", "-      if (jj_3R_355()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_358()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a25d1a7faa31cb78383b84654460c7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 598, "methodNumberAfterChange": 601, "signatureBeforeChange": "    final private boolean jj_3R_376()", "signatureAfterChange": "    final private boolean jj_3R_377()", "diff": ["-", "-  final private boolean jj_3R_376() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_379()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_380()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_377() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_380()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_381()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a2bcb82089f3e06277fedc1ca49324a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 52, "signatureBeforeChange": "     public void breakpointRemoved(Breakpoint bp)", "signatureAfterChange": "     public void breakpointRemoved(Breakpoint bp)", "diff": ["-      if (printEvents) System.out.println(\"breakpointRemoved \" + breakpointRemovedCount);", "+      if (printEvents) printStream.println(\"breakpointRemoved \" + breakpointRemovedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a3d2f49d5a884f9a6e7b907d686aad5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPane.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public InteractionsPane(GlobalModel model)", "signatureAfterChange": "    public InteractionsPane(GlobalModel model)", "diff": ["-   */", "-    setLineWrap(true);", "-    setWrapStyleWord(true);", "-    _model.resetInteractions();", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a67adc0906702514e366d45f067e736", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 515, "methodNumberAfterChange": 296, "signatureBeforeChange": "    final private boolean jj_3R_104()", "signatureAfterChange": "    final private boolean jj_3R_111()", "diff": ["+  final private boolean jj_3R_111() {", "+    if (jj_3R_172()) {", "+    if (jj_3R_173()) return true;", "-    if (jj_3R_161()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a9d5574a238744216d85788513b3fb7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "e9bec3010b901922047e6fa4b0f822c7679ebb75", "commitAfterChange": "1069ae55040630a013af2fb4848a0ed7a054566d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "signatureAfterChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "diff": ["-    System.out.println(\"Untitled file is named: \" + untitled.getName());", "+//    System.out.println(\"Untitled file is named: \" + untitled.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aa29879af344ae48a48751248109145", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public Class visit(SwitchStatement node)", "signatureAfterChange": "   public Class visit(SwitchStatement node)", "diff": ["-    Class c = (Class)node.getSelector().acceptVisitor(this);", "+    Class c = node.getSelector().acceptVisitor(this);", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ab7889c86b89b64d24e7d0b56fd5711", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 28, "signatureBeforeChange": "              public Void forException(String msg)", "signatureAfterChange": "              public Void forException(String msg)", "diff": ["-        exceptionMsgBuf = msg;", "+        debug.log();", "+        _exceptionMsgBuf = msg;", "+        _done.signal();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ab879de68b810473a88fd62e11db5f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsView.java", "commitBeforeChange": "e7812efd9f0ea9fd7f568ab9b267e30ff5e61cca", "commitAfterChange": "de8c1f4e7df585e05a2e0cd69ddbb07d6d45c773", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \t\tpublic boolean findText (String fWord)", "signatureAfterChange": "  \t\tpublic boolean findText (String fWord)", "diff": ["-\t\t\t\tSystem.out.println(\"find \" + fWord);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aba148e0a6c3d5acdf23428aa6cd7db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/JSR14v12FromSetLocation.java", "commitBeforeChange": "f17292abd95ea16429a4af0b9a7c5f4c918cbe33", "commitAfterChange": "ab0ded3db9141ff4121c607c60b106535592b093", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static ClassLoader _getClassLoader()", "signatureAfterChange": "      private static ClassLoader _getClassLoader()", "diff": ["-      return new URLClassLoader(new URL[] { url });", "+      // Create a URLClassLoader with a null parent so it only looks", "+      // in the URL for classes.", "+      return new URLClassLoader(new URL[] { url }, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ac100ee5d19dc94e8e25061ed8aed30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/NameVisitorExtension.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Object visit(VariableDeclaration node)", "signatureAfterChange": "   public Node visit(VariableDeclaration node)", "diff": ["-  public Object visit(VariableDeclaration node) {  ", "+  public Node visit(VariableDeclaration node) {  ", "-      Object o = n.acceptVisitor(this);", "+      Node o = n.acceptVisitor(this);", "-        if (o instanceof ReferenceType) {", "-          throw new ExecutionError(\"malformed.expression\", n);", "-        }", "+        rejectReferenceType(o,n);", "-    Class lc = (Class)node.getType().acceptVisitor(_tc);", "+    Class lc = node.getType().acceptVisitor(_tc);", "-      Class rc = (Class)init.acceptVisitor(_tc);", "+      Class rc = init.acceptVisitor(_tc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ac11c3563b59e03c6818d6bf098c917", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 821, "methodNumberAfterChange": 703, "signatureBeforeChange": "    final private boolean jj_3R_112()", "signatureAfterChange": "    final private boolean jj_3R_117()", "diff": ["-", "-  final private boolean jj_3R_112() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(53)) jj_scanpos = xsp;", "-    if (jj_3R_167()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_117() {", "+    if (jj_3R_159()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_160()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ad6882a56be498e0b4b0cb24294bd38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "1551840e0590a4d224d98cf5aeb081d54054aafb", "commitAfterChange": "fe644290d76f63ed4693cfbe935eaacd56666243", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     void switchToError(CompilerError error)", "signatureAfterChange": "     void switchToError(CompilerError error)", "diff": ["-      getErrorListPane().selectItem(error);", "-      ", "-      if (error.file() == null || error.hasNoLocation())  return;", "-      try {", "-        OpenDefinitionsDocument doc = getModel().getDocumentForFile(error.file());", "-        CompilerErrorModel errorModel = getErrorModel();", "-        Position pos = errorModel.getPosition(error);", "-        ", "-        // switch to correct def pane and move caret to error position", "+     ", "+", "+       ", "+      if (error.file() != null) {", "+        try {", "+          OpenDefinitionsDocument doc = getModel().getDocumentForFile(error.file());", "+          CompilerErrorModel errorModel = getErrorModel();", "+          ", "+          Position pos = errorModel.getPosition(error); // null if error has no Position", "+          ", "+          // switch to correct def pane and move caret to error position", "-        getModel().setActiveDocument(doc);", "+          getModel().setActiveDocument(doc);", "-        DefinitionsPane defPane = _frame.getCurrentDefPane();", "-        if (pos != null) {", "-          int errPos = pos.getOffset();", "-          if (errPos >= 0 && errPos <= doc.getLength()) defPane.centerViewOnOffset(errPos);", "+          DefinitionsPane defPane = _frame.getCurrentDefPane();", "+          if (pos != null) {", "+            int errPos = pos.getOffset();", "+            if (errPos >= 0 && errPos <= doc.getLength()) defPane.centerViewOnOffset(errPos);", "+          }", "+          // The following line is a brute force hack that fixed a bug plaguing the DefinitionsPane immediately after a compilation", "+          // with errors.  In some cases (which were consistently reproducible), the DefinitionsPane editing functions would break", "+          // whereby the keystrokes had their usual meaning but incorrect updates were performed in the DefintionsPane.  For example,", "+          // the display behaved as if the editor were in \"overwrite\" mode.", "+          _frame._switchDefScrollPane(); // resets an out-of-kilter DefinitionsPane on the first error after a compilation", "+          defPane.requestFocusInWindow();", "+          defPane.getCaret().setVisible(true);", "-        // The following line is a brute force hack that fixed a bug plaguing the DefinitionsPane immediately after a compilation", "-        // with errors.  In some cases (which were consistently reproducible), the DefinitionsPane editing functions would break", "-        // whereby the keystrokes had their usual meaning but incorrect updates were performed in the DefintionsPane.  For example,", "-        // the display behaved as if the editor were in \"overwrite\" mode.", "-        _frame._switchDefScrollPane(); // resets an out-of-kilter DefinitionsPane on the first error after a compilation", "-        defPane.requestFocusInWindow();", "-        defPane.getCaret().setVisible(true);", "+        catch (IOException ioe) {", "+          // Don't highlight the source if file can't be opened", "+        }", "-      catch (IOException ioe) {", "-        // Don't highlight the source if file can't be opened", "-      }", "+//      Utilities.showDebug(\"Calling selectItem(...) from switchToError\");", "+      /* setActiveDocument(doc) selects the first error corresponding to the current position (caret location) but this may not", "+       * be the correct error if there are multiple errors for this this position.  The following selects the correct error.*/", "+      getErrorListPane().selectItem(error); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ade5be38de852029d3822f6403fff3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testLineCommentBreakCrazy()", "signatureAfterChange": "   public void testLineCommentBreakCrazy()", "diff": ["-    assertEquals(\"#2.2\", INSIDE_LINE_COMMENT, model1._getStateAtCurrent());", "+    assertEquals(\"#2.2\", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());", "-    assertEquals(\"#3.3\", INSIDE_BLOCK_COMMENT, model1._getStateAtCurrent());", "+    assertEquals(\"#3.3\", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8adf7f4348e8f1e146bb56fbe41c387e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "commitAfterChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 63, "signatureBeforeChange": "     public StackMouseAdapter()", "signatureAfterChange": "     public StackMouseAdapter()", "diff": ["-      super(_stackTable, _stackMenuItem, _stackPopupMenu);", "-    }", "+      super(_stackTable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ae82cc8721b966a28a7ac250713edf3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocument.java", "commitBeforeChange": "af6ac1303ad90db685f17f710be85771c95a718d", "commitAfterChange": "54a2d5af359edd99cce3e2b74ded93b4c8c0d9e9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void resetUndoManager()", "signatureAfterChange": "   public void resetUndoManager()", "diff": ["-    _undoManager.logEnabled = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aed45168b9c619b073753195d823cc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessOptionsTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testCompileReferenceToNonPublicClass()      throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileReferenceToNonPublicClass()      throws BadLocationException, IOException, InterruptedException", "diff": ["-    doc.startCompile();", "+    listener.compile(doc);", "-    doc2.startCompile();", "+    listener2.compile(doc2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8afbf32bd5cabdc93ec19982ab0f8fd3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 446, "methodNumberAfterChange": 375, "signatureBeforeChange": "    final private boolean jj_3R_104()", "signatureAfterChange": "    final private boolean jj_3R_105()", "diff": ["-", "-  final private boolean jj_3R_104() {", "-    if (jj_3R_157()) return true;", "+  final private boolean jj_3R_105() {", "+    if (jj_3R_158()) return true;", "-    if (jj_3R_223()) jj_scanpos = xsp;", "+    if (jj_3R_224()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b213915927f33c57ff85b112e53fcfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 67, "signatureBeforeChange": "   public void testConsoleInput() throws EditDocumentException", "signatureAfterChange": "   public void testConsoleInput() throws EditDocumentException", "diff": ["-   */", "+  /** Tests that input can be written to and read from the console correctly. */", "-        if (n > 1) {", "-          throw new IllegalStateException(\"Input should only be requested once!\");", "-        }", "+        if (n > 1) throw new IllegalStateException(\"Input should only be requested once!\");", "-    String expected = /* DefaultInteractionsModel.INPUT_REQUIRED_MESSAGE + */", "-      String.valueOf((int)'i');", "-    assertEquals(\"read() should prompt for input and return the first byte of \\\"input\\\"\",", "-                 expected, result);", "+    String expected = /* DefaultInteractionsModel.INPUT_REQUIRED_MESSAGE + */  String.valueOf((int)'i');", "+    assertEquals(\"read() should prompt for input and return the first byte of \\\"input\\\"\", expected, result);", "+    ", "+    ", "+    _log.log(\"testConsoleInput completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b24a4aa6c1c3fcdcc8d54b0f4ba047b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "50f8ddd53ad051b199f7d13e98934938f25bd2ae", "commitAfterChange": "963348ced7921c9036c4d0267a79aecf5dc0da09", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testCompileAbortsIfUnsaved()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileAbortsIfUnsaved()     throws BadLocationException, IOException", "diff": ["-      public void saveBeforeProceeding(GlobalModelListener.SaveReason reason) {", "+      public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason) {", "-        saveBeforeProceedingCount++;", "+        saveAllBeforeProceedingCount++;", "-    listener.assertSaveBeforeProceedingCount(1);", "+    listener.assertSaveAllBeforeProceedingCount(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b28531b02b07a886db3a13a351cdf60", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testNE()", "signatureAfterChange": "   public void testNE()", "diff": ["-//    _log.log(\"testNE completed\");", "+    _log.log(\"testNE completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b37692361e89415522cd79b90da76e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "cc814c34f96bfde67f8ae465727b510fa3ed34c9", "commitAfterChange": "8cb3141a044af3c7f18d018980f5a22b0b342ea8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "signatureAfterChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "diff": ["-    OptionConstants.COMPILER_PREFERENCE_CONTROL.setList(compilerNames); //populates the compiler list for preference panel", "+    OptionConstants.COMPILER_PREFERENCE_CONTROL.setList(compilerNames); // populates the compiler list for preference panel", "-      if (!dCompName.equals(OptionConstants.COMPILER_PREFERENCE_CONTROL.NO_PREFERENCE)) {", "-        // preference was set", "-        if (compilerNames.contains(dCompName)) {", "-          _active = _compilers.get(compilerNames.indexOf(dCompName));", "-        }", "-      }", "+      if (! dCompName.equals(OptionConstants.COMPILER_PREFERENCE_CONTROL.NO_PREFERENCE) &&", "+           compilerNames.contains(dCompName)) ", "+        _active = _compilers.get(compilerNames.indexOf(dCompName));", "-    ", "-    _LLSTM = new LanguageLevelStackTraceMapper(m);", "+    _LLSTM = new LanguageLevelStackTraceMapper(_model);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b385206859aced85b61d401fb1c5c3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "   public static URL toURL(File f) throws MalformedURLException", "signatureAfterChange": "   public static URL toURL(File f) throws MalformedURLException", "diff": ["-  public static URL toURL(File f) throws MalformedURLException { return f.toURL(); }", "+  public static URL toURL(File f) throws MalformedURLException { return f.toURI().toURL(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b3cc4c0cd15e2022bef42d2efe8d26a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "3138149e59af557581689e53b212f79d04dd8105", "commitAfterChange": "2fc1b48ae47904f12ff70a4157426a6f949b079b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void testNumListeners()", "signatureAfterChange": "     public void testNumListeners()", "diff": ["-   doc1.getLength();", "-   doc2.getLength();", "-   doc3.getLength();", "-   doc4.getLength();", "+   doc1.getCurrentLine();", "+   doc2.getCurrentLine();", "+   doc3.getCurrentLine();", "+   doc4.getCurrentLine();", "-   doc5.getLength();", "+   doc5.getCurrentLine();", "-   doc1.getLength();", "+   doc1.getCurrentLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5010b283b3bb296c373e7618b7785f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "0324603943b364c5dae8ea36caf43d747217cc50", "commitAfterChange": "7f94cfd1774dbfb41262aa476756f21c6558cb5e", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": "   public void openFolder(File dir, boolean rec) throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   public void openFolder(File dir, boolean rec) throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["-      FileFilter match = IOUtil.predicateFileFilter(LambdaUtil.and(IOUtil.IS_FILE, ", "-                                                                   IOUtil.extensionFilePredicate(extension)));", "+      Predicate<File> match = LambdaUtil.and(IOUtil.IS_FILE, IOUtil.extensionFilePredicate(extension));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5a98374d8c60e30846f69ea3a25508", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 341, "methodNumberAfterChange": 868, "signatureBeforeChange": "    final private boolean jj_3R_403()", "signatureAfterChange": "    final private boolean jj_3R_411()", "diff": ["-", "-  final private boolean jj_3R_403() {", "-    if (jj_scan_token(RIGHT_SIGNED_SHIFT_ASSIGN)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_411() {", "+    if (jj_scan_token(RIGHT_SIGNED_SHIFT_ASSIGN)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8baf365334caca884d1351a0148c71d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilitiesTest.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void _assertBoxCompatible(Class c1, Class c2, boolean boxEnabled)", "signatureAfterChange": "   private void _assertBoxCompatible(Class c1, Class c2, boolean boxEnabled)", "diff": ["-    TigerUtilities.setTigerEnabled(boxEnabled);", "+    setTigerEnabled(boxEnabled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bbe073e0a9a2002be4e4877abbad3ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/Brace.java", "commitBeforeChange": "973271a114877f62b3cb122ffc9ab5f28c91b43a", "commitAfterChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void setType(String type)", "signatureAfterChange": "   public void setType(String type)", "diff": ["-    else { _type = index; }", "+    _type = index;", "+    _size = getType().length();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bc286120952e5aebcb8f23260971b61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandler.java", "commitBeforeChange": "9cb55009db1cb8bd2aab8df62ce303060f475c4b", "commitAfterChange": "5212beeea100a9dddc0602b719065f41bdf8e3cc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void run()", "signatureAfterChange": "      public void run()", "diff": ["+    _manager.notifyDebuggerStarted();", "+    _manager.notifyDebuggerShutdown();    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bc3d54d5326d4fe8ce7ecedb50bbab4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 108, "signatureBeforeChange": "          public void test_forModifiersAndVisibility()", "signatureAfterChange": "          public void test_forModifiersAndVisibility()", "diff": ["-      testLLVisitor.forModifiersAndVisibility(_publicMav);", "-      testLLVisitor.forModifiersAndVisibility(_protectedMav);", "-      testLLVisitor.forModifiersAndVisibility(_privateMav);", "-      testLLVisitor.forModifiersAndVisibility(_packageMav);", "+      testLLVisitor.forModifiersAndVisibility(PUBLIC_MAV);", "+      testLLVisitor.forModifiersAndVisibility(PROTECTED_MAV);", "+      testLLVisitor.forModifiersAndVisibility(PRIVATE_MAV);", "+      testLLVisitor.forModifiersAndVisibility(PACKAGE_MAV);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bca1e4b7266bb98b80abb326aa51e46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "bf372fc29acf6ea260cc55361328f14ce539744d", "commitAfterChange": "ec5c7b65c72ae4439436619fa81e04fbea3f0c07", "methodNumberBeforeChange": 769, "methodNumberAfterChange": 769, "signatureBeforeChange": "   public synchronized void removeModalWindowAdapter(Window w)", "signatureAfterChange": "   public synchronized void removeModalWindowAdapter(Window w)", "diff": ["-    w.setAlwaysOnTop(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bca7e2b9206c6d0de84efafd3f45fb1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6222fd84e3aa6c7b8b3da9d73ccf7a9a3370487b", "commitAfterChange": "a6f0da7db6181f31273ee7bf3cfd92ed3fabb503", "methodNumberBeforeChange": 244, "methodNumberAfterChange": 244, "signatureBeforeChange": "      public void javadocEnded(final boolean success, final File destDir)", "signatureAfterChange": "      public void javadocEnded(final boolean success, final File destDir,                              final boolean showFrames)", "diff": ["-    public void javadocEnded(final boolean success, final File destDir) {", "+    public void javadocEnded(final boolean success, final File destDir,", "+                             final boolean showFrames) {", "-              File index = new File(destDir, \"index.html\");", "+              String filename = (showFrames || className.equals(\"\")) ?", "+                \"index.html\" : (className + \".html\");", "+              File index = new File(destDir, filename);", "-                JavadocFrame _javadocFrame = new JavadocFrame(destDir, className);", "+                JavadocFrame _javadocFrame = ", "+                  new JavadocFrame(destDir, className, showFrames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bcd258c8ec519f84556c4d0462d0abb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 482, "methodNumberAfterChange": 921, "signatureBeforeChange": "    final private boolean jj_3R_308()", "signatureAfterChange": "    final private boolean jj_3R_107()", "diff": ["-", "-  final private boolean jj_3R_308() {", "-    if (jj_3R_377()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_422()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_107() {", "+    if (jj_3R_172()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_52()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8be6fd88cb01924f848d5aea2dddf1a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "0d80b47fa71022c1d579ad193bcaa14dd927885e", "commitAfterChange": "41ef1a01453db857aa42959dbdf2766252e24eff", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CommandLineTest(String name)", "signatureAfterChange": "   public CommandLineTest(String name)", "diff": ["-      throw new RuntimeException(e);", "+      throw new RuntimeException(e.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8be8e0cf08139f719ba1db99bd4df470", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 205, "methodNumberAfterChange": 234, "signatureBeforeChange": "   public static <T, R> Iterable<R> valuesOf(Iterable<? extends Lambda<? super T, ? extends R>> iter, T arg)", "signatureAfterChange": "   public static <T, R> Iterable<R> valuesOf(Iterable<? extends Lambda<? super T, ? extends R>> iter, T arg)", "diff": ["-    return new MappedIterable<Lambda<? super T, ? extends R>, R>(iter, new LambdaValue<T, R>(arg));", "-  }", "+    Lambda<Lambda<? super T, ? extends R>, R> l = LambdaUtil.bindSecond(LambdaUtil.<T, R>applicationLambda(), arg);", "+    return new MappedIterable<Lambda<? super T, ? extends R>, R>(iter, l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c01c36444b3a12c8efebea764bdee6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelDeleteTest.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "    public void testUnmaskBlockCommentedLineComment()", "signatureAfterChange": "    public void testUnmaskBlockCommentedLineComment()", "diff": ["-    assertEquals(\"#0.3\", INSIDE_BLOCK_COMMENT, model1._getStateAtCurrent());", "+    assertEquals(\"#0.3\", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());", "-    assertEquals(\"#0.3\", INSIDE_BLOCK_COMMENT, model1._getStateAtCurrent());", "+    assertEquals(\"#0.3\", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());", "-    assertEquals(\"#2.3\", FREE, model1._getStateAtCurrent());", "+    assertEquals(\"#2.3\", FREE, model1.getStateAtCurrent());", "-    assertEquals(\"#3.1\", INSIDE_LINE_COMMENT, model1._getStateAtCurrent());", "+    assertEquals(\"#3.1\", INSIDE_LINE_COMMENT, model1.getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c0f6141543afb70280dc5cd7a1951c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 268, "methodNumberAfterChange": 271, "signatureBeforeChange": "    final private boolean jj_3R_104()", "signatureAfterChange": "    final private boolean jj_3R_105()", "diff": ["-  final private boolean jj_3R_104() {", "+  final private boolean jj_3R_105() {", "-    if (jj_3_71()) {", "+    if (jj_3_73()) {", "-    if (jj_3R_157()) return true;", "+    if (jj_3R_158()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c2976ac7b50b7626c0af25d173eeb37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testIntegerOps()", "signatureAfterChange": "   public void testIntegerOps() throws ExceptionReturnedException", "diff": ["-  public void testIntegerOps() {", "+  public void testIntegerOps() throws ExceptionReturnedException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c32a968dc28db04b3b1fbba0db46936", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersionTest.java", "commitBeforeChange": "022699e767ab37237911be36e7a5ac8176ca23b6", "commitAfterChange": "64485acb22f7b04ee86b39b46487ccbab2253387", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testParseClassVersion()", "signatureAfterChange": "      public void testParseClassVersion()", "diff": ["+    assertEquals(JAVA_8, parseClassVersion(\"52.0\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c516d2992edf99558e09b88f6a4fca8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/RMIInteractionsModel.java", "commitBeforeChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "commitAfterChange": "6fa1e9e0526601b88fed849b111530adacda855f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void setDefaultInterpreter()", "signatureAfterChange": "   public void setToDefaultInterpreter()", "diff": ["-  public void setDefaultInterpreter() {", "-    boolean inProgress = _interpreterControl.setDefaultInterpreter();", "-    _document.setPrompt(_document.DEFAULT_PROMPT);", "+  public void setToDefaultInterpreter() {", "+    boolean inProgress = _interpreterControl.setToDefaultInterpreter();", "+    _updateDocument(_document.DEFAULT_PROMPT, inProgress);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c71967d7bda52caad34f2f6e3180892", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecurUtil.java", "commitBeforeChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "commitAfterChange": "34d03e4ba66c612a034017381b72d822fe9c84d0", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public static String arrayToString(float[] array, ArrayStringMode stringMode)", "signatureAfterChange": "   public static String arrayToString(float[] array, ArrayStringMode stringMode)", "diff": ["-          else { result.append(\", \"); }", "+          else { result.append(stringMode.delimiter()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c827a0998551ed1c995b1b6b4d25666", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 470, "methodNumberAfterChange": 470, "signatureBeforeChange": "    final private boolean jj_3R_339()", "signatureAfterChange": "    final private boolean jj_3R_340()", "diff": ["-  final private boolean jj_3R_339() {", "+  final private boolean jj_3R_340() {", "-    if (jj_3R_359()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_361()) return true;", "+    if (jj_3R_361()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_362()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c9099ceb67a24c4d80b2769f7604002", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "   private void _removeCurrentDebugInterpreter(boolean fromStep) throws DebugException", "signatureAfterChange": "   private void _removeCurrentDebugInterpreter(boolean fromStep) throws DebugException", "diff": ["-      ((DefaultInteractionsModel)_model.getInteractionsModel());", "+      _model.getInteractionsModel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c9906d41703c26488244c210308df70", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "   boolean atStart()", "signatureAfterChange": "   boolean atStart()", "diff": ["-  boolean atStart() { return (getRMB()._cursor.atStart() || getRMC()._cursor.atStart()); }", "+  boolean atStart() { return (_rmb._cursor.atStart() || _rmc._cursor.atStart()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cb2ad73b26d6ff61d04b95e020ebc5c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "53d061333fe3393f6569c1f553912f1a449482ad", "commitAfterChange": "12c8304e14a6d9eafe2f7093583d8040569150c1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testInteractionsDefineAnonymousInnerClass() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsDefineAnonymousInnerClass() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "diff": ["-//    _log.log(\"testInteractionsDefineAnonymousInnerClass() completed\");", "+    _log.log(\"testInteractionsDefineAnonymousInnerClass() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ccec720dc35a67cfe9764b81beac45a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "2f12a1eb88133f2f5af16745800b04e7680f335e", "commitAfterChange": "9eea973c08c271bfd3413c879733eaab02b552bc", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   void findNext()", "signatureAfterChange": "   void findNext()", "diff": ["-    _defPane.requestFocusInWindow();  // moves focus to DefinitionsPane", "+    if (DrJava.getConfig().getSetting(OptionConstants.FIND_REPLACE_FOCUS_IN_DEFPANE).booleanValue()) {", "+      _defPane.requestFocusInWindow();  // moves focus to DefinitionsPane", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cf9eef7c642727f4d9ac120796aa73b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandlerThread.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _log(String message, Throwable t)", "signatureAfterChange": "   private void _log(String message, Throwable t)", "diff": ["-  protected void _log(String message, Throwable t) {", "-    _log.logTime(message, t);", "-  }", "+  private void _log(String message, Throwable t) { _log.log(message, t); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d0dda4bf80fd74826d6de644bf3687c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public ReducedToken currentToken()", "signatureAfterChange": "   public ReducedToken currentToken()", "diff": ["-    ReducedToken rmcToken = rmc.current();", "-    if (!rmcToken.isGap()) return rmcToken;", "+    ReducedToken rmcToken = getRMC().current();", "+    if (! rmcToken.isGap()) return rmcToken;", "-    ReducedToken rmbToken = rmb.current();", "-    if (!rmbToken.isGap()) {", "-      rmbToken.setState(rmc.getStateAtCurrent());", "+    ReducedToken rmbToken = getRMB().current();", "+    if (! rmbToken.isGap()) {", "+      rmbToken.setState(getRMC().getStateAtCurrent());", "-    return new Gap(size, rmc.getStateAtCurrent());", "+    return new Gap(size, getRMC().getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d269ec61a094fc2addb3f77b02c0082", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "    protected void createHashCode(SymbolData sd)", "signatureAfterChange": "    protected void createHashCode(SymbolData sd)", "diff": ["-                                   new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, mavStrings), ", "+                                   new ModifiersAndVisibility(SourceInfo.NO_INFO, mavStrings), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d295a04e2fa7e2fab1d59f2627d8cab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b6148d8c1aaf55232aeac694d90234c9353139cd", "commitAfterChange": "536afaee0374767d0f8bdf572a332576e3f54467", "methodNumberBeforeChange": 262, "methodNumberAfterChange": 261, "signatureBeforeChange": "   void debuggerToggleBreakpoint()", "signatureAfterChange": "   void debuggerToggleBreakpoint()", "diff": ["-            // don't break -- maybe update option", "+            if (dialog.getCheckBoxValue()) {", "+              DrJava.getConfig().setSetting(WARN_BREAKPOINT_OUT_OF_SYNC, Boolean.FALSE);", "+            }", "+            break;", "+            ", "-            DrJava.getConfig().setSetting(WARN_BREAKPOINT_OUT_OF_SYNC, Boolean.FALSE);", "-          }", "+                DrJava.getConfig().setSetting(WARN_BREAKPOINT_OUT_OF_SYNC, Boolean.FALSE);", "+            }", "+            ", "+            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d3359939d92423029ffb712198c8977", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "6f7646bc382257bcbab95abf6eb35f918e693663", "commitAfterChange": "bec3acc998c72df8479bffbfcd3f570c6175c01d", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public static File getValidDirectory(File file)", "signatureAfterChange": "   public static File getValidDirectory(File file)", "diff": ["-    while (!file.exists()) {", "+    assert file != null;    ", "+    ", "+    while (file != null && !file.exists()) {", "+      //NB: getParentFile() may return null", "+    assert file != null;", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d3e6433bf914a4b2fd21c825e3e6655", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsPane.java", "commitBeforeChange": "e7812efd9f0ea9fd7f568ab9b267e30ff5e61cca", "commitAfterChange": "de8c1f4e7df585e05a2e0cd69ddbb07d6d45c773", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \t\tpublic boolean findText (String fWord)", "signatureAfterChange": "  \t\tpublic boolean findText (String fWord)", "diff": ["-\t\t\t\tSystem.out.println(\"find \" + fWord);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d423ab1fc4066efa590f96510baef58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JarOptionsDialog.java", "commitBeforeChange": "4e9024f79382344df7a15499ea8826062a420a5f", "commitAfterChange": "46f8b968954f105377022ff35f349a7dc8debd6f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private void _loadSettings()", "signatureAfterChange": "   private void _loadSettings()", "diff": ["-    if (_model.getCreateJarFile()!=null) {", "-      _jarFileSelector.setFileField(_model.getCreateJarFile());", "-    }", "+    _jarFileSelector.setFileField(_model.getCreateJarFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d4797f2723d1a67ba8833868e68709f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected final void invokeSlave(String[] jvmArgs, String cp, File workDir) throws IOException, RemoteException", "signatureAfterChange": "   protected final void invokeSlave(String[] jvmArgs, String cp, File workDir) throws IOException, RemoteException", "diff": ["-          synchronized(lock) {", "+          synchronized(_exportLock) {", "-            lock.notify();", "+            _exportLock.notify();", "-      synchronized (lock) {", "+      synchronized(_exportLock) {", "-        try { while (_stub == null) { lock.wait(); } }", "+        try { while (_stub == null) { _exportLock.wait(); } }", "-          synchronized(lock) {", "+          synchronized(_exportLock) {", "-            lock.notify();", "+            _exportLock.notify();", "-      synchronized(lock) {", "+      synchronized(_exportLock) {", "-        try { while (_classLoaderStub == null) { lock.wait(); } }", "+        try { while (_classLoaderStub == null) { _exportLock.wait(); } }", "-      String[] args = new String[] { ", "-        _stubFile.getAbsolutePath(),", "-          _slaveClassName,", "-          _classLoaderStubFile.getAbsolutePath()", "-      };", "+      String[] args = ", "+        new String[] { _stubFile.getAbsolutePath(), _slaveClassName, _classLoaderStubFile.getAbsolutePath() };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d633d8c6c30c1aa1546ea8e57027aaa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "576713321d388945af9795f8f5bacbafa14cd87f", "commitAfterChange": "b814c7e145dc4411f1437e59c56bc53ee860800f", "methodNumberBeforeChange": 213, "methodNumberAfterChange": 213, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    // Platform-specific UI setup.", "-    PlatformFactory.ONLY.beforeUISetup();", "-    // Working directory is default place to start, else use user.dir (bug #895998).", "+    // Working directory is default place to start (bug #895998).", "-                              \"DrJava to fail on startUp.  You may need to edit or delete your .drjava preferences file\\n\" +", "+                              \"DrJava to fail on start up.  You may need to edit or delete your .drjava preferences file\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d735ef8cbfa8b2f92c9b7f9e89a5482", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "1313de8815d48e0a1c60eb5bee6900b6b7af3993", "commitAfterChange": "802c4acbf71daa5d149dbcd67d1f360241574951", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public void junitTestEnded(OpenDefinitionsDocument doc, String name,                                boolean wasSuccessful, boolean causedError)", "signatureAfterChange": "     public void junitTestEnded(String name, boolean wasSuccessful, boolean causedError)", "diff": ["-    public void junitTestEnded(OpenDefinitionsDocument doc, String name,", "-                               boolean wasSuccessful, boolean causedError) {", "+    public void junitTestEnded(String name, boolean wasSuccessful, boolean causedError) {", "-      assertTrue(\"junitTestEndedCount should be same as junitTestStartedCount\",", "-                 junitTestStartedCount == junitTestEndedCount);", "+      assertEquals(\"junitTestEndedCount should be same as junitTestStartedCount\",", "+                   junitTestEndedCount, junitTestStartedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d7b3536105fe8718b599d214b847bac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 493, "methodNumberAfterChange": 842, "signatureBeforeChange": "    final private boolean jj_3R_180()", "signatureAfterChange": "    final private boolean jj_3R_170()", "diff": ["-", "-  final private boolean jj_3R_180() {", "-    if (jj_3R_246()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_306()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_170() {", "+    if (jj_3R_223()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_341()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8da4ef298ffb5e3f3fded15ba0b378ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "8cfaf2efb8ae59b79b9538e0bd5eaf251c6db08b", "commitAfterChange": "b732820bc2f8849bda78001b782e555a753cad1e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses() throws Exception", "signatureAfterChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses() throws Exception", "diff": ["-    if ( printMessages ) System.err.println(\"-------- Adding interpret listener --------\");", "+    if ( printMessages ) System.out.println(\"-------- Adding interpret listener --------\");", "-      if ( printMessages ) System.err.println(\"-------- resuming --------\");", "+      if ( printMessages ) System.out.println(\"-------- resuming --------\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8da5669407eac71836d32ed75e29dff1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractSlaveJVM.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      private void shutdown()", "signatureAfterChange": "      private void shutdown()", "diff": ["-    try { UnicastRemoteObject.unexportObject(this, true); }", "-    catch(NoSuchObjectException e) { throw new UnexpectedException(e); }  // should never happen", "-   _log.log(AbstractSlaveJVM.this + \" calling System.exit(0)\");", "-", "+//    try { ", "+//      boolean exported = UnicastRemoteObject.unexportObject(this, true); ", "+//      if (! exported) _log.log(\"ERROR: \" + this + \" was not unexported before shutdown\");", "+//    }", "+//    catch(NoSuchObjectException e) { throw new UnexpectedException(e); }  // should never happen", "+    _log.log(AbstractSlaveJVM.this + \".shutdown() calling System.exit(0)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8da87f9c0b3c505c084b5979bf543a7a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "634bad3816e5a89c71c174f08f33c3f80727cfeb", "commitAfterChange": "d1ffac675273323f7a1b9777462d16896d09a1af", "methodNumberBeforeChange": 231, "methodNumberAfterChange": 231, "signatureBeforeChange": "      private void _compileFolder()", "signatureAfterChange": "      private void _compileFolder()", "diff": ["-    update(getGraphics()); ", "+//    update(getGraphics()); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dd42d9ca3e7466e81d315912669b923", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public Void forConstructorDef(ConstructorDef that)", "signatureAfterChange": "   public Void forConstructorDef(ConstructorDef that)", "diff": ["-    that.getStatements().visit(new BodyBodyIntermediateVisitor(md, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    that.getStatements().visit(new BodyBodyIntermediateVisitor(md, _file, _package, _importedFiles, _importedPackages, ", "+                                                               _classNamesInThisFile, continuations, _innerClassesToBeParsed));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dd7bce17a922c5537361eb6594524e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 410, "methodNumberAfterChange": 909, "signatureBeforeChange": "    final private boolean jj_3R_101()", "signatureAfterChange": "    final private boolean jj_3R_526()", "diff": ["-  final private boolean jj_3R_101() {", "-    if (jj_3R_160()) return true;", "+", "+  final private boolean jj_3R_526() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_545()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_546()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ded89c3de1722458c68f73ba6721443", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Object visit(LabeledStatement node)", "signatureAfterChange": "   public Node visit(LabeledStatement node)", "diff": ["+   */", "+  public Node visit(LabeledStatement node) {", "+    Node n = node.getStatement();", "+    Node o = n.acceptVisitor(this);", "+    if (o != null) {", "+      rejectReferenceType(o,n);", "+      node.setStatement(o);", "+    }", "+    return null;", "+  }", "-     */", "-    public Object visit(LabeledStatement node) {", "-\tNode n = node.getStatement();", "-        Object o = n.acceptVisitor(this);", "-        if (o != null) {", "-\t    if (o instanceof ReferenceType) {", "-\t\tthrow new ExecutionError(\"malformed.expression\", n);", "-\t    }", "-\t    node.setStatement((Expression)o);", "-        }", "-        return null;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e0ce2ec80599ea22b33affbbcd358b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testGlassPaneEditableState()", "signatureAfterChange": "   public void testGlassPaneEditableState()", "diff": ["-    Utilities.invokeAndWait(new Runnable() { public void run() { _frame.simpleHourglassOn(); } });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { _frame.hourglassOn(); } });", "-    Utilities.invokeAndWait(new Runnable() { public void run() { _frame.simpleHourglassOff(); } });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { _frame.hourglassOff(); } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e1c5a7d11940e4eca48659c763b0801", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BraceInfoTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void _enclosingBraceTestHelper(int location, String msg, int expDist, String expBraceType)", "signatureAfterChange": "      private void _enclosingBraceTestHelper(int location, String msg, int expDist, String expBraceType)", "diff": ["-    _document.acquireReadLock();", "-    try {", "-      _document.setCurrentLocation(location);", "-      //_reduced = _document.getReduced();", "-      BraceInfo info = _document._getEnclosingBrace();", "-      assertEquals(msg + \": distance\", expDist, info.distance());", "-      assertEquals(msg + \": braceType\", expBraceType, info.braceType());", "-    }", "-    finally { _document.releaseReadLock(); }", "+//    _document.acquireReadLock();", "+//    try {", "+    _document.setCurrentLocation(location);", "+    //_reduced = _document.getReduced();", "+    BraceInfo info = _document._getEnclosingBrace();", "+    assertEquals(msg + \": distance\", expDist, info.distance());", "+    assertEquals(msg + \": braceType\", expBraceType, info.braceType());", "+//    }", "+//    finally { _document.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e20b4612772ee2c441b904d863341e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 667, "methodNumberAfterChange": 664, "signatureBeforeChange": "    final private boolean jj_3R_249()", "signatureAfterChange": "    final private boolean jj_3R_283()", "diff": ["-", "-  final private boolean jj_3R_249() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_33()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_307()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_283() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_35()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_358()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e2544428d58cbc211065f4b3b29f57f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "         public void testAddVar()", "signatureAfterChange": "         public void testAddVar()", "diff": ["-      System.err.println(\"testAddVar finished\");", "+//      System.err.println(\"testAddVar finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e36fd624945e261bcdfa5c376799131", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public Object visit(SynchronizedStatement node)", "signatureAfterChange": "   public Object visit(SynchronizedStatement node)", "diff": ["-    node.setLock((Expression)(Expression)node.getLock().acceptVisitor(this));", "+    node.setLock((Expression)node.getLock().acceptVisitor(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e395ef3520e2dbb5c0f13ed9fe05979", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 57, "signatureBeforeChange": "     public void threadLocationUpdated(OpenDefinitionsDocument doc, int lineNumber, boolean shouldHighlight)", "signatureAfterChange": "     public void threadLocationUpdated(OpenDefinitionsDocument doc, int lineNumber, boolean shouldHighlight)", "diff": ["-        if (printEvents) System.out.println(\"threadUpdated \" + threadLocationUpdatedCount);", "+        if (printEvents) printStream.println(\"threadUpdated \" + threadLocationUpdatedCount);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e438a8eb14394086578d0342441b167", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/TestDocGetter.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public OpenDefinitionsDocument getDocumentForFile(File file)     throws IOException, OperationCanceledException", "signatureAfterChange": "    public OpenDefinitionsDocument getDocumentForFile(File file)     throws IOException, OperationCanceledException", "diff": ["-  ", "+", "-      return (OpenDefinitionsDocument) docs.get(file);", "+      return docs.get(file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e49edef41391a30e4b00fad275cb1da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 310, "methodNumberAfterChange": 297, "signatureBeforeChange": "    final private boolean jj_3R_376()", "signatureAfterChange": "    final private boolean jj_3R_378()", "diff": ["-", "-  final private boolean jj_3R_376() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_76()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_360()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_378() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_77()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_362()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e544d283b2bb551b0ba29e3be8e5dea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testReplaceAllContinue() throws BadLocationException", "signatureAfterChange": "   public void testReplaceAllContinue() throws BadLocationException", "diff": ["-    _frm.replaceAll();", "+    replaceAll();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e6e2098db5da9b418e429f1622490bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 15, "signatureBeforeChange": "    protected void interpretIgnoreResult(String input) throws EditDocumentException", "signatureAfterChange": "   protected void interpretIgnoreResult(String input) throws EditDocumentException", "diff": ["+  /** Appends the input string to the interactions pane and interprets it. */", "-    EditDocumentInterface interactionsDoc = _model.getInteractionsDocument();", "-    interactionsDoc.insertText(interactionsDoc.getLength(), input, InteractionsDocument.DEFAULT_STYLE);", "-", "+    InteractionsDocument interactionsDoc = _model.getInteractionsDocument();", "+    interactionsDoc.append(input, InteractionsDocument.DEFAULT_STYLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e74062baa0f61d0dea65973cbd99e06", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "b155114812a8cbcc9237269e7062e3599ab1f574", "commitAfterChange": "201b599e7e14dfbbe8e927af829c37bc841f5d12", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   protected void handleSlaveConnected()", "signatureAfterChange": "   protected void handleSlaveConnected()", "diff": ["+    debug.logStart();", "-    } ", "+    }", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e80bb196e94b9f252d986e76ed23637", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void testCompileWithGenerics()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileWithGenerics()     throws BadLocationException, IOException, InterruptedException", "diff": ["+      _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e8caa132cbeae29b3cdde716a5b1bf4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 289, "methodNumberAfterChange": 287, "signatureBeforeChange": "    final private boolean jj_3R_398()", "signatureAfterChange": "    final private boolean jj_3R_399()", "diff": ["-  final private boolean jj_3R_398() {", "-    if (jj_3R_411()) return true;", "+  final private boolean jj_3R_399() {", "+    if (jj_3R_412()) return true;", "-      if (jj_3R_433()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_434()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e8e63c1ddd616d4dc10a829c6d06349", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecurUtil.java", "commitBeforeChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "commitAfterChange": "34d03e4ba66c612a034017381b72d822fe9c84d0", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public static String arrayToString(char[] array, ArrayStringMode stringMode)", "signatureAfterChange": "   public static String arrayToString(char[] array, ArrayStringMode stringMode)", "diff": ["-          else { result.append(\", \"); }", "+          else { result.append(stringMode.delimiter()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ea1da2626c07ad676a6a3b85b704790", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "8cfaf2efb8ae59b79b9538e0bd5eaf251c6db08b", "commitAfterChange": "b732820bc2f8849bda78001b782e555a753cad1e", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 26, "signatureBeforeChange": "     protected void _updateNoErrors(boolean haveTestsRun) throws BadLocationException", "signatureAfterChange": "     protected void _updateNoErrors(boolean haveTestsRun) throws BadLocationException", "diff": ["-      _checkSync(getDocument());", "+//      _checkSync(getDocument());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eaf7a3b5f6e87b9d944320b4f8c4906", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "51b1254120aed50f646ca2dc0719dc8b4d2189b3", "commitAfterChange": "f63e9ec9369a830055933c73ae9bab20cc1e5176", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "      public void writeOld(Writer fw) throws IOException", "signatureAfterChange": "      public void writeOld(Writer fw) throws IOException", "diff": ["-    fw.write(\";; DrJava project file, written by build \" + Version.getBuildTimeString() + \", revision \" + Version.getRevisionNumber());", "+    fw.write(\";; DrJava project file, written by build \" + Version.getVersionString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8edea04078ca726f1f50673b92d93551", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 308, "methodNumberAfterChange": 287, "signatureBeforeChange": "    final private boolean jj_3R_217()", "signatureAfterChange": "    final private boolean jj_3R_230()", "diff": ["-", "-  final private boolean jj_3R_217() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_256()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_257()) return true;", "-    }", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_290()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_291()) return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ee354b461a118a6523b342e4e9bbce9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "commitAfterChange": "9ce155a1f3e34352032d821032cb2dc70024460f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   @Override public Type visit(AnonymousAllocation node)", "signatureAfterChange": "   @Override public Type visit(AnonymousAllocation node)", "diff": ["-        // TODO: Check for uncaught exceptions", "+        checkThrownExceptions(inv.thrown(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eeca5d050514e78ce1dcd22ade937c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "b6c98c2729d523213cf8ee6bbc9636575f25da66", "commitAfterChange": "4bdaddc150401ace7c16f01fa5c54525f5642ceb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "    public void testCaretStaysAtEndDuringInteraction() throws EditDocumentException", "signatureAfterChange": "    public void testCaretStaysAtEndDuringInteraction() throws EditDocumentException", "diff": ["-    _doc.append(\"simulated output\", InteractionsDocument.DEFAULT_STYLE);", "+    _model.replSystemOutPrint(\"simulated output\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f010860fd1fa3d0b19b3fd4fe93666e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 175, "signatureBeforeChange": "      public void interactionEnded()", "signatureAfterChange": "      public void interactionEnded()", "diff": ["-      _interactionsPane.setCursor(null);", "+      _interactionsPane.setCursor(Cursor.getPredefinedCursor(Cursor.TEXT_CURSOR));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f03387e1bc034e1c156c83d18186f55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d49cbdbddda87e8c405e1611614405c2c7bd203d", "commitAfterChange": "be38b2b11517729e454db4fb5ce1085dc1eb228a", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   private JMenu _setUpFileMenu()", "signatureAfterChange": "   private JMenu _setUpFileMenu()", "diff": ["-    _compileAction.setEnabled(false);", "+    //_compileAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f07ef8f4c843abded5061031074654b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 370, "methodNumberAfterChange": 364, "signatureBeforeChange": "    final private boolean jj_3R_331()", "signatureAfterChange": "    final private boolean jj_3R_262()", "diff": ["+", "+  final private boolean jj_3R_262() {", "+    if (jj_scan_token(DO)) return true;", "+    if (jj_3R_170()) return true;", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_110()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_331() {", "-    if (jj_scan_token(DO)) return true;", "-    if (jj_3R_298()) return true;", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_107()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f08af969a576ee37ae8e2e6b46c4adc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "51e8f4cbce06d140e9a09dd38237b848b4f27d8a", "commitAfterChange": "d350dd729092f66f8ad737ae377c54d2ad394fbf", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public ExternalProcessPanel runCommand(String name, String cmdline, String workdir,                                          String drJavaJarFile, PropertyMaps pm)", "signatureAfterChange": "   public ExternalProcessPanel runCommand(String name, String cmdline, String workdir,                                          String enclosingFile, PropertyMaps pm)", "diff": ["-  /** Run a command and return an external process panel. */", "+    */", "-                                         String drJavaJarFile, PropertyMaps pm) {", "+                                         String enclosingFile, PropertyMaps pm) {", "+    ((MutableFileProperty)pm.getProperty(\"enclosing.djapp.file\")).setFile(enclosingFile.length()>0?", "+                                                                            new File(enclosingFile):null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f08b113def4ec368961987508f6f5b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/MethodContext.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Class<?> setProperties(ClassAllocation node, Class<?> c, Class<?>[] args, List<Node> memb)", "signatureAfterChange": "   public Class<?> setProperties(ClassAllocation node, Class<?> c, Class<?>[] args, List<Node> memb)", "diff": ["-    ReferenceType          otype = new ReferenceType(dname);", "+    ReferenceTypeName          otype = new ReferenceTypeName(dname);", "-                                     new LinkedList<ReferenceType>(),", "+                                     new LinkedList<ReferenceTypeName>(),", "-    ReferenceType ext = null;", "-    List<ReferenceType> impl = null;", "+    ReferenceTypeName ext = null;", "+    List<ReferenceTypeName> impl = null;", "-      impl = new LinkedList<ReferenceType>();", "+      impl = new LinkedList<ReferenceTypeName>();", "-      impl.add(new ReferenceType(intf));", "+      impl.add(new ReferenceTypeName(intf));", "-      ext = new ReferenceType(l);", "+      ext = new ReferenceTypeName(l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f118a8e2f4b85c223314ce0343b97c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "14370880ba431a91577f4a6da91962f3187c5d5d", "commitAfterChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "methodNumberBeforeChange": 204, "methodNumberAfterChange": 204, "signatureBeforeChange": "     @Override public void junitEnded()", "signatureAfterChange": "     @Override public void junitEnded()", "diff": ["+      _log.log(\"junitEnded() called; notifying JUnitDone\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f41f3836e9ee9e24ae0b8e072794a57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "97f966af08ae6bec968f68d8b2fce6c5531a12b8", "commitAfterChange": "d4f8b5e1e15fc2c34ba6969d4ef7bdb04cc8916b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testClassFileSynchronizationAfterRename()     throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronizationAfterRename()     throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "diff": ["+    ", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();", "+    _model.addListener(listener);", "-    doc.startCompile();", "+    synchronized(listener) {", "+      doc.startCompile();", "+      if (_model.getNumErrors() > 0) {", "+        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "+      }", "+      listener.wait();", "+    }", "+    _model.removeListener(listener);", "+    listener.checkCompileOccurred();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f5232aec229e7dbd82d5608298f8744", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 391, "methodNumberAfterChange": 375, "signatureBeforeChange": "    final private boolean jj_3R_528()", "signatureAfterChange": "    final private boolean jj_3R_531()", "diff": ["-  final private boolean jj_3R_528() {", "-    if (jj_3R_213()) return true;", "+  final private boolean jj_3R_531() {", "+    if (jj_3R_214()) return true;", "-      if (jj_3R_546()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_549()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f535e8e6c264710c723451e13efbef8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AbstractDJPane.java", "commitBeforeChange": "8468328336764977b1a392d354ad9fa8332d6cf0", "commitAfterChange": "b5065bdb57d50a5108c714db64f9cb4417931362", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected void matchUpdate(int offset)", "signatureAfterChange": "   protected abstract void matchUpdate(int offset);", "diff": ["-  protected void matchUpdate(int offset) {", "-    getDJDocument().setCurrentLocation(offset);  ", "-    _removePreviousHighlight();", "-    _updateMatchHighlight();", "-  }", "+  protected abstract void matchUpdate(int offset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f5a3495e4b72bcf4993deb4c6cc6081", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/SimpleInteractionsModel.java", "commitBeforeChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "commitAfterChange": "37eb7cd9abe39acb853d1fd344f27a2631ce2406", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SimpleInteractionsModel(InteractionsDJDocument document)", "signatureAfterChange": "   public SimpleInteractionsModel(InteractionsDJDocument document)", "diff": ["-    super(document, new File(System.getProperty(\"user.dir\")), 1000, AbstractGlobalModel.WRITE_DELAY);", "+    super(document, new File(System.getProperty(\"user.dir\")), 1000, WRITE_DELAY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f8056cf5097acfbef62256d2e7c053f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "commitAfterChange": "2f4a42f54aaa74c25ba0a929e664640f896ec43a", "methodNumberBeforeChange": 507, "methodNumberAfterChange": 515, "signatureBeforeChange": "   private void _setDebugMenuItemsEnabled(boolean isEnabled)", "signatureAfterChange": "   private void _setDebugMenuItemsEnabled(boolean isEnabled)", "diff": ["+    _detachDebugFrameAction.setEnabled(isEnabled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f8616e96acc5be9bf2e1b8bfeb51cf0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "91c1d413252eb1e7be85776805fae91f81fb5449", "commitAfterChange": "cdb52bc430a911dc8f35a8a6303146e507572105", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+    _saveChooser.setFileFilter(new JavaSourceFilter());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f8e3627a75c628d3fcfab00bab30e02", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 449, "methodNumberAfterChange": 446, "signatureBeforeChange": "    final private boolean jj_3R_408()", "signatureAfterChange": "    final private boolean jj_3R_410()", "diff": ["+", "+  final private boolean jj_3R_410() {", "+    if (jj_3R_427()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_428()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_408() {", "-    if (jj_3R_425()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_426()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f9623752e849719303035f1ed4cf755", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void testSaveAsAlreadySaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAsAlreadySaved() throws BadLocationException, IOException", "diff": ["-    doc.saveFile(new FileSelector(file1));", "+    saveFile(doc, new FileSelector(file1));", "-    doc.saveFileAs(new FileSelector(file2));", "+    saveFileAs(doc, new FileSelector(file2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fa5187de6c724ab9ebf0d12bad3ba94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "diff": ["-                                       \"The lowest access level to include for fields and methods.\"));", "+                                       \"<html>Fields and methods with access modifiers at this level<br>\" +", "+                                       \"or higher will be included in the generated Javadoc.</html>\"));", "-      (new BooleanOptionComponent(OptionConstants.JAVADOC_FROM_ROOTS,", "-                                  \"Generate Javadoc From Source Roots\", this,", "-                                  \"<html>Whether Javadoc should be generated for all packages in<br>\" +", "-                                  \"an open document's source tree, rather than just the document's<br>\" +", "-                                  \"own package and sub-packages.</html>\"));", "+      (new FileOptionComponent(OptionConstants.JAVADOC_DESTINATION,", "+                               \"Default Destination Directory\", this,", "+                               \"Optional default directory for saving Javadoc documentation.\",", "+                               _fileOptionChooser));", "+    ", "-                                 \"Any extra parameters to pass to Javadoc.\"));", "+                                 \"Any extra flags or parameters to pass to Javadoc.\"));", "+    ", "-      (new FileOptionComponent(OptionConstants.JAVADOC_DESTINATION,", "-                               \"Default Destination Directory\", this,", "-                               \"The default directory for saving Javadoc documentation.\",", "-                               _fileOptionChooser));", "+      (new BooleanOptionComponent(OptionConstants.JAVADOC_FROM_ROOTS,", "+                                  \"Generate Javadoc From Source Roots\", this,", "+                                  \"<html>Whether 'Javadoc All' should generate Javadoc for all packages<br>\" +", "+                                  \"in an open document's source tree, rather than just the document's<br>\" +", "+                                  \"own package and sub-packages.</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fab758a86cd5e5bf37fceb9e3dc16f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/FilteredRelation.java", "commitBeforeChange": "811484bb0f3e9c6a234bb593ba7247f59304a444", "commitAfterChange": "d3ca8d30db126f3de1352627e18f51d00a1bf339", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override public boolean contains(Object obj)", "signatureAfterChange": "      public boolean contains(Object obj)", "diff": ["-  @Override public boolean contains(Object obj) {", "+  ", "+  public boolean contains(Object obj) {", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fc039ef3f52a0ae7e0a19ebc190e29c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionDoNothing.java", "commitBeforeChange": "558f3e76b0939d235eb8771fbc6a284d80a06f72", "commitAfterChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc, int pos)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc,                           BraceReduction reducedModel,                           int pos)", "diff": ["-  public void indentLine(DefinitionsDocument doc, int pos) {", "+  public void indentLine(DefinitionsDocument doc, ", "+                         BraceReduction reducedModel, ", "+                         int pos)", "+  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fda05cded153f6eba1e81d6ce10e0c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": "     @Override public Type visit(StaticFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(StaticFieldAccess node)", "diff": ["-        // TODO: Check accessibility of field", "+        checkAccessibility(ref.field(), node);", "-        throw new ExecutionError(\"no.such.field\", node);", "+        throw new ExecutionError(\"no.such.static.field\", node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fe893998b37f1efd4bc91fea1c3fdd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void resetInteractions(File wd, boolean forceReset)", "signatureAfterChange": "   public void resetInteractions(File wd, boolean forceReset)", "diff": ["-//    _log.log(\"DefaultGlobalModel.resetInteractions called\");", "-//    _log.log(\"New working directory = \" + wd +\"; current working directory = \" + workDir + \";\");", "-//      _log.log(\"Suppressing resetting of interactions pane\");", "-//    _log.log(\"Resetting interactions with working directory = \" + wd);", "-    if (DrJava.getConfig().getSetting(STICKY_INTERACTIONS_DIRECTORY)) {    ", "-      // update the setting", "-      DrJava.getConfig().setSetting(LAST_INTERACTIONS_DIRECTORY, wd);", "-    }", "+    // update the setting", "+    DrJava.getConfig().setSetting(LAST_INTERACTIONS_DIRECTORY, wd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9000b94ab01f9c986aff4266cba56f45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "a64d259eb205583970c69af64c3cca967dd81a0f", "commitAfterChange": "9be84f23a860532e5852c80be2ef2d01c63b33b7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testDocumentSwitching() throws BadLocationException", "signatureAfterChange": "   public void testDocumentSwitching() throws BadLocationException", "diff": ["-    getSDModel().setNextActiveDocument();", "+    getSDModel().setActiveNextDocument();", "-    getSDModel().setPreviousActiveDocument();", "+    getSDModel().setActivePreviousDocument();", "-    getSDModel().setPreviousActiveDocument();", "+    getSDModel().setActivePreviousDocument();", "-    getSDModel().setPreviousActiveDocument();", "+    getSDModel().setActivePreviousDocument();", "-    getSDModel().setNextActiveDocument();", "+    getSDModel().setActiveNextDocument();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9006d8bb18bd057e02a654a9352b429f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartAfterOpenBraceTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testCommentsAfterBrace() throws BadLocationException", "signatureAfterChange": "      public void testCommentsAfterBrace() throws BadLocationException", "diff": ["-  public void testCommentsAfterBrace() throws BadLocationException ", "-  {", "+  public void testCommentsAfterBrace() throws BadLocationException {", "-      \"class Foo {   \\n\" +", "-      \"              \\n\" +", "-      \"  /*          \\n\" +", "+      \"class Foo {   \\n\" +  // 15 chars", "+      \"              \\n\" +  // 30 chars", "+      \"  /*          \\n\" +  // 45 chars", "-    assertTrue(\"START = 0.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START = 0.\", !_rule.applyRule(_doc, 14, Indenter.IndentReason.OTHER));", "-    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 15, Indenter.IndentReason.OTHER));", "-    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 30, Indenter.IndentReason.OTHER));", "-    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 44, Indenter.IndentReason.OTHER));", "-    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 45, Indenter.IndentReason.OTHER));", "-    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 60, Indenter.IndentReason.OTHER));", "-    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 77, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START = 0.\", !_rule.testApplyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START = 0.\", !_rule.testApplyRule(_doc, 14, Indenter.IndentReason.OTHER));", "+    assertTrue(\"Only WS between START and open brace.\", _rule.testApplyRule(_doc, 15, Indenter.IndentReason.OTHER));", "+    assertTrue(\"Only WS between START and open brace.\", _rule.testApplyRule(_doc, 30, Indenter.IndentReason.OTHER));", "+    assertTrue(\"Only WS between START and open brace.\", _rule.testApplyRule(_doc, 44, Indenter.IndentReason.OTHER));", "+    assertTrue(\"Only comment and WS between START and open brace.\", _rule.testApplyRule(_doc, 45, Indenter.IndentReason.OTHER));", "+    assertTrue(\"Only comment and WS between START and open brace.\", _rule.testApplyRule(_doc, 60, Indenter.IndentReason.OTHER));", "+    assertTrue(\"Only comment and WS between START and open brace.\", _rule.testApplyRule(_doc, 77, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "900712bd60094ae70239aeec8a0e465f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerProxy.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public boolean isAvailable()", "signatureAfterChange": "   public boolean isAvailable()", "diff": ["-//    Utilities.show(\"CompilerProxy.isAvailable() called for \" + getClass() + \" real compiler = \" + _realCompiler);", "+    _log.log(\"CompilerProxy.isAvailable() called for \" + getClass() + \" _realCompiler = \" + _realCompiler);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "901166f2c0d6bc5c7924c6f6cd2151b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testCancelSaveAlreadySaved()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCancelSaveAlreadySaved()     throws BadLocationException, IOException", "diff": ["-    setupDocument(FOO_TEXT);", "+    OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "-    _model.saveFile(new FileSelector(file));", "-    assertModified(false);", "-    assertContents(FOO_TEXT);", "+    doc.saveFile(new FileSelector(file));", "+    assertModified(false, doc);", "+    assertContents(FOO_TEXT, doc);", "-    changeDocumentText(BAR_TEXT);", "+    changeDocumentText(BAR_TEXT, doc);", "-    _model.saveFile(new CancelingSelector());", "+    doc.saveFile(new CancelingSelector());", "-    assertModified(false);", "-    assertContents(BAR_TEXT);", "+    assertModified(false, doc);", "+    assertContents(BAR_TEXT, doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9016bb807d1c11707b09a77b62dcf7ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk7/edu/rice/cs/drjava/model/compiler/Javac170Compiler.java", "commitBeforeChange": "3fc1b74de3776ab314063d1e84482153cc581734", "commitAfterChange": "b8fd77dca0f339350409b3b0ddff4c3da753bc61", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r   \r   private Iterable<String> _createOptions(List<? extends File> classPath, List<? extends File> sourcePath, File destination, \r                                           List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "signatureAfterChange": "      private Iterable<String> _createOptions(List<? extends File> classPath, List<? extends File> sourcePath, File destination,                                            List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "diff": ["-  \r", "-  private Iterable<String> _createOptions(List<? extends File> classPath, List<? extends File> sourcePath, File destination, \r", "-                                          List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings) {    \r", "-    if (bootClassPath == null) { bootClassPath = _defaultBootClassPath; }\r", "-\r", "-    LinkedList<String> options = new LinkedList<String>();\r", "-    for (Map.Entry<String, String> e : CompilerOptions.getOptions(showWarnings).entrySet()) {\r", "-      options.add(e.getKey());\r", "-      if (e.getValue().length()>0) options.add(e.getValue());\r", "-    }\r", "-    options.add(\"-g\");\r", "-\r", "-    if (classPath != null) { options.add(\"-classpath\"); options.add(IOUtil.pathToString(classPath)); }\r", "-    if (sourcePath != null) { options.add(\"-sourcepath\"); options.add(IOUtil.pathToString(sourcePath)); }\r", "-    if (destination != null) { options.add(\"-d\"); options.add(destination.getPath()); }\r", "-    if (bootClassPath != null) { options.add(\"-bootclasspath\"); options.add(IOUtil.pathToString(bootClassPath)); }\r", "-    if (sourceVersion != null) { options.add(\"-source\"); options.add(sourceVersion); }\r", "-    if (!showWarnings) { options.add(\"-nowarn\"); }\r", "-    \r", "-    // Bug fix: if \"-target\" is not present, Iterables in for-each loops cause compiler errors\r", "-    if (sourceVersion != null) { options.add(\"-target\"); options.add(sourceVersion); }\r", "-    else { options.add(\"-target\"); options.add(\"1.7\"); }\r", "-\r", "-    return options;\r", "-  }\r", "+  ", "+  private Iterable<String> _createOptions(List<? extends File> classPath, List<? extends File> sourcePath, File destination, ", "+                                          List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings) {    ", "+    if (bootClassPath == null) { bootClassPath = _defaultBootClassPath; }", "+", "+    LinkedList<String> options = new LinkedList<String>();", "+    for (Map.Entry<String, String> e : CompilerOptions.getOptions(showWarnings).entrySet()) {", "+      options.add(e.getKey());", "+      if (e.getValue().length()>0) options.add(e.getValue());", "+    }", "+    options.add(\"-g\");", "+", "+    if (classPath != null) { options.add(\"-classpath\"); options.add(IOUtil.pathToString(classPath)); }", "+    if (sourcePath != null) { options.add(\"-sourcepath\"); options.add(IOUtil.pathToString(sourcePath)); }", "+    if (destination != null) { options.add(\"-d\"); options.add(destination.getPath()); }", "+    if (bootClassPath != null) { options.add(\"-bootclasspath\"); options.add(IOUtil.pathToString(bootClassPath)); }", "+    if (sourceVersion != null) { options.add(\"-source\"); options.add(sourceVersion); }", "+    if (!showWarnings) { options.add(\"-nowarn\"); }", "+    ", "+    // Bug fix: if \"-target\" is not present, Iterables in for-each loops cause compiler errors", "+    if (sourceVersion != null) { options.add(\"-target\"); options.add(sourceVersion); }", "+    /* The following line is commented out because it does not work for Java 8. */", "+//    else { options.add(\"-target\"); options.add(\"1.7\"); }", "+", "+    return options;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90183b711a8dee78760d219a20ff442f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 471, "methodNumberAfterChange": 462, "signatureBeforeChange": "    final private boolean jj_3R_221()", "signatureAfterChange": "    final private boolean jj_3R_223()", "diff": ["-  final private boolean jj_3R_221() {", "-    if (jj_3R_246()) return true;", "-    if (jj_3R_103()) return true;", "+  final private boolean jj_3R_223() {", "+    if (jj_3R_248()) return true;", "+    if (jj_3R_104()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9024a1630b949f8bebfbc09b84a58222", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ClipboardHistoryFrame.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void setVisible(boolean b)", "signatureAfterChange": "   public void setVisible(boolean b)", "diff": ["-      _mainFrame.simpleHourglassOn();", "+      _mainFrame.hourglassOn();", "-      _mainFrame.simpleHourglassOff();", "+      _mainFrame.hourglassOff();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90285d3a712b500b14b5a299637da141", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 401, "methodNumberAfterChange": 372, "signatureBeforeChange": "    final private boolean jj_3R_449()", "signatureAfterChange": "    final private boolean jj_3R_464()", "diff": ["-  final private boolean jj_3R_449() {", "+", "+  final private boolean jj_3R_464() {", "-    if (jj_3R_455()) {", "+    if (jj_3R_470()) {", "-    if (jj_3R_456()) return true;", "+    if (jj_3R_471()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90417ed0496a4414ed8e0457dfad5e99", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 372, "methodNumberAfterChange": 646, "signatureBeforeChange": "    final private boolean jj_3R_329()", "signatureAfterChange": "    final private boolean jj_3R_323()", "diff": ["-", "-  final private boolean jj_3R_329() {", "-    if (jj_3R_336()) return true;", "-      if (jj_3R_351()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_323() {", "+    if (jj_3R_332()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_333()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9045baaf3403292cf860961c5cc6dea8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/IntegerOptionTest.java", "commitBeforeChange": "ab56c47a9f6c097d16c8c38565dec5edb6fb4d6f", "commitAfterChange": "0d80b47fa71022c1d579ad193bcaa14dd927885e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testParse()", "signatureAfterChange": "      public void testParse()", "diff": ["-    IntegerOption io = new IntegerOption(\"max_files\");", "+    IntegerOption io = new IntegerOption(\"max_files\",null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90597cf94aabfc0ba92053d9b897f31e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6d9f2ce37ba22041a5b2840cffbd0f66339165b6", "commitAfterChange": "b153c43e59717c98f32c67f14d61a00a81016991", "methodNumberBeforeChange": 466, "methodNumberAfterChange": 460, "signatureBeforeChange": "    final private boolean jj_3R_388()", "signatureAfterChange": "    final private boolean jj_3R_391()", "diff": ["-  final private boolean jj_3R_388() {", "+  final private boolean jj_3R_391() {", "-    if (jj_3R_392()) return true;", "+    if (jj_3R_395()) return true;", "-      if (jj_3R_392()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_395()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "906a0308a46e7f8f6dc06014e96e1366", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "cbb9f04386fdbcd6c82a6f2a5ae6b635359499fb", "commitAfterChange": "e77b9389e0feb3169a20412f8892f630db108f0e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public void nonTestCase(final boolean isTestAll)", "signatureAfterChange": "   public void nonTestCase(final boolean isTestAll)", "diff": ["-    _notifier.nonTestCase(isTestAll);", "+    _notifyNonTestCase(isTestAll);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9076cf1545cfe458834b7ba60c8b715a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "a0957e8972dd51e027c20f0e7d4410268a6b47b8", "commitAfterChange": "d911293c92d7a3fb39bbc2ab054e9452132d9003", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void _doCompile(List<OpenDefinitionsDocument> docs) throws IOException", "signatureAfterChange": "   private void _doCompile(List<OpenDefinitionsDocument> docs) throws IOException", "diff": ["-      if (true) { //if (doc.isSourceFile()) { // TODO: allow .hj files", "+      if (doc.isSourceFile()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90e49ebebf5b65938e5e8c3e0cafc34e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 284, "methodNumberAfterChange": 280, "signatureBeforeChange": "      public void openProject(FileOpenSelector projectSelector)", "signatureAfterChange": "      public void openProject(FileOpenSelector projectSelector)", "diff": ["-      simpleHourglassOn();", "+      hourglassOn();", "-    finally { simpleHourglassOff(); }    ", "+    finally { hourglassOff(); }    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90e4de92e03a63d0111ffe6f02a82a98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 531, "methodNumberAfterChange": 534, "signatureBeforeChange": "    final private boolean jj_3R_391()", "signatureAfterChange": "    final private boolean jj_3R_392()", "diff": ["-  final private boolean jj_3R_391() {", "-    if (jj_3R_92()) return true;", "+  final private boolean jj_3R_392() {", "+    if (jj_3R_93()) return true;", "-      if (jj_3_31()) { jj_scanpos = xsp; break; }", "+      if (jj_3_33()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90f900eef4ce348b1212ad8062fcd427", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Object visit(TryStatement node)", "signatureAfterChange": "   public Class visit(TryStatement node)", "diff": ["-     */", "-    public Object visit(TryStatement node) {", "-        node.getTryBlock().acceptVisitor(this);", "-        Iterator it = node.getCatchStatements().iterator();", "-        while (it.hasNext()) {", "-            ((Node)it.next()).acceptVisitor(this);", "-        }", "-        Node n;", "-        if ((n = node.getFinallyBlock()) != null) {", "-            n.acceptVisitor(this);", "-        }", "-        return null;", "-    }", "+   */", "+  public Class visit(TryStatement node) {", "+    node.getTryBlock().acceptVisitor(this);", "+    Iterator it = node.getCatchStatements().iterator();", "+    while (it.hasNext()) {", "+      ((Node)it.next()).acceptVisitor(this);", "+    }", "+    Node n;", "+    if ((n = node.getFinallyBlock()) != null) {", "+      n.acceptVisitor(this);", "+    }", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9119cabfa23a86568169c1622558c4b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public Class visit(ArrayType node)", "signatureAfterChange": "   public Class visit(ArrayType node)", "diff": ["-    Class c = (Class)eType.acceptVisitor(this);", "+    Class c = eType.acceptVisitor(this);", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "911a5913d31ffd126fe1034085a9f547", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/LogTest.java", "commitBeforeChange": "c797f7e57ea0230b6931e66637aa0a3d00547f03", "commitAfterChange": "0a16594b9476a5c9cc31dd37e345bf51d1d17aa2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testExceptionPrinting() throws IOException", "signatureAfterChange": "   public void testExceptionPrinting() throws IOException", "diff": ["-    File FILE2 = IOUtil.createAndMarkTempFile(\"logtest002\",\".txt\");", "-    Log log2 = new Log(FILE2, true);", "+    File file2 = IOUtil.createAndMarkTempFile(\"logtest002\",\".txt\");", "+    Log log2 = new Log(file2, true);", "-    BufferedReader fin = new BufferedReader(new FileReader(FILE2));", "+    BufferedReader fin = new BufferedReader(new FileReader(file2));", "-    assertEquals(\"Log open message\", \"Log '\" + FILE2.getName() + \"' opened\", s0.substring(30, 43+FILE2.getName().length()));", "+    assertEquals(\"Log open message\", \"Log '\" + file2.getName() + \"' opened\", s0.substring(30, 43+file2.getName().length()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9122c563b36cebf0ad9329693f02a118", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsList.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public <Ret> Ret apply(ConsVisitor<? super T, ? extends Ret> visitor)", "signatureAfterChange": "     public <Ret> Ret apply(ConsVisitor<? super T, ? extends Ret> visitor)", "diff": ["-      return visitor.forNonempty(this);", "+      return visitor.forNonempty(_first, _rest);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9148bcfa5d6bd5be4477c3bd217a0dd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testDoNotRunJUnitIfFileHasBeenMoved() throws Exception", "signatureAfterChange": "      public void testDoNotRunJUnitIfFileHasBeenMoved() throws Exception", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91591302e56056841787eb661c1f2eab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 296, "methodNumberAfterChange": 682, "signatureBeforeChange": "    final private boolean jj_3R_450()", "signatureAfterChange": "    final private boolean jj_3R_250()", "diff": ["-  final private boolean jj_3R_450() {", "-    if (jj_3R_89()) return true;", "-      if (jj_3_29()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_250() {", "+    if (jj_3R_263()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_264()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91648908f1b8f9ed21882ac4cdc5d882", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CompoundUndoManager.java", "commitBeforeChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "commitAfterChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public int startCompoundEdit()", "signatureAfterChange": "   public int startCompoundEdit()", "diff": ["-    _nextKey++;", "+    if(_nextKey < Integer.MAX_VALUE) {", "+      _nextKey++;", "+    }", "+    else {", "+      _nextKey = Integer.MIN_VALUE;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "917f5afc122e39aa9f1b05d23968e931", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 674, "methodNumberAfterChange": 680, "signatureBeforeChange": "    final private boolean jj_3R_124()", "signatureAfterChange": "    final private boolean jj_3R_125()", "diff": ["-  final private boolean jj_3R_124() {", "+  final private boolean jj_3R_125() {", "-    if (jj_3R_168()) {", "+    if (jj_3R_169()) {", "-    if (jj_3R_169()) return true;", "+    if (jj_3R_170()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9180bfc67b6b1b3c7d0df03924b3c71d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void testCompileReferenceToNonPublicClass() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileReferenceToNonPublicClass() throws BadLocationException, IOException, InterruptedException", "diff": ["+    _model.removeListener(listener2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "918b3fa5e08295b2dd8e3b8db014f119", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 621, "methodNumberAfterChange": 622, "signatureBeforeChange": "    final private boolean jj_3R_413()", "signatureAfterChange": "    final private boolean jj_3R_417()", "diff": ["-", "-  final private boolean jj_3R_413() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_428()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_429()) jj_scanpos = xsp;", "-    return false;", "-  }", "+  final private boolean jj_3R_417() {", "+      if (jj_3R_432()) { jj_scanpos = xsp; break; }", "+    if (jj_3R_433()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "919514c3cbe13f351a06e40d52ec1bfa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 368, "signatureBeforeChange": "    final private boolean jj_3R_355()", "signatureAfterChange": "    final private boolean jj_3R_358()", "diff": ["-  final private boolean jj_3R_355() {", "+", "+  final private boolean jj_3R_358() {", "-    if (jj_3R_362()) {", "+    if (jj_3R_365()) {", "-    if (jj_3R_363()) return true;", "+    if (jj_3R_366()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9197311a19e9bd6c410dbd95aab0a9fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 539, "methodNumberAfterChange": 415, "signatureBeforeChange": "    final private boolean jj_3R_153()", "signatureAfterChange": "    final private boolean jj_3R_156()", "diff": ["-  final private boolean jj_3R_153() {", "+  final private boolean jj_3R_156() {", "-    if (jj_3R_103()) return true;", "+    if (jj_3R_106()) return true;", "-    if (jj_3R_217()) return true;", "+    if (jj_3R_220()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91e1f6503104ee630d8b5c7251f9e3c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "8468328336764977b1a392d354ad9fa8332d6cf0", "commitAfterChange": "b5065bdb57d50a5108c714db64f9cb4417931362", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void replReturnedResult(String result, String style)", "signatureAfterChange": "   public void replReturnedResult(String result, String style)", "diff": ["-    append(result + _newLine, style);", "+    append(result + \"\\n\", style);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91f8f8571b10087afcac9d38db099ab0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   protected StaticFieldAccess _getStaticFieldAccessForField(String field, Context context)", "signatureAfterChange": "   protected StaticFieldAccess _getStaticFieldAccessForField(String field, Context context)", "diff": ["-    StaticFieldAccess expr = null;", "-      expr = new StaticFieldAccess(rt, field);", "+      StaticFieldAccess expr = new StaticFieldAccess(rt, field);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "920888bee208b991f7a6d69e6ab93048", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classinfo/TypeVisitor.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public ClassInfo visit(ArrayType node)", "signatureAfterChange": "   public ClassInfo visit(ArrayType node)", "diff": ["-    ClassInfo ci = (ClassInfo)node.getElementType().acceptVisitor(this);", "+    ClassInfo ci = node.getElementType().acceptVisitor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9215ea039674d7cca62a236a8e7382aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 819, "methodNumberAfterChange": 737, "signatureBeforeChange": "    final private boolean jj_3R_233()", "signatureAfterChange": "    final private boolean jj_3R_198()", "diff": ["-", "-  final private boolean jj_3R_233() {", "-    if (jj_scan_token(PLUS_ASSIGN)) return true;", "-    if (jj_3R_87()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_198() {", "+    if (jj_scan_token(PLUS_ASSIGN)) return true;", "+    if (jj_3R_78()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92194f278abd233d8fb0fb4dc86ce828", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/XMLProjectFileParser.java", "commitBeforeChange": "e99723007606c50032c4a82ba80b9d94aaabe6bc", "commitAfterChange": "958f548f8cc751514e1497672b492b70657c4b6e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ProjectFileIR parse(File projFile) throws IOException, FileNotFoundException, MalformedProjectFileException", "signatureAfterChange": "   public ProjectFileIR parse(File projFile) throws IOException, FileNotFoundException, MalformedProjectFileException", "diff": ["-        File mainClass = new File(_parent, s);", "-        pfir.setMainClass(mainClass);", "+        /*File mainClass = new File(_parent, s);", "+        pfir.setMainClass(mainClass);*/", "+        pfir.setMainClass(s);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "922cf14b77fad7456835156fd8d526ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "ae91856b53b869dea43c60b3424279a87db75fb5", "commitAfterChange": "a357e82c74cb27dc4ce8ef007203ad2bd5dfa25b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses() throws Exception", "signatureAfterChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses() throws Exception", "diff": ["+    ", "+    Utilities.clearEventQueue();", "-    _debugger.toggleBreakpoint(doc,", "-       DEBUG_CLASS.indexOf(\"System.out.println(\\\"Bar Line 2\\\")\"), 9);", "+    _debugger.toggleBreakpoint(doc, DEBUG_CLASS.indexOf(\"System.out.println(\\\"Bar Line 2\\\")\"), 9);", "+    ", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "924e9c49b182dabc947ca15e8e5806c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentRuleAction.java", "commitBeforeChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "commitAfterChange": "07e4da5973e0c6fb136b88bb51b79becbac0e22f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public abstract void indentLine(DefinitionsDocument doc,                                    BraceReduction reducedModel,                                   int pos);", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc, int pos)", "diff": ["-  public abstract void indentLine(DefinitionsDocument doc, ", "+  public void indentLine(DefinitionsDocument doc, int pos) {", "+    int oldPos = doc.getCurrentLocation();", "+    doc.setCurrentLocation(pos);", "+    indentLine(doc);", "+    doc.setCurrentLocation(oldPos);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92563110c95514ab76b4d7238ed6ea8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classinfo/ClassInfoUtilities.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public static MethodInfo lookupOuterMethod(ClassInfo cl, String name, ClassInfo[] ac)     throws NoSuchMethodException", "signatureAfterChange": "   public static MethodInfo lookupOuterMethod(ClassInfo cl, String name, ClassInfo[] ac)     throws NoSuchMethodException", "diff": ["+    ", "-    ClassInfo c  = (cl != null) ? cl.getDeclaringClass() : null;", "-    while (c != null) {", "+    ClassInfo c  = cl.getDeclaringClass();", "+    do {", "-        if (!sc || Modifier.isStatic(m.getModifiers())) {", "-          return m;", "-        }", "-      } catch (NoSuchMethodException e) {", "-      }", "+        if (!sc || Modifier.isStatic(m.getModifiers())) return m;", "+      } catch (NoSuchMethodException e) { /* This point is reachable! */ }", "-    }", "+    } while (c != null); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "925b4c5c483b8c438949d420a26a7b55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BraceInfoTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void _lineEnclosingBraceTestHelper(int location, String msg, int expDist, String expBraceType)", "signatureAfterChange": "      private void _lineEnclosingBraceTestHelper(int location, String msg, int expDist, String expBraceType)", "diff": ["-    _document.acquireReadLock();", "-    try {", "-      _document.setCurrentLocation(location);", "-      //_reduced = _document.getReduced();", "-      BraceInfo info = _document._getLineEnclosingBrace();", "-      assertEquals(msg + \": distance\", expDist, info.distance());", "-      assertEquals(msg + \": braceType\", expBraceType, info.braceType());", "-    }", "-    finally { _document.releaseReadLock(); }", "+//    _document.acquireReadLock();", "+//    try {", "+    _document.setCurrentLocation(location);", "+    //_reduced = _document.getReduced();", "+    BraceInfo info = _document._getLineEnclosingBrace();", "+    assertEquals(msg + \": distance\", expDist, info.distance());", "+    assertEquals(msg + \": braceType\", expBraceType, info.braceType());", "+//    }", "+//    finally { _document.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9270737b5e0836aa27ad63c91761483c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/CollectUtil.java", "commitBeforeChange": "811484bb0f3e9c6a234bb593ba7247f59304a444", "commitAfterChange": "d3ca8d30db126f3de1352627e18f51d00a1bf339", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public static <T1, T2> Relation<T1, T2> makeRelation(Iterable<? extends Pair<T1, T2>> pairs)", "signatureAfterChange": "   public static <T1, T2> Relation<T1, T2> makeRelation(Iterable<? extends Pair<? extends T1, ? extends T2>> pairs)", "diff": ["-  public static <T1, T2> Relation<T1, T2> makeRelation(Iterable<? extends Pair<T1, T2>> pairs) {", "+  public static <T1, T2> Relation<T1, T2> makeRelation(Iterable<? extends Pair<? extends T1, ? extends T2>> pairs) {", "-      return new SingletonRelation<T1, T2>(IterUtil.first(pairs));", "+      Pair<? extends T1, ? extends T2> elt = IterUtil.first(pairs);", "+      return new SingletonRelation<T1, T2>(elt.first(), elt.second());", "-      result.addAll(asCollection(pairs));", "+      for (Pair<? extends T1, ? extends T2> elt : pairs) {", "+        result.add(elt.first(), elt.second());", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92a948cf98acd7fafeaa3d3995b02c23", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public void notifyActive()", "signatureAfterChange": "   public void notifyActive()", "diff": ["-//    _doc.acquireWriteLock();", "+    _doc.acquireWriteLock();", "-//    try {", "-    if (_position == _selStart) {", "-      setCaretPosition(_selEnd);", "-      moveCaretPosition(_selStart);", "-      _doc.setCurrentLocation(_selStart);", "+    try {", "+      if (_position == _selStart) {", "+        setCaretPosition(_selEnd);", "+        moveCaretPosition(_selStart);", "+        _doc.setCurrentLocation(_selStart);", "+      }", "+      else {", "+        setCaretPosition(_selStart);", "+        moveCaretPosition(_selEnd);", "+        _doc.setCurrentLocation(_selEnd);", "+      }", "-    else {", "-      setCaretPosition(_selStart);", "-      moveCaretPosition(_selEnd);", "-      _doc.setCurrentLocation(_selEnd);", "-    }", "-//    }", "-//    finally { _doc.releaseWriteLock(); }", "+    finally { _doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92f96a6cb631b2ee482f0b4e8366cb24", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   @Override public TypeContext visit(MethodDeclaration node)", "signatureAfterChange": "   @Override public TypeContext visit(MethodDeclaration node)", "diff": ["-      setVariable(p, new LocalVariable(p.getName(), t, p.isFinal()));", "+      setVariable(p, new LocalVariable(p.getName(), t, p.getModifiers().isFinal()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "930486a22b190c576a4a927cb4b348a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "b6148d8c1aaf55232aeac694d90234c9353139cd", "commitAfterChange": "536afaee0374767d0f8bdf572a332576e3f54467", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   private File refreshNode(DefaultMutableTreeNode node)", "signatureAfterChange": "   private File refreshNode(DefaultMutableTreeNode node)", "diff": ["-    Enumeration<DefaultMutableTreeNode> e = node.children();/** The Swing API uses raw types!  This warning should be corrected in J2SE 6.0 **/", "+    // Raw type due to the use of raw types in Swing.", "+    Enumeration e = node.children();", "-      DefaultMutableTreeNode n = e.nextElement();", "+      DefaultMutableTreeNode n = (DefaultMutableTreeNode) e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "934954e7c87363107a3e32fa526764b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/JavaClass.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "          public Object evaluate(Object outer, Iterable<Object> args, RuntimeBindings bindings, Options options)        throws EvaluatorException", "signatureAfterChange": "          public Object evaluate(Object outer, Iterable<Object> args, RuntimeBindings bindings, Options options)        throws EvaluatorException", "diff": ["-      catch (SecurityException e) { /* ignore -- we can't relax accessibility */ }", "+      catch (SecurityException e) { debug.log(e); /* ignore -- we can't relax accessibility */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "934ab6c921fb8a5f2e354ecb1045ca5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 411, "methodNumberAfterChange": 406, "signatureBeforeChange": "    final private boolean jj_3R_276()", "signatureAfterChange": "    final private boolean jj_3R_277()", "diff": ["+", "+  final private boolean jj_3R_277() {", "+    if (jj_3R_293()) return true;", "+      if (jj_3R_311()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_276() {", "-    if (jj_3R_292()) return true;", "-      if (jj_3R_310()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9357385c534ed7ceb9e657c0c99910e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 362, "methodNumberAfterChange": 888, "signatureBeforeChange": "    final private boolean jj_3R_398()", "signatureAfterChange": "    final private boolean jj_3R_406()", "diff": ["-", "-  final private boolean jj_3R_398() {", "-    if (jj_scan_token(SLASH_ASSIGN)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_406() {", "+    if (jj_scan_token(SLASH_ASSIGN)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9360f369a3f5244e7d5b49ab9abd9b1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void removeListener(DebugListener listener)", "signatureAfterChange": "   public void removeListener(DebugListener listener)", "diff": ["+    _model.getBreakpointManager().removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9369705737307f0b58f49a032a40f5dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "16b3c525d206842b43311b11dbbe9241dc3d59d0", "commitAfterChange": "254a88f71deb049e50bd502fd76aea39364d706f", "methodNumberBeforeChange": 186, "methodNumberAfterChange": 186, "signatureBeforeChange": "   public void openFolder(DirectoryChooser chooser)", "signatureAfterChange": "   public void openFolder(DirectoryChooser chooser)", "diff": ["-    DrJava.getConfig().setSetting(OptionConstants.OPEN_FOLDER_RECURSIVE, _openRecursiveCheckBox.isSelected());", "+    DrJava.getConfig().setSetting(OptionConstants.OPEN_FOLDER_RECURSIVE, Boolean.valueOf(_openRecursiveCheckBox.isSelected()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "937f2a4231e964c6089f8b6d20ab3ee5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setValueAt(Object value, int row, int col)", "signatureAfterChange": "     public void setValueAt(Object value, int row, int col)", "diff": ["+        if (row < _watches.size())", "+          _debugger.removeWatch(row);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "938ae8c994477c3354123ab949bed473", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "de413eda4232899a577fad80816630301e25a4de", "commitAfterChange": "1510cae783655f3e20fbad13671dbf97008c3ec2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public RegionManager<MovingDocumentRegion> createFindResultsManager()", "signatureAfterChange": "   public RegionManager<MovingDocumentRegion> createFindResultsManager()", "diff": ["-    ", "-    // install new manager in all documents", "-    for (final OpenDefinitionsDocument doc: getOpenDefinitionsDocuments()) {", "-      doc.addFindResultsManager(rm);", "-    }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93ba5e958ccf2e7e2471fd09aa3228b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/DebugContextTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testThreadShouldDie() throws Exception", "signatureAfterChange": "   public void XXXtestThreadShouldDie() throws Exception", "diff": ["-  public void testThreadShouldDie() throws Exception {", "+  public void XXXtestThreadShouldDie() throws Exception {", "+    debug.logStart();", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93d7b7c749c24c3aef9523ac50c58359", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "2956623adadc4e9d463894cafecdb1725bf77715", "commitAfterChange": "74ef9fbe03efcd82eb19c1e26298c6b9ada091d1", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 57, "signatureBeforeChange": "    final public EnumDeclaration unmodifiedEnumDeclaration(ModifierFlags mf) throws ParseException", "signatureAfterChange": "    final public EnumDeclaration unmodifiedEnumDeclaration(ModifierFlags mf) throws ParseException", "diff": ["-    List<Node>   body;", "+    EnumDeclaration.EnumBody   body;", "-    body = enumBody(id.image);", "+    body = enumBody();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93f71fdfc3619e226ad401fb261835a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "8417ddcfd5dbe91145435687b878857a28a6fc40", "commitAfterChange": "19f352f86be54a48e35fa3c387c0a98798be1f17", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void addClassPath(String path)", "signatureAfterChange": "    public void addClassPath(String path)", "diff": ["+\t\tSystem.out.println(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93f8b8b0d413d8d5eaaec3c9420057e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 360, "methodNumberAfterChange": 766, "signatureBeforeChange": "    final private boolean jj_3R_249()", "signatureAfterChange": "    final private boolean jj_3R_276()", "diff": ["-  final private boolean jj_3R_249() {", "-    if (jj_3R_312()) return true;", "-      if (jj_3R_383()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_276() {", "+    if (jj_3R_314()) return true;", "+      if (jj_3R_315()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94263e33ee80d78d98b08db50aa475d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 807, "methodNumberAfterChange": 272, "signatureBeforeChange": "    final private boolean jj_3_64()", "signatureAfterChange": "    final private boolean jj_3_64()", "diff": ["+", "+  final private boolean jj_3_64() {", "+    if (jj_3R_78()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3_64() {", "-    if (jj_scan_token(HOOK)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9443dbf231b768408c4a82206cc9c81c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "131f4a6b191fd8f9333c37cfcb5f35e99a4f3353", "commitAfterChange": "bb94e0f2c11efec317996114a4387b80b4ef1758", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      protected JDialog createDialog()", "signatureAfterChange": "      protected JDialog createDialog()", "diff": ["-    ", "+    diag.setGlassPane(_glassPane);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "944b98c035b3c1ff6b05f33d4f171cd3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a3306545963d95b8e7f45728ebf6e03a4f716f60", "commitAfterChange": "cc830d3cfb835e44d2498e98729c28536d682aad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public DefinitionsDocument(Indenter i)", "signatureAfterChange": "    public DefinitionsDocument(Indenter i)", "diff": ["+    _helperCache = new Hashtable();", "+    _cacheInUse = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "947625ed5050f58ac41f895d00126102", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testGetSourceRootPackageThreeDeepValid() throws BadLocationException, IOException", "signatureAfterChange": "      public void testGetSourceRootPackageThreeDeepValid() throws BadLocationException, IOException", "diff": ["+    debug.logStart();", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "947b3fae3810544aa0bdd41f89ea7790", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 423, "methodNumberAfterChange": 414, "signatureBeforeChange": "    final private boolean jj_3R_246()", "signatureAfterChange": "    final private boolean jj_3R_247()", "diff": ["+", "+  final private boolean jj_3R_247() {", "+    if (jj_3R_259()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_292()) { jj_scanpos = xsp; break; }", "+    }", "-", "-  final private boolean jj_3R_246() {", "-    if (jj_3R_258()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_291()) { jj_scanpos = xsp; break; }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "947d1b0df8bbb7fd02cd0ad057318e73", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "     public Object visit(PreDecrement node)", "signatureAfterChange": "   public Class visit(PreDecrement node)", "diff": ["+   */", "+  public Class visit(PreDecrement node) {", "+    Node exp = node.getExpression();", "+    Class c  = (Class)exp.acceptVisitor(this);", "+    ", "+    // The type of the subexpression must be numeric", "+    if (!c.isPrimitive()   ||", "+        c == void.class    ||", "+        c == boolean.class) {", "+      throw new ExecutionError(\"pre.decrement.type\", node);", "+    }", "+    ", "+    // The subexpression must be a variable", "+    if (!exp.hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"pre.decrement.type\", node);", "+    }", "+    ", "+    node.setProperty(NodeProperties.TYPE, c);", "+    return c;", "+  }", "-     */", "-    public Object visit(PreDecrement node) {", "-        Node exp = node.getExpression();", "-        Class c  = (Class)exp.acceptVisitor(this);", "-", "-        // The type of the subexpression must be numeric", "-        if (!c.isPrimitive()   ||", "-            c == void.class    ||", "-            c == boolean.class) {", "-            throw new ExecutionError(\"pre.decrement.type\", node);", "-        }", "-", "-        // The subexpression must be a variable", "-        if (!exp.hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"pre.decrement.type\", node);", "-        }", "-", "-        node.setProperty(NodeProperties.TYPE, c);", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "947f2b5716ca37787ee3146ad7b99666", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JarOptionsDialog.java", "commitBeforeChange": "58507a81b298eda1c95791a37194e9f75288a8af", "commitAfterChange": "d752877ce93bbc024f3929677c06eafffafcc3e8", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public void setVisible(boolean vis)", "signatureAfterChange": "   public void setVisible(boolean vis)", "diff": ["+      addWindowListener(_windowListener);", "+      removeWindowFocusListener(_windowListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94878ccef6fe96fdfdd97781e5e1f8f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/BackSlashTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected void setUp()", "signatureAfterChange": " \t \tprotected void setUp()", "diff": ["-\t\t\tmodel0 = new ReducedModel();", "-\t\t\tmodel1 = new ReducedModel();", "-\t\t\tmodel2 = new ReducedModel();", "+\t\t\tmodel0 = new ReducedModelControl();", "+\t\t\tmodel1 = new ReducedModelControl();", "+\t\t\tmodel2 = new ReducedModelControl();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9489f4f2ba40fa4507cb1d64f0075213", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "875709ea758d694dda7555b8eeb2e15fa58e98c5", "commitAfterChange": "d29db164117e7452d6023bc6a73abe9d53f7d65b", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 88, "signatureBeforeChange": "   private Type handleIncrementExpression(UnaryExpression node)", "signatureAfterChange": "     private Type handleIncrementExpression(UnaryExpression node)", "diff": ["-   */", "-  private Type handleIncrementExpression(UnaryExpression node) {", "-    Type result = node.getExpression().acceptVisitor(this);", "-    try {", "-      Expression exp = ts.makePrimitive(node.getExpression());", "-      if (!(getType(exp) instanceof NumericType) || !hasVariableType(node.getExpression())) {", "+     */", "+    private Type handleIncrementExpression(UnaryExpression node) {", "+      Type result = check(node.getExpression());", "+      try {", "+        Expression exp = ts.makePrimitive(node.getExpression());", "+        ", "+        if (!(getType(exp) instanceof NumericType) || !hasVariableType(node.getExpression())) {", "+          throw new ExecutionError(\"increment.type\", node);", "+        }", "+        ", "+        setLeftExpression(node, exp);", "+        return setType(node, result);", "+      }", "+      catch (UnsupportedConversionException e) {", "-      ", "-      setLeftExpression(node, exp);", "-      return setType(node, result);", "-    catch (UnsupportedConversionException e) {", "-      throw new ExecutionError(\"increment.type\", node);", "-    }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b0fe72e30dc4d763f867867d42170e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "e28d42989a089b15d3a01e7dd19b426bc7021c04", "commitAfterChange": "261ca8732921a2a5c58b2777d5419ddfe2c261df", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testOneJUnitError() throws Exception", "signatureAfterChange": "   public void testOneJUnitError() throws Exception", "diff": ["+    _model.removeListener(listener);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94bba02f1bb06d21d909e4203f126ee3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 287, "methodNumberAfterChange": 752, "signatureBeforeChange": "    final private boolean jj_3R_399()", "signatureAfterChange": "    final private boolean jj_3R_314()", "diff": ["-", "-  final private boolean jj_3R_399() {", "-    if (jj_3R_412()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_434()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_314() {", "+    if (jj_3R_341()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_389()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94cbf67bfc51dd2828ec325010986c22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void defineConstant(String name, double value)", "signatureAfterChange": "   public void defineConstant(String name, double value)", "diff": ["-    ((InterpreterExtension)_djInterpreter).defineConstant(name, value);", "+    _djInterpreter.defineConstant(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94d70d93baca54da426f05b93c106f0c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessTest.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testCompileClasspathOKDifferentPackages()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileClasspathOKDifferentPackages()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    System.out.println(\"testCompileClasspathOKDifferentPackages()\");", "+//    System.out.println(\"testCompileClasspathOKDifferentPackages()\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94fd2f16307041c4b92a9acad9dae440", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "43b808b9e05f3378c0faae83fe4225562adc4c6e", "commitAfterChange": "723910d837b2fcdd9f4127559df4832f71fb62e8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testOneJUnitError() throws Exception", "signatureAfterChange": "   public void testOneJUnitError() throws Exception", "diff": ["-    TestShouldSucceedListener listener = new TestShouldSucceedListener();", "+    JUnitTestListener listener = new JUnitTestListener();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95217e4ddc7b372420d2fbaf61b615db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testCannotEditBeforePrompt() throws EditDocumentException", "signatureAfterChange": "   public void testCannotEditBeforePrompt() throws EditDocumentException", "diff": ["-//    _doc.acquireWriteLock();", "+    _doc.acquireWriteLock();", "-//    try {", "-    origLength = _doc.getLength();", "-    _doc.insertText(1, \"typed text\", InteractionsDocument.DEFAULT_STYLE);", "-//    }", "-//    finally { _doc.releaseWriteLock(); }", "+    try {", "+      origLength = _doc.getLength();", "+      _doc.insertText(1, \"typed text\", InteractionsDocument.DEFAULT_STYLE);", "+    }", "+    finally { _doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95281c28d801d42f99eaf07ef5eb613d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public synchronized void shutdown()", "signatureAfterChange": "   public synchronized void shutdown()", "diff": ["-      try {", "-        _removeAllDebugInterpreters();", "-        // removeAllBreakpoints();", "-        removeAllWatches();", "-      }", "-      catch (DebugException de) {", "-        // Couldn't remove breakpoints/watches", "-        _log(\"Could not remove breakpoints/watches: \" + de);", "-      }", "+      _removeAllDebugInterpreters();", "+        try {", "+          _updateWatches();", "+        }", "+        catch (DebugException de) {", "+          // Couldn't remove breakpoints/watches", "+          _log(\"Could not remove breakpoints/watches or update watches: \" + de);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95387fda442d748cbb22bd5fdb558843", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 513, "methodNumberAfterChange": 396, "signatureBeforeChange": "    final private boolean jj_3R_270()", "signatureAfterChange": "    final private boolean jj_3R_274()", "diff": ["-  final private boolean jj_3R_270() {", "-    if (jj_3R_340()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_102()) return true;", "+", "+  final private boolean jj_3R_274() {", "+    if (jj_3R_345()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "953cb05f6f7e04fddeba8e166aa2d9b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractSlaveJVM.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public final void quit()", "signatureAfterChange": "   public final synchronized void quit()", "diff": ["-  public final void quit() {", "+  public final synchronized void quit() {", "+    _log.log(this + \".quit() called\");", "-          synchronized(_slaveJVMLock) { while (! _slaveExited) _slaveJVMLock.wait(); }", "-//          SecurityManager mgr = System.getSecurityManager();", "-//          Utilities.showDebug(\"Got the security manager. mgr = \" + mgr);", "-//          if (mgr instanceof PreventExitSecurityManager) {", "-//            PreventExitSecurityManager pemgr = (PreventExitSecurityManager) System.getSecurityManager();", "-//            pemgr.exitVM(0);", "-//          }", "-//          else ", "+          synchronized(_slaveJVMLock) { ", "+            while (! _slaveExited) {", "+              _log.log(\"Waiting for \" + AbstractSlaveJVM.this + \".quit() to exit\");", "+              _slaveJVMLock.wait(); ", "+            }", "+          }", "+          _log.log(AbstractSlaveJVM.this + \" calling System.exit(0)\");", "-//          Utilities.showDebug(\"Quit failed\");", "+          _log.log(this + \".quit() failed!\");", "-    } ", "+    }", "+    _log.log(this + \".quit() RMI call exited\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "954535fa544cf7acc6277a49686678f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "96bf5a5cd2d40db16b0b6c02c789d4b37a3a9876", "commitAfterChange": "0bdf9ca1ec4730da3a7aefde2e61b8646efd7da7", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 251, "signatureBeforeChange": "      private void _openProjectUpdate()", "signatureAfterChange": "      private void _openProjectUpdate()", "diff": ["-      _junitOpenProjectFilesAction.setEnabled(true);", "+      _junitProjectAction.setEnabled(true);", "-      _compileButton.setToolTipText(\"<html>Compile all documents in the project.<br>External files are excluded.</html>\");", "+//      _compileButton.setToolTipText(\"<html>Compile all documents in the project.source tree<br>Auxiliary and external files are excluded.</html>\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "955ea194c33acd2b11569738d35461ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/MethodContext.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public Method lookupMethod(Node prefix, String mname, Class[] params)     throws NoSuchMethodException", "signatureAfterChange": "   public Method lookupMethod(Node prefix, String mname, Class[] params)     throws NoSuchMethodException", "diff": ["-    Class  c = (Class)NodeProperties.getType(prefix);", "+    Class  c = NodeProperties.getType(prefix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95684ef7f9437aa3c1a33d69a48efee4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testGotoLine2() throws BadLocationException", "signatureAfterChange": "   public void testGotoLine2() throws BadLocationException", "diff": ["-    defModel.insertString(0, s, null);", "-    defModel.gotoLine(2);", "-    assertEquals(\"#0.0\", 5, defModel.getCurrentLocation());", "+    _defModel.insertString(0, s, null);", "+    _defModel.gotoLine(2);", "+    assertEquals(\"#0.0\", 5, _defModel.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "956a2020e5a7f154ab8f1f6b4a140c12", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/Configuration.java", "commitBeforeChange": "7748aa0d84a52f8872bfaa33a4544c287e2cb350", "commitAfterChange": "32a6a91e5456ec4c66a7ab498cfc3e6e0c6e281e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public String getJSR14Location()", "signatureAfterChange": "   public String getJSR14Location()", "diff": ["-    return (String) _properties.get(JSR14_LOCATION_KEY);", "+    return _properties.getProperty(JSR14_LOCATION_KEY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9570f6c4897d90812e5bebe6aada6691", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "6dc623f6cf84dd216f6949b3ebdd52b19c8912b4", "commitAfterChange": "3bfda0ffd8a22eda2f2daab913b510305e1ef801", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "   static boolean handleCommandLineArgs(String[] args)", "signatureAfterChange": "   static boolean handleCommandLineArgs(String[] args)", "diff": ["-    _log.log(\"\\t_filesToOpen cleared\");", "-    _filesToOpen.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "957265c2b3f5b61bb36950e21c52648e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      public ReducedModelState stateAtRelLocation(int dist)", "signatureAfterChange": "      public ReducedModelState stateAtRelLocation(int dist)", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }  ", "+    finally { releaseReadLock(); }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "959311326b645e803b8357fd1c7e264e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "commitAfterChange": "9ce155a1f3e34352032d821032cb2dc70024460f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   @Override public Type visit(SuperMethodCall node)", "signatureAfterChange": "   @Override public Type visit(SuperMethodCall node)", "diff": ["-      // TODO: Check for uncaught exceptions", "+      checkThrownExceptions(inv.thrown(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95b3d8524a6fcbe568d60103e8e23a70", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testGotoLine2() throws BadLocationException", "signatureAfterChange": "   public void testGotoLine2() throws BadLocationException", "diff": ["-    _defModel.insertString(0, s, null);", "-    _defModel.gotoLine(2);", "-    assertEquals(\"#0.0\", 5, _defModel.getCurrentLocation());", "+    _doc.insertString(0, s, null);", "+    _doc.gotoLine(2);", "+    assertEquals(\"#0.0\", 5, _doc.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95bca5dfbc876c55fd1420ab7e63ee01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 620, "methodNumberAfterChange": 702, "signatureBeforeChange": "    final private boolean jj_3R_308()", "signatureAfterChange": "    final private boolean jj_3R_530()", "diff": ["-", "-  final private boolean jj_3R_308() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_345()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_346()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_530() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_544()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_545()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95ff253596c9ebdb9684690585a4d8fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/Log.java", "commitBeforeChange": "1b05cad162e450ba33df65e0a529a1efe0335a5f", "commitAfterChange": "cca0ffe1eec9ac2e8e86b42f0190ddd2334546c1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public synchronized void logTime(String s, Throwable t)", "signatureAfterChange": "   public synchronized void logTime(String s, Throwable t)", "diff": ["+      t.printStackTrace(pw);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9614026f11b299c3a93f1da2534f23ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "38d431471777ac8e0fa48e5f04830082f87a84ac", "commitAfterChange": "0a31738e2a608cffca114c6f81b02f002a0e82e1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public static FullVersion guessVersion(File f, JDKDescriptor desc)", "signatureAfterChange": "      public static FullVersion guessVersion(File f, JDKDescriptor desc)", "diff": ["-    String vendor = \"\";", "+    String vendor = \"oracle\";", "+      }", "+      else if (name.startsWith(\"openjdk\")) {", "+        parsedVersion = name.substring(7); ", "+        result = JavaVersion.parseFullVersion(parsedVersion, vendor, vendor, f);", "+        JDKToolsLibrary.msg(\"For name starting with 'openjdk', parsedVersion = '\" + parsedVersion + \"' result = '\" + result + \"'\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "961b42e08d860d88799c741ddf270a95", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyAdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public Void forConcreteMethodDef(ConcreteMethodDef that)", "signatureAfterChange": "   public Void forConcreteMethodDef(ConcreteMethodDef that)", "diff": ["-    that.getBody().visit(new BodyBodyAdvancedVisitor(md, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    that.getBody().visit(new BodyBodyAdvancedVisitor(md, _file, _package, _importedFiles, _importedPackages, ", "+                                                     _classNamesInThisFile, continuations, _innerClassesToBeParsed));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "962f01a184ccd7e5e5b15eab47907052", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CompoundUndoManager.java", "commitBeforeChange": "af6ac1303ad90db685f17f710be85771c95a718d", "commitAfterChange": "54a2d5af359edd99cce3e2b74ded93b4c8c0d9e9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public int startCompoundEdit()", "signatureAfterChange": "   public int startCompoundEdit()", "diff": ["-    if (logEnabled) {", "-      LOG.log(\"startCompoundEdit \"+_compoundEdits, new RuntimeException());", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9634bd5135ad9b21dee4b3298cd0a9f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/BooleanOptionComponent.java", "commitBeforeChange": "6815df02bf2c6da2982073900e33dbad7bfa8424", "commitAfterChange": "0ef216d80b2e9cc63f2ef7b2c23490480ef77851", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public BooleanOptionComponent (BooleanOption opt, String text,                                  Frame parent, String description)", "signatureAfterChange": "   public BooleanOptionComponent(BooleanOption opt, String text,                                 Frame parent, String description)", "diff": ["-  public BooleanOptionComponent (BooleanOption opt, String text,", "-                                 Frame parent, String description) {", "-    this(opt, \"\", parent);", "+  public BooleanOptionComponent(BooleanOption opt, String text,", "+                                Frame parent, String description) {", "+    this(opt, text, parent);", "-    _jcb.setText(text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96358d8366dc8198706653d914080e87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 319, "methodNumberAfterChange": 742, "signatureBeforeChange": "    final private boolean jj_3R_539()", "signatureAfterChange": "    final private boolean jj_3R_504()", "diff": ["-", "-  final private boolean jj_3R_539() {", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    if (jj_3R_557()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_561()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_504() {", "+    if (jj_3R_520()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_561()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "963776e0ddf956e7a125291213cc3856", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 466, "methodNumberAfterChange": 445, "signatureBeforeChange": "    final private boolean jj_3R_218()", "signatureAfterChange": "    final private boolean jj_3R_225()", "diff": ["+", "+  final private boolean jj_3R_225() {", "+    if (jj_scan_token(HOOK)) return true;", "+    if (jj_3R_98()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_150()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_218() {", "-    if (jj_scan_token(HOOK)) return true;", "-    if (jj_3R_97()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_148()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "963cb909d2c853ff34aff0293927fa5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 393, "methodNumberAfterChange": 345, "signatureBeforeChange": "    final private boolean jj_3R_315()", "signatureAfterChange": "    final private boolean jj_3R_317()", "diff": ["-", "-  final private boolean jj_3R_315() {", "-    if (jj_3R_320()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_335()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_317() {", "+    if (jj_3R_322()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_337()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96481febfe1acd29b0c45f1c0b5a967c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 773, "methodNumberAfterChange": 480, "signatureBeforeChange": "    final private boolean jj_3R_517()", "signatureAfterChange": "    final private boolean jj_3R_586()", "diff": ["+", "+  final private boolean jj_3R_586() {", "+      if (jj_3R_589()) { jj_scanpos = xsp; break; }", "+    if (jj_3R_590()) jj_scanpos = xsp;", "-", "-  final private boolean jj_3R_517() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_536()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_537()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "966bad19ef2521f6771e9ede715b5083", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentAdapter.java", "commitBeforeChange": "1acb63fa1c578959b54f9766299c6e0a8865f601", "commitAfterChange": "fa78ee7a06602f123abf33b8aef0005c93bb3efa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void insertText(int offs, String str, String style)", "signatureAfterChange": "   public void insertText(int offs, String str, String style)", "diff": ["-    try { if (_condition.canInsertText(offs, str, style)) forceInsertText(offs, str, style); }", "+    try { if (_condition.canInsertText(offs)) forceInsertText(offs, str, style); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96705282edd6ca2b5747b091c9c1470f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "85538cb484722f3ee8b8f52d4f19defc02bd67d5", "commitAfterChange": "ec727abc662388138ad4bf94694974ef5e13db3c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "    private void _setupDisplayPanel ( ConfigPanel panel)", "signatureAfterChange": "    private void _setupDisplayPanel ( ConfigPanel panel)", "diff": ["-    panel.addComponent( new ToolbarOptionComponent ( \"Toolbar button options\", this));", "-    panel.addComponent( new BooleanOptionComponent ( OptionConstants.LINEENUM_ENABLED, \"Line number enumeration\", this));", "+    panel.addComponent( new BooleanOptionComponent ( OptionConstants.LINEENUM_ENABLED, \"Line Number Enumeration\", this));", "+    panel.addComponent( new ToolbarOptionComponent ( \"Toolbar Buttons\", this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "967a3075e780ded74bb97e061636b520", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "d57a4715eeda5394b496008be220f6252b47b950", "commitAfterChange": "ac02f569f5916c295bec9f11458dcf6db5964244", "methodNumberBeforeChange": 291, "methodNumberAfterChange": 293, "signatureBeforeChange": "     private ConcreteOpenDefDoc(File f, File dir, long stamp)", "signatureAfterChange": "     private ConcreteOpenDefDoc(File f, File dir, long stamp)", "diff": ["-      _browserHistoryManager = new SubsetRegionManager<DocumentRegion>(AbstractGlobalModel.this.getBrowserHistoryManager());", "+      _browserRegions = new HashSet<BrowserDocumentRegion>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "969a5a8abbd9ce3d45d26b80e967b6e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhrase.java", "commitBeforeChange": "558f3e76b0939d235eb8771fbc6a284d80a06f72", "commitAfterChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc, int pos)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc, BraceReduction reducedModel, int pos)", "diff": ["-  boolean applyRule(DefinitionsDocument doc, int pos) {", "+  boolean applyRule(DefinitionsDocument doc, BraceReduction reducedModel, int pos) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96a07117b167d100b0e2b07c2be1ba90", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 613, "methodNumberAfterChange": 616, "signatureBeforeChange": "    final private boolean jj_3R_375()", "signatureAfterChange": "    final private boolean jj_3R_376()", "diff": ["+  final private boolean jj_3R_376() {", "+    if (jj_3R_168()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_359()) return true;", "-    if (jj_3R_167()) return true;", "-    if (jj_3R_358()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96a0e3a639e11d8dd58fcabe20fcb7c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/PreviewFrame.java", "commitBeforeChange": "8a3aaf6e3fe6fafb27249a8ad4b2c013ef4ae05a", "commitAfterChange": "102797244429ae58868d0037b49467f5a00bbd6a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _printAction.putValue(Action.SHORT_DESCRIPTION, \"Print\");", "+    //_printAction.putValue(Action.SHORT_DESCRIPTION, \"Print\");", "-", "+    //    _printAction.putValue(Action.SMALL_ICON, _getIcon(\"Print16.gif\"));", "-", "-    _goToPageAction.putValue(Action.SHORT_DESCRIPTION, \"Goto Page\");", "-", "-    _pageTextField.setAction(_goToPageAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96a559304a617bfc704aeb8ba0fdfe5f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "b155114812a8cbcc9237269e7062e3599ab1f574", "commitAfterChange": "201b599e7e14dfbbe8e927af829c37bc841f5d12", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "   public void interpreterReady(final File wd)", "signatureAfterChange": "   public void interpreterReady(final File wd)", "diff": ["+    debug.logStart();", "-          _pane.setCaretPosition(_document.getLength());", "+          if (_pane != null) _pane.setCaretPosition(_document.getLength());", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96ad64513c45f43a0f21313b4e91e9d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BraceTest.java", "commitBeforeChange": "a454f078c900245b418db671925f6207d6f1ff60", "commitAfterChange": "533552b81f1020221bb3fe1df1f370a4168db503", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testMakeBraceFailure()", "signatureAfterChange": "   public void testMakeBraceFailure()", "diff": ["-      brace = Brace.MakeBrace(\"k\", ReducedToken.FREE);", "+      brace = Brace.MakeBrace(\"k\", FREE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96ae38752f894fb13a162b2b69350870", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "a797200d44688f476bb3b782947a0efc580dd5e8", "commitAfterChange": "1de5cb95fee280565741d04f9d0c9ba9427f28c2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Object interpret(String s) throws ExceptionReturnedException", "signatureAfterChange": "   public Object interpret(String s) throws ExceptionReturnedException", "diff": ["-    catch (Throwable ie) {", "-      //System.err.print(new Date() + \": \");", "-      //System.err.println(ie);", "-      //ie.printStackTrace();", "-      //System.err.println(\"\\n\");", "-      //throw new RuntimeException(ie.toString());", "-", "-      throw new ExceptionReturnedException(ie);", "-    }", "+//    catch (Throwable ie) {", "+//      System.err.print(new Date() + \": \");", "+//      System.err.println(ie);", "+//      ie.printStackTrace();", "+//      System.err.println(\"\\n\");", "+//      throw new RuntimeException(ie.toString());", "+//", "+////      throw new ExceptionReturnedException(ie);", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96b0c33fcadb605a9a15e5305a8b666e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 383, "methodNumberAfterChange": 361, "signatureBeforeChange": "    final private boolean jj_3R_249()", "signatureAfterChange": "    final private boolean jj_3R_275()", "diff": ["-  final private boolean jj_3R_249() {", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_308()) jj_scanpos = xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_309()) { jj_scanpos = xsp; break; }", "-    }", "+", "+  final private boolean jj_3R_275() {", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_344()) jj_scanpos = xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_345()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96b3436cb3d050586d1c5bcd90ae170a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "6207c0d4b83ee23d6d4624c513f270e47c43cc83", "commitAfterChange": "f4c8eb851d98f4da2479f32fb767dac4b3a40e1c", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 166, "signatureBeforeChange": "   public OpenDefinitionsDocument newTestCase(String name, boolean makeSetUp, boolean makeTearDown)", "signatureAfterChange": "   public OpenDefinitionsDocument newTestCase(String name, boolean makeSetUp, boolean makeTearDown)", "diff": ["-    boolean elementary = (DrJava.getConfig().getSetting(LANGUAGE_LEVEL) == 1);", "+    boolean elementary = ", "+      (DrJava.getConfig().getSetting(LANGUAGE_LEVEL) == OptionConstants.ELEMENTARY_LEVEL) ||", "+      (DrJava.getConfig().getSetting(LANGUAGE_LEVEL) == OptionConstants.FUNCTIONAL_JAVA_LEVEL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96ec853705e3916fbf8fd003d4dea7e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": "   protected void _close()", "signatureAfterChange": "   protected void _close()", "diff": ["-    if (_docBeingTested != null) {", "-      _docBeingTested.setJUnitErrorModel(new JUnitErrorModel());", "-    }", "-    _frame.updateErrorListeners();", "+    //formerly, this would also reset the JUnitErrorModel, but that doesn't seem to be necessary"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9701a1e0263d7c6805e1c9bf0facf0ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 716, "methodNumberAfterChange": 648, "signatureBeforeChange": "    final private boolean jj_3R_396()", "signatureAfterChange": "    final private boolean jj_3R_471()", "diff": ["+", "+  final private boolean jj_3R_471() {", "+    if (jj_scan_token(PLUS)) return true;", "+    if (jj_3R_455()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_396() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_3R_345()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9728a6490bd46260db092a9e040b943e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "4cc63aff8a22c85ad1d78de9f4e0b9395e7d4e72", "commitAfterChange": "e330f3abbead97d3e3ac8751976bab81936096c2", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "\r \r     public void testIsAdvancedFile()", "signatureAfterChange": "      public void testIsAdvancedFile()", "diff": ["-\r", "-    public void testIsAdvancedFile() {\r", "-      _llv = new ElementaryVisitor(new File(\"elementary.dj0\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>(), null);\r", "-      assertFalse(\"This is an elementary file\", _isAdvancedFile());\r", "-      _llv = new IntermediateVisitor(new File(\"intermediate.dj1\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>(), null);\r", "-      assertFalse(\"This is an intermediate file\", _isAdvancedFile());\r", "-      _llv = new AdvancedVisitor(new File(\"advanced.dj2\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>(), null);\r", "-      assertTrue(\"This is an advanced file\", _isAdvancedFile());\r", "-      _llv = new ElementaryVisitor(new File(\"full.java\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>(), null);\r", "-      assertFalse(\"This is a full file\", _isAdvancedFile());\r", "-    }\r", "+", "+    public void testIsAdvancedFile() {", "+      _llv = new ElementaryVisitor(new File(\"elementary.dj0\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>());", "+      assertFalse(\"This is an elementary file\", _isAdvancedFile());", "+      _llv = new IntermediateVisitor(new File(\"intermediate.dj1\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>());", "+      assertFalse(\"This is an intermediate file\", _isAdvancedFile());", "+      _llv = new AdvancedVisitor(new File(\"advanced.dj2\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>());", "+      assertTrue(\"This is an advanced file\", _isAdvancedFile());", "+      _llv = new ElementaryVisitor(new File(\"full.java\"), new LinkedList<Pair<String, JExpressionIF>>(), _s, new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>(), new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>(), new Hashtable<SymbolData, LanguageLevelVisitor>());", "+      assertFalse(\"This is a full file\", _isAdvancedFile());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9737ac15d78eb3e1a69a31ab42445eb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "4ff3b419fc61aa60e60ddc360a0c79269d4527c2", "commitAfterChange": "b05444f0049567ef7fdf6f83b0e6e8f8afaaa2b7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public static LinkedList packageExplore(String prefix, File root)", "signatureAfterChange": "   public static LinkedList packageExplore(String prefix, File root)", "diff": ["-    class prefixAndFile {", "+    class PrefixAndFile {", "-      public prefixAndFile(String prefix, File root) {", "+      public PrefixAndFile(String prefix, File root) {", "-    gj.util.Stack<prefixAndFile> working = new gj.util.Stack<prefixAndFile>();", "-    working.push(new prefixAndFile(prefix, root));", "+    gj.util.Stack<PrefixAndFile> working = new gj.util.Stack<PrefixAndFile>();", "+    working.push(new PrefixAndFile(prefix, root));", "-      prefixAndFile current = working.pop();", "+      PrefixAndFile current = working.pop();", "-        prefixAndFile paf;", "+        PrefixAndFile paf;", "-          paf = new prefixAndFile(dir.getName(), dir);", "+          paf = new PrefixAndFile(dir.getName(), dir);", "-          paf = new prefixAndFile(current.prefix + \".\" + dir.getName(), dir);", "+          paf = new PrefixAndFile(current.prefix + \".\" + dir.getName(), dir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "974d636007e6d3d9939629cb98e64dcc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 771, "methodNumberAfterChange": 428, "signatureBeforeChange": "    final private boolean jj_3R_177()", "signatureAfterChange": "    final private boolean jj_3R_188()", "diff": ["+", "+  final private boolean jj_3R_188() {", "+    if (jj_3R_221()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_257()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_177() {", "-    if (jj_3R_227()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_228()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "978a1fb7a63a6a9ab57f19e3ef028b55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 751, "methodNumberAfterChange": 698, "signatureBeforeChange": "    final private boolean jj_3R_604()", "signatureAfterChange": "    final private boolean jj_3R_605()", "diff": ["-", "-  final private boolean jj_3R_604() {", "-    if (jj_3R_605()) {", "-    if (jj_3R_606()) return true;", "+", "+  final private boolean jj_3R_605() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_606()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_607()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "978c84d65499e6fd02ebf032eea4a24b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void saveHistory(FileSaveSelector selector, String editedVersion) throws IOException", "signatureAfterChange": "   public void saveHistory(FileSaveSelector selector, String editedVersion) throws IOException", "diff": ["-      readLock();  // does not modify state of document including history", "+      acquireReadLock();  // does not modify state of document including history", "-      finally { readUnlock(); }", "+      finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97b14916d6b2e372a1c2a69946a8c653", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtilTest.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testCharSequenceIterable()", "signatureAfterChange": "      public void testCharSequenceIterable()", "diff": ["-    assertTrue(isEmpty(charSequenceIterable(\"\")));", "+    assertTrue(isEmpty(asIterable(\"\")));", "-    Iterator<Character> iter = charSequenceIterable(\"Happy day\").iterator();", "+    Iterator<Character> iter = asIterable(\"Happy day\").iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97c35d5ba0c12c483b44763b0334a395", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "6e331e9844f73cd6f98ef32e034b0175583aeba8", "commitAfterChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public DefinitionsDocument get(OpenDefinitionsDocument odd) throws IOException, FileMovedException", "signatureAfterChange": "   public DefinitionsDocument get(OpenDefinitionsDocument odd) throws IOException, FileMovedException", "diff": ["+        table.remove(odd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97d74f2bd5ca0d1a6519fcbb62eea987", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "5b5854a74ae4104fe98919ec137a82ddfe0b03d0", "commitAfterChange": "1ee842fd21d172ce428a3353cc0f74580e95bff8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ConfigFrame(MainFrame frame)", "signatureAfterChange": "   public ConfigFrame(MainFrame frame)", "diff": ["+    _dirChooser = new DirectoryChooser();", "+    _dirChooser.setSelectedDirectory(_getWorkDir());", "+    _dirChooser.setTitle(\"Select\");", "+    _dirChooser.setApproveButtonText(\"Select\");", "+    _dirChooser.setMultiSelectionEnabled(false);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97e4c5824fd08f380c172f7a9e6aca45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testGetLine1() throws BadLocationException", "signatureAfterChange": "   public void testGetLine1() throws BadLocationException", "diff": ["-    _defModel.insertString(0, s, null);", "-    _defModel.setCurrentLocation(2);", "-    assertEquals(\"#0.0\", 2, _defModel.getCurrentLine());", "+    _doc.insertString(0, s, null);", "+    _doc.setCurrentLocation(2);", "+    assertEquals(\"#0.0\", 2, _doc.getCurrentLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97f4e453f49ca9ce0b9c8c04dea28493", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 650, "methodNumberAfterChange": 626, "signatureBeforeChange": "    final private boolean jj_3R_422()", "signatureAfterChange": "    final private boolean jj_3R_325()", "diff": ["+", "+  final private boolean jj_3R_325() {", "+    if (jj_scan_token(ENUM)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_384()) jj_scanpos = xsp;", "+    if (jj_3R_385()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_422() {", "-    if (jj_scan_token(ENUM)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_486()) jj_scanpos = xsp;", "-    if (jj_3R_487()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9806b75c211ce09ee9efbe9ed8279ecc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 622, "methodNumberAfterChange": 626, "signatureBeforeChange": "    final private boolean jj_3R_412()", "signatureAfterChange": "    final private boolean jj_3R_416()", "diff": ["-", "-  final private boolean jj_3R_412() {", "-    if (jj_scan_token(ASSIGN)) return true;", "-    if (jj_3R_90()) return true;", "+", "+  final private boolean jj_3R_416() {", "+    if (jj_scan_token(ASSIGN)) return true;", "+    if (jj_3R_91()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9808e5d4355fc74796b268c761e78d7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 380, "signatureBeforeChange": "    final private boolean jj_3R_491()", "signatureAfterChange": "    final private boolean jj_3R_498()", "diff": ["-", "-  final private boolean jj_3R_491() {", "-    if (jj_3R_496()) return true;", "-    if (jj_3R_280()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_498() {", "+    if (jj_3R_503()) return true;", "+    if (jj_3R_288()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9867d8594b65e2d59a477f3e8f2ca52f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 451, "methodNumberAfterChange": 455, "signatureBeforeChange": "    final private boolean jj_3R_388()", "signatureAfterChange": "    final private boolean jj_3R_395()", "diff": ["-  final private boolean jj_3R_388() {", "+  final private boolean jj_3R_395() {", "-    if (jj_3R_410()) return true;", "+    if (jj_3R_417()) return true;", "-      if (jj_3R_411()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_418()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "988458ff073f40e7ebdeedda9978c4b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public Vector<DebugStackData> getCurrentStackFrameData();", "signatureAfterChange": "   public Vector<DebugStackData> getCurrentStackFrameData() throws DebugException;", "diff": ["-  public Vector<DebugStackData> getCurrentStackFrameData();", "+  public Vector<DebugStackData> getCurrentStackFrameData() throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "988be86cd458e1b862c096f19fb6aa9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void tearDown() throws Exception", "signatureAfterChange": "      public void tearDown() throws Exception", "diff": ["-    Utilities.invokeAndWait(new Runnable() {", "+    Utilities.invokeLater(new Runnable() {", "+        _log.log(\"Main Frame disposed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9897c56044d48899bf42677cef242af3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "06a5c45ef1fc363387e831a72bae96256df629e8", "commitAfterChange": "d38c322133f95b0654ce8d1107bb215e7f56de2e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void addClassPath(String path)", "signatureAfterChange": "      public void addProjectClassPath(URL path)", "diff": ["-  public void addClassPath(String path) {", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (! _enabled) return;", "-", "+  ", "+  public void addProjectClassPath(URL path){", "+    if(! _enabled) return;", "-", "-    try {", "-//      System.err.println(\"addclasspath to \" + _interpreterJVM() + \": \" + path);", "-//      System.err.println(\"full classpath: \" + getClasspath());", "-      _interpreterJVM().addClassPath(path);", "+    ", "+    try{", "+      _interpreterJVM().addProjectClassPath(path);", "-    catch (RemoteException re) {", "+    catch(RemoteException re){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "989bcabe823a4250fc237ac14fa75d06", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 318, "methodNumberAfterChange": 662, "signatureBeforeChange": "    final private boolean jj_3R_491()", "signatureAfterChange": "    final private boolean jj_3R_224()", "diff": ["-  final private boolean jj_3R_491() {", "-    if (jj_3R_241()) return true;", "-      if (jj_3R_502()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_224() {", "+    if (jj_3R_247()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_248()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "989c3974a1458698fb9f4a7232c9f36a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 611, "methodNumberAfterChange": 607, "signatureBeforeChange": "    final private boolean jj_3R_433()", "signatureAfterChange": "    final private boolean jj_3R_435()", "diff": ["-  final private boolean jj_3R_433() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_454()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_455()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_435() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_456()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_457()) return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98aedb6b7ef91842578c1aff28a24f49", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f9981b5126ddf4f32d24773a4d0aa52292b60f44", "commitAfterChange": "b905bf9540e16d07e22d509564906f39b61368bc", "methodNumberBeforeChange": 750, "methodNumberAfterChange": 751, "signatureBeforeChange": "      public void projectRunnableChanged()", "signatureAfterChange": "      public void projectRunnableChanged()", "diff": ["-      _runProjectAction.setEnabled(_model.isProjectActive());", "+      _runProjectAction.setEnabled(isProjectActiveAndMainClassSet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98b736efadabc58a1ee078bb45c56823", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-hj/edu/rice/cs/drjava/model/compiler/HjCompiler.java", "commitBeforeChange": "503a4c8c883d0c0e1badd33935b5da20910f7033", "commitAfterChange": "bc15f82b93b6ffb78da3a3058742b383768e7aa6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public java.util.List<? extends DJError> compile(java.util.List<? extends File> files,                                                    java.util.List<? extends File> classPath,                                                     java.util.List<? extends File> sourcePath,                                                    File destination,                                                     java.util.List<? extends File> bootClassPath,                                                    String sourceVersion,                                                    boolean showWarnings)", "signatureAfterChange": "   public java.util.List<? extends DJError> compile(java.util.List<? extends File> files,                                                    java.util.List<? extends File> classPath,                                                     java.util.List<? extends File> sourcePath,                                                    File destination,                                                     java.util.List<? extends File> bootClassPath,                                                    String sourceVersion,                                                    boolean showWarnings)", "diff": ["-      for(String cmd: testCommand) System.out.print(\" \"+cmd);", "-      System.out.println();", "+      // for(String cmd: testCommand) System.out.print(\" \"+cmd);", "+      // System.out.println();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98d7b0fd4844b76d0c7af5a9ae0ab19b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected boolean _checkInteraction(String toCheck)", "signatureAfterChange": "   protected boolean _checkInteraction(String toCheck)", "diff": ["-    String result;", "-      result = _interactionsProcessor.preProcess(toCheck);", "+      _interactionsProcessor.preProcess(toCheck);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98e493af5bd56ac3a224c94d41ee6598", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 98, "signatureBeforeChange": "          public void testGetSymbolData()", "signatureAfterChange": "          public void testGetSymbolData()", "diff": ["-      assertFalse(\"Should not be a continuation\", sd1.isContinuation());", "+      assertFalse(\"Should not be a continuation\", sd1.isContinuation());  // There is a pre-existing class file Wow!", "-      SymbolData sd2 = new SymbolData(\"fully.qualified.Woah\");", "-      _llv.symbolTable.put(\"fully.qualified.Woah\", sd2);", "+      SymbolData sd2 = new SymbolData(\"fully.qualified.Symbol\");", "+      _llv.symbolTable.put(\"fully.qualified.Symbolh\", sd2);", "-      result = _llv.getSymbolData(\"fully.qualified.Woah\", JExprParser.NO_SOURCE_INFO, true, false);", "+      result = _llv.getSymbolData(\"fully.qualified.Symbol\", JExprParser.NO_SOURCE_INFO, true, false);", "-      assertFalse(\"sd2 should be resolved\", sd2.isContinuation());", "+      assertTrue(\"sd2 should be resolved\", sd2.isContinuation());", "+      _llv.symbolTable.put(\"fully.qualified.Woah.Wow\", sd1);", "+      _llv.symbolTable.remove(\"Wow\");", "+      sd1.setIsContinuation(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98e5047053567dfaae8d7254fac2c4da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testCancelOpenMultipleFiles()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCancelOpenMultipleFiles() throws BadLocationException, IOException", "diff": ["-   */", "-  public void testCancelOpenMultipleFiles()", "-    throws BadLocationException, IOException", "-  {", "+  /** Initiates a file open, but cancels. */", "+  public void testCancelOpenMultipleFiles() throws BadLocationException, IOException {", "-      public void fileOpened(OpenDefinitionsDocument doc) {", "-        openCount++;", "-      }", "+      public void fileOpened(OpenDefinitionsDocument doc) { openCount++; }", "+    ", "+    _log.log(\"testCancelOpenMultipleFiles completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9904f02e3b6e863d414a497f46028520", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 777, "methodNumberAfterChange": 762, "signatureBeforeChange": "    final private boolean jj_3R_179()", "signatureAfterChange": "    final private boolean jj_3R_184()", "diff": ["+", "+  final private boolean jj_3R_184() {", "+    if (jj_scan_token(LBRACKET)) return true;", "+    if (jj_3R_97()) return true;", "+    if (jj_scan_token(RBRACKET)) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_179() {", "-    if (jj_3R_94()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "990cabc6fdd5767948aa8e473222179e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DJError.java", "commitBeforeChange": "f09079b576a626b69c1cf6a20aa2d21acb9dbff4", "commitAfterChange": "860321004d56043513d3359d4091aee37ccad183", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DJError(File file, int lineNumber, int startColumn, String message, boolean isWarning)", "signatureAfterChange": "   public DJError(File file, int lineNumber, int startColumn, String message, boolean isWarning)", "diff": ["-    if (message != null && (message.indexOf(\"CompilerError\") >= 0)) throw new UnexpectedException(message);", "+    // need to precisely match the CompilerError message, otherwise a file name containing", "+    // \"CompilerError\" may trigger an UnexpectedException (see bug 2872797)", "+    if (message != null && message.startsWith(\"Compile exception: sun.tools.java.CompilerError\"))", "+      throw new UnexpectedException(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991e665c99a21b46cfb51efc1ebf8afe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhrase.java", "commitBeforeChange": "38d431471777ac8e0fa48e5f04830082f87a84ac", "commitAfterChange": "0a31738e2a608cffca114c6f81b02f002a0e82e1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public QuestionNewParenPhrase(IndentRule yesRule, IndentRule noRule)", "signatureAfterChange": "   public QuestionNewParenPhrase(IndentRule yesRule, IndentRule noRule)", "diff": ["+    Arrays.sort(LOCAL_DELIMS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99507730693890fea6ac594250a662ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public TypeData forClassImportStatement(ClassImportStatement that)", "signatureAfterChange": "   public TypeData forClassImportStatement(ClassImportStatement that)", "diff": ["-    final TypeData cWord_result = getSymbolData(name.toString(), that, true, true);", "-    if (cWord_result != null) { ", "-      if (! cWord_result.hasModifier(\"public\")) {", "-        _addError(cWord_result.getName() + \" is not public, and thus cannot be seen here\", that);", "+    final TypeData cWordRes = getSymbolData(name.toString(), that, true, true);", "+    if (cWordRes != null) { ", "+      if (! cWordRes.hasModifier(\"public\")) {", "+        _addError(cWordRes.getName() + \" is not public, and thus cannot be seen here\", that);", "-    return forClassImportStatementOnly(that, cWord_result);", "+    return forClassImportStatementOnly(that, cWordRes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "995862879b19b858a03ce23abd4bb58d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/PopupConsole.java", "commitBeforeChange": "130f9e7a6442dd68cfc11d101e35a474ea759d8a", "commitAfterChange": "ac188710e667e0471c9bf96ef1dfafd4a8e52eff", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private String showDialog(Frame parentFrame)", "signatureAfterChange": "   private String showDialog(Frame parentFrame)", "diff": ["-//    _doc.append(input + \"\\n\", _doc.getDefaultStyle());", "+    _doc.append(\"Console Input: \" + input + \"\\n\", _doc.getDefaultStyle());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "996ee765759617f2101a66097a785dc8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeClassLoader.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   protected Class findClass(String name) throws ClassNotFoundException", "signatureAfterChange": "   protected Class findClass(String name) throws ClassNotFoundException", "diff": ["-      return (Class)classes.get(name);", "+      return classes.get(name);", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "997ec20415ef22c7b4cce7537c8b517f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 720, "methodNumberAfterChange": 698, "signatureBeforeChange": "    final private boolean jj_3R_114()", "signatureAfterChange": "    final private boolean jj_3R_115()", "diff": ["+", "+  final private boolean jj_3R_115() {", "+    if (jj_scan_token(FOR)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_94()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_116()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_171()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_114() {", "-    if (jj_scan_token(FOR)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_92()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_115()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_182()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9983e126e9daec5c36fdd5b634d0c58f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "     public Object visit(MultiplyExpression node)", "signatureAfterChange": "   public Class visit(MultiplyExpression node)", "diff": ["+   */", "+  public Class visit(MultiplyExpression node) {", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ln.acceptVisitor(this);", "+    rn.acceptVisitor(this);", "+    Class c = visitNumericExpression(node, \"multiplication.type\");", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.multiply(c,", "+                                       ln.getProperty(NodeProperties.VALUE),", "+                                       rn.getProperty(NodeProperties.VALUE)));", "+    }", "+    return c;", "+  }", "-     */", "-    public Object visit(MultiplyExpression node) {", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-        ln.acceptVisitor(this);", "-        rn.acceptVisitor(this);", "-        Class c = visitNumericExpression(node, \"multiplication.type\");", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.multiply(c,", "-                                               ln.getProperty(NodeProperties.VALUE),", "-                                               rn.getProperty(NodeProperties.VALUE)));", "-        }", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "998e1d4d5b64832f5aecf68838e14b36", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "3c9da7b6f33927502f9cee032fa48adae4a189de", "commitAfterChange": "5b8db3ab6ffa6e60a3e348c2f56419eeafa67e87", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void compileEnded()", "signatureAfterChange": "     public void compileEnded()", "diff": ["-      synchronized (this) { notify(); }", "+      synchronized (_compileLock) { ", "+        _compileDone = true;", "+        _compileLock.notify(); ", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "999f3142e4edcbe666369ede2cce35a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 356, "methodNumberAfterChange": 808, "signatureBeforeChange": "    final private boolean jj_3R_344()", "signatureAfterChange": "    final private boolean jj_3R_234()", "diff": ["-", "-  final private boolean jj_3R_344() {", "-    if (jj_3R_353()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_364()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_234() {", "+    if (jj_3R_273()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_274()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99c44faba7530bdf041a9c5a41814974", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 602, "methodNumberAfterChange": 605, "signatureBeforeChange": "    final private boolean jj_3R_371()", "signatureAfterChange": "    final private boolean jj_3R_372()", "diff": ["+", "+  final private boolean jj_3R_372() {", "+    if (jj_3R_89()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_377()) jj_scanpos = xsp;", "+    return false;", "+  }", "-  final private boolean jj_3R_371() {", "-    if (jj_3R_88()) return true;", "-    if (jj_3R_376()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99ca0ea1101c8d975ac38ff1ac67bbc8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "cb029f12bd6c2fdcdba02605492a4baf5ca47e02", "commitAfterChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "methodNumberBeforeChange": 190, "methodNumberAfterChange": 190, "signatureBeforeChange": "          public void interactionsResetting()", "signatureAfterChange": "          public void interactionsResetting()", "diff": ["+      if (_model.getDebugManager() != null) {", "+        _toggleDebuggerAction.setEnabled(false);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d4d9ad4cadc7a6ddf953a7979e4518", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "c3000f96cc22558352558f3f8f7ae9d7ae4aa055", "commitAfterChange": "efc2ed142355e643bf14d4b8f0aee3c3eaaea680", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   protected static String _testClassCall(String s)", "signatureAfterChange": "   protected static String _testClassCall(String s)", "diff": ["-    ArgumentTokenizer t = new ArgumentTokenizer();", "-    ArrayList<String> args = t.tokenize(s, true);", "+    List<String> args = ArgumentTokenizer.tokenize(s, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d7f113d14992e358b3bbb0febcb753", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ef93e6cc3a79f29ed28debb1108f1338b9a974ad", "commitAfterChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "methodNumberBeforeChange": 423, "methodNumberAfterChange": 423, "signatureBeforeChange": "   public File getSaveFile(JFileChooser jfc) throws OperationCanceledException", "signatureAfterChange": "   public File getSaveFile(JFileChooser jfc) throws OperationCanceledException", "diff": ["-    // TODO: Why are we working with _saveChooser first, then call jfc.showSaveDialog(this)? (mgricken)", "-    _saveChooser.removeChoosableFileFilter(_projectFilter);", "-    _saveChooser.removeChoosableFileFilter(_javaSourceFilter);", "-    _saveChooser.setFileFilter(_javaSourceFilter);", "+    jfc.removeChoosableFileFilter(_projectFilter);", "+    jfc.removeChoosableFileFilter(_javaSourceFilter);", "+    jfc.removeChoosableFileFilter(_unfilteredJavaSourceFilter);", "+    jfc.setFileFilter(_javaSourceFilter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99dda31ab0d3e5dd88f90a7b748324f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "56a5d7ef4f332df9b45adf95f71d664c61575e1a", "commitAfterChange": "010ae297b5b09284b0dfa287aa524a83e41fa50d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testNone()", "signatureAfterChange": "   public void testNone()", "diff": ["-    DrJava.openCommandLineFiles(_mf, new String[0]);", "-    // ListModel<DefinitionsDocument> docs =", "-    // Wouldn't that be nice?", "+//    Logger.log(\"testNone complete\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99e1dff0c085988a0e346fb5789f119f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 689, "methodNumberAfterChange": 690, "signatureBeforeChange": "    final private boolean jj_3R_420()", "signatureAfterChange": "    final private boolean jj_3R_422()", "diff": ["-", "-  final private boolean jj_3R_420() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_434()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_435()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_422() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_436()) { jj_scanpos = xsp; break; }", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_3R_437()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99e3ed7343b1ba4831cbc47c455b1ac5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "              public List filter(List threads)", "signatureAfterChange": "              public List filter(List threads)", "diff": ["-      public List filter(List threads){", "+      public List filter(List threads) {", "-          ", "-          if( !flag ){", "+", "+          if(!flag) {", "-        while(iterator.hasNext()){", "+        while(iterator.hasNext()) {", "-        ", "-        return (List)retList;", "+", "+        return retList;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99f29dae2d9ce4180fd84a479128bfde", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "1018be24b33ba74b1be6da8d72dc97e6545e20b1", "commitAfterChange": "c0c2e54a62410a429f0ffcedb26fd38c6f82937b", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void testGetSourceRootPackageThreeDeepValidRelative()     throws BadLocationException, IOException, InvalidPackageException", "signatureAfterChange": "   public void testGetSourceRootPackageThreeDeepValidRelative()     throws BadLocationException, IOException, InvalidPackageException", "diff": ["-    assertEquals(\"source root\", baseTempDir, roots[0]);", "+    assertEquals(\"source root\", baseTempDir.getCanonicalFile(),", "+                 roots[0].getCanonicalFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a11b924559f5c644c20fec625ce5d2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavadocDialog.java", "commitBeforeChange": "dd4842ca8ba89600798d5ff08666825edfadfb74", "commitAfterChange": "3e6dcdfe0dc2a3a2b00da441b478134258a2740f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JavadocDialog(JFrame frame)", "signatureAfterChange": "   public JavadocDialog(JFrame frame)", "diff": ["+    chooser.setOwner(_dialog);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a12af13d7c14048ec3c46e27ef2c444", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ReaderWriterLockTest.java", "commitBeforeChange": "7933cc364884763a44a085994870596faa04b316", "commitAfterChange": "b978cac1d85997e83464382e4a499c19d736223c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testMultipleReadersAndWriters() throws InterruptedException", "signatureAfterChange": "   public void testMultipleReadersAndWriters() throws InterruptedException", "diff": ["-    final StringBuffer buf = new StringBuffer();", "+    final StringBuilder buf = new StringBuilder();", "-    assertTrue(\"w1 writes should happen in order\",", "-               output.indexOf(\"w1 w1 w1 \") != -1);", "-    assertTrue(\"w2 writes should happen in order\",", "-               output.indexOf(\"w2 w2 w2 \") != -1);", "-    assertTrue(\"w1 writes should happen in order\",", "-               output.indexOf(\"w3 w3 w3 \") != -1);", "+    assertTrue(\"w1 writes should happen in order\", output.indexOf(\"w1 w1 w1 \") != -1);", "+    assertTrue(\"w2 writes should happen in order\",  output.indexOf(\"w2 w2 w2 \") != -1);", "+    assertTrue(\"w1 writes should happen in order\", output.indexOf(\"w3 w3 w3 \") != -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a33f936dbd4f538de90323edd16ba59", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d33d42f5f56aa9f97fa7ee5954a0170706bf34dc", "commitAfterChange": "d94a1a3c2d24d89ea1f580460a5e45b2a0d432b1", "methodNumberBeforeChange": 240, "methodNumberAfterChange": 241, "signatureBeforeChange": "      private void _editProject()", "signatureAfterChange": "     private void _editProject(ProjectPropertiesFrame ppf)", "diff": ["-  private void _editProject() {", "-    // Create project properties frame from global model state if we haven't yet", "-    if (_projectPropertiesFrame == null) {", "-      _projectPropertiesFrame = new ProjectPropertiesFrame(MainFrame.this);", "-    }", "-    _projectPropertiesFrame.setVisible(true);", "-    _projectPropertiesFrame.reset();", "-    _projectPropertiesFrame.toFront();", "+  /** Edit new project frame ppf (if not null); otherwise edit the project in the global model. */  ", "+  private void _editProject(ProjectPropertiesFrame ppf) {", "+    if (ppf == null) ", "+      // Create new project properties frame consistent with the current project state in the global model", "+      ppf = new ProjectPropertiesFrame(MainFrame.this);", "+    ppf.setVisible(true);", "+    ppf.reset();", "+    ppf.toFront();  // ppf actions save state of ppf in global model"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a39a5b1a30e27c96adcc81e7ff34824", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "83ec4c1ee83807974f1120df6a09cd37da57c105", "commitAfterChange": "1f3058becb78ba58ec6d1c56724efee045364cc2", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   public int _getLineStartPos(final int pos)", "signatureAfterChange": "   public int _getLineStartPos(final int pos)", "diff": ["-    int dist;", "-    ", "-    dist = _reduced.getDistToStart(0);", "+    int dist = _reduced.getDistToStart(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a3ad33a03114a0361b0a24d8709ac21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 575, "methodNumberAfterChange": 708, "signatureBeforeChange": "    final private boolean jj_3_77()", "signatureAfterChange": "    final private boolean jj_3_77()", "diff": ["-  final private boolean jj_3_77() {", "+", "+  final private boolean jj_3_77() {", "+    if (jj_3R_114()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a4263c527f8197654a0fe325e32e122", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/ScrollableListDialog.java", "commitBeforeChange": "34cf34867ac9dce276fc29b1ebccbc3b04558150", "commitAfterChange": "a84367d6c7dd279d0237f04d04b6df32e0ca3dea", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r     public ScrollableListDialog<T> build()", "signatureAfterChange": "\r     public ScrollableListDialog<T> build()", "diff": ["-                                         _width, _height, _icon, _fitToScreen, _buttons, _selectable);\r", "+                                         _width, _height, _icon, _fitToScreen, _buttons, _additional, _selectable);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a4ff3f9d345813db23284a9911543db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 615, "methodNumberAfterChange": 617, "signatureBeforeChange": "    final private boolean jj_3R_564()", "signatureAfterChange": "    final private boolean jj_3R_568()", "diff": ["-  final private boolean jj_3R_564() {", "+", "+  final private boolean jj_3R_568() {", "-    if (jj_3R_571()) {", "+    if (jj_3R_574()) {", "-      if (jj_3R_572()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_575()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a7e6a0faabe5033634c8fba0146baa1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 390, "methodNumberAfterChange": 319, "signatureBeforeChange": "    final private boolean jj_3R_538()", "signatureAfterChange": "    final private boolean jj_3R_539()", "diff": ["+    if (jj_scan_token(IDENTIFIER)) return true;", "+    if (jj_3R_557()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_561()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_538() {", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    if (jj_3R_556()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_560()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a9966926dada0b9fe3ed5fe54a28f91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "97f966af08ae6bec968f68d8b2fce6c5531a12b8", "commitAfterChange": "d4f8b5e1e15fc2c34ba6969d4ef7bdb04cc8916b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void tearDown()", "signatureAfterChange": "   protected void tearDown()", "diff": ["-    ConfigurationTool.CONFIG.setSetting(OptionConstants.INDENT_LEVEL,configIndent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a99f8a28415c38a45257a1460f3707b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlusTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testAddSpacesMidLine() throws javax.swing.text.BadLocationException", "signatureAfterChange": "   public void testAddSpacesMidLine() throws javax.swing.text.BadLocationException", "diff": ["-    assertEquals(\"foo\\n   bar\", _doc.getText(0, 10));", "+    assertEquals(\"foo\\n   bar\", _doc.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a9bf8dd20e084ded9b41d8bb7d4e07e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "32513407e5f8f41a21eb0336c92af1269f67953c", "commitAfterChange": "c1462f7ce0a3f1454f1dfa5e0426218ea77c9146", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private void _updateButtons()", "signatureAfterChange": "   private void _updateButtons()", "diff": ["-        System.out.println(\"breakpoint enabled = \"+bp.isEnabled());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aa3554e51184c348ac0169c9c721e2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testStaticWatches() throws Exception", "signatureAfterChange": "   public void testStaticWatches() throws Exception", "diff": ["-      System.out.println(\"----testStaticWatches----\");", "+      printStream.println(\"----testStaticWatches----\");", "-    _debugger.toggleBreakpoint(doc, index, 14);", "+    _debugger.toggleBreakpoint(doc, index, 14, true);", "+", "-", "+    Utilities.clearEventQueue();", "+    debugListener.assertWatchSetCount(5);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aa554af015d983d193ca275fd5d19c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 741, "methodNumberAfterChange": 720, "signatureBeforeChange": "    final private boolean jj_3R_301()", "signatureAfterChange": "    final private boolean jj_3R_262()", "diff": ["+", "+  final private boolean jj_3R_262() {", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_116()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_171()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_301() {", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_115()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_182()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aaf20485f9da8e725a28bad0a4a8b91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 309, "methodNumberAfterChange": 555, "signatureBeforeChange": "    final private boolean jj_3R_256()", "signatureAfterChange": "    final private boolean jj_3R_258()", "diff": ["-  final private boolean jj_3R_256() {", "-    if (jj_scan_token(ENUM)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    if (jj_3R_422()) jj_scanpos = xsp;", "-    if (jj_scan_token(LBRACE)) return true;", "-    if (jj_3R_423()) return true;", "-    if (jj_scan_token(RBRACE)) return true;", "-    return false;", "-  }", "+", "+    if (jj_scan_token(ENUM)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_424()) jj_scanpos = xsp;", "+    if (jj_scan_token(LBRACE)) return true;", "+    if (jj_3R_425()) return true;", "+    if (jj_scan_token(RBRACE)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ab96508c2e86a357ae512e3ca0fa2d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DefaultOptionMap.java", "commitBeforeChange": "5a85b19daac40f9227c1d37126d83286ba866a85", "commitAfterChange": "9ab3c647e4bf2cceb929c5db766abfe1f2993d4e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "        public <T> T setOption(Option<T> o, T val)", "signatureAfterChange": "        public <T> T setOption(Option<T> o, T val)", "diff": ["-\tsuper.put((OptionParser) o,val); // jsr14 is dumb.  we have to cast.  Every OptionParser<T> is OptionParser<Object>", "+\tsuper.put(o,val); // jsr14 is dumb.  we have to cast.  Every OptionParser<T> is OptionParser<Object>"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ac3b06dc093226b2d10c177f6915c1c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testMultipleFiles() throws BadLocationException", "signatureAfterChange": "   public void testMultipleFiles() throws BadLocationException", "diff": ["-    _log.log(\"testMultipleFiles completed\");", "+    _log.log(this + \".testMultipleFiles() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9afb6b0a40f47f3d19a0855565eb47a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public void testSaveAllSaveCorrectFiles()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAllSaveCorrectFiles()     throws BadLocationException, IOException", "diff": ["-    assertEquals(\"contents of saved file1\", FOO_TEXT, FileOps.readFileAsString(file1));", "-    assertEquals(\"contents of saved file2\", BAR_TEXT, FileOps.readFileAsString(file2));", "-    assertEquals(\"contents of saved file3\", \"third document contents\", FileOps.readFileAsString(file3));", "+    assertEquals(\"contents of saved file1\", FOO_TEXT, IOUtil.toString(file1));", "+    assertEquals(\"contents of saved file2\", BAR_TEXT, IOUtil.toString(file2));", "+    assertEquals(\"contents of saved file3\", \"third document contents\", IOUtil.toString(file3));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b17a928cd92d25016403d7de9910b01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 583, "methodNumberAfterChange": 491, "signatureBeforeChange": "    final private boolean jj_3R_317()", "signatureAfterChange": "    final private boolean jj_3R_321()", "diff": ["-  final private boolean jj_3R_317() {", "+", "+  final private boolean jj_3R_321() {", "-    if (jj_3R_94()) return true;", "+    if (jj_3R_97()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b57d6dfed16e60e05c320d09e8f4305", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/NullFile.java", "commitBeforeChange": "2aadb81a716e2a196f82baa127c28e3225664fab", "commitAfterChange": "c4ec4fbaa86590f5d9d73c067159d69b14149c37", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public boolean equals(Object o)", "signatureAfterChange": "   public boolean equals(Object o)", "diff": ["-  public boolean equals(Object o) {", "-    if (o == null || o.getClass() != getClass()) return false;", "-    return o == this;", "-  } ", "+  public boolean equals(Object o) { return o == this; } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b614eda89466a76d784b08525dbb821", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/ConfirmCheckBoxDialog.java", "commitBeforeChange": "6d214db24b68a17f17e0cc8f3030a6df6dfa9e3d", "commitAfterChange": "b1335a3b17a414ac9a5047d93a0387148d0d6ac9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public int show()", "signatureAfterChange": "   public int show()", "diff": ["+    MainFrame.setPopupLoc(_dialog);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b61f5bd42baabb5cca383dd54fec202", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "a337078b1e7938251beaa72f0246f230af053938", "commitAfterChange": "e77819730452c3827849a15d038524cb581005aa", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   private void _setupInteractionsPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupInteractionsPanel(ConfigPanel panel)", "diff": ["+", "+    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.SMART_RUN_FOR_APPLETS_AND_PROGRAMS, ", "+                                                         \"Smart Run ('java') Command\", this,", "+                                                         \"<html>Whether the Run button (or 'java' command in the<br>\"+", "+                                                         \"Interactions Pane) should automatically detect<br>\"+", "+                                                         \"applets and ACM Java Task Force programs (subclasses<br>\"+", "+                                                         \"of acm.program.Program).</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b6a99f3d32af43cf1aa7e7656a0c911", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "682bd0a2b528d852a57206c89ed5bb4a5b484c14", "commitAfterChange": "c8a7a8a9d3d089ab42661ede7d141969c6ed2339", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public String[] getCollapsedPaths()", "signatureAfterChange": "   public String[] getCollapsedPaths()", "diff": ["-    return list.toArray(new String[0]);", "+    return list.toArray(new String[list.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b8f6cee1722ee423f476eb1f78962d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 631, "methodNumberAfterChange": 614, "signatureBeforeChange": "    final private boolean jj_3R_295()", "signatureAfterChange": "    final private boolean jj_3R_297()", "diff": ["+", "+  final private boolean jj_3R_297() {", "+    if (jj_3R_307()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_308()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_295() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_306()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_307()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b958bdee0b2d0302e8b9f436de79987", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 605, "methodNumberAfterChange": 447, "signatureBeforeChange": "    final private boolean jj_3R_157()", "signatureAfterChange": "    final private boolean jj_3R_391()", "diff": ["+", "+  final private boolean jj_3R_391() {", "+    if (jj_3R_101()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_400()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_157() {", "-    if (jj_3R_107()) return true;", "-      if (jj_3R_205()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ba648096837743d038ee33ae106543c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessTest.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testCompileAllDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "diff": ["-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(false);", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bad1ab7dcc4f4a956c275a1e2738d97", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 846, "methodNumberAfterChange": 834, "signatureBeforeChange": "    final private boolean jj_3R_530()", "signatureAfterChange": "    final private boolean jj_3R_585()", "diff": ["+", "+  final private boolean jj_3R_585() {", "+    if (jj_3R_554()) return true;", "-  final private boolean jj_3R_530() {", "-    if (jj_3R_540()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bb7e6c20c373538e3df06ce490d6963", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "commitAfterChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void _setupTabPanes()", "signatureAfterChange": "   public void _setupTabPanes()", "diff": ["-    _currentStackMethod = \"\";", "-    _currentStackLine = 1;", "-//    _stackTable.addMouseListener(new StackMouseAdapter());", "+    _stackTable.addMouseListener(new StackMouseAdapter());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bba94cce10c8390f692f67c3b26969e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 368, "methodNumberAfterChange": 341, "signatureBeforeChange": "    final private boolean jj_3R_442()", "signatureAfterChange": "    final private boolean jj_3R_457()", "diff": ["-", "-  final private boolean jj_3R_442() {", "-    if (jj_scan_token(CATCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_420()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_151()) return true;", "-    return false;", "-  }", "+    if (jj_scan_token(CATCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_435()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_155()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bbc36fd5acb89caacdd0877e9260cdf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 391, "methodNumberAfterChange": 338, "signatureBeforeChange": "    final private boolean jj_3R_295()", "signatureAfterChange": "    final private boolean jj_3R_217()", "diff": ["+", "+  final private boolean jj_3R_217() {", "+    if (jj_3R_257()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_258()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_295() {", "-    if (jj_3R_306()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_340()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bbd5c2454b8bfb19723de0e75641976", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/PopupConsole.java", "commitBeforeChange": "701cda038bdbb4505f738d5f2728e5888b8608b3", "commitAfterChange": "a2c3a24c2af61d289658b8fde0de718a948c97d9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "   protected String showDialog(Frame parentFrame)", "signatureAfterChange": "   protected String showDialog(Frame parentFrame)", "diff": ["-    return _inputBox.getText();", "+    String input = _inputBox.getText();", "+    if (inputAborted) {", "+      inputAborted = true;", "+      throw new IllegalStateException(\"System.in aborted\");", "+    }", "+    _doc.append(input + '\\n', _doc.getDefaultStyle());", "+    _console.append(input + '\\n', _console.getDefaultStyle());", "+    return input;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bc5f280b0392f75234bb909ef1e954f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 641, "methodNumberAfterChange": 252, "signatureBeforeChange": "    final private boolean jj_3R_83()", "signatureAfterChange": "    final private boolean jj_3R_459()", "diff": ["+  final private boolean jj_3R_459() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_467()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_468()) return true;", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_83() {", "-    if (jj_3R_123()) {", "-    if (jj_3R_124()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9be0726decb7128663926024daf3a260", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 772, "methodNumberAfterChange": 759, "signatureBeforeChange": "    final private boolean jj_3R_527()", "signatureAfterChange": "    final private boolean jj_3R_530()", "diff": ["-  final private boolean jj_3R_527() {", "-    if (jj_3R_544()) return true;", "+  final private boolean jj_3R_530() {", "+    if (jj_3R_547()) return true;", "-      if (jj_3R_545()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_548()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c1e261298f8b20c5ab88ae41527db5d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "65add9d9f0de9278803d6c9a77b3294a4ab082f3", "commitAfterChange": "1ad8d0f619615b40333c2ef2eca24506e4639e2b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testInfiniteLoop() throws Exception", "signatureAfterChange": "   public void testInfiniteLoop() throws Exception", "diff": ["-        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "+        fail(\"compile failed: \" + getCompilerErrorString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c30b1e7fc1edf66b170a12c534fca0f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "commitAfterChange": "8417ddcfd5dbe91145435687b878857a28a6fc40", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "       private void tester(Pair[] cases)", "signatureAfterChange": "  \tprivate void tester(Pair[] cases)", "diff": ["-", "-    private void tester(Pair[] cases)", "+\tprivate void tester(Pair[] cases)", "-\tfor (int i = 0; i < cases.length; i++)", "-\t    {", "-\t\tObject out = _interpreter.interpret(cases[i].first() + \";\");", "-\t\tassertEquals(cases[i].first() + \" interpretation wrong!\",", "-\t\t\t     cases[i].second(),", "-\t\t\t     out);", "-\t    }", "+\t\t\tfor (int i = 0; i < cases.length; i++)", "+\t\t\t\t{", "+\t\t\t\t\tObject out = _interpreter.interpret(cases[i].first());", "+\t\t\t\t\tassertEquals(cases[i].first() + \" interpretation wrong!\",", "+\t\t\t\t\t\t\t\t\t\t\t cases[i].second(),", "+\t\t\t\t\t\t\t\t\t\t\t out);\t\t\t\t\t", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c35aa4344f79a1ce46a327d1ffd26d6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public Void forAnonymousClassInstantiation(AnonymousClassInstantiation e)", "signatureAfterChange": "   public Void forAnonymousClassInstantiation(AnonymousClassInstantiation e)", "diff": ["-    if (_isElementaryFile() || _isIntermediateFile()) {", "-      String className = Data.dollarSignsToDots(e.getType().getName());", "-      writeAccessors(sd, baseIndent);", "-      String valueToStringName = writeValueToString(sd, baseIndent);", "-      String valueEqualsName = writeValueEquals(sd, baseIndent);", "-      String valueHashCodeName = writeValueHashCode(sd, baseIndent, valueEqualsName);", "-      writeToString(sd, baseIndent, valueToStringName);", "-      if (!_safeSupportCode) { writeAnonEquals(baseIndent);}", "-      else { writeEquals(className, sd, baseIndent, valueEqualsName); }", "-      writeHashCode(className, sd, baseIndent, true, valueHashCodeName);", "-      _writeToFileOut(indentString(baseIndent, 0));", "-", "-    }", "+//    if (_isElementaryFile() || _isIntermediateFile()) {", "+    String className = Data.dollarSignsToDots(e.getType().getName());", "+    writeAccessors(sd, baseIndent);", "+    String valueToStringName = writeValueToString(sd, baseIndent);", "+    String valueEqualsName = writeValueEquals(sd, baseIndent);", "+    String valueHashCodeName = writeValueHashCode(sd, baseIndent, valueEqualsName);", "+    writeToString(sd, baseIndent, valueToStringName);", "+    if (!_safeSupportCode) { writeAnonEquals(baseIndent);}", "+    else { writeEquals(className, sd, baseIndent, valueEqualsName); }", "+    writeHashCode(className, sd, baseIndent, true, valueHashCodeName);", "+    _writeToFileOut(indentString(baseIndent, 0));", "+    ", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c4bcfe862c76a1c82bb70bc1dde8e13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 679, "methodNumberAfterChange": 672, "signatureBeforeChange": "    final private boolean jj_3R_379()", "signatureAfterChange": "    final private boolean jj_3R_382()", "diff": ["-", "-  final private boolean jj_3R_379() {", "-    if (jj_3R_88()) return true;", "+  final private boolean jj_3R_382() {", "+    if (jj_3R_89()) return true;", "-    if (jj_3R_381()) jj_scanpos = xsp;", "+    if (jj_3R_384()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c4cb99c3326946a409f6369a2745dca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InteractionsProcessor.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public String preProcess(String s) throws ParseException", "signatureAfterChange": "   public String preProcess(String s) throws ParseException", "diff": ["-    JavaASTVisitor typeEraser = (JavaASTVisitor) new TypeEraser();", "+    JavaASTVisitor typeEraser = new TypeEraser();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c6aada7a013207e1a48c7919d287405", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 393, "methodNumberAfterChange": 426, "signatureBeforeChange": "    final private boolean jj_3R_595()", "signatureAfterChange": "    final private boolean jj_3R_307()", "diff": ["+  final private boolean jj_3R_307() {", "+    if (jj_scan_token(INCREMENT)) return true;", "+    if (jj_3R_87()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_595() {", "-    if (jj_scan_token(CASE)) return true;", "-    if (jj_3R_87()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c703a54a6f0c0f2a2dcfde6f66acbf3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocumentTest.java", "commitBeforeChange": "b6c98c2729d523213cf8ee6bbc9636575f25da66", "commitAfterChange": "4bdaddc150401ace7c16f01fa5c54525f5642ceb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected void setUp() throws Exception", "signatureAfterChange": "   protected void setUp() throws Exception", "diff": ["-    _doc = new InteractionsDocument(new InteractionsDJDocument(), _testBanner);", "+    _doc = new InteractionsDocument(new InteractionsDJDocument());", "+    _doc.setBanner(TEST_BANNER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c75d00d1b8ce7036c020bbe3d32d805", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/TreeUtilitiesTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public void testClassToType()", "signatureAfterChange": "    public void testClassToType()", "diff": ["-    assertEquals(\"\",true,new IntType().", "+    assertEquals(\"\",true,new IntTypeName().", "-    assertEquals(\"\",true,new DoubleType().", "+    assertEquals(\"\",true,new DoubleTypeName().", "-    assertEquals(\"\",true,new LongType().", "+    assertEquals(\"\",true,new LongTypeName().", "-    assertEquals(\"\",true,new FloatType().", "+    assertEquals(\"\",true,new FloatTypeName().", "-    assertEquals(\"\",true,new CharType().", "+    assertEquals(\"\",true,new CharTypeName().", "-    assertEquals(\"\",true,new ByteType().", "+    assertEquals(\"\",true,new ByteTypeName().", "-    assertEquals(\"\",true,new ShortType().", "+    assertEquals(\"\",true,new ShortTypeName().", "-    assertEquals(\"\",true,new BooleanType().", "+    assertEquals(\"\",true,new BooleanTypeName().", "-    assertEquals(\"\",true,new VoidType().", "+    assertEquals(\"\",true,new VoidTypeName().", "-    assertEquals(\"\",true,new ArrayType(new IntType(),1).", "+    assertEquals(\"\",true,new ArrayTypeName(new IntTypeName(),1).", "-    assertEquals(\"\",true,new ReferenceType(Integer.class.getName()).", "+    assertEquals(\"\",true,new ReferenceTypeName(Integer.class.getName())."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c8d7392b828923a18a4237e3fc2dff9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d49cbdbddda87e8c405e1611614405c2c7bd203d", "commitAfterChange": "be38b2b11517729e454db4fb5ce1085dc1eb228a", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 76, "signatureBeforeChange": "      public void compileEnded()", "signatureAfterChange": "      public void compileEnded()", "diff": ["-      _compileAction.setEnabled(true);", "+      //_compileAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c98fa3b51fd95032868988f526314b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 80, "signatureBeforeChange": "      synchronized void currThreadSet(final DebugThreadData thread)", "signatureAfterChange": "      synchronized void currThreadSet(final DebugThreadData thread)", "diff": ["-    _model.printDebugMessage(\"The current thread has been set.\");", "+    printMessage(\"The current thread has been set.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c9c36b4c509d94392462e85f85a06a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "dd4842ca8ba89600798d5ff08666825edfadfb74", "commitAfterChange": "3e6dcdfe0dc2a3a2b00da441b478134258a2740f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void setFrameState(String s)", "signatureAfterChange": "   public void setFrameState(String s)", "diff": ["-      MainFrame.setPopupLoc(this, _owner);", "+      setLocationRelativeTo(_owner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ca3b6bafc10e5a7895f054f1967bdfa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 380, "methodNumberAfterChange": 358, "signatureBeforeChange": "    final private boolean jj_3R_214()", "signatureAfterChange": "    final private boolean jj_3R_210()", "diff": ["-  final private boolean jj_3R_214() {", "-    if (jj_scan_token(CONTINUE)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(77)) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(84)) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_268()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_210() {", "+    if (jj_scan_token(BREAK)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(77)) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(84)) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_266()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cbdfe54901cf497facba8308adfe732", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "a4c5974c7021519528f8f810c260f2782693140d", "commitAfterChange": "1315d6a0a86dff003075278cfb7be802b0cc3b67", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "   private void _setUpStatusBar()", "signatureAfterChange": "   private void _setUpStatusBar()", "diff": ["-    _fileNameField = new JTextField();", "-    _fileNameField.setEditable(false);", "+    _fileNameField = new JLabel();", "+    _fileNameField.setFont(_fileNameField.getFont().deriveFont(Font.PLAIN));", "+    _fileNameField.setBorder(new javax.swing.border.EmptyBorder(2,2,2,2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cd3ca40564002a387c7920cc72b5ea4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JarOptionsDialog.java", "commitBeforeChange": "acb6486cf73ee6fa26fd3913d48fe9f46d7610e4", "commitAfterChange": "c0463418af643463955237ff1428c0079e36defe", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private void _loadSettings()", "signatureAfterChange": "   private void _loadSettings()", "diff": ["+    _jarAll.setSelected(((f & JAR_ALL) != 0));", "+    _customManifest.setSelected(((f & CUSTOM_MANIFEST) != 0));", "+    ", "+    LOG.log(\"_customManifestText set off of \"+_model);", "+    _customManifestText = _model.getCustomManifest();", "+    LOG.log(\"\\tto: \"+_customManifestText);", "+    if(_customManifestText == null)", "+      _customManifestText = \"\";", "+    _setEnableCustomManifest(_jarClasses.isSelected());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cdac64f887c42006e07b5fd9bc43bbd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 420, "methodNumberAfterChange": 520, "signatureBeforeChange": "    final private boolean jj_3R_187()", "signatureAfterChange": "    final private boolean jj_3R_97()", "diff": ["-", "-  final private boolean jj_3R_187() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_262()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_263()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_97() {", "+    if (jj_3R_153()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_154()) return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ce368b8009e3894aec8c34f865a2fdb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public Boolean value(Object o1, Object o2, Object o3, Object o4)", "signatureAfterChange": "     public boolean contains(Object o1, Object o2, Object o3, Object o4)", "diff": ["-    public Boolean value(Object o1, Object o2, Object o3) { return true; }", "-    public Boolean value(Object o1, Object o2, Object o3, Object o4) { return true; }", "+    public boolean contains(Object o1, Object o2, Object o3) { return true; }", "+    public boolean contains(Object o1, Object o2, Object o3, Object o4) { return true; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cef49c1a3b219c3af56adea40060902", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "7933cc364884763a44a085994870596faa04b316", "commitAfterChange": "b978cac1d85997e83464382e4a499c19d736223c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      public void testSystemIn()", "signatureAfterChange": "      public void testSystemIn()", "diff": ["-    final StringBuffer buf = new StringBuffer();", "+    final StringBuilder buf = new StringBuilder();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d0bb4d4adc42a862db705b09a2b960f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 318, "methodNumberAfterChange": 304, "signatureBeforeChange": "    final private boolean jj_3R_375()", "signatureAfterChange": "    final private boolean jj_3R_377()", "diff": ["+", "+  final private boolean jj_3R_377() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_77()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_344()) return true;", "-", "-  final private boolean jj_3R_375() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_76()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_342()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d190d37c186d07863a08ea8847b23bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "   public void cleanBuildDirectory() throws FileMovedException, IOException;", "signatureAfterChange": "   public void cleanBuildDirectory();", "diff": ["-  public void cleanBuildDirectory() throws FileMovedException, IOException;", "+  public void cleanBuildDirectory();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d1c57d6a7b9257dcd34e08e5fdf7b61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testErrorsArrayInOrder() throws Exception", "signatureAfterChange": "   public void testErrorsArrayInOrder() throws Exception", "diff": ["+    debug.logStart();", "-    _model.getJUnitModel().getJUnitDocument().remove", "-      (0, _model.getJUnitModel().getJUnitDocument().getLength() - 1);", "+    _model.getJUnitModel().getJUnitDocument().remove(0, _model.getJUnitModel().getJUnitDocument().getLength() - 1);", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d1f5477a1861458807590ef17a28e1b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryLevelTest.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testShouldBeErrors()", "signatureAfterChange": "   public void testShouldBeErrors()", "diff": ["-", "+    ", "+    System.err.println(\"testFiles for testShouldBeErrors = \" + Arrays.toString(testFiles));", "+//    LanguageLevelConverter llc = new LanguageLevelConverter();", "+    Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>> result;", "+    for (int i = 0; i < testFiles.length; i++) {", "-      Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>> result;", "-      for (int i = 0; i<testFiles.length; i++) {", "-        result = llc.convert(new File[]{testFiles[i]}, new Options(JavaVersion.JAVA_5, IterUtil.<File>empty()));", "-        assertTrue(\"should be parse exceptions or visitor exceptions in file \" + testFiles[i].getName(), !result.getFirst().isEmpty() || !result.getSecond().isEmpty());", "-      }", "+      result = llc.convert(new File[]{testFiles[i]}, new Options(JavaVersion.JAVA_5, IterUtil.<File>empty()));", "+      assertTrue(\"should be parse exceptions or visitor exceptions in file \" + testFiles[i].getName(),", "+                 !result.getFirst().isEmpty() || !result.getSecond().isEmpty());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d276fe3f38ef5568c04e6e9babcb1a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 712, "methodNumberAfterChange": 485, "signatureBeforeChange": "    final private boolean jj_3R_233()", "signatureAfterChange": "    final private boolean jj_3R_250()", "diff": ["+  final private boolean jj_3R_250() {", "+    if (jj_3_50()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_294()) return true;", "+    }", "-", "-  final private boolean jj_3R_233() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_295()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_296()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d3159a0a7ebda47210cefbe6eab5161", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 411, "methodNumberAfterChange": 401, "signatureBeforeChange": "    final private boolean jj_3R_326()", "signatureAfterChange": "    final private boolean jj_3R_329()", "diff": ["-", "-  final private boolean jj_3R_326() {", "-    if (jj_3R_333()) return true;", "+  final private boolean jj_3R_329() {", "+    if (jj_3R_336()) return true;", "-      if (jj_3R_348()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_351()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d44ba506bed895b25b2628c457aeb7a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "1c3947ce9682f305287b6afe6b5c5d87597bae6f", "commitAfterChange": "0acb22a1f5b2329a270795e5839a4690952252ed", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testInfiniteLoop() throws Exception", "signatureAfterChange": "   public void testInfiniteLoop() throws Exception", "diff": ["-//      System.err.println(\"Starting JUnit\");", "+      System.err.println(\"Starting JUnit\");", "-//      fail(\"slave JVM should throw an exception because testing is interrupted by resetting interactions\");", "-    catch (Exception e) { /* Expected behavior for this test */ }", "-", "+    catch (Exception e) { fail(\"Aborting unit testing runs recovery code in testing thread; no exception is thrown\"); }", "+    ", "-//    System.err.println(\"ResetDone\");", "+    System.err.println(\"ResetDone\");", "-    listener.assertJUnitEndCount(0);  // Testing was aborted before test end", "-//    System.err.println(\"Reached Test End\");", "+    listener.assertJUnitEndCount(1);  // Testing was aborted after junitStarted(); junitEnded called in recovery code", "+    System.err.println(\"Reached Test End\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d4c9d6f4e1835fe8d415d004bd57558", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4dfb7e8e2c11d7b61367445afcbbd318e060ee7c", "commitAfterChange": "99c3d5bae5c904da6993da2891152b42aec91e01", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+", "+    _definitionsView = new DefinitionsView(this);", "+    _outputView = new OutputView();", "+    _fileMenu.add(_compileAction);", "+    ", "+    // Menu bars can actually hold anything!", "-", "-", "-    _definitionsView = new DefinitionsView(this);", "-    _outputView = new OutputView();", "-    ", "+   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d7c46cf777c728ffd224e95e78e2687", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "28db8fb2942dc00cad50f5244fe215d573867721", "commitAfterChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public int balanceForward()", "signatureAfterChange": "   public int balanceForward()", "diff": ["-    try { synchronized(_reduced) { return _reduced.balanceForward(); } }", "+    try { synchronized(_reduced) { return _balanceForward(); } }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d8e830a0deaeb73ab889d30d7a4cc61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 750, "methodNumberAfterChange": 696, "signatureBeforeChange": "    final private boolean jj_3R_605()", "signatureAfterChange": "    final private boolean jj_3R_607()", "diff": ["-  final private boolean jj_3R_605() {", "-    if (jj_scan_token(INCREMENT)) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_607() {", "+    if (jj_scan_token(DECREMENT)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d91d1f2cd0f6402d56a13fe790522c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "22cb21cbc806aa257284ccfb5bed593a93cc9671", "commitAfterChange": "927fe7235663577a9c65675746a51aa4098cc18b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public FindReplaceDialog(MainFrame frame, SingleDisplayModel model)", "signatureAfterChange": "   public FindReplaceDialog(MainFrame frame, SingleDisplayModel model)", "diff": ["-    ", "+", "+    SearchBackwardsListener bsl = new SearchBackwardsListener();", "+", "+    _searchBackwards = new JCheckBox(\"Search Backwards\", false);", "+    _searchBackwards.addItemListener(bsl);", "+", "+    _matchCaseAndClosePanel.add(_searchBackwards, BorderLayout.CENTER);", "-    _matchCase.setNextFocusableComponent(_findNextButton);", "+    _matchCase.setNextFocusableComponent(_searchBackwards);", "+    _searchBackwards.setNextFocusableComponent(_findNextButton);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d979d88e4ceaf4fc42c34881e95239c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 798, "methodNumberAfterChange": 642, "signatureBeforeChange": "    final private boolean jj_3R_526()", "signatureAfterChange": "    final private boolean jj_3R_261()", "diff": ["+  final private boolean jj_3R_261() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_317()) { jj_scanpos = xsp; break; }", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_3R_318()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_526() {", "-    if (jj_scan_token(COMMA)) return true;", "-      if (jj_3R_542()) { jj_scanpos = xsp; break; }", "-    if (jj_3R_543()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d9aac77280115f03281b37bcff2d52f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1ed74444e7bc359a9a1bceeac912e2a7a23c2add", "commitAfterChange": "7c92e58e6451902680f99442fe1b0e5b6ce56b46", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \t\t \tDefinitionsView getDefView()", "signatureAfterChange": " \t\t \tDefinitionsPane getDefPane()", "diff": ["-\tDefinitionsView getDefView()", "+\tDefinitionsPane getDefPane()", "-\t\t\treturn _definitionsView;", "+\t\t\treturn _definitionsPane;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9da502cb0afce9161c85b54a13bc46e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 348, "methodNumberAfterChange": 554, "signatureBeforeChange": "    final private boolean jj_3R_378()", "signatureAfterChange": "    final private boolean jj_3R_443()", "diff": ["-  final private boolean jj_3R_378() {", "-    if (jj_3R_398()) {", "-    if (jj_3R_399()) return true;", "+", "+  final private boolean jj_3R_443() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_451()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_452()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9daf7d4ee9f60359a81ef0a4dfe2cc03", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "191c3e4b63ea8ecc780014db5fc908a6ccd9ee7a", "commitAfterChange": "e285e40efb875184223641eeb1b7a7e78f7a260b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "    public void testGetSourceRootPackageThreeDeepInvalid()     throws BadLocationException, IOException", "signatureAfterChange": "    public void testGetSourceRootPackageThreeDeepInvalid()     throws BadLocationException, IOException", "diff": ["-    // The package name is wrong so this should return none.", "+    // The package name is wrong so this should return only currDir", "-    assertEquals(\"number of source roots\", 0, roots.length);", "-    /*", "-    fail(\"getSourceRoot() did not fail on invalid package. It returned: \" +", "-         root);", "-         */", "+    assertEquals(\"number of source roots\", 1, roots.length);", "+    assertEquals(\"source root (current directory)\", ", "+                 new File(System.getProperty(\"user.dir\")),", "+                 roots[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9db0e195e9b0cb9fc818189ba8423ac7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   private boolean wholeWordFoundAtCurrent(OpenDefinitionsDocument doc, int foundOffset)", "signatureAfterChange": "   private boolean wholeWordFoundAtCurrent(OpenDefinitionsDocument doc, int foundOffset)", "diff": ["-    doc.readLock();", "+    doc.acquireReadLock();", "-    finally {doc.readUnlock();}      ", "+    finally {doc.releaseReadLock();}      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9db1f89b235daabbce7ee902404c4a9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/HashRelation.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public HashRelation()", "signatureAfterChange": "   public HashRelation()", "diff": ["-  public HashRelation() { this(true, true); }", "+  /** Create a HashRelation with indexes in both directions. */", "+  public HashRelation() { this(true); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dc320b584c513cbf4803ea85a1506a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "     public Object visit(GreaterExpression node)", "signatureAfterChange": "   public Class visit(GreaterExpression node)", "diff": ["+   */", "+  public Class visit(GreaterExpression node) {", "+    Class c = visitRelationalExpression(node);", "+    ", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.greaterThan(ln.getProperty(NodeProperties.VALUE),", "+                                          rn.getProperty(NodeProperties.VALUE)));", "+    return c;", "+  }", "-     */", "-    public Object visit(GreaterExpression node) {", "-        Class c = visitRelationalExpression(node);", "-", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.greaterThan(ln.getProperty(NodeProperties.VALUE),", "-                                               rn.getProperty(NodeProperties.VALUE)));", "-        }", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dcc8d1ab3971d2ab13a369a02cfcbcd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 489, "methodNumberAfterChange": 532, "signatureBeforeChange": "    final private boolean jj_3R_99()", "signatureAfterChange": "    final private boolean jj_3R_327()", "diff": ["+", "+  final private boolean jj_3R_327() {", "+    if (jj_3R_335()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_336()) return true;", "+    }", "-", "-  final private boolean jj_3R_99() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_143()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_144()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ddbcbf5a1ca5da49e68750a61792c61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testPackageDeclaration() throws ParseException", "signatureAfterChange": "      public void testPackageDeclaration() throws ParseException", "diff": ["-    expectedAST.add(new PackageDeclaration(\"edu.rice.cs.javaast\", SourceInfo.NONE));", "+    expectedAST.add(new PackageDeclaration(ModifierSet.make(), \"edu.rice.cs.javaast\", SourceInfo.NONE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9de01850f63df67512758ef2efd0be98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavadocErrorPanel.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   protected void _close()", "signatureAfterChange": "   protected void _close()", "diff": ["-    getModel().resetJavadocErrors();", "+    getModel().getJavadocModel().resetJavadocErrors();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9df0919e3c74d32d934551814160d001", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "c3000f96cc22558352558f3f8f7ae9d7ae4aa055", "commitAfterChange": "efc2ed142355e643bf14d4b8f0aee3c3eaaea680", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void _javadocWorker(File destDirFile, FileSaveSelector saver,                               List<String> classpaths,                               JavadocListener listener)", "signatureAfterChange": "   private void _javadocWorker(File destDirFile, FileSaveSelector saver,                               List<String> classpaths,                               JavadocListener listener)", "diff": ["-    args.addAll(new ArgumentTokenizer().tokenize(custom));", "+    args.addAll(ArgumentTokenizer.tokenize(custom));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9df8e18a956827370769d1d62475b5af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 573, "methodNumberAfterChange": 552, "signatureBeforeChange": "    final private boolean jj_3R_435()", "signatureAfterChange": "    final private boolean jj_3R_450()", "diff": ["-  final private boolean jj_3R_435() {", "+", "+  final private boolean jj_3R_450() {", "-    if (jj_3R_75()) return true;", "+    if (jj_3R_78()) return true;", "-    if (jj_3R_399()) return true;", "+    if (jj_3R_412()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e0d0ac828f14270e1139ea8a77141bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public abstract ClassType lookupStaticClass(Type t, String name, Iterable<? extends Type> typeArgs)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "   public abstract ClassType lookupStaticClass(Type t, String name, Iterable<? extends Type> typeArgs,                                               Access.Module accessModule)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-  public abstract ClassType lookupStaticClass(Type t, String name, Iterable<? extends Type> typeArgs)", "+  public abstract ClassType lookupStaticClass(Type t, String name, Iterable<? extends Type> typeArgs,", "+                                              Access.Module accessModule)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e11015ff1f857c402471b9009bf6723", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineEmpty.java", "commitBeforeChange": "7800062ae81518c3396891f7a26a405437cbcbf7", "commitAfterChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    try {", "-      // Determine if there are only whitespace chars by seeing if the first non-WS char is the endOfLine", "-      int here = doc.getCurrentLocation();", "-      int endOfLine = doc._getLineEndPos(here);", "-      int firstNonWS = doc._getLineFirstCharPos(here);", "-      return (endOfLine == firstNonWS);", "-    }", "-    catch (BadLocationException e) {", "-      // Shouldn't happen", "-      throw new UnexpectedException(e);", "-    }", "+    // Determine if there are only whitespace chars by seeing if the first non-WS char is the endOfLine", "+    int here = doc.getCurrentLocation();", "+    int endOfLine = doc._getLineEndPos(here);", "+    int firstNonWS = doc._getLineFirstCharPos(here);", "+    return (endOfLine == firstNonWS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e1e2bfbae371de52e3d1b2c4bdc6620", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "1018be24b33ba74b1be6da8d72dc97e6545e20b1", "commitAfterChange": "c0c2e54a62410a429f0ffcedb26fd38c6f82937b", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "    public void testGetSourceRootPackageOneDeepValid()     throws BadLocationException, IOException", "signatureAfterChange": "    public void testGetSourceRootPackageOneDeepValid()     throws BadLocationException, IOException", "diff": ["-    assertEquals(\"source root\", baseTempDir, roots[0]);", "+    assertEquals(\"source root\", baseTempDir.getCanonicalFile(),", "+                 roots[0].getCanonicalFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e2215f7b62c4d57549314f322c515f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 461, "methodNumberAfterChange": 457, "signatureBeforeChange": "    final private boolean jj_3R_155()", "signatureAfterChange": "    final private boolean jj_3R_157()", "diff": ["+", "+  final private boolean jj_3R_157() {", "+    if (jj_3R_191()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_247()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_155() {", "-    if (jj_3R_189()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_245()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e2af32555798812fb7b2b8600bd06dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/JavaInterpreterTest.java", "commitBeforeChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "commitAfterChange": "8417ddcfd5dbe91145435687b878857a28a6fc40", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "       private void tester(Pair[] cases)", "signatureAfterChange": "  \tprivate void tester(Pair[] cases)", "diff": ["-", "-    private void tester(Pair[] cases)", "+\tprivate void tester(Pair[] cases)", "-\tfor (int i = 0; i < cases.length; i++)", "-\t    {", "-\t\tObject out = _interpreter.interpret(cases[i].first() + \";\");", "-\t\tassertEquals(cases[i].first() + \" interpretation wrong!\",", "-\t\t\t     cases[i].second(),", "-\t\t\t     out);", "-\t    }", "+\t\t\tfor (int i = 0; i < cases.length; i++)", "+\t\t\t\t{", "+\t\t\t\t\tObject out = _interpreter.interpret(cases[i].first());", "+\t\t\t\t\tassertEquals(cases[i].first() + \" interpretation wrong!\",", "+\t\t\t\t\t\t\t\t\t\t\t cases[i].second(),", "+\t\t\t\t\t\t\t\t\t\t\t out);\t\t\t\t\t", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e5a17e1f11654b2b555c768c123a1c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/MatchWholeWordState.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public FindResult findNext()", "signatureAfterChange": "   public FindResult findNext()", "diff": ["-    */", "-    public FindResult findNext() {", "-        try", "-        {", "-            //String searchDocument =", "-            //    _doc.getText(searchOriginLocation, _doc.getLength() - searchOriginLocation) + ", "-            //    _doc.getText(0, searchOriginLocation);", "+   */", "+  public FindResult findNext() {", "+    try {", "+      //String searchDocument =", "+      //    _doc.getText(searchOriginLocation, _doc.getLength() - searchOriginLocation) +", "+      //    _doc.getText(0, searchOriginLocation);", "-\t    // If the user just found and toggled the \"Search Backwards\"", "-\t    // option, we should skip the first find.", "-\t    if (_skipOneFind) {", "-                ", "-\t\tint wordLength = _lastFindWord.length();", "-\t\tif (!_searchBackwards) {", "-\t\t    setPosition(getCurrentOffset() + wordLength);", "-\t\t}", "-\t\telse {", "-\t\t    setPosition(getCurrentOffset() - wordLength);", "-\t\t}", "-\t\tpositionChanged();", "-\t    }", "-            ", "+      // If the user just found and toggled the \"Search Backwards\"", "+      // option, we should skip the first find.", "+      if (_skipOneFind) {", "-            int searchOriginLocation = getCurrentOffset();", "-            this._wrapped = false;", "-            String searchDocument = _doc.getText(0, _doc.getLength());", "-", "-            if(indexOf(searchDocument, this._findWord) != -1)", "-            {", "-                return findNextHelp(searchDocument, searchOriginLocation);", "-            }", "-            else", "-            { ", "-                return new FindResult(_doc, -1, true);", "-            }", "+        int wordLength = _lastFindWord.length();", "+        if (!_searchBackwards) {", "+          setPosition(getCurrentOffset() + wordLength);", "-        catch(BadLocationException e)", "-        {", "-            throw new RuntimeException(e.getMessage());", "+        else {", "+          setPosition(getCurrentOffset() - wordLength);", "+        positionChanged();", "+      }", "+", "+", "+      int searchOriginLocation = getCurrentOffset();", "+      _wrapped = false;", "+      String searchDocument = _doc.getText(0, _doc.getLength());", "+", "+      if (indexOf(searchDocument, _findWord) != -1) {", "+        return findNextHelp(searchDocument, searchOriginLocation);", "+      }", "+      else {", "+        return new FindResult(_doc, -1, true);", "+      }", "+    }", "+    catch (BadLocationException e) {", "+      throw new RuntimeException(e.getMessage());", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e7dbc744dd1ca5d51468d6dea166231", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 753, "methodNumberAfterChange": 329, "signatureBeforeChange": "    final private boolean jj_3R_181()", "signatureAfterChange": "    final private boolean jj_3R_357()", "diff": ["+", "+  final private boolean jj_3R_357() {", "+    if (jj_3R_108()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_58()) { jj_scanpos = xsp; break; }", "+    }", "-  final private boolean jj_3R_181() {", "-    if (jj_3R_97()) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_210()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e89ce7afa703d98b4333a5ac679d52d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e7660fffdb51451a3d4a61981945f6529addb874", "commitAfterChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "methodNumberBeforeChange": 352, "methodNumberAfterChange": 353, "signatureBeforeChange": "   boolean _closeProject(boolean quitting)", "signatureAfterChange": "   boolean _closeProject(boolean quitting)", "diff": ["+      _exportProjectInOldFormatAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e98b37312fb27332940dffb6dd83263", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "0d6a1751a06319b8d446186ea0aafba68239ee0c", "commitAfterChange": "50d54a2cc075d489d4814ce780949e6748ba1350", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public synchronized void testStartupAndShutdown() throws DebugException,      InterruptedException", "signatureAfterChange": "   public synchronized void testStartupAndShutdown() throws DebugException,      InterruptedException", "diff": ["-      _debugManager.startup();", "-      _waitForNotifies(1);", "+       _startup();", "+       _waitForNotifies(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ebff904a6cfc125aed4c8645185cc93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "dab739e9c0a893840c19d552b534083722093495", "commitAfterChange": "9d7de430d203354a52d3faa0378a92c50af92fb7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testDoNotRunJUnitUnsavedAndDoNotSaveWhenAsked()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testDoNotRunJUnitUnsavedAndDoNotSaveWhenAsked() throws Exception", "diff": ["-  public void testDoNotRunJUnitUnsavedAndDoNotSaveWhenAsked()", "-    throws BadLocationException, IOException {", "+  public void testDoNotRunJUnitUnsavedAndDoNotSaveWhenAsked() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ec22736e5ba603f925a712ac55314a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "df9cbdf4ec8cbcbc3942b966a48a15d33dcac7ed", "commitAfterChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 336, "signatureBeforeChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "signatureAfterChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "diff": ["-          getDocument().setCachedClassFile(null);", "+          setCachedClassFile(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ec96ffe24c5fc891c2db3e7142e52a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/io/IOUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public static Iterable<File> listFilesRecursively(File f, Predicate<? super File> filter)", "signatureAfterChange": "   public static Iterable<File> listFilesRecursively(File f, Predicate<? super File> filter)", "diff": ["-    return listFilesRecursively(f, asFileFilter(filter));", "+    return listFilesRecursively(f, asFilePredicate(filter), ALWAYS_ACCEPT);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ecaa5a4d1225f6cdbf811ca6f9ca54a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 603, "methodNumberAfterChange": 430, "signatureBeforeChange": "    final private boolean jj_3R_222()", "signatureAfterChange": "    final private boolean jj_3R_227()", "diff": ["+  final private boolean jj_3R_227() {", "+    if (jj_3R_265()) return true;", "+      if (jj_3R_299()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_222() {", "-    if (jj_3R_264()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_297()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9efb22dcd2dfdefdbaea703a242fcdcb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "b796c376864058d232f1be02ccfb0bd7548b3f89", "commitAfterChange": "ba6275930e25f1b0898c45319a21c16860b3e177", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setListFont(Font f)", "signatureAfterChange": "   public void setListFont(Font f)", "diff": ["-    StyleConstants.setFontFamily(NORMAL_ATTRIBUTES, f.getFamily());", "-    StyleConstants.setFontSize(NORMAL_ATTRIBUTES, f.getSize());", "+    SimpleAttributeSet set = new SimpleAttributeSet();", "+    StyleConstants.setFontFamily(set, f.getFamily());", "+    StyleConstants.setFontSize(set, f.getSize());", "+    StyleConstants.setBold(set, f.isBold());", "+    StyleConstants.setItalic(set, f.isItalic());", "-    StyleConstants.setFontFamily(BOLD_ATTRIBUTES, f.getFamily());", "-    StyleConstants.setFontSize(BOLD_ATTRIBUTES, f.getSize());", "+    _updateStyles(set);", "+    ", "+    getErrorListPane().setFont(f);", "+    ", "+    Document doc = getErrorListPane().getDocument();", "+    if (doc instanceof StyledDocument) {", "+      ((StyledDocument)doc).setCharacterAttributes(0, doc.getLength(), set, false);", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f028088056938df4c914cbb89e40e59", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "          public void testForVariableDeclarationOnly()", "signatureAfterChange": "          public void testForVariableDeclarationOnly()", "diff": ["-      VariableData vd1 = new VariableData(\"field1\", _privateFinalMav, SymbolData.DOUBLE_TYPE, false, _cbiv._classData);", "-      VariableData vd2 = new VariableData(\"field2\", _privateFinalMav, SymbolData.BOOLEAN_TYPE, false, _cbiv._classData);", "+      VariableData vd1 = ", "+        new VariableData(\"field1\", _privateFinalMav, SymbolData.DOUBLE_TYPE, false, _cbiv._enclosing);", "+      VariableData vd2 = ", "+        new VariableData(\"field2\", _privateFinalMav, SymbolData.BOOLEAN_TYPE, false, _cbiv._enclosing);", "+", "+//      System.err.println(\"_sd1 vars =  \" + _sd1.getVars());", "+//      System.err.println(\"vd1 = \" + vd1 + \"; vd2 = \" + vd2);", "-      VariableData vd3 = new VariableData(\"field3\", _privateFinalMav, SymbolData.DOUBLE_TYPE, false, _cbiv._classData);", "+      VariableData vd3 = ", "+        new VariableData(\"field3\", _privateFinalMav, SymbolData.DOUBLE_TYPE, false, _cbiv._enclosing);", "+//      System.err.println(\"_sd1 vars =  \" + _sd1.getVars());", "+//      System.err.println(\"vd3 = \" + vd3);", "-      VariableData vd4 = new VariableData(\"field4\", _staticFinalMav, SymbolData.DOUBLE_TYPE, false, _cbiv._classData);  ", "+      VariableData vd4 = ", "+        new VariableData(\"field4\", _staticFinalMav, SymbolData.DOUBLE_TYPE, false, _cbiv._enclosing);  ", "-      VariableData vd5 = new VariableData(\"field5\", _privateFinalMav, SymbolData.DOUBLE_TYPE, true, _cbiv._classData);", "+      VariableData vd5 = ", "+        new VariableData(\"field5\", _privateFinalMav, SymbolData.DOUBLE_TYPE, true, _cbiv._enclosing);", "-      VariableData vd6 = new VariableData(\"field6\", _privateFinalMav, SymbolData.DOUBLE_TYPE, false, _cbiv._classData);", "+      VariableData vd6 = ", "+        new VariableData(\"field6\", _finalPrivateMav, SymbolData.DOUBLE_TYPE, false, _cbiv._enclosing);", "-      _cbiv._classData.setSuperClass(myData);", "+      _cbiv._enclosing.setSuperClass(myData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f13f8a7281908cf737a813d6f18ad52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 65, "signatureBeforeChange": "          public void interpreterChanged(boolean inProgress)", "signatureAfterChange": "          public void interpreterChanged(boolean inProgress)", "diff": ["-        _notifyObject(_notifierLock);", "+        _notifyLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f23b5512e2e4dbf3ad1f64650c90b3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void setClassPaths(List<? extends File> cpf)", "signatureAfterChange": "   public void setClassPaths(Iterable<? extends File> cpf)", "diff": ["-  public void setClassPaths(List<? extends File> cpf) { _classPathFiles = new ArrayList<File>(cpf); }", "+  public void setClassPaths(Iterable<? extends File> cpf) {", "+    _classPathFiles = new ArrayList<File>();", "+    for (File f : cpf) { _classPathFiles.add(f); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f58e5de0855c7a4a438dc9e54642a06", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "314c962d7f6ed2c6b00f5edc6e764b582b016016", "commitAfterChange": "3b2b8c4279d3d3c19a0254256362d4d46aeeddaf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public File[] getBuildDirectory()", "signatureAfterChange": "     public File getBuildDirectory()", "diff": ["-    public File[] getBuildDirectory() {", "-      return _builddir.entries();", "+     */", "+    public File getBuildDirectory() {", "+      return _buildDir;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f6f26f19213cefbd69f76d7b8a6d5e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void saveHistory(FileSaveSelector selector) throws IOException", "signatureAfterChange": "   public void saveHistory(FileSaveSelector selector) throws IOException", "diff": ["-    readLock();  // does not modify state of document including history", "+    acquireReadLock();  // does not modify state of document including history", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f9a9cdf3fbfbd7608921f4749dc6347", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 240, "methodNumberAfterChange": 240, "signatureBeforeChange": "      public List<OpenDefinitionsDocument> getOutOfSyncDocuments(List<OpenDefinitionsDocument> lod)", "signatureAfterChange": "      public List<OpenDefinitionsDocument> getOutOfSyncDocuments(List<OpenDefinitionsDocument> lod)", "diff": ["-          System.out.println(\"Checking contents of \"+doc+\": \"+b);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fb6ed938637065e5545be12dd6ed2b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "304bb61899a16b4e87269d9bb4c4a3ecbf1bc6d4", "commitAfterChange": "efc072ede22ea55faaadbf97a73c4466d939ffd3", "methodNumberBeforeChange": 435, "methodNumberAfterChange": 435, "signatureBeforeChange": "     public void threadLocationUpdated(OpenDefinitionsDocument doc, int lineNumber, boolean shouldHighlight)", "signatureAfterChange": "     public void threadLocationUpdated(OpenDefinitionsDocument doc, int lineNumber, boolean shouldHighlight)", "diff": ["-      scrollToDocumentAndLine(doc, lineNumber, shouldHighlight);", "+      scrollToDocumentAndOffset(doc, doc.getOffset(lineNumber), shouldHighlight);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fdd82173f75a39715fb68b849d7dc04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 433, "methodNumberAfterChange": 608, "signatureBeforeChange": "    final private boolean jj_3R_431()", "signatureAfterChange": "    final private boolean jj_3R_433()", "diff": ["-", "-  final private boolean jj_3R_431() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_452()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_453()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_433() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_454()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_455()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0043015e8dde882b4605145070784d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "d5075fa67b6b594107dff56779d9c2d12a9b1794", "commitAfterChange": "cabefbe10a0006c896a724ca9825aff82516c66f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private void _findAll()", "signatureAfterChange": "   private void _findAll()", "diff": ["-    _machine.setSearchBackwards(false);", "+    // The following two line was moved to _findAll(...) so it is executed by FindResultsPanel._findAgain", "+//    _machine.setSearchBackwards(false);", "+    ", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00f1a3985e8aaf0e158e18e52caa938", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Object visit(ForEachStatement node)", "signatureAfterChange": "   public Object visit(ForEachStatement node)", "diff": ["-      }", "-      catch(NoSuchMethodException e) { ", "-        throw new UnexpectedException(e); ", "+      }catch(NoSuchMethodException e){", "+        /* this is very bad */", "-      }", "-      catch(MethodModificationError e) {", "-        throw new UnexpectedException(e); ", "+      }catch(MethodModificationError e){", "+        /* ths is very bad */", "-      exp.setProperty(NodeProperties.TYPE, m.getReturnType());", "+      exp.setProperty(NodeProperties.TYPE,   m.getReturnType());", "-      try { m2 = context.lookupMethod(exp, \"hasNext\", Constants.EMPTY_CLASS_ARRAY); }", "-      catch(NoSuchMethodException e){", "+      try {", "+        m2 = context.lookupMethod(exp, \"hasNext\", Constants.EMPTY_CLASS_ARRAY);", "+      }catch(NoSuchMethodException e){", "-      }", "-      catch(MethodModificationError e){", "+      }catch(MethodModificationError e){", "-      condition.setProperty(NodeProperties.TYPE, m2.getReturnType());", "+      condition.setProperty(NodeProperties.TYPE,   m2.getReturnType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a016b59be17242a2f09fe49dbf05f540", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 468, "methodNumberAfterChange": 730, "signatureBeforeChange": "    final private boolean jj_3R_365()", "signatureAfterChange": "    final private boolean jj_3R_302()", "diff": ["-", "-  final private boolean jj_3R_365() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_369()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_370()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_302() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_74()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_313()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a01fd0c00c327da9ab13844da1435741", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testConstants()", "signatureAfterChange": "   public void testConstants() throws ExceptionReturnedException", "diff": ["-  public void testConstants() {", "+  public void testConstants() throws ExceptionReturnedException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a025bfb5f4cac1bebc8e5c9ba3486eaf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/AllTests.java", "commitBeforeChange": "ac55d90528653f74034b709e69818ba05a360584", "commitAfterChange": "603c8744a127b7738a621d0f6b6e698d9647db86", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public static Test suite()", "signatureAfterChange": "    public static Test suite()", "diff": ["-\t\t", "+\t\tallSuite.addTest(FindReplaceTest.suite());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0291e6b97fdc08285da0326b3e97c4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": "     @Override public Type visit(StaticMethodCall node)", "signatureAfterChange": "     @Override public Type visit(StaticMethodCall node)", "diff": ["-        // TODO: Check accessibility of method", "+        checkAccessibility(inv.method(), node);", "-        throw new ExecutionError(\"no.such.method\", node);", "+        throw new ExecutionError(\"no.such.static.method\", node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a047320bbff04eb24ca907c3dc783413", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 489, "methodNumberAfterChange": 362, "signatureBeforeChange": "    final private boolean jj_3R_306()", "signatureAfterChange": "    final private boolean jj_3R_310()", "diff": ["-", "-  final private boolean jj_3R_306() {", "+  final private boolean jj_3R_310() {", "-    if (jj_3R_112()) return true;", "+    if (jj_3R_115()) return true;", "-    if (jj_3R_180()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0607093fe30ce993094f6ed9b1e783e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 272, "methodNumberAfterChange": 722, "signatureBeforeChange": "    final private boolean jj_3R_156()", "signatureAfterChange": "    final private boolean jj_3R_161()", "diff": ["-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_161() {", "+    if (jj_3R_106()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0af2d40a063e006332a23059b768b5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 761, "methodNumberAfterChange": 775, "signatureBeforeChange": "    final private boolean jj_3R_512()", "signatureAfterChange": "    final private boolean jj_3R_516()", "diff": ["-  final private boolean jj_3R_512() {", "-    if (jj_scan_token(ASSIGN)) return true;", "-    if (jj_3R_94()) return true;", "+", "+  final private boolean jj_3R_516() {", "+    if (jj_scan_token(ASSIGN)) return true;", "+    if (jj_3R_97()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0b0693951fa56c33de9d06afcf5f877", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-mint/edu/rice/cs/drjava/model/compiler/MintCompiler.java", "commitBeforeChange": "a72aa0a4c1f252999ab0a9a3163ec82bfbbfaea2", "commitAfterChange": "7eb08657532d9784c123b1d1294465471514e8b5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "    public boolean isAvailable()", "signatureAfterChange": "    public boolean isAvailable()", "diff": ["-      Class<?> diagnostic = Class.forName(\"javax.tools.Diagnostic\");", "+      Class<?> diagnostic = Class.forName(\"edu.rice.cs.mint.comp.javax.tools.Diagnostic\");", "-      Class.forName(\"com.sun.tools.javac.main.JavaCompiler\");", "+      Class.forName(\"edu.rice.cs.mint.comp.com.sun.tools.javac.main.JavaCompiler\");", "-      Class.forName(\"com.sun.source.tree.BracketExprTree\");", "-      Class.forName(\"com.sun.source.tree.BracketStatTree\");", "-      Class.forName(\"com.sun.source.tree.EscapeExprTree\");", "-      Class.forName(\"com.sun.source.tree.EscapeStatTree\");", "+      Class.forName(\"edu.rice.cs.mint.comp.com.sun.source.tree.BracketExprTree\");", "+      Class.forName(\"edu.rice.cs.mint.comp.com.sun.source.tree.BracketStatTree\");", "+      Class.forName(\"edu.rice.cs.mint.comp.com.sun.source.tree.EscapeExprTree\");", "+      Class.forName(\"edu.rice.cs.mint.comp.com.sun.source.tree.EscapeStatTree\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0b4c5f56e70cc48e3bdd39795e6c799", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 61, "signatureBeforeChange": "   private void dumpVariablesIntoInterpreterAndSwitch() throws DebugException", "signatureAfterChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException", "diff": ["-  private void dumpVariablesIntoInterpreterAndSwitch() throws DebugException {", "+  private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException {", "+      ", "+      // Name the new interpreter based on this thread", "-      ((DefaultGlobalModel)_model).getInteractionsModel().addDebugInterpreter(interpreterName);", "+      _model.getInteractionsModel().addDebugInterpreter(interpreterName);", "-      ObjectReference debugInterpreter = getDebugInterpreter(interpreterName);", "+      ObjectReference debugInterpreter = _getDebugInterpreter(interpreterName);", "+      // Define each variable", "+        // Have to update the frame each time", "-      ", "+", "+      // Update the frame", "-      ", "+", "+      // Define \"this\"", "+      // Set the new interpreter and prompt", "-      ((DefaultGlobalModel)_model).getInteractionsModel().setActiveInterpreter(interpreterName,prompt);", "+      _model.getInteractionsModel().setActiveInterpreter(interpreterName,", "+                                                         prompt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0bed7db40dc7fe3288a2a92dcad0819", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AboutDialog.java", "commitBeforeChange": "1813ff0222dc4ecf20a5cf6ed36333ed813c089d", "commitAfterChange": "b069e2bfa2f8651c897cd701a15acb237a3766d7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void buildGUI(Container cp)", "signatureAfterChange": "    public void buildGUI(Container cp)", "diff": ["-    JTabbedPane tabs = new JTabbedPane();", "-    addTab(tabs,\"About\",createCopyrightTab());", "+    addTab(_tabs,\"About\",createCopyrightTab());", "-    if (LICENSE != null) addTab(tabs,\"DrJava License\",createTextScroller(LICENSE));", "+    if (LICENSE != null) addTab(_tabs,\"DrJava License\",createTextScroller(LICENSE));", "-    addTab(tabs,\"DynamicJava License\",createTextScroller(DYADE_LICENSE));", "-    addTab(tabs,\"System Properties\",createSysPropTab());", "+    addTab(_tabs,\"DynamicJava License\",createTextScroller(DYADE_LICENSE));", "+    addTab(_tabs,\"System Properties\",createSysPropTab());", "-    cp.add(tabs,BorderLayout.CENTER);", "+    cp.add(_tabs,BorderLayout.CENTER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d60dc7e90b005ac630b62e6896fe28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testCrazyCase1()", "signatureAfterChange": "   public void testCrazyCase1()", "diff": ["-    assertEquals(\"#2.4\", INSIDE_BLOCK_COMMENT, model1.getStateAtCurrent());", "+    assertEquals(\"#2.4\", INSIDE_BLOCK_COMMENT, model1._getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0df0fdbd966650323abe82209b00e80", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "43b808b9e05f3378c0faae83fe4225562adc4c6e", "commitAfterChange": "723910d837b2fcdd9f4127559df4832f71fb62e8", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["-    docPanePopupMenu.add(_runAction);", "+    if (CodeStatus.DEVELOPMENT) {", "+      docPanePopupMenu.add(_runAction);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0f0c9311c4df779c472aae87240464b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 701, "methodNumberAfterChange": 706, "signatureBeforeChange": "    final private boolean jj_3R_340()", "signatureAfterChange": "    final private boolean jj_3R_345()", "diff": ["-  final private boolean jj_3R_340() {", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(32)) jj_scanpos = xsp;", "-    if (jj_3R_203()) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-      if (jj_3R_408()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_345() {", "+    if (jj_3R_206()) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_416()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1036c93fdb365a47be112db50e56a14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/PopupConsole.java", "commitBeforeChange": "cfcaff0f9d58c64a1efe5903c22285891a763f19", "commitAfterChange": "5eb1f78bf493677206294d8300c536c9215e1f11", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private JDialog createDialog(JTextArea inputBox, Frame parentFrame)", "signatureAfterChange": "      private JDialog createDialog(JTextArea inputBox, Frame parentFrame)", "diff": ["-    JLabel label = new JLabel(\"Enter a full line of input. Hit SHIFT+<Enter> for an embedded newline character \");", "+    JLabel label = new JLabel(\"<html>Enter a full line of input.<br>\" +", "+                              \"Hit SHIFT+&lt;Enter&gt; to insert a newline character.&nbsp</html>\");", "-    buttonPanel.setSize(600, 80);", "-    dialog.setSize(600, 200);", "+    buttonPanel.setSize(500, 100);", "+    dialog.setSize(500, 100);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1299fc6f23aa74c2a8e745826bea407", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "     public Object visit(DivideAssignExpression node)", "signatureAfterChange": "   public Class visit(DivideAssignExpression node)", "diff": ["+   */", "+  public Class visit(DivideAssignExpression node) {", "+    // Check the types", "+    Node  ln = node.getLeftExpression();", "+    Class lc = (Class)ln.acceptVisitor(this);", "+    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "+    ", "+    if (lc == null          || rc == null          ||", "+        lc == void.class    || rc == void.class    ||", "+        lc == boolean.class || rc == boolean.class ||", "+        !lc.isPrimitive()   || !rc.isPrimitive()) {", "+      throw new ExecutionError(\"division.type\", node);", "+    }", "+    ", "+    // The left subexpression must be a variable", "+    if (!ln.hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"left.expression\", node);", "+    }", "+    ", "+    // Sets the type property of this node", "+    node.setProperty(NodeProperties.TYPE, lc);", "+    return lc;", "+  }", "-     */", "-    public Object visit(DivideAssignExpression node) {", "-        // Check the types", "- \tNode  ln = node.getLeftExpression();", "-        Class lc = (Class)ln.acceptVisitor(this);", "-        Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "-", "-        if (lc == null          || rc == null          ||", "-            lc == void.class    || rc == void.class    ||", "-            lc == boolean.class || rc == boolean.class ||", "-            !lc.isPrimitive()   || !rc.isPrimitive()) {", "-            throw new ExecutionError(\"division.type\", node);", "-        }", "-        ", "-        // The left subexpression must be a variable", "-        if (!ln.hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"left.expression\", node);", "-        }", "-", "-        // Sets the type property of this node", "-        node.setProperty(NodeProperties.TYPE, lc);", "-        return lc;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a12a8b2ce6a0fa1787a790770d4259d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "1a9af627ea69f691af32f9a422290b5017b0703d", "commitAfterChange": "8d34579e0c7e80db1371da26e8172a594bf3d48e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private boolean _saveToFile(String path)", "signatureAfterChange": "   boolean saveToFile(String path)", "diff": ["-  private boolean _saveToFile(String path)", "+  boolean saveToFile(String path)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a12d7ac0a8348a34a94a16e6c16133d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "commitAfterChange": "d07989306c43e4045df83ca1211956d5a85a21bd", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testPackageNameWeird2() throws BadLocationException", "signatureAfterChange": "   public void testPackageNameWeird2()     throws BadLocationException, InvalidPackageException", "diff": ["-  public void testPackageNameWeird2() throws BadLocationException {", "+  public void testPackageNameWeird2()", "+    throws BadLocationException, InvalidPackageException", "+  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a12e6d6e8117c13ebbcb6033ddac21b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 646, "methodNumberAfterChange": 638, "signatureBeforeChange": "    final private boolean jj_3R_539()", "signatureAfterChange": "    final private boolean jj_3R_561()", "diff": ["-", "-  final private boolean jj_3R_539() {", "-    if (jj_scan_token(CASE)) return true;", "-    if (jj_3R_94()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_561() {", "+    if (jj_scan_token(CASE)) return true;", "+    if (jj_3R_97()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a13dd16158b8c52457869ba4817df7e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "1639b3f1b3160d5e213e76fb290ae016d8915dec", "commitAfterChange": "2f98d714c8ae956f9af2a1a53cad3b01a015d6ea", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void setActiveDocument(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public void setActiveDocument(final OpenDefinitionsDocument doc)", "diff": ["-    if (_activeDocument == doc) return;", "+    // if (_activeDocument == doc) return; // this optimization appears to cause some subtle bugs"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1581451cf6fc66bd81aa25fc2363959", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "               public void testSwitchStatement() throws InterpreterException", "signatureAfterChange": "               public void testSwitchStatement() throws InterpreterException", "diff": ["-    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "-    ", "-    System.err.println(\"Is Tiger enabled? \" + TigerUtilities.isTigerEnabled());", "-    expected = \"(koala.dynamicjava.tree.SwitchStatement: (koala.dynamicjava.tree.CastExpression: (koala.dynamicjava.tree.IntegerLiteral: 5 5 int) (koala.dynamicjava.tree.ByteType: byte)) [(koala.dynamicjava.tree.SwitchBlock: (koala.dynamicjava.tree.CharacterLiteral: 'a' a char) null)])\";", "+    expected = \"(koala.dynamicjava.tree.SwitchStatement: (koala.dynamicjava.tree.CastExpression: (koala.dynamicjava.tree.IntegerLiteral: 5 5 int) (koala.dynamicjava.tree.ByteTypeName: byte)) [(koala.dynamicjava.tree.SwitchBlock: (koala.dynamicjava.tree.CharacterLiteral: 'a' a char) null)])\";", "-    expected = \"(koala.dynamicjava.tree.SwitchStatement: (koala.dynamicjava.tree.CastExpression: (koala.dynamicjava.tree.IntegerLiteral: 5 5 int) (koala.dynamicjava.tree.ShortType: short)) [(koala.dynamicjava.tree.SwitchBlock: (koala.dynamicjava.tree.IntegerLiteral: 5 5 int) null), (koala.dynamicjava.tree.SwitchBlock: null null)])\";", "+    expected = \"(koala.dynamicjava.tree.SwitchStatement: (koala.dynamicjava.tree.CastExpression: (koala.dynamicjava.tree.IntegerLiteral: 5 5 int) (koala.dynamicjava.tree.ShortTypeName: short)) [(koala.dynamicjava.tree.SwitchBlock: (koala.dynamicjava.tree.IntegerLiteral: 5 5 int) null), (koala.dynamicjava.tree.SwitchBlock: null null)])\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a15852d3306a8d9b88e6fb1ef442de48", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "7b186e8cfa737bd39a9facf1a855bea0de04458e", "commitAfterChange": "a3df75dea2230d74c46433fee8cffdc0bfeefcea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public DirectoryChooser(Frame owner, boolean allowMultiple)", "signatureAfterChange": "   public DirectoryChooser(Frame owner)", "diff": ["+   */", "+  public DirectoryChooser(Frame owner) {", "+    this(owner, null, false, false);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a167b2a8396175286ed62f60b7c8a034", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "6a170ab14316cceed86d0cd5eef7d1a5e1482088", "commitAfterChange": "8de007bf6be2b43ee2e0404f529aa96c640a30ed", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   private void okButtonPressed()", "signatureAfterChange": "   private void okButtonPressed()", "diff": ["-    if (_matchList.getModel().getSize()>0) {", "+    if (_force && (_matchList.getModel().getSize()==0)) {", "+      Toolkit.getDefaultToolkit().beep();", "+    }", "+    else {", "-    else Toolkit.getDefaultToolkit().beep();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a17ab4688f6c41aa278158cf3a738fe1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "5b5854a74ae4104fe98919ec137a82ddfe0b03d0", "commitAfterChange": "1ee842fd21d172ce428a3353cc0f74580e95bff8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public JPanel _builtDirectoryPanel()", "signatureAfterChange": "      public JPanel _builtDirectoryPanel()", "diff": ["+    dirChooser.setEditable(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a18640f5837af2d8df1add7a709698d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public void startInterpreterJVM()", "signatureAfterChange": "   public void startInterpreterJVM()", "diff": ["-//    Utilities.show(\"MainJVM: startInterpreterJVM() called\");", "-    synchronized(_masterJVMLock) {  // synch is probably overkill", "-      if (isStartupInProgress() || isInterpreterRunning())  return;", "-    }", "+    _log.log(this + \".startInterpreterJVM() called\");", "+//    synchronized(_masterJVMLock) {  // synch is unnecessary", "+    if (isStartupInProgress() || isInterpreterRunning())  return;  // These predicates simply check volatile boolean flags", "+//    }", "-    _log.logTime(\"starting with debug port: \" + debugPort);", "+    _log.log(\"Main JVM starting with debug port: \" + debugPort);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a194ab7a3d91d966d5611526a9bf7aa4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/KeyStrokeOptionComponentTest.java", "commitBeforeChange": "a357e82c74cb27dc4ce8ef007203ad2bd5dfa25b", "commitAfterChange": "f5e6f060cad653c11888e30b69842047d7693a32", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testApplyThenResetDefault()", "signatureAfterChange": "    public void testApplyThenResetDefault()", "diff": ["+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a19d2305b09c0ff959f1f06fbc4bd07e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 713, "methodNumberAfterChange": 700, "signatureBeforeChange": "    final private boolean jj_3R_222()", "signatureAfterChange": "    final private boolean jj_3R_223()", "diff": ["-  final private boolean jj_3R_222() {", "+  final private boolean jj_3R_223() {", "-    if (jj_3_30()) {", "+    if (jj_3_31()) {", "-    if (jj_3R_263()) return true;", "+    if (jj_3R_265()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b362539afa9aa2e52bd59b93619d45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "1313de8815d48e0a1c60eb5bee6900b6b7af3993", "commitAfterChange": "802c4acbf71daa5d149dbcd67d1f360241574951", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected void _updateWithErrors() throws BadLocationException", "signatureAfterChange": "     protected synchronized void _updateWithErrors() throws BadLocationException", "diff": ["-    protected void _updateWithErrors() throws BadLocationException {", "-      DefaultStyledDocument doc = new DefaultStyledDocument();", "+    protected synchronized void _updateWithErrors() throws BadLocationException {", "+      //DefaultStyledDocument doc = new DefaultStyledDocument();", "+      DefaultStyledDocument doc = (DefaultStyledDocument) getDocument();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b4e637f343a53f2021497a783ff11a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 397, "methodNumberAfterChange": 534, "signatureBeforeChange": "    final private boolean jj_3R_363()", "signatureAfterChange": "    final private boolean jj_3R_284()", "diff": ["-", "-  final private boolean jj_3R_363() {", "-    if (jj_scan_token(SWITCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_87()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(LBRACE)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_588()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(RBRACE)) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_284() {", "+    if (jj_scan_token(SWITCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_78()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(LBRACE)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_466()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(RBRACE)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b75d848df2d4048e65954eea093fc7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public boolean saveSettings()", "signatureAfterChange": "   public boolean saveSettings()", "diff": ["-    }", "+    }    ", "+    _model.setPreferencesStoredInProject(_storedPreferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1c0c46f4b765edde8ab965d0d77bb77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 274, "methodNumberAfterChange": 241, "signatureBeforeChange": "    final private boolean jj_3R_119()", "signatureAfterChange": "    final private boolean jj_3R_116()", "diff": ["-  final private boolean jj_3R_119() {", "-    if (jj_scan_token(HOOK)) return true;", "-    if (jj_3R_37()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_37()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_116() {", "+    if (jj_scan_token(HOOK)) return true;", "+    if (jj_3R_34()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_34()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1d35ec74e1276b3148dea5f4157c056", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "65add9d9f0de9278803d6c9a77b3294a4ab082f3", "commitAfterChange": "1ad8d0f619615b40333c2ef2eca24506e4639e2b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["-        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "+        fail(\"compile failed: \" + getCompilerErrorString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f15c061e8f099371a77fd58d929778", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "   boolean atEnd()", "signatureAfterChange": "   boolean atEnd()", "diff": ["-  boolean atEnd() { return (rmb._cursor.atEnd() || rmc._cursor.atEnd()); }", "+  boolean atEnd() { return (getRMB()._cursor.atEnd() || getRMC()._cursor.atEnd()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1fdbcb7757ecda65a86a334c143741e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void systemOutPrint(String s) throws RemoteException", "signatureAfterChange": "   public void systemOutPrint(String s) throws RemoteException", "diff": ["+    debug.logStart();", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a204481ae55e103ac33127f41e32e9b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testInterpretCurrentInteraction() throws EditDocumentException", "signatureAfterChange": "   public void testInterpretCurrentInteraction() throws EditDocumentException", "diff": ["-    TestInteractionsModel model = (TestInteractionsModel)_model;", "+    TestInteractionsModel model = (TestInteractionsModel) _model;", "-    doc.insertText(doc.getLength(), code, InteractionsDocument.DEFAULT_STYLE);", "+    doc.append(code, InteractionsDocument.DEFAULT_STYLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a20f0a6674206f235df785be5fcaaaa1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "commitAfterChange": "f938008597ce54d16e4a865d30f8ef062ea55d2f", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 54, "signatureBeforeChange": "   private void _saveCommand()", "signatureAfterChange": "   private void _saveCommand()", "diff": ["-      editInMenu(_editIndex, name, \"cmdline\", _commandLine.getText(), \"\", _commandWorkDirLine.getText());", "+      editInMenu(_editIndex, name, \"cmdline\", _commandLine.getText(), \"\", _commandWorkDirLine.getText(),", "+                 _commandDrJavaJarFileLine.getText());", "-      addToMenu(name, \"cmdline\", _commandLine.getText(), \"\", _commandWorkDirLine.getText());", "+      addToMenu(name, _commandLine.getText(), _commandWorkDirLine.getText(), _commandDrJavaJarFileLine.getText());", "-  }", "+  }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a22ccb6db4a94969109a43d3c700d32a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "f4c8eb851d98f4da2479f32fb767dac4b3a40e1c", "commitAfterChange": "a7e5e57a85d644730ad4382ac9b270a370e13493", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["-    _frm = new FindReplaceMachine(_model, _model.getDocumentIterator());", "+    _frm = new FindReplaceMachine(_model, _model.getDocumentIterator(), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2384eb88776f70c17c8e2a35e1fcc7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public synchronized void resume(DebugThreadData threadData)", "signatureAfterChange": "   public synchronized void resume(DebugThreadData threadData) throws DebugException", "diff": ["-  public synchronized void resume(DebugThreadData threadData) {", "+  public synchronized void resume(DebugThreadData threadData) throws DebugException{", "-    ", "-    resumeThread(thread);", "+", "+    resumeThread(thread, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a23c8b9cb1b42d43522e7358edde853a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "098be4c27233835145531c86355bc697a3b62bfd", "commitAfterChange": "28db8fb2942dc00cad50f5244fe215d573867721", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public T current()", "signatureAfterChange": "     public T current()", "diff": ["-      assert ! atStart() && ! atEnd();", "+//      assert ! atStart() && ! atEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a243ff659cd531c98b04a316a4a898ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testNonTestCaseError() throws Exception", "signatureAfterChange": "   public void testNonTestCaseError() throws Exception", "diff": ["-    _model.setResetAfterCompile(false);", "-    //synchronized(listener) {", "-      doc.startCompile();", "-      //listener.wait();", "-    //}", "+    // Doesn't reset interactions because interpreter is not used", "+    doc.startCompile();", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a266201b7a2d034d8bcb3f8a3c5289ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public Void visit(PostDecrement node)", "signatureAfterChange": "   public Void visit(IntTypeName node)", "diff": ["+   */", "+  public Void visit(IntTypeName node) {", "+    handlePrimitiveTypeName(node, \"int\");", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2b5ee312b4951338a7f4464c2e7089e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOpsTest.java", "commitBeforeChange": "bd115d85e858b9ca09ebbbacbcf2bcab93ec2746", "commitAfterChange": "74f91d4ab1bc60eb8b5e8fd35cfb982ee9101049", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void testSplitFile()", "signatureAfterChange": "      public void testSplitFile()", "diff": ["-    String path1 = \"\";", "+    StringBuilder path1 = new StringBuilder();", "-      path1 += s + File.separator;", "+      path1.append(s);", "+      path1.append(File.separator);", "-    File f = new File(path1);", "+    File f = new File(path1.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2bac18381898291b54c5d45284d95dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "875709ea758d694dda7555b8eeb2e15fa58e98c5", "commitAfterChange": "d29db164117e7452d6023bc6a73abe9d53f7d65b", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 41, "signatureBeforeChange": "   private Type handleNumericUnaryExpression(UnaryExpression node)", "signatureAfterChange": "     private Type handleNumericUnaryExpression(UnaryExpression node)", "diff": ["-   */", "-  private Type handleNumericUnaryExpression(UnaryExpression node) {", "-    node.getExpression().acceptVisitor(this);", "-    try {", "-      Expression exp = ts.unaryPromote(ts.makePrimitive(node.getExpression()));", "-      node.setExpression(exp);", "-      return setType(node, getType(exp));", "-    }", "-    catch (UnsupportedConversionException e) {", "-      throw new ExecutionError(\"numeric.expression.type\", node);", "-    }", "-  }", "+     */", "+    private Type handleNumericUnaryExpression(UnaryExpression node) {", "+      check(node.getExpression());", "+      try {", "+        Expression exp = ts.unaryPromote(ts.makePrimitive(node.getExpression()));", "+        node.setExpression(exp);", "+        return setType(node, getType(exp));", "+      }", "+      catch (UnsupportedConversionException e) {", "+        throw new ExecutionError(\"numeric.expression.type\", node);", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2bcf5b1390cfdea935eeca125b2c169", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "commitAfterChange": "32513407e5f8f41a21eb0336c92af1269f67953c", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 93, "signatureBeforeChange": "   void _completeFileUnderCursor()", "signatureAfterChange": "   void _completeFileUnderCursor()", "diff": ["-    list = new ArrayList<GoToFileListEntry>(docs.size());", "-    for(OpenDefinitionsDocument d: docs) {", "-      if (d.isUntitled()) continue;", "-      String str = d.toString();", "-      if (str.lastIndexOf('.')>=0) {", "-        str = str.substring(0, str.lastIndexOf('.'));", "+    if ((DrJava.getConfig().getSetting(DIALOG_COMPLETE_SCAN_CLASS_FILES).booleanValue()) &&", "+        (_completeClassList.size()>0)) {", "+      list = _completeClassList;", "+    }", "+    else {", "+      list = new ArrayList<GoToFileListEntry>(docs.size());", "+      for(OpenDefinitionsDocument d: docs) {", "+        if (d.isUntitled()) continue;", "+        String str = d.toString();", "+        if (str.lastIndexOf('.')>=0) {", "+          str = str.substring(0, str.lastIndexOf('.'));", "+        }", "+        GoToFileListEntry entry = new GoToFileListEntry(d, str);", "+        if (d.equals(_model.getActiveDocument())) currentEntry = entry;", "+        list.add(entry);", "-      GoToFileListEntry entry = new GoToFileListEntry(d, str);", "-      if (d.equals(_model.getActiveDocument())) currentEntry = entry;", "-      list.add(entry);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2c8ada4906ea431ba9f290289471224", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/OptionConstants.java", "commitBeforeChange": "4009de7b28d2df87c05fce5746e7b354468d763f", "commitAfterChange": "ef6fbf4282520a8a1b7a89050b6be023e72a81a6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static Font getDefaultLineNumberFont()", "signatureAfterChange": "     public static Font getDefaultLineNumberFont()", "diff": ["-        return Font.decode(\"Monaco-PLAIN-12\");", "+        return Font.decode(\"Monaco 12\");", "-        return Font.decode(\"Monospaced-PLAIN-12\");", "+        return Font.decode(\"Monospaced 12\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2e08605a831ee0c370d535321752690", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 63, "signatureBeforeChange": "      public void interpreterChanged(boolean inProgress)", "signatureAfterChange": "      public void interpreterChanged(boolean inProgress)", "diff": ["-        if (printEvents) System.out.println(\"interpreterChanged \" + interpreterChangedCount);", "+        if (printEvents) printStream.println(\"interpreterChanged \" + interpreterChangedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2f7d138af62f2e817af6549753ff184", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "200037d181721d5a77f697343bf01da60193d9d5", "commitAfterChange": "7800062ae81518c3396891f7a26a405437cbcbf7", "methodNumberBeforeChange": 761, "methodNumberAfterChange": 761, "signatureBeforeChange": "   public static void openExtProcessFile(File file)", "signatureAfterChange": "   public static void openExtProcessFile(File file)", "diff": ["-      ExecuteExternalDialog.addToMenu(xc.get(\"drjava/extprocess/name\"), xc.get(\"drjava/extprocess/cmdline\"),", "+      String name = xc.get(\"drjava/extprocess/name\");", "+      ExecuteExternalDialog.addToMenu(name, xc.get(\"drjava/extprocess/cmdline\"),", "+      JOptionPane.showMessageDialog(null, \"The installation was successful for:\\n\"+name,", "+                                    \"Installation Successful\", JOptionPane.INFORMATION_MESSAGE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3173d4b675c3416d2c1f576d3c6a072", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6572078744d5462302a5712b2d3e4dd3c67ea5fb", "commitAfterChange": "123a2bf7d0ed947a362f9d9fd67ccb6733aff62d", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "    private void _setUpTabs()", "signatureAfterChange": "    private void _setUpTabs()", "diff": ["-    _errorPanel = new CompilerErrorPanel(_definitionsPane);", "+    _errorPanel = new CompilerErrorPanel(_definitionsPane, _model);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a32ab51aa5fa9b29dadf28bfa2a8c3f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 141, "signatureBeforeChange": "   public InteractionsScriptModel loadHistoryAsScript(FileOpenSelector selector)", "signatureAfterChange": "   public InteractionsScriptModel loadHistoryAsScript(FileOpenSelector selector) throws     IOException, OperationCanceledException", "diff": ["-  public InteractionsScriptModel loadHistoryAsScript(FileOpenSelector selector) {", "+  public InteractionsScriptModel loadHistoryAsScript(FileOpenSelector selector) throws", "+    IOException, OperationCanceledException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a34e8a423e7e293b8e4335d2024c023a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "commitAfterChange": "d07989306c43e4045df83ca1211956d5a85a21bd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testPackageNameEmpty() throws BadLocationException", "signatureAfterChange": "   public void testPackageNameEmpty()     throws BadLocationException, InvalidPackageException", "diff": ["-  public void testPackageNameEmpty() throws BadLocationException {", "+  public void testPackageNameEmpty()", "+    throws BadLocationException, InvalidPackageException", "+  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a35d003beabb8430467678896584b658", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionExistsCharInStmt.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    System.err.println(\"QuestionExistsCharInStmt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a377124518b378134d299a08c049cc38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 101, "signatureBeforeChange": "     public void preparePrintJob() throws BadLocationException,       FileMovedException", "signatureAfterChange": "     public void preparePrintJob() throws BadLocationException,       FileMovedException", "diff": ["-        filename = getDocument().getFile().getAbsolutePath();", "+        filename = getFile().getAbsolutePath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3a4407494fb62dd7dbb33f24a4d1c65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "commitAfterChange": "eb9337b4d6e2d2de4c1774413f08dfb947ae389c", "methodNumberBeforeChange": 360, "methodNumberAfterChange": 360, "signatureBeforeChange": "          private void _fileOpened(final OpenDefinitionsDocument doc)", "signatureAfterChange": "          private void _fileOpened(final OpenDefinitionsDocument doc)", "diff": ["-        if(! _model.isProjectFile(f))", "+        if (! _model.isProjectFile(f)) {", "+          if (_model.isInProjectPath(doc)) _model.setProjectChanged(true);", "+        }", "-      catch (IllegalStateException ise) {", "-        // Impossible: opened => has a file", "-        throw new UnexpectedException(ise);", "-      }", "+      catch (IllegalStateException ise) { throw new UnexpectedException(ise); } /* impossible */", "-        if(! _model.isProjectFile(f))", "-          _recentFileManager.updateOpenFiles(f);", "+        if (! _model.isProjectFile(f)) _recentFileManager.updateOpenFiles(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3bbe60ccf32e1dbc33d4cdcb84b5bf4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testCompilePackageAsField()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompilePackageAsField()     throws BadLocationException, IOException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3c8a78fefaa7650b6429cfd4cdf3d48", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testGetSourceRootPackageOneDeepValid() throws BadLocationException, IOException", "signatureAfterChange": "      public void testGetSourceRootPackageOneDeepValid() throws BadLocationException, IOException", "diff": ["+    debug.logStart();", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3cfafe7b4731e83ecc7eb62f7253d8d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "commitAfterChange": "4e52eec7688cbd5ec3584417f424923ba61a75e0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public SymbolData getNextAnonymousInnerClass()", "signatureAfterChange": "   public SymbolData getNextAnonymousInnerClass()", "diff": ["-    String name = getSymbolData().getName() + \"$\" + getSymbolData().preincrementAnonymousInnerClassNum();", "+    String name = getSymbolData().getName() + '$' + getSymbolData().preincrementAnonymousInnerClassNum();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3d32bf6a569e17ab2340abe1e66dfbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 321, "methodNumberAfterChange": 314, "signatureBeforeChange": "    final private boolean jj_3R_138()", "signatureAfterChange": "    final private boolean jj_3R_139()", "diff": ["+  final private boolean jj_3R_139() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_207()) return true;", "+    if (jj_3R_88()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_382()) jj_scanpos = xsp;", "-  final private boolean jj_3R_138() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_206()) return true;", "-    if (jj_3R_88()) return true;", "-    if (jj_3R_381()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3ddc850f13d33daad419d4c02aa3205", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 343, "methodNumberAfterChange": 873, "signatureBeforeChange": "    final private boolean jj_3R_402()", "signatureAfterChange": "    final private boolean jj_3R_410()", "diff": ["-", "-  final private boolean jj_3R_402() {", "-    if (jj_scan_token(LEFT_SHIFT_ASSIGN)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_410() {", "+    if (jj_scan_token(LEFT_SHIFT_ASSIGN)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3e01585b1256913ed0674edee4fae63", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "c0487ade35919fa6d08b7c39361898d3c5751c04", "commitAfterChange": "7b4296c095d59b57f25b910a8bdce57816e7621f", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public int findPrevEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "signatureAfterChange": "   public int findPrevEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "diff": ["-    StringBuffer keyBuf = new StringBuffer(\"findPrevEnclosingBrace:\").append(opening).append(':').append(closing).append(':').append(pos);", "+    StringBuilder keyBuf = new StringBuilder(\"findPrevEnclosingBrace:\").append(opening).append(':').append(closing).append(':').append(pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3e5770c959c4ee646d700f2dd900d6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c5ab9d91688dca7fa6244117a62a5f0f85d131ec", "commitAfterChange": "fa3227bd8ed65d422e78bb16b48f5f807a121783", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public void hideDebugger()", "signatureAfterChange": "   public void hideDebugger()", "diff": ["-    _debuggerEnabledMenuItem.setState(false);", "+    _setDebugMenuItemsEnabled(false);    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3feab85b7481e4adc639043ec1484d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "51bfc4d668bc1673b008afd130ba536a07f9c69d", "commitAfterChange": "332b6e452982977da36f3fe748b79e9b0c3888de", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   private void _setupColorPanel( ConfigPanel panel)", "signatureAfterChange": "   private void _setupColorPanel( ConfigPanel panel)", "diff": ["-    panel.addComponent( new ColorOptionComponent (OptionConstants.DEFINITIONS_MATCH_COLOR, \"Brace-matching Color\", this, true));", "+    panel.addComponent( new ColorOptionComponent (OptionConstants.DEFINITIONS_MATCH_COLOR, \"Brace-matching Color\", this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40648f90a3d93a9c6bb9e7e9a94fcf5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "eclipse/src/edu/rice/cs/util/text/SWTDocumentAdapter.java", "commitBeforeChange": "bd3609d73f910b773bb009bd9fec801547e38ce7", "commitAfterChange": "ee77a4b190fe991345758d9ffc949583a7709b61", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void insertText(int offs, String str, String style)     throws DocumentAdapterException", "signatureAfterChange": "   public void insertText(int offs, String str, String style)     throws DocumentAdapterException", "diff": ["-    if (_condition.canInsertText(offs, str, style)) {", "+    if (_condition.canInsertText(offs)) { //, str, style)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40de980f69fa43e82adaa0e0065a88a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testReplaceAllSameWord() throws BadLocationException", "signatureAfterChange": "   public void testReplaceAllSameWord() throws BadLocationException", "diff": ["-   */", "+  /** This test checks that replacing a word with itself will halt on replace all. */", "+    assertEquals(\"replace all with the same word\", \"cool cool\", _doc.getText());", "+//    System.err.println(\"Forward part of testReplaceAllSameWord completed\");", "-    assertEquals(\"replace all with the same word\", \"cool cool\", _doc.getText());", "+    assertEquals(\"replace all backward with the same word\", \"cool cool\", _doc.getText());", "+//    System.err.println(\"testReplaceAllSameWord completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40ea329976fb058f250e2161204974e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public ClasspathVector getClasspath()", "signatureAfterChange": "   public ClassPathVector getClassPath()", "diff": ["-  public ClasspathVector getClasspath() { return _interpreterControl.getClasspath(); }", "+  public ClassPathVector getClassPath() { return _interpreterControl.getClassPath(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a41a3b0cbf3f1bc1c09ef78b5c4eb951", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 386, "methodNumberAfterChange": 386, "signatureBeforeChange": "     public int _getFirstNonWSCharPos(int pos) throws BadLocationException", "signatureAfterChange": "     public int getFirstNonWSCharPos(int pos) throws BadLocationException", "diff": ["-    /** Assumes read lock is already held. */", "-    public int _getFirstNonWSCharPos(int pos) throws BadLocationException {", "-      return getDocument()._getFirstNonWSCharPos(pos);", "+    /**Only runs in the event thread. */", "+    public int getFirstNonWSCharPos(int pos) throws BadLocationException {", "+      return getDocument().getFirstNonWSCharPos(pos);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a439806216b88f111e88aecc63ce47b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 677, "methodNumberAfterChange": 385, "signatureBeforeChange": "    final private boolean jj_3R_255()", "signatureAfterChange": "    final private boolean jj_3R_355()", "diff": ["+", "+  final private boolean jj_3R_355() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_362()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_363()) return true;", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_255() {", "-    if (jj_3R_282()) {", "-    if (jj_3R_283()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4576565995f7e38f65ffdae8be7d15a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "9384fc32fbcbd39c62d94dea85b6e39cec7640c4", "commitAfterChange": "d80369d9c3076ba83762fd67d26b865a3f105bab", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testOpenMultipleFilesError()", "signatureAfterChange": "   public void testOpenMultipleFilesError()", "diff": ["-    assertTrue(\"non-existent file\", docs == null);", "+    assertEquals(\"no doc files should be open\", null, docs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4584f7cd667dbd1d904bca799e09954", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7eb08657532d9784c123b1d1294465471514e8b5", "commitAfterChange": "15a801ef7ccca1e771af5a8b2d63dc34aef8ced8", "methodNumberBeforeChange": 604, "methodNumberAfterChange": 604, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["-              m.add(Utilities.createDelegateAction(\"Run File's Main Method\", _runAction));", "+              m.add(Utilities.createDelegateAction(\"Run File\", _runAction));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a47a6ea00d98206856e93f47a69add5c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/PopupConsole.java", "commitBeforeChange": "6d214db24b68a17f17e0cc8f3030a6df6dfa9e3d", "commitAfterChange": "b1335a3b17a414ac9a5047d93a0387148d0d6ac9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   private String showDialog(Frame parentFrame)", "signatureAfterChange": "   private String showDialog(Frame parentFrame)", "diff": ["+    MainFrame.setPopupLoc(dialog);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4807751f534a71d4d5fa5fe82c49afe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "05448f4a16d388258dac3b5fe6469699fb11175e", "commitAfterChange": "b128df4fa9d8df79a76ba9e19a170c160365e646", "methodNumberBeforeChange": 392, "methodNumberAfterChange": 392, "signatureBeforeChange": "   private boolean _saveProjectAs()", "signatureAfterChange": "   private boolean _saveProjectAs()", "diff": ["-    ", "+    _saveChooser.setMultiSelectionEnabled(false);", "-      if (! file.exists() || _verifyOverwrite()) { ", "+      if ((file!=null) && (! file.exists() || _verifyOverwrite())) { "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48300fd29de2ce06bc22242527f9338", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 608, "methodNumberAfterChange": 591, "signatureBeforeChange": "    final private boolean jj_3R_157()", "signatureAfterChange": "    final private boolean jj_3R_157()", "diff": ["+  final private boolean jj_3R_157() {", "+    if (jj_3R_80()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_157() {", "-    if (jj_scan_token(FLOAT)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4852acdc2c1e21346019af11012e0c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3ce53d032ad1bc176a487b71ca8af2994e1e9b4a", "commitAfterChange": "f9cf0907b4c2618456fd74126eedfa638b8d8fcb", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": "   public void gotoFileMatchingMask(String mask)", "signatureAfterChange": "   public void gotoFileMatchingMask(String mask)", "diff": ["-    ArrayList<GoToFileListEntry> list;", "-    list = new ArrayList<GoToFileListEntry>(docs.size());", "+    ArrayList<GoToFileListEntry> list = new ArrayList<GoToFileListEntry>(docs.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a49e68faa58ad84fe4e6aac0706af600", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public void setProjectExtraClasspath(ClasspathVector cp);", "signatureAfterChange": "   public void setExtraClassPath(ClassPathVector cp);", "diff": ["-  public void setProjectExtraClasspath(ClasspathVector cp);", "+  public void setExtraClassPath(ClassPathVector cp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4c16cb2b5bb3cc69e3a917749273a93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testSwitchToNonExistantInterpreter()", "signatureAfterChange": "   public void testSwitchToNonExistantInterpreter()", "diff": ["+    debug.logStart();", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4d3cded5af07118ffc5e66bd44a8a2e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 54, "signatureBeforeChange": "     public void currThreadResumed()", "signatureAfterChange": "     public void currThreadResumed()", "diff": ["-      if (printEvents) System.out.println(\"threadResumed \" + currThreadResumedCount);", "+      if (printEvents) printStream.println(\"threadResumed \" + currThreadResumedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4d3dd1b3255d6f3309ed1d3896379fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9c56cd9d9775329b3a5e6a7701ab0c05369850af", "commitAfterChange": "a7a439f9a53360ece86e113cdb8203e5c8b2acda", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 107, "signatureBeforeChange": "   public void saveAllFiles(FileSaveSelector com) throws IOException", "signatureAfterChange": "   public abstract void saveAllFiles(FileSaveSelector com) throws IOException;", "diff": ["-  public void saveAllFiles(FileSaveSelector com) throws IOException {", "+  public abstract void saveAllFiles(FileSaveSelector com) throws IOException;", "-    synchronized (_documentsRepos) { ", "-      for (final OpenDefinitionsDocument doc: _documentsRepos.values()) {", "-        aboutToSaveFromSaveAll(doc);", "-        doc.saveFile(com);", "-      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4ddae3905159dbb1e96fe9e57f51ed5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyElementaryVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Void forBlock(Block that)", "signatureAfterChange": "   public Void forBlock(Block that)", "diff": ["-    that.getStatements().visit(new BodyBodyElementaryVisitor(bd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    that.getStatements().visit(new BodyBodyElementaryVisitor(bd, _file, _package, _importedFiles, _importedPackages, ", "+                                                             _classNamesInThisFile, continuations, _innerClassesToBeParsed));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4fad5b66a0fbaeeef7f20d7f17c7742", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 682, "methodNumberAfterChange": 507, "signatureBeforeChange": "    final private boolean jj_3R_253()", "signatureAfterChange": "    final private boolean jj_3R_255()", "diff": ["+", "+  final private boolean jj_3R_255() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(32)) jj_scanpos = xsp;", "+    if (jj_3R_167()) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_467()) { jj_scanpos = xsp; break; }", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_3R_468()) jj_scanpos = xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_469()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(32)) jj_scanpos = xsp;", "-    if (jj_3R_166()) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-      if (jj_3R_465()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_466()) jj_scanpos = xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_467()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a52097e1b7fe91e236aac9d59c98ceb8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/HistorySaveDialog.java", "commitBeforeChange": "4a5d73f26539ac3437580a184cbddb734465435e", "commitAfterChange": "c9e80bbae1d05915842b741e3f824da56b5b7a57", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public String editHistory(String history)", "signatureAfterChange": "    public String editHistory(String history)", "diff": ["+", "-      _dialog.show();", "+      _textArea.setEditable(true);", "+      show();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5321633fe227bb49c64c6f8b27a193d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ab5f98cfbaf4d4f03ed7df38b403a2ed47f6970f", "commitAfterChange": "2956623adadc4e9d463894cafecdb1725bf77715", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public void saveProject(String filename) throws IOException", "signatureAfterChange": "   public void saveProject(String filename) throws IOException", "diff": ["+    System.out.println(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a541143ad8e6dc1c20faaf21a61e680c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public Object visit(SwitchStatement node)", "signatureAfterChange": "   public Node visit(SwitchStatement node)", "diff": ["+   */", "+  public Node visit(SwitchStatement node) {", "+    // Visits the components of this node", "+    Expression exp = node.getSelector();", "+    Node o = exp.acceptVisitor(this);", "+    if (o != null) {", "+      rejectReferenceType(o,exp);", "+      node.setSelector((Expression) o);", "+    }", "+    ", "+    Iterator<SwitchBlock> it = node.getBindings().iterator();", "+    while (it.hasNext()) {", "+      it.next().acceptVisitor(this);", "+    }", "+    return null;", "+  }", "-     */", "-    public Object visit(SwitchStatement node) {", "-        // Visits the components of this node", "-\tExpression exp = node.getSelector();", "-        Object o = exp.acceptVisitor(this);", "-        if (o != null) {", "-            if (o instanceof ReferenceType) {", "-                throw new ExecutionError(\"malformed.expression\", exp);", "-\t    }", "-\t    node.setSelector((Expression)o);", "-        }", "-", "-        Iterator it = node.getBindings().iterator();", "-        while (it.hasNext()) {", "-            ((Node)it.next()).acceptVisitor(this);", "-        }", "-        return null;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5445b35f237265924f2491a2fe71f6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 92, "signatureBeforeChange": "   synchronized void currThreadResumed() throws DebugException", "signatureAfterChange": "   synchronized void currThreadResumed() throws DebugException", "diff": ["-    if (printMessages) { System.out.println(\"In currThreadResumed()\"); }", "+    if (printMessages) { printStream.println(\"In currThreadResumed()\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a557d5852ed65ec7fef0ac79ba4595f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 455, "methodNumberAfterChange": 710, "signatureBeforeChange": "    final private boolean jj_3R_189()", "signatureAfterChange": "    final private boolean jj_3R_195()", "diff": ["-  final private boolean jj_3R_189() {", "-    if (jj_3R_222()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_258()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_195() {", "+    if (jj_3R_227()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_228()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a563a8ba579189c0082539235412b385", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testAutoboxing15()", "signatureAfterChange": "   public void testAutoboxing15()", "diff": ["-    TigerUtilities.setTigerEnabled(true);", "+    setTigerEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5665cc5e094d1a1c57fee475931e42c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "     public Object visit(UnsignedShiftRightExpression node)", "signatureAfterChange": "   public Class visit(UnsignedShiftRightExpression node)", "diff": ["+   */", "+  public Class visit(UnsignedShiftRightExpression node) {", "+    Class c = visitShiftExpression(node);", "+    ", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.unsignedShiftRight", "+           (NodeProperties.getType(node),", "+            ln.getProperty(NodeProperties.VALUE),", "+            rn.getProperty(NodeProperties.VALUE)));", "+    }", "+    return c;", "+  }", "-     */", "-    public Object visit(UnsignedShiftRightExpression node) {", "-        Class c = visitShiftExpression(node);", "-", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.unsignedShiftRight", "-                     (NodeProperties.getType(node),", "-                      ln.getProperty(NodeProperties.VALUE),", "-                      rn.getProperty(NodeProperties.VALUE)));", "-        }", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a56b856e2e1e0ab87d2be8fcf551eb5c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testIndentInsideParenAtStart()       throws BadLocationException, OperationCanceledException", "signatureAfterChange": "   public void testIndentInsideParenAtStart()       throws BadLocationException, OperationCanceledException", "diff": ["-    openDoc.syncCurrentLocationWithDefinitions(BAR_CALL_1.length());", "-    int loc = openDoc.getCurrentDefinitionsLocation();", "+    openDoc.setCurrentLocation(BAR_CALL_1.length());", "+    int loc = openDoc.getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a57c61180f6bdb8367fb9c445c233658", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 557, "signatureBeforeChange": "    final private boolean jj_3R_398()", "signatureAfterChange": "    final private boolean jj_3R_401()", "diff": ["-", "-  final private boolean jj_3R_398() {", "-    if (jj_3R_404()) return true;", "-    if (jj_3R_255()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_401() {", "+    if (jj_3R_406()) return true;", "+    if (jj_3R_258()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a59288fd44a8b726899ab149d78e6450", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 704, "methodNumberAfterChange": 740, "signatureBeforeChange": "    final private boolean jj_3R_541()", "signatureAfterChange": "    final private boolean jj_3R_336()", "diff": ["+", "+  final private boolean jj_3R_336() {", "+    if (jj_3R_356()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_357()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_541() {", "-    if (jj_3R_562()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_591()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a597b04cd45014fdba972f629a278df0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testDancingUIFileClosed() throws IOException", "signatureAfterChange": "   public void testDancingUIFileClosed() throws IOException", "diff": ["-     File ForceOpenClass1_file = new File(_tempDir, \"ForceOpenClass1.java\");", "-     String ForceOpenClass1_string =", "+     File forceOpenClass1_file = new File(_tempDir, \"ForceOpenClass1.java\");", "+     String forceOpenClass1_string =", "-     FileOps.writeStringToFile(ForceOpenClass1_file, ForceOpenClass1_string);", "+     FileOps.writeStringToFile(forceOpenClass1_file, forceOpenClass1_string);", "+     forceOpenClass1_file.deleteOnExit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5b78b3cb39a2ca7f21d4ba17e116849", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/PendingRequestManager.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void removePendingRequest (DocumentDebugAction action)", "signatureAfterChange": "   public void removePendingRequest (DocumentDebugAction action)", "diff": ["-    Vector<DocumentDebugAction> actions = null;", "-    actions = _pendingActions.get(className);", "+    Vector<DocumentDebugAction> actions = _pendingActions.get(className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5c0e8dfc935657a16cfbc7ac594c07f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsPane.java", "commitBeforeChange": "9d169028680f58d3e3b47cc25c8de1afe15038ec", "commitAfterChange": "cefd91ea5953c77c9fe2f6c1dd90708535579037", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic DefinitionsView(MainFrame mf)", "signatureAfterChange": " \t \tpublic DefinitionsView(MainFrame mf)", "diff": ["-\t\t\t", "-", "-", "-\t\t//????KEEP??????", "+\t\t_openChooser.setFileFilter(new JavaSourceFilter());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5c30924e8e4b6b7db3e5f653dd6958c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "d8dc2cdeba22db2fb0316de83a445bb83f56ae4d", "commitAfterChange": "fecb09777cd63cca239611fe19e85d2f0e8401e9", "methodNumberBeforeChange": 642, "methodNumberAfterChange": 567, "signatureBeforeChange": "    final private boolean jj_3R_555()", "signatureAfterChange": "    final private boolean jj_3R_546()", "diff": ["+  final private boolean jj_3R_546() {", "-  final private boolean jj_3R_555() {", "-    if (jj_scan_token(PUBLIC)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5cdb48c43c74f661b1e83bd50e47496", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "commitAfterChange": "84d383e8fea49389da19c11522947d451646ef3e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JPDADebugger(GlobalModel model)", "signatureAfterChange": "   public JPDADebugger(GlobalModel model)", "diff": ["-    _thread = null;", "+    _suspendedThreads = new RandomAccessStack();", "+    _runningThread = null;", "+    _deadThreads = new DeadThreadFilter();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5d1e90707eaf5d600105d549424c404", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5b93e80cb10dee78dfbc4bb12adf88d5e7123ec9", "commitAfterChange": "4d0c10a9f2d7a750ce18de4fac7dbd578a167cc0", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": "   void initOpenJavadocDialog()", "signatureAfterChange": "   void initOpenJavadocDialog()", "diff": ["-                                                       \"Open Javadoc\",", "+                                                       \"Open Java API Javadoc Webpage\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5e55d378d24e6c27b0638982396f24e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 311, "methodNumberAfterChange": 277, "signatureBeforeChange": "    final private boolean jj_3R_418()", "signatureAfterChange": "    final private boolean jj_3R_422()", "diff": ["+", "+  final private boolean jj_3R_422() {", "+    if (jj_scan_token(EXTENDS)) return true;", "+    if (jj_3R_425()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_418() {", "-    if (jj_scan_token(IMPLEMENTS)) return true;", "-    if (jj_3R_423()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5f0fbd255f7e45f98ad8be069e70e07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0c8d146c06eba1c2298f0daceb39048930ad6325", "commitAfterChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": "          public void breakpointRemoved(Breakpoint bp)", "signatureAfterChange": "          public void breakpointRemoved(Breakpoint bp)", "diff": ["+      _debugPanel.breakpointRemoved(bp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5f665fc1d56b8b93ad02b0bc370eba0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/TypeCheckerExtension.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Object visit(DivideExpression node)", "signatureAfterChange": "   public Class visit(DivideExpression node)", "diff": ["-  public Object visit(DivideExpression node) {", "+  public Class visit(DivideExpression node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5ffe8151add6c4397a6a9c8cbe770c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/RMIInteractionsModel.java", "commitBeforeChange": "3c002733e6bec1f112ca58ec38806686ba48b477", "commitAfterChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void addDebugInterpreter(String name)", "signatureAfterChange": "   public void addDebugInterpreter(String name)", "diff": ["-    InterpreterJVM.ONLY.addDebugInterpreter(name, new DynamicJavaAdapter());", "+    _interpreterControl.addDebugInterpreter(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a60392fa75f833ade00fa8e3d406313b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e8aadf94738660a0bbc26e412fcc2019eb094006", "commitAfterChange": "e12ed5645a770a1c97d39ff42d8e86b81fef1915", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "   private void _setUpStatusBar()", "signatureAfterChange": "   private void _setUpStatusBar()", "diff": ["+    // This field currently disabled due to performance concerns.", "+    _currLocationField.setVisible(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a60aa7de232dc897ee787fcdd4f74e61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/FileOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testCancelDoesNotChangeConfig()", "signatureAfterChange": "    public void testCancelDoesNotChangeConfig()", "diff": ["+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6114b91b40284b7b86118edf2e4ba73", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "37dab6b79fc3d4e6f7b2b5f0aa53a4ea9b7f7476", "commitAfterChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void compile(OpenDefinitionsDocument doc) throws IOException", "signatureAfterChange": "   public void compile(OpenDefinitionsDocument doc) throws IOException", "diff": ["+    doc.setCachedClassFile(null); // clear cached class file"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a62b282552bd7f0d6b7bce23bd043b77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "b6148d8c1aaf55232aeac694d90234c9353139cd", "commitAfterChange": "536afaee0374767d0f8bdf572a332576e3f54467", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   void findNext()", "signatureAfterChange": "   void findNext()", "diff": ["-    _findLabelTop.setText(\"Find\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6371a69534a20687da0c9b01f715128", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "35d9365226ba0771f8b6c75f7ce46695407e7805", "commitAfterChange": "e00a80132d9c599630e60c288ab824f99427e68b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   protected ObjectFieldAccess _getObjectFieldAccessForField(String field, Context context)", "signatureAfterChange": "   protected ObjectFieldAccess _getObjectFieldAccessForField(String field, Context context)", "diff": ["-      Class c;", "-      try {", "-        c = context.lookupClass(_thisClassName);", "-      }", "-      catch (ClassNotFoundException e) {", "-        throw new UnexpectedException (e);", "-      }", "+      Class c = _loadClassForThis(context);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a63cd9141c59629e8a555cf96cfd05f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 751, "methodNumberAfterChange": 729, "signatureBeforeChange": "    final private boolean jj_3R_299()", "signatureAfterChange": "    final private boolean jj_3R_260()", "diff": ["+", "+  final private boolean jj_3R_260() {", "+    if (jj_scan_token(SWITCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_116()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(LBRACE)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_305()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(RBRACE)) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_299() {", "-    if (jj_scan_token(SWITCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_115()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(LBRACE)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_376()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(RBRACE)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a643d994caa3d72ba7b6b822b961d8b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public TypeData forSimpleNamedClassInstantiation(SimpleNamedClassInstantiation that)", "signatureAfterChange": "   public TypeData forSimpleNamedClassInstantiation(SimpleNamedClassInstantiation that)", "diff": ["-    int lastIndexOfDot = name.lastIndexOf(\".\");", "+    int lastIndexOfDot = name.lastIndexOf('.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6460751edc08c1e538a43d827aa2248", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "75d6ee48e583e9a62b38304dae2bad1322e37e97", "commitAfterChange": "61ae7f6f012a73a5cdd538e20c7da40dadf1362f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected final void invokeSlave(JVMBuilder jvmBuilder)", "signatureAfterChange": "   protected final void invokeSlave(JVMBuilder jvmBuilder)", "diff": ["+            debug.log(\"Entered state \" + State.FRESH);", "+      debug.log(\"Entered state \" + State.FRESH);", "+        debug.log(\"Entered state \" + State.FRESH);", "+      debug.log(\"Entered state \" + State.RUNNING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a64c64ff5247204d1bb442458b858e92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/KeyBindingManager.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void addShiftAction(Option<KeyStroke> opt, String shiftS)", "signatureAfterChange": "   public void addShiftAction(Option<KeyStroke> opt, String shiftS)", "diff": ["-    Action shiftA = (Action) _actionMap.get(shiftS);", "+    Action shiftA = _actionMap.get(shiftS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6606d413b24902941f8c0687435c42f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavadocDialog.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JavadocDialog(JFrame frame)", "signatureAfterChange": "   public JavadocDialog(JFrame frame)", "diff": ["-    chooser.setEditable(true);", "+//    chooser.setEditable(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a660c0939ed961f0a2ba5d3670e61915", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "1313de8815d48e0a1c60eb5bee6900b6b7af3993", "commitAfterChange": "802c4acbf71daa5d149dbcd67d1f360241574951", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected void _updateStyles(AttributeSet newSet)", "signatureAfterChange": "   protected void _updateStyles(AttributeSet newSet)", "diff": ["+    TEST_PASS_ATTRIBUTES.addAttributes(newSet);", "+    TEST_FAIL_ATTRIBUTES.addAttributes(newSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6736d8205b4b693ee5e87db698f1ee8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 766, "methodNumberAfterChange": 769, "signatureBeforeChange": "    final private boolean jj_3R_492()", "signatureAfterChange": "    final private boolean jj_3R_537()", "diff": ["-", "-  final private boolean jj_3R_492() {", "-    if (jj_scan_token(ASSIGN)) return true;", "-    if (jj_3R_94()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_537() {", "+    if (jj_scan_token(ASSIGN)) return true;", "+    if (jj_3R_97()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a673a99b5274b94834036dc73131d757", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "e7660fffdb51451a3d4a61981945f6529addb874", "commitAfterChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          public Component getListCellRendererComponent(JList list, Object value, int row, boolean sel, boolean hasFocus)", "signatureAfterChange": "          public Component getListCellRendererComponent(JList list, Object value, int row, boolean sel, boolean hasFocus)", "diff": ["-      //renderer.setPreferredSize(preferredSize);", "+      renderer.setPreferredSize(preferredSize);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a67b59ad4a097594a349065a0a7e05fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   protected int getDebugPort()", "signatureAfterChange": "   protected int getDebugPort()", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      try {", "-        port = _model.getDebugPort();", "-      }", "-      catch (IOException ioe) {", "-        // Can't find port; don't use debugger", "-      }", "+    try {", "+      port = _model.getDebugPort();", "+    }", "+    catch (IOException ioe) {", "+      // Can't find port; don't use debugger"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a67ba810d12d509ff67bd4798f884920", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 760, "methodNumberAfterChange": 758, "signatureBeforeChange": "    final private boolean jj_3R_133()", "signatureAfterChange": "    final private boolean jj_3R_141()", "diff": ["+", "+  final private boolean jj_3R_141() {", "+    if (jj_scan_token(COMMA)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_204()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_205()) return true;", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_133() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_3R_191()) {", "-    if (jj_3R_192()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a67df952bd27c68ff487f2f782a4308c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsPane.java", "commitBeforeChange": "a5a766c0abe1a94ea1cfa69aac7995654eda0886", "commitAfterChange": "e89db6424eb4d447de92442bb5bec9b31ff0f5d0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public boolean saveAs()", "signatureAfterChange": "   public boolean saveAs()", "diff": ["-    JFileChooser fc = new JFileChooser();", "+    JFileChooser fc = _saveChooser;", "+\t\tfc.setSelectedFile(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a685f311de5870bc3ac93f5c3f3dc9fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "8cfaf2efb8ae59b79b9538e0bd5eaf251c6db08b", "commitAfterChange": "b732820bc2f8849bda78001b782e555a753cad1e", "methodNumberBeforeChange": 445, "methodNumberAfterChange": 447, "signatureBeforeChange": "          private boolean _fileSaveHelper(OpenDefinitionsDocument doc, int paneOption)", "signatureAfterChange": "          private boolean _fileSaveHelper(OpenDefinitionsDocument doc, int paneOption)", "diff": ["-          if (doc.isAuxiliaryFile() || (_model.isProjectActive() && doc.isInProjectPath())) {", "-            String savedFilename = null;", "-            try { savedFilename = doc.getFile().getName(); }", "+          if (doc.isAuxiliaryFile() || (_model.isProjectActive() && doc.isInProjectPath())) { // what is this test for?", "+            try { doc.getFile().getName(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a68c7b0a840b8043c128abe9276627b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c5840283da06690e8676e5b395b239a18a3908bb", "commitAfterChange": "b126c48fb6e642ca409d0fdb5b704f90178a8277", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 211, "signatureBeforeChange": "   private JMenu _setUpProjectMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpProjectMenu(int mask)", "diff": ["-    _runProjectAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a69d9b4984cfbebddae55cc7d5757abc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "          public void testForThrowStatement()", "signatureAfterChange": "          public void testForThrowStatement()", "diff": ["-      SymbolData re = llv.getSymbolData(\"java.lang.RuntimeException\", JExprParser.NO_SOURCE_INFO, true);", "+      SymbolData re = llv.getSymbolData(\"java.lang.RuntimeException\", SourceInfo.NO_INFO, true);", "-      Expression e = new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"myException\"));", "-      ThrowStatement ts = new ThrowStatement(JExprParser.NO_SOURCE_INFO, e);", "+      Expression e = new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"myException\"));", "+      ThrowStatement ts = new ThrowStatement(SourceInfo.NO_INFO, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6b102a1051ee71c300600eb1c9e1fe8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/OpenDefinitionsDocument.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void startCompile();", "signatureAfterChange": "   public void startCompile() throws IOException;", "diff": ["-  public void startCompile();", "+  public void startCompile() throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6b43fac4809e8c448893c7c210fd8b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": "      public void assertCompileErrorDuringJUnitCount(int i)", "signatureAfterChange": "          public void assertJUnitRunningCount(int i)", "diff": ["-", "-    public void assertCompileErrorDuringJUnitCount(int i){", "-      assertEquals(\"number of times compileErrorDuringJUnit fired\", ", "-                   i, ", "-                   compileErrorDuringJUnitCount);", "-    }", "+    ", "+    public void assertJUnitRunningCount(int i) {", "+      assertEquals(\"number of times junitRunning fired\", i, junitRunningCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d1e31f807503ad3f38ad8dd96ff27c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsEditorKit.java", "commitBeforeChange": "b05d6101d72721dc72e1089de24af7a09f520884", "commitAfterChange": "1c36c4f5a2718b62938a20268edf5b2f24819a2b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void actionPerformed(ActionEvent e)", "signatureAfterChange": "      public void actionPerformed(ActionEvent e)", "diff": ["-      LOG.log(\"PreviousWordAction.actionPerformed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d2f98a7525698be377dd9f8fb1ccd2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "    public void testGetIndentOfCurrStmtIgnoreDelimsInParenPhrase() throws BadLocationException", "signatureAfterChange": "    public void testGetIndentOfCurrStmtIgnoreDelimsInParenPhrase() throws BadLocationException", "diff": ["-    assertEquals(\"ignores delimiter in paren phrase\",", "-                 \"  \",", "-                 _doc.getIndentOfCurrStmt(12));", "+    assertEquals(\"ignores delimiter in paren phrase\", 2, _doc.getIndentOfCurrStmt(12));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6e5b254179f29246acb2a2943a4ed30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/SimpleInteractionsModel.java", "commitBeforeChange": "06a5c45ef1fc363387e831a72bae96256df629e8", "commitAfterChange": "d38c322133f95b0654ce8d1107bb215e7f56de2e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void addToClassPath(String path)", "signatureAfterChange": "   public void addProjectClassPath(URL path)", "diff": ["-  public void addToClassPath(String path) {", "-    _interpreter.addClassPath(path);", "+  public void addProjectClassPath(URL path) {", "+    _interpreter.addProjectClassPath(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6e6ed78ac44746c39fda81d0d8b3d15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void removeBreakpoint(final Breakpoint breakpoint);", "signatureAfterChange": "   public void removeBreakpoint(final Breakpoint breakpoint) throws DebugException;", "diff": ["-  public void removeBreakpoint(final Breakpoint breakpoint);", "+  public void removeBreakpoint(final Breakpoint breakpoint) throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a703ae20527e245a3fc41a7b70c810f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 853, "methodNumberAfterChange": 368, "signatureBeforeChange": "    final private boolean jj_3R_440()", "signatureAfterChange": "    final private boolean jj_3R_248()", "diff": ["+  final private boolean jj_3R_248() {", "+    if (jj_3R_311()) return true;", "+    if (jj_3R_115()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_440() {", "-    if (jj_3R_307()) return true;", "-    if (jj_3R_112()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a720bca70681976dcde4ed71e5c1a74c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 518, "methodNumberAfterChange": 303, "signatureBeforeChange": "    final private boolean jj_3R_320()", "signatureAfterChange": "    final private boolean jj_3R_253()", "diff": ["+", "+  final private boolean jj_3R_253() {", "+    if (jj_scan_token(ENUM)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_417()) jj_scanpos = xsp;", "+    if (jj_scan_token(LBRACE)) return true;", "+    if (jj_3R_418()) return true;", "+    if (jj_scan_token(RBRACE)) return true;", "+    return false;", "+  }", "-    if (jj_scan_token(ENUM)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_466()) jj_scanpos = xsp;", "-    if (jj_scan_token(LBRACE)) return true;", "-    if (jj_3R_467()) return true;", "-    if (jj_scan_token(RBRACE)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7326ed1a7c169708fe8e39d3ccaff9c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 475, "methodNumberAfterChange": 466, "signatureBeforeChange": "    final private boolean jj_3R_386()", "signatureAfterChange": "    final private boolean jj_3R_388()", "diff": ["-  final private boolean jj_3R_386() {", "+  final private boolean jj_3R_388() {", "-    if (jj_3R_390()) return true;", "+    if (jj_3R_392()) return true;", "-      if (jj_3R_390()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_392()) { jj_scanpos = xsp; break; }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a745d71ac0dbca95522b3070d7f33547", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentDocFrame.java", "commitBeforeChange": "c750f23eb2b9150b4fb75772deac7c17626a7d1c", "commitAfterChange": "74e4ff93e186e54c8f3a2ca5764d77cf5247e4cc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "    private void updateFontColor()", "signatureAfterChange": "    private void updateFontColor()", "diff": ["-    if (CodeStatus.DEVELOPMENT)", "-      _antiAliasText = DrJava.getConfig().getSetting(OptionConstants.TEXT_ANTIALIAS).booleanValue();", "+    _antiAliasText = DrJava.getConfig().getSetting(OptionConstants.TEXT_ANTIALIAS).booleanValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a76fecc5bc0fa9ba06ade7c584be67c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 186, "signatureBeforeChange": "     protected DefinitionsDocument getDocument()", "signatureAfterChange": "     protected DefinitionsDocument getDocument()", "diff": ["-            _documentNavigator.refreshDocument(getIDocGivenODD(this), _file.getCanonicalFile().getParent());", "+            _documentNavigator.refreshDocument(this, _file.getCanonicalFile().getParent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a77b76554824a26e17f77e5a0c8cc171", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 184, "methodNumberAfterChange": 184, "signatureBeforeChange": "   void _switchDefScrollPane()", "signatureAfterChange": "   void _switchDefScrollPane()", "diff": ["-  ", "+", "-    ", "+", "-    ", "+", "-    JScrollPane scroll =", "-      (JScrollPane) _defScrollPanes.get(_model.getActiveDocument());", "+    JScrollPane scroll = _defScrollPanes.get(_model.getActiveDocument());", "-    ", "+", "-    ", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a78d057a89191e6395378861ed1a1055", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ProcessChain.java", "commitBeforeChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "commitAfterChange": "fdb0eba529d65804f971cdb52c673713ef0d4616", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected void stopAllRedirectors()", "signatureAfterChange": "   protected void stopAllRedirectors()", "diff": ["-    for(StreamRedirectThread r: _stdOutRedirectors) {", "-      // r.setStopFlag();", "-    }", "-    _stdOutRedirectors.clear();", "-    for(StreamRedirectThread r: _stdErrRedirectors) {", "-      // r.setStopFlag();", "-    }", "-    _stdErrRedirectors.clear();", "+    for(StreamRedirectThread r: _redirectors) { r.setStopFlag(); }", "+    _redirectors.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a790920481b154b275cb9a72456417e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public static void restartIfNecessary(boolean forToolsJar, String[] args)", "signatureAfterChange": "   public static void restartIfNecessary(boolean forToolsJar, String[] args)", "diff": ["+      System.out.println(classpath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7968b781c6d42f01ce6d0fac138d811", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 446, "methodNumberAfterChange": 439, "signatureBeforeChange": "    final private boolean jj_3R_259()", "signatureAfterChange": "    final private boolean jj_3R_262()", "diff": ["+  final private boolean jj_3R_262() {", "+    if (jj_3R_280()) return true;", "+      if (jj_3R_305()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_259() {", "-    if (jj_3R_277()) return true;", "-      if (jj_3R_302()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7ca2d783aca4c42ed2b6f7e7d92a9d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ConstructorBodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          public void testSimpleThisConstructorInvocationAllowed()", "signatureAfterChange": "          public void testSimpleThisConstructorInvocationAllowed()", "diff": ["-      MethodData constructor = new MethodData(\"zebra\", _publicMav, new TypeParameter[0], _sd3, new VariableData[] {new VariableData(SymbolData.INT_TYPE)}, new String[0], _sd3, null);", "+      MethodData constructor = ", "+        new MethodData(\"zebra\", _publicMav, new TypeParameter[0], _sd3, ", "+                       new VariableData[] {new VariableData(SymbolData.INT_TYPE)}, new String[0], _sd3, null);", "-        new SimpleThisConstructorInvocation(SourceInfo.NO_INFO, ", "-                                            new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[] {", "-        new IntegerLiteral(SourceInfo.NO_INFO, 5)}));", "+        new SimpleThisConstructorInvocation(SourceInfo.NONE, ", "+                                            new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[] {", "+        new IntegerLiteral(SourceInfo.NONE, 5)}));", "-      SimpleThisConstructorInvocation constr2 = new SimpleThisConstructorInvocation(SourceInfo.NO_INFO, new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]));", "+      SimpleThisConstructorInvocation constr2 = new SimpleThisConstructorInvocation(SourceInfo.NONE, new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7d12afc9f93341534528635af567fc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void fullSetup()", "signatureAfterChange": "   private void fullSetup()", "diff": ["-    errors = new CompilerError[] { ", "-      new CompilerError(files[0], \"Test error with File (no line)\", false),", "-      new CompilerError(files[4], 3, 0, \"Test error with File\", false),", "-      new CompilerError(files[2], \"Test warning with File (no line)\", true),", "-      new CompilerError(files[4], \"Test warning with File (no line)\", true),", "-      new CompilerError(files[2], 3, 0, \"Test warning with File\", true),", "-      new CompilerError(files[4], 1, 0, \"Test warning with File\", true),", "-      new CompilerError(files[1], \"Test warning with File (no line)\", true),", "-      new CompilerError(files[1], \"Test error with File (no line)\", false),", "-      new CompilerError(files[2], \"Test error with File (no line)\", false),", "-      new CompilerError(files[3], \"Test error with File (no line)\", false),", "-      new CompilerError(files[3], 3, 0, \"Test error with File\", false),", "-      new CompilerError(files[4], \"Test error with File (no line)\", false),", "-      new CompilerError(files[0], 2, 0, \"Test error with File\", false),", "-      new CompilerError(files[2], 2, 0, \"Test warning with File\", true),", "-      new CompilerError(files[0], 1, 0, \"Test error with File\", false) ", "+    errors = new DJError[] { ", "+      new DJError(files[0], \"Test error with File (no line)\", false),", "+      new DJError(files[4], 3, 0, \"Test error with File\", false),", "+      new DJError(files[2], \"Test warning with File (no line)\", true),", "+      new DJError(files[4], \"Test warning with File (no line)\", true),", "+      new DJError(files[2], 3, 0, \"Test warning with File\", true),", "+      new DJError(files[4], 1, 0, \"Test warning with File\", true),", "+      new DJError(files[1], \"Test warning with File (no line)\", true),", "+      new DJError(files[1], \"Test error with File (no line)\", false),", "+      new DJError(files[2], \"Test error with File (no line)\", false),", "+      new DJError(files[3], \"Test error with File (no line)\", false),", "+      new DJError(files[3], 3, 0, \"Test error with File\", false),", "+      new DJError(files[4], \"Test error with File (no line)\", false),", "+      new DJError(files[0], 2, 0, \"Test error with File\", false),", "+      new DJError(files[2], 2, 0, \"Test warning with File\", true),", "+      new DJError(files[0], 1, 0, \"Test error with File\", false) ", "-    CompilerError[] copy = new CompilerError[errors.length];", "+    DJError[] copy = new DJError[errors.length];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7e56f0f26851b838ab4c0746f584ffb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitorTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testClass1()", "signatureAfterChange": "   public void testClass1()", "diff": ["-                                      \"    l.2 PrimitiveType <int>\\n\" +", "+                                      \"    l.2 PrimitiveTypeName <int>\\n\" +", "-                                      \"    l.4 ReferenceType {\\n\" +", "+                                      \"    l.4 ReferenceTypeName {\\n\" +", "-                                      \"      l.4 ReferenceType {\\n\" +", "+                                      \"      l.4 ReferenceTypeName {\\n\" +", "-                                      \"      l.12 PrimitiveType <int>\\n\" +", "+                                      \"      l.12 PrimitiveTypeName <int>\\n\" +", "-                                      \"    l.16 PrimitiveType <int>\\n\" +", "+                                      \"    l.16 PrimitiveTypeName <int>\\n\" +", "-                                      \"    l.20 PrimitiveType <void>\\n\" +", "+                                      \"    l.20 PrimitiveTypeName <void>\\n\" +", "-                                      \"      l.20 PrimitiveType <int>\\n\" +", "+                                      \"      l.20 PrimitiveTypeName <int>\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7f83cde1c6cdd7de05dd4154458a262", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classinfo/TreeFieldInfo.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public ClassInfo getType()", "signatureAfterChange": "     public ClassInfo getType()", "diff": ["-\tif (type == null) {", "-\t    type = (ClassInfo)fieldTree.getType().acceptVisitor(typeVisitor);", "-\t}", "+  if (type == null) {", "+      type = fieldTree.getType().acceptVisitor(typeVisitor);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8080944bc0dd82ad7b492631216809d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected ObjectReference _getInterpreterJVMRef()     throws DebugException", "signatureAfterChange": "   protected ObjectReference _getInterpreterJVMRef()     throws DebugException", "diff": ["-    List<ReferenceType> referenceTypes = _vm.classesByName(className);  // Added parameterization <ReferenceType>. JDK 1.5 will eliminate this warning", "+    List referenceTypes = _vm.classesByName(className);  // Add parameterization <ReferenceType>. JDK 1.5 will eliminate this check", "-      ReferenceType rt = referenceTypes.get(0);", "+      ReferenceType rt = (ReferenceType)referenceTypes.get(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a81505d572f8743f556d13ecdc6ca4db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 539, "methodNumberAfterChange": 641, "signatureBeforeChange": "    final private boolean jj_3R_448()", "signatureAfterChange": "    final private boolean jj_3R_450()", "diff": ["-  final private boolean jj_3R_448() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(32)) jj_scanpos = xsp;", "-    if (jj_3R_166()) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_461()) { jj_scanpos = xsp; break; }", "-    }", "+", "+  final private boolean jj_3R_450() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(32)) jj_scanpos = xsp;", "+    if (jj_3R_167()) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_463()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a84dffb1411754c8094d3e714128b617", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "bf2319a0fd4ff0da05d171cf995d395154267897", "commitAfterChange": "ce944bab12f670cf565ac442d0f81c8cbf5e4ad0", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": "    public boolean closeAllFiles()", "signatureAfterChange": "    public boolean closeAllFiles()", "diff": ["-       _log.log(\"Resetting interactions pane to use \" + getWorkingDirectory() + \" as working directory\");", "+//       _log.log(\"Resetting interactions pane to use \" + getWorkingDirectory() + \" as working directory\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a85539c2040c0effbfa0e999dc084522", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testGotoLine7() throws BadLocationException", "signatureAfterChange": "   public void testGotoLine7() throws BadLocationException", "diff": ["-    defModel.insertString(0, s, null);", "-    defModel.gotoLine(3);", "-    assertEquals(\"#0.0\", 11, defModel.getCurrentLocation());", "+    _defModel.insertString(0, s, null);", "+    _defModel.gotoLine(3);", "+    assertEquals(\"#0.0\", 11, _defModel.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a856c04165b02e94c4a16c5aa1dfa544", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "6ac6b30c03b8f321199592a97e544cb4056701f0", "commitAfterChange": "69317eecda3235d4815eb5d9a5b9e536b8481c4a", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     @Override public Type visit(InnerAllocation node)", "signatureAfterChange": "     @Override public Type visit(InnerAllocation node)", "diff": ["+          setErrorStrings(node, ts.userRepresentation(t));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a86806b1a255fa6d45413f8ad5ae7d29", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 544, "methodNumberAfterChange": 525, "signatureBeforeChange": "    final private boolean jj_3R_150()", "signatureAfterChange": "    final private boolean jj_3R_154()", "diff": ["-  final private boolean jj_3R_150() {", "+  final private boolean jj_3R_154() {", "-    if (jj_3R_95()) return true;", "+    if (jj_3R_98()) return true;", "-    if (jj_3R_318()) {", "+    if (jj_3R_329()) {", "-    if (jj_3R_319()) return true;", "+    if (jj_3R_330()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8683dbeb184d2b4128c9bc11d2c4eae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "4ae3dba211535b42e36ea3344ccafcfcc3ff3edd", "commitAfterChange": "90464e2ed7c77705e57d251eb7f4b67e377039d6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "    public void testAccessNullFieldsAndFinalLocalVariables()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "signatureAfterChange": "    public void testAccessNullFieldsAndFinalLocalVariables()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "diff": ["-    assertEquals(\"The value of localVar should not have changed\", \"11\", interpret(\"localVar\"));", "+    /* The Following test is commented out TEMPORARILY to work around bug in JDK 1.5 Beta2 JVM */", "+    // assertEquals(\"The value of localVar should not have changed\", \"11\", interpret(\"localVar\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a86cd5bfb2fc0c31fc21873b335f2511", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 593, "methodNumberAfterChange": 340, "signatureBeforeChange": "    final private boolean jj_3R_307()", "signatureAfterChange": "    final private boolean jj_3R_322()", "diff": ["+  final private boolean jj_3R_322() {", "+    if (jj_3R_331()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_343()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_307() {", "-    if (jj_3R_316()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_317()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a872b9f36c43804bb3962abdb4261c80", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected void doCompile(OpenDefinitionsDocument doc, File file)     throws IOException, InterruptedException", "signatureAfterChange": "   protected void doCompile(OpenDefinitionsDocument doc, File file)     throws IOException, InterruptedException", "diff": ["-      if (_model.getNumErrors() > 0) {", "+      if (_model.getCompilerModel().getNumErrors() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a88b9e18d6e19f1d3505e5bc71f31429", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpretResult.java", "commitBeforeChange": "1baaca56848b77e4ea889da1ec6855791456c263", "commitAfterChange": "ce42478b992adc6ef5f56e78e788484f10488ff4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     public ExceptionResult(InterpreterException e)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     public ExceptionResult(InterpreterException e)", "diff": ["+    private final StackTraceElement[] _stackTrace;", "-        _e = (EvaluatorException)e;", "-        _msg = null;", "+        // for EvaluatorException, we want to keep the stack trace", "+        _msg = e.getMessage();", "+        _stackTrace = e.getStackTrace();", "-        // because they cannot be unmarshalled (not serializable)", "-        _e = null;", "+        _stackTrace = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a88c39f85bcc12fb466a43f0eea07fa0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionDoNothingTest.java", "commitBeforeChange": "42669dc5656697beebfecb16842ba181e2bab301", "commitAfterChange": "ab72ce86901addf5fe2a66f48b9dc4c5f7db818b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testEmptyString() throws BadLocationException", "signatureAfterChange": "   public void testEmptyString() throws BadLocationException", "diff": ["-    /**", "-    */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a89aebf0433a8384f1800f3c6a6c939f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "97f966af08ae6bec968f68d8b2fce6c5531a12b8", "commitAfterChange": "d4f8b5e1e15fc2c34ba6969d4ef7bdb04cc8916b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testClassFileSynchronization()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronization()     throws BadLocationException, IOException, InterruptedException", "diff": ["+    ", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();", "+    _model.addListener(listener);", "-    doc.startCompile();", "-    assertTrue(\"should be in sync after compile\", ", "+    synchronized(listener) {", "+      doc.startCompile();", "+      if (_model.getNumErrors() > 0) {", "+        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "+      }", "+      listener.wait();", "+    }", "+    _model.removeListener(listener);", "+    listener.checkCompileOccurred();", "+    assertTrue(\"should be in sync after compile\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8a06fcf44eb41ac59102da793d205e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/Step.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void _createRequests() throws DebugException", "signatureAfterChange": "   protected void _createRequests() throws DebugException", "diff": ["+      request.addClassExclusionFilter(\"edu.rice.cs.dynamicjava.*\");", "+      request.addClassExclusionFilter(\"edu.rice.cs.plt.*\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8b89e53e979a0eead377784688f3b61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 626, "methodNumberAfterChange": 562, "signatureBeforeChange": "    final private boolean jj_3R_89()", "signatureAfterChange": "    final private boolean jj_3R_408()", "diff": ["+  final private boolean jj_3R_408() {", "+    if (jj_3R_123()) return true;", "-", "-  final private boolean jj_3R_89() {", "-    if (jj_3R_122()) return true;", "-    if (jj_scan_token(ENUM)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8c8015715ce45469f5cc03c448eec48", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "dc0befa68595a5c499b8803df615b4dd1cb06eb6", "commitAfterChange": "1a1442977dda2bbe384cc0f246999c7f651f6997", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "   public DocFile[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public DocFile[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "diff": ["-      al.add(f);", "+      if (f.isActive()) {", "+        al.add(f); // add to end", "+      }", "+      else {", "+        al.add(0,f); // add to beginning", "+      }", "-      al.add(f);", "+      if (f.isActive()) {", "+        al.add(f); // add to end", "+      }", "+      else {", "+        al.add(0,f); // add to beginning", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a903bf7d82efbfcfa52495d262ff7aed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 676, "methodNumberAfterChange": 323, "signatureBeforeChange": "    final private boolean jj_3R_310()", "signatureAfterChange": "    final private boolean jj_3R_341()", "diff": ["+", "+  final private boolean jj_3R_341() {", "+    if (jj_3R_347()) return true;", "+      if (jj_3R_362()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_310() {", "-    if (jj_3R_319()) return true;", "-      if (jj_3R_320()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a910e44e38ffb2a4e86fa8320e2e109b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "6e331e9844f73cd6f98ef32e034b0175583aeba8", "commitAfterChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public DefaultGlobalModel()", "signatureAfterChange": "   public DefaultGlobalModel()", "diff": ["+    ", "+    setFileGroupingState(_makeFlatFileGroupingState());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a91460a19cd08ed18e17f035dd428c95", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "e75c44dca53d5633e70ed3badd03d3667a23d4c8", "commitAfterChange": "c11896795d0041b0e5728ede27aa1fce3454d97c", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   protected void slaveQuitDuringStartup(int status)", "signatureAfterChange": "   protected void slaveQuitDuringStartup(int status)", "diff": ["-    if (Utilities.TEST_MODE) return;  // Some tests kill the slave immediately after it starts.", "+    _numAttempts++;  // no synchronization since this is the only place that _numAttempts is modified", "+    if (Utilities.TEST_MODE || _numAttempts < MAX_COUNT) return;  // Some tests kill the slave immediately after it starts.", "-    // The slave JVM is not enabled after this.", "+    // The slave JVM is not enabled after this to prevent an infinite loop of attempted startups"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9182b714ce4025d3c24b15e232176aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/PopupConsole.java", "commitBeforeChange": "7933cc364884763a44a085994870596faa04b316", "commitAfterChange": "b978cac1d85997e83464382e4a499c19d736223c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private String silentInput()", "signatureAfterChange": "   private String silentInput()", "diff": ["-    final StringBuffer input = new StringBuffer();  /* shared variable guarded by commandLock */ ", "+    final StringBuilder input = new StringBuilder();  /* shared variable guarded by commandLock */ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a91d166b1846e0308e7ae75e8d143c02", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "          public void testForArrayType()", "signatureAfterChange": "          public void testForArrayType()", "diff": ["-      System.err.println(\"**** Starting testForArrayType\");", "+//      System.err.println(\"**** Starting testForArrayType\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a920dd9b915fd07150fc105c0bb25159", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CommentTest.java", "commitBeforeChange": "9384fc32fbcbd39c62d94dea85b6e39cec7640c4", "commitAfterChange": "d80369d9c3076ba83762fd67d26b865a3f105bab", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testUncommentIgnoreSingleLine() throws BadLocationException", "signatureAfterChange": "   public void testUncommentIgnoreSingleLine() throws BadLocationException", "diff": ["-   */", "+    */", "-    String text =", "+    doc.uncommentLines(0,0);", "+    _assertContents(\"Uncommenting an empty document should not cause an error\", \"\", doc);", "+    ", "+    String text = ", "+    doc.uncommentLines(0,0);", "+    _assertContents(\"Uncommenting an uncommented line should not cause an error or modify the text\", text, doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a929fad2dd610726e777c5970e708669", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/ConstantPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   short putNameAndType(String name, String type, String[] params)", "signatureAfterChange": "   short putNameAndType(String name, String type, String[] params)", "diff": ["-    Info info = (Info)constants.get(ntk);", "+    Info info = constants.get(ntk);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a92f6b3c1582995484d767ffd9b58ea9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "21836dcccd81c2207652ee85b319b723ac9ff10b", "commitAfterChange": "18f7005907576031115bfb0859e7ff6d53506e5e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ExternalProcessPanel(MainFrame frame, String title, ProcessCreator pc)", "signatureAfterChange": "   public ExternalProcessPanel(MainFrame frame, String title, ProcessCreator pc)", "diff": ["-    for(String cmd: pc.command()) { sb.append(' '); sb.append(cmd); }", "+    sb.append(pc.cmdline());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a930f3fcf917c46b62aa5cbd1e6ec85d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public Void visit(FunctionCall node)", "signatureAfterChange": "   public Void visit(SimpleMethodCall node)", "diff": ["-  public Void visit(FunctionCall node) {", "-    print(\"l.\"+node.getBeginLine()+\" FunctionCall {\");", "+  public Void visit(SimpleMethodCall node) {", "+    print(\"l.\"+node.getBeginLine()+\" SimpleMethodCall {\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a937605fecc4ce1f20201aff89c7df30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ToolbarOptionComponent.java", "commitBeforeChange": "51bfc4d668bc1673b008afd130ba536a07f9c69d", "commitAfterChange": "332b6e452982977da36f3fe748b79e9b0c3888de", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ToolbarOptionComponent(String title, Frame parent)", "signatureAfterChange": "   public ToolbarOptionComponent(String title, Frame parent)", "diff": ["+    _buttonPanel.setBorder(BorderFactory.createEtchedBorder());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9380c1cc144ebc0ccf3e2afbd28970e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "28db8fb2942dc00cad50f5244fe215d573867721", "commitAfterChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private int _move(int count, int currentOffset)", "signatureAfterChange": "     private int _move(int count, int currentOffset)", "diff": ["-      return it._moveLeft(Math.abs(count), currentOffset);  // count < 0", "+      return it._moveLeft(- count, currentOffset);  // count < 0"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a956f3e8cbade4690e702df72f9c54d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/DebugTest.java", "commitBeforeChange": "a6eff600a2f1091d06db04a34e4bdfb3aa68fc7b", "commitAfterChange": "866c36fa1066e6b03d2032d7a634a7d510172641", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public synchronized void testMultiThreadedBreakpointsAndStep() throws Exception", "signatureAfterChange": "   public synchronized void testMultiThreadedBreakpointsAndStep() throws Exception", "diff": ["-      _asyncStep(Debugger.STEP_INTO);", "+      _asyncStep(Debugger.StepType.STEP_INTO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a95a5b1f71a8fcb1708b143e2f691303", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classinfo/TreeMethodInfo.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public ClassInfo getReturnType()", "signatureAfterChange": "     public ClassInfo getReturnType()", "diff": ["-        return (ClassInfo)methodTree.getReturnType().acceptVisitor(typeVisitor);", "+        return methodTree.getReturnType().acceptVisitor(typeVisitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a96927e397d8ded0ec96b207387f36c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/FontOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testApplyDoesChangeConfig()", "signatureAfterChange": "    public void testApplyDoesChangeConfig()", "diff": ["+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9996514316977fba888fab75a13a058", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeClass.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public boolean isFinal()", "signatureAfterChange": "   public boolean isFinal()", "diff": ["-  public boolean isAbstract() { return Modifier.isAbstract(_accessFlags); }", "-  public boolean isFinal() { return Modifier.isFinal(_accessFlags); }", "+  public boolean isAbstract() { return _mods.isAbstract(); }", "+  public boolean isFinal() { return _mods.isFinal(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a99a0bc47b00ef2507ccdcecdddca946", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testUndoEventsOccur() throws BadLocationException", "signatureAfterChange": "   public void testUndoEventsOccur() throws BadLocationException", "diff": ["-    doc.getDocument().addUndoableEditListener(new UndoableEditListener() {", "+    doc.addUndoableEditListener(new UndoableEditListener() {", "-        doc.getDocument().getUndoManager().addEdit(e.getEdit());", "+        doc.getUndoManager().addEdit(e.getEdit());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a99cb7db09a0c7e8b249e85936d525ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b85c4aa526174a8c4d28739b600e7abc41a84c9e", "commitAfterChange": "3ee912dd08cfe39e8657c2af6b0d5e18ddacab3b", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": "   private JMenu _setUpFileMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpFileMenu(int mask)", "diff": ["-    _saveAction.setEnabled(false);", "+    _saveAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9a1fd2a4537d9744b01d0ea423c7b81", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 311, "methodNumberAfterChange": 826, "signatureBeforeChange": "    final private boolean jj_3R_574()", "signatureAfterChange": "    final private boolean jj_3R_600()", "diff": ["-", "-  final private boolean jj_3R_574() {", "-    if (jj_3R_90()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_584()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_600() {", "+    if (jj_3R_92()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_610()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9ad71cd0218dcf870f972ceb3bcd372", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "   private Class visitUnaryOperation(UnaryExpression node, String s)", "signatureAfterChange": "   private Class visitUnaryOperation(UnaryExpression node, String s)", "diff": ["-    Class c = (Class)node.getExpression().acceptVisitor(this);", "-    ", "+    Class c = node.getExpression().acceptVisitor(this);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9bd6ac209e9139e41261ab57626c186", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 399, "methodNumberAfterChange": 368, "signatureBeforeChange": "    final private boolean jj_3R_127()", "signatureAfterChange": "    final private boolean jj_3R_124()", "diff": ["+", "+  final private boolean jj_3R_124() {", "+    if (jj_3R_143()) return true;", "+    if (jj_3R_144()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_127() {", "-    if (jj_3R_146()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_147()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9c33f9551b42ef166c010b755e379bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f685a9b321f36c2e842dc8f220e6629bd2e6497f", "commitAfterChange": "4b4d69e1dac83c75b54ecbd8f6c55ac897d713ab", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 160, "signatureBeforeChange": "      private void _saveProjectHelper(File file)", "signatureAfterChange": "      private void _saveProjectHelper(File file)", "diff": ["-      if(!(_model.getDocumentNavigator() instanceof JTreeSortNavigator)){", "-        _openProjectHelper(file);", "-      }    ", "+//      if(!(_model.getDocumentNavigator() instanceof JTreeSortNavigator)){", "+//        _openProjectHelper(file);", "+//      }    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9cdc50744ecf077c11885916e62a13c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/repl/EclipseInteractionsModel.java", "commitBeforeChange": "1827cec0a07b944a36f95e36eebdc6666dc9617c", "commitAfterChange": "302914e42441eaa34fb8588c2f19600c7ec3298a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   protected void _notifyInteractionIncomplete()", "signatureAfterChange": "   protected void _notifyInteractionIncomplete()", "diff": ["-      ((InteractionsListener)_listeners.get(i)).interactionIncomplete();", "+      _listeners.get(i).interactionIncomplete();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9d64855847a4df8ffa12af808c421b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/MatchWholeWordState.java", "commitBeforeChange": "a74376a325d0074624f443d10119646e2099bc93", "commitAfterChange": "5e43ed9b0ccc485edbf101000ea86b2ab5a8036f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    private FindResult findNextHelp(String searchDocument, int       searchOriginLocation)", "signatureAfterChange": "    private FindResult findNextHelp(String searchDocument, int       searchOriginLocation)", "diff": ["-          System.err.println(\"I see word as: \" +", "-                             searchDocument.substring(_current.getOffset(),", "-                                                      _current.getOffset() + _findWord.length()));", "+         "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9dceb3f58610f5ad8138139101f4b55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "df2b79c4755a48b6d68cea0053ee5b504fa8b5d0", "commitAfterChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 100, "signatureBeforeChange": "   void initGotoFileDialog()", "signatureAfterChange": "   void initGotoFileDialog()", "diff": ["-                                                    new GoToFileListEntry(null, \"dummy\")) {", "+                                                    new GoToFileListEntry(null, \"dummyGoto\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9e529299c75a91550643834d683c8c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 176, "methodNumberAfterChange": 176, "signatureBeforeChange": "     protected DefinitionsDocument getDocument()", "signatureAfterChange": "     protected DefinitionsDocument getDocument()", "diff": ["-        return _cache.get(this);", "+        return _cacheAdapter.getDocument();", "-//      try{", "-//        File tempFile = _file;", "-//        setFile(null);", "-//        _cache.update(this, makeReconstructor());", "-//        _cache.get(this).insertString(0, \"\\\"Error loading document from file: \" + tempFile + \"\\\"\", null);", "-//        return _cache.get(this);", "-//      }catch(Exception e){", "-//        throw new UnexpectedException(e);", "-//      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9e6a20d1c7909fbae0055eb7e2e8df4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "ae91856b53b869dea43c60b3424279a87db75fb5", "commitAfterChange": "a357e82c74cb27dc4ce8ef007203ad2bd5dfa25b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public synchronized void testBreakpoints() throws Exception", "signatureAfterChange": "   public synchronized void testBreakpoints() throws Exception", "diff": ["+    ", "+    Utilities.clearEventQueue();", "-    _debugger.toggleBreakpoint(doc,", "-       DEBUG_CLASS.indexOf(\"System.out.println(\\\"Bar Line 2\\\")\"), 9);", "+    _debugger.toggleBreakpoint(doc, DEBUG_CLASS.indexOf(\"System.out.println(\\\"Bar Line 2\\\")\"), 9);", "+    ", "+    Utilities.clearEventQueue();", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9f9d67e713f6b670190610b9e2aedc0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionBracePlus.java", "commitBeforeChange": "41e184b1aabfa466589eae2bb1a9101d9be4de38", "commitAfterChange": "57a37f35b71c66341cae7312e856c3bb4a0b6fcf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["+    super.indentLine(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa0f8739a349806d12a0d96b2ea0c476", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0c8d146c06eba1c2298f0daceb39048930ad6325", "commitAfterChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": "          public void breakpointSet(Breakpoint bp)", "signatureAfterChange": "          public void breakpointSet(Breakpoint bp)", "diff": ["+      _debugPanel.breakpointAdded(bp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa1c8dcd799b1905903a22a80fcd3cc6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWith.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-      System.err.println(\"QuestionCurrLineStartsWith\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa2710c892c6ee1ee7e125fd49598c6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6cb46de79da79c0083594703f676ab24368c9724", "commitAfterChange": "ce9868c401197893c2350342d3a4d99ed1f30047", "methodNumberBeforeChange": 470, "methodNumberAfterChange": 470, "signatureBeforeChange": "      private void _quit()", "signatureAfterChange": "      void quit()", "diff": ["-  private void _quit() {", "+  void quit() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa294d76d07cb69625a47d636f91f6e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 550, "methodNumberAfterChange": 468, "signatureBeforeChange": "    final private boolean jj_3R_422()", "signatureAfterChange": "    final private boolean jj_3R_423()", "diff": ["+  final private boolean jj_3R_423() {", "+    if (jj_3R_442()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_451()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_422() {", "-    if (jj_3R_441()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_450()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa4df6d592829c14694c313f5ca82c2e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 725, "methodNumberAfterChange": 743, "signatureBeforeChange": "    final private boolean jj_3R_125()", "signatureAfterChange": "    final private boolean jj_3R_128()", "diff": ["+  final private boolean jj_3R_128() {", "+      if (jj_3R_171()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_125() {", "-    if (jj_scan_token(LBRACE)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_169()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(RBRACE)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa52708c3e78ed076a4d0279fc3ab7ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testCompileAllWithNoFiles() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllWithNoFiles() throws BadLocationException, IOException, InterruptedException", "diff": ["-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(false);", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa632c3ee79da031366dcc3f4b80e49c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": "       public void testForShiftBinaryExpressionOnly()", "signatureAfterChange": "       public void testForShiftBinaryExpressionOnly()", "diff": ["-      ShiftBinaryExpression sbe = new LeftShiftExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"j\")), new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 42));", "+      ShiftBinaryExpression sbe = new LeftShiftExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"j\")), new IntegerLiteral(SourceInfo.NO_INFO, 42));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa7f602b88b2e03dff5f135448f148c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "50f8ddd53ad051b199f7d13e98934938f25bd2ae", "commitAfterChange": "963348ced7921c9036c4d0267a79aecf5dc0da09", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testDoNotRunJUnitUnsavedAndDoNotSaveWhenAsked() throws Exception", "signatureAfterChange": "   public void testDoNotRunJUnitUnsavedAndDoNotSaveWhenAsked() throws Exception", "diff": ["-      public void saveBeforeProceeding(GlobalModelListener.SaveReason reason) {", "+      public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason) {", "-        saveBeforeProceedingCount++;", "+        saveAllBeforeProceedingCount++;", "-        assertSaveBeforeProceedingCount(0);", "+        assertSaveAllBeforeProceedingCount(0);", "-    listener.assertSaveBeforeProceedingCount(1);", "+    listener.assertSaveAllBeforeProceedingCount(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa7fde0146e58a74820806edcf1c7657", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public Boolean value(Object o)", "signatureAfterChange": "     public boolean contains(Object o)", "diff": ["-    public Boolean value(Object o) { return false; }", "+    public boolean contains(Object o) { return false; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa8434f0b7263880b3471d29dd339314", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "f858bdc4a8556fa2d602de70e64361813405ec96", "commitAfterChange": "9a6ce0c2dd9939538b22d21a227d64c36bc636d3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    _compilerChoiceBox = new JComboBox(compilerModel.getAvailableCompilers());", "+    Iterable<CompilerInterface> iter = getModel().getCompilerModel().getAvailableCompilers();", "+    _compilerChoiceBox = new JComboBox(IterUtil.asList(iter).toArray(new CompilerInterface[0]));", "-        CompilerInterface compiler = (CompilerInterface) _compilerChoiceBox.getSelectedItem();", "-        if (compiler == null) compiler = NoCompilerAvailable.ONLY;", "-        compilerModel.setActiveCompiler(compiler);", "-        compilerModel.resetCompilerErrors();", "-        _compileHasOccurred = false;", "-        reset();", "+        if (e.getStateChange() == ItemEvent.SELECTED) {", "+          CompilerInterface compiler = (CompilerInterface) _compilerChoiceBox.getSelectedItem();", "+          compilerModel.setActiveCompiler(compiler);", "+          compilerModel.resetCompilerErrors();", "+          _compileHasOccurred = false;", "+          reset();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa8bff100a0082f2eb637204c95ab266", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "11a167d5b0a97e55aef4d62ed18d4da71e30b762", "commitAfterChange": "a32847752bc1c4d9a9c65da4d91d56e3d8a61fa6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testConstructDoclessErrors()", "signatureAfterChange": "   public void testConstructDoclessErrors()", "diff": ["+    assertTrue(\"hasOnlyWarnings should return false.\", !model.hasOnlyWarnings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa8e506e90e1aeb77d4349082c110f21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public Class visit(StaticFieldAccess node)", "signatureAfterChange": "   public Class visit(StaticFieldAccess node)", "diff": ["-    Class c = (Class)node.getFieldType().acceptVisitor(this);", "-    ", "+    Class c = node.getFieldType().acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaa9e47d0826bfd4b9b7da100a9a692f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 552, "methodNumberAfterChange": 553, "signatureBeforeChange": "    final private boolean jj_3R_450()", "signatureAfterChange": "    final private boolean jj_3R_452()", "diff": ["-  final private boolean jj_3R_450() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_78()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_412()) return true;", "+  final private boolean jj_3R_452() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_79()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_414()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaaceb7cc664087b151ab0dea89f9f09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 204, "methodNumberAfterChange": 213, "signatureBeforeChange": "     public void startJUnit()", "signatureAfterChange": "     public void startJUnit() throws IOException, ClassNotFoundException", "diff": ["-    public void startJUnit() {", "+    public void startJUnit() throws IOException, ClassNotFoundException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaeaaefed183e97018256db9e47a11f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public Vector<DebugThreadData> getCurrentThreadData();", "signatureAfterChange": "   public Vector<DebugThreadData> getCurrentThreadData() throws DebugException;", "diff": ["-  public Vector<DebugThreadData> getCurrentThreadData();", "+  public Vector<DebugThreadData> getCurrentThreadData() throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaf2ce978578f4be17b7622589f46f4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "72c953c3c4f509998630ec89f0f6ab473b5c78c1", "commitAfterChange": "b04c072cc6c2afa2120f5e98663d5a900c3a128f", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 65, "signatureBeforeChange": "   static void ventBuffers(BufferedReader jdOut, BufferedReader jdErr,                           LinkedList outLines, LinkedList errLines)     throws IOException", "signatureAfterChange": "   static void ventBuffers(BufferedReader outBuf, BufferedReader errBuf,                           LinkedList outLines, LinkedList errLines)     throws IOException", "diff": ["-   */", "-  static void ventBuffers(BufferedReader jdOut, BufferedReader jdErr,", "-                          LinkedList outLines, LinkedList errLines)", "-    throws IOException {", "-    String output;", "-    ", "-    if (jdOut.ready()) {", "-      output = jdOut.readLine();", "-      ", "-      while (jdOut.ready() && (output != null)) {", "-//        System.out.println(\"[stdout]: \" + output);", "-        outLines.add(output);", "-        if (jdOut.ready()) {", "-          output = jdOut.readLine();", "-        }", "-        else {", "-          output = null;", "-        }", "-      }", "-    }", "-    ", "-    if (jdErr.ready()) {", "-      output = jdErr.readLine();", "-      while (jdErr.ready() && (output != null)) {", "-//        System.out.println(\"[stderr] \" + output);", "-        errLines.add(output);", "-        if (jdErr.ready()) {", "-          output = jdErr.readLine();", "-        }", "-        else {", "-          output = null;", "-        }", "-      }", "+   */", "+  static void ventBuffers(BufferedReader outBuf, BufferedReader errBuf,", "+                          LinkedList outLines, LinkedList errLines)", "+    throws IOException {", "+    String output;", "+    ", "+    if (outBuf.ready()) {", "+      output = outBuf.readLine();", "+      ", "+      while (outBuf.ready() && (output != null)) {", "+//        System.out.println(\"[stdout]: \" + output);", "+        outLines.add(output);", "+        if (outBuf.ready()) {", "+          output = outBuf.readLine();", "+        }", "+        else {", "+          output = null;", "+        }", "+      }", "+    }", "+    ", "+    if (errBuf.ready()) {", "+      output = errBuf.readLine();", "+      while (errBuf.ready() && (output != null)) {", "+//        System.out.println(\"[stderr] \" + output);", "+        errLines.add(output);", "+        if (errBuf.ready()) {", "+          output = errBuf.readLine();", "+        }", "+        else {", "+          output = null;", "+        }", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aafc1a4dfc4993097baeb6cdc146afe7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classinfo/TreeClassInfo.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     MembersVisitor()", "signatureAfterChange": "     MembersVisitor()", "diff": ["-          ((Node)it.next()).acceptVisitor(this);", "+          it.next().acceptVisitor(this);", "-        ", "+", "-          ", "+", "-            ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab0407e540afc9c313ebcc8f1ce97cac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c8a7a8a9d3d089ab42661ede7d141969c6ed2339", "commitAfterChange": "edb148d96e488bb5de94fe3df6063e44425ab166", "methodNumberBeforeChange": 183, "methodNumberAfterChange": 183, "signatureBeforeChange": "      private void openFilesInFolder(File dir, boolean recursive)", "signatureAfterChange": "      private void openFilesInFolder(File dir, boolean recursive)", "diff": ["-      final File[] sfiles = files.toArray(new File[0]);", "+      final File[] sfiles = files.toArray(new File[files.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab072dc74edb1f2ce0064e9ebc663f3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "c68bda7492524887225ee8f4963e9d7935485197", "commitAfterChange": "7e14052430c5a0fbe8641ad3a0f464f6b201c49d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 23, "signatureBeforeChange": "   protected SymbolData getSymbolDataForClassFile(String className, SourceInfo si)", "signatureAfterChange": "   protected SymbolData getSymbolDataForClassFile(String className, SourceInfo si)", "diff": ["-      // This should typically never happen.  However, I am getting a case where bcel finds that", "-      // java.net.URL has a method called openConnection which takes in a java.net.Proxy.", "-      // This method and class Proxy don't appear in any API I can find.  This causes a NoClassDefFoundError.", "-      // For now, the offending method will be skipped if it came from a java class file but an error will", "-      // be thrown otherwise since a user may have deleted a class file and should be notified.      ", "-      // We know that className is already qualified because it's coming from a class file.", "-      // Adding sun.* because we can't find sun.reflect.ConstantPool for some reason 3.28.2004 JH", "-      if (isJavaLibraryClass(className)) {", "-        // don't throw an error", "-      }", "-      else {", "-        // This is an error in the user's class file so throw an error.", "-        // The NullLiteral is a hack to get a JExpression with the correct SourceInfo inside.", "-        _addAndIgnoreError(\"Class \" + className + \" not found.\", new NullLiteral(si));", "-      }", "-      // return null to tell _classFile2SymbolData to skip this method.", "+      // This is an error in the user's class file so throw an error.", "+      // The NullLiteral is a hack to get a JExpression with the correct SourceInfo inside.", "+      _addAndIgnoreError(\"Class \" + className + \" not found.\", new NullLiteral(si));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab2561f827a971a56a81f289d591f346", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 557, "methodNumberAfterChange": 729, "signatureBeforeChange": "    final private boolean jj_3R_543()", "signatureAfterChange": "    final private boolean jj_3R_543()", "diff": ["-  final private boolean jj_3R_543() {", "-    if (jj_scan_token(INCREMENT)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_543() {", "+    if (jj_3R_491()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab350c8edcb119317d4f20f1314b9286", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "1f1e1c194ec79b5577db174af86a812206a9ebf6", "commitAfterChange": "8470bac42027a288eff50252d965c363d15d41dc", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "          public WatchData(String name)", "signatureAfterChange": "          public WatchData(String name)", "diff": ["-      _value = WatchUndefinedValue.Singleton;", "+      _value = WatchUndefinedValue.Singleton.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab484c871f48dcff1cf1600208a30f0e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/ImmutableIterable.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public boolean isFixed()", "signatureAfterChange": "   public T last()", "diff": ["-  public boolean isFixed() { return IterUtil.isFixed(_iterable); }", "+  public boolean isStatic() { return IterUtil.isStatic(_iterable); }", "+  public T last() { return IterUtil.last(_iterable); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab51b1138f5747872ffaba7f8aaf2aaf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 102, "signatureBeforeChange": "     public void cleanBuildDirectory() throws FileMovedException, IOException", "signatureAfterChange": "     public void cleanBuildDirectory()", "diff": ["-    public void cleanBuildDirectory() throws FileMovedException, IOException { }", "+    public void cleanBuildDirectory() { }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab8fa7af2510c2ad13e2250dad27e6a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 534, "methodNumberAfterChange": 527, "signatureBeforeChange": "     public void updateLocation()", "signatureAfterChange": "     public void updateLocation()", "diff": ["-      doc.acquireReadLock();  // lock to ensure consistency of two reads from doc", "-      try { ", "-        _line = doc.getCurrentLine();", "-        _col = doc.getCurrentCol(); ", "-      }", "-      finally { doc.releaseReadLock(); }", "+//      doc.acquireReadLock();  // lock to ensure consistency of two reads from doc", "+//      try { ", "+      _line = doc.getCurrentLine();", "+      _col = doc.getCurrentCol(); ", "+//      }", "+//      finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab90346fd860ebbd4bf23aedccdf182c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 368, "methodNumberAfterChange": 358, "signatureBeforeChange": "    final private boolean jj_3R_248()", "signatureAfterChange": "    final private boolean jj_3R_222()", "diff": ["-  final private boolean jj_3R_248() {", "-    if (jj_3R_311()) return true;", "-    if (jj_3R_115()) return true;", "+  final private boolean jj_3R_222() {", "+    if (jj_3R_272()) return true;", "+    if (jj_3R_116()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab9be5a1348eaa8f41b159e72cb27b78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": "       public void testForConditionalExpressionOnly()", "signatureAfterChange": "       public void testForConditionalExpressionOnly()", "diff": ["-      ConditionalExpression cd = new ConditionalExpression(JExprParser.NO_SOURCE_INFO, ", "-                                                           new BooleanLiteral(JExprParser.NO_SOURCE_INFO, true),", "-                                                           new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5),", "-                                                           new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 79));", "+      ConditionalExpression cd = new ConditionalExpression(SourceInfo.NO_INFO, ", "+                                                           new BooleanLiteral(SourceInfo.NO_INFO, true),", "+                                                           new IntegerLiteral(SourceInfo.NO_INFO, 5),", "+                                                           new IntegerLiteral(SourceInfo.NO_INFO, 79));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aba00cd3be5515026943992868e73a23", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "     public int getCurrentDefinitionsLocation()", "signatureAfterChange": "     public int getCurrentDefinitionsLocation()", "diff": ["-      return _doc.getCurrentLocation();", "+      return getDocument().getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abc6db4f825c81dfef41331e0c85f92a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 597, "methodNumberAfterChange": 579, "signatureBeforeChange": "    final private boolean jj_3R_346()", "signatureAfterChange": "    final private boolean jj_3R_358()", "diff": ["+", "+  final private boolean jj_3R_358() {", "+    if (jj_scan_token(INSTANCEOF)) return true;", "+    if (jj_3R_78()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_346() {", "-    if (jj_scan_token(INSTANCEOF)) return true;", "-    if (jj_3R_75()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abd40b89eb6ce9cd79cd73b43e0694e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 20, "signatureBeforeChange": "      public void assertBreakpointRemovedCount(int i)", "signatureAfterChange": "      public void assertRegionAddedCount(int i)", "diff": ["+    public void assertRegionAddedCount(int i) {", "+      assertEquals(\"number of times regionAdded fired\", i, regionAddedCount);", "-    public void assertBreakpointRemovedCount(int i) {", "-      assertEquals(\"number of times breakpointRemoved fired\", i, breakpointRemovedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abfc4557e77cde58cd1aadc3c08ead5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      public void testDocumentPaneMemoryLeak()  throws InterruptedException, java.io.IOException", "signatureAfterChange": "      public void testDocumentPaneMemoryLeak()  throws InterruptedException, java.io.IOException", "diff": ["-//    if (ct > 1) System.err.println(\"testDocumentPaneMemoryLeak required \" + ct + \" iterations\");", "+    if (ct > 1) System.out.println(\"testDocumentPaneMemoryLeak required \" + ct + \" iterations\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac015e2f39f8dc0bd5a073b212074b07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "11a167d5b0a97e55aef4d62ed18d4da71e30b762", "commitAfterChange": "a32847752bc1c4d9a9c65da4d91d56e3d8a61fa6", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 165, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["+    docPanePopupMenu.add(_runAction);", "-    interactionsPanePopupMenu.add(_resetInteractionsAction);", "+    interactionsPanePopupMenu.add(_resetInteractionsAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac13a6b3adea9669bc257fc4e24b4d27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "d8dc2cdeba22db2fb0316de83a445bb83f56ae4d", "commitAfterChange": "fecb09777cd63cca239611fe19e85d2f0e8401e9", "methodNumberBeforeChange": 721, "methodNumberAfterChange": 705, "signatureBeforeChange": "    final private boolean jj_3R_533()", "signatureAfterChange": "    final private boolean jj_3R_532()", "diff": ["-  final private boolean jj_3R_533() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    xsp = jj_scanpos;", "-    if (jj_3R_559()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_560()) jj_scanpos = xsp;", "-    if (jj_scan_token(RPAREN)) return true;", "+", "+  final private boolean jj_3R_532() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_555()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_556()) jj_scanpos = xsp;", "+    if (jj_scan_token(RPAREN)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac1e80b4ae8e42dc50e424395d9ce88b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void javadocDocument(final OpenDefinitionsDocument doc, final FileSaveSelector saver, final String classPath)     throws IOException", "signatureAfterChange": "   public void javadocDocument(final OpenDefinitionsDocument doc, final FileSaveSelector saver, final String classPath)     throws IOException", "diff": ["-    final File destDir = FileOps.createTempDirectory(\"DrJava-javadoc\");", "+    final File destDir = IOUtil.createAndMarkTempDirectory(\"DrJava-javadoc\", \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac2dc314cdacff01107ad2f739bdd966", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4b5efbc2650bf8411daae8d8fd509fcb4fe26da2", "commitAfterChange": "5fd3be9fe9ba8de5c8aa1fa3961e1d5624c85202", "methodNumberBeforeChange": 652, "methodNumberAfterChange": 652, "signatureBeforeChange": "   void _showAutoImportDialog(String s)", "signatureAfterChange": "   void _showAutoImportDialog(String s)", "diff": ["+    _autoImportPackageCheckbox.setSelected(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac2eb03dd316b2d4af7f12cf9ff2e908", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/UncaughtExceptionWindow.java", "commitBeforeChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "commitAfterChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public UncaughtExceptionWindow(Throwable exception)", "signatureAfterChange": "   public UncaughtExceptionWindow(Throwable exception)", "diff": ["+    _exceptionInfo.setLineWrap(true);", "+    _exceptionInfo.setWrapStyleWord(true);", "-    _okPanel.add(_okButton, BorderLayout.SOUTH);", "+    _okPanel.add(_okButton, BorderLayout.EAST);", "-    _topPanel = new JPanel(new BorderLayout());", "-    _topPanel.add(_exceptionInfo, BorderLayout.CENTER);", "-    _topPanel.add(_okPanel, BorderLayout.EAST);", "+    _topPanel = new JPanel();//new BorderLayout());", "+    _topPanel.add(_exceptionInfo);//, BorderLayout.CENTER);", "+    //_topPanel.add(_okPanel, BorderLayout.EAST);", "-    this.getContentPane().add(_topPanel, BorderLayout.NORTH);", "+    this.getContentPane().add(_exceptionInfo, BorderLayout.NORTH);", "+    this.getContentPane().add(_okPanel, BorderLayout.SOUTH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac33e8b26b9cdcd0dd3c2c0b352b84f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 444, "methodNumberAfterChange": 438, "signatureBeforeChange": "    final private boolean jj_3R_482()", "signatureAfterChange": "    final private boolean jj_3R_491()", "diff": ["-", "-  final private boolean jj_3R_482() {", "-    if (jj_3R_280()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_485()) { jj_scanpos = xsp; break; }", "-    }", "+  final private boolean jj_3R_491() {", "+    if (jj_3R_281()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_494()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac37e595f10c8f44857f471f74a19048", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testClassFileSynchronization() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronization() throws BadLocationException, IOException, InterruptedException", "diff": ["+    listener.waitCompileDone();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac3bf23234798ef9259ddd5990683ab0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void forConcreteMethodDef(ConcreteMethodDef that)", "signatureAfterChange": "   public void forConcreteMethodDef(ConcreteMethodDef that)", "diff": ["-   */", "+    */", "-    MethodData md = _enclosingData.getSymbolData().getMethod(that.getName().getText(), formalParameters2TypeDatas(that.getParams(), _enclosingData));", "-    if (md == null) { throw new RuntimeException(\"Internal Program Error: Can't find method data for \" + that.getName() + \" Please report this bug.\"); }", "+    MethodData md = ", "+      _enclosingData.getSymbolData().getMethod(that.getName().getText(), ", "+                                               formalParameters2TypeDatas(that.getParams(), _enclosingData));", "+    _log.log(\"Augmenting ConcreteMethodDef \" + that + \" with MethodData \" + md);", "+    if (md == null) { ", "+      throw new RuntimeException(\"Internal Program Error: Can't find method data for \" + that.getName() + ", "+                                 \" Please report this bug.\"); ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac4c617547d48f9ffe68c59538d082fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testInsertStarIntoSlashStar() throws BadLocationException", "signatureAfterChange": "   public void testInsertStarIntoSlashStar() throws BadLocationException", "diff": ["-    BraceReduction rm = _defModel.getReduced();", "+    BraceReduction _reduced = _defModel.getReduced();", "-    assertEquals(\"1\", \"/*\", rm.currentToken().getType());", "-    assertEquals(\"2\", ReducedToken.FREE, rm.currentToken().getState());", "-    rm.move(2);", "-    assertEquals(\"3\", \"*\", rm.currentToken().getType());", "-    assertEquals(\"4\", ReducedToken.INSIDE_BLOCK_COMMENT, rm.currentToken().getState());", "-    rm.move(1);", "-    assertEquals(\"5\", \"*/\", rm.currentToken().getType());", "-    assertEquals(\"6\", ReducedToken.FREE, rm.currentToken().getState());", "+    assertEquals(\"1\", \"/*\", _reduced.currentToken().getType());", "+    assertEquals(\"2\", ReducedToken.FREE, _reduced.currentToken().getState());", "+    _reduced.move(2);", "+    assertEquals(\"3\", \"*\", _reduced.currentToken().getType());", "+    assertEquals(\"4\", ReducedToken.INSIDE_BLOCK_COMMENT, _reduced.currentToken().getState());", "+    _reduced.move(1);", "+    assertEquals(\"5\", \"*/\", _reduced.currentToken().getType());", "+    assertEquals(\"6\", ReducedToken.FREE, _reduced.currentToken().getState());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac508e1c9f02efa00031a58167d67c6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/sexp/SExpParserTest.java", "commitBeforeChange": "ce99ad77121aabff91f9c6fba762f853ca2a34f5", "commitAfterChange": "c7e182b04aa52ae1423064c733cc8609017cc26d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   private File _fillTempFile(String fname, String text)", "signatureAfterChange": "   private File _fillTempFile(String fname, String text)", "diff": ["-      f = File.createTempFile(fname, null);", "+      f = File.createTempFile(fname, null).getCanonicalFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac548a491afbfd4b011f06c7b316c78f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 351, "methodNumberAfterChange": 882, "signatureBeforeChange": "    final private boolean jj_3R_400()", "signatureAfterChange": "    final private boolean jj_3R_408()", "diff": ["-", "-  final private boolean jj_3R_400() {", "-    if (jj_scan_token(PLUS_ASSIGN)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_408() {", "+    if (jj_scan_token(PLUS_ASSIGN)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac5b4fe2dfaa03c97d71c195dfeb3a79", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateLevelTest.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void assertEquals(String s, Data answer, Data testValue)", "signatureAfterChange": "      public void assertEquals(String s, Data answer, Data testValue)", "diff": ["-    if (! answer.equals(testValue)) ", "-      System.err.println(\"Unit test '\" + s + \"' failed. Expected '\" + ", "-                         answer.getName() + \"'.  Found '\" + testValue.getName() + \"'.\");", "+//    if (! answer.equals(testValue)) ", "+//      System.err.println(\"Unit test '\" + s + \"' failed. Expected '\" + ", "+//                         answer.getName() + \"'.  Found '\" + testValue.getName() + \"'.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac6dc48786fbd8009f6bca97ee2740f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/DrJavaPreferencePage.java", "commitBeforeChange": "dee21b52354b5857950492bb19547d4c974297d8", "commitAfterChange": "e16fca5d13c6d6c0bca0f6a8f27eedf39286038f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void createFieldEditors()", "signatureAfterChange": "   protected void createFieldEditors()", "diff": ["+    addField(new BooleanFieldEditor(DrJavaConstants.ALLOW_PRIVATE_ACCESS,", "+                                    \"Allow Access to Private and Protected Members of Classes\",", "+                                    SWT.NONE, getFieldEditorParent()));", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac80fc4acc8253c5bfd1eb94c083fa2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void setListFont(Font f)", "signatureAfterChange": "   public void setListFont(Font f)", "diff": ["-    doc.acquireWriteLock();", "-    try { doc.setCharacterAttributes(0, doc.getLength() + 1, set, false); }", "-    finally { doc.releaseWriteLock(); }", "+//    doc.acquireWriteLock();", "+//    try { ", "+    doc.setCharacterAttributes(0, doc.getLength() + 1, set, false); ", "+//    }", "+//    finally { doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac838ce789aaeaf4455e154e6ea6054d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 376, "methodNumberAfterChange": 897, "signatureBeforeChange": "    final private boolean jj_3_52()", "signatureAfterChange": "    final private boolean jj_3_56()", "diff": ["-", "-  final private boolean jj_3_52() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_96()) return true;", "-    if (jj_3R_462()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3_56() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_99()) return true;", "+    if (jj_3R_478()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac9c0772256c913bb014d489b7d96017", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 488, "methodNumberAfterChange": 491, "signatureBeforeChange": "    final private boolean jj_3R_384()", "signatureAfterChange": "    final private boolean jj_3R_385()", "diff": ["+  final private boolean jj_3R_385() {", "+    if (jj_3R_91()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_387()) jj_scanpos = xsp;", "-  final private boolean jj_3R_384() {", "-    if (jj_3R_90()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_386()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acbfd00ac51b0d553962b76cf866d993", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 322, "methodNumberAfterChange": 402, "signatureBeforeChange": "    final private boolean jj_3R_393()", "signatureAfterChange": "    final private boolean jj_3R_396()", "diff": ["-", "-  final private boolean jj_3R_393() {", "-    if (jj_3R_399()) return true;", "-    if (jj_3R_252()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_396() {", "+    if (jj_3R_400()) return true;", "+    if (jj_3R_255()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acd6a6af2a85e3d2819c943cdf0b2fe9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocument.java", "commitBeforeChange": "d4622e1c95180ad4b8f3b6eca04eb1a3a2eca2e9", "commitAfterChange": "07df9e8611c650306e145606873296ce77e32d2e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void remove(int offset, int len) throws BadLocationException", "signatureAfterChange": "    public void remove(int offset, int len) throws BadLocationException", "diff": ["-    //_reduced.move(locationChange);", "-    //_reduced.delete(len);", "-", "-    _currentLocation = offset;", "+\t\t_currentLocation = offset;", "+    _reduced.move(locationChange);", "+    _reduced.delete(len);", "+\t\t//else the absolute location stays the same.", "+\t\t//adjust the current location if delete works"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acd99fd4a6c4c7d47934bf36f73668d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public String lastEntry()", "signatureAfterChange": "      public String lastEntry()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acda3ed474b31058227ca939297b5396", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/VectorOptionTest.java", "commitBeforeChange": "2de5de833fec6c0fefce3e0dfbb07764b1900707", "commitAfterChange": "fa036878036cfa9b3fdfb0b92616499d17bb99f7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "        public void testParse()", "signatureAfterChange": "      public void testParse()", "diff": ["-    public void testParse() {", "-\tVector<Integer> iv = new Vector<Integer>();", "-\t", "-\tassertTrue(_ivo.parse(\"[]\").isEmpty());", "-\tassertTrue(_bvo.parse(\"[]\").isEmpty());", "-\t", "-\ttry {", "-\t    _ivo.parse(\"[,]\"); fail(\"Comma at beginning.\");", "-\t} catch (IllegalArgumentException e) {", "-\t}", "-\ttry {", "-\t    _ivo.parse(\"[11\"); fail(\"Missing footer.\");", "-\t} catch (IllegalArgumentException e) {", "-\t}", "-\ttry {", "-\t    _ivo.parse(\"[11,]\"); fail(\"Comma w/o following list element.\");", "-\t} catch (IllegalArgumentException e) {", "-\t}", "-\ttry {", "-\t    _ivo.parse(\"11]\"); fail(\"Missing header.\");", "-\t} catch (IllegalArgumentException e) {", "-\t}", "-\ttry {", "-\t    _ivo.parse(\"[11,,22]\"); fail(\"Missing list element.\");", "-\t} catch (IllegalArgumentException e) {", "-\t}", "-\ttry {", "-\t    _ivo.parse(\"{11,22}\"); fail(\"Illegal header and footer.\");", "-\t} catch (IllegalArgumentException e) {", "-\t}", "-\ttry {", "-\t    _ivo.parse(\"[11;22]\"); fail(\"Illegal delimiter.\");", "-\t} catch (IllegalArgumentException e) {", "-\t}", "-\t", "- \tVector<Boolean> bv = _bvo.parse(\"[true]\");", "-\t", "-\tassertEquals(1, bv.size()); ", "-\tassertEquals(Boolean.TRUE, bv.elementAt(0));", "-\t", "-\tbv = _bvo.parse(\"[true,false,true,true]\");", "-\t", "-\tassertEquals(4, bv.size()); ", "-\tassertEquals(Boolean.TRUE,  bv.elementAt(0)); ", "-\tassertEquals(Boolean.FALSE, bv.elementAt(1));", "-\tassertEquals(Boolean.TRUE,  bv.elementAt(2));", "-\tassertEquals(Boolean.TRUE,  bv.elementAt(3));", "-\t", "-\ttry {", "-\t    _bvo.parse(\"[11]\"); fail(\"Number instead of boolean.\");", "-\t} catch (IllegalArgumentException e) {", "-\t}", "-\ttry {", "-\t    _bvo.parse(\"[True]\"); fail(\"Boolean String needs to be lowercase.\");", "-\t} catch (IllegalArgumentException e) {", "-\t}", "+  ", "+  public void testParse() {", "+    Vector<Integer> iv = new Vector<Integer>();", "+    ", "+    assertTrue(_ivo.parse(\"[]\").isEmpty());", "+    assertTrue(_bvo.parse(\"[]\").isEmpty());", "+    ", "+    try {", "+      _ivo.parse(\"[,]\"); fail(\"Comma at beginning.\");", "+    } catch (OptionParseException e) {", "+    }", "+    try {", "+      _ivo.parse(\"[11\"); fail(\"Missing footer.\");", "+    } catch (OptionParseException e) {", "+    }", "+    try {", "+      _ivo.parse(\"[11,]\"); fail(\"Comma w/o following list element.\");", "+    } catch (OptionParseException e) {", "+    }", "+    try {", "+      _ivo.parse(\"11]\"); fail(\"Missing header.\");", "+    } catch (OptionParseException e) {", "+    }", "+    try {", "+      _ivo.parse(\"[11,,22]\"); fail(\"Missing list element.\");", "+    } catch (OptionParseException e) {", "+    }", "+    try {", "+      _ivo.parse(\"{11,22}\"); fail(\"Illegal header and footer.\");", "+    } catch (OptionParseException e) {", "+    }", "+    try {", "+      _ivo.parse(\"[11;22]\"); fail(\"Illegal delimiter.\");", "+    } catch (OptionParseException e) {", "+    Vector<Boolean> bv = _bvo.parse(\"[true]\");", "+    ", "+    assertEquals(1, bv.size()); ", "+    assertEquals(Boolean.TRUE, bv.elementAt(0));", "+    ", "+    bv = _bvo.parse(\"[true,false,true,true]\");", "+    ", "+    assertEquals(4, bv.size()); ", "+    assertEquals(Boolean.TRUE,  bv.elementAt(0)); ", "+    assertEquals(Boolean.FALSE, bv.elementAt(1));", "+    assertEquals(Boolean.TRUE,  bv.elementAt(2));", "+    assertEquals(Boolean.TRUE,  bv.elementAt(3));", "+    ", "+    try {", "+      _bvo.parse(\"[11]\"); fail(\"Number instead of boolean.\");", "+    } catch (OptionParseException e) {", "+    try {", "+      _bvo.parse(\"[True]\"); fail(\"Boolean String needs to be lowercase.\");", "+    } catch (OptionParseException e) {", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acdb4767ec379822b1a8f29231ab69b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "7b4a527a2fd4010c88a2ef6ea8f158547b322968", "commitAfterChange": "7b22fbe0160e9fdc451caeb623e46b870b03ccd3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testInteractionsCanSeeCompile()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testInteractionsCanSeeCompile()     throws BadLocationException, IOException", "diff": ["+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();", "+    _model.addListener(listener);", "+    listener.checkCompileOccurred();", "+    assertCompileErrorsPresent(false);", "+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acdf986e33bc45e0555c85971cee987b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fb385b93cd9027b537d579fb84c39de65fc03205", "commitAfterChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 162, "signatureBeforeChange": "   boolean _closeProject()", "signatureAfterChange": "   boolean _closeProject()", "diff": ["+      _junitOpenProjectFilesAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ace0af4cd1879bc24f8c5962836cbad4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassInfoCompiler.java", "commitBeforeChange": "b432c2a5363ca609f111d7dec3ae5ed814c173ea", "commitAfterChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "     public Void visit(MethodDeclaration node)", "signatureAfterChange": "     public Void visit(MethodDeclaration node)", "diff": ["+      if(node.isVarArgs())", "+        TigerUtilities.assertTigerEnabled(\"Methods with variable arguments are only allowed in Java 1.5 or better\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ace1d9e7afec41971fc82fe570a230a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 35, "signatureBeforeChange": "     @Override public Type visit(AnonymousAllocation node)", "signatureAfterChange": "     @Override public Type visit(AnonymousAllocation node)", "diff": ["-          // TODO: Check accessibility of constructor", "+          checkAccessibility(inv.constructor(), node);", "-      TreeClass c = new TreeClass(context.makeAnonymousClassName(), null, node, loader, opt);", "+      TreeClass c = new TreeClass(context.makeAnonymousClassName(), null, context.accessModule(), node, loader, opt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf0f99dedf4aeb9e4b016fbd38885a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5944dd2b12a74ebad6e3549d813d2dd557403c7e", "commitAfterChange": "53735c967d2add6a16ab5776bac9111426f41996", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 153, "signatureBeforeChange": "   private JMenu _setUpToolsMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpToolsMenu(int mask)", "diff": ["-    toolsMenu.add(_javadocAction);", "+    toolsMenu.add(_javadocAllAction);", "+    toolsMenu.add(_javadocCurrentAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf1ea086d555165e3e0968d24ca4505", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 395, "methodNumberAfterChange": 554, "signatureBeforeChange": "    final private boolean jj_3R_311()", "signatureAfterChange": "    final private boolean jj_3R_313()", "diff": ["-  final private boolean jj_3R_311() {", "-    if (jj_3R_316()) return true;", "-      if (jj_3R_331()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_313() {", "+    if (jj_3R_318()) return true;", "+      if (jj_3R_319()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad00c75be4be0e4426ff1ca01460ec9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/LogTest.java", "commitBeforeChange": "8b2531509cebe19f9248dfcfb27c6842d311bd33", "commitAfterChange": "c3f7dc43a12b95869d758523b286e6fcaa876293", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   private static boolean withinASecond(Date earlier, Date time0, Date now)", "signatureAfterChange": "   private static boolean withinTolerance(Date earlier, Date time0, Date now)", "diff": ["-  private static boolean withinASecond(Date earlier, Date time0, Date now) {", "-     return (time0.getTime()-earlier.getTime()<1000) && (now.getTime()-time0.getTime()<1000);", "+  private static boolean withinTolerance(Date earlier, Date time0, Date now) {", "+    return (time0.getTime() - earlier.getTime() < TOL) && (now.getTime() - time0.getTime() < TOL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad0bfdf6889f036d5ac7aa769e957213", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "     public Object visit(InstanceOfExpression node)", "signatureAfterChange": "   public Class visit(InstanceOfExpression node)", "diff": ["+   */", "+  public Class visit(InstanceOfExpression node) {", "+    node.getReferenceType().acceptVisitor(this);", "+    ", "+    // The expression must not have a primitive type", "+    if (((Class)node.getExpression().acceptVisitor(this)).isPrimitive()) {", "+      throw new ExecutionError(\"left.expression\", node);", "+    }", "+    ", "+    // Set the type property", "+    node.setProperty(NodeProperties.TYPE, boolean.class);", "+    return boolean.class;", "+  }", "-     */", "-    public Object visit(InstanceOfExpression node) {", "-        node.getReferenceType().acceptVisitor(this);", "-", "-        // The expression must not have a primitive type", "-        if (((Class)node.getExpression().acceptVisitor(this)).isPrimitive()) {", "-            throw new ExecutionError(\"left.expression\", node);", "-        }", "-", "-        // Set the type property", "-        node.setProperty(NodeProperties.TYPE, boolean.class);", "-        return boolean.class;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad1780deae95c52ef21eebab44ec99ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeInterpreter.java", "commitBeforeChange": "71879d695be61a14cdd93b2ece27fb14682043fb", "commitAfterChange": "e70766c672e058ab37ae5757bf5008b997a8ff63", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public Object interpret(Node AST) throws InterpreterException", "signatureAfterChange": "   public Object interpret(Node AST) throws InterpreterException", "diff": ["-    NameVisitor nv = new NameVisitor(nameVisitorContext);", "+    NameVisitor nv = new NameVisitor(nameVisitorContext,checkVisitorContext);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad2081779dfe58ae36e65dfd613ae257", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 413, "methodNumberAfterChange": 293, "signatureBeforeChange": "    final private boolean jj_3R_602()", "signatureAfterChange": "    final private boolean jj_3R_629()", "diff": ["+", "+  final private boolean jj_3R_629() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_83()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_611()) return true;", "-", "-  final private boolean jj_3R_602() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_80()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_563()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad32d3c8b1bd592f5ccb66e4376feda2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 799, "methodNumberAfterChange": 683, "signatureBeforeChange": "    final private boolean jj_3R_508()", "signatureAfterChange": "    final private boolean jj_3R_559()", "diff": ["+  final private boolean jj_3R_559() {", "+    if (jj_3R_91()) return true;", "-  final private boolean jj_3R_508() {", "-    if (jj_scan_token(ASSIGN)) return true;", "-    if (jj_3R_90()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad3b1b169afbde30259804e21a269689", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "634bad3816e5a89c71c174f08f33c3f80727cfeb", "commitAfterChange": "d1ffac675273323f7a1b9777462d16896d09a1af", "methodNumberBeforeChange": 229, "methodNumberAfterChange": 229, "signatureBeforeChange": "      private void _compile()", "signatureAfterChange": "      private void _compile()", "diff": ["-    update(getGraphics());", "+//    update(getGraphics());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad3d647b2b2069808260e8639a34248e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 436, "methodNumberAfterChange": 603, "signatureBeforeChange": "    final private boolean jj_3R_154()", "signatureAfterChange": "    final private boolean jj_3R_110()", "diff": ["-  final private boolean jj_3R_154() {", "-    if (jj_3R_197()) return true;", "-    xsp = jj_scanpos;", "-    if (jj_3R_234()) jj_scanpos = xsp;", "-    return false;", "-  }", "+  final private boolean jj_3R_110() {", "+    if (jj_3R_171()) return true;", "+    if (jj_3R_231()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad5fee6bcb9614491e88c9a44fb123f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public void testSaveAllSaveCorrectFiles()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAllSaveCorrectFiles()     throws BadLocationException, IOException", "diff": ["-    fooDoc.getDocument().setFile(file1);", "-    barDoc.getDocument().setFile(file2);", "-    trdDoc.getDocument().setFile(file3);", "+    fooDoc.setFile(file1);", "+    barDoc.setFile(file2);", "+    trdDoc.setFile(file3);", "-    assertEquals(\"contents of saved file1\",", "+    assertEquals(\"contents of saved file2\",", "-    assertEquals(\"contents of saved file1\",", "+    assertEquals(\"contents of saved file3\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad68ec6571d535ac32888f06c1a43c04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "   public Class visit(PreIncrement node)", "signatureAfterChange": "   public Class visit(PreIncrement node)", "diff": ["-    Class c  = (Class)exp.acceptVisitor(this);", "-    ", "+    Class c  = exp.acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad7507e71c73dbbf289b5c05917c3b3f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testCompileAllWithNoFiles()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllWithNoFiles()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-    //synchronized(listener) {", "+    _model.compileAll();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "+    assertCompileErrorsPresent(_name(), false);", "+    listener.checkCompileOccurred();", "+  }", "-      //listener.wait();", "-    //}", "-", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad80da622795874e0eb2c66c319eb5ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "7c4507413beb0e75cdce1379ffec8d0279bed992", "commitAfterChange": "d1bf0f940bc3d914d8d8293a0e85760984d7b371", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "     void switchToError(CompilerError error)", "signatureAfterChange": "     void switchToError(CompilerError error)", "diff": ["-          if (! prevDoc.equals(doc)) model.setActiveDocument(doc);", "+          if (! prevDoc.equals(doc)) {", "+            model.addToBrowserHistory();", "+            model.setActiveDocument(doc);", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8346c1481828135a2fbf6784bc6055", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 387, "methodNumberAfterChange": 393, "signatureBeforeChange": "   public OpenDefinitionsDocument _openFile(File file) throws IOException, AlreadyOpenException", "signatureAfterChange": "   public OpenDefinitionsDocument _openFile(File file) throws IOException, AlreadyOpenException", "diff": ["-    addDocToNavigator(doc);", "-    addDocToClassPath(doc);", "-    _notifier.fileOpened(doc);", "+    _completeOpenFile(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8c12278117d8fb867ecbb06a4c068e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "998d49ab48c08c55f388485512c281814a54c029", "commitAfterChange": "a8b8b0a5cb85063013adcdf9293d0c9c540b8baa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected void assertReplThrewContinuationException(final String code) throws EditDocumentException, InterruptedException", "signatureAfterChange": "   protected void assertReplThrewContinuationException(final String code) throws EditDocumentException, InterruptedException", "diff": ["+    model._logInteractionStart();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8cdda4f74a3bc87c55901359c52c98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testMultilineIndentAfterScroll() throws BadLocationException, InterruptedException", "signatureAfterChange": "   public void testMultilineIndentAfterScroll() throws BadLocationException, InterruptedException", "diff": ["-    doc.acquireWriteLock();", "-    ", "-    try { doc.indentLines(0, doc.getLength()); }", "-    finally { doc.releaseWriteLock(); }", "+//    doc.acquireWriteLock();", "+//    try { ", "+    doc.indentLines(0, doc.getLength()); ", "+//    }", "+//    finally { doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8e8f6b1062fb9ee987e3cd533097f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4dc5ace86e9b2c575f2b09ebb783f4d8d9db5e9a", "commitAfterChange": "798fcd5fdec1efc6698cb1c49cd62bdab41daffc", "methodNumberBeforeChange": 723, "methodNumberAfterChange": 706, "signatureBeforeChange": "    final private boolean jj_3R_536()", "signatureAfterChange": "    final private boolean jj_3R_537()", "diff": ["-  final private boolean jj_3R_536() {", "+  final private boolean jj_3R_537() {", "-    if (jj_3R_554()) {", "+    if (jj_3R_556()) {", "-    if (jj_3R_555()) return true;", "+    if (jj_3R_557()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad962e220d1f07b1f3debea20f7e1f7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyFullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "      public void xtestForInnerClassDef()", "signatureAfterChange": "      public void xtestForInnerClassDef()", "diff": ["-      SymbolData sd0 = new SymbolData(_cbfjv._enclosingData.getName() + \"$Lisa\", _packageMav, new TypeParameter[0], obj, new LinkedList<SymbolData>(), null); ", "-      _cbfjv._enclosingData.addInnerClass(sd0);", "-      sd0.setOuterData(_cbfjv._enclosingData);", "-      SymbolData sd1 = new SymbolData(_cbfjv._enclosingData.getName() + \"$Lisa$Bart\", _packageMav, new TypeParameter[0], obj, new LinkedList<SymbolData>(), null); ", "+      SymbolData sd0 = new SymbolData(_cbfjv._enclosing.getName() + \"$Lisa\", _packageMav, new TypeParameter[0], obj, ", "+                                      new ArrayList<SymbolData>(), null); ", "+      _cbfjv._enclosing.addInnerClass(sd0);", "+      sd0.setOuterData(_cbfjv._enclosing);", "+      SymbolData sd1 = new SymbolData(_cbfjv._enclosing.getName() + \"$Lisa$Bart\", _packageMav, new TypeParameter[0], ", "+                                      obj, new ArrayList<SymbolData>(), null); ", "-      LanguageLevelConverter.symbolTable.put(_cbfjv._enclosingData.getName() + \"$Lisa\", sd0);", "-//      LanguageLevelConverter.symbolTable.put(_cbfjv._enclosingData.getName() + \"$Lisa$Bart\", sd1);", "+      LanguageLevelConverter.symbolTable.put(_cbfjv._enclosing.getName() + \"$Lisa\", sd0);", "+//      LanguageLevelConverter.symbolTable.put(_cbfjv._enclosing.getName() + \"$Lisa$Bart\", sd1);", "-      SymbolData sd = _cbfjv._enclosingData.getInnerClassOrInterface(\"Lisa\");", "+      SymbolData sd = _cbfjv._enclosing.getInnerClassOrInterface(\"Lisa\");", "-      assertEquals(\"sd0 should have the correct outer data\", _cbfjv._enclosingData, sd0.getOuterData());", "+      assertEquals(\"sd0 should have the correct outer data\", _cbfjv._enclosing, sd0.getOuterData());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ada8830bf8b71ce16f42abc16ad50861", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 438, "methodNumberAfterChange": 369, "signatureBeforeChange": "    final private boolean jj_3R_247()", "signatureAfterChange": "    final private boolean jj_3R_248()", "diff": ["-", "-  final private boolean jj_3R_247() {", "-    if (jj_scan_token(HOOK)) return true;", "-    if (jj_3R_104()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_157()) return true;", "-    return false;", "-  }", "+    if (jj_scan_token(HOOK)) return true;", "+    if (jj_3R_105()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_158()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adac77ef3630c4d474dfd971868b9c84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 167, "signatureBeforeChange": "   public String getDisplayFilename(OpenDefinitionsDocument doc)", "signatureAfterChange": "   public String getDisplayFilename(OpenDefinitionsDocument doc)", "diff": ["-    String filename = doc.getFilename();", "+    String fileName = doc.getFilename();", "-    if (filename.endsWith(\".java\")) {", "-      int extIndex = filename.lastIndexOf(\".java\");", "-      if (extIndex > 0) filename = filename.substring(0, extIndex);", "+    if (fileName.endsWith(\".java\")) {", "+      int extIndex = fileName.lastIndexOf(\".java\");", "+      if (extIndex > 0) fileName = fileName.substring(0, extIndex);", "-    if (doc.isModifiedSinceSave()) filename = filename + \"*\";", "+    if (doc.isModifiedSinceSave()) fileName = fileName + \"*\";", "-    return filename;", "+    return fileName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "add745ee09549ccc24882ea2b126eb46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "   private JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "signatureAfterChange": "   private JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "diff": ["-    /*if (CodeStatus.DEVELOPMENT) {", "-      pane.setKeyBindingManager(KeyBindingManager.Singleton);", "-    }*/", "-    ", "-    if (CodeStatus.DEVELOPMENT) { // no line enumeration in stable", "-      if (DrJava.CONFIG.getSetting(LINEENUM_ENABLED).booleanValue()) {", "-        scroll.setRowHeaderView( new LineEnumRule(pane));", "-      }", "+    if (DrJava.CONFIG.getSetting(LINEENUM_ENABLED).booleanValue()) {", "+      scroll.setRowHeaderView( new LineEnumRule(pane));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ade15b17a7bf0c4b258fb7592c6d81ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 326, "methodNumberAfterChange": 313, "signatureBeforeChange": "    final private boolean jj_3R_487()", "signatureAfterChange": "    final private boolean jj_3R_490()", "diff": ["-", "-  final private boolean jj_3R_487() {", "+  final private boolean jj_3R_490() {", "-    if (jj_3R_496()) return true;", "+    if (jj_3R_499()) return true;", "-    if (jj_3R_463()) return true;", "+    if (jj_3R_465()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ade8d74c2a65c7d7bbcc1687f5c10837", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "e0e31ba24598b43b7fcb25119cc7b2c151c3e7c0", "commitAfterChange": "b25e1764d5b4aa3e174628947c02047c67664960", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public Component getTreeCellRendererComponent(JTree tree, Object value, boolean isSelected, boolean isExpanded,                                                     boolean leaf, int row, boolean hasFocus)", "signatureAfterChange": "     public Component getTreeCellRendererComponent(JTree tree, Object value, boolean isSelected, boolean isExpanded,                                                     boolean leaf, int row, boolean hasFocus)", "diff": ["-      if (leaf) {", "-        DefaultMutableTreeNode node = (DefaultMutableTreeNode)value;", "-        if (node.getUserObject() instanceof RegionTreeUserObj) {", "-          @SuppressWarnings(\"unchecked\") R r = ((RegionTreeUserObj<R>)(node.getUserObject())).region();", "-          ", "-          OpenDefinitionsDocument doc = r.getDocument();", "-          doc.acquireReadLock();", "-          try {", "-            int lnr = doc.getLineOfOffset(r.getStartOffset())+1;", "-            int startOffset = doc.getOffset(lnr-3);", "-            if (startOffset<0) { startOffset = 0; }", "-            int endOffset = doc.getOffset(lnr+3);", "-            if (endOffset<0) { endOffset = doc.getLength()-1; }", "+      if (DrJava.getConfig().getSetting(OptionConstants.SHOW_CODE_PREVIEW_POPUPS).booleanValue()) {", "+        if (leaf) {", "+          DefaultMutableTreeNode node = (DefaultMutableTreeNode)value;", "+          if (node.getUserObject() instanceof RegionTreeUserObj) {", "+            @SuppressWarnings(\"unchecked\") R r = ((RegionTreeUserObj<R>)(node.getUserObject())).region();", "-            // convert to HTML (i.e. < to &lt; and > to &gt; and newlines to <br>)", "-            String s = doc.getText(startOffset, endOffset-startOffset);", "-            ", "-            // this highlights the actual region in red", "-            int rStart = r.getStartOffset()-startOffset;", "-            if (rStart<0) { rStart = 0; }", "-            int rEnd = r.getEndOffset()-startOffset;", "-            if (rEnd>s.length()) { rEnd = s.length(); }", "-            if ((rStart<=s.length()) && (rEnd>=rStart)) {", "-              String t1 = StringOps.encodeHTML(s.substring(0,rStart));", "-              String t2 = StringOps.encodeHTML(s.substring(rStart,rEnd));", "-              String t3 = StringOps.encodeHTML(s.substring(rEnd));", "-              s = t1 + \"<font color=#ff0000>\" + t2 + \"</font>\" + t3;", "+            OpenDefinitionsDocument doc = r.getDocument();", "+            doc.acquireReadLock();", "+            try {", "+              int lnr = doc.getLineOfOffset(r.getStartOffset())+1;", "+              int startOffset = doc.getOffset(lnr-3);", "+              if (startOffset<0) { startOffset = 0; }", "+              int endOffset = doc.getOffset(lnr+3);", "+              if (endOffset<0) { endOffset = doc.getLength()-1; }", "+              ", "+              // convert to HTML (i.e. < to &lt; and > to &gt; and newlines to <br>)", "+              String s = doc.getText(startOffset, endOffset-startOffset);", "+              ", "+              // this highlights the actual region in red", "+              int rStart = r.getStartOffset()-startOffset;", "+              if (rStart<0) { rStart = 0; }", "+              int rEnd = r.getEndOffset()-startOffset;", "+              if (rEnd>s.length()) { rEnd = s.length(); }", "+              if ((rStart<=s.length()) && (rEnd>=rStart)) {", "+                String t1 = StringOps.encodeHTML(s.substring(0,rStart));", "+                String t2 = StringOps.encodeHTML(s.substring(rStart,rEnd));", "+                String t3 = StringOps.encodeHTML(s.substring(rEnd));", "+                s = t1 + \"<font color=#ff0000>\" + t2 + \"</font>\" + t3;", "+              }", "+              else {", "+                s = StringOps.encodeHTML(s);", "+              }", "+              tooltip = \"<html><pre>\"+s+\"</pre></html>\";", "-            else {", "-              s = StringOps.encodeHTML(s);", "-            }", "-            tooltip = \"<html><pre>\"+s+\"</pre></html>\";", "+            catch(javax.swing.text.BadLocationException ble) { tooltip = null; /* just don't give a tool tip */ }", "+            finally { doc.releaseReadLock(); }", "+            setText(node.getUserObject().toString());", "+            renderer = this;", "-          catch(javax.swing.text.BadLocationException ble) { tooltip = null; /* just don't give a tool tip */ }", "-          finally { doc.releaseReadLock(); }", "-          setText(node.getUserObject().toString());", "-          renderer = this;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adf61d959166ebe34dc20029fb96ddfc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/IntegerLiteral.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public IntegerLiteral(String rep)", "signatureAfterChange": "   public IntegerLiteral(String rep) throws NumberFormatException", "diff": ["-  public IntegerLiteral(String rep) {", "+  public IntegerLiteral(String rep) throws NumberFormatException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae04e150492ff675b1a0272b18fb55a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 308, "methodNumberAfterChange": 362, "signatureBeforeChange": "    final private boolean jj_3R_390()", "signatureAfterChange": "    final private boolean jj_3R_396()", "diff": ["-  final private boolean jj_3R_390() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_410()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_411()) return true;", "-    }", "+", "+  final private boolean jj_3R_396() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_409()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_410()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0cd552aa21066896c48229f15fd9ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "b5f59af8481ed1aa24e82d114a52e3948d4e83f5", "commitAfterChange": "4a90aa5d0c3f437e0c1cdaccfb311a2852121f92", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testCompileAllFailsDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllFailsDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "diff": ["-    System.err.println(cm.getCompilerErrorModel());", "+//    System.err.println(cm.getCompilerErrorModel());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae10f11f319ada1d88a17f9684775fde", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessOptionsTest.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testCompileWithGenerics()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileWithGenerics()     throws BadLocationException, IOException, InterruptedException", "diff": ["-      CompileShouldSucceedListener listener = new CompileShouldSucceedListener(false);", "+      CompileShouldSucceedListener listener = new CompileShouldSucceedListener();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae13c087d60d01bd403b5d816d6eda9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public JUnitPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public JUnitPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    super(frame, \"Test Output\");", "-    _model = model;", "+    super(model, frame, \"Test Output\");", "-        DefinitionsPane lastDefPane = _errorListPane.getLastDefPane();", "+        DefinitionsPane lastDefPane = getErrorListPane().getLastDefPane();", "-          _errorListPane.switchToError(_errorListPane.getSelectedIndex());", "+          _errorListPane.switchToError(getErrorListPane().getSelectedIndex());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae260dae7e3f68315edd37fbb65caaf0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 433, "methodNumberAfterChange": 429, "signatureBeforeChange": "    final private boolean jj_3R_154()", "signatureAfterChange": "    final private boolean jj_3R_155()", "diff": ["-  final private boolean jj_3R_154() {", "-    if (jj_3R_188()) return true;", "+  final private boolean jj_3R_155() {", "+    if (jj_3R_189()) return true;", "-    if (jj_3R_244()) jj_scanpos = xsp;", "+    if (jj_3R_245()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae264e61f6b6dad8cd5ab56881fca23c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public boolean equals(Object other)", "signatureAfterChange": "     public boolean equals(Object other)", "diff": ["-      if ((other==null) || !(other instanceof FindResultsRegionTreeUserObj)) { return false; }", "+      if (other == null || other.getClass() != this.getClass()) return false;", "-        (o.region().getStartOffset()==region().getStartOffset()) &&", "-        (o.region().getEndOffset()==region().getEndOffset()) &&", "-        (o._lineNumber==_lineNumber));", "+        (o.region().getStartOffset() == region().getStartOffset()) &&", "+        (o.region().getEndOffset() == region().getEndOffset()) &&", "+        (o._lineNumber == this._lineNumber));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae400d710776a245809572cfed7182de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "f8e4975fc86eccfc2e1e190be55c64d1a287745a", "commitAfterChange": "1b5ef0eebd43a246e897081eb432b396efa2d20e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   private InterpreterJVM() throws RemoteException", "signatureAfterChange": "   private InterpreterJVM() throws RemoteException", "diff": ["-    _classPathManager = new ClassPathManager();", "+    Iterable<File> runtimeCP = IOUtil.parsePath(System.getProperty(\"java.class.path\", \"\"));", "+    _classPathManager = new ClassPathManager(runtimeCP);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae451464494336feb2fd3acf47c427ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "74ef9fbe03efcd82eb19c1e26298c6b9ada091d1", "commitAfterChange": "2635960b836d3430a185539ff1211d21f9bd0bdd", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public void saveProject(String filename) throws IOException", "signatureAfterChange": "   public void saveProject(String filename) throws IOException", "diff": ["-    System.out.println(f);", "+    //System.out.println(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae46b4010416f6afac5dda9a1dd29ea0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   private FindResult _findNextInDocSegment(final OpenDefinitionsDocument doc, final int start, final int len,                                             final boolean wrapped, final boolean allWrapped)", "signatureAfterChange": "   private FindResult _findNextInDocSegment(final OpenDefinitionsDocument doc, final int start, final int origLen,                                             final boolean wrapped, final boolean allWrapped)", "diff": ["-  private FindResult _findNextInDocSegment(final OpenDefinitionsDocument doc, final int start, final int len, ", "+  private FindResult _findNextInDocSegment(final OpenDefinitionsDocument doc, final int start, final int origLen, ", "+    ", "+    final int len = (origLen < 0) ? docLen - start : origLen;  // set len for end of doc if origLen < 0", "-      text = doc.getText(start, len);", "+      doc.acquireReadLock(); ", "+      try { text = doc.getText(start, len); }", "+      finally { doc.releaseReadLock(); }", "-        _current = doc.createPosition(matchLocation);   // formerly doc.createWrappedPosition(...)", "+        _current = doc.createUnwrappedPosition(matchLocation);   // formerly doc.createPosition(...)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae58d69ee0d0146ac0711c827b02a316", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/ScrollableDialog.java", "commitBeforeChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "commitAfterChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public ScrollableDialog(JFrame parent, String title, String header, String text, int width, int height)", "signatureAfterChange": "   public ScrollableDialog(JFrame parent, String title, String header, String text, int width, int height, boolean wrap)", "diff": ["-  public ScrollableDialog(JFrame parent, String title, String header, String text, int width, int height)", "-  {", "+   */", "+  public ScrollableDialog(JFrame parent, String title, String header, String text, int width, int height, boolean wrap) {", "+    _textArea.setLineWrap(wrap);", "+    _textArea.setWrapStyleWord(true);", "-    JScrollPane textScroll = ", "-      new BorderlessScrollPane(_textArea, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "-                               JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);", "+    _textScroll = new BorderlessScrollPane(_textArea,", "+                                           JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "+                                           wrap?JScrollPane.HORIZONTAL_SCROLLBAR_NEVER:JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);", "-    scrollWrapper.add(textScroll,BorderLayout.CENTER);", "+    scrollWrapper.add(_textScroll,BorderLayout.CENTER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae68bc4c28a094692113408300807367", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyFullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void xtestForSimpleThisReferenceDoFirst()", "signatureAfterChange": "      public void xtestForSimpleThisReferenceDoFirst()", "diff": ["-     SimpleThisReference tl = new SimpleThisReference(JExprParser.NO_SOURCE_INFO);", "+     SimpleThisReference tl = new SimpleThisReference(SourceInfo.NO_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae74be4e0066c2d87f658220157f02e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TopLevelContext.java", "commitBeforeChange": "512658e6d0ae282068e705a86d988618e9ce9c5f", "commitAfterChange": "7d708b4318d2a7ffa9f01174e54dfcf52e139a3d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @SuppressWarnings(\"unchecked\")   private TopLevelContext(TypeContext next, String currentPackage, TopLevelContext bindings)", "signatureAfterChange": "      @SuppressWarnings(\"unchecked\")   private TopLevelContext(TypeContext next, String currentPackage, TopLevelContext bindings)", "diff": ["-    _importedMethods = (HashMap<String, DJClass>) bindings._importedMethods.clone();", "+    _importedMethods = new IndexedRelation<String, DJClass>(false);", "+    _importedMethods.addAll(bindings._importedMethods);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7a37ec2ffe27bfdc924aeb0ec40372", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testSaveButtonEnabled() throws IOException", "signatureAfterChange": "   public void testSaveButtonEnabled() throws IOException", "diff": ["-    try {", "-      Utilities.invokeAndWait(new Runnable() { ", "-        public void run() {", "-          _frame.pack();", "-          _frame.open(new FileOpenSelector() {", "-            public File[] getFiles() {", "-              File[] return_me = new File[1];", "-              return_me[0] = new File(_tempDir, \"ForceOpenClass1.java\");", "-              return return_me;", "-            }", "-          });", "-        }", "-      });", "-    }", "-    catch(InterruptedException e) { throw new UnexpectedException(e); }                      ", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() {", "+        _frame.pack();", "+        _frame.open(new FileOpenSelector() {", "+          public File[] getFiles() {", "+            File[] return_me = new File[1];", "+            return_me[0] = new File(_tempDir, \"ForceOpenClass1.java\");", "+            return return_me;", "+          }", "+        });", "+      }", "+    });                "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7d7db6eb28fb2bdb8963755148054f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 64, "signatureBeforeChange": "       public void compileAll()", "signatureAfterChange": "     public void compileAll() throws IOException", "diff": ["-      //throws UnsupportedOperationException", "-      public void compileAll() {", "-        throw new UnsupportedOperationException(\"AbstractGlobalModel does not suport compilation\");", "-      }", "+    //throws UnsupportedOperationException", "+    public void compileAll() throws IOException {", "+      throw new UnsupportedOperationException(\"AbstractGlobalModel does not suport compilation\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae8d4e7223deeffe52d510e67fb58d79", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "   protected void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)", "signatureAfterChange": "   protected void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)", "diff": ["-//    _doc.acquireWriteLock();  // reduced lock unnecessary!", "+    _doc.acquireWriteLock();  // reduced lock unnecessary!", "-//    finally { _doc.releaseWriteLock(); }", "+    finally { _doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeaac8801ec0a779480111a15ea821b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/Indenter.java", "commitBeforeChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "commitAfterChange": "07e4da5973e0c6fb136b88bb51b79becbac0e22f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void indent(DefinitionsDocument doc, BraceReduction reducedModel)", "signatureAfterChange": "   public void indent(DefinitionsDocument doc)", "diff": ["-  public void indent(DefinitionsDocument doc, BraceReduction reducedModel)", "+  public void indent(DefinitionsDocument doc)", "-    _topRule.indentLine(doc, reducedModel);", "+    _topRule.indentLine(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aebd5cab4d9d3637b12ee170448c88f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "1333ad40debe120f6d8fd5fb5ff36c57ce6b1ccf", "commitAfterChange": "3907c0e8430f2d380a191d1ad8364cbfdd1d1b28", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void nonTestCase()", "signatureAfterChange": "   public void nonTestCase()", "diff": ["+      _log.log(re.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeccc0953db7db9bc74ca969162078ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "a72aa0a4c1f252999ab0a9a3163ec82bfbbfaea2", "commitAfterChange": "7eb08657532d9784c123b1d1294465471514e8b5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private InterpretResult interpret(String input, Interpreter interpreter)", "signatureAfterChange": "      private InterpretResult interpret(String input, Interpreter interpreter)", "diff": ["+    // set the thread context class loader, this way NextGen and Mint can use the interpreter's class loader", "+    Thread.currentThread().setContextClassLoader(_interpreterLoader);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aed8a9b6969586910194bcea0456c22f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/IndentInfo.java", "commitBeforeChange": "2929449ae6587f03038439e75c91a7d89b0daaf8", "commitAfterChange": "c1ff07970240c7ef75ff58b54b7af66d381343b1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public IndentInfo()", "signatureAfterChange": "   public IndentInfo()", "diff": ["+    distToNewlineCurrent = -1;", "+    distToBraceCurrent = -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aee782cc5518ec0098e348dd86814710", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 335, "methodNumberAfterChange": 341, "signatureBeforeChange": "    final private boolean jj_3R_530()", "signatureAfterChange": "    final private boolean jj_3R_335()", "diff": ["-  final private boolean jj_3R_530() {", "-    if (jj_3R_553()) return true;", "-      if (jj_3R_569()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_335() {", "+    if (jj_3R_355()) return true;", "+      if (jj_3R_370()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aef8d427d17d0cfa64c7dc88a3c5a689", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "acb6486cf73ee6fa26fd3913d48fe9f46d7610e4", "commitAfterChange": "c0463418af643463955237ff1428c0079e36defe", "methodNumberBeforeChange": 433, "methodNumberAfterChange": 433, "signatureBeforeChange": "      private boolean _checkProjectClose()", "signatureAfterChange": "      private boolean _checkProjectClose()", "diff": ["+    _log.log(\"is changed? \"+_model.isProjectChanged()+\" based on \"+_model);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af134fbfa0369d8eb664ef42f5b72959", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public Object visit(ClassAllocation node)", "signatureAfterChange": "   public Class visit(ClassAllocation node)", "diff": ["-     */", "-    public Object visit(ClassAllocation node) {", "-\t// If the class allocation is the initializer of a field,", "-\t// it is possible that it has already been visited", "-\tif (node.hasProperty(NodeProperties.TYPE)) {", "-\t    return NodeProperties.getType(node);", "-\t} else {", "-\t    // Get the class to allocate", "-\t    Node   ctn   = node.getCreationType();", "-\t    Class   ct   = (Class)ctn.acceptVisitor(this);", "-\t    List   largs = node.getArguments();", "-\t    Class[] args = Constants.EMPTY_CLASS_ARRAY;", "-", "-\t    if (largs != null) {", "-\t\targs = new Class[largs.size()];", "-\t\tIterator it = largs.iterator();", "-\t\tint i = 0;", "-\t\twhile (it.hasNext()) {", "-\t\t    args[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "-\t\t}", "-\t    }", "-\t    return context.setProperties(node, ct, args, node.getMembers());", "-\t}", "+   */", "+  public Class visit(ClassAllocation node) {", "+    // If the class allocation is the initializer of a field,", "+    // it is possible that it has already been visited", "+    if (node.hasProperty(NodeProperties.TYPE)) {", "+      return NodeProperties.getType(node);", "+    } else {", "+      // Get the class to allocate", "+      Node   ctn   = node.getCreationType();", "+      Class   ct   = (Class)ctn.acceptVisitor(this);", "+      List   largs = node.getArguments();", "+      Class[] args = Constants.EMPTY_CLASS_ARRAY;", "+      ", "+      if (largs != null) {", "+        args = new Class[largs.size()];", "+        Iterator it = largs.iterator();", "+        int i = 0;", "+        while (it.hasNext()) {", "+          args[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "+      }", "+      return context.setProperties(node, ct, args, node.getMembers());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af144ae75b32a1748da4f3045fb8f260", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "978434ebe6c8e1cfcaf0965ea54500f7e3e475c0", "commitAfterChange": "d82c4ab6a249467ad025941135ce9c4a462237a5", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "diff": ["+    panel.addComponent(new LabelComponent(\"Note: Compiler warnings not shown if compiling any Java language level files\", this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af1f4173bc7895e9a76998c3ba7a7eb6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "791fd5c3da235c904ec8d063d9af32ea0cdcd48d", "commitAfterChange": "1fc28e4ffd44f1f2d7b1d062fbdf9f18f80ec19a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void endSession()", "signatureAfterChange": "   public void endSession()", "diff": ["-//js    Main.endSession(_session);", "+    Main.endSession(_session);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af301eff807b1064d5484e2375a05331", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 526, "methodNumberAfterChange": 533, "signatureBeforeChange": "     public void caretUpdate(final CaretEvent ce)", "signatureAfterChange": "     public void caretUpdate(final CaretEvent ce)", "diff": ["-//      doc.acquireReadLock();", "+      doc.acquireReadLock();", "-//        doc.releaseReadLock();", "+        doc.releaseReadLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af30b722c7016a8e159e36134180095a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "fee21edb1b15f1499b5409a250cdb90d3f204739", "commitAfterChange": "e100da4da75b9cbdfc04df45bf52679ed811f23a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected void updateButtons()", "signatureAfterChange": "   protected void updateButtons()", "diff": ["+    _runAgainButton.setEnabled((_is==null) || (_erris==null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af3acc3c00ab28863a0b6e4bb7c381b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public Component getTreeCellRendererComponent(JTree tree, Object value, boolean isSelected, boolean isExpanded,                                                    boolean leaf, int row, boolean hasFocus)", "signatureAfterChange": "     public Component getTreeCellRendererComponent(JTree tree, Object value, boolean isSelected, boolean isExpanded,                                                    boolean leaf, int row, boolean hasFocus)", "diff": ["-            doc.acquireReadLock();", "+//            doc.acquireReadLock();", "-            finally { doc.releaseReadLock(); }", "+//            finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af3adf4c1f28b30140d3116fa842ab1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 92, "signatureBeforeChange": "   private void _clearAllBreakpoints()", "signatureAfterChange": "   void debuggerClearAllBreakpoints()", "diff": ["-  private void _clearAllBreakpoints() {", "+  void debuggerClearAllBreakpoints() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af4269a00acc7c776da7c4acec496e2e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "4b21424812450d42c0dde2aef3c483c11b298e24", "commitAfterChange": "ede26ceaad5c407d940ac773a5e7f457dc1f5187", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "     @Override public Type visit(InstanceOfExpression node)", "signatureAfterChange": "     @Override public Type visit(InstanceOfExpression node)", "diff": ["-      if (!ts.isReference(expT) || !ts.isReference(targetT) || !ts.isCastable(targetT, expT)) {", "+      if (!ts.isReference(expT) || !ts.isReference(targetT) || ts.isDisjoint(targetT, expT)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af5f227f8d276e69429251f6f278e6a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   protected synchronized void _resumeHelper(boolean fromStep)     throws DebugException", "signatureAfterChange": "   protected synchronized void _resumeHelper(boolean fromStep)     throws DebugException", "diff": ["-        System.out.println(\"In resumeThread()\");", "+        printStream.println(\"In resumeThread()\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af5f3a9dc0a2a1160ac6455efc30f9df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 144, "signatureBeforeChange": "   public void saveHistory(FileSaveSelector selector, String editedVersion)", "signatureAfterChange": "   public void saveHistory(FileSaveSelector selector, String editedVersion) throws IOException", "diff": ["-  public void saveHistory(FileSaveSelector selector, String editedVersion) {", "+  public void saveHistory(FileSaveSelector selector, String editedVersion) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af6446d5fe254d6edd1406aa008ec2fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testCompileResetsInteractions()     throws BadLocationException, IOException, InterruptedException,     DocumentAdapterException", "signatureAfterChange": "   public void testCompileResetsInteractions()     throws BadLocationException, IOException, InterruptedException,     DocumentAdapterException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af7fce480568d74468481597aa55aacc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public CompilerErrorModel getCompilerErrorModel();", "signatureAfterChange": "   public CompilerModel getCompilerModel();", "diff": ["+   */", "+  public CompilerModel getCompilerModel();", "-   */", "-  public CompilerErrorModel getCompilerErrorModel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af888c04d1e7d088a30118ec4c7dfbae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "commitAfterChange": "eb9337b4d6e2d2de4c1774413f08dfb947ae389c", "methodNumberBeforeChange": 323, "methodNumberAfterChange": 323, "signatureBeforeChange": "   private void _updateLineNums()", "signatureAfterChange": "   private void _updateLineNums()", "diff": ["-   */", "+  /** Updates the font and colors of the line number display. */", "-      Iterator<JScrollPane> it = _defScrollPanes.values().iterator();", "-", "-      // Iterate over all definitions scroll panes.", "-      while (it.hasNext()) {", "-        // Update the font for all line number displays.", "-        JScrollPane spane = it.next();", "-", "+      ", "+      // Update the font for all line number displays", "+      for (JScrollPane spane: _defScrollPanes.values()) { ", "+     "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af90c36544ac4ec0f2d0ae4ed9a69967", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/BooleanOption.java", "commitBeforeChange": "d41b5de79662496f09ec590840d7e35134702a41", "commitAfterChange": "fd26cc12b714205eb66ef1427d78a124c29d57fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Boolean parse(String s)", "signatureAfterChange": "   public Boolean parse(String s)", "diff": ["+    s= s.trim().toLowerCase();", "-                                     \"Must be a lowercase String \" +", "-                                     \"representing a boolean value.\");", "+                                     \"Must be a String representing\" +", "+                                     \"a boolean value.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afe40d2082846622cae6fb49a2a8aaa9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "53d061333fe3393f6569c1f553912f1a449482ad", "commitAfterChange": "12c8304e14a6d9eafe2f7093583d8040569150c1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testSwitchInterpreters()", "signatureAfterChange": "   public void testSwitchInterpreters()", "diff": ["-//    _log.log(\"testSwitchInterpreters() completed\");", "+    _log.log(\"testSwitchInterpreters() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afede79ddb66d05476b0094f4a60cf10", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void compile(List<OpenDefinitionsDocument> defDocs) throws IOException", "signatureAfterChange": "   public void compile(List<OpenDefinitionsDocument> defDocs) throws IOException", "diff": ["-    if (_prepareForCompile()) {", "-      _doCompile(defDocs);", "-    }", "+    if (_prepareForCompile()) { _doCompile(defDocs); }", "+    else _notifier.compileAborted(new UnexpectedException(\"The files to be compiled include unsaved modified files\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0086c400470ac360e125e3152b529a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     public Object visit(ArrayAllocation node)", "signatureAfterChange": "   public Class visit(ArrayAllocation node)", "diff": ["-     */", "-    public Object visit(ArrayAllocation node) {", "-        // Do the checking of the size expressions", "-        Iterator it = node.getSizes().iterator();", "-            Class c = (Class)((Node)it.next()).acceptVisitor(this);", "-            // Dimension expression must be of an integral type, but not long", "-            if (c != byte.class && c != short.class && c != int.class) {", "-                throw new ExecutionError(\"array.dimension.type\", node);", "-            }", "-        Class c = (Class)node.getCreationType().acceptVisitor(this);", "-", "-        // Visits the initializer if one", "-        if (node.getInitialization() != null) {", "-            node.getInitialization().acceptVisitor(this);", "-", "-        // Set the type properties of this node", "-        Class  ac = Array.newInstance(c, new int[node.getDimension()]).getClass();", "-", "-        node.setProperty(NodeProperties.TYPE, ac);", "-        node.setProperty(NodeProperties.COMPONENT_TYPE, c);", "-        return ac;", "+   */", "+  public Class visit(ArrayAllocation node) {", "+    // Do the checking of the size expressions", "+    Iterator it = node.getSizes().iterator();", "+    while (it.hasNext()) {", "+      Class c = (Class)((Node)it.next()).acceptVisitor(this);", "+      // Dimension expression must be of an integral type, but not long", "+      if (c != byte.class && c != short.class && c != int.class) {", "+        throw new ExecutionError(\"array.dimension.type\", node);", "+      }", "+    ", "+    Class c = (Class)node.getCreationType().acceptVisitor(this);", "+    ", "+    // Visits the initializer if one", "+    if (node.getInitialization() != null) {", "+      node.getInitialization().acceptVisitor(this);", "+    ", "+    // Set the type properties of this node", "+    Class  ac = Array.newInstance(c, new int[node.getDimension()]).getClass();", "+    ", "+    node.setProperty(NodeProperties.TYPE, ac);", "+    node.setProperty(NodeProperties.COMPONENT_TYPE, c);", "+    return ac;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b00eb04ff262c6be8c67bf9d7e188261", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public Object visit(VariableDeclaration node)", "signatureAfterChange": "   public Class visit(VariableDeclaration node)", "diff": ["-     */", "-    public Object visit(VariableDeclaration node) {", "-        // Define the variable", "-        Class lc = (Class)node.getType().acceptVisitor(this);", "-        if (node.isFinal()) {", "-            context.defineConstant(node.getName(), lc);", "-        } else {", "-            context.define(node.getName(), lc);", "-        }", "-", "-\tNode init = node.getInitializer();", "-        if (init != null) {", "-            Class rc = (Class)init.acceptVisitor(this);", "-            checkAssignmentStaticRules(lc, rc, node, init);", "-        }", "-        return null;", "-    }", "+   */", "+  public Class visit(VariableDeclaration node) {", "+    // Define the variable", "+    Class lc = (Class)node.getType().acceptVisitor(this);", "+    if (node.isFinal()) {", "+      context.defineConstant(node.getName(), lc);", "+    } else {", "+      context.define(node.getName(), lc);", "+    }", "+    ", "+    Node init = node.getInitializer();", "+    if (init != null) {", "+      Class rc = (Class)init.acceptVisitor(this);", "+      checkAssignmentStaticRules(lc, rc, node, init);", "+    }", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b01380ec8bcadbb930a3e1bf1478ae6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 600, "methodNumberAfterChange": 604, "signatureBeforeChange": "    final private boolean jj_3R_563()", "signatureAfterChange": "    final private boolean jj_3R_570()", "diff": ["+", "+  final private boolean jj_3R_570() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_575()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_576()) return true;", "+    }", "+    return false;", "+  }", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_568()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_569()) return true;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b01b011c6480822751d703569669facd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testCompileWithPackageStatementInsideClass()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileWithPackageStatementInsideClass()     throws BadLocationException, IOException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b01f1bf85a5a4eb36060bbe1ef2998be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/JavaCCParserFactory.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public SourceCodeParser createParser(Reader r, String fname)", "signatureAfterChange": "   public SourceCodeParser createParser(Reader r)", "diff": ["-   */", "-  public SourceCodeParser createParser(Reader r, String fname) {", "-    return new JavaCCParser(r, fname);", "+  }", "+  public SourceCodeParser createParser(Reader r) {", "+    return new JavaCCParser(r);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b020d118b3ee4c9b22aa1cafe0de2e2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyTypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public TypeData forUninitializedVariableDeclaratorOnly(UninitializedVariableDeclarator that,                                                           TypeData type_result,                                                           TypeData name_result)", "signatureAfterChange": "   public TypeData forUninitializedVariableDeclaratorOnly(UninitializedVariableDeclarator that,                                                           TypeData type_result,                                                           TypeData name_result)", "diff": ["-      throw new RuntimeException(\"The field \" + text + \" was not found in \" + _symbolData.getName() + \".\");", "+      throw new RuntimeException(\"The field \" + text + \" was not found in \" + _symbolData.getName() + '.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b052ec1cf3cbc38f2d8d302f965f376b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecurUtil.java", "commitBeforeChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "commitAfterChange": "34d03e4ba66c612a034017381b72d822fe9c84d0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public static String arrayToString(boolean[] array, ArrayStringMode stringMode)", "signatureAfterChange": "   public static String arrayToString(boolean[] array, ArrayStringMode stringMode)", "diff": ["-          else { result.append(\", \"); }", "+          else { result.append(stringMode.delimiter()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b054249617349a950f0b03f52da286bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void checkConstructorCall(ConstructorCall node)", "signatureAfterChange": "   public void checkConstructorCall(ConstructorCall node)", "diff": ["-      ", "-      // TODO: Check accessibility of constructor", "+      checkAccessibility(inv.constructor(), node, true);", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0575599e39703988ce2ea2998d32cb5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4402afa3c67a362593909f349f9fbb816e477bed", "commitAfterChange": "b88c168dd97b3e73bf1e2484f86af286c295bdde", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": "   private void _switchDefScrollPane()", "signatureAfterChange": "   private void _switchDefScrollPane()", "diff": ["+    ", "+    if(inDebugMode()) {", "+      _updateDebugStatus();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b09f42242cd86d815e86dc3352be9d2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 56, "signatureBeforeChange": "   public TypeData forPackageStatement(PackageStatement that)", "signatureAfterChange": "   public TypeData forPackageStatement(PackageStatement that)", "diff": ["-    for (int i = 1; i < words.length; i++) {nameBuff.append(\".\" + words[i].getText());}", "+    for (int i = 1; i < words.length; i++) {nameBuff.append('.' + words[i].getText());}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0cc27022a49da4353a95e6f4e79850a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "11a167d5b0a97e55aef4d62ed18d4da71e30b762", "commitAfterChange": "a32847752bc1c4d9a9c65da4d91d56e3d8a61fa6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testConstructManyDocsWithLineNums()", "signatureAfterChange": "   public void testConstructManyDocsWithLineNums()", "diff": ["+    assertTrue(\"hasOnlyWarnings should return false.\", !model.hasOnlyWarnings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0d11784710f600ca0f43128adc72009", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "commitAfterChange": "6df23b9d947a754084cff460e34d203b0d81fd48", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public synchronized void testBreakpoints() throws Exception", "signatureAfterChange": "   public synchronized void testBreakpoints() throws Exception", "diff": ["-    _model.removeListener(interpretListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0d18fa1e2a0c4f3266043dd11e6e710", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void systemOutPrint(String s) throws RemoteException", "signatureAfterChange": "   public void systemOutPrint(String s)", "diff": ["+    */", "+  public void systemOutPrint(String s) {", "+    debug.logStart();", "+    _interactionsModel.replSystemOutPrint(s); ", "+//    Utilities.clearEventQueue();                // wait for event queue task to complete", "+    debug.logEnd();", "+  }", "-    */", "-  public void systemOutPrint(String s) throws RemoteException {", "-//    debug.logStart();", "-    _interactionsModel.replSystemOutPrint(s); ", "-//    Utilities.clearEventQueue();                // wait for event queue task to complete", "-//    debug.logEnd();", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0e8a068ec60c53aace5f9ee33570398", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "97bb3c70440590a053a3f2aff064ff2a0f94447e", "commitAfterChange": "04d8b4e8e1fbffb6355a5c7e3f74eb86c3f4d274", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void saveHistory(FileSaveSelector selector)", "signatureAfterChange": "      public void saveHistory(FileSaveSelector selector) throws IOException", "diff": ["-  public void saveHistory(FileSaveSelector selector) {", "+  public void saveHistory(FileSaveSelector selector) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0fb188f50a9ba3a15b7190c2121abf6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessTest.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void runBare() throws Throwable", "signatureAfterChange": "   public void runBare() throws Throwable", "diff": ["-      _model.setActiveCompiler(compilers[i]);", "+      _model.getCompilerModel().setActiveCompiler(compilers[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b117eeb2ca94f2f3db08b9dd0f02c1bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "97f4d18b1b96ab5f6fef892b2420a830c7869018", "commitAfterChange": "4cff41266c06ea238f993f3d8dac322323994e85", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "   private void _runJava()", "signatureAfterChange": "   private void _runJava()", "diff": ["-      jvms = commandLineToList(replaceVariables(_jvmLine.getText().trim(), System.getProperties()));", "+      jvms = commandLineToList(replaceVariables(_jvmLine.getText().trim(), _props));", "-      cmds = commandLineToList(replaceVariables(_javaCommandLine.getText().trim(), System.getProperties()));", "+      cmds = commandLineToList(replaceVariables(_javaCommandLine.getText().trim(), _props));", "-      File wd = new File(replaceVariables(_javaCommandWorkDirLine.getText().trim(), System.getProperties()));", "+      File wd = new File(replaceVariables(_javaCommandWorkDirLine.getText().trim(), _props));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b12b5326eb67b27c9185c21114a23546", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/ConstantPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   short putUTF8(String cst)", "signatureAfterChange": "   short putUTF8(String cst)", "diff": ["-    Info info = (Info)constants.get(cst);", "+    Info info = constants.get(cst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b133cc48387c25968ab1ab38450ef0f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 143, "signatureBeforeChange": "   public void saveHistory(FileSaveSelector selector)", "signatureAfterChange": "   public void saveHistory(FileSaveSelector selector) throws IOException", "diff": ["-  public void saveHistory(FileSaveSelector selector) {", "+  public void saveHistory(FileSaveSelector selector) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b135ec993522a5de24866fb5706bac43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/AbstractReducedModel.java", "commitBeforeChange": "098be4c27233835145531c86355bc697a3b62bfd", "commitAfterChange": "28db8fb2942dc00cad50f5244fe215d573867721", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public String simpleString()", "signatureAfterChange": "   public String simpleString()", "diff": ["-      val.append('|').append(tmp).append('|').append('\\t');", "+      val.append('|').append(tmp).append('|').append(\"    \");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1411d0183aa764f35ea02d4d6c82e5e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 366, "methodNumberAfterChange": 331, "signatureBeforeChange": "    final private boolean jj_3R_336()", "signatureAfterChange": "    final private boolean jj_3R_338()", "diff": ["-", "-  final private boolean jj_3R_336() {", "-    if (jj_3R_342()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_357()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_338() {", "+    if (jj_3R_344()) return true;", "+      if (jj_3R_359()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1517f83f0d6589d1ff4f755ab2894d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-mint/edu/rice/cs/drjava/model/compiler/descriptors/MintDescriptor.java", "commitBeforeChange": "0de85ca2b785d7ad489463f9a174133a91014910", "commitAfterChange": "601a464d68d9614b980a0acf64c3c8928b17445c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public Iterable<File> getSearchDirectories()", "signatureAfterChange": "    public Iterable<File> getSearchDirectories()", "diff": ["-  public Iterable<File> getSearchDirectories() { return IterUtil.asIterable(new File[0]); }", "+  public Iterable<File> getSearchDirectories() { return IterUtil.empty(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b15afa97a4152ffd9144bae9ac5882eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "9cb55009db1cb8bd2aab8df62ce303060f475c4b", "commitAfterChange": "5212beeea100a9dddc0602b719065f41bdf8e3cc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public synchronized void step(int flag) throws DebugException", "signatureAfterChange": "   public synchronized void step(int flag) throws DebugException", "diff": ["-      //System.out.println(\"Current thread is null\");", "-      return;", "+      throw new DebugException(\"Must have a thread to step.\");", "-    List steps = _eventManager.stepRequests();", "+    List steps = _eventManager.stepRequests();    ", "-        //DrJava.consoleOut().println(\"There's already a StepRequest on the current thread\");", "-        //DrJava.consoleOut().println(\"suspendCount: \" + _thread.suspendCount());", "-        /*try {", "-          DrJava.consoleOut().println(\"frames: \" + _thread.frames());", "-        }", "-        catch(IncompatibleThreadStateException itse) {", "-          DrJava.consoleOut().println(\"Can't print frames, thread is not suspended!\");", "-        }*/", "-        _thread.resume();", "+        DrJava.consoleOut().println(\"There's already a StepRequest on the current thread\");", "+        DrJava.consoleOut().println(\"suspendCount: \" + _thread.suspendCount());", "-    _thread.resume();", "+    resume();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b175e19dcad1b389234427b04512067b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 301, "methodNumberAfterChange": 818, "signatureBeforeChange": "    final private boolean jj_3R_415()", "signatureAfterChange": "    final private boolean jj_3R_424()", "diff": ["-", "-  final private boolean jj_3R_415() {", "-    if (jj_3R_145()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_439()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_424() {", "+    if (jj_3R_148()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_450()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1762040b50d8dbafc1c083f4f947cef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9e44870a735a421536c42f4914c3c67d17884278", "commitAfterChange": "cc014c9517dfc9308c94be6291683cc9ba98f1d6", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 143, "signatureBeforeChange": "   private boolean _closeProject()", "signatureAfterChange": "   private boolean _closeProject()", "diff": ["+      _compileProjectAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b182576f8f117f38050803ba69752faf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 164, "signatureBeforeChange": "   public void setProjectExtraClasspath(ClasspathVector cp)", "signatureAfterChange": "   public void setExtraClassPath(ClassPathVector cp)", "diff": ["-  public void setProjectExtraClasspath(ClasspathVector cp) {", "-    _state.setExtraClasspath(cp);", "+  public void setExtraClassPath(ClassPathVector cp) {", "+    _state.setExtraClassPath(cp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b19a9b980ed208dd2f5207e1ff0ffeb3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": "     public void debuggerStarted()", "signatureAfterChange": "     public void debuggerStarted()", "diff": ["-        _notifyObject(_notifierLock);", "+        _notifyLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b19f3c6658a3a613e47745e92ad7e554", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public ClasspathVector getProjectExtraClasspath();", "signatureAfterChange": "   public ClassPathVector getExtraClassPath();", "diff": ["-  public ClasspathVector getProjectExtraClasspath();", "+  public ClassPathVector getExtraClassPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b6e0eeaedbe54152f09b40fbea266c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "a797200d44688f476bb3b782947a0efc580dd5e8", "commitAfterChange": "1de5cb95fee280565741d04f9d0c9ba9427f28c2", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 179, "signatureBeforeChange": "      private void _openProjectUpdate()", "signatureAfterChange": "      private void _openProjectUpdate()", "diff": ["+      _jarProjectAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b7a58174d72a7c560f1434285303bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigPanel.java", "commitBeforeChange": "66b272256ff5f00349c3544e07301f2391f3f0bc", "commitAfterChange": "3bfba4e21c7be63e00e6740e8ad985da49a30702", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ConfigPanel(String title)", "signatureAfterChange": "   public ConfigPanel(String title)", "diff": ["-    _title = new JLabel(title);", "+    //_title = new JLabel(title);", "+    _title = title;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1babf7b6d11b64bbf0a3d4b7ddd2477", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/Brace.java", "commitBeforeChange": "7b3e2baaa631329b7e3233840fa805eba66e7b61", "commitAfterChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic boolean isMultipleCharBrace()", "signatureAfterChange": "  \tpublic boolean isMultipleCharBrace()", "diff": ["-\t\t\treturn (isLineComment() || isBlockCommentStart() || isBlockCommentEnd());", "+\t\t\treturn (isLineComment() || isBlockCommentStart() ||", "+\t\t\t\t\t\t\tisBlockCommentEnd() || isDoubleEscapeSequence());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e12a231aad7d89b83568c14ea87af4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "936df97bedea66175f36cae49ba74b17abf11e8a", "commitAfterChange": "d43c6d20ec903cbbb4ee5291a112b3b3ae570823", "methodNumberBeforeChange": 217, "methodNumberAfterChange": 217, "signatureBeforeChange": "   public boolean hasModifiedDocuments()", "signatureAfterChange": "   public boolean hasModifiedDocuments()", "diff": ["-    OpenDefinitionsDocument[] docs;", "-    ", "-    synchronized(_documentsRepos) { docs = _documentsRepos.toArray(new OpenDefinitionsDocument[0]); }", "-    for (OpenDefinitionsDocument doc: docs) {", "+    for (OpenDefinitionsDocument doc: getOpenDefinitionsDocuments()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e6de920889b77e331b9b4c36a62170", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "b6148d8c1aaf55232aeac694d90234c9353139cd", "commitAfterChange": "536afaee0374767d0f8bdf572a332576e3f54467", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public String getNextTopLevelClassName(int startPos, int endPos) throws ClassNameNotFoundException", "signatureAfterChange": "   public String getNextTopLevelClassName(int startPos, int endPos) throws ClassNameNotFoundException", "diff": ["-        boolean done;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e871b0b919b8ba11e7098bf6c75ea8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 421, "methodNumberAfterChange": 391, "signatureBeforeChange": "    final private boolean jj_3R_291()", "signatureAfterChange": "    final private boolean jj_3R_295()", "diff": ["-", "-  final private boolean jj_3R_291() {", "-    if (jj_3R_311()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_338()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+    if (jj_3R_315()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_340()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f41c0fe38fc87fdb1366a0e567a1ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testGenericReferenceTypes14()", "signatureAfterChange": "   public void testGenericReferenceTypes14()", "diff": ["-    TigerUtilities.setTigerEnabled(false);", "+    setTigerEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f60facb1fc2bbd604772a8ff5c986a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/jar/ManifestWriter.java", "commitBeforeChange": "f15def3e7ab21266c84052df071b37f147d8ecf6", "commitAfterChange": "ab45bfd3fc5ca53de7db1894bd0678c87e67670b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected InputStream getInputStream()", "signatureAfterChange": "   protected InputStream getInputStream()", "diff": ["-    sbuf.append(\": 1.0\\n\");", "+    sbuf.append(\": 1.0\"+System.getProperty(\"line.separator\"));", "-      sbuf.append(\"\\n\");", "+      sbuf.append(System.getProperty(\"line.separator\"));", "-      sbuf.append(\"\\n\");", "+      sbuf.append(System.getProperty(\"line.separator\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1fb62e328d2d45ea3f844087dfc67ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public JUnitErrorModel getJUnitErrorModel();", "signatureAfterChange": "   public JUnitModel getJUnitModel();", "diff": ["+   */", "+  public JUnitModel getJUnitModel();", "-   */", "-  public JUnitErrorModel getJUnitErrorModel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b201e961b45e16e5b10e9707b727159f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testIndentInfoCurly() throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoCurly() throws BadLocationException", "diff": ["-    BraceReduction _reduced = doc.getReduced();", "+    BraceReduction _reduced = _doc.getReduced();", "-    doc.insertString(0, \"\\n\", null);", "-    _assertContents(\"\\n\", doc);", "+    _doc.insertString(0, \"\\n\", null);", "+    _assertContents(\"\\n\", _doc);", "-    doc.insertString(0, \"{\\n\\n\", null);", "+    _doc.insertString(0, \"{\\n\\n\", null);", "-    _assertContents(\"{\\n\\n\\n\", doc);", "+    _assertContents(\"{\\n\\n\\n\", _doc);", "-    doc.insertString(3, \"{\\n\\n\", null);", "+    _doc.insertString(3, \"{\\n\\n\", null);", "-    _assertContents(\"{\\n\\n{\\n\\n\\n\", doc);", "+    _assertContents(\"{\\n\\n{\\n\\n\\n\", _doc);", "-    doc.insertString(6, \"  {\\n\\n\", null);", "+    _doc.insertString(6, \"  {\\n\\n\", null);", "-    _assertContents(\"{\\n\\n{\\n\\n  {\\n\\n\\n\", doc);", "+    _assertContents(\"{\\n\\n{\\n\\n  {\\n\\n\\n\", _doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b20447290fd968fc714da8b3863635d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public Vector<DebugWatchData> getWatches();", "signatureAfterChange": "   public Vector<DebugWatchData> getWatches() throws DebugException;", "diff": ["-  public Vector<DebugWatchData> getWatches();", "+  public Vector<DebugWatchData> getWatches() throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b21f2b448e7c4d5cd8e94f9ef6d1b7c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/BooleanOptionComponent.java", "commitBeforeChange": "51bfc4d668bc1673b008afd130ba536a07f9c69d", "commitAfterChange": "332b6e452982977da36f3fe748b79e9b0c3888de", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public BooleanOptionComponent (BooleanOption opt, String text, Frame parent)", "signatureAfterChange": "      public BooleanOptionComponent (BooleanOption opt, String text, Frame parent)", "diff": ["-    super(opt, text, parent);", "+    super(opt, \"\", parent);", "+    _checkboxLabel = new JLabel(text);", "+    ", "+    _panel = new JPanel();", "+    _panel.setLayout(new BorderLayout());", "+    _panel.add(_jcb, BorderLayout.WEST);", "+    _panel.add(_checkboxLabel, BorderLayout.CENTER);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2219f102b02bd88d8ed4bcf8570790a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/IntegerOptionComponentTest.java", "commitBeforeChange": "331da9dae5ca8d07aef3df8e995cb58d0f6f24d7", "commitAfterChange": "ad6842e7f3f5b3d0f8c5827298c4ec26a70a9f28", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testApplyThenResetDefault()", "signatureAfterChange": "    public void testApplyThenResetDefault()", "diff": ["+    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b231720ab529ecd9665098d31893dd35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BackSlashTest.java", "commitBeforeChange": "a454f078c900245b418db671925f6207d6f1ff60", "commitAfterChange": "533552b81f1020221bb3fe1df1f370a4168db503", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testInsideQuotePrevious()", "signatureAfterChange": "   public void testInsideQuotePrevious()", "diff": ["-    assertEquals(\"#0.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+    assertEquals(\"#0.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model1));", "-    assertEquals(\"#2.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+    assertEquals(\"#2.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model1));", "-    assertEquals(\"#3.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+    assertEquals(\"#3.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model1));", "-    assertEquals(\"#4.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+    assertEquals(\"#4.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b24535ad726dac2f58e10dd4a80ecbc0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "b796c376864058d232f1be02ccfb0bd7548b3f89", "commitAfterChange": "ba6275930e25f1b0898c45319a21c16860b3e177", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public InteractionsController(InteractionsModel model,                                  SwingDocumentAdapter adapter,                                  InteractionsPane pane)", "signatureAfterChange": "   public InteractionsController(InteractionsModel model,                                  SwingDocumentAdapter adapter,                                  InteractionsPane pane)", "diff": ["+    _errStyle = new SimpleAttributeSet();", "+    _debugStyle = new SimpleAttributeSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b24a1f4ce778e430efbadfdd68080ff5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected void setUp()", "signatureAfterChange": " \t \tprotected void setUp()", "diff": ["-\t\t\tmodel0 = new ReducedModel();", "-\t\t\tmodel1 = new ReducedModel();", "-\t\t\tmodel2 = new ReducedModel();", "+\t\t\tmodel0 = new ReducedModelControl();", "+\t\t\tmodel1 = new ReducedModelControl();", "+\t\t\tmodel2 = new ReducedModelControl();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2551eefcec39728f89d166c02c4c815", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "         public abstract boolean containsField(Type t, String name);", "signatureAfterChange": "         public abstract boolean containsField(Type t, String name, Access.Module accessModule);", "diff": ["-  public abstract boolean containsField(Type t, String name);", "+  public abstract boolean containsField(Type t, String name, Access.Module accessModule);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b25a4625e4d9204a106a961c04750f9c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 456, "methodNumberAfterChange": 643, "signatureBeforeChange": "    final private boolean jj_3R_368()", "signatureAfterChange": "    final private boolean jj_3R_333()", "diff": ["-", "-  final private boolean jj_3R_368() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_372()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_373()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_333() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_341()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_342()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b275cf3e9911266ec401a7b94f50d845", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 162, "signatureBeforeChange": "     private void _setUpPanes()", "signatureAfterChange": "     private void _setUpPanes()", "diff": ["+      catch (DebugException de) {", "+        // Show the error", "+        _showDebugError(de);", "+        _debugPanel = null;", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b288078fd8b769b2dc63fdbded9c5cd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilitiesTest.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private void _assertNotBoxCompatible(Class c1, Class c2, boolean boxEnabled)", "signatureAfterChange": "   private void _assertNotBoxCompatible(Class c1, Class c2, boolean boxEnabled)", "diff": ["-    TigerUtilities.setTigerEnabled(boxEnabled);", "+    setTigerEnabled(boxEnabled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b296d12ae988df2ce587949be5c729f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 496, "methodNumberAfterChange": 553, "signatureBeforeChange": "    final private boolean jj_3R_481()", "signatureAfterChange": "    final private boolean jj_3R_409()", "diff": ["-", "-  final private boolean jj_3R_481() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_485()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_486()) return true;", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_409() {", "+    if (jj_3R_434()) {", "+    if (jj_3R_435()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2abaece16048b21f7f0a6e2b3c7ddfa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "fda2639b8f33ecf044705f9cb480e25dbae0c84a", "commitAfterChange": "3c5a933a3b7bdbbae2845e4b6fe81e012901940b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "   private void initComponents()", "signatureAfterChange": "   private void initComponents()", "diff": ["+    _dirChooser = new DirectoryChooser(this);", "+    _dirChooser.setSelectedFile(new File(System.getProperty(\"user.dir\")));", "+    _dirChooser.setDialogTitle(\"Select Work Directory\");", "+    _dirChooser.setApproveButtonText(\"Select\");", "+", "-    pack();", "+    // pack();", "-    MainFrame.setPopupLoc(this, _mainFrame);    ", "+    setSize(FRAME_WIDTH, FRAME_HEIGHT);", "+    MainFrame.setPopupLoc(this, _mainFrame);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2b722bcf0ef5db46b584cf812dc1f98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "96bf5a5cd2d40db16b0b6c02c789d4b37a3a9876", "commitAfterChange": "0bdf9ca1ec4730da3a7aefde2e61b8646efd7da7", "methodNumberBeforeChange": 363, "methodNumberAfterChange": 364, "signatureBeforeChange": "   private void _setUpToolBar()", "signatureAfterChange": "   private void _setUpToolBar()", "diff": ["-    _compileButton = _createToolbarButton(_compileAllAction);", "-    _toolBar.add(_compileButton);", "+    _toolBar.add(_compileButton = _createToolbarButton(_compileAllAction));", "-    _toolBar.add(_createToolbarButton(_junitAllAction));", "+    _toolBar.add(_junitButton = _createToolbarButton(_junitAllAction));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2b8088ed4a023a255cd02ca92e5c398", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ce1be4bebdf226da73b0f3a3408c7770e9d93c01", "commitAfterChange": "e48d5f3129b8001e5afe1a32af197a9281189fe3", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 166, "signatureBeforeChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "diff": ["+    doc.getFindResultsManager().clearRegions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2ddad8b654eaea905371ea261617667", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 190, "methodNumberAfterChange": 191, "signatureBeforeChange": "   final public void interfaceMemberDeclarationLookahead() throws ParseException", "signatureAfterChange": "   final public void interfaceMemberDeclarationLookahead() throws ParseException", "diff": ["-    if (jj_2_66(2147483647)) {", "+    if (jj_2_68(2147483647)) {", "-    } else if (jj_2_67(2147483647)) {", "+    } else if (jj_2_69(2147483647)) {", "-    } else if (jj_2_68(2147483647)) {", "+    } else if (jj_2_70(2147483647)) {", "-        jj_la1[213] = jj_gen;", "+        jj_la1[216] = jj_gen;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b303e3498d9222250cf8a96d1aee1889", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "    protected void assertContents(String s, OpenDefinitionsDocument doc)     throws BadLocationException", "signatureAfterChange": "    protected void assertContents(String s, OpenDefinitionsDocument doc)     throws BadLocationException", "diff": ["-    int len = doc.getDocument().getLength();", "+    int len = doc.getLength();", "-                 doc.getDocument().getText(0, len));", "+                 doc.getText(0, len));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32259aac5e66fbb50e71b5e29802778", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 736, "methodNumberAfterChange": 737, "signatureBeforeChange": "    final private boolean jj_3R_118()", "signatureAfterChange": "    final private boolean jj_3R_119()", "diff": ["-", "-  final private boolean jj_3R_118() {", "-    if (jj_3R_160()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_161()) jj_scanpos = xsp;", "-    return false;", "-  }", "+  final private boolean jj_3R_119() {", "+    if (jj_3R_162()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_163()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b326ea66257b13779f1422567ee2560d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "commitAfterChange": "f938008597ce54d16e4a865d30f8ef062ea55d2f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected static void _saveConfig()", "signatureAfterChange": "   protected static void _saveConfig()", "diff": ["-      // TODO: log this error", "+      // log this error", "+      DrJavaErrorHandler.record(new edu.rice.cs.util.UnexpectedException(e,", "+                                                                         \"Could not save the location of tools.jar in \\n\" +", "+                                                                         \"the '.drjava' file in your home directory. \\n\" +", "+                                                                         \"Another process may be using the file.\\n\\n\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32b2deee0c699fcf09bc2a008850bc2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testGetSourceRootPackageThreeDeepInvalid() throws BadLocationException, IOException", "signatureAfterChange": "      public void testGetSourceRootPackageThreeDeepInvalid() throws BadLocationException, IOException", "diff": ["+    debug.logStart();", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b349941c70052a0449d695a9a5b7a7b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "1018be24b33ba74b1be6da8d72dc97e6545e20b1", "commitAfterChange": "c0c2e54a62410a429f0ffcedb26fd38c6f82937b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "    public void testGetSourceRootPackageThreeDeepValid()     throws BadLocationException, IOException, InvalidPackageException", "signatureAfterChange": "    public void testGetSourceRootPackageThreeDeepValid()     throws BadLocationException, IOException, InvalidPackageException", "diff": ["-    assertEquals(\"source root\", baseTempDir, roots[0]);", "+    assertEquals(\"source root\", baseTempDir.getCanonicalFile(), ", "+                 roots[0].getCanonicalFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b36f05ddac3ad4a80202a45bdcb64812", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public String getDisplayFilename(OpenDefinitionsDocument doc)", "signatureAfterChange": "   public String getDisplayFilename(OpenDefinitionsDocument doc)", "diff": ["-    String filename = doc.getFilename();", "+    String fileName = doc.getFilename();", "-    if (filename.endsWith(\".java\")) {", "-      int extIndex = filename.lastIndexOf(\".java\");", "-      if (extIndex > 0) filename = filename.substring(0, extIndex);", "+    if (fileName.endsWith(\".java\")) {", "+      int extIndex = fileName.lastIndexOf(\".java\");", "+      if (extIndex > 0) fileName = fileName.substring(0, extIndex);", "-    if (doc.isModifiedSinceSave()) filename = filename + \"*\";", "+    if (doc.isModifiedSinceSave()) fileName = fileName + \"*\";", "-    return filename;", "+    return fileName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b37d68a2d221ac80495d0681daefa13f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyAdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Void forBlock(Block that)", "signatureAfterChange": "   public Void forBlock(Block that)", "diff": ["-    that.getStatements().visit(new BodyBodyAdvancedVisitor(bd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    that.getStatements().visit(new BodyBodyAdvancedVisitor(bd, _file, _package, _importedFiles, _importedPackages, ", "+                                                           _classNamesInThisFile, continuations, _innerClassesToBeParsed));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3a574beebf5b16da0bea465d39a9579", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "dab158c5d408db6c4f930265bca0246d6ef37f1b", "commitAfterChange": "036a8027e2377c96155d3219b37dda9670c5f5a5", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public static String stringMakeRelativeTo(File f, File b) throws IOException, SecurityException", "signatureAfterChange": "   public static String stringMakeRelativeTo(File f, File b) throws IOException, SecurityException", "diff": ["+      ", "-      if ((fRoot==null) || (!fRoot.equals(bRoot))) {", "-        // f and b have different file system roots", "-        // just make f absolute and canonical", "+      ", "+      //Makes exception for //server/folder", "+      if (((fRoot==null) || (!fRoot.equals(bRoot))) && (!f.getAbsoluteFile().getCanonicalFile().toString().startsWith(File.separator + File.separator))) {", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3b4f34f4f7837a84546ab7614fa0ff7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": "     public void runMain() throws ClassNameNotFoundException, IOException", "signatureAfterChange": "     public void runMain() throws ClassNameNotFoundException, IOException", "diff": ["-        String className = _doc.getQualifiedClassName();", "+        String className = getDocument().getQualifiedClassName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3cd4adb33ff8f3c616f95a9aba5e5ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "commitAfterChange": "6df23b9d947a754084cff460e34d203b0d81fd48", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 191, "signatureBeforeChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "signatureAfterChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "diff": ["-    pane.addCaretListener( _posListener );", "+    pane.addCaretListener(_posListener);", "+    ", "+    // add a focus listener to the pane.", "+    pane.addFocusListener(new LastFocusListener());", "-      scroll.setRowHeaderView( new LineEnumRule(pane));", "+      scroll.setRowHeaderView(new LineEnumRule(pane));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d28a2fc69b66432af217dec5299388", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "eclipse/src/edu/rice/cs/util/text/SWTDocumentAdapter.java", "commitBeforeChange": "bd3609d73f910b773bb009bd9fec801547e38ce7", "commitAfterChange": "ee77a4b190fe991345758d9ffc949583a7709b61", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected boolean _canRemove(VerifyEvent e)", "signatureAfterChange": "     protected boolean _canRemove(VerifyEvent e)", "diff": ["-        _condition.canRemoveText(e.start, e.end - e.start);", "+\t  _condition.canRemoveText(e.start); //, e.end - e.start);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d367a0e3a4ea89f3ea7cfb2d8f590b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "42453ef03053968f9ca85cc1f502a43bd9378c76", "commitAfterChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public ErrorListPane()", "signatureAfterChange": "      public ErrorListPane()", "diff": ["+      ErrorListPane.this.setFont(new Font(\"Courier\", 0, 20));", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b445161580df6015240ebaed2ad1078c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "07df9e8611c650306e145606873296ce77e32d2e", "commitAfterChange": "ffef92d973721c01556f7c658b9620d6a7c5fd34", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic void testInsertMultipleBraces()", "signatureAfterChange": " \t \tpublic void testInsertMultipleBraces()", "diff": ["-\t\t\tmodel1.insertBlockCommentStart();", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertStar();", "-\t\t\tmodel1.insertBlockCommentEnd();", "+\t\t\tmodel1.insertStar();", "+\t\t\tmodel1.insertSlash();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b454411aaaf63132fcd9093a5396ba40", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "       public Object forVoidResult(VoidResult that)", "signatureAfterChange": "       public Object forVoidResult(VoidResult that)", "diff": ["-          //System.out.println(\"notify void\");", "+          _log.log(\"NewJVMTest: void returned by interpretResult callback\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b46dac19bade3cbb04cb1e1db5b3858e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "    private void reset(File projRoot)", "signatureAfterChange": "    private void reset(File projRoot)", "diff": ["+    ", "+    _storedPreferences.clear();", "+    _storedPreferences.putAll(_model.getPreferencesStoredInProject());", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b46dfa7472961e939a4f8436089f4a28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DefaultOptionMap.java", "commitBeforeChange": "ab56c47a9f6c097d16c8c38565dec5edb6fb4d6f", "commitAfterChange": "0d80b47fa71022c1d579ad193bcaa14dd927885e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "        public <T> T setOption(Option<T> o, T val)", "signatureAfterChange": "        public <T> T setOption(Option<T> o, T val)", "diff": ["-\tsuper.put(o,val); // jsr14 is dumb.  we have to cast.  Every OptionParser<T> is OptionParser<Object>", "+        setOption(o);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4a13375b8fb8c043929eff27b70f94d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 295, "methodNumberAfterChange": 393, "signatureBeforeChange": "    final private boolean jj_3R_498()", "signatureAfterChange": "    final private boolean jj_3R_498()", "diff": ["-  final private boolean jj_3R_498() {", "+  final private boolean jj_3R_498() {", "+    if (jj_3R_504()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4b120521c2f6d47ac7de9e47a8bc089", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 553, "methodNumberAfterChange": 553, "signatureBeforeChange": "    final private boolean jj_3R_357()", "signatureAfterChange": "    final private boolean jj_3R_358()", "diff": ["-  final private boolean jj_3R_357() {", "-    if (jj_3R_366()) return true;", "+  final private boolean jj_3R_358() {", "+    if (jj_3R_367()) return true;", "-      if (jj_3R_371()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_372()) { jj_scanpos = xsp; break; }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4b195e44fee8da5aeb00aad3bfd8be8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "     public Object visit(BitAndAssignExpression node)", "signatureAfterChange": "   public Class visit(BitAndAssignExpression node)", "diff": ["+   */", "+  public Class visit(BitAndAssignExpression node) {", "+    return visitBitwiseAssign(node);", "+  }", "-     */", "-    public Object visit(BitAndAssignExpression node) {", "-        return visitBitwiseAssign(node);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4c22b978a1246a90d45b821f21a1287", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 466, "methodNumberAfterChange": 754, "signatureBeforeChange": "    final private boolean jj_3R_362()", "signatureAfterChange": "    final private boolean jj_3R_596()", "diff": ["-  final private boolean jj_3R_362() {", "-    if (jj_3R_90()) return true;", "-    if (jj_3R_578()) jj_scanpos = xsp;", "+", "+  final private boolean jj_3R_596() {", "+    if (jj_3R_92()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_604()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4c8aa9f9c7b62a97057fca05af5fe3c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "          public void testIsCheckedException()", "signatureAfterChange": "          public void testIsCheckedException()", "diff": ["-      NullLiteral nl = new NullLiteral(JExprParser.NO_SOURCE_INFO);", "+      NullLiteral nl = new NullLiteral(SourceInfo.NO_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ca36a67f278036483ca7cdb4e77660", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 379, "methodNumberAfterChange": 306, "signatureBeforeChange": "    final private boolean jj_3R_524()", "signatureAfterChange": "    final private boolean jj_3R_525()", "diff": ["+", "+  final private boolean jj_3R_525() {", "+    if (jj_3R_120()) return true;", "+    if (jj_3R_80()) return true;", "+    if (jj_3R_415()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_542()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }", "-    if (jj_3R_80()) return true;", "-    if (jj_3R_414()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_541()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4dd79f7e9d835ddf5754885b38dd9d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithSkipComments.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-      int startPos   = doc.getLineFirstCharPos(origPos);", "-      int endPos     = doc.getLineEndPos(origPos);", "+      int startPos   = doc._getLineFirstCharPos(origPos);", "+      int endPos     = doc._getLineEndPos(origPos);", "-      doc.setCurrentLocation(startPos);", "+      doc._setCurrentLocation(startPos);", "-        for (int i = 0; i < lineLength; i++, doc.move(1)) {", "+        for (int i = 0; i < lineLength; i++, doc._move(1)) {", "-          ReducedModelState state = doc.getStateAtCurrent();", "+          ReducedModelState state = doc._getStateAtCurrent();", "-      finally { doc.setCurrentLocation(origPos); }", "+      finally { doc._setCurrentLocation(origPos); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4f1755f8d845e66e8faadc20200806a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 82, "signatureBeforeChange": "   private void _switchToSuspendedThread(boolean updateWatches) throws DebugException", "signatureAfterChange": "   private void _switchToSuspendedThread(boolean updateWatches) throws DebugException", "diff": ["-      System.out.println(\"_switchToSuspendedThread()\");", "+      printStream.println(\"_switchToSuspendedThread()\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4f1916ccf234f210e39000a27273a76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "c8bdd45b172c9714aba30b2edf20a9a7463e66ab", "commitAfterChange": "c2cccf3d2cd557fff7d01a0111e1dc7df943b427", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void testStarted(String name)", "signatureAfterChange": "     public void testStarted(String name)", "diff": ["-      int index = doc.getLength();", "-", "+      doc.acquireWriteLock();", "+        int index = doc.getLength();", "-", "+        ", "+      finally { doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4fee014c202d255045ea12c5d648b4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void printBreakpoints();", "signatureAfterChange": "   public void printBreakpoints() throws DebugException;", "diff": ["-  public void printBreakpoints();", "+  public void printBreakpoints() throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5021fdb2c09b2961cf49ef3d25fc5fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/DocumentAdapter.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void forceRemoveText(int offs, int len) throws DocumentAdapterException;", "signatureAfterChange": "   public void forceRemoveText(int offs, int len);", "diff": ["-  public void forceRemoveText(int offs, int len) throws DocumentAdapterException;", "+  public void forceRemoveText(int offs, int len);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b506b8f15fc60315969589a382058978", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 55, "signatureBeforeChange": "     public void currThreadSet(DebugThreadData dtd)", "signatureAfterChange": "     public void currThreadSet(DebugThreadData dtd)", "diff": ["-      if (printEvents) System.out.println(\"threadSet \" + currThreadSetCount);", "+      if (printEvents) printStream.println(\"threadSet \" + currThreadSetCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b50f3d17c6ce4ecd8a63d0354bd1b635", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-   ", "+", "+    // Add a breakpoint", "-    synchronized(_notifierLock){", "-      _asynchStep(Debugger.STEP_OVER);", "+    synchronized(_notifierLock) {", "+      _asyncStep(Debugger.STEP_OVER);", "-      _asynchResume();", "+      _asyncResume();", "-    if( printMessages ) System.err.println(\">>>>>> Adding interpret listener <<<<<<<\");", "+    if( printMessages ) System.err.println(\"-------- Adding interpret listener --------\");", "-      if( printMessages ) System.err.println(\">>>>>> resuming <<<<<<<\");", "-      _asynchResume();", "+      if( printMessages ) System.err.println(\"-------- resuming --------\");", "+      _asyncResume();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b51344d750d95187e46fc9f710d2d693", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/GenericTreeTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public void testSimpleAllocation()", "signatureAfterChange": "    public void testSimpleAllocation()", "diff": ["-    List<ReferenceType> targs = new LinkedList<ReferenceType>();", "-    targs.add(new ReferenceType(iIds));", "-    List<List<? extends Type>> alltargs = new LinkedList<List<? extends Type>>();", "-    alltargs.add(new LinkedList<ReferenceType>());", "-    alltargs.add(new LinkedList<ReferenceType>());", "+    List<ReferenceTypeName> targs = new LinkedList<ReferenceTypeName>();", "+    targs.add(new ReferenceTypeName(iIds));", "+    List<List<? extends TypeName>> alltargs = new LinkedList<List<? extends TypeName>>();", "+    alltargs.add(new LinkedList<ReferenceTypeName>());", "+    alltargs.add(new LinkedList<ReferenceTypeName>());", "-    Type genericListType = new GenericReferenceType(ids, alltargs);", "+    TypeName genericListType = new GenericReferenceTypeName(ids, alltargs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b546f47628078be5f594ede29892804d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b796c376864058d232f1be02ccfb0bd7548b3f89", "commitAfterChange": "ba6275930e25f1b0898c45319a21c16860b3e177", "methodNumberBeforeChange": 176, "methodNumberAfterChange": 176, "signatureBeforeChange": "   private void _setMainFont()", "signatureAfterChange": "   private void _setMainFont()", "diff": ["+    ", "+    // Update Interactions Pane", "+    _interactionsController.setDefaultFont(f);", "+    ", "+    // Update Console Pane", "+    _consoleController.setDefaultFont(f);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b562b6de3f377b4160a2cdf4a778ea5d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "94f0a27f33bac9f77c517bf8ab75dfe92afa1ace", "commitAfterChange": "60280b438c8e4415d1e3fb7cae7f2c5284f4ab7d", "methodNumberBeforeChange": 244, "methodNumberAfterChange": 249, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["-    /* Other panes */", "+    /* Set up tabbed pane and navigation pane. */", "+    ", "+    _tabbedPane.addFocusListener(_focusListenerForRecentDocs);", "+    _tabbedPane.addKeyListener(_historyListener);    // TODO: can this code be moved to the MainFrame keymap?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b564c2a2cdc161f9c8e088579f3da401", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1b6ef7c7e1a6439fd1630b14326c67b0978e88ba", "commitAfterChange": "93cff9492f5f66f78081d1bfed6f05eaa775f999", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 134, "signatureBeforeChange": "   private void _openProjectHelper(File projectFile)", "signatureAfterChange": "   private void _openProjectHelper(File projectFile)", "diff": ["+      _recentFileManager.updateOpenFiles(projectFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b56ce77b2383d36463a00938ce2d7eb3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 660, "methodNumberAfterChange": 619, "signatureBeforeChange": "    final private boolean jj_3R_548()", "signatureAfterChange": "    final private boolean jj_3R_434()", "diff": ["+", "+  final private boolean jj_3R_434() {", "+    if (jj_3R_122()) return true;", "+    if (jj_3R_326()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_548() {", "-    if (jj_3R_123()) return true;", "-    if (jj_3R_421()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b56d4641ab93cb96a27cb86a555bd392", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 394, "methodNumberAfterChange": 567, "signatureBeforeChange": "    final private boolean jj_3R_159()", "signatureAfterChange": "    final private boolean jj_3R_180()", "diff": ["-", "-  final private boolean jj_3R_159() {", "-    if (jj_3R_207()) return true;", "-    if (jj_3R_276()) jj_scanpos = xsp;", "+", "+  final private boolean jj_3R_180() {", "+    if (jj_3R_246()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_305()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5705047de9a3b93a19d271836e9274b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testIndentInfoParen() throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoParen() throws BadLocationException", "diff": ["-    BraceReduction _reduced = doc.getReduced();", "-    doc.insertString(0, \"\\n(\\n\", null);", "+    BraceReduction _reduced = _doc.getReduced();", "+    _doc.insertString(0, \"\\n(\\n\", null);", "-    doc.insertString(1, \"  helo \", null);", "-    doc.move(2);", "+    _doc.insertString(1, \"  helo \", null);", "+    _doc.move(2);", "-    _assertContents(\"\\n  helo (\\n\", doc);", "+    _assertContents(\"\\n  helo (\\n\", _doc);", "-    doc.move(-1);", "-    doc.insertString(9, \" (\", null);", "-    doc.move(1);", "+    _doc.move(-1);", "+    _doc.insertString(9, \" (\", null);", "+    _doc.move(1);", "-    _assertContents(\"\\n  helo ( (\\n\", doc);", "+    _assertContents(\"\\n  helo ( (\\n\", _doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b57435ea6ebf118ec8f6ae6fdd0b2718", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/TreeUtilities.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public static Type classToType(Class<?> c, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public static TypeName classToType(Class<?> c, String fn, int bl, int bc, int el, int ec)", "diff": ["-  public static Type classToType(Class<?> c, String fn, int bl, int bc, int el, int ec) {", "-    Type result;", "+  public static TypeName classToType(Class<?> c, String fn, int bl, int bc, int el, int ec) {", "+    TypeName result;", "-      result = new IntType(fn, bl, bc, el, ec);", "+      result = new IntTypeName(fn, bl, bc, el, ec);", "-      result = new DoubleType(fn, bl, bc, el, ec);", "+      result = new DoubleTypeName(fn, bl, bc, el, ec);", "-      result = new LongType(fn, bl, bc, el, ec);", "+      result = new LongTypeName(fn, bl, bc, el, ec);", "-      result = new FloatType(fn, bl, bc, el, ec);", "+      result = new FloatTypeName(fn, bl, bc, el, ec);", "-      result = new CharType(fn, bl, bc, el, ec);", "+      result = new CharTypeName(fn, bl, bc, el, ec);", "-      result = new ByteType(fn, bl, bc, el, ec);", "+      result = new ByteTypeName(fn, bl, bc, el, ec);", "-      result = new ShortType(fn, bl, bc, el, ec);", "+      result = new ShortTypeName(fn, bl, bc, el, ec);", "-      result = new BooleanType(fn, bl, bc, el, ec);", "+      result = new BooleanTypeName(fn, bl, bc, el, ec);", "-      result = new VoidType(fn, bl, bc, el, ec);", "+      result = new VoidTypeName(fn, bl, bc, el, ec);", "-      result = new ArrayType(classToType(c.getComponentType(), fn, bl, bc, el, ec),", "+      result = new ArrayTypeName(classToType(c.getComponentType(), fn, bl, bc, el, ec),", "-      result = new ReferenceType(c.getName(), fn, bl, bc, el, ec);", "+      result = new ReferenceTypeName(c.getName(), fn, bl, bc, el, ec);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b583e7a26cbcad4d0a9cd881e3174d79", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "38d431471777ac8e0fa48e5f04830082f87a84ac", "commitAfterChange": "0a31738e2a608cffca114c6f81b02f002a0e82e1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testUndoEventsOccur()", "signatureAfterChange": "   public void testUndoEventsOccur()", "diff": ["-//        System.err.println(\"undoableEditHappened call propagated to listener\");", "+        System.err.println(\"undoableEditHappened call propagated to listener\");", "-//            System.err.println(\"undoableEditHappened(\" + e + \") called\");", "+            System.err.println(\"undoableEditHappened(\" + e + \") called\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5988ff412ca9cb9a0dd73c39896d77c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testGetLine1() throws BadLocationException", "signatureAfterChange": "   public void testGetLine1() throws BadLocationException", "diff": ["-    defModel.insertString(0, s, null);", "-    defModel.setCurrentLocation(2);", "-    assertEquals(\"#0.0\", 2, defModel.getCurrentLine());", "+    _defModel.insertString(0, s, null);", "+    _defModel.setCurrentLocation(2);", "+    assertEquals(\"#0.0\", 2, _defModel.getCurrentLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5a200ae106c13ced9487acd030e28dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses() throws Exception", "signatureAfterChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses() throws Exception", "diff": ["-    debugListener.assertBreakpointSetCount(1);", "+    debugListener.assertRegionAddedCount(1);", "-    debugListener.assertBreakpointSetCount(2);", "+    debugListener.assertRegionAddedCount(2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5a3ed9414608ceece8a8ec57b73cb32", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedLevelTest.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testShouldBeErrors()", "signatureAfterChange": "   public void testShouldBeErrors()", "diff": ["-   */", "+  /** Test a set of files that have various Advanced Level errors.  See the files themselves for a description of the errors. */", "-    directory = new File(directory.getAbsolutePath() + \"/shouldBreak\");", "-    File[] testFiles = directory.listFiles(new FileFilter() {", "+    _log.log(\"Running testShouldBeErrors\");", "+    dir1 = new File(dir1.getAbsolutePath() + \"/shouldBreak\");", "+    File[] testFiles = dir1.listFiles(new FileFilter() {", "-", "-      LanguageLevelConverter llc = new LanguageLevelConverter();", "-      Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>> result;", "-      for (int i = 0; i<testFiles.length; i++) {", "-        LanguageLevelVisitor._errorAdded = false;", "-        result = llc.convert(new File[]{testFiles[i]}, new Options(JavaVersion.JAVA_5, IterUtil.<File>empty()));", "-        assertTrue(\"should be parse exceptions or visitor exceptions\", !result.getFirst().isEmpty() || !result.getSecond().isEmpty());", "-      }", "+    ", "+    LanguageLevelConverter llc = new LanguageLevelConverter();", "+    Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>> result;", "+    for (int i = 0; i<testFiles.length; i++) {", "+      LanguageLevelVisitor._errorAdded = false;", "+      result = llc.convert(new File[]{testFiles[i]}, new Options(JavaVersion.JAVA_5, IterUtil.<File>empty()));", "+      assertTrue(\"should be parse exceptions or visitor exceptions\", !result.getFirst().isEmpty() || !result.getSecond().isEmpty());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5a69aeb76a43e1de0d72c689d390072", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "28edcfb1557b7084eced62028c2fe7429bdf3ed1", "commitAfterChange": "b6f420e3de969a8f8dd7bc47b9ecaafbf647e921", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void setUp()", "signatureAfterChange": "   protected void setUp()", "diff": ["+    DrJava.getConfig().resetToDefaults();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5a84d26b6ec67f67b3f25e1f807d337", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "61da1e8a57d7556c31f8fc18828fa8b3db703795", "commitAfterChange": "226a992c937228ff2b3c60dd0cdc1d122ef7ffa9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   private void init(boolean info)", "signatureAfterChange": "   private void init(boolean info)", "diff": ["-        _pim.extendMask(_pim.getSharedMaskExtension());", "+        _pim.extendSharedMask();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5b95e3c77ed99a5be9ba85f542ab702", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "2b3538f4ec792670cfb28bc41a5aee6f4c8718c0", "commitAfterChange": "c302d1db72cb508e0cec30d24e39d48cce8fd663", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public Void forInnerClassDef(InnerClassDef that)", "signatureAfterChange": "   public Void forInnerClassDef(InnerClassDef that)", "diff": ["-    System.err.println(\"CBIV.forInnerClassDef called on \" + that.getName());", "+//    System.err.println(\"CBIV.forInnerClassDef called on \" + that.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5ea4479012835796842f2d1161c7f8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 752, "methodNumberAfterChange": 705, "signatureBeforeChange": "    final private boolean jj_3R_486()", "signatureAfterChange": "    final private boolean jj_3R_541()", "diff": ["+  final private boolean jj_3R_541() {", "+    if (jj_3R_560()) {", "+    if (jj_3R_561()) return true;", "-  final private boolean jj_3R_486() {", "-    if (jj_3R_487()) {", "-    if (jj_3R_488()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5f73d4eb3ae9b1723a69195d3bdd43e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/Brace.java", "commitBeforeChange": "c783dcfc2a672846c5731c22479ac241a8d88896", "commitAfterChange": "e97d669e5368c283be3ec2a94ca1c792daab5138", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public String getType()", "signatureAfterChange": "   public String getType()", "diff": ["-   */", "-  public String getType() {", "-    return (_type == braces.length) ? \"!\" : braces[_type];", "-  }", "+    */", "+  public String getType() { return (_type == BRACES_LENGTH) ? \"!\" : braces[_type]; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6082880bee7d88d3b29a043c741d18a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 817, "methodNumberAfterChange": 733, "signatureBeforeChange": "    final private boolean jj_3R_234()", "signatureAfterChange": "    final private boolean jj_3R_199()", "diff": ["-  final private boolean jj_3R_234() {", "-    if (jj_scan_token(MINUS_ASSIGN)) return true;", "-    if (jj_3R_87()) return true;", "+", "+  final private boolean jj_3R_199() {", "+    if (jj_scan_token(MINUS_ASSIGN)) return true;", "+    if (jj_3R_78()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b609429b7237b154704dc6197c64d58e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 34, "signatureBeforeChange": "     @Override public Type visit(SimpleAllocation node)", "signatureAfterChange": "     @Override public Type visit(SimpleAllocation node)", "diff": ["-        // TODO: Check accessibility of constructor", "+        checkAccessibility(inv.constructor(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b60ba2d5e772615bf7434ba4d54c4421", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   @Override public TypeContext visit(ForEachStatement node)", "signatureAfterChange": "   @Override public TypeContext visit(ForEachStatement node)", "diff": ["-    LocalVariable var = setVariable(p, new LocalVariable(p.getName(), paramT, p.isFinal()));", "+    LocalVariable var = setVariable(p, new LocalVariable(p.getName(), paramT, p.getModifiers().isFinal()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b60ec20fb92ddb9216bb1afee6e8f2a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/History.java", "commitBeforeChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "commitAfterChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void add(String item)", "signatureAfterChange": "   public void add(String item)", "diff": ["+    // for consistency in saved History files, WILL save sequential duplicate entries", "-      if (_vector.isEmpty() || ! _vector.lastElement().equals(item)) {", "-        _vector.addElement(item);", "+      //if (_vector.isEmpty() || ! _vector.lastElement().equals(item)) {", "+      _vector.addElement(item);", "-        if (_vector.size() > MAX_SIZE) {", "-          _vector.removeElementAt(0);", "+      if (_vector.size() > MAX_SIZE) {", "+        _vector.removeElementAt(0);", "-      }", "+      //}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b61359b30ffffbfd7d0df44f238e1391", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testGetSourceRootDefaultPackage() throws BadLocationException, IOException", "signatureAfterChange": "      public void testGetSourceRootDefaultPackage() throws BadLocationException, IOException", "diff": ["+    debug.logStart();", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b614ed09e0b5cda901892ffae2d3dd1d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": "   public void toggleBookmark(int pos1, int pos2)", "signatureAfterChange": "   public void toggleBookmark(int pos1, int pos2)", "diff": ["-    final OpenDefinitionsDocument doc = getActiveDocument();", "-    doc.acquireReadLock();", "-    try { _toggleBookmark(pos1, pos2); }", "-    finally { doc.releaseReadLock(); }", "+//    final OpenDefinitionsDocument doc = getActiveDocument();", "+//    doc.acquireReadLock();", "+//    try { ", "+      _toggleBookmark(pos1, pos2); ", "+//    }", "+//    finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b61f2b6ffdc1b62cdff92951dfb053aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void testSaveAsAlreadySaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAsAlreadySaved() throws BadLocationException, IOException", "diff": ["-    doc.saveFile(new FileSelector(file1));", "+    saveFile(doc, new FileSelector(file1));", "-    doc.saveFileAs(new FileSelector(file2));", "+    saveFileAs(doc, new FileSelector(file2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b62220c3199bdbc7733b60e464ddbe45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "74df86fd67328f41836d5f23da76b724b0648a22", "commitAfterChange": "debcaa5c7896b7af34301718bd146b407947838f", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void interpreterResetting()", "signatureAfterChange": "   public void interpreterResetting()", "diff": ["-", "-      if (_adapter instanceof InteractionsDocumentAdapter)", "-        ((InteractionsDocumentAdapter)_adapter).clearColoring();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b62b1c73aabd65562b6f6299ca4b4f51", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "5a42b92d770342c963138046c93f1390dcf62017", "commitAfterChange": "b29182d94c1064d5f838746a211b47a58b37d210", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public FindReplaceDialog(MainFrame frame, SingleDisplayModel model)", "signatureAfterChange": "   public FindReplaceDialog(MainFrame frame, SingleDisplayModel model)", "diff": ["-    _matchCase = new JCheckBox(\"Match Case \", true);", "+    _matchCase = new JCheckBox(\"Match Case\", true);", "-    _searchBackwards = new JCheckBox(\"Search Backwards  \", false);", "+    _searchBackwards = new JCheckBox(\"Search Backwards\", false);", "+//    _searchBackwards.setMargin(new Insets(0,4,0,3));", "+    _matchCase.setPreferredSize(_matchWholeWord.getPreferredSize());", "-    //midPanel.add(_message); // JL", "+//    midPanel.add(wrap(_message)); // JL"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b639f8155023cf283a99e4291b604ceb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "b9f87cd074abdafacdb2719b29e0803fd0f81cf0", "commitAfterChange": "04d7824a20eb03ad17793ba3198be21442313bdc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r   protected void updateButtons()", "signatureAfterChange": "   protected void _updateButtons()", "diff": ["-  /** Update button state and text. */\r", "-  protected void updateButtons() {\r", "-    ArrayList<Breakpoint> regs = getSelectedRegions();\r", "-    _goToButton.setEnabled(regs.size() == 1);\r", "-    _removeButton.setEnabled(regs.size() > 0);\r", "-    _removeAllButton.setEnabled(_regionRootNode != null && _regionRootNode.getDepth() > 0);\r", "-    _enableDisableButton.setEnabled(regs.size()>0);\r", "-    if (regs.size() > 0) {\r", "-      if (regs.get(0).isEnabled()) _enableDisableButton.setText(\"Disable\");\r", "-      else _enableDisableButton.setText(\"Enable\");\r", "-    }\r", "-    _removeAllButton.setEnabled(_regionRootNode != null && _regionRootNode.getDepth() > 0);\r", "-  }\r", "+  /** Update button state and text. */", "+  protected void _updateButtons() {", "+    ArrayList<Breakpoint> regs = getSelectedRegions();", "+    _goToButton.setEnabled(regs.size() == 1);", "+    _removeButton.setEnabled(regs.size() > 0);", "+    _removeAllButton.setEnabled(_rootNode != null && _rootNode.getDepth() > 0);", "+    _enableDisableButton.setEnabled(regs.size()>0);", "+    if (regs.size() > 0) {", "+      if (regs.get(0).isEnabled()) _enableDisableButton.setText(\"Disable\");", "+      else _enableDisableButton.setText(\"Enable\");", "+    }", "+    _removeAllButton.setEnabled(_rootNode != null && _rootNode.getDepth() > 0);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b63ebb017475a924b23b61e5f49c738b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "     public void syncCurrentLocationWithDefinitions(int location)", "signatureAfterChange": "     public void syncCurrentLocationWithDefinitions(int location)", "diff": ["-      _doc.setCurrentLocation(location);", "+      getDocument().setCurrentLocation(location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6499215201c186ac352dd053dbb2f1c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "commitAfterChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException,      InterruptedException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException,      InterruptedException", "diff": ["-        try { doc2.saveFile(new FileSelector(file2)); }", "-        catch (IOException ioe) { fail(\"Save produced exception: \" + ioe); }", "+        saveFile(doc2, new FileSelector(file2)); ", "-    doc.saveFile(new FileSelector(file));", "+    saveFile(doc, new FileSelector(file));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6505c2dbb31d0b8add486b66659fdfa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 644, "methodNumberAfterChange": 639, "signatureBeforeChange": "    final private boolean jj_3R_134()", "signatureAfterChange": "    final private boolean jj_3R_136()", "diff": ["+  final private boolean jj_3R_136() {", "-", "-  final private boolean jj_3R_134() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;", "-    if (jj_3R_183()) return true;", "+    if (jj_3R_186()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b65dbf8dacb26bbb38c26688b1797b02", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testCompleteFilename() throws BadLocationException, IOException, OperationCanceledException,      AlreadyOpenException", "signatureAfterChange": "   public void testCompleteFilename() throws BadLocationException, IOException, OperationCanceledException,      AlreadyOpenException", "diff": ["-    OpenDefinitionsDocument doc = _sdModel.getActiveDocument();", "+    OpenDefinitionsDocument doc = _model.getActiveDocument();", "-    doc = _sdModel.openFile(new FileSelector(file));", "+    doc = _model.openFile(new FileSelector(file));", "-    doc = _sdModel.openFile(new FileSelector(file));", "+    doc = _model.openFile(new FileSelector(file));", "-    doc = _sdModel.openFile(new FileSelector(file));", "+    doc = _model.openFile(new FileSelector(file));", "-//    _log.log(\"testDisplayFilename completed\");", "+    _log.log(\"testDisplayFilename completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6830b4dc39003d25e1f1aaa206be330", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "93940c21f6995f648e815e21c209f78be7209afc", "commitAfterChange": "a81421c85ea0de5b8b8c763de6071719d4028205", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "   public void hourglassOn()", "signatureAfterChange": "   public void hourglassOn()", "diff": ["+    _currentDefPane.setEditable(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b68a3445fc8751bc5e91654b39ccee98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7c4507413beb0e75cdce1379ffec8d0279bed992", "commitAfterChange": "d1bf0f940bc3d914d8d8293a0e85760984d7b371", "methodNumberBeforeChange": 430, "methodNumberAfterChange": 434, "signatureBeforeChange": "      private void hideRecentDocFrame()", "signatureAfterChange": "      private void hideRecentDocFrame()", "diff": ["-      if (doc != null) _model.getDocumentNavigator().setActiveDoc(doc);", "+      if (doc != null) {", "+        addToBrowserHistory();", "+        _model.getDocumentNavigator().setActiveDoc(doc);", "+        addToBrowserHistory();", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b68aa8a70792df9ca51aa4e5a12eee75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 735, "methodNumberAfterChange": 717, "signatureBeforeChange": "    final private boolean jj_3R_302()", "signatureAfterChange": "    final private boolean jj_3R_263()", "diff": ["+", "+  final private boolean jj_3R_263() {", "+    if (jj_scan_token(DO)) return true;", "+    if (jj_3R_171()) return true;", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_116()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_302() {", "-    if (jj_scan_token(DO)) return true;", "-    if (jj_3R_182()) return true;", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_115()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b68c29049c6f53df7a642c089934bb27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "37dab6b79fc3d4e6f7b2b5f0aa53a4ea9b7f7476", "commitAfterChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 57, "signatureBeforeChange": "   protected static boolean _isEndOfComment(String text, int pos)", "signatureAfterChange": "   protected static boolean _isReversteStartOfComment(String text, int pos)", "diff": ["-  protected static boolean _isEndOfComment(String text, int pos) {", "+  protected static boolean _isReversteStartOfComment(String text, int pos) {", "-    if (currChar == '/') {", "+    if ((currChar == '/')||(currChar == '*')) {", "-        if ((beforeCurrChar == '/') || (beforeCurrChar == '*'))  return true;", "+        if (beforeCurrChar == '/')  return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6a38f3649872f5b0725a03f665c7d9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "commitAfterChange": "72303a17e4a44248ba3fe5d5f9c3d69081ba78b5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   private LinkedList<DJError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpressionIF>> visitorErrors)", "signatureAfterChange": "   private LinkedList<DJError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpressionIF>> visitorErrors)", "diff": ["-      if (jexpr == null) si = JExprParser.NO_SOURCE_INFO;", "+      if (jexpr == null) si = SourceInfo.NO_INFO;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6b4ad71a231352fb910907123b2cc0e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "14164b6a15fd606e897810fd89f2e7edec0280c4", "commitAfterChange": "52c187d5d51895f0b58a56680e35117f80ff45ef", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   private int _replaceAllInCurrentDoc()", "signatureAfterChange": "   private int _replaceAllInCurrentDoc()", "diff": ["-//    _doc.modifyLock();  // deadlocks because our implementation does not allow a thread with the writeLock to perform a readLock!", "+    _doc.modifyLock();", "-    finally { /* _doc.modifyUnlock(); */ }", "+    finally { _doc.modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6bfb28a0abf0ab72b99c78a9afef927", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelDeleteTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected void setUp()", "signatureAfterChange": " \t \tprotected void setUp()", "diff": ["-\t\t\tmodel0 = new ReducedModel();", "-\t\t\tmodel1 = new ReducedModel();", "-\t\t\tmodel2 = new ReducedModel();", "+\t\t\tmodel0 = new ReducedModelControl();", "+\t\t\tmodel1 = new ReducedModelControl();", "+\t\t\tmodel2 = new ReducedModelControl();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c234fe057726b0b1efce6202bb5837", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "5497ac60fa563e6e67c580081d99fbd842e52332", "commitAfterChange": "5fa866685226be5aebbebdfba9d7d34d29108e50", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testInteractionsCanSeeCompiledClasses() throws BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsCanSeeCompiledClasses() throws BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["+    ", "+    Utilities.clearEventQueue();", "+    ", "+//    _log.log(\"testInteractionsCanSeeCompletedClasses() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c53c5add1b5af9f3733a1b04085dc2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk7/edu/rice/cs/drjava/model/compiler/Javac170Compiler.java", "commitBeforeChange": "ac40c3972879cd0ae692485b72f8c40bbd1968d9", "commitAfterChange": "e3aa74ce1fa8ce4d59f29e9f6e97ca23385b706a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r   \r   public boolean isAvailable()", "signatureAfterChange": "\r   \r   public boolean isAvailable()", "diff": ["-      // Make sure the compiler returned is not null; this can happen if we have the JRE's library, not the JDK's.\r", "-      JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();\r", "+      // This is the class that javax.tools.ToolProvider.getSystemJavaCompiler() uses\r", "+      // We create an instance of that class directly, bypassing ToolProvider, because ToolProvider returns null\r", "+      // if DrJava is started with just the JRE, instead of with the JDK, even if tools.jar is later made available\r", "+      // to the class loader.\r", "+      JavaCompiler compiler = (JavaCompiler)(Class.forName(\"com.sun.tools.javac.api.JavacTool\").newInstance());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6e787b99755aec8db77d827919cebf3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "     public Object visit(UnsignedShiftRightAssignExpression node)", "signatureAfterChange": "   public Class visit(UnsignedShiftRightAssignExpression node)", "diff": ["+   */", "+  public Class visit(UnsignedShiftRightAssignExpression node) {", "+    Class c = visitShiftExpression(node);", "+    ", "+    // The left subexpression must be a variable", "+    if (!node.getLeftExpression().hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"unsigned.shift.right.type\", node);", "+    }", "+    ", "+    return c;", "+  }", "-     */", "-    public Object visit(UnsignedShiftRightAssignExpression node) {", "-        Class c = visitShiftExpression(node);", "-", "-        // The left subexpression must be a variable", "-        if (!node.getLeftExpression().hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"unsigned.shift.right.type\", node);", "-        }", "-", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6e808c5d613090094b330f8df11c672", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyIntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "          public void testForSimpleSuperReferenceDoFirst()", "signatureAfterChange": "          public void testForSimpleSuperReferenceDoFirst()", "diff": ["-      SimpleSuperReference sr = new SimpleSuperReference(JExprParser.NO_SOURCE_INFO);", "+      SimpleSuperReference sr = new SimpleSuperReference(SourceInfo.NO_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b704b753370fb7d3cf0a139ff01863bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "signatureAfterChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "diff": ["-    ", "+//    ScrollableDialog sd1 = new ScrollableDialog(null, \"saveFile (\" + fileSaver + \") called in FileOps.java\", \"\", \"\");", "+//    sd1.show();", "-//    System.err.println(\"Saving file \" + file + \" with backup status = \" + makeBackup);", "-    // file.canWrite() is false if file.exists() is false, but we want to be able to save a file that doesn't yet exist.", "-    if (file.exists() && ! file.canWrite()) throw new IOException(\"Permission denied\");", "-    // First back up the file, if necessary.", "+    // file.canWrite() is false if file.exists() is false", "+    // but we want to be able to save a file that doesn't", "+    // yet exist.", "+    if (file.exists() && !file.canWrite()) throw new IOException(\"Permission denied\");", "+    /* First back up the file, if necessary */", "-      if (! renameFile(file, backup)) {", "+      if (!renameFile(file, backup)){", "-//      System.err.println(\"saveFile renamed \" + file + \" as \" + backup);", "-      fileSaver.backupDone();  // Why? This action may have to be reversed if writing new file fails!", "-//      System.err.println(\"Contents: '\" + IOUtil.toString(backup) + \"'\");", "+      fileSaver.backupDone();", "-//    System.err.println(\"tempfileName = \" + tempFile + \" for backup file \" + backup);", "-//      System.err.println(bos + \" written\");", "-//      System.err.println(\"Closing \" + bos + \" and \" + fos);", "-//      fos.close();", "+      fos.close();", "-//      System.err.println(\"Wrote: \" + tempFile);", "-      if (tempFileUsed && ! renameFile(tempFile, file))", "+      if (tempFileUsed && !renameFile(tempFile, file))", "-//      System.err.println(\"Renamed \" + tempFile + \" as \" + file);", "-//      if (makeBackup) System.err.println(\"Does \" + backup + \" still exists? \" + backup.exists());", "+      ", "-        else {", "-          renameFile(backup, file);", "-          System.out.println(\"Forced to rename backup \" + backup + \" as file \" + file);", "-        }", "+        else  renameFile(backup, file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7137c46a1e543eb78c63f429f21b251", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "          public void testIsAbstract()", "signatureAfterChange": "          public void testIsAbstract()", "diff": ["-      System.err.println(\"testIsAbstract finished\");", "+//      System.err.println(\"testIsAbstract finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b715f412eaed8a4f25425ca07836f1fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 208, "signatureBeforeChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "signatureAfterChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "diff": ["+    pane.setScrollPane(scroll);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b71da59fd4b6d9f7a6efabc4d219665c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "69464949f304455efe72f78ee854438cff27207a", "commitAfterChange": "17600b9f1362dad642f89cf0296e45c7ada70a5d", "methodNumberBeforeChange": 480, "methodNumberAfterChange": 480, "signatureBeforeChange": "   private void _newProject()", "signatureAfterChange": "   private void _newProject()", "diff": ["-    if (rc == JFileChooser.APPROVE_OPTION) {      ", "+    if (rc == JFileChooser.APPROVE_OPTION) {", "-      if (projectFile == null ||", "-          projectFile.getParentFile() == null ||", "-          (projectFile.exists() && ! MainFrameStatics.verifyOverwrite(MainFrame.this, projectFile))) { return; }", "-      ", "-      _model.createNewProject(projectFile); // sets model to a new FileGroupingState for project file pf", "+      try {", "+        // by getting the canonical file, we make sure that we get an IOException if the filename is illegal", "+        if (projectFile == null ||", "+            projectFile.getParentFile() == null ||", "+            (projectFile.getCanonicalFile().exists() && ! MainFrameStatics.verifyOverwrite(MainFrame.this, projectFile))) { return; }        ", "+        _model.createNewProject(projectFile); // sets model to a new FileGroupingState for project file pf", "-      _editProject();  // edits the properties of the new FileGroupingState", "-      try { _model.configNewProject(); }  // configures the new project in the model", "-      catch(IOException e) { throw new UnexpectedException(e); }", "-      _setUpProjectButtons(projectFile);", "-      _currentProjFile = projectFile;", "+        _model.configNewProject(); // configures the new project in the model", "+        _editProject();  // edits the properties of the new FileGroupingState", "+        _setUpProjectButtons(projectFile);", "+        _currentProjFile = projectFile;", "+      }", "+      catch(IOException e) {", "+        MainFrameStatics.showIOError(MainFrame.this, e);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b72492b44118fa0dd5cc6c798f17f8cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ConstructorBodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "           public void testSimpleSuperConstructorInvocationAllowed()", "signatureAfterChange": "           public void testSimpleSuperConstructorInvocationAllowed()", "diff": ["-      SimpleSuperConstructorInvocation constr = new SimpleSuperConstructorInvocation(SourceInfo.NO_INFO, new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[] {new IntegerLiteral(SourceInfo.NO_INFO, 5)}));", "+      SimpleSuperConstructorInvocation constr = new SimpleSuperConstructorInvocation(SourceInfo.NONE, new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[] {new IntegerLiteral(SourceInfo.NONE, 5)}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b72d08ffebc9be1aaba28d334cdca4de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 386, "signatureBeforeChange": "     private void _fileClosed(OpenDefinitionsDocument doc)", "signatureAfterChange": "     private void _fileClosed(OpenDefinitionsDocument doc)", "diff": ["-          if (_model.isProjectFile(f) || doc.isAuxiliaryFile()) _model.setProjectChanged(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7317039b397767ff7f923f37084fc7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 101, "signatureBeforeChange": "              public SystemThreadsFilter(List threads)", "signatureAfterChange": "              public SystemThreadsFilter(List threads)", "diff": ["-          System.out.println(\"Inserting \" + temp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b74765a2ce9d76c89bc71ab3f83f4704", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocumentTest.java", "commitBeforeChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "commitAfterChange": "d07989306c43e4045df83ca1211956d5a85a21bd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testPackageNameSimple() throws BadLocationException", "signatureAfterChange": "   public void testPackageNameSimple()     throws BadLocationException, InvalidPackageException", "diff": ["-  public void testPackageNameSimple() throws BadLocationException {", "+  public void testPackageNameSimple()", "+    throws BadLocationException, InvalidPackageException", "+  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7551bad26216750fbe90dd584459726", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "ae4333c8dd1b54b8a781008188f09b6786d95ae2", "commitAfterChange": "a42a1005ad3faca50638e0131df3bc7c45ba82de", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public synchronized void shutdown()", "signatureAfterChange": "   public synchronized void shutdown()", "diff": ["+    _model.removeListener(_watchListener);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b75b28d37af320884ff61318f19b936b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testInterpretJavaSingleQuotedArgs() throws DocumentAdapterException", "signatureAfterChange": "   public void testInterpretJavaSingleQuotedArgs()", "diff": ["-  public void testInterpretJavaSingleQuotedArgs() throws DocumentAdapterException {", "+  public void testInterpretJavaSingleQuotedArgs() {", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7698d00f78a6a1ad7ce06752227ee3b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "acb6486cf73ee6fa26fd3913d48fe9f46d7610e4", "commitAfterChange": "c0463418af643463955237ff1428c0079e36defe", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 182, "signatureBeforeChange": "   public ProjectProfile _makeProjectProfile(File file, HashMap<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "signatureAfterChange": "   public ProjectProfile _makeProjectProfile(File file, HashMap<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "diff": ["+    //add custom manifest", "+    builder.setCustomManifest(_state.getCustomManifest());", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b76a5cfbb497402c691099fc5f3bfe35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 463, "methodNumberAfterChange": 459, "signatureBeforeChange": "    final private boolean jj_3R_405()", "signatureAfterChange": "    final private boolean jj_3R_407()", "diff": ["-", "-  final private boolean jj_3R_405() {", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    if (jj_3R_400()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_424()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    if (jj_3R_402()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_426()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b76fb724efebd212e88606bc654ddee5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/ConstantPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public short put(Integer cst)", "signatureAfterChange": "   public short put(Integer cst)", "diff": ["-    Info info = (Info)constants.get(cst);", "+    Info info = constants.get(cst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b79008e6802a76b3fbd8634579fdfbb2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public void testGetIndentOfCurrStmtEndOfDoc() throws BadLocationException", "signatureAfterChange": "    public void testGetIndentOfCurrStmtEndOfDoc() throws BadLocationException", "diff": ["-    ", "-    assertEquals(\"cursor at end of document, no indent\",", "-                 \"\",", "-                 _doc.getIndentOfCurrStmt(5));", "-   ", "+    assertEquals(\"cursor at end of document, no indent\", 0, _doc.getIndentOfCurrStmt(5));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7bdcddcba7d49b0046e8834fd66ea22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "da631ae365e5ae3fe7064b60f098ede0150c39bb", "commitAfterChange": "574257b530483460a9c0ce0cc5577b7fd93532dd", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public SwingDocument getSwingDocument()", "signatureAfterChange": "     public ErrorDocument getErrorDocument()", "diff": ["-    public SwingDocument getSwingDocument() { return (SwingDocument) getDocument(); }", "+    public ErrorDocument getErrorDocument() { return (ErrorDocument) getDocument(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7cab7054e9b3fabd98d5fe2804ab837", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "fb61bb542bf295f9ff563d4fe1831b256b325388", "commitAfterChange": "6a5c20e1ee845b9752ac481574f6a7bee8c034e1", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public void addErrorHighlight(int from, int to)", "signatureAfterChange": "   public void addTestErrorHighlight(int from, int to)", "diff": ["-  public void addErrorHighlight(int from, int to)", "-    removeErrorHighlight();", "+   */", "+  public void addTestErrorHighlight(int from, int to)", "+  {", "+    removeTestErrorHighlight();", "+    _testErrorHighlightTag = _highlightManager.addHighlight(from, to, ERROR_PAINTER);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7da73a88da7f0a265fce745a86bad6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/NoDuplicatesIterator.java", "commitBeforeChange": "811484bb0f3e9c6a234bb593ba7247f59304a444", "commitAfterChange": "d3ca8d30db126f3de1352627e18f51d00a1bf339", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private NoDuplicatesIterator(Iterator<? extends T> i, PredicateSet<T> seen)", "signatureAfterChange": "   private NoDuplicatesIterator(Iterator<? extends T> i, Set<T> seen)", "diff": ["-  private NoDuplicatesIterator(Iterator<? extends T> i, PredicateSet<T> seen) {", "-    super(i, LambdaUtil.negate(seen));", "+  private NoDuplicatesIterator(Iterator<? extends T> i, Set<T> seen) {", "+    super(i, LambdaUtil.negate(CollectUtil.asPredicateSet(seen)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7df84748a3d18575c8e998b828edd8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ConsoleControllerTest.java", "commitBeforeChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "commitAfterChange": "a8ba898ce33911122e91ee2c93e5825d2f8c0e22", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp() throws IOException", "signatureAfterChange": "   public void setUp() throws IOException", "diff": ["-    _model.setInputListener(_controller.getInputListener());", "+    _model.getInteractionsModel().setInputListener(_controller.getInputListener());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b812312a271ca79f90aa3e854ab6079e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 230, "methodNumberAfterChange": 230, "signatureBeforeChange": "     public void addDocumentListener(DocumentListener listener)", "signatureAfterChange": "     public void addDocumentListener(DocumentListener listener)", "diff": ["-      if(_cache.isDDocInCache(this)){", "+      if(_cacheAdapter.isReady()){", "-        _cache.getReconstructor(this).addDocumentListener(listener);", "+        _cacheAdapter.getReconstructor().addDocumentListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8391c864973314c1d23108ff44cfe6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/JVMUtilities.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static String getName(Class c)", "signatureAfterChange": "   public static String getName(Class c)", "diff": ["-    String s = (String)types.get(c);", "+    String s = types.get(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b84813cf391a8aba795ef069417fa38a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "04d7824a20eb03ad17793ba3198be21442313bdc", "commitAfterChange": "b1c7871d21e78d9b00bec5144dc21cdc37950342", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void freeResources()", "signatureAfterChange": "   public void freeResources()", "diff": ["+    _docToTreeNode.clear();", "+    _regionToTreeNode.clear();", "-    if (_lastIndex<OptionConstants.FIND_RESULTS_COLORS.length) {", "+    if (_lastIndex < OptionConstants.FIND_RESULTS_COLORS.length) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b84cf0193dbcfc234789d310f50a2353", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected OpenDefinitionsDocument setupDocument(String text) throws BadLocationException", "signatureAfterChange": "   protected OpenDefinitionsDocument setupDocument(String text) throws BadLocationException", "diff": ["+    assertModified(true, doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8558bcd4284ddcb33a654bda13bf41f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "5f1b3bc3f3deca6d356567893a20298f4e5a94a7", "commitAfterChange": "3101443d576fa6f63ae40ca208e243a26acf0b6b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "    private void _selectError(int newIndex)", "signatureAfterChange": "    private void _selectError(int newIndex)", "diff": ["-    if (newIndex != _errorListPane.getSelectedIndex()) {", "-      _errorListPane.selectItem(newIndex);", "-    }", "+    _errorListPane.selectItem(newIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b867e0370defd052c032f1ec28e0face", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "commitAfterChange": "13fd7a397c83b96c149ac8eb636b988dccbb4bed", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "      public Iterable<File> getAugmentedClassPath()", "signatureAfterChange": "      public List<File> getAugmentedClassPath()", "diff": ["-  public Iterable<File> getAugmentedClassPath() { return getClassPath(); }", "+  public List<File> getAugmentedClassPath() { return IterUtil.asList(getClassPath()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b87fcb8f96ad00533114abeba31f1f90", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "      public void testForSimpleNameReference()", "signatureAfterChange": "          public void testForSimpleNameReference()", "diff": ["-", "+    ", "-      MethodData newContext = new MethodData(\"method\", _publicStaticMav, new TypeParameter[0], SymbolData.INT_TYPE, new VariableData[0], new String[0], _sd1, new NullLiteral(SourceInfo.NO_INFO)); ", "+      MethodData newContext =", "+        new MethodData(\"method\", _publicStaticMav, new TypeParameter[0], SymbolData.INT_TYPE,", "+                       new VariableData[0], new String[0], _sd1, new NullLiteral(SourceInfo.NO_INFO)); ", "-      assertEquals(\"Error message should be correct\", \"Non static field or variable variable1 cannot be referenced from a static context\", errors.getLast().getFirst());", "+      assertEquals(\"Error message should be correct\", \"Non-static variable or field variable1 cannot be referenced from a static context\", errors.getLast().getFirst());", "-      ", "-", "-      ", "+        ", "-      ", "-", "-      //now, consider the case where what we have is a class reference:", "+      // now, consider the case where what we have is a class reference:", "-      ", "-", "+      ", "-", "+      ", "-      assertEquals(\"Error message should be correct\", \"Ambiguous reference to class or interface ambigThing\", errors.getLast().getFirst());    ", "+      assertEquals(\"Error message should be correct\", ", "+                   \"Ambiguous reference to class or interface ambigThing\", ", "+                   errors.getLast().getFirst());    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b898775571a1de5ed3cca01a87d56c92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "1ecc95c0c60f2dabd3e5d52eee223ff564461e48", "commitAfterChange": "a7a03ce246432b4e0ab5d61753312842c1cd49c1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "    public void setPackageScope(String s)", "signatureAfterChange": "    public void setPackageScope(String s) throws RemoteException", "diff": ["-  public void setPackageScope(String s) {", "+  public void setPackageScope(String s) throws RemoteException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8ac91b81dfa198f2c233bf1ceb8ae56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 780, "methodNumberAfterChange": 684, "signatureBeforeChange": "    final private boolean jj_3R_374()", "signatureAfterChange": "    final private boolean jj_3R_381()", "diff": ["-", "-  final private boolean jj_3R_374() {", "-    if (jj_scan_token(CATCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_90()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_175()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_381() {", "+    if (jj_scan_token(CATCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_92()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_178()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8b7c7979f3d698324b41d034a8219f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public String getEnclosingClassName(int pos, boolean qual) throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public String getEnclosingClassName(int pos, boolean qual) throws BadLocationException, ClassNameNotFoundException", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8e497118425622aae56dea83b0f014c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "          public void testIsOuterData()", "signatureAfterChange": "          public void testIsOuterData()", "diff": ["-      System.err.println(\"testIsOuterData finished\");", "+//      System.err.println(\"testIsOuterData finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8ef911ff186957e68b21af351ae5e7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 70, "signatureBeforeChange": "   public boolean posInBlockComment(final int pos)", "signatureAfterChange": "   public boolean posInBlockComment(final int pos)", "diff": ["-    return (state.equals(ReducedModelState.INSIDE_BLOCK_COMMENT));", "+    return (state.equals(INSIDE_BLOCK_COMMENT));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8f4c64fa20f41637048d623e7b51d57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringGlyphPainter.java", "commitBeforeChange": "12434dc2dab84dfe1024e2e2b39fd8f27da62bbd", "commitAfterChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public int getBoundedPosition(GlyphView v, int p0, float x, float len)", "signatureAfterChange": "   public int getBoundedPosition(GlyphView v, int start, float x, float len)", "diff": ["-  public int getBoundedPosition(GlyphView v, int p0, float x, float len) {", "+  public int getBoundedPosition(GlyphView v, int start, float x, float len) {", "-    Segment s = v.getText(p0, v.getEndOffset());", "+    Segment s = v.getText(start, v.getEndOffset());", "-                                              expander, p0, false);", "-    int p1 = p0 + index;", "-    return p1;", "+                                              expander, start, false);", "+    int end = start + index;", "+    return end;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9067b4741161dbf797b9053f96148b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlusTest.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testAnonymousInnerClassAssign() throws BadLocationException", "signatureAfterChange": "      public void testAnonymousInnerClassAssign() throws BadLocationException", "diff": ["-    IndentRuleAction rule = new ActionStartPrevStmtPlus(\"\", false);", "+    IndentRuleAction rule = new ActionStartPrevStmtPlus(0, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b911c98b214068fca2e978e5d4d44fd4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 448, "methodNumberAfterChange": 443, "signatureBeforeChange": "    final private boolean jj_3R_84()", "signatureAfterChange": "    final private boolean jj_3R_81()", "diff": ["-", "-  final private boolean jj_3R_84() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_5()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_128()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_129()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_130()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_131()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_132()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_133()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_134()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_135()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_136()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_137()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_138()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_139()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_140()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_141()) return true;", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_81() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(47)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(39)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(81)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(85)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(37)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(65)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(26)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(55)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(35)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(17)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(24)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(51)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(58)) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(62)) {", "+    jj_scanpos = xsp;", "+    if (jj_3_8()) {", "+    jj_scanpos = xsp;", "+    if (jj_3_9()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_118()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_119()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_120()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_121()) return true;", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92336be20d34ceff6c5077466663703", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    private static void createAndShowGUI(final String[] args)", "signatureAfterChange": "    private static void createAndShowGUI(final String[] args)", "diff": ["-                ", "-        try { initConfig(); }", "-        catch (IllegalStateException ise) {", "-          // Shouldn't happen: _config shouldn't be assigned yet", "-          throw new UnexpectedException(ise);", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b93ffc3e47524cbdf434d95ab610a591", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public ArrayData defineArraySymbolData(SymbolData eltSd, LanguageLevelVisitor llv, SourceInfo si)", "signatureAfterChange": "   public ArrayData defineArraySymbolData(SymbolData eltSd, LanguageLevelVisitor llv, SourceInfo si)", "diff": ["-   * LanguageLevelVisitor and SourceInfo and enters it in the SymbolTable. */", "+   */", "-    ArrayData arraySd = new ArrayData(eltSd, llv, si);", "+    ArrayData arraySd = new ArrayData(eltSd, llv, si);  // sets _ isContinuation to false! ", "+    System.err.println(\"##### Defining the array symbol \" + arraySd.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9447562ca886ad228f2e1295ba472fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 700, "methodNumberAfterChange": 696, "signatureBeforeChange": "    final private boolean jj_3R_223()", "signatureAfterChange": "    final private boolean jj_3R_248()", "diff": ["+", "+  final private boolean jj_3R_248() {", "+    if (jj_3_32()) {", "+    if (jj_3R_306()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_223() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_31()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_265()) return true;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b95e048267728c4c616c366ffe15c290", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 716, "methodNumberAfterChange": 689, "signatureBeforeChange": "    final private boolean jj_3R_533()", "signatureAfterChange": "    final private boolean jj_3R_533()", "diff": ["+  final private boolean jj_3R_533() {", "+    if (jj_3R_554()) return true;", "-", "-  final private boolean jj_3R_533() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b965c853cc724402d6ee1a53ba795ae3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void insertString(int offset, String str, AttributeSet a) throws BadLocationException", "signatureAfterChange": "   public void insertString(int offset, String str, AttributeSet a) throws BadLocationException", "diff": ["-  public void insertString(int offset, String str, AttributeSet a) throws BadLocationException {", "-    ", "-    // If _removeTabs is set to true, remove all tabs from str.", "-    // It is a current invariant of the tabification functionality that", "-    // the document contains no tabs, but we want to allow the user", "-    // to override this functionality.", "+  public void insertString(int offset, String str, AttributeSet a) throws BadLocationException { ", "-    try {", "-      if (_tabsRemoved) str = _removeTabs(str);", "-      setModifiedSinceSave();", "-      super.insertString(offset, str, a);", "-    }", "+    try { _insertString(offset, str, a); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b97f9a8123ed3ab78918dae124dbe7a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPane.java", "commitBeforeChange": "debcaa5c7896b7af34301718bd146b407947838f", "commitAfterChange": "9c927a4c9ae89a399e5bb1469f6866c81da951b3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   private boolean _notCrossesPrompt(int to, int from)", "signatureAfterChange": "   private boolean _notCrossesPrompt(int to, int from)", "diff": ["-      toReturn &= ((to >= prompt && from >= prompt) || (to <= prompt && from <= prompt));", "-      if(!((to >= prompt && from >= prompt) || (to <= prompt && from <= prompt)))", "-        System.out.println(\"Prompt pos =\" + prompt + \"; To =\" + to + \"; From =\" + from);", "-      ", "+      toReturn &= ((to >= prompt && from >= prompt) || (to <= prompt && from <= prompt));      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b97fd41097bf6ed788cae68c2c1267d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 389, "methodNumberAfterChange": 287, "signatureBeforeChange": "    final private boolean jj_3R_145()", "signatureAfterChange": "    final private boolean jj_3R_150()", "diff": ["+", "+  final private boolean jj_3R_150() {", "+    if (jj_scan_token(LBRACKET)) return true;", "+    if (jj_3R_103()) return true;", "+    if (jj_scan_token(RBRACKET)) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_145() {", "-    if (jj_3R_107()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b982a36f74e0f57c91779d92a7d01eea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "998d49ab48c08c55f388485512c281814a54c029", "commitAfterChange": "a8b8b0a5cb85063013adcdf9293d0c9c540b8baa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _assertProcessedContents(final String typed, final String expected) throws EditDocumentException", "signatureAfterChange": "   protected void _assertProcessedContents(final String typed, final String expected) throws Exception", "diff": ["-  protected void _assertProcessedContents(final String typed, final String expected) throws EditDocumentException {", "+  protected void _assertProcessedContents(final String typed, final String expected) throws Exception {", "-    Utilities.invokeAndWait(new Runnable() { public void run() { ", "-      doc.reset(\"This is a test\"); ", "-      doc.append(typed, InteractionsDocument.DEFAULT_STYLE); ", "-      model.interpretCurrentInteraction(); } ", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        doc.reset(\"This is a test\"); ", "+        doc.append(typed, InteractionsDocument.DEFAULT_STYLE); ", "+      }", "+    Utilities.clearEventQueue();", "+    model._logInteractionStart();", "+    model.interpretCurrentInteraction();", "+    model._waitInteractionDone();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b98bf356f0a04ab12f5ae58283814f8e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fae4c278cf4d698cf56447c30e807e3a8a3e8b1a", "commitAfterChange": "ab3915db475da29d3ee24758ec211eb5cba4cacd", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": "   void initCompleteWordDialog()", "signatureAfterChange": "   void initCompleteWordDialog()", "diff": ["-      PredictiveInputFrame.InfoSupplier<JavaAPIListEntry> info = ", "-        new PredictiveInputFrame.InfoSupplier<JavaAPIListEntry>() {", "-        public String apply(JavaAPIListEntry entry) {", "+      PredictiveInputFrame.InfoSupplier<GoToFileListEntry> info = ", "+        new PredictiveInputFrame.InfoSupplier<GoToFileListEntry>() {", "+        public String apply(GoToFileListEntry entry) {", "-          return entry.getFullString();", "+          StringBuilder sb = new StringBuilder();", "+          sb.append(entry.getFullPackage());", "+          sb.append(entry.toString());", "+          return sb.toString();", "-                                                    null,", "+                                                    info,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b99d72793e3468f3749342b3342f5291", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "fb61bb542bf295f9ff563d4fe1831b256b325388", "commitAfterChange": "6a5c20e1ee845b9752ac481574f6a7bee8c034e1", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "          public void assertJUnitRunningCount(int i)", "signatureAfterChange": "          public void assertJUnitSuiteStartedCount(int i)", "diff": ["-    public void assertJUnitRunningCount(int i) {", "-      assertEquals(\"number of times junitRunning fired\", i, junitRunningCount);", "+    public void assertJUnitSuiteStartedCount(int i) {", "+      assertEquals(\"number of times junitSuiteStarted fired\", i, junitSuiteStartedCount);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9afd98e50439e5c720556e4a0208853", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   private int _findKeywordAtToplevel(String keyword, String text, int textOffset)", "signatureAfterChange": "   private int _findKeywordAtToplevel(String keyword, String text, int textOffset)", "diff": ["-            ReducedToken rt = _reduced.currentToken();", "-              if (rt.getState() == ReducedModelStates.FREE &&", "-                  Character.isWhitespace(text.charAt(indexPastKeyword))) {", "+              if (! isShadowed() && Character.isWhitespace(text.charAt(indexPastKeyword))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9d11b501a8be9aa21769133fb2003e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 388, "methodNumberAfterChange": 391, "signatureBeforeChange": "    final private boolean jj_3R_521()", "signatureAfterChange": "    final private boolean jj_3R_528()", "diff": ["-", "-  final private boolean jj_3R_521() {", "-    if (jj_3R_219()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_539()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_528() {", "+    if (jj_3R_213()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_546()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9f241f29ac187573a69cd88e9de6bf6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "e3d96b32b88704e1f2bab2f8f752f9012f5b829e", "commitAfterChange": "85538cb484722f3ee8b8f52d4f19defc02bd67d5", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": "   private void _indentLine()", "signatureAfterChange": "   private void _indentLine()", "diff": ["-    Indenter.ONLY.indent(this);", "+    _indenter.indent(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba0bf99e710863273eb31f3a9113b951", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "cbb9f04386fdbcd6c82a6f2a5ae6b635359499fb", "commitAfterChange": "e77b9389e0feb3169a20412f8892f630db108f0e", "methodNumberBeforeChange": 450, "methodNumberAfterChange": 450, "signatureBeforeChange": "      private boolean _save()", "signatureAfterChange": "      private boolean _save()", "diff": ["-      // _model.refreshActiveDocument() is not sufficient here; it does not re-select", "-      // the same document in flat-file mode", "-      _model.setActiveDocument(_model.getActiveDocument());", "+      // Is _model.refreshActiveDocument() sufficient here? Before this action selected the document in navigator", "+      // it was not in flat-file mode", "+      _model.refreshActiveDocument();", "-//      if (_model.getActiveDocument().saveFile(_saveSelector)) {", "-//        _currentDefPane.hasWarnedAboutModified(false); ", "-//        ", "-//        /**This highlights the document in the navigator */", "-//        _model.setActiveDocument(_model.getActiveDocument());", "-//        ", "-//        return true;", "-//      }", "-//      else return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba22d88fe5cd6878ee153c36b7f1b304", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": "     public int balanceForward()", "signatureAfterChange": "     public int balanceForward()", "diff": ["-      return _doc.balanceForward();", "+      return getDocument().balanceForward();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba2e574d7fa7b1e3a806bf182985e061", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlusTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public void testLeaveBe() throws javax.swing.text.BadLocationException", "signatureAfterChange": "    public void testLeaveBe() throws javax.swing.text.BadLocationException", "diff": ["-    assertEquals(\"foo\\nbar\", _doc.getText(0, 7));", "+    assertEquals(\"foo\\nbar\", _doc.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba3057567e6d2353a6a51c447839dd38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "ce99ad77121aabff91f9c6fba762f853ca2a34f5", "commitAfterChange": "c7e182b04aa52ae1423064c733cc8609017cc26d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected File tempFile(int i) throws IOException", "signatureAfterChange": "   protected File tempFile(int i) throws IOException", "diff": ["-    return File.createTempFile(\"DrJava-test\" + i, \".java\", _tempDir);", "+    return File.createTempFile(\"DrJava-test\" + i, \".java\", _tempDir).getCanonicalFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba3d46eb7f727881151ff66dee17f53f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "     public Object visit(LessOrEqualExpression node)", "signatureAfterChange": "   public Class visit(LessOrEqualExpression node)", "diff": ["+   */", "+  public Class visit(LessOrEqualExpression node) {", "+    Class c = visitRelationalExpression(node);", "+    ", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.lessOrEqual(ln.getProperty(NodeProperties.VALUE),", "+    return c;", "+  }", "-     */", "-    public Object visit(LessOrEqualExpression node) {", "-        Class c = visitRelationalExpression(node);", "-", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.lessOrEqual(ln.getProperty(NodeProperties.VALUE),", "-\t\t\t\t\t\t  rn.getProperty(NodeProperties.VALUE)));", "-        }", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba52d94d4249fabbdd0671575e9b1dad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   private FindResult _findNextInOtherDocs(final OpenDefinitionsDocument startDoc, int start, int len)", "signatureAfterChange": "   private FindResult _findNextInOtherDocs(final OpenDefinitionsDocument startDoc, int start, int len)", "diff": ["-      _doc.readLock();", "+      _doc.acquireReadLock();", "-      finally { _doc.readUnlock(); }", "+      finally { _doc.releaseReadLock(); }", "-    // No valid match found; perform wrapped search.  _findWrapped assumes readLock is held.", "-    startDoc.readLock();", "+    // No valid match found; perform wrapped search.  _findWrapped assumes acquireReadLock is held.", "+    startDoc.acquireReadLock();", "-    finally { startDoc.readUnlock(); } ", "+    finally { startDoc.releaseReadLock(); } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba7aa5d7dc7bae615f947b1a64610c15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/SlaveJVMRunner.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    private static SlaveRemote _getInstance(Class clazz) throws Exception", "signatureAfterChange": "    private static AbstractSlaveJVM _getInstance(Class clazz) throws Exception", "diff": ["-  private static SlaveRemote _getInstance(Class clazz) throws Exception {", "-    try { return (SlaveRemote) clazz.getField(\"ONLY\").get(null); }", "-    catch (Throwable t) { return (SlaveRemote) clazz.newInstance();  }", "+  private static AbstractSlaveJVM _getInstance(Class clazz) throws Exception {", "+    try { return (AbstractSlaveJVM) clazz.getField(\"ONLY\").get(null); }", "+    catch (Throwable t) { ", "+      _log.log(\"SlaveRemote class does not have an ONLY field!\");", "+      return (AbstractSlaveJVM) clazz.newInstance();  ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba85ea120fe26ce79dcf50218466199c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 529, "methodNumberAfterChange": 533, "signatureBeforeChange": "    final private boolean jj_3R_294()", "signatureAfterChange": "    final private boolean jj_3R_302()", "diff": ["-  final private boolean jj_3R_294() {", "-    if (jj_3R_88()) return true;", "+  final private boolean jj_3R_302() {", "+    if (jj_3R_89()) return true;", "-    if (jj_3R_560()) jj_scanpos = xsp;", "+    if (jj_3R_567()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba8e1b4bf5a7466d34880a6b3622939e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 59, "signatureBeforeChange": "   public Void forPackageImportStatementOnly(PackageImportStatement that)", "signatureAfterChange": "   public Void forPackageImportStatementOnly(PackageImportStatement that)", "diff": ["-    StringBuffer tempBuff = new StringBuffer(words[0].getText());", "-    for (int i = 1; i < words.length; i++) {tempBuff.append(\".\" + words[i].getText());}", "+    StringBuilder tempBuff = new StringBuilder(words[0].getText());", "+    for (int i = 1; i < words.length; i++) { tempBuff.append(\".\" + words[i].getText()); }", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba8e7c1b96505006473d3265ba84927a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 364, "methodNumberAfterChange": 808, "signatureBeforeChange": "    final private boolean jj_3R_183()", "signatureAfterChange": "    final private boolean jj_3R_130()", "diff": ["-", "-  final private boolean jj_3R_183() {", "-    if (jj_3R_249()) return true;", "-    if (jj_3R_310()) jj_scanpos = xsp;", "+  final private boolean jj_3R_130() {", "+    if (jj_3R_177()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_178()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "babd7adad2420bdbd247508e4ca5a75d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void testSaveAsAlreadySaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAsAlreadySaved() throws BadLocationException, IOException", "diff": ["-    assertEquals(\"contents of saved file\", FOO_TEXT, FileOps.readFileAsString(file1));", "+    assertEquals(\"contents of saved file\", FOO_TEXT, IOUtil.toString(file1));", "-    assertEquals(\"contents of saved file1\", FOO_TEXT, FileOps.readFileAsString(file1));", "+    assertEquals(\"contents of saved file1\", FOO_TEXT, IOUtil.toString(file1));", "-    assertEquals(\"contents of saved file2\", BAR_TEXT, FileOps.readFileAsString(file2));", "+    assertEquals(\"contents of saved file2\", BAR_TEXT, IOUtil.toString(file2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "babed834be12a3b95ef7c406a42d06c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e75c44dca53d5633e70ed3badd03d3667a23d4c8", "commitAfterChange": "c11896795d0041b0e5728ede27aa1fce3454d97c", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": "      private void _doResetInteractions()", "signatureAfterChange": "      private void _doResetInteractions()", "diff": ["+    _model.getInteractionsModel().enableRestart();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "babf6a1c590d8eb3f3c018598653089c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 428, "methodNumberAfterChange": 424, "signatureBeforeChange": "    final private boolean jj_3R_188()", "signatureAfterChange": "    final private boolean jj_3R_189()", "diff": ["-  final private boolean jj_3R_188() {", "-    if (jj_3R_221()) return true;", "+  final private boolean jj_3R_189() {", "+    if (jj_3R_222()) return true;", "-      if (jj_3R_257()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_258()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baca3859728977b1b4e81a59c115087b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "50f8ddd53ad051b199f7d13e98934938f25bd2ae", "commitAfterChange": "963348ced7921c9036c4d0267a79aecf5dc0da09", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testCompileUnsavedButSaveWhenAsked()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileUnsavedButSaveWhenAsked()     throws BadLocationException, IOException", "diff": ["-      public void saveBeforeProceeding(GlobalModelListener.SaveReason reason) {", "+      public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason) {", "-        saveBeforeProceedingCount++;", "+        saveAllBeforeProceedingCount++;", "-        assertSaveBeforeProceedingCount(0);", "+        assertSaveAllBeforeProceedingCount(0);", "-    listener.assertSaveBeforeProceedingCount(1);", "+    listener.assertSaveAllBeforeProceedingCount(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "badb83c9b130787e8ccabea3811c4056", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 411, "methodNumberAfterChange": 409, "signatureBeforeChange": "    final private boolean jj_3R_427()", "signatureAfterChange": "    final private boolean jj_3R_428()", "diff": ["-  final private boolean jj_3R_427() {", "+  final private boolean jj_3R_428() {", "-    if (jj_3R_439()) return true;", "+    if (jj_3R_441()) return true;", "-      if (jj_3R_443()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_445()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "badc2c2309c401777e0b33043a3b4a58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/FindReplaceTest.java", "commitBeforeChange": "ab1acd6921fa73274023da473a4888d5bdd6b5f2", "commitAfterChange": "a5a766c0abe1a94ea1cfa69aac7995654eda0886", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void setUp()", "signatureAfterChange": " \t \tpublic void setUp()", "diff": ["+\t\t\tframe.getOutView().deactivate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baf5155ba293029cb038c25c834b599f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "99105223925683ee669479026ce3b62dfa0eda84", "commitAfterChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 40, "signatureBeforeChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException", "signatureAfterChange": "   private String encodeDocFileAbsolute(DocFile df, String prefix) throws IOException", "diff": ["-  private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException {", "-    return encodeDocFile(df, prefix, relative, true);", "+  private String encodeDocFileAbsolute(DocFile df, String prefix) throws IOException {", "+    return encodeDocFile(df, prefix, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baf9b1013669f4d67d301ec942f2f61a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "844a54657c2f878fc1ea01131f59375a436ab7c8", "commitAfterChange": "b583f95ca38940907816c4beb7118ff0df1017e2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testInterpretJavaArguments() throws DocumentAdapterException", "signatureAfterChange": "   public void testInterpretJavaArguments() throws DocumentAdapterException", "diff": ["+    // java Foo c:\\file.txt", "+    // Foo.main(\"c:\\\\file.txt\");", "+    _assertProcessedContents(\"java Foo c:\\\\file.txt\",", "+                             \"Foo.main(new String[]{\\\"c:\\\\\\\\file.txt\\\"});\");", "+", "+    // java Foo /home/user/file", "+    // Foo.main(\"/home/user/file\");", "+    _assertProcessedContents(\"java Foo /home/user/file\",", "+                             \"Foo.main(new String[]{\\\"/home/user/file\\\"});\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb0b2ab8fd4fa5a7e53819581aeed5c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "be38b2b11517729e454db4fb5ce1085dc1eb228a", "commitAfterChange": "651f9c8060aa8498340cc0dfb61af287d74336bb", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 59, "signatureBeforeChange": "   private void _setUpToolBar()", "signatureAfterChange": "   private void _setUpToolBar()", "diff": ["-    ", "+    _toolBar.add(_saveAllAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb1af34699076b4241bd03f1cd679a66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public int getLineEndPos(final int pos)", "signatureAfterChange": "   public int getLineEndPos(final int pos)", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb2bed7a186113d3c3b7eff1e04cdb8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "      public void testGetNextAnonymousInnerClass()", "signatureAfterChange": "      public void testGetNextAnonymousInnerClass()", "diff": ["-      System.err.println(\"testGetNextAnonymousInnerClass finished\");", "+//      System.err.println(\"testGetNextAnonymousInnerClass finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb3e5197abf77b2bbedcb7afa2c19e91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "commitAfterChange": "b1b91197c778ee62ce767051b412c31f7bcdddb8", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": "   private JMenu _setUpToolsMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpToolsMenu(int mask)", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "+    if (DrJava.getConfig().getSetting(OptionConstants.SHOW_DEBUG_CONSOLE).booleanValue()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb4a270671be3b1b54fc3cc815de012d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 436, "methodNumberAfterChange": 452, "signatureBeforeChange": "          private void _fileOpened(final OpenDefinitionsDocument doc)", "signatureAfterChange": "          private void _fileOpened(final OpenDefinitionsDocument doc)", "diff": ["-      ", "-          if (_model.inProjectPath(doc)) _model.setProjectChanged(true);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb4d83b1c130390e9e2bb6c6fd3487e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testCompileAbortsIfUnsaved()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileAbortsIfUnsaved()     throws BadLocationException, IOException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb582d6ecf6a61f5155055dace744ff3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 565, "methodNumberAfterChange": 543, "signatureBeforeChange": "    final private boolean jj_3R_184()", "signatureAfterChange": "    final private boolean jj_3R_189()", "diff": ["-", "-  final private boolean jj_3R_184() {", "-    if (jj_scan_token(LPAREN)) return true;", "+", "+  final private boolean jj_3R_189() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_105()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb5c288758409489091418722be8afa1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 452, "methodNumberAfterChange": 395, "signatureBeforeChange": "    final private boolean jj_3R_447()", "signatureAfterChange": "    final private boolean jj_3R_448()", "diff": ["-  final private boolean jj_3R_447() {", "-    if (jj_3R_457()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_458()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_459()) return true;", "-    }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_448() {", "+    if (jj_3R_458()) {", "+    if (jj_3R_459()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_460()) return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb5d95b81ae0e4b8891fc671aca8ea36", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOpsTest.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void testConvertToAbsolutePathEntries()", "signatureAfterChange": "      public void testConvertToAbsolutePathEntries()", "diff": ["-    assertEquals(\"testConvertToAbsolutePathEntries for several paths failed, input='\"+input+\"', expected='\"+expected+\"', actual='\"+actual+\"'\",", "-                 expected,", "-                 actual);", "-    ", "+    assertEquals(\"testConvertToAbsolutePathEntries for several paths failed, input = '\" + input + \"', expected = '\" + ", "+                 expected + \"', actual = '\" + actual + \"'\", expected, actual);", "-    assertEquals(\"testConvertToAbsolutePathEntries for empty path failed, input='\"+input+\"', expected='\"+expected+\"', actual='\"+actual+\"'\",", "-                 expected,", "-                 actual);", "-    ", "-    input = p+p+p+\".\";", "-    expected = ud+p+ud+p+ud+p+ud+f+\".\";", "+    assertEquals(\"testConvertToAbsolutePathEntries for empty path failed, input = '\" + input + \"', expected = '\" + ", "+                 expected + \"', actual = '\" + actual + \"'\", expected, actual); ", "+    input = p + p + p + \".\";", "+    expected = ud + p + ud + p + ud + p + ud + f + \".\";", "-    assertEquals(\"testConvertToAbsolutePathEntries for several empty paths failed, input='\"+input+\"', expected='\"+expected+\"', actual='\"+actual+\"'\",", "-                 expected,", "-                 actual);", "-    ", "-    input = p+p;", "-    expected = ud+p+ud+p+ud;", "+    assertEquals(\"testConvertToAbsolutePathEntries for several empty paths failed, input = '\" + input + ", "+                 \"', expected = '\" +expected+\"', actual = '\" + actual + \"'\", expected, actual);", "+    input = p + p;", "+    expected = ud + p + ud + p + ud;", "-    assertEquals(\"testConvertToAbsolutePathEntries for trailing empty paths failed, input='\"+input+\"', expected='\"+expected+\"', actual='\"+actual+\"'\",", "-                 expected,", "-                 actual);", "+    assertEquals(\"testConvertToAbsolutePathEntries for trailing empty paths failed, input = '\" + input + ", "+                 \"', expected = '\" + expected + \"', actual = '\" + actual + \"'\", expected, actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb9f33015ef133eaa4c925b8eb0ac3bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 298, "methodNumberAfterChange": 292, "signatureBeforeChange": "    final private boolean jj_3R_374()", "signatureAfterChange": "    final private boolean jj_3R_424()", "diff": ["-  final private boolean jj_3R_374() {", "-    if (jj_3R_387()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_409()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_424() {", "+    if (jj_3R_438()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_461()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bba6a51d4c370919e83bd9a9e6301fcb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocument.java", "commitBeforeChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "commitAfterChange": "8417ddcfd5dbe91145435687b878857a28a6fc40", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "   private int getWhiteSpaceBetween(int relStart, int relEnd)     throws BadLocationException", "signatureAfterChange": "   private int getWhiteSpaceBetween(int relStart, int relEnd)     throws BadLocationException", "diff": ["-                               relStart - relEnd);", "+                               Math.abs(relStart - relEnd));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbb560f13840b805f9c785f188eda4ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "1ca22d8d9e892abbe72cd6aa5627cc7ce0e56b03", "commitAfterChange": "024873f55ad7ba6280213fee7183c6688ba3b395", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "       public Object forVoidResult(VoidResult that)", "signatureAfterChange": "       public Object forVoidResult(VoidResult that)", "diff": ["-        synchronized(TestJVMExtension.this) {", "+        synchronized(_testLock) {", "-          TestJVMExtension.this.notify();", "+          _testLock.notify();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbc0de76ec59c9981d5e11f47a7aa730", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 407, "methodNumberAfterChange": 398, "signatureBeforeChange": "    final private boolean jj_3R_485()", "signatureAfterChange": "    final private boolean jj_3R_488()", "diff": ["-  final private boolean jj_3R_485() {", "+  final private boolean jj_3R_488() {", "-    if (jj_3R_493()) jj_scanpos = xsp;", "+    if (jj_3R_496()) jj_scanpos = xsp;", "-    if (jj_3R_494()) jj_scanpos = xsp;", "+    if (jj_3R_497()) jj_scanpos = xsp;", "-    if (jj_3R_495()) jj_scanpos = xsp;", "+    if (jj_3R_498()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbfbebab5a57af15b3831fec3dbfb845", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testGotoLine3() throws BadLocationException", "signatureAfterChange": "   public void testGotoLine3() throws BadLocationException", "diff": ["-    _defModel.insertString(0, s, null);", "-    _defModel.gotoLine(4);", "-    assertEquals(\"#0.0\", 6, _defModel.getCurrentLocation());", "+    _doc.insertString(0, s, null);", "+    _doc.gotoLine(4);", "+    assertEquals(\"#0.0\", 6, _doc.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc061554d082bf2554fee14a3f233b2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "24e790b85d3a1a29de15955ca1ba9200a6865f83", "commitAfterChange": "4ceb386773fd5eb837ddcd34820c563b6c3c20cb", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 170, "signatureBeforeChange": "   private void _setMainFont()", "signatureAfterChange": "   private void _setMainFont()", "diff": ["+    _javadocErrorPanel.setListFont(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc0cb7d0cd269366feefbec0d02ac3ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 790, "methodNumberAfterChange": 789, "signatureBeforeChange": "    final private boolean jj_3R_538()", "signatureAfterChange": "    final private boolean jj_3R_537()", "diff": ["-", "-  final private boolean jj_3R_538() {", "+  final private boolean jj_3R_537() {", "-    if (jj_3R_234()) return true;", "+    if (jj_3R_235()) return true;", "-      if (jj_3R_558()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_555()) { jj_scanpos = xsp; break; }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc0dcb2a6502c6e5fa13b25199735f4c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "c916ec3f8333c65c1423a4941944c1bdf676e3b4", "commitAfterChange": "65add9d9f0de9278803d6c9a77b3294a4ab082f3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   protected void paintComponent(Graphics g)", "signatureAfterChange": "   protected void paintComponent(Graphics g)", "diff": ["-    if (_antiAliasText && g instanceof Graphics2D) {", "-      Graphics2D g2d = (Graphics2D)g;", "-      g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,", "-                           RenderingHints.VALUE_TEXT_ANTIALIAS_ON);", "+    if (CodeStatus.DEVELOPMENT) {", "+      if (_antiAliasText && g instanceof Graphics2D) {", "+        Graphics2D g2d = (Graphics2D)g;", "+        g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,", "+                             RenderingHints.VALUE_TEXT_ANTIALIAS_ON);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc2b5b13a4fd0c6b99a4938f11dcc0da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": "     public void setDefinitionsIndent(int indent)", "signatureAfterChange": "     public void setDefinitionsIndent(int indent)", "diff": ["-      _doc.setIndent(indent);", "+      getDocument().setIndent(indent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc3f9d96cd809012eccaa15887f6b1a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected void handleSlaveConnected()", "signatureAfterChange": "      protected void handleSlaveConnected()", "diff": ["-      SlaveI slave = (SlaveI) getSlave();", "+      TestSlaveRemote slave = (TestSlaveRemote) getSlave();", "+      _log.log(\"_handleSlaveConnected() finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc563d5df94ed102793796bcb7b0cfe9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 299, "methodNumberAfterChange": 402, "signatureBeforeChange": "    final private boolean jj_3R_495()", "signatureAfterChange": "    final private boolean jj_3R_495()", "diff": ["-  final private boolean jj_3R_495() {", "+  final private boolean jj_3R_495() {", "+    if (jj_3R_501()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc640d233f0de5d0790414b8c65747cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void compileAll() throws IOException", "signatureAfterChange": "   public void compileAll() throws IOException", "diff": ["-    if (_prepareForCompile()) {", "-      _doCompile(_model.getOpenDefinitionsDocuments());", "-    }", "+    if (_prepareForCompile()) { _doCompile(_model.getOpenDefinitionsDocuments()); }", "+    else _notifier.compileAborted(new UnexpectedException(\"Some modified open files are unsaved\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc9dad93559dc503a1e983c289397617", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 483, "methodNumberAfterChange": 700, "signatureBeforeChange": "    final private boolean jj_3R_329()", "signatureAfterChange": "    final private boolean jj_3R_423()", "diff": ["-", "-  final private boolean jj_3R_329() {", "-    if (jj_3R_402()) return true;", "+", "+  final private boolean jj_3R_423() {", "+    if (jj_scan_token(GREATER_THAN)) return true;", "+    if (jj_3R_406()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bca262667e20ce427265291072ce9276", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "commitAfterChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public JTreeSortNavigator(String name)", "signatureAfterChange": "   public JTreeSortNavigator(String name)", "diff": ["+   */", "-    _renderer.setJavaIcon(getIcon(\"javaicon.gif\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bca981bc6a6d1409b2a4ea4bf5b7c428", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreter.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public Object interpret(String s);", "signatureAfterChange": "   public Object interpret(String s) throws ExceptionReturnedException;", "diff": ["-  public Object interpret(String s);", "+  public Object interpret(String s) throws ExceptionReturnedException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcaf94f5ad3d9e151a8c7aea1900dd26", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "facb31d52d0108009578d6a1708ac1dfc68b98b8", "commitAfterChange": "417b6d282f87d7da5aa7274e065294c3e7058851", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     void switchToError(JUnitError error)", "signatureAfterChange": "     void switchToError(JUnitError error)", "diff": ["-", "-      if (errorHasLocation) {", "-        try {", "-          OpenDefinitionsDocument doc = _model.getDocumentForFile(error.file());", "-          JUnitErrorModel errorModel = doc.getJUnitErrorModel();", "-          JUnitError[] errors = errorModel.getErrors();", "-", "-          int index = Arrays.binarySearch(errors, error);", "+      ", "+      try {", "+      ", "+        OpenDefinitionsDocument doc = _model.getDocumentForFile(error.file());", "+        JUnitErrorModel errorModel = doc.getJUnitErrorModel();", "+        ", "+        if (errorHasLocation) {", "+          JUnitError[] errorsWithPositions = errorModel.getErrorsWithPositions();", "+          //System.out.println(\"error has location\" +error.lineNumber() + \" \" + error);", "+          //System.out.println(\"error size: \" + errors.length);", "+          //for (int i=0; i< errors.length; i++) {", "+          //  System.out.println(\"errors [\" + i + \"] \" + errors[i].lineNumber() + \" \" + errors[i]);", "+          //}", "+          ", "+          int index = Arrays.binarySearch(errorsWithPositions, error);", "+          //System.out.println(\"index of error: \" + index);", "-        }", "-        catch (IOException ioe) {", "-          // Don't highlight the source if file can't be opened", "-        }", "-      }", "-      else {", "-        // Remove last highlight", "-        _lastDefPane.removeErrorHighlight();", "-      }", "+        }", "+        ", "+        else {", "+          // Remove last highlight", "+          _lastDefPane.removeErrorHighlight();", "+          ", "+          DefinitionsPane defPane = _frame.getCurrentDefPane();", "+          defPane.getJUnitErrorCaretListener().shouldHighlight(false);", "+          ", "+          // still switch to document despite the fact that the error has no lineNum", "+          _model.setActiveDocument(doc);", "+          _removeListHighlight();", "+        }", "+      }", "+      catch (IOException ioe) {", "+        // Don't highlight the source if file can't be opened", "+      }", "+      ", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcb08ce3986dfd5307d7bced0562fb05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 782, "methodNumberAfterChange": 397, "signatureBeforeChange": "    final private boolean jj_3R_130()", "signatureAfterChange": "    final private boolean jj_3R_302()", "diff": ["+", "+  final private boolean jj_3R_302() {", "+    if (jj_3R_311()) return true;", "+    if (jj_3R_324()) jj_scanpos = xsp;", "-", "-  final private boolean jj_3R_130() {", "-    if (jj_3R_177()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_178()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bce5fa6478036e39a6bb09a15d76c9bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 89, "signatureBeforeChange": "   private void _resumeDebugger()", "signatureAfterChange": "   void debuggerResume()", "diff": ["-  private void _resumeDebugger() {", "+  void debuggerResume() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bce644e946cb9042212b1dedd88cac90", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 607, "methodNumberAfterChange": 593, "signatureBeforeChange": "    final private boolean jj_3R_230()", "signatureAfterChange": "    final private boolean jj_3R_231()", "diff": ["-  final private boolean jj_3R_230() {", "-    if (jj_3R_272()) return true;", "+", "+  final private boolean jj_3R_231() {", "+    if (jj_3R_274()) return true;", "-      if (jj_3R_304()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_307()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcfdd9a69a5b928c3c3882aaec19ea17", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void removeAllBreakpoints();", "signatureAfterChange": "   public void removeAllBreakpoints() throws DebugException;", "diff": ["-  public void removeAllBreakpoints();", "+  public void removeAllBreakpoints() throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcff2bf8732da71f7ae9539adce2e2bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "c8a7a8a9d3d089ab42661ede7d141969c6ed2339", "commitAfterChange": "edb148d96e488bb5de94fe3df6063e44425ab166", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   private void _javadocAllWorker(File destDirFile, FileSaveSelector saver, String classpath)", "signatureAfterChange": "   private void _javadocAllWorker(File destDirFile, FileSaveSelector saver, String classpath)", "diff": ["-    File[] sourceRoots = sourceRootSet.toArray(new File[0]);", "+    File[] sourceRoots = sourceRootSet.toArray(new File[sourceRootSet.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd015b49524a86e9b2e44afed92ea942", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "76c0b2960b62020d46b810955623e0af759eee20", "commitAfterChange": "936042cad9bfa0086510cc58a96357306371fb07", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testCompilePackageAsField() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompilePackageAsField() throws BadLocationException, IOException, InterruptedException", "diff": ["+    debug.logStart();", "+    ", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd022ec457bc2a87828aae6158238866", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testIndentInsideParenAtEnd()       throws BadLocationException, OperationCanceledException", "signatureAfterChange": "   public void testIndentInsideParenAtEnd()       throws BadLocationException, OperationCanceledException", "diff": ["-    openDoc.syncCurrentLocationWithDefinitions(openDoc.getLength() - 1);", "-    int loc = openDoc.getCurrentDefinitionsLocation();", "+    openDoc.setCurrentLocation(openDoc.getLength() - 1);", "+    int loc = openDoc.getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd0eb887b2551af81374de9a87e52fc4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 579, "methodNumberAfterChange": 586, "signatureBeforeChange": "    final private boolean jj_3R_361()", "signatureAfterChange": "    final private boolean jj_3R_360()", "diff": ["-  final private boolean jj_3R_361() {", "-    if (jj_3R_366()) return true;", "-      if (jj_3R_394()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_360() {", "+    if (jj_3R_368()) return true;", "+      if (jj_3R_385()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd0fb050520e8d58d40b2922b644a2b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/KeyBindingManager.java", "commitBeforeChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "commitAfterChange": "ba6205cad42ae00df3c37c5cbd4625770848df66", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "          private void _updateMenuItem (KeyStrokeData data)", "signatureAfterChange": "          private void _updateMenuItem (KeyStrokeData data)", "diff": ["-      if (jmi != null) { // otherwise this keystroke should map to an action that isn't in the menu", "+      // If jmi is null, this keystroke maps to an action that isn't in the menu", "+      if (jmi != null) {", "-        jmi.setAccelerator(ks);", "+        if (ks != KeyStrokeOption.NULL_KEYSTROKE) {", "+          // If ks is NULL_KEYSTROKE, we don't want it \"active\", since some", "+          //  Windows keys generate NULL_KEYSTROKE", "+          jmi.setAccelerator(ks);", "+        }", "+        else {", "+          // Clear the menu item's accelerator", "+          jmi.setAccelerator(null);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd146667c9cc6e7b8d68f4031f635d81", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "14ecd0c683c3a654631edbe7cd556951ec682439", "commitAfterChange": "b4e48852da60211c31b0141438d3f04d6c627263", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 169, "signatureBeforeChange": "     public void fileReverted(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public void fileReverted(OpenDefinitionsDocument doc)", "diff": ["+      _currentDefPane.resetUndo();", "+      _currentDefPane.hasWarnedAboutModified(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd1dfb56c2c3c39603b0548ba2d2476a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "3a27fdcf5b864c5b5279a3c8d8f9dbb297967a71", "commitAfterChange": "69b3a1d533ce4a667d07ab3342b6d3841c2073dd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void runBare() throws Throwable", "signatureAfterChange": "   public void runBare() throws Throwable", "diff": ["+        _model.setResetAfterCompile(true);  // just in case someone forgets"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd51ba05caeafd1da4c06f33814b665b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public int _getFirstNonWSCharPos(int pos, boolean acceptComments) throws BadLocationException", "signatureAfterChange": "   public int getFirstNonWSCharPos(int pos, boolean acceptComments) throws BadLocationException", "diff": ["-  public int _getFirstNonWSCharPos(int pos, boolean acceptComments) throws BadLocationException {", "+  public int getFirstNonWSCharPos(int pos, boolean acceptComments) throws BadLocationException {", "-    return _getFirstNonWSCharPos(pos, whitespace, acceptComments);", "+    return getFirstNonWSCharPos(pos, whitespace, acceptComments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd62207ce168d37a18612347ae3390be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["-    _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "+    _tempDir = IOUtil.createAndMarkTempDirectory(\"DrJava-test-\" + user, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd7b23b885f9490eba62b1fe421bc04d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 376, "signatureBeforeChange": "         public int _getLineStartPos(int pos)", "signatureAfterChange": "         public int _getLineStartPos(int pos)", "diff": ["-      doc.acquireReadLock();", "-      try { return doc._getLineStartPos(pos); }", "-      finally { doc.releaseReadLock(); }", "+//      doc.acquireReadLock();", "+//      try { ", "+      return doc._getLineStartPos(pos); ", "+//      }", "+//      finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd9db31fd6aaa2c5d72b9bb785267ddf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "51eb81adbb9a6967e1d5616b976e8363540afc02", "commitAfterChange": "0912ab7ed35ec7cfa4a9c45641294748135ef6a8", "methodNumberBeforeChange": 462, "methodNumberAfterChange": 463, "signatureBeforeChange": "      boolean inDebugMode()", "signatureAfterChange": "      boolean inDebugMode()", "diff": ["-    if (dm.isAvailable()) return dm.isReady() && (_debugPanel != null);", "-    return false;", "+    return (dm.isAvailable()) && dm.isReady() && (_debugPanel != null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdaa6176c34580559f6577ef8bdd5ae4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "07df9e8611c650306e145606873296ce77e32d2e", "commitAfterChange": "ffef92d973721c01556f7c658b9620d6a7c5fd34", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void testGetStateAtCurrent()", "signatureAfterChange": "  \tpublic void testGetStateAtCurrent()", "diff": ["-\t\t\tmodel1.insertLineComment();", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.insertLineComment();", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertSlash();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdc27a100320e771b113a743f9e44f58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassContext.java", "commitBeforeChange": "eef32107e75e031eb7210130ce310e1714e51b91", "commitAfterChange": "7c0f2c9147393f8cef6c7d3001b98a8817827537", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 19, "signatureBeforeChange": "   @Override public Type typeContainingMethod(String name, TypeSystem ts)", "signatureAfterChange": "      @Override public Type typeContainingMethod(String name, TypeSystem ts)", "diff": ["-   */", "-    if (hasMethod(name, ts)) { return _thisType; }", "-    else { return super.typeContainingMethod(name, ts); }", "+    return hasMethod(name, ts) ? _thisType : super.typeContainingMethod(name, ts);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdd6b2e8d1f6ce7f00bca408cf99af4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "72163ebd454d71c0955c00c7a1a43c6fa207331b", "commitAfterChange": "cdddd415c8ee9888478b5a253ffbb086fce1ed57", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void toggleBreakpoint(OpenDefinitionsDocument doc, int lineNumber)     throws IOException, ClassNotFoundException, DebugException", "signatureAfterChange": "   public void toggleBreakpoint(OpenDefinitionsDocument doc, int lineNumber)     throws DebugException", "diff": ["-    throws IOException, ClassNotFoundException, DebugException {  ", "+    throws DebugException {  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bddfa8bbb203b74bea2789d1ae5dd2a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InsertVariableDialog.java", "commitBeforeChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "commitAfterChange": "fdb0eba529d65804f971cdb52c673713ef0d4616", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private void initComponents()", "signatureAfterChange": "   private void initComponents()", "diff": ["+        _helpPane.setCaretPosition(0);", "-    gridbag.setConstraints(_helpPane, c);", "-    top.add(_helpPane);", "+    gridbag.setConstraints(helpPaneSP, c);", "+    top.add(helpPaneSP);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdef60b90db911c47be8aee02e208194", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 403, "methodNumberAfterChange": 406, "signatureBeforeChange": "    final private boolean jj_3R_100()", "signatureAfterChange": "    final private boolean jj_3R_101()", "diff": ["-  final private boolean jj_3R_100() {", "+  final private boolean jj_3R_101() {", "-    if (jj_3R_151()) jj_scanpos = xsp;", "+    if (jj_3R_152()) jj_scanpos = xsp;", "-      if (jj_3_61()) { jj_scanpos = xsp; break; }", "+      if (jj_3_63()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be14b5d58b55d92819bc6d997f7998b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AboutDialog.java", "commitBeforeChange": "43eefb13add569ca9ff1db80c62e9ee92c8ca598", "commitAfterChange": "124ac925b351b04f652493be1088a638f703a577", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void setVisible(boolean vis)", "signatureAfterChange": "    public void setVisible(boolean vis)", "diff": ["+    if(vis)", "+      show();", "+    else", "+      hide();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be16bb9d3e8aa43ec010af502f4fd158", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 465, "methodNumberAfterChange": 463, "signatureBeforeChange": "    final private boolean jj_3R_369()", "signatureAfterChange": "    final private boolean jj_3R_372()", "diff": ["-", "-  final private boolean jj_3R_369() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_164()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_334()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_372() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_166()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_337()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be2e744c1cc74e77793551cd6ead2647", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "c750f23eb2b9150b4fb75772deac7c17626a7d1c", "commitAfterChange": "74e4ff93e186e54c8f3a2ca5764d77cf5247e4cc", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   protected void paintComponent(Graphics g)", "signatureAfterChange": "   protected void paintComponent(Graphics g)", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      if (_antiAliasText && g instanceof Graphics2D) {", "-        Graphics2D g2d = (Graphics2D)g;", "-        g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);", "-      }", "+    if (_antiAliasText && g instanceof Graphics2D) {", "+      Graphics2D g2d = (Graphics2D)g;", "+      g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be33ad46f14e50b0f7c7b1958378a78f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": "   public ProjectProfile _makeProjectProfile(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info) throws IOException", "signatureAfterChange": "   public ProjectProfile _makeProjectProfile(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info) throws IOException", "diff": ["-    ClassPathVector exCp = getExtraClassPath();", "+    Iterable<File> exCp = getExtraClassPath();", "-      ArrayList<File> exCpF = exCp.asFileVector();", "-      for (File f : exCpF) {", "-        builder.addClassPathFile(f);", "-        //System.out.println(\"Saving project classpath entry \" + f);", "-      }", "+      for (File f : exCp) { builder.addClassPathFile(f); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be37f9b215e6164b4aee62ae94ccd800", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b3d6313113eef111465ef40865d8b51fd3f1c263", "commitAfterChange": "297ab8f541fdccc79367d02c322b7113ca0c7fca", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": "            private void _openProjectUpdate()", "signatureAfterChange": "            private void _openProjectUpdate()", "diff": ["-      ", "+      _model.setProjectChanged(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be3803082075733f81558cf89841e15d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "520c98c03a1e651efb4dfbf7d7f2a55510c74658", "commitAfterChange": "3f953b8fb783fe3ca1b336468898f35cd9cde7db", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testVisitDoStatement() throws ExceptionReturnedException", "signatureAfterChange": "   public void testVisitDoStatement() throws ExceptionReturnedException", "diff": ["-    _interpreter.interpret(\"Boolean B = Boolean.FALSE; \" + text);", "+    _interpreter.interpret(text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be4ce187c4cb147113b49d21e5b991dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AbstractConsoleController.java", "commitBeforeChange": "b796c376864058d232f1be02ccfb0bd7548b3f89", "commitAfterChange": "ba6275930e25f1b0898c45319a21c16860b3e177", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected AbstractConsoleController(SwingDocumentAdapter adapter,                                       InteractionsPane pane)", "signatureAfterChange": "   protected AbstractConsoleController(SwingDocumentAdapter adapter,                                       InteractionsPane pane)", "diff": ["+    _defaultStyle = new SimpleAttributeSet();", "+    _systemOutStyle = new SimpleAttributeSet();", "+    _systemErrStyle = new SimpleAttributeSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be5dd34652f91ac3b2aa31ed5eb42d41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 574, "methodNumberAfterChange": 564, "signatureBeforeChange": "    final private boolean jj_3R_144()", "signatureAfterChange": "    final private boolean jj_3R_134()", "diff": ["-  final private boolean jj_3R_144() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_3R_207()) {", "-    if (jj_3R_208()) return true;", "+", "+  final private boolean jj_3R_134() {", "+    if (jj_scan_token(COMMA)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_182()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_183()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be5e357262e8270f44c041ea72e1e139", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "commitAfterChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   private void _addCharToReducedModel(char curChar)", "signatureAfterChange": "   private void _addCharToReducedModel(char curChar)", "diff": ["-   *  @param curChar the character to be added. */", "+    *  @param curChar the character to be added. */", "-    clearCache();", "-   _reduced.insertChar(curChar);", "+    _clearCache(_currentLocation);", "+    _reduced.insertChar(curChar);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be6b61de2abe633181f26b74e1f9f452", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 362, "methodNumberAfterChange": 352, "signatureBeforeChange": "    final private boolean jj_3R_310()", "signatureAfterChange": "    final private boolean jj_3R_271()", "diff": ["-  final private boolean jj_3R_310() {", "-    if (jj_scan_token(HOOK)) return true;", "-    if (jj_3R_115()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_183()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_271() {", "+    if (jj_scan_token(HOOK)) return true;", "+    if (jj_3R_116()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_172()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be73eb748ee7e157a1af2ddef67684a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "e2dfab60fe06b4a75e9a9d17c0a9c2d622def7c7", "commitAfterChange": "9ee7f82d7f7234787f3748460b46ad8c5d1fc967", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void setListFont(Font f)", "signatureAfterChange": "   public void setListFont(Font f)", "diff": ["-    Document doc = getErrorListPane().getDocument();", "-    if (doc instanceof StyledDocument) {", "-      ((StyledDocument)doc).setCharacterAttributes(0, doc.getLength()+1, set, false);", "+    SwingDocument doc = (SwingDocument) getErrorListPane().getDocument();", "+    if (doc instanceof SwingDocument) {", "+      doc.acquireWriteLock();", "+      try { ((SwingDocument)doc).setCharacterAttributes(0, doc.getLength() + 1, set, false); }", "+      finally { doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be7d0d0a72fba80a51e173bf0da37e93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/OptionConstants.java", "commitBeforeChange": "5d12d17919d89773eb593b891d0c35d1ca7c870d", "commitAfterChange": "40078c484eaf446ff33ef26e90689210f83bbcdd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static String getDefaultLookAndFeel()", "signatureAfterChange": "     public static String getDefaultLookAndFeel()", "diff": ["-      */", "+    /** Return the look-and-feel to use by default */", "-      if (PlatformFactory.ONLY.isMacPlatform()) return UIManager.getSystemLookAndFeelClassName();", "-      else ", "-        return UIManager.getCrossPlatformLookAndFeelClassName();", "+      return UIManager.getSystemLookAndFeelClassName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be90504d72ea281a8a6b610aa5b55e12", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 652, "methodNumberAfterChange": 634, "signatureBeforeChange": "    final private boolean jj_3R_163()", "signatureAfterChange": "    final private boolean jj_3R_166()", "diff": ["+  final private boolean jj_3R_166() {", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_98()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_206()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_163() {", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_97()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_201()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bea5ff1a3be2d933ef171f829ea3ccd8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ecd8712b87b08f04e81a172c17c295c61485659a", "commitAfterChange": "e240585fa71c6cba067e4f383e2111594b5db4e4", "methodNumberBeforeChange": 274, "methodNumberAfterChange": 274, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["+    config.addOptionListener(DISPLAY_ALL_COMPILER_VERSIONS, new ConfigOptionListeners.DisplayAllCompilerVersionsListener(_configFrame));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beab7e00a38a10a59e3054834a9bad29", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 341, "methodNumberAfterChange": 341, "signatureBeforeChange": "    final private boolean jj_3R_457()", "signatureAfterChange": "    final private boolean jj_3R_459()", "diff": ["-  final private boolean jj_3R_457() {", "-    if (jj_scan_token(CATCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_435()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_155()) return true;", "+  final private boolean jj_3R_459() {", "+    if (jj_scan_token(CATCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_437()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_158()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beac5982c7784d3cbb18daa4631fdfd8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public Object visit(IfThenStatement node)", "signatureAfterChange": "   public Class visit(IfThenStatement node)", "diff": ["-     */", "-    public Object visit(IfThenStatement node) {", "-        // Check the condition", "-        if (node.getCondition().acceptVisitor(this) != boolean.class) {", "-            throw new ExecutionError(\"condition.type\", node);", "-        }", "-", "-        node.getThenStatement().acceptVisitor(this);", "-        return null;", "-    }", "+   */", "+  public Class visit(IfThenStatement node) {", "+    // Check the condition", "+    if (node.getCondition().acceptVisitor(this) != boolean.class) {", "+      throw new ExecutionError(\"condition.type\", node);", "+    }", "+    ", "+    node.getThenStatement().acceptVisitor(this);", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "becc12b945d1eb1b6bb2d0765614f9e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "edc3544a227872bc7c7b20e7fb9fc2b7a3017d2d", "commitAfterChange": "aaf929e2f10e21e12d70415a67e84135593a5810", "methodNumberBeforeChange": 530, "methodNumberAfterChange": 530, "signatureBeforeChange": "          public void projectOpened(File projectFile, FileOpenSelector files)", "signatureAfterChange": "          public void projectOpened(File projectFile, FileOpenSelector files)", "diff": ["-      System.out.println(\"[3] \"+_runButton.getBounds(null));", "-      System.out.println(\"[4] \"+_runButton.getBounds(null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf05e4c1ca1f8d07146b77f8e2da72ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "dfd810274f578220ac2bc25dd7ac216d6cba7d82", "commitAfterChange": "124ee663125910ebb6f94bc3c28dc900fe2c43b7", "methodNumberBeforeChange": 222, "methodNumberAfterChange": 222, "signatureBeforeChange": "          public void interactionStarted()", "signatureAfterChange": "          public void interactionStarted()", "diff": ["+      _runAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf165bd71ad279aae13f449e1f07c26e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9d671cad5f849049059b2e199aea7279dd398525", "commitAfterChange": "ef7e8ed674f3435dc8cfe861d137f1cab241f5c2", "methodNumberBeforeChange": 582, "methodNumberAfterChange": 584, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["+              m.add(Utilities.createDelegateAction(\"Run File as Applet\", _runAppletAction));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf1aa62ad2a360178062f2f7d61eb485", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyAdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public Void forConstructorDef(ConstructorDef that)", "signatureAfterChange": "   public Void forConstructorDef(ConstructorDef that)", "diff": ["-    that.getStatements().visit(new BodyBodyAdvancedVisitor(md, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    that.getStatements().visit(new BodyBodyAdvancedVisitor(md, _file, _package, _importedFiles, _importedPackages, ", "+                                                           _classNamesInThisFile, continuations, _innerClassesToBeParsed));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf2dcac8ef8d3707628c48f11646b90a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "c8a7a8a9d3d089ab42661ede7d141969c6ed2339", "commitAfterChange": "edb148d96e488bb5de94fe3df6063e44425ab166", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   private void _runJavadoc(ArrayList<String> args, String classpath,                            File destDirFile, boolean allDocs)", "signatureAfterChange": "   private void _runJavadoc(ArrayList<String> args, String classpath,                            File destDirFile, boolean allDocs)", "diff": ["-      result = _javadoc(args.toArray(new String[0]), classpath);", "+      result = _javadoc(args.toArray(new String[args.size()]), classpath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf5ed5bcaddef1d6bc0db7e081783d83", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 60, "signatureBeforeChange": "     public void currThreadDied()", "signatureAfterChange": "     public void currThreadDied()", "diff": ["-        _notifyObject(_notifierLock);", "+        _notifyLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf67a0bdef2f083592dd613a6a6bfb55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsScriptController.java", "commitBeforeChange": "ff27298276d0b205036fe4b017017ca3896e9890", "commitAfterChange": "4ddb555fbb20c498ee5f44bc087ce9c848b2e79c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void setActionsEnabled()", "signatureAfterChange": "   public void setActionsEnabled()", "diff": ["+    _currentInteractionAction.setEnabled(_model.hasCurrentInteraction());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf764e79eb590fc441c6272f660de04e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/Context.java", "commitBeforeChange": "9e3824633ee746290537e9b5e107ba2db1504674", "commitAfterChange": "31da1983d1819399d97822faa171f51ddfde661b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     void declareMemberStaticImport(String member);", "signatureAfterChange": "     void declareMemberStaticImport(String member) throws ClassNotFoundException;", "diff": ["-    void declareMemberStaticImport(String member);", "+    void declareMemberStaticImport(String member) throws ClassNotFoundException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf793ca6f81b87cf8ecc30e9692ed199", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 552, "methodNumberAfterChange": 321, "signatureBeforeChange": "    final private boolean jj_3R_321()", "signatureAfterChange": "    final private boolean jj_3R_432()", "diff": ["+  final private boolean jj_3R_432() {", "+    if (jj_3R_210()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_453()) { jj_scanpos = xsp; break; }", "+    }", "-", "-  final private boolean jj_3R_321() {", "-    if (jj_3R_330()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_331()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf7ac603c9f8039058d138c2737bea7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 138, "signatureBeforeChange": "   private void _setMainFont()", "signatureAfterChange": "   private void _setMainFont()", "diff": ["-    //if (_debugPanel != null) _debugPanel.setFonts(f);", "+    _findReplace.setFieldFont(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf89e32caa1b815512fedf8f152fb014", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "dab739e9c0a893840c19d552b534083722093495", "commitAfterChange": "9d7de430d203354a52d3faa0378a92c50af92fb7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testNoJUnitErrors() throws BadLocationException, IOException", "signatureAfterChange": "   public void testNoJUnitErrors() throws Exception", "diff": ["-  public void testNoJUnitErrors() throws BadLocationException, IOException {", "+  public void testNoJUnitErrors() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf8c5a6b12ada260767b1be4d96d51b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/BooleanOptionComponentTest.java", "commitBeforeChange": "331da9dae5ca8d07aef3df8e995cb58d0f6f24d7", "commitAfterChange": "ad6842e7f3f5b3d0f8c5827298c4ec26a70a9f28", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void testApplyThenResetDefault()", "signatureAfterChange": "    public void testApplyThenResetDefault()", "diff": ["+    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf8ee42bd84a222f4098344fc8545164", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 223, "methodNumberAfterChange": 226, "signatureBeforeChange": "    private void _compileProject()", "signatureAfterChange": "    private void _compileProject()", "diff": ["-          _model.compileAll(); ", "+          _model.compileAll();", "-        finally { hourglassOff(); }", "+        finally { hourglassOff();}", "+    update(getGraphics()); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf9dcab7d4f9a8a9d7fa9dc6fb306b21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "      private static LinkedList<MethodData> _getVariableAccessorListHelper(SymbolData currClass)", "signatureAfterChange": "      private static LinkedList<MethodData> _getVariableAccessorListHelper(SymbolData currClass)", "diff": ["+      // Insure that we traverse the superclass hierarchy before we traverse the outer class hierarchy    ", "-      if (superClass != null) classes.addFirst(superClass); // Insure that we traverse the superclass hierarchy before we traverse the outer class hierarchy", "+      if (superClass != null) classes.addFirst(superClass); ", "-    // Eliminate those accessors that are inaccessible, that throw exceptions, that are static, that are shadowed, or that have a different return type", "+    // Eliminate those accessors that are inaccessible, that throw exceptions, that are static, that are shadowed, ", "+    // or that have a different return type", "-      boolean canSeeMethod = TypeChecker.checkAccessibility(new NullLiteral(JExprParser.NO_SOURCE_INFO), md.getMav(), md.getName(), md.getSymbolData(), currClass, \"method\", false);", "+      boolean canSeeMethod =", "+        TypeChecker.checkAccessibility(new NullLiteral(SourceInfo.NO_INFO), md.getMav(), md.getName(), ", "+                                       md.getSymbolData(), currClass, \"method\", false);", "-      if (canSeeMethod && (! md.hasModifier(\"static\")) && (md.getThrown().length == 0) && vd.getType().getSymbolData().isAssignableTo(md.getReturnType(), LanguageLevelConverter.OPT.javaVersion())) {", "+      if (canSeeMethod && (! md.hasModifier(\"static\")) && (md.getThrown().length == 0) &&", "+          vd.getType().getSymbolData().isAssignableTo(md.getReturnType(), LanguageLevelConverter.OPT.javaVersion())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfa00deeee7bd7316ee0633839f9dde7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testBooleanOps()", "signatureAfterChange": "   public void testBooleanOps() throws ExceptionReturnedException", "diff": ["-  public void testBooleanOps() {", "+  public void testBooleanOps() throws ExceptionReturnedException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfa14042190c6ae15ccd485559cc02ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "   public void compileAll() throws IOException", "signatureAfterChange": "   public void compileAll() throws IOException", "diff": ["-      ", "+", "-        File[] files = (File[]) filesToCompile.toArray(new File[0]);", "-        ", "+        File[] files = filesToCompile.toArray(new File[0]);", "+", "-        ", "+", "-          ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfa1e3c6e9b51212b3e5618b995f3925", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "8a099b753fcfb83be248d39f70edd5788e8b1222", "commitAfterChange": "4701dc92d8eb3da9b7f829b98cf858de261361f6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testInteractionPreventedFromExit()     throws BadLocationException, InterruptedException", "signatureAfterChange": "   public void testInteractionPreventedFromExit()     throws BadLocationException, InterruptedException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfa2365bd2c837fa0acb41afff24660a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "91061a0d47469bc7d07ba5fa464f35ab97f70dbb", "commitAfterChange": "296befb4a12a5cc35f5f70ed97c5006f2e9fc8bc", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public static void saveToFile(int index, File f)", "signatureAfterChange": "   public static void saveToFile(int index, File f)", "diff": ["-    System.out.println(\"saveToFile(\"+index+\", \"+f+\")\");", "-    System.out.println(\"\\t\"+names.get(index));", "+//    System.out.println(\"saveToFile(\"+index+\", \"+f+\")\");", "+//    System.out.println(\"\\t\"+names.get(index));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfb9f90dd5f35b195516d4872d3a60b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/MainFrame.java", "commitBeforeChange": "b5ca75a763639d99a2083bfdef1e75146bdb59d3", "commitAfterChange": "7f0431102d802f25498e6ad5a22057f937b25cb6", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    _outputView.makeActive();", "+    //_outputView.makeActive();", "+    /*", "+    */", "-    getContentPane().add(split3, BorderLayout.SOUTH);", "+    getContentPane().add(_errorPanel, BorderLayout.SOUTH);", "-", "-    //getContentPane().setLayout(new BoxLayout(getContentPane(),BoxLayout.Y_AXIS));", "-//    show();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfc4acbee7a4de8abb61c1a3f6b31ca5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaTestCase.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void setUp() throws Exception", "signatureAfterChange": "   protected void setUp() throws Exception", "diff": ["-    super.setUp();", "+    super.setUp();  // declared to throw Exception, forcing throws clause on preceding line", "+    assert newName != null;", "+//      Utilities.show(\"Setting '\" + newName + \"' as DrJava configuration file\");", "+      Utilities.clearEventQueue();", "+      Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfc62e5ea7875905b7593ac0d4c64bc0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 117, "signatureBeforeChange": "          public void testForSourceFile()", "signatureAfterChange": "          public void testForSourceFile()", "diff": ["-      _llv.forSourceFile(sf);", "+      testLLVisitor.forSourceFile(sf);", "-                 _llv._classNamesInThisFile.contains(\"Awesome\"));", "-      assertTrue(\"_classNamesInThisFile should contain the two ClassDefs.\", _llv._classNamesInThisFile.contains(\"Gnarly\"));", "+                 testLLVisitor._classNamesInThisFile.contains(\"Awesome\"));", "+      assertTrue(\"_classNamesInThisFile should contain the two ClassDefs.\", testLLVisitor._classNamesInThisFile.contains(\"Gnarly\"));", "-      assertTrue(\"_classNamesInThisFile should contain the InterfaceDef\", _llv._classNamesInThisFile.contains(\"NiftyWords\"));", "-      assertTrue(\"_classesToBeParsed should contain the two ClassDefs.\", _llv._classesToBeParsed.containsKey(\"Awesome\"));", "-      assertTrue(\"_classesToBeParsed should contain the two ClassDefs.\", _llv._classesToBeParsed.containsKey(\"Gnarly\"));", "-      assertTrue(\"_classesToBeParsed should contain the InterfaceDef\", _llv._classesToBeParsed.containsKey(\"NiftyWords\"));", "+      assertTrue(\"_classNamesInThisFile should contain the InterfaceDef\", testLLVisitor._classNamesInThisFile.contains(\"NiftyWords\"));", "+      assertTrue(\"_classesToBeParsed should contain the two ClassDefs.\", testLLVisitor._classesToBeParsed.containsKey(\"Awesome\"));", "+      assertTrue(\"_classesToBeParsed should contain the two ClassDefs.\", testLLVisitor._classesToBeParsed.containsKey(\"Gnarly\"));", "+      assertTrue(\"_classesToBeParsed should contain the InterfaceDef\", testLLVisitor._classesToBeParsed.containsKey(\"NiftyWords\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfdb783e0ff34c34edfe671cc68ea257", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "d41b5de79662496f09ec590840d7e35134702a41", "commitAfterChange": "fd26cc12b714205eb66ef1427d78a124c29d57fc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void shutdown()", "signatureAfterChange": "      public void shutdown()", "diff": ["-        _vm.dispose();", "+      _vm.dispose();", "+        //VM was shutdown prematurely", "+        _eventManager = null;", "+        //remove all remaining breakpoints", "+        Enumeration<Breakpoint> breakpoints = _breakpoints.elements();", "+        ", "+        while (breakpoints.hasMoreElements()) {", "+          Breakpoint bp = breakpoints.nextElement();", "+          bp.getDocument().removeBreakpoint(bp);", "+        }", "+        _breakpoints.clear();", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfe139ab3ceabea06a1745f58b73948d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "    protected void createEquals(SymbolData sd)", "signatureAfterChange": "    protected void createEquals(SymbolData sd)", "diff": ["-                                   new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, mavStrings), ", "+                                   new ModifiersAndVisibility(SourceInfo.NO_INFO, mavStrings), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bff43e5fd653169acfd8c87ef4623c03", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 507, "methodNumberAfterChange": 878, "signatureBeforeChange": "    final private boolean jj_3R_342()", "signatureAfterChange": "    final private boolean jj_3R_542()", "diff": ["-", "-  final private boolean jj_3R_342() {", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_542() {", "+    if (jj_3R_548()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bffe3328c76a6e7ec32e6501bf4a2231", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testIndentGrowTabAtStart()       throws BadLocationException, OperationCanceledException", "signatureAfterChange": "   public void testIndentGrowTabAtStart()       throws BadLocationException, OperationCanceledException", "diff": ["-    openDoc.syncCurrentLocationWithDefinitions(FOO_EX_1.length());", "-    int loc = openDoc.getCurrentDefinitionsLocation();", "+    openDoc.setCurrentLocation(FOO_EX_1.length());", "+    int loc = openDoc.getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c00ed29a66d41576b48adc0bfb635480", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartingNewStmt.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-   */", "+    */", "-    // For 0, imaginary delimiter at position -1", "-    if (prevDelimiterPos == -1) {", "-      prevDelimiterPos = -1;", "-    }", "+    // If no previous delimited exists, imaginary delimiter at position -1", "-    } catch (BadLocationException e) {", "-      throw new UnexpectedException(e);", "-    }", "+    } ", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "-    return (firstNonWSAfterDelimiter >= lineStart", "-              || firstNonWSAfterDelimiter == -1);", "+    return (firstNonWSAfterDelimiter >= lineStart || firstNonWSAfterDelimiter == -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c01ad13799199c20c074de9fdc3c4cfc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "194b7a090e0ed824f08942e6e6efd976dc158404", "commitAfterChange": "c0f3fda00a0dfdfc7ba1813b053360e729d2a0e8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void addInterpreter(String name, Object thisVal, Class<?> thisClass, Object[] localVars,                              String[] localVarNames, Class<?>[] localVarClasses)", "signatureAfterChange": "   public void addInterpreter(String name, Object thisVal, Class<?> thisClass, Object[] localVars,                              String[] localVarNames, Class<?>[] localVarClasses)", "diff": ["-    ClassLoader loader = _classPathManager.getClassLoader();", "-    TypeContext ctx = new TopLevelContext(loader);", "+    TypeContext ctx = new TopLevelContext(_interpreterLoader);", "-    ctx = new ClassSignatureContext(ctx, c, loader);", "+    ctx = new ClassSignatureContext(ctx, c, _interpreterLoader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c028ee91f25032222a7aa2fd3525e347", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private TypeContext makeContext(Iterable<CompilationUnit> sources, Iterable<? extends File> cp)", "signatureAfterChange": "      private TypeContext makeContext(Iterable<CompilationUnit> sources, Iterable<? extends File> cp)", "diff": ["-    return new TopLevelContext(new LibraryContext(new LibraryContext(classLib), sourceLib));", "+    return new TopLevelContext(new LibraryContext(new LibraryContext(classLib), sourceLib), _opt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c06b1a3592ccec0eb6ca76bd97faa435", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessTest.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testCompileWithJavaAssert()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileWithJavaAssert()     throws BadLocationException, IOException, InterruptedException", "diff": ["-      if (_model.getNumErrors() > 0) {", "+      if (_model.getCompilerModel().getNumErrors() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0744763e9f44e8e76e0ef45789c704e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/History.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public History()", "signatureAfterChange": "    public History()", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      DrJava.CONFIG.addOptionListener(HISTORY_MAX_SIZE, new HistorySizeOptionListener());", "-    }", "+    DrJava.CONFIG.addOptionListener(HISTORY_MAX_SIZE, new HistorySizeOptionListener());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0953d9d9c5270a5b8851540b698938c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/SlaveJVMRunner.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private static void _showErrorMessage(String cause, Throwable t)", "signatureAfterChange": "   private static void _showErrorMessage(String cause, Throwable t)", "diff": ["+    ", "+    _log.log(\"ERROR in Slave JVM Runner: \" + cause + \"; threw \" + t);", "-    else System.out.println(msg);", "+    else if (! Utilities.TextAreaMessageDialog.TEST_MODE) System.out.println(msg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0a426f2573fb9b7b630dec1a8753131", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/RMIInteractionsModel.java", "commitBeforeChange": "06a5c45ef1fc363387e831a72bae96256df629e8", "commitAfterChange": "d38c322133f95b0654ce8d1107bb215e7f56de2e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void addToClassPath(String path)", "signatureAfterChange": "   public void addProjectClassPath(URL path)", "diff": ["-  public void addToClassPath(String path) {", "-    _interpreterControl.addClassPath(path);", "+//  ", "+  public void addProjectClassPath(URL path){", "+    _interpreterControl.addProjectClassPath(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0da6ac9518c82b11a4afa3a5463b88a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "03dd354632fbfc12bf279640160bfd934404dc39", "commitAfterChange": "2714f88d04f312c23b21ec6a440193d44b7121ba", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "   public File getSaveFile(JFileChooser jfc) throws OperationCanceledException", "signatureAfterChange": "   public File getSaveFile(JFileChooser jfc) throws OperationCanceledException", "diff": ["-    // Fill in class name if untitled", "-    if (active.isUntitled()) {", "-      String className = active.getClassName();", "-      if (!className.equals(\"\")) {", "-        jfc.setSelectedFile(new File(jfc.getCurrentDirectory(), className));", "-      }", "+    // Fill in class name", "+    //if (active.isUntitled()) {", "+    String className = active.getClassName();", "+    if (!className.equals(\"\")) {", "+      jfc.setSelectedFile(new File(jfc.getCurrentDirectory(), className));", "+    //}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0dd214acd541529a592a24a6c2b0be3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "cd56f7a2a82093e6e34728c0b5dc6babe9356e0a", "commitAfterChange": "6f37af6087e88b55d504fabdb6eee22be7ba1948", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DefaultCompilerModel(GlobalModel m)", "signatureAfterChange": "   public DefaultCompilerModel(GlobalModel m)", "diff": ["-    _workDir = DrJava.getConfig().getSetting(OptionConstants.WORKING_DIRECTORY);", "+    _workDir = _model.getWorkingDirectory();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c105e39512a462cefda973f2fbcccfe4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TigerTest.java", "commitBeforeChange": "04cc8568d162c3c4786f2cc358e2ec2036956d39", "commitAfterChange": "6254ff3d9dfb9c1e2f215d5c9e8cf0a8cf540be1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testStaticImportOfFields()", "signatureAfterChange": "   public void testStaticImportOfFields()", "diff": ["-      \"import static javax.accessibility.AccessibleAction.*;\"+", "-      \"DECREMENT;\";", "-    assertEquals(javax.accessibility.AccessibleAction.DECREMENT,interpret(testString));", "+      \"import static javax.accessibility.AccessibleText.*;\"+", "+      \"CHARACTER;\";", "+    assertEquals(javax.accessibility.AccessibleText.CHARACTER,interpret(testString));", "-      \"String INCREMENT = \\\"BLAH!\\\";\"+", "-      \"INCREMENT;\";", "+      \"String CHARACTER = \\\"BLAH!\\\";\"+", "+      \"CHARACTER;\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1139bff59b84b9e46b6d9a2658dbc2d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 690, "methodNumberAfterChange": 519, "signatureBeforeChange": "    final private boolean jj_3R_563()", "signatureAfterChange": "    final private boolean jj_3R_443()", "diff": ["+", "+  final private boolean jj_3R_443() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(32)) jj_scanpos = xsp;", "+    if (jj_3R_163()) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_456()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_563() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(32)) jj_scanpos = xsp;", "-    if (jj_3R_181()) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_576()) { jj_scanpos = xsp; break; }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c124927f0ee1a488dd6e22d852ef18ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public boolean equals(Object other)", "signatureAfterChange": "     public boolean equals(Object other)", "diff": ["-      if ((other==null) || !(other instanceof BreakpointRegionTreeUserObj)) { return false; }", "-      @SuppressWarnings(\"unchecked\") BreakpointRegionTreeUserObj o = (BreakpointRegionTreeUserObj)other;", "+", "+      if (other == null || other.getClass() != this.getClass()) return false; ", "+      @SuppressWarnings(\"unchecked\") ", "+      BreakpointRegionTreeUserObj o = (BreakpointRegionTreeUserObj) other;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1560c56121dd644f7bee0781860e536", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 842, "methodNumberAfterChange": 741, "signatureBeforeChange": "    final private boolean jj_3R_297()", "signatureAfterChange": "    final private boolean jj_3R_301()", "diff": ["-", "-  final private boolean jj_3R_297() {", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_112()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_179()) return true;", "+", "+  final private boolean jj_3R_301() {", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_115()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_182()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c167dae09226bbcf48c672ad7d45efe5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d5a76eb30f8febc02797eff15a790d6bbcae28ae", "commitAfterChange": "1bfeb43f60ae9aad050d7651f4f24c070c19e2bd", "methodNumberBeforeChange": 605, "methodNumberAfterChange": 605, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["-              m.add(Utilities.createDelegateAction(\"Run File's Main Method\", _runAction));", "+              m.add(Utilities.createDelegateAction(\"Run File\", _runAction));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1756247bbbad57c4cefb6a560c4d5b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/RootNode.java", "commitBeforeChange": "f9b63c51c7bc39c2ca858a18aa7508745f80cf7d", "commitAfterChange": "d6d4677e688efef1e947ef9682a8dd44d0381e6b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "      public String toString()", "diff": ["-    return getData();", "+    return getData().toString();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c178ff74db9eb44a8797bc647ad2dab3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor.java", "commitBeforeChange": "2b3538f4ec792670cfb28bc41a5aee6f4c8718c0", "commitAfterChange": "c302d1db72cb508e0cec30d24e39d48cce8fd663", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public Void forInnerClassDefDoFirst(InnerClassDef that)", "signatureAfterChange": "   public Void forInnerClassDefDoFirst(InnerClassDef that)", "diff": ["-    System.err.println(\"JEIFPDFV.forInnerClassDefDoFirst called for \" + that.getName());", "+//    System.err.println(\"JEIFPDFV.forInnerClassDefDoFirst called for \" + that.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c194c1cf3cbd085d6cc5623bc741f142", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public void testSaveClearAndLoadHistory() throws DocumentAdapterException,     BadLocationException, InterruptedException, IOException", "signatureAfterChange": "   public void testSaveClearAndLoadHistory()       throws DocumentAdapterException, IOException", "diff": ["-  public void testSaveClearAndLoadHistory() throws DocumentAdapterException,", "-    BadLocationException, InterruptedException, IOException", "+  public void testSaveClearAndLoadHistory()", "+      throws DocumentAdapterException, IOException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c19cc53e5f4a952572c6d39efa98436f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "    private void _setupJavadocPanel(ConfigPanel panel)", "signatureAfterChange": "    private void _setupJavadocPanel(ConfigPanel panel)", "diff": ["-                                       \"Specifies the access level that Javadoc will use.\"));", "+                                       \"The lowest access level to include for fields and methods.\"));", "-                                       \"System Javadoc Links Version\", this,", "-                                       \"Specifies the versino of Javadoc that is available on your system.\"));", "+                                       \"Java Version for Javadoc Links\", this,", "+                                       \"The version of Java for generating links to online Javadoc documentation.\"));", "-                                 \"<html>Specifies the URL of the Java 1.3 API<br>\" +", "-                                 \"so Javadoc can link to Java classes.</html>\"));", "+                                 \"The URL to the Java 1.3 API, for generating links to library classes.\"));", "-                                 \"<html>Specifies the URL of the Java 1.4 API<br>\" +", "-                                 \"so Javadoc can link to Java classes.</html>\"));", "+                                 \"The URL to the Java 1.4 API, for generating links to library classes.\"));", "-                                  \"Specifies that Javadoc should be generated from the source roots.\"));", "+                                  \"<html>Whether Javadoc should be generated for all packages in<br>\" +", "+                                  \"an open document's source tree, rather than just the document's<br>\" +", "+                                  \"own package and sub-packages.</html>\"));", "-                                 \"Specifies extra parameters that should be passed to Javadoc.\"));", "+                                 \"Any extra parameters to pass to Javadoc.\"));", "-                               \"Specifies the default directory into which Javadoc should be generated\",", "+                               \"The default directory for saving Javadoc documentation.\",", "-                                  \"Specifies that Javadoc should always ask for the destination.\"));", "+                                  \"Whether Javadoc should always prompt the user for the destination directory.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1e04860166ebf667903b98f44a48c76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/gui/Main.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Main()", "signatureAfterChange": "   public Main()", "diff": ["-    listeners.put(STOP_ACTION,     stopAction);", "+//    listeners.put(STOP_ACTION,     stopAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1f20e37fc9cbed67181ae3980f431b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Boolean value(Object o)", "signatureAfterChange": "     public boolean contains(Object o)", "diff": ["-    public Boolean value(Object o) { return true; }", "+    public boolean contains(Object o) { return true; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c22be53a214f6216a26bc5f73e1faec1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "7b3e2baaa631329b7e3233840fa805eba66e7b61", "commitAfterChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 39, "signatureBeforeChange": "   private void _updateInsideQuote(ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private void _updateInsideQuote(ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-\t\t\t_splitCurrentIfCommentBlock(true, copyCursor);", "+\t\t\t_splitCurrentIfCommentBlock(true,false, copyCursor);", "-", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\"\",copyCursor);  // \\-\"", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\"\",copyCursor);// \\-\\\"", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\\\",copyCursor);// \\-\\\\"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c230056f632ec724197e49c30baaa44d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b41877b77eeda745672ca90a1522550ad38ffc52", "commitAfterChange": "77843ee4295c8f4f476e2041329a6fbe28b27dd7", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 71, "signatureBeforeChange": "   private void _setUpMenuBar()", "signatureAfterChange": "     private void _setUpMenuBar()", "diff": ["-  private void _setUpMenuBar() {", "+    private void _setUpMenuBar() {", "+\t//js     boolean showDebugger = (_debugPanel != null);", "+    boolean showDebugger = false;", "+    ", "+    if (showDebugger) _debugMenu = _setUpDebugMenu();", "+    if (showDebugger) _menuBar.add(_debugMenu);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c231e500f435ea64d6a1050c2be4ebf9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyFullJavaVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Void forSimpleAnonymousClassInstantiation(SimpleAnonymousClassInstantiation that)", "signatureAfterChange": "   public Void forSimpleAnonymousClassInstantiation(SimpleAnonymousClassInstantiation that)", "diff": ["-    System.err.println(\"Calling simpleAnonymousClassInstantiation Helper from InterfaceBody \" + that.getSourceInfo());", "+//    System.err.println(\"Calling simpleAnonymousClassInstantiation Helper from InterfaceBody \" + that.getSourceInfo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c25adfe5626d215b7bd35a4fb64e9a7a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public Object visit(BlockStatement node)", "signatureAfterChange": "   public Class visit(BlockStatement node)", "diff": ["-     */", "-    public Object visit(BlockStatement node) {", "-        // Enter a new scope", "-        context.enterScope();", "-", "-        // Do the type checking of the nested statements", "-        checkList(node.getStatements());", "-", "-        // Leave the current scope and store the defined variables", "-        // (a map of String-Class mappings) in the \"variables\" property", "-        node.setProperty(NodeProperties.VARIABLES, context.leaveScope());", "-        ", "-        return null;", "-    }", "+   */", "+  public Class visit(BlockStatement node) {", "+    // Enter a new scope", "+    context.enterScope();", "+    ", "+    // Do the type checking of the nested statements", "+    checkList(node.getStatements());", "+    ", "+    // Leave the current scope and store the defined variables", "+    // (a map of String-Class mappings) in the \"variables\" property", "+    node.setProperty(NodeProperties.VARIABLES, context.leaveScope());", "+    ", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c26293dbb178fbb0a6a44791797ec13f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Step.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _createRequest() throws DebugException", "signatureAfterChange": "   protected void _createRequest() throws DebugException", "diff": ["+    boolean excludeDrJava = false;  // will be an advanced config option", "+    if (excludeDrJava) {", "+      _request.addClassExclusionFilter(\"edu.rice.cs.drjava.*\");", "+      _request.addClassExclusionFilter(\"edu.rice.cs.util.*\");", "+    }", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c262cf6de4f3010d3065fc610b1cc90b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "commitAfterChange": "1f8260d28d77ced05a0c3194c27d53226694751c", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public Document getNextDocument(Document doc)", "signatureAfterChange": "   public Document getNextDocument(Document doc)", "diff": ["-      return getODDGivenIDoc(nextitem).getDocument();", "+      return getODDGivenIDoc(nextitem);", "-      return getODDGivenIDoc(nextitem).getDocument();", "+      return getODDGivenIDoc(nextitem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c26c200bae2616766a8bab81e0e023a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 55, "signatureBeforeChange": "     public void breakpointReached(Breakpoint bp)", "signatureAfterChange": "     public void breakpointReached(Breakpoint bp)", "diff": ["-        _notifyObject(_notifierLock);", "+        _notifyLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c26f1c04058ae2ac8aceed6d00b19a9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TopLevelContext.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   @Override public ClassType typeContainingMemberClass(String name, TypeSystem ts) throws AmbiguousNameException", "signatureAfterChange": "   @Override public ClassType typeContainingMemberClass(String name, TypeSystem ts) throws AmbiguousNameException", "diff": ["-        if (ts.containsClass(t, name)) { onDemandMatches.add(t); }", "+        // accessModule() is not actually the referencing context, but should have", "+        // the same package name, which is all that matters (private members ", "+        // should always be inaccessible if they're reached via an import)", "+        if (ts.containsClass(t, name, accessModule())) { onDemandMatches.add(t); }", "-        if (ts.containsStaticClass(t, name)) { onDemandMatches.add(t); }", "+        if (ts.containsStaticClass(t, name, accessModule())) { onDemandMatches.add(t); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2747ec5f9a73cee2d2a962c01a64ca0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/ConstantPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public short put(ConstantString cst)", "signatureAfterChange": "   public short put(ConstantString cst)", "diff": ["-    Info info = (Info)constants.get(cst);", "+    Info info = constants.get(cst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2780ad633a568f75e3c4dbeee13f4c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "61e5b2f858911ea73a13dba9fbe943d7030fb9fb", "commitAfterChange": "efaccf437175951cd0b6645fd51acf615d54103d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testInitialPosition()", "signatureAfterChange": "   public void testInitialPosition()", "diff": ["-                 1,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c27d7421952b1fb711c50b41a40da1a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 496, "methodNumberAfterChange": 478, "signatureBeforeChange": "    final private boolean jj_3R_99()", "signatureAfterChange": "    final private boolean jj_3R_100()", "diff": ["-  final private boolean jj_3R_99() {", "-    if (jj_3R_154()) return true;", "+  final private boolean jj_3R_100() {", "+    if (jj_3R_158()) return true;", "-    if (jj_3R_211()) jj_scanpos = xsp;", "+    if (jj_3R_236()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c289aff1e3bc147c7a5e602165b765ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void testCompileWithGenerics()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileWithGenerics()     throws BadLocationException, IOException, InterruptedException", "diff": ["-      _model.setResetAfterCompile(false);", "-      ", "-      _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2a01fe15e1b40a6e9b389bb4b95b022", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 639, "methodNumberAfterChange": 644, "signatureBeforeChange": "    final private boolean jj_3R_549()", "signatureAfterChange": "    final private boolean jj_3R_432()", "diff": ["+", "+  final private boolean jj_3R_432() {", "+    if (jj_3R_122()) return true;", "+    if (jj_3R_324()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_549() {", "-    if (jj_3R_123()) return true;", "-    if (jj_3R_423()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2a5e38d11bb68d58aee2608275ff84e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 626, "methodNumberAfterChange": 605, "signatureBeforeChange": "    final private boolean jj_3R_241()", "signatureAfterChange": "    final private boolean jj_3R_250()", "diff": ["+  final private boolean jj_3R_250() {", "+    if (jj_scan_token(HOOK)) return true;", "+    if (jj_3R_105()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_156()) return true;", "-  final private boolean jj_3R_241() {", "-    if (jj_scan_token(HOOK)) return true;", "-    if (jj_3R_102()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_152()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2b2aa4126a492aeea7ceb7ff36f3e3b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": "     private File _getSourceRoot(String packageName)       throws InvalidPackageException", "signatureAfterChange": "     private File _getSourceRoot(String packageName)       throws InvalidPackageException", "diff": ["-        sourceFile = _doc.getFile();", "+        sourceFile = getDocument().getFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2c324ead58c971c37c29dce1c7e609c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 490, "methodNumberAfterChange": 466, "signatureBeforeChange": "    final private boolean jj_3R_208()", "signatureAfterChange": "    final private boolean jj_3R_218()", "diff": ["+", "+  final private boolean jj_3R_218() {", "+    if (jj_scan_token(HOOK)) return true;", "+    if (jj_3R_97()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_148()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_208() {", "-    if (jj_scan_token(HOOK)) return true;", "-    if (jj_3R_94()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_144()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2da95af12d648a67b8d3b93006202c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "43b808b9e05f3378c0faae83fe4225562adc4c6e", "commitAfterChange": "723910d837b2fcdd9f4127559df4832f71fb62e8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testNonTestCaseError() throws Exception", "signatureAfterChange": "   public void testNonTestCaseError() throws Exception", "diff": ["-    TestShouldSucceedListener listener = new TestShouldSucceedListener() {", "+    JUnitTestListener listener = new JUnitTestListener() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2df51c52483edc2ef70b43b554486fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/Interpreter.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private Iterable<Node> parse(String code) throws InterpreterException", "signatureAfterChange": "      private Iterable<Node> parse(String code) throws InterpreterException", "diff": ["-      return new JavaCCParser(new StringReader(code)).parseStream();", "+      return new JavaCCParser(new StringReader(code), _opt).parseStream();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2e6e0e52280e3d1fa69b5d4d955714d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 505, "methodNumberAfterChange": 411, "signatureBeforeChange": "    final private boolean jj_3R_136()", "signatureAfterChange": "    final private boolean jj_3R_137()", "diff": ["-", "-  final private boolean jj_3R_136() {", "+  final private boolean jj_3R_137() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;", "-    if (jj_3R_180()) return true;", "+    if (jj_3R_181()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c30e242c1579c7fa95d527d3a36275de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      public Boolean value(Object val, Class<?> c)", "signatureAfterChange": "      public boolean contains(Object val, Class<?> c)", "diff": ["-    public Boolean value(Object val, Class<?> c) { return c.isInstance(val); }", "+    public boolean contains(Object val, Class<?> c) { return c.isInstance(val); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c34291d894788a41103a00df79405fbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/HistoryTest.java", "commitBeforeChange": "ae91856b53b869dea43c60b3424279a87db75fb5", "commitAfterChange": "a357e82c74cb27dc4ce8ef007203ad2bd5dfa25b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testLiveUpdateOfHistoryMaxSize()", "signatureAfterChange": "   public void testLiveUpdateOfHistoryMaxSize()", "diff": ["+    ", "+    Utilities.clearEventQueue();", "-    assertEquals(\"History size should be 20\",", "-                 20, _history.size());", "+    assertEquals(\"History size should be 20\", 20, _history.size());", "-", "-    assertEquals(\"History size should be 10\",", "-                 10, _history.size());", "-", "+   ", "+    Utilities.clearEventQueue();", "+    assertEquals(\"History size should be 10\", 10, _history.size());", "-    assertEquals(\"History size should still be 10\",", "-                 10, _history.size());", "+    assertEquals(\"History size should still be 10\", 10, _history.size());", "-", "-    assertEquals(\"History size should be 0\",", "-                 0, _history.size());", "+    assertEquals(\"History size should be 0\", 0, _history.size());", "-    assertEquals(\"History size should still be 0\",", "-                 0, _history.size());", "+    Utilities.clearEventQueue();", "+    assertEquals(\"History size should still be 0\", 0, _history.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c34e6da40ba366e1d5ad21ceb89eced3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/FileOptionComponent.java", "commitBeforeChange": "85538cb484722f3ee8b8f52d4f19defc02bd67d5", "commitAfterChange": "ec727abc662388138ad4bf94694974ef5e13db3c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void _updateButton(File c)", "signatureAfterChange": "      private void _updateTextField(File c)", "diff": ["-  ", "-  private void _updateButton(File c) {    ", "-    _button.setText(c.toString());", "+  ", "+  private void _updateTextField(File c) {    ", "+    _jtf.setText(c.getAbsolutePath());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c35e26db4b42bb80740f7b8bd7241b67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "7159df222d88dee270188fe2cbffe74bb173d159", "commitAfterChange": "c73227da8024bfd14e7a2df3af6435d7a78133b3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testReconstructor() throws IOException", "signatureAfterChange": "      public void testReconstructor() throws IOException", "diff": ["-    assertFalse(\"The document should not start out in the cache\", _cache.isDDocInCache(doc1));", "+    assertTrue(\"The document should start out in the cache\", _cache.isDDocInCache(doc1));", "-    assertFalse(\"The document should not be in the cache after an update\", _cache.isDDocInCache(doc1));", "+    assertFalse(\"The document should not be in the cache after an update\", _cache.isDDocInCache(doc1)); // force save", "+", "-    assertEquals(\"The make in the reconstructor was called 1nce\", 1, _doc_made);", "-    assertEquals(\"The save in the reconstructor was not called\", 0, _doc_saved);", "+    assertEquals(\"The make in the reconstructor was called once\", 1, _doc_made);", "+    assertEquals(\"The save in the reconstructor was called once\", 1, _doc_saved);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c377361fa0c4cd45cf0c7c9be4f305e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 801, "methodNumberAfterChange": 789, "signatureBeforeChange": "    final private boolean jj_3R_87()", "signatureAfterChange": "    final private boolean jj_3R_88()", "diff": ["+", "+  final private boolean jj_3R_88() {", "+    if (jj_3R_131()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_25()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_87() {", "-    if (jj_3R_129()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3_24()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c377b561b801be4148bb1b3495ebf491", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "1f1e1c194ec79b5577db174af86a812206a9ebf6", "commitAfterChange": "8470bac42027a288eff50252d965c363d15d41dc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testInteractionsCanSeeChangedClass()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testInteractionsCanSeeChangedClass()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    throws BadLocationException, IOException", "+    throws BadLocationException, IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c37b5a45374b027b8f6ce5bd0fa349d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0c8d146c06eba1c2298f0daceb39048930ad6325", "commitAfterChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": "          public void breakpointReached(Breakpoint bp)", "signatureAfterChange": "          public void breakpointReached(Breakpoint bp)", "diff": ["-    public void breakpointReached(Breakpoint bp) {}", "+    public void breakpointReached(Breakpoint bp) {", "+      _debugPanel.breakpointReached(bp);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3952ae49f57b4f29b3c023a20395d2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 260, "methodNumberAfterChange": 334, "signatureBeforeChange": "    final private boolean jj_3R_178()", "signatureAfterChange": "    final private boolean jj_3R_331()", "diff": ["-", "-  final private boolean jj_3R_178() {", "-    if (jj_3R_78()) return true;", "-      if (jj_3R_221()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_331() {", "+    if (jj_3R_338()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_353()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c396f9f64dd23fc1d66077424382ed7b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "2e0841eedc488bc59bd976576cad4ea91d3f46bd", "commitAfterChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 94, "signatureBeforeChange": "   public void setVisible(boolean vis)", "signatureAfterChange": "   public void setVisible(boolean vis)", "diff": ["-      updateProperties();", "+      _documentListener.changedUpdate(null);", "+      _workDirDocumentListener.changedUpdate(null);", "+      _javaDocumentListener.changedUpdate(null);", "+      _javaWorkDirDocumentListener.changedUpdate(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3ad548f3e788eb62ec6819ec7137620", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "c750f23eb2b9150b4fb75772deac7c17626a7d1c", "commitAfterChange": "74e4ff93e186e54c8f3a2ca5764d77cf5247e4cc", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   protected void _createNewDebugPort() throws IOException", "signatureAfterChange": "   protected void _createNewDebugPort() throws IOException", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      System.setProperty(\"drjava.debug.port\", String.valueOf(_debugPort));", "-    }", "+    System.setProperty(\"drjava.debug.port\", String.valueOf(_debugPort));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3ae243e069cc83322972c4f5008be4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fcfb3e435ad420a0dbbe54bf22acb85899b60361", "commitAfterChange": "973bf5c49a20d0673d8e1effdfd1142c4f96bbcb", "methodNumberBeforeChange": 638, "methodNumberAfterChange": 638, "signatureBeforeChange": "          public void currThreadSuspended()", "signatureAfterChange": "          public void currThreadSuspended()", "diff": ["-        //System.out.println(\"new _automaticTraceTimer AUTO_STEP_RATE=\"+AUTO_STEP_RATE+\", \"+System.identityHashCode(_automaticTraceTimer));                                ", "-        if((_automaticTraceTimer != null) && (!_automaticTraceTimer.isRunning()))", "+        //System.out.println(\"new _automaticTraceTimer AUTO_STEP_RATE=\"+AUTO_STEP_RATE+\", \" + ", "+        System.identityHashCode(_automaticTraceTimer);                                ", "+        if ((_automaticTraceTimer != null) && (!_automaticTraceTimer.isRunning()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3b9c75628c7224d4f8aa19fda803326", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/BackSlashTest.java", "commitBeforeChange": "a454f078c900245b418db671925f6207d6f1ff60", "commitAfterChange": "533552b81f1020221bb3fe1df1f370a4168db503", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testInsideQuotePrevious()", "signatureAfterChange": "   public void testInsideQuotePrevious()", "diff": ["-    assertEquals(\"#0.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+    assertEquals(\"#0.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model1));", "-    assertEquals(\"#2.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+    assertEquals(\"#2.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model1));", "-    assertEquals(\"#3.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+    assertEquals(\"#3.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model1));", "-    assertEquals(\"#4.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+    assertEquals(\"#4.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3c4633b077e5297b3b054bb156eb808", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/History.java", "commitBeforeChange": "fa78ee7a06602f123abf33b8aef0005c93bb3efa", "commitAfterChange": "f26f93ad5e4b158c960a6cefd64cf99f7137ecbc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public History()", "signatureAfterChange": "   public History()", "diff": ["-   */", "+  /** Constructor, so we can add a listener to the Config item being used. */", "-    DrJava.getConfig().addOptionListener(HISTORY_MAX_SIZE,", "-                                         new HistorySizeOptionListener());", "+    DrJava.getConfig().addOptionListener(HISTORY_MAX_SIZE, historyOptionListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3db4f7f8e6a4cb2c5315616658a20a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "b751c38fc70d22454ab93b852de5dd5f6f16d1ba", "commitAfterChange": "25137aee8580e8df5512ad30c8f4503bd397d8af", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void _rawCompile(File[] sourceRoots, File[] files, File[] excludedFiles) throws IOException", "signatureAfterChange": "      private void _rawCompile(File[] sourceRoots, File[] files, File[] excludedFiles) throws IOException", "diff": ["-    if (!buildDir.exists() && !buildDir.mkdirs()) {", "+    if ((buildDir!=null) && !buildDir.exists() && !buildDir.mkdirs()) {", "-    if (!workDir.exists() && !workDir.mkdirs()) {", "+    if ((workDir!=null) && !workDir.exists() && !workDir.mkdirs()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3e3f7c496a959a7a5761f49ae1b0e17", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionPrevLineStartsWith.java", "commitBeforeChange": "558f3e76b0939d235eb8771fbc6a284d80a06f72", "commitAfterChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc, int pos)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc, BraceReduction reducedModel, int pos)", "diff": ["-  boolean applyRule(DefinitionsDocument doc, int pos) {", "+  boolean applyRule(DefinitionsDocument doc, BraceReduction reducedModel, int pos) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3f5a31d1902587ea1626f0c702c7fbe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 327, "methodNumberAfterChange": 853, "signatureBeforeChange": "    final private boolean jj_3R_407()", "signatureAfterChange": "    final private boolean jj_3R_415()", "diff": ["-", "-  final private boolean jj_3R_407() {", "-    if (jj_scan_token(OR_ASSIGN)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_415() {", "+    if (jj_scan_token(OR_ASSIGN)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c410e21b403b57000efbdbccf9de9695", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 341, "methodNumberAfterChange": 499, "signatureBeforeChange": "    final private boolean jj_3R_317()", "signatureAfterChange": "    final private boolean jj_3R_598()", "diff": ["-", "-  final private boolean jj_3R_317() {", "-    if (jj_3R_102()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_354()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_598() {", "+    if (jj_3R_104()) return true;", "+    if (jj_3R_603()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c41e03b2f2dec45e86a353d8e808b30d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 432, "signatureBeforeChange": "    final private boolean jj_3R_281()", "signatureAfterChange": "    final private boolean jj_3R_280()", "diff": ["-", "-  final private boolean jj_3R_281() {", "-    if (jj_scan_token(CASE)) return true;", "-    if (jj_3R_37()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_93()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_280() {", "+    if (jj_scan_token(CASE)) return true;", "+    if (jj_3R_34()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_90()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c42ea66ebe4f0d7b179dfb0ebde914c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorCaretListener.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void _highlightErrorInSource(Position pos)", "signatureAfterChange": "   private void _highlightErrorInSource(Position pos)", "diff": ["-      String text = _openDoc.getDocument().getText(0, _openDoc.getDocument().getLength());", "+      String text = _openDoc.getText(0, _openDoc.getLength());", "-        nextNewline = _openDoc.getDocument().getLength();", "+        nextNewline = _openDoc.getLength();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c42f67e6260c7300f4013222e442e2ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 306, "methodNumberAfterChange": 318, "signatureBeforeChange": "    final private boolean jj_3R_383()", "signatureAfterChange": "    final private boolean jj_3R_384()", "diff": ["-", "-  final private boolean jj_3R_383() {", "-    if (jj_3R_107()) return true;", "-    if (jj_3R_282()) return true;", "+  final private boolean jj_3R_384() {", "+    if (jj_3R_109()) return true;", "+    if (jj_3R_288()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c434ae27ed0b235621813ac2eb1d41a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "fb1b63ba1878393caf36d179652660c6b03a0e25", "commitAfterChange": "dc69a85baa929a49ab45fc0c6b8335df9ae74d24", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void restartInterpreterJVM()", "signatureAfterChange": "   public void startInterpreterJVM()", "diff": ["-  public void restartInterpreterJVM() {", "-    if (isStartupInProgress()) {", "+  public void startInterpreterJVM() {", "+    if (isStartupInProgress() || isInterpreterRunning()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c46c75877eb80f7ee542ab9398ce025a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void _addHighlight(int from, int to) throws BadLocationException", "signatureAfterChange": "   private void _addHighlight(int from, int to) throws BadLocationException", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      _matchHighlight = (HighlightManager.HighlightInfo)_highlightManager.addHighlight(from, to, MATCH_PAINTER);", "-    }", "-    else {", "-      _matchHighlight = getHighlighter().addHighlight(from, to, MATCH_PAINTER);", "-    }", "+    _matchHighlight = (HighlightManager.HighlightInfo)_highlightManager.addHighlight(from, to, MATCH_PAINTER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c472374e1e5a50dbf7a4f6d6bc99bddf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "eba3fba4afbda1a0953798485a71c0bfbe1bb5cf", "commitAfterChange": "0010b17f7e497304215b54fd325dae9e3e72e53d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void testMetaKeyPress()", "signatureAfterChange": "   public void testMetaKeyPress() throws BadLocationException", "diff": ["-   public void testMetaKeyPress() {", "-     DefinitionsPane definitions = _frame.getCurrentDefPane();", "-     DefinitionsDocument doc = definitions.getOpenDocument().getDocument();", "-     _assertDocumentEmpty(doc, \"point 0\");", "-     /* The following is the sequence of key events that happen when the user presses Meta-a */", "+  public void testMetaKeyPress() throws BadLocationException {", "+    DefinitionsPane definitions = _frame.getCurrentDefPane();", "+    DefinitionsDocument doc = definitions.getOpenDocument().getDocument();", "+    _assertDocumentEmpty(doc, \"point 0\");", "+    // The following is the sequence of key events that happen when the user presses Meta-a", "-\t\t\t\t\t     InputEvent.META_MASK, KeyEvent.VK_META));", "-     _assertDocumentEmpty(doc, \"point 1\");", "+                                             InputEvent.META_MASK, KeyEvent.VK_META));", "+    _assertDocumentEmpty(doc, \"point 1\");", "-\t\t\t\t\t     InputEvent.META_MASK, KeyEvent.VK_W));", "-     _assertDocumentEmpty(doc, \"point 2\");", "+                                             InputEvent.META_MASK, KeyEvent.VK_W));", "+    _assertDocumentEmpty(doc, \"point 2\");", "-\t\t\t\t\t     InputEvent.META_MASK, KeyEvent.VK_UNDEFINED, 'w'));", "-     _assertDocumentEmpty(doc, \"point 3\");", "+                                             InputEvent.META_MASK, KeyEvent.VK_UNDEFINED, 'w'));", "+    _assertDocumentEmpty(doc, \"point 3\");", "-\t\t\t\t\t     InputEvent.META_MASK, KeyEvent.VK_W));", "-     _assertDocumentEmpty(doc, \"point 4\");", "+                                             InputEvent.META_MASK, KeyEvent.VK_W));", "+    _assertDocumentEmpty(doc, \"point 4\");", "-\t\t\t\t\t     0, KeyEvent.VK_META));", "-     _assertDocumentEmpty(doc, \"point 5\");", "-   }", "+                                             0, KeyEvent.VK_META));", "+    _assertDocumentEmpty(doc, \"point 5\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c492070fea049a188304b37b5189fcc4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public Component _extraClasspathComponent()", "signatureAfterChange": "      public Component _extraClassPathComponent()", "diff": ["-  public Component _extraClasspathComponent() {", "-    _extraClasspathList = new VectorFileOptionComponent(null, \"Extra Project Classpaths\", this);", "-    return _extraClasspathList.getComponent();", "+  public Component _extraClassPathComponent() {", "+    _extraClassPathList = new VectorFileOptionComponent(null, \"Extra Project Classpaths\", this);", "+    return _extraClassPathList.getComponent();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4b8c48a25b964d9438b78ee8e68a0b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "cca80f7677464053fcbc4892334d2d9d8d5de6a5", "commitAfterChange": "7c4507413beb0e75cdce1379ffec8d0279bed992", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   static boolean handleCommandLineArgs(String[] args)", "signatureAfterChange": "   static boolean handleCommandLineArgs(String[] args)", "diff": ["-    if (! heapSizeGiven && ! jvmArgString.contains(\"-Xmx\")) _jvmArgs.add(DEFAULT_MAX_HEAP_SIZE_ARG);", "+    if (! heapSizeGiven && jvmArgString.indexOf(\"-Xmx\")==0) _jvmArgs.add(DEFAULT_MAX_HEAP_SIZE_ARG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4be5d09f34a003663a9b1aa5e611302", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "591f8aac4f79eab75475a3d9dd862c3b019f02a1", "commitAfterChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   private FindResult _findNextInOtherDocs(final OpenDefinitionsDocument startDoc, int start, int len)", "signatureAfterChange": "   private FindResult _findNextInOtherDocs(final OpenDefinitionsDocument startDoc, int start, int len)", "diff": ["-        _doc.acquireReadLock();", "-        try { fr = _findNextInDocSegment(_doc, 0, _doc.getLength(), false, allWrapped); } ", "-        finally { _doc.releaseReadLock(); }", "+//        _doc.acquireReadLock();", "+//        try { ", "+        fr = _findNextInDocSegment(_doc, 0, _doc.getLength(), false, allWrapped); ", "+//        } ", "+//        finally { _doc.releaseReadLock(); }", "-    startDoc.acquireReadLock();", "-    try { return _findWrapped(startDoc, start, len, true); }  // last arg is true because searching all docs has wrapped", "-    finally { startDoc.releaseReadLock(); } ", "+//    startDoc.acquireReadLock();", "+//    try { ", "+    return _findWrapped(startDoc, start, len, true); ", "+//    }  // last arg is true because searching all docs has wrapped", "+//    finally { startDoc.releaseReadLock(); } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4cf23a9caf6df66a7c5c4e429f8398f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": "          public void waitResetDone() throws InterruptedException", "signatureAfterChange": "          public void waitResetDone() throws InterruptedException", "diff": ["-      synchronized(_resetLock) { ", "-        while (! _resetDone)  _resetLock.wait(); ", "-      }", "+      assertTrue(\"Reset did not complete before timeout\",", "+                 _resetDone.attemptEnsureSignaled(WAIT_TIMEOUT));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4ded178603f8fe5b239d1f88adbfa3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 511, "methodNumberAfterChange": 372, "signatureBeforeChange": "    final private boolean jj_3R_170()", "signatureAfterChange": "    final private boolean jj_3R_173()", "diff": ["-", "-  final private boolean jj_3R_170() {", "-    if (jj_3R_112()) return true;", "-      if (jj_3R_228()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_173() {", "+    if (jj_3R_115()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_231()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4e4ea8e50ca66410c05b15454b0fc53", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "303ddb2c47275a1e2c25f273f6ed234a39d50962", "commitAfterChange": "05170b9ac5bef61612128757c005ac85c724ec32", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": "    private void _showError(Throwable e, String title, String message)", "signatureAfterChange": "    private void _showError(Throwable e, String title, String message)", "diff": ["-    System.out.println(e);", "+//    System.out.println(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4e9942c796ba92f09e55bf994afa0d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ToolbarOptionComponent.java", "commitBeforeChange": "9c5777f5c4beabc12e35e029719473305aed7334", "commitAfterChange": "6f3940face1890969eb276e9b92d09c044ad9646", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void setDescription(String description)", "signatureAfterChange": "   public void setDescription(String description)", "diff": ["+    _noneButton.setToolTipText(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4fbb8c4abac5137315e3d5485292bdf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testCompileClasspathOKDifferentPackages()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileClasspathOKDifferentPackages()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    listener.checkCompileOccurred();", "+    listener2.checkCompileOccurred();", "+    _model.removeListener(listener2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c509163caf1ed5511b03d5e06863eaea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 444, "methodNumberAfterChange": 374, "signatureBeforeChange": "    final private boolean jj_3R_223()", "signatureAfterChange": "    final private boolean jj_3R_224()", "diff": ["-  final private boolean jj_3R_223() {", "-    if (jj_3R_248()) return true;", "-    if (jj_3R_104()) return true;", "+  final private boolean jj_3R_224() {", "+    if (jj_3R_249()) return true;", "+    if (jj_3R_105()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c51347df12a2abadefb5933669b100b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPane.java", "commitBeforeChange": "238b80ed49fba0c82440d65a4ea20069d3584d76", "commitAfterChange": "a33515e302c3e025e0c6d1210abc86e87bf78628", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   protected void matchUpdate(int offset)", "signatureAfterChange": "   protected void matchUpdate(int offset)", "diff": ["-      if (_notCrossesPrompt(to,from)) _addHighlight(from, to);", "+      /* if (_notCrossesPrompt(to,from)) */ _addHighlight(from, to);  // _listOfPrompt NOT USED", "-        if (_notCrossesPrompt(to,from)) _addHighlight(from - 1, to);", "+        /* if (_notCrossesPrompt(to,from)) */ _addHighlight(from - 1, to);  // _listOfPrompt NOT USED"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c54c0c135733c98ef3204fd595a9c4fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 644, "methodNumberAfterChange": 547, "signatureBeforeChange": "    final private boolean jj_3R_215()", "signatureAfterChange": "    final private boolean jj_3R_218()", "diff": ["-", "-  final private boolean jj_3R_215() {", "-    if (jj_3R_102()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_287()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_218() {", "+    if (jj_3R_105()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_291()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c55722b693322f7e273279d90205dbe5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void testInsideString()", "signatureAfterChange": "   public void testInsideString()", "diff": ["-    assertEquals(\"#0.0\", FREE, model0._getStateAtCurrent());", "+    assertEquals(\"#0.0\", FREE, model0.getStateAtCurrent());", "-    assertEquals(\"#0.1\", INSIDE_DOUBLE_QUOTE, model0._getStateAtCurrent());", "+    assertEquals(\"#0.1\", INSIDE_DOUBLE_QUOTE, model0.getStateAtCurrent());", "-    assertEquals(\"#0.2\", INSIDE_DOUBLE_QUOTE, model1._getStateAtCurrent());", "+    assertEquals(\"#0.2\", INSIDE_DOUBLE_QUOTE, model1.getStateAtCurrent());", "-    assertEquals(\"#0.3\", INSIDE_DOUBLE_QUOTE, model1._getStateAtCurrent());", "+    assertEquals(\"#0.3\", INSIDE_DOUBLE_QUOTE, model1.getStateAtCurrent());", "-    assertEquals(\"#0.4\", FREE, model1._getStateAtCurrent());", "+    assertEquals(\"#0.4\", FREE, model1.getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c55b88499d92603c9cc72276348311ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testInsertQuoteToQuoteBlock()", "signatureAfterChange": "   public void testInsertQuoteToQuoteBlock()", "diff": ["-    assertEquals(\"#3.6\", FREE, model1._getStateAtCurrent());", "+    assertEquals(\"#3.6\", FREE, model1.getStateAtCurrent());", "-    assertEquals(\"#4.6\", INSIDE_DOUBLE_QUOTE, model1._getStateAtCurrent());", "+    assertEquals(\"#4.6\", INSIDE_DOUBLE_QUOTE, model1.getStateAtCurrent());", "-    assertEquals(\"#5.6\", FREE, model1._getStateAtCurrent());", "+    assertEquals(\"#5.6\", FREE, model1.getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c57423ede03c9deb818624f079921c5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 856, "methodNumberAfterChange": 303, "signatureBeforeChange": "    final private boolean jj_3R_368()", "signatureAfterChange": "    final private boolean jj_3R_625()", "diff": ["+", "+  final private boolean jj_3R_625() {", "+    if (jj_3R_107()) return true;", "+    if (jj_3R_630()) jj_scanpos = xsp;", "-  final private boolean jj_3R_368() {", "-    if (jj_3R_104()) return true;", "-    if (jj_3R_419()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5818c3fb6250f840749cc0c5a150f7a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/CompositeException.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public static InterpreterException make(Iterable<? extends InterpreterException> errors)", "signatureAfterChange": "      public static InterpreterException make(Iterable<? extends InterpreterException> errors)", "diff": ["-    if (IterUtil.sizeOf(errors, 2) == 1) { return IterUtil.first(errors); }", "-    else {", "-      List<InterpreterException> normalized = new ArrayList<InterpreterException>();", "-      for (InterpreterException e : errors) {", "-        if (e instanceof CompositeException) {", "-          CollectUtil.addAll(normalized, ((CompositeException) e).exceptions());", "-        }", "-        else { normalized.add(e); }", "+    List<InterpreterException> normalized = new ArrayList<InterpreterException>();", "+    for (InterpreterException e : errors) {", "+      if (e instanceof CompositeException) {", "+        CollectUtil.addAll(normalized, ((CompositeException) e).exceptions());", "-      return new CompositeException(normalized);", "+      else { normalized.add(e); }", "+    return new CompositeException(normalized);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c58839952b8d432cf89486ec81ebab40", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testDocLocationAfterSwitch() throws BadLocationException", "signatureAfterChange": "   public void testDocLocationAfterSwitch() throws BadLocationException", "diff": ["+    Utilities.clearEventQueue();  // Empty the event queue of any asynchronous tasks", "-//    _log.log(\"testDocLocationAfterSwitch completed\");", "+    _log.log(\"testDocLocationAfterSwitch completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5927431ad6316268debb3c330dc3dd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileIOTest.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testClassFileSynchronizationAfterRename()     throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronizationAfterRename()     throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "diff": ["-    if (_model.getNumErrors() > 0) {", "+    if (_model.getCompilerModel().getNumErrors() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c59869147b444fb34f232893bfdd529a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerError.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public CompilerError(String message, boolean isWarning)", "signatureAfterChange": "   public CompilerError(String message, boolean isWarning)", "diff": ["-  public CompilerError(String message, boolean isWarning) { this(null, message, isWarning); }", "+  public CompilerError(String message, boolean isWarning) { super(message, isWarning); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c59f70fcfa8144e9167bee869a83b1e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "d8dc2cdeba22db2fb0316de83a445bb83f56ae4d", "commitAfterChange": "fecb09777cd63cca239611fe19e85d2f0e8401e9", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": "   final public MethodDeclaration methodDeclaration() throws ParseException", "signatureAfterChange": "   final public MethodDeclaration methodDeclaration() throws ParseException", "diff": ["+            checkModifiers(mf.accessFlags, Modifier.TRANSIENT | Modifier.VOLATILE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5ad10a0dd85188116e5a5bc8a55dbdd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/BraceTest.java", "commitBeforeChange": "a454f078c900245b418db671925f6207d6f1ff60", "commitAfterChange": "533552b81f1020221bb3fe1df1f370a4168db503", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testMakeBraceFailure()", "signatureAfterChange": "   public void testMakeBraceFailure()", "diff": ["-      brace = Brace.MakeBrace(\"k\", ReducedToken.FREE);", "+      brace = Brace.MakeBrace(\"k\", FREE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5b2a289d5d8f018581f21492cce2de8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 776, "methodNumberAfterChange": 721, "signatureBeforeChange": "    final private boolean jj_3R_595()", "signatureAfterChange": "    final private boolean jj_3R_596()", "diff": ["+", "+  final private boolean jj_3R_596() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_600()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_601()) return true;", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_595() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_599()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_600()) return true;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5ba59678de1aaabd7b5d2a4d0eb5ad6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 330, "methodNumberAfterChange": 551, "signatureBeforeChange": "    final private boolean jj_3R_370()", "signatureAfterChange": "    final private boolean jj_3R_367()", "diff": ["-  final private boolean jj_3R_370() {", "-    if (jj_3R_377()) return true;", "-      if (jj_3R_396()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_367() {", "+    if (jj_3R_373()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_386()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5bcfa27bdd43898f859e3458c3fcd96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "65add9d9f0de9278803d6c9a77b3294a4ab082f3", "commitAfterChange": "1ad8d0f619615b40333c2ef2eca24506e4639e2b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void testCompileWithGenerics()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileWithGenerics()     throws BadLocationException, IOException, InterruptedException", "diff": ["-        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "+        fail(\"compile failed: \" + getCompilerErrorString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5e6d561eee1a6a5c3b6cd42dba9d01f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/InterpreterException.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public InterpreterException(ParseError e)", "signatureAfterChange": "   public InterpreterException(ParseError e)", "diff": ["-    System.err.println(\"GotHere!\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5e99c3c732e075541dc71df9224ce7a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "b7584494b2aa0216aacee11c778709ed6dea34c0", "commitAfterChange": "14164b6a15fd606e897810fd89f2e7edec0280c4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public static boolean isInFileTree(File f, File root)", "signatureAfterChange": "   public static boolean inFileTree(File f, File root)", "diff": ["-  public static boolean isInFileTree(File f, File root) {", "-    if (root == null) return false;", "+  public static boolean inFileTree(File f, File root) {", "+    if (root == null || f == null) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6066a397caaf3f7eceec4ce6a417d92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testInsertQuoteToQuoteBlock()", "signatureAfterChange": "   public void testInsertQuoteToQuoteBlock()", "diff": ["-    assertEquals(\"#3.6\", FREE, model1.getStateAtCurrent());", "+    assertEquals(\"#3.6\", FREE, model1._getStateAtCurrent());", "-    assertEquals(\"#4.6\", INSIDE_DOUBLE_QUOTE, model1.getStateAtCurrent());", "+    assertEquals(\"#4.6\", INSIDE_DOUBLE_QUOTE, model1._getStateAtCurrent());", "-    assertEquals(\"#5.6\", FREE, model1.getStateAtCurrent());", "+    assertEquals(\"#5.6\", FREE, model1._getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c63beb268b952b46af7cf5fb846f3609", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9e44870a735a421536c42f4914c3c67d17884278", "commitAfterChange": "cc014c9517dfc9308c94be6291683cc9ba98f1d6", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 142, "signatureBeforeChange": "            private void _openProjectUpdate()", "signatureAfterChange": "            private void _openProjectUpdate()", "diff": ["+      _compileProjectAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c63d179a7d01306289801230c2a99571", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 455, "methodNumberAfterChange": 451, "signatureBeforeChange": "    final private boolean jj_3R_435()", "signatureAfterChange": "    final private boolean jj_3R_437()", "diff": ["+", "+  final private boolean jj_3R_437() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(30)) jj_scanpos = xsp;", "+    if (jj_3R_79()) return true;", "+    if (jj_3R_427()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_435() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(30)) jj_scanpos = xsp;", "-    if (jj_3R_78()) return true;", "-    if (jj_3R_425()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6687719dd0e758dcd9e4966cfd0ab10", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "da631ae365e5ae3fe7064b60f098ede0150c39bb", "commitAfterChange": "574257b530483460a9c0ce0cc5577b7fd93532dd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void setJUnitInProgress()", "signatureAfterChange": "     public void setJUnitInProgress()", "diff": ["-      SwingDocument doc = new SwingDocument();", "+      ErrorDocument doc = new ErrorDocument(getErrorDocumentTitle());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6768724b50e7f6694939e50329fdd58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 28, "signatureBeforeChange": "     @Override public Type visit(ObjectMethodCall node)", "signatureAfterChange": "     @Override public Type visit(ObjectMethodCall node)", "diff": ["-        // TODO: Check accessibility of method", "+        checkAccessibility(inv.method(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c681a984e5b53c33622bc46584f7ac1d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "327ee73f54692c57df3bde83527bbbd711a5efb8", "commitAfterChange": "4ddd7404761b70fbc7f3b729484fc360047df6c1", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "\r \r     public String toString()", "diff": ["-", "-    public String toString() {", "-      final String textFont = DrJava.getConfig().getSetting(OptionConstants.FONT_MAIN).toString();", "-      final String numFont = DrJava.getConfig().getSetting(OptionConstants.FONT_LINE_NUMBERS).toString();", "-      final StringBuilder sb = new StringBuilder(120);", "-//      sb.append(\"<html><pre><font face=\\\"sanserif\\\">\");", "-      sb.append(lineNumber());", "-      sb.append(\": \");", "-      String text = _region.getString();", "-      sb.append(text);", "-//      sb.append(StringOps.getBlankString(120 - text.length()));", "-//      sb.append(\"</pre></html>\");", "-      return sb.toString();", "-    }", "+\r", "+    public String toString() {\r", "+      final String textFont = DrJava.getConfig().getSetting(OptionConstants.FONT_MAIN).toString();\r", "+      final String numFont = DrJava.getConfig().getSetting(OptionConstants.FONT_LINE_NUMBERS).toString();\r", "+      final StringBuilder sb = new StringBuilder(120);\r", "+      sb.append(\"<html>\");\r", "+      sb.append(lineNumber());\r", "+      sb.append(\": \");\r", "+      String text = _region.getString();\r", "+      sb.append(text);\r", "+      sb.append(StringOps.getBlankString(120 - text.length()));\r", "+      sb.append(\"</html>\");\r", "+      return sb.toString();\r", "+    }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6a6aa29cf08dc6fbb9a1b4faa024372", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 648, "methodNumberAfterChange": 639, "signatureBeforeChange": "    final private boolean jj_3R_334()", "signatureAfterChange": "    final private boolean jj_3R_336()", "diff": ["+  final private boolean jj_3R_336() {", "+    if (jj_3R_344()) {", "+    if (jj_3R_345()) return true;", "-  final private boolean jj_3R_334() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_342()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_343()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6a87ee3097eaaec311082f2c07ae2cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/RecursiveFileListProperty.java", "commitBeforeChange": "098248186c2cd94be6c7bc9bfe60fa3101b5a0ba", "commitAfterChange": "200037d181721d5a77f697343bf01da60193d9d5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r   public void resetAttributes()", "signatureAfterChange": "\r   public void resetAttributes()", "diff": ["+    _attributes.put(\"squote\", null);\r", "+    _attributes.put(\"dquote\", null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b3972ef03601b936725190cdd0b25b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public Boolean value(Object o1, Object o2, Object o3, Object o4)", "signatureAfterChange": "     public boolean contains(Object o1, Object o2, Object o3, Object o4)", "diff": ["-    public Boolean value(Object o1, Object o2, Object o3) { return false; }", "-    public Boolean value(Object o1, Object o2, Object o3, Object o4) { return false; }", "+    public boolean contains(Object o1, Object o2, Object o3) { return false; }", "+    public boolean contains(Object o1, Object o2, Object o3, Object o4) { return false; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c71429760cada261ed52821ef96e7d66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "de413eda4232899a577fad80816630301e25a4de", "commitAfterChange": "1510cae783655f3e20fbad13671dbf97008c3ec2", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void removeRegion(final R r)", "signatureAfterChange": "   public void removeRegion(final R r)", "diff": ["-    if (r == null) throw new UnexpectedException(\"Region node for region \" + r + \" is null\");", "-    _regionManager.removeRegion(r);", "+    if (regionNode == null) throw new UnexpectedException(\"Region node for region \" + r + \" is null\");", "+//    _regionManager.removeRegion(r);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7313ecb8e3f41063c7414e60ed00cc7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/HelpFrame.java", "commitBeforeChange": "c750f23eb2b9150b4fb75772deac7c17626a7d1c", "commitAfterChange": "74e4ff93e186e54c8f3a2ca5764d77cf5247e4cc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       protected String getErrorText(URL url)", "signatureAfterChange": "      protected String getErrorText(URL url)", "diff": ["-", "-    String errorText = \"The Help files are currently unavailable.\";", "-    if (CodeStatus.DEVELOPMENT) {  // don't show this message in stable", "-      errorText += \"\\n\\nTo generate the help files, run the \\\"ant docs\\\" target\" +", "-        \" after compiling DrJava.\";", "-    }", "-    return errorText;", "+    return \"The Help files are currently unavailable.\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7595bf577266111e96a74b26981e641", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 764, "methodNumberAfterChange": 456, "signatureBeforeChange": "    final private boolean jj_3R_500()", "signatureAfterChange": "    final private boolean jj_3R_484()", "diff": ["+", "+  final private boolean jj_3R_484() {", "+    if (jj_3R_482()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_500() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_3R_94()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c75fd053564d644c6df641390dd64654", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 387, "methodNumberAfterChange": 386, "signatureBeforeChange": "    final private boolean jj_3R_316()", "signatureAfterChange": "    final private boolean jj_3R_320()", "diff": ["-  final private boolean jj_3R_316() {", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_105()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_280()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_320() {", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_107()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_287()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c768af7b3834c1092e62a2a725f54b0a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyFullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          public void xtestForConcreteMethodDefDoFirst()", "signatureAfterChange": "          public void xtestForConcreteMethodDefDoFirst()", "diff": ["-      ConcreteMethodDef cmd = new ConcreteMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      ConcreteMethodDef cmd = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "-                                                    new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                                    new Word(JExprParser.NO_SOURCE_INFO, \"methodName\"),", "+                                                    new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                                    new Word(SourceInfo.NO_INFO, \"methodName\"),", "-                                                    new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c76ed0c3f9dbfa68a34e201b6923ac24", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 648, "methodNumberAfterChange": 629, "signatureBeforeChange": "    final private boolean jj_3R_164()", "signatureAfterChange": "    final private boolean jj_3R_167()", "diff": ["+  final private boolean jj_3R_167() {", "+    if (jj_scan_token(DO)) return true;", "+    if (jj_3R_206()) return true;", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "-    if (jj_scan_token(DO)) return true;", "-    if (jj_3R_201()) return true;", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_97()) return true;", "-    if (jj_scan_token(RPAREN)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c77b1eec11e318115f41ba732ee87f7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "      public ReducedModelState getStateAtCurrent()", "signatureAfterChange": "      public ReducedModelState getStateAtCurrent()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); } ", "+    finally { releaseReadLock(); } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c77c4fd181db3c18aaf04a4216bdd682", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "2b3538f4ec792670cfb28bc41a5aee6f4c8718c0", "commitAfterChange": "c302d1db72cb508e0cec30d24e39d48cce8fd663", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "signatureAfterChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "diff": ["-      System.err.println(\"Generating duplicate variable error\");", "+//      System.err.println(\"Generating duplicate variable error\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c78beb721747c43ee25f3a9bf389808e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "0f4d2da263ed93d9981fed5c0de39394b1b0893c", "commitAfterChange": "fc51b2245942e6d87f48245a9b8cdb4aedbcacc2", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "         public void testParenthesizedAnonymousInnerClass() throws BadLocationException", "signatureAfterChange": "         public void testParenthesizedAnonymousInnerClass() throws BadLocationException", "diff": ["-    System.err.println(\"Original text:\\n\" + text);", "-    System.err.println(\"Indented text:\\n\" + indented);", "+//    System.err.println(\"Original text:\\n\" + text);", "+//    System.err.println(\"Indented text:\\n\" + indented);", "-    System.err.println(\"Computed result:\\n\" + doc.getText());", "+//    System.err.println(\"Computed result:\\n\" + doc.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c78dcd6282aed4a9735040519eecba21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testDebugSourcepath() throws Exception", "signatureAfterChange": "   public void testDebugSourcepath() throws Exception", "diff": ["-", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c791a8a73fe05905b02b1f67c76021ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6a170ab14316cceed86d0cd5eef7d1a5e1482088", "commitAfterChange": "8de007bf6be2b43ee2e0404f529aa96c640a30ed", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "   void _openJavadocUnderCursor()", "signatureAfterChange": "   void _openJavadocUnderCursor()", "diff": ["-    generateOpenJavadocList();", "-    if (_openJavadocList == null) {", "+    generateJavaAPIList();", "+    if (_javaAPIList == null) {", "-    PredictiveInputModel<OpenJavadocListEntry> pim =", "-      new PredictiveInputModel<OpenJavadocListEntry>(true,", "-                                                     new PredictiveInputModel.PrefixStrategy<OpenJavadocListEntry>(),", "-                                                     _openJavadocList);", "+    PredictiveInputModel<JavaAPIListEntry> pim =", "+      new PredictiveInputModel<JavaAPIListEntry>(true,", "+                                                 new PredictiveInputModel.PrefixStrategy<JavaAPIListEntry>(),", "+                                                 _javaAPIList);", "-        OpenJavadocListEntry foundItem = null;", "+        JavaAPIListEntry foundItem = null;", "-          for(OpenJavadocListEntry e: pim.getMatchingItems()) {", "+          for(JavaAPIListEntry e: pim.getMatchingItems()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7ae0002c5e80eafe6e79b5b610ccbcf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 205, "methodNumberAfterChange": 214, "signatureBeforeChange": "     public void generateJavadoc(FileSaveSelector saver)", "signatureAfterChange": "     public void generateJavadoc(FileSaveSelector saver) throws IOException", "diff": ["-    public void generateJavadoc(FileSaveSelector saver) {", "+    public void generateJavadoc(FileSaveSelector saver) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7c932e506555ac4c7a23be611efbc18", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   @Override public Type visit(SimpleMethodCall node)", "signatureAfterChange": "   @Override public Type visit(SimpleMethodCall node)", "diff": ["-    if (node.getArguments() != null) { args = node.getArguments(); }", "-    for (Expression e : args) { e.acceptVisitor(this); }", "+    if (node.getArguments() != null) { args = node.getArguments(); checkList(args); }", "-      t = ts.makeClassType(new FunctionWrapperClass(matches));", "+      t = ts.makeClassType(new FunctionWrapperClass(context.getPackage(), matches));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7d65d6570713b881295b6076d6bd9d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 335, "methodNumberAfterChange": 335, "signatureBeforeChange": "   private void addDocToNavigator(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   private void addDocToNavigator(final OpenDefinitionsDocument doc)", "diff": ["-    try {", "-      Utilities.invokeAndWait(new Runnable() {", "-        public void run() {", "-          try {", "-            if (doc.isUntitled()) _documentNavigator.addDocument(doc);", "-            else {", "-              String path = doc.getFile().getCanonicalPath();", "-              _documentNavigator.addDocument(doc, fixPathForNavigator(path)); ", "-            }", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        try {", "+          if (doc.isUntitled()) _documentNavigator.addDocument(doc);", "+          else {", "+            String path = doc.getFile().getCanonicalPath();", "+            _documentNavigator.addDocument(doc, fixPathForNavigator(path)); ", "-          catch(IOException e) { _documentNavigator.addDocument(doc); }", "-        }});", "-    }", "-    catch(InterruptedException e) { throw new UnexpectedException(e); }", "-    synchronized(_documentsRepos) { _documentsRepos.add(doc); }", "+        }", "+        catch(IOException e) { _documentNavigator.addDocument(doc); }", "+      }});", "+      synchronized(_documentsRepos) { _documentsRepos.add(doc); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7e9d6232554d6c83b51c243a5ec5684", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "555a52426e0b7a46bbe7591ec5d5d45d18885291", "commitAfterChange": "ff0c2424af3b72f584c63b0ff8ffed31ae421f7b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testCaretMovementCyclesWhenAtEnd() throws EditDocumentException", "signatureAfterChange": "   public void testCaretMovementCyclesWhenAtEnd() throws EditDocumentException", "diff": ["-    _doc.insertText(_doc.getLength(), \"test text\", InteractionsDocument.DEFAULT_STYLE);", "+    _doc.append(\"test text\", InteractionsDocument.DEFAULT_STYLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7f398b13ee14cbfc7a5f9db7df9f20d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["+      else {  // If searching all documents, the current document may have been kicked out of the cache", "+        _model.refreshActiveDocument();", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7f5ed917dad11bd832fd0318dc24461", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/swing/SwingUtil.java", "commitBeforeChange": "a42f39d6113f94f8758a85c690871c1cc3a1d3bf", "commitAfterChange": "70c1ecdee2b287deaefda546dba21394bc1868ef", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static void invokeAndWait(Runnable task)", "signatureAfterChange": "   public static void invokeAndWait(Runnable task)", "diff": ["-        else { DebugUtil.error.log(\"Unexpected InvocationTargetException caused by invokeAndWait\", cause); }", "+        else { error.log(\"Unexpected InvocationTargetException caused by invokeAndWait\", cause); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7f757c4b6c6b1c7d769d4693af5ef32", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "d8dc2cdeba22db2fb0316de83a445bb83f56ae4d", "commitAfterChange": "fecb09777cd63cca239611fe19e85d2f0e8401e9", "methodNumberBeforeChange": 845, "methodNumberAfterChange": 835, "signatureBeforeChange": "    final private boolean jj_3R_319()", "signatureAfterChange": "    final private boolean jj_3R_319()", "diff": ["-", "-  final private boolean jj_3R_319() {", "-    if (jj_scan_token(CLASS)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_549()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_550()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_551()) jj_scanpos = xsp;", "-    if (jj_3R_464()) return true;", "+", "+  final private boolean jj_3R_319() {", "+    if (jj_scan_token(CLASS)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_548()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_549()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_550()) jj_scanpos = xsp;", "+    if (jj_3R_464()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c814527ff26ab6465bdb9307c7bd5be5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1cda89f41e5a82d37339ff20e08702987c32bbfc", "commitAfterChange": "3b86afe47e23692474e8facf6c83b275a516f91e", "methodNumberBeforeChange": 532, "methodNumberAfterChange": 535, "signatureBeforeChange": "   private void _setDebugMenuItemsEnabled(boolean isEnabled)", "signatureAfterChange": "   private void _setDebugMenuItemsEnabled(boolean isEnabled)", "diff": ["+    _automaticTraceDebugAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c81aeb5ce2d79f20af532fa6f61c3db0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public static String getStackTrace(Throwable t)", "signatureAfterChange": "   public static String getStackTrace(Throwable t)", "diff": ["-    ", "+", "-      String item = (String) traceItems.get(i);", "+      String item = traceItems.get(i);", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8248bb06fe298aa55ed83e7904fc99a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 315, "methodNumberAfterChange": 840, "signatureBeforeChange": "    final private boolean jj_3R_336()", "signatureAfterChange": "    final private boolean jj_3R_341()", "diff": ["-", "-  final private boolean jj_3R_336() {", "-    if (jj_scan_token(HOOK)) return true;", "-    if (jj_3R_102()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_167()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_341() {", "+    if (jj_scan_token(HOOK)) return true;", "+    if (jj_3R_105()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_170()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c84695c1459158cde16b05ac9e651fe5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/MovingDocumentRegion.java", "commitBeforeChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "commitAfterChange": "2d393792d3779835588c185ebb45db67c3e34dc4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public String getString()", "signatureAfterChange": "   public String getString()", "diff": ["-  public String getString() { return _string; }", "+  public String getString() { ", "+    StringBuilder result = new StringBuilder(120);", "+    result.append(_stringSuspension.eval()); ", "+    int length = result.length();", "+//    if (length < 120) result.append(AbstractDJDocument.getBlankString(120 - length));", "+//    result.setLength(120);  // pads on right with null characters", "+    return result.toString();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c864bfbe7599763807009d800282d7b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "fee21edb1b15f1499b5409a250cdb90d3f204739", "commitAfterChange": "e100da4da75b9cbdfc04df45bf52679ed811f23a", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 168, "signatureBeforeChange": "   public File[] getNewFilesInProject()", "signatureAfterChange": "   public File[] getNewFilesInProject()", "diff": ["-      if(!_state.inProject(f) && !_state.isExcludedFile(f)) {", "+      if(!isAlreadyOpen(f) && !_state.isExcludedFile(f)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c868b62f7f08119c960b14a2e33c0c54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "75d6ee48e583e9a62b38304dae2bad1322e37e97", "commitAfterChange": "61ae7f6f012a73a5cdd538e20c7da40dadf1362f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   protected final void quitSlave()", "signatureAfterChange": "   protected final void quitSlave()", "diff": ["+    debug.log(\"Entered state \" + State.FRESH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c86d48888d4430339e54d2c152c212f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionInsideCommentTest.java", "commitBeforeChange": "1cb938b1998dc1cd68c3e4689c986e43001ea1ec", "commitAfterChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void setUp()", "signatureAfterChange": "      public void setUp() throws Exception", "diff": ["-  public void setUp() {", "+  public void setUp() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c86e7aaa8d2138fae196ba7edbfbc1e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "fb8ddcbfd71bd75d2b307b4e83f7a834ec364082", "commitAfterChange": "be84679bc73e85f88d6958fbfdf8b35be73855ab", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "   private synchronized void _stepHelper(int flag, boolean shouldNotify)     throws DebugException", "signatureAfterChange": "   private synchronized void _stepHelper(int flag, boolean shouldNotify)     throws DebugException", "diff": ["-    if (_suspendedThreads.size() <= 0) {", "-      throw new IllegalStateException(\"Cannot step if no threads are suspended.\");", "+    if (_suspendedThreads.size() <= 0 || _runningThread != null) {", "+      throw new IllegalStateException(\"Cannot step if the current thread is not suspended.\");", "-    // copy the variables back into the thread from the appropriate interpreter", "+    // Copy the variables back into the thread from the appropriate interpreter.", "+    // We do this before stepping since DrJava will hang if you try to copy back", "+    // variables after creating the step request."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c873abe09427b8724fd7028a1558f9cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 351, "methodNumberAfterChange": 763, "signatureBeforeChange": "    final private boolean jj_3R_383()", "signatureAfterChange": "    final private boolean jj_3R_315()", "diff": ["-  final private boolean jj_3R_383() {", "-    if (jj_3R_312()) return true;", "+  final private boolean jj_3R_315() {", "+    if (jj_scan_token(BITWISE_OR)) return true;", "+    if (jj_3R_314()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c87ee0985b5f6b19cc28ce316c61d1b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1313de8815d48e0a1c60eb5bee6900b6b7af3993", "commitAfterChange": "802c4acbf71daa5d149dbcd67d1f360241574951", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 165, "signatureBeforeChange": "   private void _setUpToolBar()", "signatureAfterChange": "   private void _setUpToolBar()", "diff": ["-    _toolBar.add(_createToolbarButton(_junitAction));", "+    _toolBar.add(_createToolbarButton(_junitAllAction));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c88bce20e08de30d3e3f4b335b0bd165", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/History.java", "commitBeforeChange": "772d55948f939a494c28e52313a1162cba5534b8", "commitAfterChange": "444cb9c318707ca2f9a6eaa5854ba2be0fcd383e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void writeToFile(FileSaveSelector selector, String editedVersion) throws IOException", "signatureAfterChange": "   public void writeToFile(FileSaveSelector selector, String editedVersion)      throws IOException", "diff": ["-  public void writeToFile(FileSaveSelector selector, String editedVersion) throws IOException {", "+  public void writeToFile(FileSaveSelector selector, String editedVersion) ", "+    throws IOException", "+  {", "+    ", "+    // Make sure we ask before overwriting", "-      if (c.getName().indexOf('.') == -1) {", "-        c = new File(c.getAbsolutePath() + \".\" +", "-                     InteractionsHistoryFilter.HIST_EXTENSION);", "+      if (!c.exists() || selector.verifyOverwrite()) {", "+        if (c.getName().indexOf('.') == -1) {", "+          c = new File(c.getAbsolutePath() + \".\" +", "+                       InteractionsHistoryFilter.HIST_EXTENSION);", "+        }", "+        FileOutputStream fos = new FileOutputStream(c);", "+        OutputStreamWriter osw = new OutputStreamWriter(fos);", "+        BufferedWriter bw = new BufferedWriter(osw);", "+        bw.write(HISTORY_FORMAT_VERSION_2 + editedVersion, 0, HISTORY_FORMAT_VERSION_2.length() + editedVersion.length());", "+        bw.close();", "-      FileOutputStream fos = new FileOutputStream(c);", "-      OutputStreamWriter osw = new OutputStreamWriter(fos);", "-      BufferedWriter bw = new BufferedWriter(osw);", "-      if (editedVersion == null) {", "-        editedVersion = getHistoryAsStringWithSemicolons();", "-      }", "-      bw.write(HISTORY_FORMAT_VERSION_2 + editedVersion, 0, HISTORY_FORMAT_VERSION_2.length() + editedVersion.length());", "-      bw.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c89b3ec0fd7ba74dd4dc053fffe95a80", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/KeyStrokeOptionComponentTest.java", "commitBeforeChange": "331da9dae5ca8d07aef3df8e995cb58d0f6f24d7", "commitAfterChange": "ad6842e7f3f5b3d0f8c5827298c4ec26a70a9f28", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testApplyThenResetDefault()", "signatureAfterChange": "    public void testApplyThenResetDefault()", "diff": ["+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c89dd4b9ff2712a293a84ce2a693bd3c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 754, "methodNumberAfterChange": 752, "signatureBeforeChange": "    final private boolean jj_3R_145()", "signatureAfterChange": "    final private boolean jj_3R_149()", "diff": ["+", "+  final private boolean jj_3R_149() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_239()) return true;", "+    if (jj_3R_90()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_494()) jj_scanpos = xsp;", "-  final private boolean jj_3R_145() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_214()) return true;", "-    if (jj_3R_90()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_490()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8ab8f60c86ac2e521853dca339f8317", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/InputStreamRedirector.java", "commitBeforeChange": "7d7d651695cc4a26c75cdfb50217f79acc4c45a4", "commitAfterChange": "641e8d72a9e70ecaee90e1431ba7ab971af51ca9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void _readInputIntoBuffer() throws IOException", "signatureAfterChange": "   private void _readInputIntoBuffer() throws IOException", "diff": ["-    if (input.equals(\"\")) throw new IOException(\"_getInput() must return non-empty input!\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8d6c9579accf72b268806b6341ea0fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DrJavaProperty.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public boolean equals(Object other)", "signatureAfterChange": "   public boolean equals(Object other)", "diff": ["-    DrJavaProperty o = (DrJavaProperty)other;", "-    return _name.equals(o._name) && (isCurrent() == o.isCurrent()) && _value.equals(o._value);", "+", "+    DrJavaProperty o = (DrJavaProperty) other;", "+    return _name.equals(o._name) && _value.equals(o._value) && (_isCurrent == o._isCurrent);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f2d58d1dd683af21114c401c79222c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyAdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Void forCatchBlock(CatchBlock that)", "signatureAfterChange": "   public Void forCatchBlock(CatchBlock that)", "diff": ["-    b.getStatements().visit(new BodyBodyIntermediateVisitor(bd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    b.getStatements().visit(new BodyBodyIntermediateVisitor(bd, _file, _package, _importedFiles, _importedPackages, ", "+                                                            _classNamesInThisFile, continuations, _innerClassesToBeParsed));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f822ca5f41a7e6fad888ad60e0d4c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 440, "signatureBeforeChange": "    final private boolean jj_3_46()", "signatureAfterChange": "    final private boolean jj_3_48()", "diff": ["-", "-  final private boolean jj_3_46() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_39()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_109()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(RPAREN)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3_48() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_36()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_106()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(RPAREN)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c90bb38b9bdccd3697edcc326485bb59", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": "   void debuggerClearAllBreakpoints()", "signatureAfterChange": "   void debuggerClearAllBreakpoints()", "diff": ["-    _model.getDebugger().removeAllBreakpoints();", "+    try {", "+      _model.getDebugger().removeAllBreakpoints();", "+    }", "+    catch (DebugException de) {", "+      _showError(de, \"Debugger Error\",", "+                 \"Could not remove all breakpoints.\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c91157c186c8c4af3e053d1ed7a9eb50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "    protected JUnitErrorModel getErrorModel()", "signatureAfterChange": "    protected JUnitErrorModel getErrorModel()", "diff": ["-    return getModel().getJUnitErrorModel();", "+    return getModel().getJUnitModel().getJUnitErrorModel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9297aa8f80eff11581acd6130ce713b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 548, "methodNumberAfterChange": 864, "signatureBeforeChange": "    final private boolean jj_3R_441()", "signatureAfterChange": "    final private boolean jj_3R_438()", "diff": ["-", "-  final private boolean jj_3R_441() {", "-    if (jj_3R_451()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_472()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_438() {", "+    if (jj_3R_450()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_481()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c93b018ebc5ee906de32e7ea0a4d71fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "bd2e852d4b09497531ae79af49475815d01d70b1", "commitAfterChange": "85b72c50d3f809a70141774d731cbef2c25b2f7f", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public int showDialog(File initialSelection)", "signatureAfterChange": "   public int showDialog(File initialSelection)", "diff": ["+      _defaultSelectedFile = initialSelection;", "+    }", "+    if (!_treeIsGenerated || _forceTreeGenerate) {", "-      setSelectedDirectory(initialSelection);", "+    }", "+    else {", "+      collapseAll();", "+      updateTreeSelectionPath();", "-    try {", "-      setAlwaysOnTop(true);", "-    } catch(SecurityException se) { }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9535e033396b26f7bf48a648fd91f78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "f6810ad68cbb0aaa0d9f5ff0052437da87098ab7", "commitAfterChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void setIndent(final int indent)", "signatureAfterChange": "   public void setIndent(final int indent)", "diff": ["-    DrJava.getConfig().setSetting(INDENT_LEVEL,new Integer(indent));", "+    DrJava.getConfig().setSetting(INDENT_LEVEL, indent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9681b469138166cefbc97cc1d500031", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 202, "signatureBeforeChange": "     public boolean isModifiedSinceSave()", "signatureAfterChange": "     public boolean isModifiedSinceSave()", "diff": ["-      if(_cache.isDDocInCache(this)){", "+      if(_cacheAdapter.isReady()){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c976f38f48ebff73ddc3b1b14b57cfd1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "4fb080a38871d6561e99bfdfdb664ff987fb15c5", "commitAfterChange": "d8298bba22e8675e12094f851d61d88ab6c6f68a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private void _remove()", "signatureAfterChange": "   private void _remove()", "diff": ["+    setChanging(true);", "+    setChanging(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c97c448e18135f5757cf8b3dab4f2e74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "7b90d9227a34693633b434e1d2773067e65a70e5", "commitAfterChange": "1b1a2ff927caf38a8f2ba21780232fcbeb4319bb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   protected String interpret(String input) throws DocumentAdapterException", "signatureAfterChange": "   protected String interpret(String input) throws DocumentAdapterException", "diff": ["-    _model.interpretCurrentInteraction();", "-", "-    // wait for interpret over", "-    while (listener.interactionEndCount == 0) {", "+    try {", "-        try {", "-          listener.wait();", "-        }", "-        catch (InterruptedException ie) {", "-          throw new UnexpectedException(ie);", "-        }", "+        _model.interpretCurrentInteraction();", "+        listener.wait();", "-", "+    catch (InterruptedException ie) {", "+      throw new UnexpectedException(ie);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c97e3f46b1e418cfc099e006b768b59e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassMemberChecker.java", "commitBeforeChange": "73d8f0963e3941f0992013e94dd38c610fad8320", "commitAfterChange": "79f5d66e5d12491f568b49d5064798e6d989d102", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void checkSignatures(Iterable<Node> nodes)", "signatureAfterChange": "      private void checkClassSignatures(Iterable<Node> nodes)", "diff": ["-  private void checkSignatures(Iterable<Node> nodes) {", "-    SignatureVisitor sig = new SignatureVisitor();", "+  ", "+  private void checkClassSignatures(Iterable<Node> nodes) {", "+    ClassMemberSignatureVisitor sig = new ClassMemberSignatureVisitor();", "+    for (Node n : nodes) { n.acceptVisitor(sig); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9877c0b70c7bb74f77db101a484d843", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 886, "methodNumberAfterChange": 867, "signatureBeforeChange": "    final private boolean jj_3R_487()", "signatureAfterChange": "    final private boolean jj_3R_385()", "diff": ["+  final private boolean jj_3R_385() {", "+    if (jj_scan_token(LBRACE)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_401()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(86)) jj_scanpos = xsp;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_402()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(RBRACE)) return true;", "-    if (jj_scan_token(LBRACE)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_507()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(86)) jj_scanpos = xsp;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_508()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(RBRACE)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c987a384a689b3b3bafabac01cb41b4c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/KeyStrokeOption.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public String format(KeyStroke k)", "signatureAfterChange": "   public String format(KeyStroke k)", "diff": ["-      String key = (String) keys.get(new Integer(k.getKeyCode()));", "+      String key = keys.get(new Integer(k.getKeyCode()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c98dce4af3e2c584b7bbc3eff35e186e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "e28d42989a089b15d3a01e7dd19b426bc7021c04", "commitAfterChange": "261ca8732921a2a5c58b2777d5419ddfe2c261df", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testNoClassFile() throws Exception", "signatureAfterChange": "   public void testNoClassFile() throws Exception", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c98f9f7c78030042ddb04ea2868e8c02", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 592, "methodNumberAfterChange": 577, "signatureBeforeChange": "    final private boolean jj_3R_346()", "signatureAfterChange": "    final private boolean jj_3R_349()", "diff": ["-  final private boolean jj_3R_346() {", "-    if (jj_3R_354()) return true;", "+  final private boolean jj_3R_349() {", "+    if (jj_3R_357()) return true;", "-    if (jj_3R_367()) jj_scanpos = xsp;", "+    if (jj_3R_370()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9b2afbaef58a79d026cfc999795af24", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "df9cbdf4ec8cbcbc3942b966a48a15d33dcac7ed", "commitAfterChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "          private CounterSlave()", "signatureAfterChange": "          private CounterSlave() throws RemoteException", "diff": ["-    private CounterSlave() { }", "+    private CounterSlave() throws RemoteException { }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9b53b06c26cd801bc17ca45c5b630e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/src-jsr14v2_0/edu/rice/cs/drjava/model/compiler/JSR14v20Compiler.java", "commitBeforeChange": "94e2caff41bc6177b26a58a9e392856f6c52c5f9", "commitAfterChange": "3e39a82bec763ada9f5a933ea34ece6f3d39aa18", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "    protected void initCompiler(File[] sourceRoots)", "signatureAfterChange": "    protected void initCompiler(File[] sourceRoots)", "diff": ["-    System.out.println(\"initCompiler\");", "-    System.out.println(\"about to make a JavaCompiler\");", "-    System.out.println(\"made a JavaCompiler\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9c22a5305c34c8e0e14aa205fcd0ba0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "f890e4f390e6dffdf4acc5a20fdfaf842af067ae", "commitAfterChange": "7ea76f9d0ba4fdeba8f11e0e1f676da0dad79852", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testRemoveTabs2()", "signatureAfterChange": "   public void testRemoveTabs2()", "diff": ["-    defModel.setIndent(2);", "-", "-    \"  token = nextToken(); // read trailing parenthesis\\n\" +", "-    \"  if (token != ')')\\n\" +", "-    \"    throw new ParseException(\\\"wrong number of arguments to |\\\");\\n\";", "+    \" token = nextToken(); // read trailing parenthesis\\n\" +", "+    \" if (token != ')')\\n\" +", "+    \"   throw new ParseException(\\\"wrong number of arguments to |\\\");\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9c85c4c29690f35b070f8cd00c89471", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c5ab9d91688dca7fa6244117a62a5f0f85d131ec", "commitAfterChange": "fa3227bd8ed65d422e78bb16b48f5f807a121783", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void showDebugger()", "signatureAfterChange": "   public void showDebugger()", "diff": ["-    _debuggerEnabledMenuItem.setState(true);", "+    _setDebugMenuItemsEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9ccc3f8467965215d757cd5c7313059", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "6f064a351cf6f32ca81eb7bd4e1d9f192f6a46c6", "commitAfterChange": "4c20648756c871d7891d04fa6baa315408a26469", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testInsertGap()", "signatureAfterChange": "  \tpublic void testInsertGap()", "diff": ["-\t\t\t//inserts a gap. ", "-\t\t\tmodel1.insertGap(4);", "+\t\t\tinsertGap(model1, 4);", "-\t\t\tmodel2.insertGap(5);", "+\t\t\tinsertGap(model2, 5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9d0dfc15f183b73b15ef2dd024faea4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectMenuTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testSetBuildDirectory() throws MalformedProjectFileException, IOException", "signatureAfterChange": "      public void testSetBuildDirectory() throws MalformedProjectFileException, IOException", "diff": ["+    Utilities.clearEventQueue();  // ensure that listener tasks have completed", "+    Utilities.clearEventQueue();", "+", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9e97029fa6365c91032e5014826e514", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/GlobalModelTest.java", "commitBeforeChange": "bf7de534c5ae8fec052b662fbed00403ec0bf236", "commitAfterChange": "9ce808f40b6076339d815a22e65403b4a39abfe7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testSaveFromFileMenu() throws BadLocationException", "signatureAfterChange": "      public void testSaveFromFileMenu() throws BadLocationException", "diff": ["-    try {", "-      Document doc = _gm.getDefinitionsDocument();", "-      doc.insertString(0, \"blah\", null);", "-      assertTrue(\"#0.0\", _gm.isModifiedSinceSave());", "-      _gm.saveFileAs(\"blah.txt\");", "-      assertEquals(\"#1.0\", \"saveFile \", _recorder.getEventList());", "-      assertTrue(\"#1.1\", !_gm.isModifiedSinceSave());", "-    }", "-    finally {", "-      new File(\"blah.txt\").delete();", "-    }", "+    Document doc = _gm.getDefinitionsDocument();", "+    doc.insertString(0, \"blah\", null);", "+    assertTrue(\"#0.0\", _gm.isModifiedSinceSave());", "+    TestWriterCommand com = new TestWriterCommand(\"blah.txt\");", "+    _gm.saveFile(com);", "+    assertEquals(\"#1.0\", \"saveFile \", _recorder.getEventList());", "+    assertTrue(\"#1.1\", !_gm.isModifiedSinceSave());", "+    assertEquals(\"#1.2\", \"blah\", com.getBuffer());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9edec58045ac2b379f1d5d4a5579c25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TigerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "    public void testParseEnumDeclaration3()", "signatureAfterChange": "    public void testParseEnumDeclaration3()", "diff": ["-    ReferenceType enumType = new ReferenceType(\"Suit\");", "+    ReferenceTypeName enumType = new ReferenceTypeName(\"Suit\");", "-    MethodDeclaration m =   new MethodDeclaration(0, new VoidType(), \"m\", new LinkedList<FormalParameter>(), new LinkedList<ReferenceType>(), new BlockStatement(new LinkedList<Node>()));", "-    MethodDeclaration n =   new MethodDeclaration(0, new VoidType(), \"n\", new LinkedList<FormalParameter>(), new LinkedList<ReferenceType>(), new BlockStatement(new LinkedList<Node>()));", "+    MethodDeclaration m =   new MethodDeclaration(0, new VoidTypeName(), \"m\", new LinkedList<FormalParameter>(), new LinkedList<ReferenceTypeName>(), new BlockStatement(new LinkedList<Node>()));", "+    MethodDeclaration n =   new MethodDeclaration(0, new VoidTypeName(), \"n\", new LinkedList<FormalParameter>(), new LinkedList<ReferenceTypeName>(), new BlockStatement(new LinkedList<Node>()));", "-    params.add(new FormalParameter(false, new IntType(), \"i\"));", "-    params.add(new FormalParameter(false, new ReferenceType(\"Suit\"), \"s\"));", "-    decl.add(new ConstructorDeclaration(0, \"Suit\", params, new LinkedList<ReferenceType>(), null, new LinkedList<Node>()));", "-    MethodDeclaration am = new MethodDeclaration(java.lang.reflect.Modifier.ABSTRACT, new VoidType(), \"m\", new LinkedList<FormalParameter>(), new LinkedList<ReferenceType>(), null);", "+    params.add(new FormalParameter(false, new IntTypeName(), \"i\"));", "+    params.add(new FormalParameter(false, new ReferenceTypeName(\"Suit\"), \"s\"));", "+    decl.add(new ConstructorDeclaration(0, \"Suit\", params, new LinkedList<ReferenceTypeName>(), null, new LinkedList<Node>()));", "+    MethodDeclaration am = new MethodDeclaration(java.lang.reflect.Modifier.ABSTRACT, new VoidTypeName(), \"m\", new LinkedList<FormalParameter>(), new LinkedList<ReferenceTypeName>(), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9fdca837cde491ae561ac96c3d735a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fae4c278cf4d698cf56447c30e807e3a8a3e8b1a", "commitAfterChange": "ab3915db475da29d3ee24758ec211eb5cba4cacd", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": "   void _completeWordUnderCursor()", "signatureAfterChange": "   void _completeWordUnderCursor()", "diff": ["-    _completeJavaAPICheckbox.setEnabled(DrJava.getConfig().getSetting(OptionConstants.DIALOG_COMPLETE_JAVAAPI));", "+    _completeJavaAPICheckbox.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca0e7b592f5ca950a4406140a825bb05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/KeyBindingManager.java", "commitBeforeChange": "762f9487498790edfa8d7b58c3d83cb6592af447", "commitAfterChange": "1ea7874872b93b44444c8711a298524cf05a221e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void setActionMap (ActionMap am)", "signatureAfterChange": "   public void setActionMap (ActionMap actionMap)", "diff": ["-  public void setActionMap (ActionMap am) {      ", "-    _actionMap = _mainFrame.getCurrentDefPane().getActionMap();", "+  public void setActionMap (ActionMap actionMap) {      ", "+    _actionMap = actionMap;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca14b641389f907206e3a1f999886889", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 48, "signatureBeforeChange": "     public void debuggerShutdown()", "signatureAfterChange": "     public void debuggerShutdown()", "diff": ["-        if (printEvents) System.out.println(\"debuggerShutdown \" + debuggerShutdownCount);", "+        if (printEvents) printStream.println(\"debuggerShutdown \" + debuggerShutdownCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca2961ef8da842ad32e553a1a32cfd0d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 716, "methodNumberAfterChange": 322, "signatureBeforeChange": "    final private boolean jj_3R_89()", "signatureAfterChange": "    final private boolean jj_3R_380()", "diff": ["+", "+  final private boolean jj_3R_380() {", "+    if (jj_3R_400()) {", "+    if (jj_3R_401()) return true;", "-", "-  final private boolean jj_3R_89() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_131()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_132()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca29c31b335351d673532ab89da801e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/DrJavaPreferencePage.java", "commitBeforeChange": "684e63a5129d977349573eb45595e3cb9be51496", "commitAfterChange": "9d63ece51633bd296b8befa41ebe70b7a9eca3aa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void createFieldEditors()", "signatureAfterChange": "   protected void createFieldEditors()", "diff": ["+    addField(new StringFieldEditor(DrJavaConstants.JVM_ARGS,", "+                                   \"Arguments to the Interactions JVM\",", "+                                   getFieldEditorParent()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca2adb3353b9288daa7829f16d6590cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2686c95081d43f50f4b047eac9901983d43233d5", "commitAfterChange": "d2672269336e7275d013a62f6a2cae91ecdf9b13", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "      private void _open(FileOpenSelector openSelector)", "signatureAfterChange": "      void open(FileOpenSelector openSelector)", "diff": ["-  private void _open(FileOpenSelector openSelector) {", "+  void open(FileOpenSelector openSelector) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca33c9cad6608da79f5acda1e39ff9c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedVisitor.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   protected void handleInnerClassDef(InnerClassDef that, Data data, String name)", "signatureAfterChange": "   protected void handleInnerClassDef(InnerClassDef that, Data data, String name)", "diff": ["-    that.getSuperclass().visit(this);", "+//    that.getSuperclass().visit(this);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca36efa14e86f3cecf3a0ee3d5cd7cf6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public Object visit(SimpleAllocation node)", "signatureAfterChange": "   public Class visit(SimpleAllocation node)", "diff": ["-     */", "-    public Object visit(SimpleAllocation node) {", "-        // Check the type to declare", "-        Node type = node.getCreationType();", "-        Class c  = (Class)type.acceptVisitor(this);", "-", "-        // Do the type checking of the arguments", "-        List args = node.getArguments();", "-        Class[] cargs = Constants.EMPTY_CLASS_ARRAY;", "-", "-\tif (args != null) {", "-\t    cargs = new Class[args.size()];", "-", "-\t    ListIterator it = args.listIterator();", "-\t    int i  = 0;", "-\t    while (it.hasNext()) {", "-\t\tcargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "-\t    }", "-\t}", "-", "-\treturn context.setProperties(node, c, cargs);", "-    }", "+   */", "+  public Class visit(SimpleAllocation node) {", "+    // Check the type to declare", "+    Node type = node.getCreationType();", "+    Class c  = (Class)type.acceptVisitor(this);", "+    ", "+    // Do the type checking of the arguments", "+    List args = node.getArguments();", "+    Class[] cargs = Constants.EMPTY_CLASS_ARRAY;", "+    ", "+    if (args != null) {", "+      cargs = new Class[args.size()];", "+      ", "+      ListIterator it = args.listIterator();", "+      int i  = 0;", "+      while (it.hasNext()) {", "+        cargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "+      }", "+    }", "+    ", "+    return context.setProperties(node, c, cargs);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca3f675d84e505702de188fcb2613e4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/Utilities.java", "commitBeforeChange": "fe644290d76f63ed4693cfbe935eaacd56666243", "commitAfterChange": "1639b3f1b3160d5e213e76fb290ae016d8915dec", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public static void clearEventQueue()", "signatureAfterChange": "      public static void clearEventQueue()", "diff": ["+  ", "-    try { ", "-      Utilities.invokeAndWait(new Runnable() { public void run() { }; }); ", "-    }", "+    try { Utilities.invokeAndWait(new Runnable() { public void run() { } }); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca4936929c81cfaf61fa2e7f95675928", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testOneJUnitError() throws Exception", "signatureAfterChange": "   public void testOneJUnitError() throws Exception", "diff": ["-    _model.setResetAfterCompile(false);", "-    //synchronized(listener) {", "-      doc.startCompile();", "-      //listener.wait();", "-    //}", "+    // Doesn't reset interactions because interpreter is not used", "+    doc.startCompile();", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca4df86462445968f25f0a5cd04a783f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 263, "methodNumberAfterChange": 263, "signatureBeforeChange": "      public void resetUndoManager()", "signatureAfterChange": "      public void resetUndoManager()", "diff": ["-      if(_cache.isDDocInCache(this)){", "+      if(_cacheAdapter.isReady()){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca655afe6424f0e521ed8abbd228720d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeClass.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public boolean isStatic()", "signatureAfterChange": "      public boolean isStatic()", "diff": ["-  public boolean isStatic() { return Modifier.isStatic(_accessFlags); }", "+  public boolean isStatic() { return _mods.isStatic(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca6d5cc3522e6d1a02893f15f17f49d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "86073a7fb314101fbea8399fc18b3a4415cbc887", "commitAfterChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    // Set up the status bar", "-    // This line is here so that each DefinitionsPane", "-    // can understand the notion of the Location area.", "+    ", "+    if (CodeStatus.DEVELOPMENT) {", "+      _keyBindingManager = new KeyBindingManager(this);", "+    }", "+    ", "+    // set up key-bindings", "+    if (CodeStatus.DEVELOPMENT) {", "+      _keyBindingManager.setActionMap(_currentDefPane.getActionMap());", "+      _setUpKeyBindingMaps();", "+    }", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca74ef54b5694e397fdf37f5b4a01628", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "b6148d8c1aaf55232aeac694d90234c9353139cd", "commitAfterChange": "536afaee0374767d0f8bdf572a332576e3f54467", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public boolean selectDocumentAt(final int x, final int y)", "signatureAfterChange": "   public boolean selectDocumentAt(final int x, final int y)", "diff": ["-        setActiveDoc((INavigatorItem) _model.getElementAt(idx));", "+        setActiveDoc(getFromModel(idx));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca8e33efe5365ab627002e1a6d786b25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "9e497bdeba5d2ec8cfd80ebdb938cf6935007939", "commitAfterChange": "8015cc1e53ce6d8dc00c5faf652f2b4ef39fe4e9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public TypeData forWhileStatement(WhileStatement that)", "signatureAfterChange": "   public TypeData forWhileStatement(WhileStatement that)", "diff": ["-      Expression exp = (Expression) that.getCondition();", "+      Expression exp = that.getCondition();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cabec55b03afa66860c3e98515d596c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/ConstantPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public short put(InterfaceMethodIdentifier cst)", "signatureAfterChange": "   public short put(InterfaceMethodIdentifier cst)", "diff": ["-    Info info = (Info)constants.get(cst);", "+    Info info = constants.get(cst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cac57fc4f53d5ea776953b306b9b4dfe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "commitAfterChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   int _getAnonymousInnerClassIndex(int pos) throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   int _getAnonymousInnerClassIndex(int pos) throws BadLocationException, ClassNameNotFoundException", "diff": ["-   */", "+    */", "-", "+    ", "-    while((newPos = _findPrevKeyword(text, \"new\", newPos-1)) != ERROR_INDEX) {", "+    while ((newPos = _findPrevKeyword(text, \"new\", newPos - 1)) != ERROR_INDEX) {", "-      if (classStart==ERROR_INDEX) { continue; }", "-      int classEnd = classStart+1;", "-      while(classEnd<text.length()) {", "-        if ((!Character.isJavaIdentifierPart(text.charAt(classEnd))) && (text.charAt(classEnd)!='.')) {", "+      if (classStart == ERROR_INDEX) { continue; }", "+      int classEnd = classStart + 1;", "+      while (classEnd < text.length()) {", "+        if (! Character.isJavaIdentifierPart(text.charAt(classEnd)) && text.charAt(classEnd) != '.') {", "-      if (parenStart==ERROR_INDEX) { continue; }", "+      if (parenStart == ERROR_INDEX) { continue; }", "-        if (closePointyBracket!=ERROR_INDEX) {", "-          if (text.charAt(closePointyBracket)=='>') {", "-            parenStart = getFirstNonWSCharPos(closePointyBracket+1);", "+        if (closePointyBracket != ERROR_INDEX) {", "+          if (text.charAt(closePointyBracket) == '>') {", "+            parenStart = getFirstNonWSCharPos(closePointyBracket + 1);", "-      if (parenStart==ERROR_INDEX) { continue; }      ", "-      if (text.charAt(parenStart)!='(') { continue; }", "+      if (parenStart == ERROR_INDEX) { continue; }      ", "+      if (text.charAt(parenStart) != '(') { continue; }", "-    ", "+      ", "-      if (nextOpenSquiggly==ERROR_INDEX) { continue; }", "+      if (nextOpenSquiggly == ERROR_INDEX) { continue; }", "-        else {", "-          ++index;", "-        }", "+        else ++index;", "-    _storeInCache(key, new Integer(index));", "+    _storeInCache(key, index, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cacd05133aa2e0dcd33e21f06f10a093", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testResetConsole()     throws BadLocationException, InterruptedException", "signatureAfterChange": "   public void testResetConsole()     throws BadLocationException, DocumentAdapterException, InterruptedException", "diff": ["-    throws BadLocationException, InterruptedException", "+    throws BadLocationException, DocumentAdapterException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cadde13b5d5040acfccd9ab4aad8ee22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "7bb32c28070a4b5d5697c7c88ea0d664289c76e8", "commitAfterChange": "b2ad80c49aaa09f293a5bc1f6664d4cc5243219e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "    private void _assertNumOpenDocs(int num)", "signatureAfterChange": "    private void _assertNumOpenDocs(int num)", "diff": ["-                 _model.getDefinitionsDocuments().length);", "+                 _model.getDefinitionsDocuments().getSize());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caea9842d3f3a8617cec12af1e2c6f06", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlusTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testSecondLineMisindented() throws javax.swing.text.BadLocationException", "signatureAfterChange": "   public void testSecondLineMisindented() throws javax.swing.text.BadLocationException", "diff": ["-    assertEquals(\"  foo\\n  abcbar\", _doc.getText(0, 14));", "+    assertEquals(\"  foo\\n  abcbar\", _doc.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb0b3afada5cb2cd6ec52fad0ffb3c61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": "   private void _removeErrorListener(OpenDefinitionsDocument doc)", "signatureAfterChange": "   private void _removeErrorListener(OpenDefinitionsDocument doc)", "diff": ["-    JScrollPane scroll = (JScrollPane) _defScrollPanes.get(doc);", "+    JScrollPane scroll = _defScrollPanes.get(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb0ed577316eaf5b82edbefc9abb0f96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 671, "methodNumberAfterChange": 614, "signatureBeforeChange": "    final private boolean jj_3R_216()", "signatureAfterChange": "    final private boolean jj_3R_216()", "diff": ["+", "-    if (jj_3R_442()) jj_scanpos = xsp;", "+    if (jj_3R_443()) jj_scanpos = xsp;", "-    if (jj_scan_token(84)) jj_scanpos = xsp;", "+    if (jj_scan_token(86)) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb1631a1b6585f603de16b72875575d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 395, "methodNumberAfterChange": 338, "signatureBeforeChange": "    final private boolean jj_3R_331()", "signatureAfterChange": "    final private boolean jj_3R_331()", "diff": ["+", "+  final private boolean jj_3R_331() {", "+    if (jj_3_57()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_341()) return true;", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_331() {", "-    if (jj_3R_341()) return true;", "-    if (jj_3R_352()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb4dc9f8d7bbd7cc439da0c336e119e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "f8e4975fc86eccfc2e1e190be55c64d1a287745a", "commitAfterChange": "1b5ef0eebd43a246e897081eb432b396efa2d20e", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   public InterpreterJVMRemoteI ensureInterpreterConnected()", "signatureAfterChange": "   public InterpreterJVMRemoteI ensureInterpreterConnected()", "diff": ["-//          _log.log(\"interpreter is null in Main JVM, waiting for it to register\");", "+          debug.log(\"Interpreter is null, waiting for it to register\");", "+        debug.log(\"Interpreter registered\");", "-//        _log.log(\"interpreter \" + interp + \" registered in Main JVM\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb5b6ea92e0851bbf11f2c15f1baf42e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "172b2d02551aa349912ace36cce3fe3011ec0453", "commitAfterChange": "b05c72360ee1d1e3de71e0b58a923a7cf06bebf6", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 32, "signatureBeforeChange": "   private void _updateMachine()", "signatureAfterChange": "   private void _updateMachine()", "diff": ["+      if (_machine.getFirstDoc() == null) _machine.setFirstDoc(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb5e1f040af936923f2cdd370a29337f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public Object visit(SimpleAssignExpression node)", "signatureAfterChange": "   public Class visit(SimpleAssignExpression node)", "diff": ["-     */", "-    public Object visit(SimpleAssignExpression node) {", "-        Expression left  = node.getLeftExpression();", "-        Expression right = node.getRightExpression();", "-        Class rc = (Class)right.acceptVisitor(this);", "-", "-        // Perhaps is this assignment a variable declaration ?", "-        if (left instanceof QualifiedName) {", "-            String var = ((QualifiedName)left).getRepresentation();", "-            if (!context.exists(var)) {", "-\t\tcontext.define(var, (rc == null) ? Object.class : rc);", "-\t    }", "-\t}", "-", "-        Class lc = (Class)left.acceptVisitor(this);", "-", "-\t// The left subexpression must be a variable", "-        if (!left.hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"left.expression\", node);", "-        }", "-\t", "-        // Check the validity of the assignment", "-        checkAssignmentStaticRules(lc, rc, node, right);", "-", "-        node.setProperty(NodeProperties.TYPE, lc);", "-\treturn lc;", "-    }", "+   */", "+  public Class visit(SimpleAssignExpression node) {", "+    Expression left  = node.getLeftExpression();", "+    Expression right = node.getRightExpression();", "+    Class rc = (Class)right.acceptVisitor(this);", "+    ", "+    // Perhaps is this assignment a variable declaration ?", "+    if (left instanceof QualifiedName) {", "+      String var = ((QualifiedName)left).getRepresentation();", "+      if (!context.exists(var)) {", "+        context.define(var, (rc == null) ? Object.class : rc);", "+      }", "+    }", "+    ", "+    Class lc = (Class)left.acceptVisitor(this);", "+    ", "+    // The left subexpression must be a variable", "+    if (!left.hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"left.expression\", node);", "+    }", "+    ", "+    // Check the validity of the assignment", "+    checkAssignmentStaticRules(lc, rc, node, right);", "+    ", "+    node.setProperty(NodeProperties.TYPE, lc);", "+    return lc;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb7dab5c4e43deb7f96f4fa100fd36dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "commitAfterChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testCompileFailsCorrectLineNumbers() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileFailsCorrectLineNumbers() throws BadLocationException, IOException, InterruptedException", "diff": ["-    doc.saveFile(new FileSelector(file));", "+    saveFile(doc, new FileSelector(file));", "-    doc2.saveFile(new FileSelector(file2));", "-    ", "+    saveFile(doc2, new FileSelector(file2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb831f19888a6609cbad969bbd485776", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/BooleanOptionTest.java", "commitBeforeChange": "d41b5de79662496f09ec590840d7e35134702a41", "commitAfterChange": "fd26cc12b714205eb66ef1427d78a124c29d57fc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "        public void testParse()", "signatureAfterChange": "        public void testParse()", "diff": ["+     assertEquals(Boolean.FALSE, bo.parse(\" faLse \"));", "-     try { bo.parse(\"True\"); fail(); }", "+     try { bo.parse(\"Tue\"); fail(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb8ace48f407db8f10b588b124d4e9fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 545, "methodNumberAfterChange": 368, "signatureBeforeChange": "    final private boolean jj_3R_190()", "signatureAfterChange": "    final private boolean jj_3R_172()", "diff": ["+", "+  final private boolean jj_3R_172() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_78()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_190() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_87()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb972a8fbf07fd29c9c23c0b9b61c39f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfig.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r   public XMLConfig()", "signatureAfterChange": "   public XMLConfig()", "diff": ["-   */\r", "-  public XMLConfig() {\r", "-    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\r", "-    try {\r", "-      DocumentBuilder builder = factory.newDocumentBuilder();\r", "-      _document = builder.newDocument();  // Create from whole cloth\r", "-      _document.setXmlStandalone(true);\r", "-    }\r", "-    catch(ParserConfigurationException e) {\r", "-      e.printStackTrace();\r", "-    }\r", "-  }\r", "+   */", "+  public XMLConfig() {", "+    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();", "+    try {", "+      DocumentBuilder builder = factory.newDocumentBuilder();", "+      _document = builder.newDocument();  // Create from whole cloth", "+      // NOTE: not 1.4 compatible -- _document.setXmlStandalone(true);", "+    }", "+    catch(ParserConfigurationException e) {", "+      e.printStackTrace();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cba40946a17b358c804e92fb40be0ff1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/DebugContextTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testStaticWatches() throws Exception", "signatureAfterChange": "   public void XXXtestStaticWatches() throws Exception", "diff": ["-  public void testStaticWatches() throws Exception {", "+  public void XXXtestStaticWatches() throws Exception {", "+    debug.logStart();", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cba44ffa5395bc51c9aa27bf80886100", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": "     @Override public Type visit(SimpleMethodCall node)", "signatureAfterChange": "     @Override public Type visit(SimpleMethodCall node)", "diff": ["-        t = ts.makeClassType(new FunctionWrapperClass(context.getPackage(), matches));", "+        t = ts.makeClassType(new FunctionWrapperClass(context.accessModule(), matches));", "-        ", "-        // TODO: Check accessibility of method", "+        checkAccessibility(inv.method(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cba7745a0ba06818ec01ac25c202efcc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "1ecc95c0c60f2dabd3e5d52eee223ff564461e48", "commitAfterChange": "a7a03ce246432b4e0ab5d61753312842c1cd49c1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "    public void reset()", "signatureAfterChange": "    public void reset() throws RemoteException", "diff": ["-  public void reset() {", "+  public void reset() throws RemoteException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbad7df170ee3c4e5ce707c49a818195", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/OptionConstants.java", "commitBeforeChange": "39a0a2b9aa953a82e5935fb9e2a0e6c0bbcf8b34", "commitAfterChange": "8a1c75e7bc7406b418bdb0debe15514bedad92d0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static ArrayList<String> evaluate()", "signatureAfterChange": "     public static ArrayList<String> evaluate()", "diff": ["+      aList.add(JAVADOC_1_5_TEXT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbb1bc18c81095b9c802194dff5cf2f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/FileProperty.java", "commitBeforeChange": "098248186c2cd94be6c7bc9bfe60fa3101b5a0ba", "commitAfterChange": "200037d181721d5a77f697343bf01da60193d9d5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "        public void resetAttributes()", "signatureAfterChange": "        public void resetAttributes()", "diff": ["+    _attributes.put(\"squote\", null);", "+    _attributes.put(\"dquote\", null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc0e79f81a379cf7e9b5c325c3d5f45d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   protected VariableData[] formalParameters2VariableData(FormalParameter[] fps, Data enclosing)", "signatureAfterChange": "   protected VariableData[] formalParameters2VariableData(FormalParameter[] fps, Data enclosing)", "diff": ["-                                    new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, mav), ", "+                                    new ModifiersAndVisibility(SourceInfo.NO_INFO, mav), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc1a71efdbd645ff80394a2103c49f16", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "fcb52146fe5952d46eb1cf9b67172e0f75de7a52", "commitAfterChange": "fbab2bd705dc6109a68454696cb8f397eb070aa2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void junitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "signatureAfterChange": "      private void junitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "diff": ["-    synchronized(_compilerModel) {", "+    synchronized(_compilerModel.getSlaveJVMLock()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc2976dc68030d3ceb761be4677deafa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e90dbd1bb170d6fe2e453ef725d9c5a3af468fcc", "commitAfterChange": "e653942b63325e47383bb429e833afeb308dbf22", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 146, "signatureBeforeChange": "     public File getSourceRoot() throws InvalidPackageException", "signatureAfterChange": "     public File getSourceRoot() throws InvalidPackageException", "diff": ["-    public File getSourceRoot() throws InvalidPackageException", "-    {", "-      return _getSourceRoot(getDocument().getPackageName());", "+    public File getSourceRoot() throws InvalidPackageException {", "+      return _getSourceRoot(getPackageName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc772532145793ded5993505dd215c66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "ce99ad77121aabff91f9c6fba762f853ca2a34f5", "commitAfterChange": "c7e182b04aa52ae1423064c733cc8609017cc26d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   protected File tempFile(int i) throws IOException", "signatureAfterChange": "   protected File tempFile(int i) throws IOException", "diff": ["-    return File.createTempFile(\"DrJava-test\" + i, \".java\", _tempDir);", "+    return File.createTempFile(\"DrJava-test\" + i, \".java\", _tempDir).getCanonicalFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc82ba39754366d059ee3cf011934c5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 293, "methodNumberAfterChange": 908, "signatureBeforeChange": "    final private boolean jj_3R_629()", "signatureAfterChange": "    final private boolean jj_3R_545()", "diff": ["-  final private boolean jj_3R_629() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_83()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_611()) return true;", "-    return false;", "+", "+  final private boolean jj_3R_545() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_85()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_470()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd0a12c370f99c5d96e02db077f7084", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/TigerUtilitiesTest.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         public void setUp()", "signatureAfterChange": "         public void setUp()", "diff": ["-    TigerUtilities.resetVersion();    ", "+    setTigerEnabled(true);    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cce0de78a0bc465ca70a5d2af098a7ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "b6c98c2729d523213cf8ee6bbc9636575f25da66", "commitAfterChange": "4bdaddc150401ace7c16f01fa5c54525f5642ceb", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   protected void _setupModel()", "signatureAfterChange": "   protected void _setupModel()", "diff": ["-  protected void _setupModel() {", "-    _swingConsoleDocument.addDocumentListener(new CaretUpdateListener());", "-    _doc.setBeep(_pane.getBeep());", "-  }", "+  protected void _setupModel() { _doc.setBeep(_pane.getBeep()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cce2877fcdd6790f971f3dc59aec9bbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentTest.java", "commitBeforeChange": "8419e1669ab708db7794d94c63980b50f479093f", "commitAfterChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testEditCondition() throws DocumentAdapterException, BadLocationException", "signatureAfterChange": "   public void testEditCondition() throws DocumentAdapterException, BadLocationException", "diff": ["-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cce55a6bcf52a35f01ad35749f320ab5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testQuotesWithGap()", "signatureAfterChange": "   public void testQuotesWithGap()", "diff": ["-    assertEquals(\"#0.4\", INSIDE_DOUBLE_QUOTE, model1.getStateAtCurrent());", "+    assertEquals(\"#0.4\", INSIDE_DOUBLE_QUOTE, model1._getStateAtCurrent());", "-    assertEquals(\"#1.4\", INSIDE_DOUBLE_QUOTE, model1.getStateAtCurrent());", "+    assertEquals(\"#1.4\", INSIDE_DOUBLE_QUOTE, model1._getStateAtCurrent());", "-    assertEquals(\"#2.6\", INSIDE_DOUBLE_QUOTE, model1.getStateAtCurrent());", "+    assertEquals(\"#2.6\", INSIDE_DOUBLE_QUOTE, model1._getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccf3c21b2dc0da6c7aba0731804d3ea4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyAdvancedVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "          public void testForSimpleSuperReferenceDoFirst()", "signatureAfterChange": "          public void testForSimpleSuperReferenceDoFirst()", "diff": ["-     SimpleSuperReference sr = new SimpleSuperReference(JExprParser.NO_SOURCE_INFO);", "+     SimpleSuperReference sr = new SimpleSuperReference(SourceInfo.NO_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd09ba9b315a91e64a3c9bd2d92c03d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 337, "methodNumberAfterChange": 288, "signatureBeforeChange": "    final private boolean jj_3R_359()", "signatureAfterChange": "    final private boolean jj_3R_360()", "diff": ["-", "-  final private boolean jj_3R_359() {", "-    if (jj_3R_411()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_448()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_360() {", "+    if (jj_3R_412()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_449()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd0c6cbbddb22174c817950fa2707574", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testFindPartialSubstrings() throws BadLocationException", "signatureAfterChange": "   public void testFindPartialSubstrings() throws BadLocationException", "diff": ["-    _testFindNextSucceeds(_frm, CONTINUE, 0, 4);", "-    _testFindNextSucceeds(_frm, CONTINUE, 0, 4);", "+    _testFindNextSucceeds(_frm, 0, 4);", "+    _testFindNextSucceeds(_frm, 0, 4);", "-    _testFindNextSucceeds(_frm, CONTINUE, 8, 3);", "-    _testFindNextSucceeds(_frm, CONTINUE, 8, 3);", "+    _testFindNextSucceeds(_frm, 8, 3);", "+    _testFindNextSucceeds(_frm, 8, 3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd11a6b1b0b022b45fd0846ff47c85ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public void testRevertFile()     throws BadLocationException, IOException, OperationCanceledException,     AlreadyOpenException", "signatureAfterChange": "   public void testRevertFile() throws BadLocationException, IOException, OperationCanceledException,     AlreadyOpenException", "diff": ["-   */", "-  public void testRevertFile()", "-    throws BadLocationException, IOException, OperationCanceledException,", "-    AlreadyOpenException", "-  {", "+  /** Forces a file to be opened with getDocumentforFile. */", "+  public void testRevertFile() throws BadLocationException, IOException, OperationCanceledException,", "+    AlreadyOpenException {", "+    ", "-", "-        catch (FileMovedException fme) {", "-          // We know file should exist", "-          fail(\"file does not exist\");", "-        }", "+        catch (FileMovedException fme) { fail(\"file does not exist\");  /* We know file should exist. */ }", "-      public void fileReverted(OpenDefinitionsDocument doc) {", "-        fileRevertedCount++;", "-      }", "+      public void fileReverted(OpenDefinitionsDocument doc) { fileRevertedCount++; }", "+    ", "+    _log.log(\"testRevertFile completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd2d8eeda68b7b137ee4cf3dc7f2da7b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 59, "signatureBeforeChange": "   public Void forPackageStatementOnly(PackageStatement that)", "signatureAfterChange": "   public Void forPackageStatementOnly(PackageStatement that)", "diff": ["-        _package = _package + \".\" + temp;", "+        _package = _package + '.' + temp;", "-    //call getSymbolData to see if this is actually a class as well as a Package Name.  If it is, an error", "-    //will be given in the TypeChecking step", "-    //If file is a .java file and not compiled, won't find it.  This is not consistent with the JLS.", "-    //if file is a ll file and not compiled, will find it, though this is not consistent with the JLS.", "-    getSymbolData(_package, that.getSourceInfo(), false, false, false);", "+    // Call getSymbolData to see if this is actually a class as well as a Package Name.  If it is, an error will be ", "+    // given in the TypeChecking step.", "+    // If file is a .java file and not compiled, won't find it.  This is not consistent with the JLS.", "+    // if file is a ll file and not compiled, will find it, though this is not consistent with the JLS.", "+//    getSymbolData(_package, that.getSourceInfo(), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd2f2279e67cb813b3fe9cc2d8c2f45b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ConstructorBodyTypeChecker.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public TypeData forBracedBody(BracedBody that)", "signatureAfterChange": "   public TypeData forBracedBody(BracedBody that)", "diff": ["-    System.err.println(\"_thrown.size() in \" + _data + \" = \" + thrownSize);", "+//    System.err.println(\"_thrown.size() in \" + _data + \" = \" + thrownSize);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd33477f13f0fa2e8e18f80b525dc06e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "238b80ed49fba0c82440d65a4ea20069d3584d76", "commitAfterChange": "a33515e302c3e025e0c6d1210abc86e87bf78628", "methodNumberBeforeChange": 458, "methodNumberAfterChange": 458, "signatureBeforeChange": "   private void _refreshDefScrollPane()", "signatureAfterChange": "   private void _refreshDefScrollPane()", "diff": ["-    // demoted to package private protection to test the disabling editing while compiling functionality.", "-    // and to support brute force fix to DefinitionsPane bug on return from compile with errors", "-//    _currentDefPane.notifyInactive();", "+    _currentDefPane.notifyInactive();", "-//      _currentDefPane.notifyActive();", "+      _currentDefPane.notifyActive();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd41352a1985779e59d1b18bd84dffd4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "f1cdd8ab40ec812de32945f859fe4268e830f213", "commitAfterChange": "03b2d2796342d42693cf58d323df575cbd1df053", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private void _parseStartupClasspath()", "signatureAfterChange": "      private void _parseStartupClasspath()", "diff": ["+    // Get the last entry", "+    index = _startupClasspath.length();", "+    _startupClasspathVector.addElement(_startupClasspath.substring(lastIndex, index));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd554a0edcd19decb427cd833e91cc15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-nextgen/edu/rice/cs/drjava/model/compiler/descriptors/NextGenDescriptor.java", "commitBeforeChange": "e8a0105912243dc0845b7fe1aad605d049915d0a", "commitAfterChange": "f5dccb0b4004cfd3f184330e53ba101eca68857c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r   public Iterable<File> getSearchFiles()", "signatureAfterChange": "   public Iterable<File> getSearchFiles()", "diff": ["-  }\r", "-  public Iterable<File> getSearchFiles() {\r", "-    Iterable<File> files = IterUtil.asIterable(new File[] {\r", "-      new File(\"/C:/Program Files/JavaPLT/nextgen2/nextgen2.jar\")\r", "-    });\r", "-    try {\r", "-      String ngc_home = System.getenv(\"NGC_HOME\");\r", "-      if (ngc_home!=null) {\r", "-        // JDKToolsLibrary.msg(\"NGC_HOME environment variable set to: \"+ngc_home);\r", "-        files = IterUtil.compose(files, new File(new File(ngc_home), \"nextgen2.jar\"));\r", "-      }\r", "-      else {\r", "-        // JDKToolsLibrary.msg(\"NGC_HOME not set\");\r", "-      }\r", "-    }\r", "-    catch(Exception e) { /* ignore NGC_HOME variable */ }\r", "-    \r", "-    // drjava.jar file itself; check if it's a combined Nextgen/DrJava jar\r", "-    files = IterUtil.compose(files, edu.rice.cs.util.FileOps.getDrJavaFile()); \r", "-    return files;\r", "-  }\r", "+  }", "+  public Iterable<File> getSearchFiles() {", "+    Iterable<File> files = IterUtil.asIterable(new File[] {", "+      new File(\"/C:/Program Files/JavaPLT/nextgen2/nextgen2.jar\"),", "+        new File(\"/C:/Program Files/JavaPLT/nextgen2/nextgen2.jar\"),", "+        new File(\"/usr/local/JavaMint/nextgen2/nextgen2.jar\"),", "+        new File(\"/home/mgricken/research/Misc/NextGen/nextgen2/nextgen2.jar\"),", "+        new File(edu.rice.cs.util.FileOps.getDrJavaFile().getParentFile(), \"nextgen2.jar\")", "+    });", "+    try {", "+      String ngc_home = System.getenv(\"NGC_HOME\");", "+      if (ngc_home!=null) {", "+        // JDKToolsLibrary.msg(\"NGC_HOME environment variable set to: \"+ngc_home);", "+        files = IterUtil.compose(files, new File(new File(ngc_home), \"nextgen2.jar\"));", "+      }", "+      else {", "+        // JDKToolsLibrary.msg(\"NGC_HOME not set\");", "+      }", "+    }", "+    catch(Exception e) { /* ignore NGC_HOME variable */ }", "+    ", "+    // drjava.jar file itself; check if it's a combined Nextgen/DrJava jar", "+    files = IterUtil.compose(files, edu.rice.cs.util.FileOps.getDrJavaFile()); ", "+    return files;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd686d62c8605f1604e27d288b32958a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 665, "methodNumberAfterChange": 382, "signatureBeforeChange": "    final private boolean jj_3R_441()", "signatureAfterChange": "    final private boolean jj_3R_419()", "diff": ["+", "+  final private boolean jj_3R_419() {", "+    if (jj_3R_422()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_441() {", "-    if (jj_scan_token(LEFT_SHIFT)) return true;", "-    if (jj_3R_420()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd6c940fc851a520164637fdc1a63dba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/ConstantPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public short put(ClassIdentifier cst)", "signatureAfterChange": "   public short put(ClassIdentifier cst)", "diff": ["-    Info info = (Info)constants.get(cst);", "+    Info info = constants.get(cst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd89457a6a0e79919032959759bbee43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "32020feaae9acc630e383fdce3c878d1ec08218e", "commitAfterChange": "bc04c896b813267bf0ef9dd37648372083f58698", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 159, "signatureBeforeChange": "      private void _openProjectUpdate()", "signatureAfterChange": "      private void _openProjectUpdate()", "diff": ["+      if(_model.getBuildDirectory() != null){", "+        _cleanAction.setEnabled(true);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd8cb56f5bc9f340bf9bb4c3ae69a09d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfig.java", "commitBeforeChange": "f21f60b12bbd978bd39980f3ff0792b181091994", "commitAfterChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r   private void init(InputSource is)", "signatureAfterChange": "\r   private void init(InputSource is)", "diff": ["+      _document.setXmlStandalone(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd91b3bb8dd289df4afd00052083882c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 180, "signatureBeforeChange": "          public void compileErrorDuringJUnit()", "signatureAfterChange": "          public void compileErrorDuringJUnit()", "diff": ["-      System.err.println(\"Called\");", "+      //System.err.println(\"Called\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd934f5b17ae75a1c6544c08eb6b12fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/Brace.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public String toString()", "signatureAfterChange": "   public String toString()", "diff": ["-    String val = \"\";", "+    StringBuffer val = new StringBuffer();", "-      val += \" \";", "-      val += getType().charAt(i);", "+      val.append(' ');", "+      val.append(getType().charAt(i));", "-    return val;", "+    return val.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd95f0b01b7294729b4e71d4eb2460d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigPanel.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void displayComponents()", "signatureAfterChange": "      public void displayComponents()", "diff": ["+    // Fix increment on scrollbar", "+    JScrollBar bar = scroll.getVerticalScrollBar();", "+    bar.setUnitIncrement(25);", "+    bar.setBlockIncrement(400);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdadbdb18566f866090c225f6c395cc2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testTypeEnterNotInCode() throws BadLocationException, InterruptedException, InvocationTargetException", "signatureAfterChange": "   public void testTypeEnterNotInCode() throws BadLocationException, InterruptedException, InvocationTargetException", "diff": ["+", "+        _log.log(\"Completed processing of keyEvents\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdc4ae2c1c4d6d7982702e22e434a4a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1ff154e9eb4de7b8f07ce9a8120997b76e53aa3f", "commitAfterChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 211, "signatureBeforeChange": "   public void toggleBookmark()", "signatureAfterChange": "   public void toggleBookmark()", "diff": ["+    showTab(_bookmarksPanel, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cde2526eb049b7772db3503cd78bdec4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestRunner.java", "commitBeforeChange": "fb61bb542bf295f9ff563d4fe1831b256b325388", "commitAfterChange": "6a5c20e1ee845b9752ac481574f6a7bee8c034e1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JUnitTestRunner(InterpreterJVM jvm)", "signatureAfterChange": "   public JUnitTestRunner(InterpreterJVM jvm)", "diff": ["+    _jvm = jvm;", "-    // Prototype code for new progress bar", "-    /*", "-     JFrame f = new JFrame();", "-     _progress = new ProgressBar();", "-     f.getContentPane().add(_progress);", "-     f.show();", "-     */", "+    _errorCount = 0;", "+    _failureCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cde78e3fd0309cf2f0425142ae425bd1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentRule.java", "commitBeforeChange": "558f3e76b0939d235eb8771fbc6a284d80a06f72", "commitAfterChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc, int pos);", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc,                           BraceReduction reducedModel,                           int pos);", "diff": ["-  public void indentLine(DefinitionsDocument doc, int pos);", "+  public void indentLine(DefinitionsDocument doc, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cde9d073f68b5bfedb5bcafdd3306928", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testCompileWithPackageStatementInsideClass() throws BadLocationException, IOException,      InterruptedException", "signatureAfterChange": "   public void testCompileWithPackageStatementInsideClass() throws BadLocationException, IOException,      InterruptedException", "diff": ["-    doc.saveFileAs(new FileSelector(fooFile));", "+    saveFileAs(doc, new FileSelector(fooFile));", "-    doc.startCompile();", "+    testStartCompile(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdf6ed9ef3858467005058a0454b2355", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 393, "methodNumberAfterChange": 393, "signatureBeforeChange": "    final private boolean jj_3R_451()", "signatureAfterChange": "    final private boolean jj_3R_453()", "diff": ["-  final private boolean jj_3R_451() {", "-    if (jj_3R_462()) {", "-    jj_scanpos = xsp;", "-    if (jj_scan_token(24)) return true;", "-    }", "-    if (jj_scan_token(COLON)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_463()) { jj_scanpos = xsp; break; }", "-    }", "+  final private boolean jj_3R_453() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_464()) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(24)) return true;", "+    }", "+    if (jj_scan_token(COLON)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_465()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdfb27f001d86b19dcfd38fa7fc41d9e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 629, "methodNumberAfterChange": 691, "signatureBeforeChange": "    final private boolean jj_3R_226()", "signatureAfterChange": "    final private boolean jj_3R_251()", "diff": ["-  final private boolean jj_3R_226() {", "-    if (jj_scan_token(EXTENDS)) return true;", "-    if (jj_3R_166()) return true;", "+", "+  final private boolean jj_3R_251() {", "+    if (jj_scan_token(BITWISE_AND)) return true;", "+    if (jj_3R_210()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdfe02a7115eb1d4be1194873a64a482", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandler.java", "commitBeforeChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "commitAfterChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void _cleanUp(Event e)", "signatureAfterChange": "      private void _cleanUp(Event e)", "diff": ["-    DrJava.consoleOut().println(\"event: \"+e);", "+    //DrJava.consoleOut().println(\"event: \"+e);", "+    if (_manager.getCurrentThread() != null) {", "+      _manager.currThreadDied();", "+      _manager.setCurrentThread(null);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce037155b7ed66cdbdf4cb4453933738", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 777, "methodNumberAfterChange": 777, "signatureBeforeChange": "    final private boolean jj_3R_481()", "signatureAfterChange": "    final private boolean jj_3R_483()", "diff": ["+  final private boolean jj_3R_483() {", "+    if (jj_3R_190()) return true;", "+    if (jj_3R_439()) return true;", "-  final private boolean jj_3R_481() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_189()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_438()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce242d123ecaedb227944a55aa27af41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 620, "methodNumberAfterChange": 593, "signatureBeforeChange": "    final private boolean jj_3R_371()", "signatureAfterChange": "    final private boolean jj_3R_379()", "diff": ["+", "+  final private boolean jj_3R_379() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_382()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_383()) return true;", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_371() {", "-    if (jj_3R_375()) {", "-    if (jj_3R_376()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce24f174342bc3482ed13bf0b0aaf69b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 397, "methodNumberAfterChange": 488, "signatureBeforeChange": "    final private boolean jj_3R_306()", "signatureAfterChange": "    final private boolean jj_3R_384()", "diff": ["-", "-  final private boolean jj_3R_306() {", "-    if (jj_3R_315()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_328()) jj_scanpos = xsp;", "-    return false;", "-  }", "+  final private boolean jj_3R_384() {", "+    if (jj_3R_90()) return true;", "+    if (jj_3R_386()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce2d75ece8a6f292a3d2e4b50e6aea5f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeInterpreter.java", "commitBeforeChange": "e70766c672e058ab37ae5757bf5008b997a8ff63", "commitAfterChange": "5089bb7a50fb7750f9e599079bf91522d8072d34", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   protected Object[] interpretArguments(Class c,                                         ConstructorParametersDescriptor cpd,                                         Object[] args)", "signatureAfterChange": "   protected Object[] interpretArguments(Class c,                                         ConstructorParametersDescriptor cpd,                                         Object[] args)", "diff": ["-      NameVisitor nv = new NameVisitor(ctx);", "+      NameVisitor nv = new NameVisitor(ctx,checkVisitorContext);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce4377aa473edf4afaa723c160a0eac2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Breakpoint.java", "commitBeforeChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "commitAfterChange": "32513407e5f8f41a21eb0336c92af1269f67953c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void _createRequests(Vector<ReferenceType> refTypes) throws DebugException", "signatureAfterChange": "   protected void _createRequests(Vector<ReferenceType> refTypes) throws DebugException", "diff": ["-        System.out.println(\"adding breakpoint request, enabled = \"+request.isEnabled());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce454489704185ff6758bdd037556b07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 359, "methodNumberAfterChange": 358, "signatureBeforeChange": "    final private boolean jj_3R_386()", "signatureAfterChange": "    final private boolean jj_3R_381()", "diff": ["-  final private boolean jj_3R_386() {", "-    if (jj_scan_token(PLUS)) return true;", "-    if (jj_3R_350()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_381() {", "+    if (jj_scan_token(RUNSIGNEDSHIFT)) return true;", "+    if (jj_3R_357()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce4ab586b1a5e1652277448b8b00e81c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsPane.java", "commitBeforeChange": "a5a766c0abe1a94ea1cfa69aac7995654eda0886", "commitAfterChange": "e89db6424eb4d447de92442bb5bec9b31ff0f5d0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public boolean open()", "signatureAfterChange": "   public boolean open()", "diff": ["-    JFileChooser fc = new JFileChooser();", "+    JFileChooser fc = _openChooser;", "+\t\tfc.setSelectedFile(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce523c26c1d585f627a6768c3d27f5dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6f3940face1890969eb276e9b92d09c044ad9646", "commitAfterChange": "65470e7b91e9f1ddb83697a2b834c11e593097a6", "methodNumberBeforeChange": 271, "methodNumberAfterChange": 275, "signatureBeforeChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "signatureAfterChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "diff": ["+    pane.addKeyListener(_historyListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce82de9947166d41af1a154e516dd0de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "a84367d6c7dd279d0237f04d04b6df32e0ca3dea", "commitAfterChange": "e0bd33385fe12c251b9b7a0e7bbf6a1bd4867d62", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["+    // ensure that the JVM is ready to run; the GlobalModelJUnitTest test cases sometimes received a", "+    // late _junitModel.junitJVMReady() notification after the unit tests had already been started, and", "+    // that was interpreted as trying to start JUnit tests while tests were already running.", "+    _model.ensureJVMStarterFinished();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce868de1bcaffb12bce5f8ca8884ac96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "     public Object visit(AndExpression node)", "signatureAfterChange": "   public Class visit(AndExpression node)", "diff": ["+   */", "+  public Class visit(AndExpression node) {", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    Class lc = (Class)ln.acceptVisitor(this);", "+    Class rc = (Class)rn.acceptVisitor(this);", "+    ", "+    // Check the types of the operands", "+    if (lc != boolean.class || rc != boolean.class) {", "+      throw new ExecutionError(\"and.type\", node);", "+    }", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         (((Boolean)ln.getProperty(NodeProperties.VALUE)).booleanValue() &&", "+          ((Boolean)rn.getProperty(NodeProperties.VALUE)).booleanValue())", "+           ? Boolean.TRUE : Boolean.FALSE);", "+    }", "+    ", "+    // Set the type property", "+    node.setProperty(NodeProperties.TYPE, boolean.class);", "+    return boolean.class;", "+  }", "-     */", "-    public Object visit(AndExpression node) {", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-        Class lc = (Class)ln.acceptVisitor(this);", "-        Class rc = (Class)rn.acceptVisitor(this);", "-", "-        // Check the types of the operands", "-        if (lc != boolean.class || rc != boolean.class) {", "-            throw new ExecutionError(\"and.type\", node);", "-        }", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 (((Boolean)ln.getProperty(NodeProperties.VALUE)).booleanValue() &&", "-                  ((Boolean)rn.getProperty(NodeProperties.VALUE)).booleanValue())", "-                 ? Boolean.TRUE : Boolean.FALSE);", "-\t}", "-", "-        // Set the type property", "-        node.setProperty(NodeProperties.TYPE, boolean.class);", "-        return boolean.class;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce8ad7dc0e1f0c972f2103a782f742c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "commitAfterChange": "4e52eec7688cbd5ec3584417f424923ba61a75e0", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 44, "signatureBeforeChange": "          public void testForInterfaceDef()", "signatureAfterChange": "          public void testForInterfaceDef()", "diff": ["-      SymbolData sd = new SymbolData(\"id\", _publicMav, new TypeParameter[0], new ArrayList<SymbolData>(), null);", "+      SymbolData sd = new SymbolData(\"i.like.monkey.id\", _publicMav, new TypeParameter[0], new ArrayList<SymbolData>(), null);", "-      SymbolData sd2 = new SymbolData(\"id2\", _publicMav, new TypeParameter[0], interfaces, null);", "+      SymbolData sd2 = new SymbolData(\"i.like.monkey.id2\", _publicMav, new TypeParameter[0], interfaces, null);", "-      LanguageLevelConverter.symbolTable.put(\"id\", sd);", "-      LanguageLevelConverter.symbolTable.put(\"id2\", sd2);", "+      LanguageLevelConverter.symbolTable.put(\"i.like.monkey.id\", sd);", "+      LanguageLevelConverter.symbolTable.put(\"i.like.monkey.id2\", sd2);", "-      assertEquals(\"Should return the same symbol datas: id\", sd, LanguageLevelConverter.symbolTable.get(\"id\"));", "-      assertEquals(\"Should return the same symbol datas:id2 \", sd2, LanguageLevelConverter.symbolTable.get(\"id2\"));", "+      assertEquals(\"Should return the same symbol datas: id\", sd, ", "+                   LanguageLevelConverter.symbolTable.get(\"i.like.monkey.id\"));", "+      assertEquals(\"Should return the same symbol datas:id2 \", sd2, ", "+                   LanguageLevelConverter.symbolTable.get(\"i.like.monkey.id2\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce8e23b0cccc2f39eba0ca5ba346f8ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocumentTest.java", "commitBeforeChange": "aaf929e2f10e21e12d70415a67e84135593a5810", "commitAfterChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected void setUp() throws Exception", "signatureAfterChange": "   protected void setUp() throws Exception", "diff": ["-    _doc = new InteractionsDocument(new InteractionsDJDocument());", "+    _doc = new InteractionsDocument(new InteractionsDJDocument(), _testBanner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce90f76c48078b4414647c2fffec2c9e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeClass.java", "commitBeforeChange": "8c59b6d09078dbcf117925bc686cacee46ca999f", "commitAfterChange": "f8e25255cc9b1c52f4c1874e15c63efdafe32091", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public boolean isStatic()", "signatureAfterChange": "      public boolean isStatic()", "diff": ["-    else { return _declaring.isInterface() || _ast instanceof EnumDeclaration || _mods.isStatic(); }", "+    else { return _declaring.isInterface() || isInterface() || _ast instanceof EnumDeclaration || _mods.isStatic(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce9d9d183006db4f88354a6079f7baf9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public int getOffset(int lineNum)", "signatureAfterChange": "   public int getOffset(int lineNum)", "diff": ["+    if (lineNum < 0) return -1;", "+    String defsText = getText();", "+    int curLine = 1;", "+    int offset = 0; // offset is number of chars from beginning of file", "-    try {", "-      if (lineNum < 0) return -1;", "+    // offset is always pointing to the first character in a line", "+    // at the top of the loop", "+    while (offset < defsText.length()) {", "-      String defsText = getText(0, getLength());", "-      int curLine = 1;", "-      int offset = 0; // offset is number of chars from beginning of file", "+      if (curLine==lineNum) return offset;", "-      // offset is always pointing to the first character in a line", "-      // at the top of the loop", "-      while (offset < defsText.length()) {", "-        ", "-        if (curLine==lineNum) return offset;", "-        ", "-        int nextNewline = defsText.indexOf('\\n', offset);", "-        if (nextNewline == -1) return -1; // end of the document, and couldn't find the supplied lineNum", "-          ", "-        curLine++;", "-        offset = nextNewline + 1;", "-      }", "-      return -1;", "+      int nextNewline = defsText.indexOf('\\n', offset);", "+      if (nextNewline == -1) return -1; // end of the document, and couldn't find the supplied lineNum", "+      ", "+      curLine++;", "+      offset = nextNewline + 1;", "-    catch (BadLocationException ble) { throw new UnexpectedException(ble); }", "+    return -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce9e618a09e063366a4debfdfa6b5186", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Breakpoint.java", "commitBeforeChange": "7c4507413beb0e75cdce1379ffec8d0279bed992", "commitAfterChange": "d1bf0f940bc3d914d8d8293a0e85760984d7b371", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void setEnabled(boolean isEnabled)", "signatureAfterChange": "   public void setEnabled(boolean isEnabled)", "diff": ["-    if (_isEnabled!=old) _manager._notifier.regionChanged(this);", "+    if (_isEnabled!=old) _manager.notifyBreakpointChange(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cebd5b2e0266ea979f06fbc22335168b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 619, "methodNumberAfterChange": 609, "signatureBeforeChange": "    final private boolean jj_3R_247()", "signatureAfterChange": "    final private boolean jj_3R_564()", "diff": ["+", "+  final private boolean jj_3R_564() {", "+    if (jj_3R_271()) return true;", "+      if (jj_3R_570()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_247() {", "-    if (jj_3R_273()) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_302()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cec90cf9dacba1b10b35674a5d9bc9c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "          public void testForMethodDefDoFirst()", "signatureAfterChange": "          public void testForMethodDefDoFirst()", "diff": ["-      ConcreteMethodDef cmd = new ConcreteMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      ConcreteMethodDef cmd = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "-                                                    new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                                    new Word(JExprParser.NO_SOURCE_INFO, \"methodName\"),", "+                                                    new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                                    new Word(SourceInfo.NO_INFO, \"methodName\"),", "-                                                    new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cecbe95b5ded71dfee6c16ab537f02d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testMultipleFilesArray() throws BadLocationException", "signatureAfterChange": "   public void testMultipleFilesArray() throws BadLocationException", "diff": ["-   */", "+  /** Opens several documents and ensures that the array returned by the model is correct and in the right order. */", "+    ", "+    _log.log(\"testMultipleFilesArray completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceed602f847d62979d6e8ea82cd1e1a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 551, "methodNumberAfterChange": 550, "signatureBeforeChange": "    final private boolean jj_3R_318()", "signatureAfterChange": "    final private boolean jj_3R_319()", "diff": ["+  final private boolean jj_3R_319() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_329()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_330()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_331()) return true;", "+    }", "+    }", "-", "-  final private boolean jj_3R_318() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_328()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_329()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_330()) return true;", "-    }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceeefb0ff19e4ffbc1cf476efde66688", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void testCompileWithJavaAssert()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileWithJavaAssert()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-      //synchronized(listener2) {   ", "-        doc.startCompile();", "-        if (_model.getNumErrors() > 0) {", "-          fail(\"compile failed: \" + getCompilerErrorString());", "-        }", "-        //listener2.wait();", "-      //}", "+      doc.startCompile();", "+      if (_model.getNumErrors() > 0) {", "+        fail(\"compile failed: \" + getCompilerErrorString());", "+      }", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cef60c27fc9aa3500267812e9e6ea5d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 368, "methodNumberAfterChange": 578, "signatureBeforeChange": "    final private boolean jj_3R_94()", "signatureAfterChange": "    final private boolean jj_3R_95()", "diff": ["-", "-  final private boolean jj_3R_94() {", "-    if (jj_3_41()) {", "-    if (jj_3_42()) {", "-    if (jj_3R_137()) {", "-    if (jj_3R_138()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_139()) return true;", "-    }", "+", "+  final private boolean jj_3R_95() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_41()) {", "+    jj_scanpos = xsp;", "+    if (jj_3_42()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_138()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_139()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_140()) return true;", "+    }", "+    }", "+    }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf07c89f73f0a28167ca0c5e50b5f321", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "commitAfterChange": "a8ba898ce33911122e91ee2c93e5825d2f8c0e22", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "   public void testConsoleInput() throws DocumentAdapterException", "signatureAfterChange": "   public void testConsoleInput() throws DocumentAdapterException", "diff": ["-    _model.setInputListener(new InputListener() {", "+    _model.getInteractionsModel().setInputListener(new InputListener() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf28015e1bd25c3e5f107779ac7ed751", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testInteractionsCanSeeCompiledClasses()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsCanSeeCompiledClasses()     throws BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-    throws BadLocationException, IOException, InterruptedException", "+    throws BadLocationException, DocumentAdapterException,", "+    IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf3badc7b03b91a25fc0299b374bc568", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 105, "signatureBeforeChange": "          public void testGetQualifiedClassName()", "signatureAfterChange": "          public void testGetQualifiedClassName()", "diff": ["-      _llv._package=\"\";", "-      assertEquals(\"Should not change qualified name.\", \"simpson.Bart\", _llv.getQualifiedClassName(\"simpson.Bart\"));", "-      assertEquals(\"Should not change unqualified name.\", \"Lisa\", _llv.getQualifiedClassName(\"Lisa\"));", "+      testLLVisitor._package=\"\";", "+      assertEquals(\"Should not change qualified name.\", \"simpson.Bart\", testLLVisitor.getQualifiedClassName(\"simpson.Bart\"));", "+      assertEquals(\"Should not change unqualified name.\", \"Lisa\", testLLVisitor.getQualifiedClassName(\"Lisa\"));", "-      _llv._package=\"myPackage\";", "+      testLLVisitor._package=\"myPackage\";", "-                   _llv.getQualifiedClassName(\"myPackage.Snowball\"));", "+                   testLLVisitor.getQualifiedClassName(\"myPackage.Snowball\"));", "-                   _llv.getQualifiedClassName(\"simpson.Snowball\"));", "+                   testLLVisitor.getQualifiedClassName(\"simpson.Snowball\"));", "-                   _llv.getQualifiedClassName(\"Grandpa\"));", "+                   testLLVisitor.getQualifiedClassName(\"Grandpa\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf401b0a5b74fd2b2613b5f8077f128e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "diff": ["+    panel.addComponent(new ForcedChoiceOptionComponent(OptionConstants.LOOK_AND_FEEL,", "+                                                       \"Look and Feel\", this,", "+                                                       \"Changes the general appearance of DrJava.\"));", "+    ", "-                                                  \"Line Number Enumeration\", this,", "+                                                  \"Show All Line Numbers\", this,", "-    if (CodeStatus.DEVELOPMENT) {", "-      panel.addComponent(new ForcedChoiceOptionComponent(OptionConstants.LOOK_AND_FEEL,", "-                                                         \"Look and Feel\", this,", "-                                                         \"Sets the look and feel DrJava should use\"));", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf5502c585ab07bd0e24f7d6cf87cbb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "ab0ded3db9141ff4121c607c60b106535592b093", "commitAfterChange": "d74188241db90ffeca61708e1d5c82b1650e2c97", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   static void checkForCompilersAndDebugger(String[] args)", "signatureAfterChange": "   static void checkForCompilersAndDebugger(String[] args)", "diff": ["-    // Check to see if we need to restart for JSR14 (not working yet)", "-    //boolean restartForJSR14 = shouldPrependJSR14ToBootclasspath();", "-    boolean restartForJSR14 = false;", "-", "-    restartIfNecessary(restartForToolsJar, restartForJSR14, args);", "+    // Originally this also took in a flag if it was necessary to", "+    // restart to be able to use JSR-14 on OS X.  That is no longer", "+    // necessary, but I'll leave the contract like this for the time", "+    // being (in case another condition comes up).", "+    restartIfNecessary(restartForToolsJar, args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf78063034237a29c7810bd5ba06a397", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public Component getTreeCellRendererComponent(JTree tree, Object value, boolean isSelected, boolean isExpanded,                                                    boolean leaf, int row, boolean hasFocus)", "signatureAfterChange": "     public Component getTreeCellRendererComponent(JTree tree, Object value, boolean isSelected, boolean isExpanded,                                                    boolean leaf, int row, boolean hasFocus)", "diff": ["-//            doc.acquireReadLock();", "+            doc.acquireReadLock();", "-//            finally { doc.releaseReadLock(); }", "+            finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfa5f8609f279d7b757efe938f01b296", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testCompileAllWithNoFiles()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllWithNoFiles()     throws BadLocationException, IOException, InterruptedException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfa6f3b0ba14dbdfbd063cdee8df8c57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerProxy.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    private void _recreateCompiler()", "signatureAfterChange": "    private void _recreateCompiler()", "diff": ["+    _log.log(this + \"._recreateCompiler() called\");", "+    ", "-//      Utilities.show(\"Class \" + c + \" loaded\");", "+      _log.log(\"Class \" + c + \" loaded\");", "+      ", "+      _log.log(\"_realCompiler set to \" + _realCompiler);", "-//      Utilities.show(\"Compiler created with name \" + compilerClass);", "+      _log.log(\"Compiler created with name \" + compilerClass);", "-    catch (Throwable t) {  /* don't do anything. realCompiler stays null. */ }", "+    catch (Throwable t) { ", "+      _log.log(this + \"._recreateCompiler() threw exception \" + t);", "+    /* don't do anything. realCompiler stays null. */ ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfaa3a18de55b71f343ec56c63a7910e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 620, "methodNumberAfterChange": 896, "signatureBeforeChange": "    final private boolean jj_3R_623()", "signatureAfterChange": "    final private boolean jj_3R_376()", "diff": ["-", "-  final private boolean jj_3R_623() {", "-    if (jj_3R_94()) return true;", "-    if (jj_3R_631()) jj_scanpos = xsp;", "-    return false;", "-  }", "+  final private boolean jj_3R_376() {", "+    if (jj_3R_96()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_598()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfb17000562ce010a99df14982a2f1a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Void forBlock(Block that)", "signatureAfterChange": "   public Void forBlock(Block that)", "diff": ["-    that.getStatements().visit(new BodyBodyIntermediateVisitor(bd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    that.getStatements().visit(new BodyBodyIntermediateVisitor(bd, _file, _package, _importedFiles, _importedPackages,", "+                                                               _classNamesInThisFile, continuations, _innerClassesToBeParsed));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfbb8297c199ba740f0f07c11fd50c1a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 488, "methodNumberAfterChange": 477, "signatureBeforeChange": "    final private boolean jj_3R_102()", "signatureAfterChange": "    final private boolean jj_3R_104()", "diff": ["-  final private boolean jj_3R_102() {", "-    if (jj_3R_161()) return true;", "+  final private boolean jj_3R_104() {", "+    if (jj_3R_169()) return true;", "-      if (jj_3_46()) { jj_scanpos = xsp; break; }", "+      if (jj_3_48()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfc700ec85c6d4239e348e765a2cbe0e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "    public void testReplaceAllContinueNoMatchCase() throws BadLocationException", "signatureAfterChange": "    public void testReplaceAllContinueNoMatchCase() throws BadLocationException", "diff": ["-    _frm.replaceAll();", "+    replaceAll();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfcbd0d691f68aa241f7098023ad65e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "f21f60b12bbd978bd39980f3ff0792b181091994", "commitAfterChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testSave() throws Exception", "signatureAfterChange": "\r   public void testSave() throws Exception", "diff": ["-  }", "-  public void testSave() throws Exception {", "-    XMLConfig xc = new XMLConfig(new StringReader(", "-                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><foo a=\\\"foo.a\\\">\\n\"", "-                                                    + \"  <bar>abc</bar>\\n\"", "-                                                    + \"  <fum fee=\\\"xyz\\\">def</fum>\\n\"", "-                                                    + \"</foo>\"));", "-    System.err.println(xc.toString());", "-    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL", "-                   + \"<foo a=\\\"foo.a\\\">\"+NL", "-                   + \"  <bar>abc</bar>\"+NL", "-                   + \"  <fum fee=\\\"xyz\\\">def</fum>\"+NL", "-                   + \"</foo>\"+NL, xc.toString());", "-  }", "+  }\r", "+  public void testSave() throws Exception {\r", "+    XMLConfig xc = new XMLConfig(new StringReader(\r", "+                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><foo a=\\\"foo.a\\\">\\n\"\r", "+                                                    + \"  <bar>abc</bar>\\n\"\r", "+                                                    + \"  <fum fee=\\\"xyz\\\">def</fum>\\n\"\r", "+                                                    + \"</foo>\"));\r", "+    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL\r", "+                   + \"<foo a=\\\"foo.a\\\">\"+NL\r", "+                   + \"  <bar>abc</bar>\"+NL\r", "+                   + \"  <fum fee=\\\"xyz\\\">def</fum>\"+NL\r", "+                   + \"</foo>\"+NL, xc.toString());\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfe8cb0d58bc8b400b815b124ec78b16", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 531, "methodNumberAfterChange": 531, "signatureBeforeChange": "    final private boolean jj_3R_432()", "signatureAfterChange": "    final private boolean jj_3R_433()", "diff": ["-  final private boolean jj_3R_432() {", "-    if (jj_3R_445()) return true;", "+  final private boolean jj_3R_433() {", "+    if (jj_3R_447()) return true;", "-      if (jj_3R_456()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_458()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cff34b1a32d4b5ff554da0a9eebdfc9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 342, "methodNumberAfterChange": 345, "signatureBeforeChange": "    final private boolean jj_3R_459()", "signatureAfterChange": "    final private boolean jj_3R_466()", "diff": ["-  final private boolean jj_3R_459() {", "+  final private boolean jj_3R_466() {", "-    if (jj_3R_437()) return true;", "+    if (jj_3R_444()) return true;", "-    if (jj_3R_158()) return true;", "+    if (jj_3R_162()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cff9e9b213eb7bf11c3e68a4fb4098c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/AbstractInteractionsDocument.java", "commitBeforeChange": "b0d972d74202b06a8aec19804a46939a0aac3bf3", "commitAfterChange": "f81eb3cdab335666760ab0cb868fe3567723e9df", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public AbstractInteractionsDocument(DocumentAdapter document,                                       int maxHistorySize)", "signatureAfterChange": "   public AbstractInteractionsDocument(DocumentAdapter document,                                       int maxHistorySize)", "diff": ["+    ", "+    // Prevent any edits before the prompt!", "+    _document.setEditCondition(new InteractionsEditCondition());", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0228126c5425b0e377ffb8b40158c9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2500166c0751d6a8cb3d1502502bde53fcc48afb", "commitAfterChange": "e8cc87f4c1373cc71556480da6b0490c23688c68", "methodNumberBeforeChange": 183, "methodNumberAfterChange": 186, "signatureBeforeChange": "   private JMenu _setUpProjectMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpProjectMenu(int mask)", "diff": ["-    //Add save", "+    //Save", "+    projectMenu.add(_saveProjectAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d03ad927f39dff3ae9da4c7ec4b59d2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModel.java", "commitBeforeChange": "0d6a1751a06319b8d446186ea0aafba68239ee0c", "commitAfterChange": "50d54a2cc075d489d4814ce780949e6748ba1350", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   private JUnitError _makeJUnitError ( TestFailure tF, String theclass, boolean isError)", "signatureAfterChange": "   private JUnitError _makeJUnitError ( TestFailure tF, String theclass, boolean isError)", "diff": ["-       ", "+    ", "-      tFail.thrownException().toString() : ", "+      tFail.thrownException().toString(): ", "-    return new JUnitError(_file, lineNum, 0, exception,", "-                                 ! (tFail.thrownException() instanceof AssertionFailedError),", "-                                 tcFail.getName());", "+      return new JUnitError(_file, lineNum, 0, exception,", "+                            ! (tFail.thrownException() instanceof AssertionFailedError),", "+                            tcFail.getName(),", "+                            swFail.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d03f41b40b6a6f66fd98713e4167dafc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CompilerErrorPanel.java", "commitBeforeChange": "10d037d002127c66461b05fbabf525120456d4de", "commitAfterChange": "db8669ae9206a0729c54329af2423ab54c073da7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "    private void _createPositionsArray()", "signatureAfterChange": "    private void _createPositionsArray()", "diff": ["-        int nextNewline = defsText.indexOf(NEWLINE, offset);", "+        int nextNewline = defsText.indexOf('\\n', offset);", "-    catch (BadLocationException willNeverEverEverHappen) {}", "+    catch (BadLocationException willNeverEverEverHappen) {", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d04ab955daa00917b0f2f7c5b61afd4c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 339, "methodNumberAfterChange": 342, "signatureBeforeChange": "    final private boolean jj_3R_331()", "signatureAfterChange": "    final private boolean jj_3R_338()", "diff": ["-", "-  final private boolean jj_3R_331() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_57()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_341()) return true;", "+  final private boolean jj_3R_338() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_58()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_348()) return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d04c6859a7f2a8be906fa0a8a27bfd41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 550, "methodNumberAfterChange": 533, "signatureBeforeChange": "    final private boolean jj_3R_147()", "signatureAfterChange": "    final private boolean jj_3R_151()", "diff": ["-  final private boolean jj_3R_147() {", "+  final private boolean jj_3R_151() {", "-    if (jj_3R_102()) return true;", "+    if (jj_3R_105()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d05dfabc326efb4cfcfa2cbe7640f1a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyFullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "              public void xtestForInitializedVariableDeclaratorDoFirst()", "signatureAfterChange": "              public void xtestForInitializedVariableDeclaratorDoFirst()", "diff": ["-      InitializedVariableDeclarator ivd = new InitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO,", "-                                                                            new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"),", "-                                                                            new Word(JExprParser.NO_SOURCE_INFO, \"i\"),", "-                                                                            new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 2));", "+      InitializedVariableDeclarator ivd = new InitializedVariableDeclarator(SourceInfo.NO_INFO,", "+                                                                            new PrimitiveType(SourceInfo.NO_INFO, \"int\"),", "+                                                                            new Word(SourceInfo.NO_INFO, \"i\"),", "+                                                                            new IntegerLiteral(SourceInfo.NO_INFO, 2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d061291cae09bac25a3577a61e943f1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/BinaryMappedIterable.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public boolean isFixed()", "signatureAfterChange": "      public R last()", "diff": ["-  public boolean isFixed() { return IterUtil.isFixed(_source1); }", "+  ", "+  public R last() { return _map.value(IterUtil.last(_source1), IterUtil.last(_source2)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d06352903195b6fcef9fc379af457aca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   @Override public TypeContext visit(ForEachStatement node)", "signatureAfterChange": "   @Override public TypeContext visit(ForEachStatement node)", "diff": ["-        MethodInvocation iteratorInv = ts.lookupMethod(node.getCollection(), \"iterator\", ", "-                                                       IterUtil.<Type>empty(),", "-                                                       IterUtil.<Expression>empty(),", "-                                                       Option.<Type>none());", "+        MethodInvocation iteratorInv = ts.lookupMethod(node.getCollection(), \"iterator\", IterUtil.<Type>empty(),", "+                                                       IterUtil.<Expression>empty(), Option.<Type>none(),", "+                                                       context.accessModule());", "-        MethodInvocation nextInv = ts.lookupMethod(getIterator, \"next\", ", "-                                                   IterUtil.<Type>empty(),", "-                                                   IterUtil.<Expression>empty(),", "-                                                   Option.<Type>none());", "+        MethodInvocation nextInv = ts.lookupMethod(getIterator, \"next\", IterUtil.<Type>empty(),", "+                                                   IterUtil.<Expression>empty(), Option.<Type>none(),", "+                                                   context.accessModule());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d07a2eda8fc842a4b182535565d63220", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "9de352299088533a44cc17c1ffd7938654146b70", "commitAfterChange": "fb275f71eca23e6f93c695458f20ebc27e058287", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public ClassLoaderExtension(Interpreter i)", "signatureAfterChange": "     public ClassLoaderExtension(Interpreter i)", "diff": ["-      // This makes sure that we can find classes that are in the system's", "-      // class path, even though we don't fully delegate to the system", "-      // loader. (We just ask the system loader to get us the bytes of the", "-      // class, and then we call defineClass ourselves.)", "-      classLoader = ClassLoader.getSystemClassLoader();", "-      //System.err.println(\"created loader extension\");", "+      classLoader = getClass().getClassLoader();", "+", "+      // don't load the dynamic java stuff using the sticky loader!", "+      // without this, interpreter-defined classes don't work.", "+      String[] excludes = {", "+        \"edu.rice.cs.drjava.model.repl.DynamicJavaAdapter$InterpreterExtension\",", "+        \"edu.rice.cs.drjava.model.repl.DynamicJavaAdapter$ClassLoaderExtension\"", "+      };", "+", "+      // we will use this to getResource classes", "+      _stickyLoader = new StickyClassLoader(this,", "+                                            getClass().getClassLoader(),", "+                                            excludes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d086fc006da930c8067b4b029a9aae6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   protected VariableData[] formalParameters2VariableData(FormalParameter[] fps, Data d)", "signatureAfterChange": "   protected VariableData[] formalParameters2VariableData(FormalParameter[] fps, Data d)", "diff": ["-    // This is something of a hack.  The parameters to a static method can be referened within the method itself,", "-    // even though they are not declared to be static fields.  Since making them static has no effect on any other processing, go", "+    // This is a hack.  The parameters to a static method can be referened within the method itself, even though they", "+    // are not declared to be static fields.  Since making them static has no effect on any other processing, go", "-                                    new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, mav), ", "+                                    new ModifiersAndVisibility(NO_INFO, mav), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d09957094ac3819c89faed1ffcac9ef2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public Void visit(PreDecrement node)", "signatureAfterChange": "   public Void visit(FloatTypeName node)", "diff": ["+   */", "+  public Void visit(FloatTypeName node) {", "+    handlePrimitiveTypeName(node, \"float\");", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d09a47aa6975a43880b37faa5a316200", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "commitAfterChange": "953692cfe4661f9adf09381b834b1831bae5e30c", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 138, "signatureBeforeChange": "      public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason)", "signatureAfterChange": "      public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason)", "diff": ["+        case JOptionPane.CANCEL_OPTION:", "+        case JOptionPane.CLOSED_OPTION:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0ae4034d00921a5d70fc688dbe1f8d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 172, "signatureBeforeChange": "     public void fileReverted(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public void fileReverted(OpenDefinitionsDocument doc)", "diff": ["+      if (inDebugMode()) _updateDebugStatus();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c7fa27c3e997889c219f27ae5e103c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testDocLocationAfterSwitch() throws BadLocationException", "signatureAfterChange": "   public void testDocLocationAfterSwitch() throws BadLocationException", "diff": ["-    OpenDefinitionsDocument doc = pane.getOpenDocument();//.getDocument();", "+    OpenDefinitionsDocument doc = pane.getOpenDefDocument();//.getDocument();", "-    doc = pane.getOpenDocument();//.getDocument();", "+    doc = pane.getOpenDefDocument();//.getDocument();", "-    doc = pane.getOpenDocument();//.getDocument();", "+    doc = pane.getOpenDefDocument();//.getDocument();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0d446e76889d9636de45ec2b4848396", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/History.java", "commitBeforeChange": "a520786d8d1520e61a5d09f9965e3e703ead8f0f", "commitAfterChange": "9a95c6b81fc6b72a8f3091fca3e6d024396b35a0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void add(String item)", "signatureAfterChange": "   public void add(String item)", "diff": ["+    ", "+        ", "+        // If adding the new element has filled _vector to beyond max ", "+        // capacity, spill the oldest element out of the History.", "+        if (_vector.size() > MAX_SIZE) {", "+          _vector.removeElementAt(0);", "+        }", "+      moveEnd();", "-", "-    moveEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1055fc836c7b74677c966e527f2396e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "0d6a1751a06319b8d446186ea0aafba68239ee0c", "commitAfterChange": "50d54a2cc075d489d4814ce780949e6748ba1350", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testDebugSourcepath()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testDebugSourcepath()      throws DebugException, BadLocationException, IOException, InterruptedException", "diff": ["-      _debugManager.startup();", "+      _startup();  //_debugManager.startup();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d10c8b52d85dda5a8ce284ecbe2d8517", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 424, "methodNumberAfterChange": 238, "signatureBeforeChange": "    final private boolean jj_3R_112()", "signatureAfterChange": "    final private boolean jj_3R_105()", "diff": ["+", "+  final private boolean jj_3R_105() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_41()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_131()) return true;", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_112() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_48()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_135()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d113e77a8f0188c72734e69ca7274891", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testSaveButtonEnabled() throws IOException", "signatureAfterChange": "   public void testSaveButtonEnabled() throws IOException", "diff": ["-//    _log.log(\"testSaveButtonEnabled completed\");", "+    _log.log(\"testSaveButtonEnabled completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1267ff42b0639295689f8847d675172", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 489, "signatureBeforeChange": "    final private boolean jj_3R_397()", "signatureAfterChange": "    final private boolean jj_3R_597()", "diff": ["-", "-  final private boolean jj_3R_397() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_410()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_411()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_597() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_601()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_602()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d12bcfe1d5984b641e9818b9d1e1f1c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 600, "methodNumberAfterChange": 400, "signatureBeforeChange": "    final private boolean jj_3R_283()", "signatureAfterChange": "    final private boolean jj_3R_284()", "diff": ["+", "+  final private boolean jj_3R_284() {", "+    if (jj_3R_295()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_330()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_283() {", "-    if (jj_3R_306()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_332()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1451b95f769d5de57105b15f56746fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 334, "methodNumberAfterChange": 332, "signatureBeforeChange": "    final private boolean jj_3R_260()", "signatureAfterChange": "    final private boolean jj_3R_261()", "diff": ["-  final private boolean jj_3R_260() {", "+  final private boolean jj_3R_261() {", "-    if (jj_3R_170()) return true;", "+    if (jj_3R_171()) return true;", "-    if (jj_3R_318()) jj_scanpos = xsp;", "+    if (jj_3R_319()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1490c2bcef7414f326962479091005e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentAdapter.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void forceRemoveText(int offs, int len) throws DocumentAdapterException", "signatureAfterChange": "   public void forceRemoveText(int offs, int len)", "diff": ["-  public void forceRemoveText(int offs, int len) throws DocumentAdapterException {", "+  public void forceRemoveText(int offs, int len) {", "-    try {", "-      super.remove(offs, len);", "-    }", "-    catch (BadLocationException e) {", "-      throw new DocumentAdapterException(e);", "-    }", "+    try { super.remove(offs, len); }", "+    catch (BadLocationException e) { throw new DocumentAdapterException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d156a153e01f4d3c2c3db02215b5da31", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 104, "signatureBeforeChange": "      public boolean isEmpty()", "signatureAfterChange": "      public boolean isEmpty()", "diff": ["-", "-    public boolean isEmpty() {", "-      return size() == 0;", "-    }", "+    public boolean isEmpty() { return empty(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1623ef7ee4199fe4bfb617d026349da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/HighlightManagerTest.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testHighlightInfoEquals()", "signatureAfterChange": "      public void testHighlightInfoEquals()", "diff": ["-    HighlightManager.HighlightInfo hi1, hi2, hi3, hi4, hi5;", "+    HighlightManager.HighlightInfo hi1, hi2, hi3, hi4;//, hi5;", "-    hi5 = hm.new HighlightInfo(0,0,p2);", "+//    hi5 = hm.new HighlightInfo(0,0,p2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d166ef1b17ba577b4df67010c06c9cf3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 313, "methodNumberAfterChange": 294, "signatureBeforeChange": "    final private boolean jj_3R_378()", "signatureAfterChange": "    final private boolean jj_3R_464()", "diff": ["-", "-  final private boolean jj_3R_378() {", "-    if (jj_3R_391()) return true;", "-    if (jj_3R_409()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_464() {", "+    if (jj_3R_483()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_512()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d187a15f9ae7bc9d29ec435a436a7247", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 455, "methodNumberAfterChange": 440, "signatureBeforeChange": "    final private boolean jj_3R_395()", "signatureAfterChange": "    final private boolean jj_3R_398()", "diff": ["+", "+  final private boolean jj_3R_398() {", "+    if (jj_3R_109()) return true;", "+    if (jj_3R_420()) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_421()) { jj_scanpos = xsp; break; }", "+    if (jj_scan_token(SEMICOLON)) return true;", "-", "-  final private boolean jj_3R_395() {", "-    if (jj_3R_109()) return true;", "-    if (jj_3R_79()) return true;", "-    if (jj_3R_417()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_418()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d194d37b2387366a67f4ba081489dd34", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "c5393075df9303b791f0a8e80d6b5a15f548551a", "commitAfterChange": "826853cc9405a53970a4e3ba9d7145b4ff5544e8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private int _move(int count,                      ModelList<ReducedToken>.Iterator copyCursor,                     int currentOffset)", "signatureAfterChange": "   private int _move(int count,                      ModelList<ReducedToken>.Iterator copyCursor,                     int currentOffset)", "diff": ["-    ModelList<ReducedToken>.Iterator copyCursor2 = copyCursor.copy();", "-    if (count == 0)", "+    ModelList<ReducedToken>.Iterator copyCursor2 = copyCursor.copy();", "+", "+    if (count == 0) {", "+      copyCursor2.dispose();", "+    }", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1ab291326b4c5f04cfce73485aa3c1b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "fcb52146fe5952d46eb1cf9b67172e0f75de7a52", "commitAfterChange": "fbab2bd705dc6109a68454696cb8f397eb070aa2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void junitAll(List<String> qualifiedClassnames, List<File> files)", "signatureAfterChange": "   public void junitAll(List<String> qualifiedClassnames, List<File> files)", "diff": ["-    synchronized(_compilerModel) {", "+    synchronized(_compilerModel.getSlaveJVMLock()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1b592217e74fe3ec8b779a4a1cab364", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 625, "methodNumberAfterChange": 751, "signatureBeforeChange": "    final private boolean jj_3R_541()", "signatureAfterChange": "    final private boolean jj_3R_522()", "diff": ["-", "-  final private boolean jj_3R_541() {", "-    if (jj_3R_546()) {", "-    if (jj_3R_547()) return true;", "+", "+  final private boolean jj_3R_522() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_540()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_541()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1c655dfb319bce5cbd0bbc3a1e05224", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsPane.java", "commitBeforeChange": "5e30c7f70ee8822945ce8efbfadabc105dbf602f", "commitAfterChange": "d1b53b456f7dd4cc72458a21036639096a69a74e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public DefinitionsPane(MainFrame mf, GlobalModel model)", "signatureAfterChange": "   public DefinitionsPane(MainFrame mf, GlobalModel model)", "diff": ["+    setDocument(_model.getDefinitionsDocument());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1d5f9be8c154da6d1eb256113901f9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "ba6c4f3e75450c2f5fbfc757090778e3a5129db6", "commitAfterChange": "c1b3c8c817e5cef39e7e8687aac1d15b90d8ade1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public JTreeSortNavigator(String projfilepath)", "signatureAfterChange": "   public JTreeSortNavigator(String projfilepath)", "diff": ["-    System.err.println(isEditable());", "+//    System.err.println(isEditable());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1d7a94d6bc247e547c29f08239e72df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 308, "methodNumberAfterChange": 311, "signatureBeforeChange": "    final private boolean jj_3R_373()", "signatureAfterChange": "    final private boolean jj_3R_374()", "diff": ["-  final private boolean jj_3R_373() {", "-    if (jj_3R_101()) return true;", "+  final private boolean jj_3R_374() {", "+    if (jj_3R_102()) return true;", "-    if (jj_3R_381()) jj_scanpos = xsp;", "+    if (jj_3R_382()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1de4e699d35c3d3573edda902bb828d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public String getEnclosingTopLevelClassName(int pos) throws ClassNameNotFoundException", "signatureAfterChange": "   public String getEnclosingTopLevelClassName(int pos) throws ClassNameNotFoundException", "diff": ["-        setCurrentLocation(pos);", "-        BraceInfo info = getEnclosingBrace();", "+        _setCurrentLocation(pos);", "+        BraceInfo info = _getEnclosingBrace();", "-          move(-info.distance());", "-          info = getEnclosingBrace();", "+          _move(-info.distance());", "+          info = _getEnclosingBrace();", "-          setCurrentLocation(oldPos);", "+          _setCurrentLocation(oldPos);", "-        int prevDelimPos = findPrevDelimiter(topLevelBracePos, delims);", "+        int prevDelimPos = _findPrevDelimiter(topLevelBracePos, delims);", "-        setCurrentLocation(oldPos);", "+        _setCurrentLocation(oldPos);", "-        setCurrentLocation(oldPos);", "+        _setCurrentLocation(oldPos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1ec969b1656dfb00f8507cb1c11e3bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "64292becb14dc44418f35810edeb4a6d2191c842", "commitAfterChange": "259bb88464e346cdfa965cdd983e90b5c41ca5a0", "methodNumberBeforeChange": 309, "methodNumberAfterChange": 309, "signatureBeforeChange": "      private boolean _save()", "signatureAfterChange": "      private boolean _save()", "diff": ["+      _model.setActiveDocument(_model.getActiveDocument());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2072148899846aa076013cb6b19d44d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "facb31d52d0108009578d6a1708ac1dfc68b98b8", "commitAfterChange": "417b6d282f87d7da5aa7274e065294c3e7058851", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "    private void _setUpTabs()", "signatureAfterChange": "    private void _setUpTabs()", "diff": ["-    //_tabbedPane.add(\"Test output\", _junitPanel);", "+    _tabbedPane.add(\"Test output\", _junitPanel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2293981a1cdae88edc65de3b1e8cd7a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 488, "methodNumberAfterChange": 482, "signatureBeforeChange": "    final private boolean jj_3R_128()", "signatureAfterChange": "    final private boolean jj_3R_129()", "diff": ["-", "-  final private boolean jj_3R_128() {", "+  final private boolean jj_3R_129() {", "-    if (jj_3_59()) jj_scanpos = xsp;", "+    if (jj_3_63()) jj_scanpos = xsp;", "-    if (jj_3R_100()) return true;", "+    if (jj_3R_101()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d241e7fbb6194a3c0c3cab07d9ca751a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "209bedfa2bd8c92b4b250a04fcd63c3f7f96576a", "commitAfterChange": "8993de4964b51e2163e6ef77e75f505716cdcf78", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   private void _updateFree(ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private void _updateFree(ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-", "+\t\t_combineCurrentAndNextIfFind(\"\",\"\", copyCursor);", "+\t\t//if a / preceeds a /* or a // combine them.", "+\t\t_combineCurrentAndNextIfFind(\"/\",\"/*\",copyCursor);", "+\t\t_combineCurrentAndNextIfFind(\"/\",\"//\",copyCursor);", "+\t\t", "-\t\t\t\t_breakComment(copyCursor);", "+\t\t\t\t_splitCurrentIfCommentBlock(true,copyCursor);", "+        //_breakComment(copyCursor);", "-\t\t\t\t_updateFree(copyCursor);", "+\t\t\t\t_updateBasedOnCurrentStateHelper(copyCursor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d25d0f77bf89068ec951cfcd5741c479", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 754, "methodNumberAfterChange": 379, "signatureBeforeChange": "    final private boolean jj_3R_534()", "signatureAfterChange": "    final private boolean jj_3R_540()", "diff": ["+  final private boolean jj_3R_540() {", "+    if (jj_3R_240()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_559()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_534() {", "-    if (jj_3R_552()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_553()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d26d8b9dd0116e3ec81770ced33c1a4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 698, "methodNumberAfterChange": 696, "signatureBeforeChange": "    final private boolean jj_3R_473()", "signatureAfterChange": "    final private boolean jj_3R_475()", "diff": ["-  final private boolean jj_3R_473() {", "+  final private boolean jj_3R_475() {", "-    if (jj_3_31()) {", "+    if (jj_3_32()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_478()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2709d6fc99c1061e7082d770ae695ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/Configuration.java", "commitBeforeChange": "7748aa0d84a52f8872bfaa33a4544c287e2cb350", "commitAfterChange": "32a6a91e5456ec4c66a7ab498cfc3e6e0c6e281e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public String getJavacLocation()", "signatureAfterChange": "   public String getJavacLocation()", "diff": ["-    return (String) _properties.get(JAVAC_LOCATION_KEY);", "+    return _properties.getProperty(JAVAC_LOCATION_KEY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d27d3454435b5f39ce01dce8b8f06d52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public Class visit(CatchStatement node)", "signatureAfterChange": "   public Class visit(CatchStatement node)", "diff": ["-    ", "-    Class c = (Class)node.getException().acceptVisitor(this);", "+", "+    Class c = node.getException().acceptVisitor(this);", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2893c261c5adf10cc51680de41dbb8d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 87, "signatureBeforeChange": "     public boolean isUntitled()", "signatureAfterChange": "     public boolean isUntitled()", "diff": ["-      return getDocument().isUntitled();", "+      return (_file == null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d29553a146ec354ca1a02881a9985fec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 728, "methodNumberAfterChange": 733, "signatureBeforeChange": "    final private boolean jj_3R_106()", "signatureAfterChange": "    final private boolean jj_3R_107()", "diff": ["-  final private boolean jj_3R_106() {", "+  final private boolean jj_3R_107() {", "-    if (jj_3R_159()) {", "+    if (jj_3R_160()) {", "-    if (jj_3R_160()) return true;", "+    if (jj_3R_161()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d29bb4624d98344921aa4ce0339c6ec4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public Boolean value(Object o1, Object o2, Object o3)", "signatureAfterChange": "     public boolean contains(Object o1, Object o2, Object o3)", "diff": ["-    public Boolean value(Object o1, Object o2) { return false; }", "-    public Boolean value(Object o1, Object o2, Object o3) { return false; }", "+    public boolean contains(Object o1, Object o2) { return false; }", "+    public boolean contains(Object o1, Object o2, Object o3) { return false; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2a006d32b8c3cbe964b50f2a76caf24", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CompilerErrorPanel.java", "commitBeforeChange": "5f1b3bc3f3deca6d356567893a20298f4e5a94a7", "commitAfterChange": "3101443d576fa6f63ae40ca208e243a26acf0b6b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "    private void _selectError(int newIndex)", "signatureAfterChange": "    private void _selectError(int newIndex)", "diff": ["-    if (newIndex != _errorListPane.getSelectedIndex()) {", "-      _errorListPane.selectItem(newIndex);", "-    }", "+    _errorListPane.selectItem(newIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b59d61d0e138a402643faaccab6ce5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "f835199d645f480bb352cc51cff6dc5ae32e7dc4", "commitAfterChange": "f25bc20d2dd4058b4cf2bf5f693569e62fb40d6b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          public Predicate<Type> subtypes(Type sup)", "signatureAfterChange": "          public Predicate<Type> subtypes(Type sup)", "diff": ["-    public Predicate<Type> subtypes(Type sup) { return LambdaUtil.bindSecond((Order<Type>) this, sup); }", "+    public Predicate<Type> subtypes(Type sup) { return bindSecond((Order<Type>) this, sup); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2d82db061f8b6413a23e02d9fc33c3b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/repl/EclipseInteractionsModel.java", "commitBeforeChange": "1827cec0a07b944a36f95e36eebdc6666dc9617c", "commitAfterChange": "302914e42441eaa34fb8588c2f19600c7ec3298a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   protected void _notifyInterpreterChanged(final boolean inProgress)", "signatureAfterChange": "   protected void _notifyInterpreterChanged(final boolean inProgress)", "diff": ["-      ((InteractionsListener)_listeners.get(i)).interpreterChanged(inProgress);", "+      _listeners.get(i).interpreterChanged(inProgress);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2dd44627c594450aa24e91c826453ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public abstract ObjectFieldReference lookupField(Expression object, String name)     throws UnmatchedLookupException;", "signatureAfterChange": "   public abstract ObjectFieldReference lookupField(Expression object, String name, Access.Module accessModule)     throws UnmatchedLookupException;", "diff": ["-  public abstract ObjectFieldReference lookupField(Expression object, String name)", "+  public abstract ObjectFieldReference lookupField(Expression object, String name, Access.Module accessModule)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2e0bd77a49c00be4bdec8e15218a969", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "09bec3d114e78a39aad7410d5a4ed3ab2cdf1dc4", "commitAfterChange": "8ece0edfbf0fa97c28d74f8231f220f413cd26e5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected StaticFieldAccess _getStaticFieldAccessForField(String field, Context context)", "signatureAfterChange": "     protected StaticFieldAccess _getStaticFieldAccessForField(String field, Context context)", "diff": ["-    String currClass = _thisClassName;", "+    String currClass = _getFullyQualifiedClassNameForThis();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2e893422fac239394fb197fa5cc23eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/HistoryTest.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["-    _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "+    _tempDir = IOUtil.createAndMarkTempDirectory(\"DrJava-test-\" + user, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ea84b14889171aa84420f1ec5dcef1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 411, "methodNumberAfterChange": 396, "signatureBeforeChange": "    final private boolean jj_3R_213()", "signatureAfterChange": "    final private boolean jj_3R_214()", "diff": ["+", "+  final private boolean jj_3R_214() {", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_250()) jj_scanpos = xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_251()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_213() {", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3_7()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_249()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2f35eaefabcde6b6252089a2da42618", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 714, "methodNumberAfterChange": 727, "signatureBeforeChange": "    final private boolean jj_3R_254()", "signatureAfterChange": "    final private boolean jj_3R_257()", "diff": ["-", "-  final private boolean jj_3R_254() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_313()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_314()) jj_scanpos = xsp;", "-    if (jj_scan_token(RPAREN)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_257() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_317()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_318()) jj_scanpos = xsp;", "+    if (jj_scan_token(RPAREN)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3056533e28cd6e380b653976c02fb3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "commitAfterChange": "a8ba898ce33911122e91ee2c93e5825d2f8c0e22", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public InteractionsController(InteractionsModel model,                                 SwingDocumentAdapter adapter,                                 InteractionsPane pane)", "signatureAfterChange": "   public InteractionsController(InteractionsModel model,                                 SwingDocumentAdapter adapter,                                 InteractionsPane pane)", "diff": ["+    _model.setInputListener(_inputListener);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d307078fe995ad853c902fd34d5703cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "f1f97edd57f558d6d34abcd1fe039afc22f7a202", "commitAfterChange": "fc098bf0e8c385557d32ed3c183745582612add6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void setBreakpoint(Breakpoint breakpoint)     throws DebugException", "signatureAfterChange": "   public synchronized void setBreakpoint(Breakpoint breakpoint)", "diff": ["-  public void setBreakpoint(Breakpoint breakpoint)", "-    throws DebugException", "+  public synchronized void setBreakpoint(Breakpoint breakpoint)", "-    ", "-    _breakpoints.put(breakpoint.getRequest(), breakpoint);", "+    /*", "+    if (breakpoint.getRequest() != null)", "+      _breakpoints.put(breakpoint.getRequest(), breakpoint);*/", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d33d21398b18361f1282e775866cf38f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 307, "methodNumberAfterChange": 305, "signatureBeforeChange": "    final private boolean jj_3R_390()", "signatureAfterChange": "    final private boolean jj_3R_391()", "diff": ["-  final private boolean jj_3R_390() {", "-    if (jj_3R_398()) return true;", "+", "+  final private boolean jj_3R_391() {", "+    if (jj_3R_399()) return true;", "-      if (jj_3R_423()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_424()) { jj_scanpos = xsp; break; }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d35942053cc2b0cce0179ea525962364", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "          public void cleanBuildDirectory() throws FileMovedException, IOException", "signatureAfterChange": "     public void cleanBuildDirectory()", "diff": ["-    public void cleanBuildDirectory() throws FileMovedException, IOException{", "+    // This only starts the process. It is all done asynchronously.", "+    public void cleanBuildDirectory() {", "-      // clear cached class file of all documents", "-      for (OpenDefinitionsDocument doc: _documentsRepos) { doc.setCachedClassFile(null); }", "-", "-      cleanHelper(dir);", "-      if (! dir.exists()) dir.mkdirs();", "+      _notifier.executeAsyncTask(_findFilesToCleanTask, dir, false, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d35c804eedb36555ed4d39a99450d0cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "b0d972d74202b06a8aec19804a46939a0aac3bf3", "commitAfterChange": "f81eb3cdab335666760ab0cb868fe3567723e9df", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected void _addViewActions()", "signatureAfterChange": "   protected void _addViewActions()", "diff": ["-    // Prevent any edits before the prompt!", "-    _adapter.setEditCondition(new InteractionsEditCondition());", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d361176de492fad3bd31787e60b735df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "0a21fe796d2a739cd5fa25f360fa0808b0da6085", "commitAfterChange": "37cb2bfb22e115a398b71e747e8ea20db8f942c4", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void setIndent(final int indent)", "signatureAfterChange": "   public void setIndent(final int indent)", "diff": ["+    DrJava.CONFIG.setSetting(INDENT_LEVEL,new Integer(indent));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d36aaa900bc2d9d307e47e8ff24b1428", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public Object visit(CatchStatement node)", "signatureAfterChange": "   public Class visit(CatchStatement node)", "diff": ["-     */", "-    public Object visit(CatchStatement node) {", "-\t// Enter a new scope", "-\tcontext.enterScope();", "-", "-\tClass c = (Class)node.getException().acceptVisitor(this);", "-\tif (!Throwable.class.isAssignableFrom(c)) {", "-\t    node.setProperty(NodeProperties.ERROR_STRINGS,", "-\t\t\t     new String[] { c.getName() });", "-\t    throw new ExecutionError(\"catch.type\", node);", "-\t}", "-", "-\tnode.getBlock().acceptVisitor(this);", "-", "-\t// Leave the current scope", "-\tcontext.leaveScope();", "-\tnode.setProperty(NodeProperties.TYPE, c);", "-\treturn null;", "-    }", "+   */", "+  public Class visit(CatchStatement node) {", "+    // Enter a new scope", "+    context.enterScope();", "+    ", "+    Class c = (Class)node.getException().acceptVisitor(this);", "+    if (!Throwable.class.isAssignableFrom(c)) {", "+      node.setProperty(NodeProperties.ERROR_STRINGS,", "+                       new String[] { c.getName() });", "+      throw new ExecutionError(\"catch.type\", node);", "+    }", "+    ", "+    node.getBlock().acceptVisitor(this);", "+    ", "+    // Leave the current scope", "+    context.leaveScope();", "+    node.setProperty(NodeProperties.TYPE, c);", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d372a70305458c8a976b8907d057255c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testCompileClasspathOKDefaultPackage()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileClasspathOKDefaultPackage()     throws BadLocationException, IOException, InterruptedException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d37aa465767b93f5c9cc104775e6c293", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "0e6d6d4c130043dfa8d569e24f0f6f9c1f824f96", "commitAfterChange": "ccb8831468d9c146526d6431dd0a2aea7a5182b5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "   private void _distributeErrors(CompilerError[] errors)", "signatureAfterChange": "   private void _distributeErrors(CompilerError[] errors)       throws IOException", "diff": ["-  private void _distributeErrors(CompilerError[] errors) {", "+  private void _distributeErrors(CompilerError[] errors)", "+      throws IOException {", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d37fdabf15cc90b4b9a250b50eaeaa09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   @Override public Type visit(ObjectMethodCall node)", "signatureAfterChange": "   @Override public Type visit(ObjectMethodCall node)", "diff": ["-    if (node.getArguments() != null) { args = node.getArguments(); }", "-    for (Expression e : args) { e.acceptVisitor(this); }", "+    if (node.getArguments() != null) { args = node.getArguments(); checkList(args); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d38097b59f5f8b547bd9e88861b5dd82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 63, "signatureBeforeChange": "     public void interactionStarted()", "signatureAfterChange": "     public void interactionStarted()", "diff": ["-        _notifyObject(_notifierLock);", "+        _notifyLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d387c6d415b8b0062a71c19780c2177d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "da631ae365e5ae3fe7064b60f098ede0150c39bb", "commitAfterChange": "574257b530483460a9c0ce0cc5577b7fd93532dd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          protected void _updateWithErrors() throws BadLocationException", "signatureAfterChange": "          protected void _updateWithErrors() throws BadLocationException", "diff": ["-      SwingDocument doc = new SwingDocument();", "+      ErrorDocument doc = new ErrorDocument(getErrorDocumentTitle());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d39d365a71d6e140aef15dd0212b30dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void resume();", "signatureAfterChange": "   public void resume() throws DebugException;", "diff": ["-  public void resume();", "+  public void resume() throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a297ed76ab4fbc64291a3bd66ea52d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/SingleDisplayModelTest.java", "commitBeforeChange": "03dd354632fbfc12bf279640160bfd934404dc39", "commitAfterChange": "2714f88d04f312c23b21ec6a440193d44b7121ba", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void testDisplayFilename()      throws BadLocationException, IOException,       OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   public void testDisplayFilename()      throws BadLocationException, IOException,       OperationCanceledException, AlreadyOpenException", "diff": ["-    assertEquals(\"untitled display filename\", \"(untitled)\", ", "+    assertEquals(\"untitled display filename\", \"(Untitled)\", "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3bdf7eb78301d2d492674caae756c74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "591f8aac4f79eab75475a3d9dd862c3b019f02a1", "commitAfterChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "methodNumberBeforeChange": 525, "methodNumberAfterChange": 525, "signatureBeforeChange": "     public void caretUpdate(final CaretEvent ce)", "signatureAfterChange": "     public void caretUpdate(final CaretEvent ce)", "diff": ["-        if (offset == _offset + 1 && offset < doc.getLength() && doc.getText(_offset, 1).charAt(0) != '\\n') {", "+        if (offset == _offset + 1 && doc.getText(_offset, 1).charAt(0) != '\\n') {", "+          _offset += 1;", "-      catch(BadLocationException e) { /* do nothing */ }", "+      catch(BadLocationException e) { /* do nothing; should never happen */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3d0d0835c4d9a1d94dfbb33d8a0e847", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DrJavaProperty.java", "commitBeforeChange": "7fd25882874ad9a06ac74fda13ef9cc77e52813e", "commitAfterChange": "028b13db63615f9cda7227ddd738bbfc3e1c04ec", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public String getCurrent()", "signatureAfterChange": "   public String getCurrent()", "diff": ["-    if (!_isCurrent) {", "+    if (!isCurrent()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3d11e689db0c24d444dc98ce8e5ef65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "3ee912dd08cfe39e8657c2af6b0d5e18ddacab3b", "commitAfterChange": "91dc93d09494b5a49c2be62b759aefe74644dd8b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void setModifiedSinceSave()", "signatureAfterChange": "   public void setModifiedSinceSave()", "diff": ["-    _modifiedSinceSave = true;", "+    _modifiedSinceSave = _undoManager.isModified();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3e10ce40350e9b73f5f563e1bcb18d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "4cf68dc70458288095c944d37276893b11daf353", "commitAfterChange": "c22ae4a2b42306ce89775aaf2a5b300676337b0d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public void insertFront(T item)", "signatureAfterChange": "    public void insertFront(T item)", "diff": ["+  public void insertFront(T item) { insert(_head._next, item); }", "-  public void insertFront(T item) {", "-    Iterator it = new Iterator();", "-    it.insert(item);", "-    it.dispose();", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3e71a871dcfe19aab3e785d142cf55f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "30084d60ea1c92bd9e5a911d71d6555be6180e71", "commitAfterChange": "113afd3151c2b14c9d66bb242346ae4c872989d1", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException", "signatureAfterChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException", "diff": ["-    if (p1 != null) ret += \"(select \" + p1.getFirst() + \" \" + p1.getSecond() + \")\";", "+    if (p1 != null) ret += \"(select \" + p1.first() + \" \" + p1.second() + \")\";", "-    if (p2 != null) ret += \"(scroll \" + p2.getFirst() + \" \" + p2.getSecond() + \")\";", "+    if (p2 != null) ret += \"(scroll \" + p2.first() + \" \" + p2.second() + \")\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3fe9aec1fe7144566252833dccc9e7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeLibrary.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public TreeLibrary(Iterable<CompilationUnit> cus, ClassLoader parentLoader, Options opt)", "signatureAfterChange": "   public TreeLibrary(Iterable<CompilationUnit> cus, ClassLoader parentLoader, Options opt)", "diff": ["-          DJClass c = new TreeClass(fullName, null, ast, _loader, opt);", "+          DJClass c = new TreeClass(fullName, null, null, ast, _loader, opt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d40f23650f80451a8845cf72fc6ec917", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "fe8313235aadf72c5997fe5caee2f8dfd83cf0f0", "commitAfterChange": "83ec4c1ee83807974f1120df6a09cd37da57c105", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public BreakpointsPanel(MainFrame frame, RegionManager<Breakpoint> breakpointManager)", "signatureAfterChange": "   public BreakpointsPanel(MainFrame frame, RegionManager<Breakpoint> breakpointManager)", "diff": ["-    _debugger = _model.getDebugger();", "+    _debugger = getGlobalModel().getDebugger();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d410e46023a45d0b612ae0cc2197e684", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "5d703906feb40e67075dbe3ea0fe3662921f3d60", "commitAfterChange": "310ad6d573c9d5b05b96345b8e88424e666118bd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void processKeyEvent(KeyEvent e)", "signatureAfterChange": "   public void processKeyEvent(KeyEvent e)", "diff": ["-    if (ks.getKeyCode() == KeyEvent.VK_BACK_SPACE) {", "-    }", "-", "-", "+      ", "+", "+", "-        int key = undoMan.startCompoundEdit();", "+        int key = undoMan.startCompoundEdit();        ", "-", "+        ", "-", "+          ", "-", "+          ", "+", "+", "+", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d42a0a66a921f6e6fa8274a87e644c46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "fbf201d6c571409933ea805efe2ae830a8c6d081", "commitAfterChange": "52d7118f909675d6286de388d3cc282a76e90ccf", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "   public void testGotoFileUnderCursorShowDialog() throws IOException", "signatureAfterChange": "   public void testGotoFileUnderCursorShowDialog() throws IOException", "diff": ["-    assertEquals(\"Did not activate _gotoFileDialog\", 1, count[0]);", "+//    assertEquals(\"Did not activate _gotoFileDialog\", 1, count[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d435396a971c5f3425ac19d61a2309dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/PreemptingClassLoaderTest.java", "commitBeforeChange": "e6763da4d9e1118450dc76cc396410e4a3b0e46a", "commitAfterChange": "9c8a785db081b77d8ac8b9698b67d2973d82d49a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testLoadsResources() throws ClassNotFoundException", "signatureAfterChange": "      public void testLoadsResources() throws ClassNotFoundException", "diff": ["-    assertHasSameResource(BASE_LOADER, l, \"edu/rice/cs/plt/reflect/ReflectUtil$Version.class\");", "-    assertHasSameResource(BASE_LOADER, l, \"edu/rice/cs/plt/reflect/ReflectUtil$Version$1.class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d43de597890d567d98da18e00b1d0454", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 509, "methodNumberAfterChange": 499, "signatureBeforeChange": "    final private boolean jj_3R_257()", "signatureAfterChange": "    final private boolean jj_3R_267()", "diff": ["-", "-  final private boolean jj_3R_257() {", "-    if (jj_scan_token(RIGHT_UNSIGNED_SHIFTASSIGN)) return true;", "-    if (jj_3R_94()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_267() {", "+    if (jj_scan_token(RIGHT_UNSIGNED_SHIFTASSIGN)) return true;", "+    if (jj_3R_97()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4548476513c815594c0dfb76ed85d1c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "     public Object visit(NotExpression node)", "signatureAfterChange": "   public Class visit(NotExpression node)", "diff": ["-     */", "-    public Object visit(NotExpression node) {", "-        // Check the type", "-        Node  n = node.getExpression();", "-        Class c = (Class)n.acceptVisitor(this);", "-", "-        if (c != boolean.class) {", "-            throw new ExecutionError(\"not.expression.type\", node);", "-        }", "-        node.setProperty(NodeProperties.TYPE, c);", "-", "-        // Compute the expression if it is constant", "-        if (n.hasProperty(NodeProperties.VALUE)) {", "-            if (((Boolean)n.getProperty(NodeProperties.VALUE)).booleanValue()) {", "-                node.setProperty(NodeProperties.VALUE, Boolean.FALSE);", "-            } else {", "-                node.setProperty(NodeProperties.VALUE, Boolean.TRUE);", "-            }", "-        }", "-        return c;", "+   */", "+  public Class visit(NotExpression node) {", "+    // Check the type", "+    Node  n = node.getExpression();", "+    Class c = (Class)n.acceptVisitor(this);", "+    ", "+    if (c != boolean.class) {", "+      throw new ExecutionError(\"not.expression.type\", node);", "+    node.setProperty(NodeProperties.TYPE, c);", "+    ", "+    // Compute the expression if it is constant", "+    if (n.hasProperty(NodeProperties.VALUE)) {", "+      if (((Boolean)n.getProperty(NodeProperties.VALUE)).booleanValue()) {", "+        node.setProperty(NodeProperties.VALUE, Boolean.FALSE);", "+      } else {", "+        node.setProperty(NodeProperties.VALUE, Boolean.TRUE);", "+      }", "+    return c;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d45f3c9b3ed3c930f6ed44bfb833b910", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void doSetCurrentThread(final DebugThreadData th)", "signatureAfterChange": "   private void doSetCurrentThread(final DebugThreadData th) throws DebugException", "diff": ["-  private void doSetCurrentThread(final DebugThreadData th){", "+  private void doSetCurrentThread(final DebugThreadData th) throws DebugException{"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d46511d24a5b4ad2d03c7f0af1e05a2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public Void forArrayType(ArrayType that)", "signatureAfterChange": "     public Void forArrayType(ArrayType that)", "diff": ["-    System.err.println(\"###### getSymbolData on \" + that.getName() + \" SHOULD BE ARRAY NAME\");", "+//    System.err.println(\"###### getSymbolData on \" + that.getName() + \" SHOULD BE ARRAY NAME\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d46ae951b8bcda89f7e81ec4ad7c783f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public DCacheAdapter register(OpenDefinitionsDocument odd, DDReconstructor rec)", "signatureAfterChange": "   public DCacheAdapter register(OpenDefinitionsDocument odd, DDReconstructor rec)", "diff": ["-    DocManager man = new DocManager(rec);", "-    notifyRegistrationListeners(odd,man);", "-    return man;", "+    DocManager mgr = new DocManager(rec, odd.toString(), odd.isUntitled());", "+    notifyRegistrationListeners(odd, mgr);", "+//    Utilities.showDebug(\"register(\" + odd + \", \" + rec + \") called\");", "+    return mgr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d46c3f17bf4627b5a0ea0cfefc98a33d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 855, "methodNumberAfterChange": 659, "signatureBeforeChange": "    final private boolean jj_3_67()", "signatureAfterChange": "    final private boolean jj_3_41()", "diff": ["+", "+  final private boolean jj_3_41() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_97()) return true;", "+    if (jj_3R_376()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3_67() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_101()) return true;", "-    if (jj_3R_377()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d475ce552754c9e9a46a60657369a85d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 14, "signatureBeforeChange": "    public void testReplaceAllBackwards() throws BadLocationException", "signatureAfterChange": "    public void testReplaceAllBackwards() throws BadLocationException", "diff": ["-    doc.insertString(0, \"hElo helO\", null);", "+    _doc.insertString(0, \"hElo helO\", null);", "-    frm.setFindWord(\"heLo\");", "-    frm.setReplaceWord(\"cool\");", "-    frm.setMatchCase(false);", "-    frm.setSearchBackwards(true);", "-    frm.replaceAll();", "-    assertEquals(\"backwards replace\", \"cool cool\", doc.getText(0, doc.getLength()));", "+    _frm.setFindWord(\"heLo\");", "+    _frm.setReplaceWord(\"cool\");", "+    _frm.setMatchCase(false);", "+    _frm.setSearchBackwards(true);", "+    _frm.replaceAll();", "+    assertEquals(\"backwards replace\", \"cool cool\", _doc.getText(0, _doc.getLength()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d47c1772a2d44e96e7b178c3ef40b009", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "591f8aac4f79eab75475a3d9dd862c3b019f02a1", "commitAfterChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   private boolean wholeWordFoundAtCurrent(OpenDefinitionsDocument doc, int foundOffset)", "signatureAfterChange": "   private boolean wholeWordFoundAtCurrent(OpenDefinitionsDocument doc, int foundOffset)", "diff": ["-    doc.acquireReadLock();", "-    try { ", "+//    doc.acquireReadLock();", "+//    try { ", "-    }", "-    finally {doc.releaseReadLock();}      ", "+//    }", "+//    finally { doc.releaseReadLock(); }      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d47c896c8e962a999f9c78551c293b97", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "70e2e1da5f16614318c9ec160165c90ab00536e6", "commitAfterChange": "4a870433d70a2d8e44bbb98e64b2d7056210894d", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": "    private boolean showCleanWarning()", "signatureAfterChange": "    private boolean showCleanWarning()", "diff": ["-    if (!DrJava.getConfig().getSetting(NO_PROMPT_BEFORE_CLEAN).booleanValue()) {", "+    if (DrJava.getConfig().getSetting(PROMPT_BEFORE_CLEAN).booleanValue()) {", "-            DrJava.getConfig().setSetting(NO_PROMPT_BEFORE_CLEAN, Boolean.TRUE);", "+            DrJava.getConfig().setSetting(PROMPT_BEFORE_CLEAN, Boolean.FALSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d48fe4bb52bd388ba86b133c4448ab16", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CompoundUndoManager.java", "commitBeforeChange": "af6ac1303ad90db685f17f710be85771c95a718d", "commitAfterChange": "54a2d5af359edd99cce3e2b74ded93b4c8c0d9e9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void endCompoundEdit(int key)", "signatureAfterChange": "   public void endCompoundEdit(int key)", "diff": ["-      if (logEnabled) LOG.log(\"endCompoundEdit \"+_compoundEdits);          "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d493d17bec60dfcc313105c99c420d2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ConfigFrame (MainFrame frame)", "signatureAfterChange": "   public ConfigFrame (MainFrame frame)", "diff": ["+    // Make sure each row is expanded (this is harder than it seems...)", "+    _tree.expandRow(0);", "+    _tree.expandRow(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d49406b327aa7556340dee1f8d9a3fc4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "7b3e2baaa631329b7e3233840fa805eba66e7b61", "commitAfterChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 38, "signatureBeforeChange": "   private void _updateFree(ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private void _updateFree(ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-\t\t", "+\t\t\t", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\"\",copyCursor);  // \\-\"", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\"\",copyCursor);// \\-\\\"", "+\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\\\",copyCursor);// \\-\\\\", "+\t\t\t", "+\t\t\t\t\t\t", "-\t\t\t\t\t_splitCurrentIfCommentBlock(true,copyCursor);", "+\t\t\t\t\t_splitCurrentIfCommentBlock(true,false,copyCursor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d49f3cb7bf40b166e45527551a7ae610", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/TypeCheckerExtension.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Object visit(InstanceOfExpression node)", "signatureAfterChange": "   public Class visit(InstanceOfExpression node)", "diff": ["-  public Object visit(InstanceOfExpression node) {", "+  public Class visit(InstanceOfExpression node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d49ff14814da2dff91fbbd3e683d625b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/OpenDefinitionsDocument.java", "commitBeforeChange": "03dd354632fbfc12bf279640160bfd934404dc39", "commitAfterChange": "2714f88d04f312c23b21ec6a440193d44b7121ba", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void preparePrintJob() throws BadLocationException;", "signatureAfterChange": "   public void preparePrintJob() throws BadLocationException, FileMovedException;", "diff": ["-  public void preparePrintJob() throws BadLocationException;", "+  public void preparePrintJob() throws BadLocationException, FileMovedException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4bfe0d660d51321bfb426da30dba3b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 612, "methodNumberAfterChange": 523, "signatureBeforeChange": "    final private boolean jj_3R_443()", "signatureAfterChange": "    final private boolean jj_3R_454()", "diff": ["-", "-  final private boolean jj_3R_443() {", "-    if (jj_3R_94()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3_24()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_454() {", "+    if (jj_3R_97()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_28()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4c92a1591d4aa129600d6c25811eccf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BrowserHistoryPanel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-      _region.getDocument().acquireReadLock();", "+//      _region.getDocument().acquireReadLock();", "+//      try {", "+      sb.append(\"<html>\");", "+      if (_region==_model.getBrowserHistoryManager().getCurrentRegion()) {", "+        sb.append(\"<font color=\\\"red\\\">\");", "+      }", "+      sb.append(_region.getDocument().toString());", "+      sb.append(':');", "+      sb.append(lineNumber());", "-        sb.append(\"<html>\");", "-        if (_region==_model.getBrowserHistoryManager().getCurrentRegion()) {", "-          sb.append(\"<font color=\\\"red\\\">\");", "-        }", "-        sb.append(_region.getDocument().toString());", "-        sb.append(':');", "-        sb.append(lineNumber());", "-        try {", "-          sb.append(\": \");", "-          int length = Math.min(120, _region.getEndOffset()-_region.getStartOffset());", "-          sb.append(_region.getDocument().getText(_region.getStartOffset(), length).trim());", "-        } catch(BadLocationException bpe) { /* ignore, just don't display line */ }", "-        if (_region.equals(_model.getBrowserHistoryManager().getCurrentRegion())) {", "-          sb.append(\"</font>\");", "-        }", "-        sb.append(\"</html>\");", "-      } finally { _region.getDocument().releaseReadLock(); }", "+        sb.append(\": \");", "+        int length = Math.min(120, _region.getEndOffset()-_region.getStartOffset());", "+        sb.append(_region.getDocument().getText(_region.getStartOffset(), length).trim());", "+      } catch(BadLocationException bpe) { /* ignore, just don't display line */ }", "+      if (_region.equals(_model.getBrowserHistoryManager().getCurrentRegion())) {", "+        sb.append(\"</font>\");", "+      }", "+      sb.append(\"</html>\");", "+//      } ", "+//      finally { _region.getDocument().releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4d0e8bbd69e8ffee5a2123edb7651c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "   public void createConstructor(SymbolData sd)", "signatureAfterChange": "   public void createConstructor(SymbolData sd)", "diff": ["-    System.err.println(\"**** createConstructor called for \" + sd);", "+//    System.err.println(\"**** createConstructor called for \" + sd);", "-        System.err.println(\"Creating constructor for superclass \" + superSd);", "+//        System.err.println(\"Creating constructor for superclass \" + superSd);", "-      System.err.println(\"**** Adding constructor \" + md + \" **** to symbol \" + sd);", "+//      System.err.println(\"**** Adding constructor \" + md + \" **** to symbol \" + sd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4d8b5b0dfa9c02fdf81b9fa8ae505dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 586, "methodNumberAfterChange": 589, "signatureBeforeChange": "    final private boolean jj_3R_301()", "signatureAfterChange": "    final private boolean jj_3R_272()", "diff": ["-  final private boolean jj_3R_301() {", "-    if (jj_3R_321()) return true;", "-      if (jj_3R_345()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_272() {", "+    if (jj_3R_325()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_356()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4dc61805b886b30564adc875be5a6d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsScriptController.java", "commitBeforeChange": "ff27298276d0b205036fe4b017017ca3896e9890", "commitAfterChange": "4ddb555fbb20c498ee5f44bc087ce9c848b2e79c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void setActionsDisabled()", "signatureAfterChange": "   public void setActionsDisabled()", "diff": ["+    _currentInteractionAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4e05b8f4ad2d4a532f719a3e6950cf1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "27c256ec9281e0464172656b15ccb73506c1cbc1", "commitAfterChange": "efe2cdfa860877c37343dbc5d29e380b33344492", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 181, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["+    _interactionsPanePopupMenu.add(_loadHistoryScriptAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d50608478e97695acdded2a86ee4f13a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public Object visit(FunctionCall node)", "signatureAfterChange": "   public Class visit(FunctionCall node)", "diff": ["-     */", "-    public Object visit(FunctionCall node) {", "-\t// Do the type checking of the arguments", "-\tList args = node.getArguments();", "-\tClass[] cargs = Constants.EMPTY_CLASS_ARRAY;", "-\tif (args != null) {", "-\t    cargs = new Class[args.size()];", "-\t    Iterator it = args.iterator();", "-\t    int i  = 0;", "-\t    while (it.hasNext()) {", "-\t\tcargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "-\t    }", "-\t}", "-\tMethodDeclaration f = null;", "-\ttry {", "-\t    f = context.lookupFunction(node.getMethodName(), cargs);", "-\t} catch (NoSuchFunctionException e) {", "-\t    String s = node.getMethodName();", "-\t    node.setProperty(NodeProperties.ERROR_STRINGS, new String[] { s });", "-\t    throw new ExecutionError(\"no.such.function\", node);", "-\t}", "-", "-\t// Set the node properties", "-\tClass c;", "-\tnode.setProperty(NodeProperties.FUNCTION, f);", "-\tnode.setProperty(NodeProperties.TYPE,  c = NodeProperties.getType(f));", "-\treturn c;", "-    }", "+   */", "+  public Class visit(FunctionCall node) {", "+    // Do the type checking of the arguments", "+    List args = node.getArguments();", "+    Class[] cargs = Constants.EMPTY_CLASS_ARRAY;", "+    if (args != null) {", "+      cargs = new Class[args.size()];", "+      Iterator it = args.iterator();", "+      int i  = 0;", "+      while (it.hasNext()) {", "+        cargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "+      }", "+    }", "+    MethodDeclaration f = null;", "+    try {", "+      f = context.lookupFunction(node.getMethodName(), cargs);", "+    } catch (NoSuchFunctionException e) {", "+      String s = node.getMethodName();", "+      node.setProperty(NodeProperties.ERROR_STRINGS, new String[] { s });", "+      throw new ExecutionError(\"no.such.function\", node);", "+    }", "+    ", "+    // Set the node properties", "+    Class c;", "+    node.setProperty(NodeProperties.FUNCTION, f);", "+    node.setProperty(NodeProperties.TYPE,  c = NodeProperties.getType(f));", "+    return c;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d50a5f6a5b58f38eb3e831be9d70da96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "62576619cd7807c5f69fcfd17360a8dd0c064ad9", "commitAfterChange": "bb97cd9f73d55ae676f0ba1f2e25693ba56b3a94", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testSwitchToNonExistantInterpreter()", "signatureAfterChange": "   public void testSwitchToNonExistantInterpreter()", "diff": ["-      _jvm.setActiveInterpreter(\"monkey\");", "+      _jvm.setActiveInterpreter(\"thisisabadname\");", "+      System.out.println(\"outbuf: \" + _jvm.outBuf);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d50cd8b701b257202f4bd56ded1b99bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOpsTest.java", "commitBeforeChange": "ce99ad77121aabff91f9c6fba762f853ca2a34f5", "commitAfterChange": "c7e182b04aa52ae1423064c733cc8609017cc26d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testSaveFile() throws IOException", "signatureAfterChange": "   public void testSaveFile() throws IOException", "diff": ["-    File writeTo = File.createTempFile(\"fileops\", \".test\");", "+    File writeTo = File.createTempFile(\"fileops\", \".test\").getCanonicalFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d516aaccc594ad82b7f1dc87f5d792e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "37dab6b79fc3d4e6f7b2b5f0aa53a4ea9b7f7476", "commitAfterChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "methodNumberBeforeChange": 344, "methodNumberAfterChange": 348, "signatureBeforeChange": "          public void updateLocation()", "signatureAfterChange": "          public void updateLocation()", "diff": ["-      _currLocationField.setText(p.getCurrentLine() + \":\" + p.getCurrentCol() + \"\\t\");", "+      _currLocationField.setText(p.getCurrentLine() + \":\" + p.getCurrentCol() + \")\\t\");", "+      _model.getParsingControl().delay();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d51b1b0f6a1bc907c913a6537a76bc60", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": "         private void _open()", "signatureAfterChange": "   private void _open()", "diff": ["-  ", "+  // Set up for single document interface...", "+    final OpenDefinitionsDocument oldDoc = _definitionsDocuments[0];", "+      // Check if old file needs to be saved (single doc interface)", "+      if (oldDoc.isModifiedSinceSave() && !oldDoc.canAbandonFile()) {", "+        throw new OperationCanceledException();", "+      }", "+      _model.closeFile(oldDoc);", "+    }", "+    catch (OperationCanceledException oce) {", "+      // Make sure we still have one doc open", "+      if (_model.getDefinitionsDocuments().length == 0) {", "+        _model.newFile();", "+      }", "+    _definitionsDocuments = _model.getDefinitionsDocuments();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5234fe08c4eb9f440224132f41095ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 554, "methodNumberAfterChange": 477, "signatureBeforeChange": "    final private boolean jj_3R_376()", "signatureAfterChange": "    final private boolean jj_3R_377()", "diff": ["+  final private boolean jj_3R_377() {", "+    if (jj_3R_423()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_441()) { jj_scanpos = xsp; break; }", "+    }", "-", "-  final private boolean jj_3R_376() {", "-    if (jj_3R_422()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_440()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d569e2fab9bf19513d7ae80a92d84644", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerError.java", "commitBeforeChange": "03dd354632fbfc12bf279640160bfd934404dc39", "commitAfterChange": "2714f88d04f312c23b21ec6a440193d44b7121ba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public String toString()", "signatureAfterChange": "   public String toString()", "diff": ["-    return  \"CompilerError(file=\" + _file.getAbsolutePath() + \", line=\" +", "+    return  \"CompilerError(file=\" + fileName() + \", line=\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d57bae634d8b585f916094cd102bbe14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 337, "methodNumberAfterChange": 857, "signatureBeforeChange": "    final private boolean jj_3R_405()", "signatureAfterChange": "    final private boolean jj_3R_413()", "diff": ["-", "-  final private boolean jj_3R_405() {", "-    if (jj_scan_token(AND_ASSIGN)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_413() {", "+    if (jj_scan_token(AND_ASSIGN)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d582614845d1e72aa321f5985469bee3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 815, "methodNumberAfterChange": 728, "signatureBeforeChange": "    final private boolean jj_3R_235()", "signatureAfterChange": "    final private boolean jj_3R_200()", "diff": ["-", "-  final private boolean jj_3R_235() {", "-    if (jj_scan_token(LEFT_SHIFT_ASSIGN)) return true;", "-    if (jj_3R_87()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_200() {", "+    if (jj_scan_token(LEFT_SHIFT_ASSIGN)) return true;", "+    if (jj_3R_78()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5a7831fd98eb1d31cb2eb749e811000", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 425, "methodNumberAfterChange": 397, "signatureBeforeChange": "    final private boolean jj_3R_454()", "signatureAfterChange": "    final private boolean jj_3R_469()", "diff": ["+", "+  final private boolean jj_3R_469() {", "+    if (jj_3R_251()) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_454() {", "-    if (jj_3R_242()) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5aee157e1dbfdf6b7f1bdfc215a315e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 61, "signatureBeforeChange": "     public void threadLocationUpdated(OpenDefinitionsDocument doc,                                        int lineNumber)", "signatureAfterChange": "     public void threadLocationUpdated(OpenDefinitionsDocument doc,                                        int lineNumber)", "diff": ["-        _notifyObject(_notifierLock);", "+        _notifyLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5de107a7ac19eb2b18845663e0dc34f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 308, "methodNumberAfterChange": 299, "signatureBeforeChange": "    final private boolean jj_3R_419()", "signatureAfterChange": "    final private boolean jj_3R_423()", "diff": ["-  final private boolean jj_3R_419() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_440()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(86)) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_441()) jj_scanpos = xsp;", "-    return false;", "-  }", "+  final private boolean jj_3R_423() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_444()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(86)) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_445()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d60fc772edcc8b9bc4ea387973c41682", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "     public Object visit(RemainderExpression node)", "signatureAfterChange": "   public Class visit(RemainderExpression node)", "diff": ["+   */", "+  public Class visit(RemainderExpression node) {", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ln.acceptVisitor(this);", "+    rn.acceptVisitor(this);", "+    Class c = visitNumericExpression(node, \"remainder.type\");", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.remainder(c,", "+                                        ln.getProperty(NodeProperties.VALUE),", "+                                        rn.getProperty(NodeProperties.VALUE)));", "+    }", "+    return c;", "+  }", "-     */", "-    public Object visit(RemainderExpression node) {", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-        ln.acceptVisitor(this);", "-        rn.acceptVisitor(this);", "-        Class c = visitNumericExpression(node, \"remainder.type\");", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.remainder(c,", "-\t\t\t\t\t\tln.getProperty(NodeProperties.VALUE),", "-\t\t\t\t\t\trn.getProperty(NodeProperties.VALUE)));", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d61c839bf5873716cbdec5dd0c155a9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "1936e795bc2ab8d34c4602bb0e83d92772acfbeb", "commitAfterChange": "172a137f78cd92204a7df0201baea721bb8f9866", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void addDocument(ItemT doc)", "signatureAfterChange": "   public void addDocument(ItemT doc)", "diff": ["-  public void addDocument(ItemT doc) { LOG.log(\"addCoument(\"+doc+\")\", new Throwable()); synchronized(_model) { _model.addElement(doc); } }", "+  public void addDocument(ItemT doc) { synchronized(_model) { _model.addElement(doc); } }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6226c4ead58dc1d192dc9a556c2b8b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 295, "methodNumberAfterChange": 907, "signatureBeforeChange": "    final private boolean jj_3R_628()", "signatureAfterChange": "    final private boolean jj_3R_546()", "diff": ["-  final private boolean jj_3R_628() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_83()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_589()) return true;", "-    return false;", "+", "+  final private boolean jj_3R_546() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_85()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_504()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d62ffaab77a462d8d2b1b44a756d8787", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c21488275df662efbed39106365c897fb0dbfb85", "commitAfterChange": "a3902897dba4fc6d7d1f3dcf3a630b3ebf7f4a11", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": "   private JMenu _setUpEditMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpEditMenu(int mask)", "diff": ["-    editMenu.add(_indentLinesAction);", "+    JMenuItem editItem = editMenu.add(_indentLinesAction);", "+    editItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_TAB, 0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d63d599964783d729dda01e8d85f4b91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 426, "methodNumberAfterChange": 323, "signatureBeforeChange": "    final private boolean jj_3R_197()", "signatureAfterChange": "    final private boolean jj_3R_398()", "diff": ["+", "+  final private boolean jj_3R_398() {", "+    if (jj_3R_411()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_433()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_197() {", "-    if (jj_3R_228()) return true;", "-      if (jj_3R_275()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6560ac8341a65ca6f4e879d407fc65c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "    public void testSaveAsExistsForOverwrite() throws BadLocationException, IOException", "signatureAfterChange": "    public void testSaveAsExistsForOverwrite() throws BadLocationException, IOException", "diff": ["-    catch (OverwriteException e1) {", "-      // good behavior for file saving...", "-    }", "+    catch (OverwriteException e1) { /* Good behavior for file saving ... */ }", "+    ", "+    _log.log(\"testSaveAsExistsForOverwrite completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d65f72d12fc3674383966156f08245bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testInteractionsVariableWithLowercaseClassName()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsVariableWithLowercaseClassName()     throws BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-    throws BadLocationException, IOException, InterruptedException", "+    throws BadLocationException, DocumentAdapterException,", "+    IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6602419b1efd133a08b6ea0240cdbc0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 746, "methodNumberAfterChange": 527, "signatureBeforeChange": "    final private boolean jj_3R_90()", "signatureAfterChange": "    final private boolean jj_3R_543()", "diff": ["+", "+  final private boolean jj_3R_543() {", "+    if (jj_3R_562()) return true;", "+      if (jj_3R_574()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_90() {", "-    if (jj_3R_140()) return true;", "-      if (jj_3_29()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d69a84bf4abb4e051c0c74633bd6f22b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentRuleWithTraceTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public void testTrace() throws BadLocationException", "signatureAfterChange": "    public void testTrace() throws BadLocationException", "diff": ["-//    _doc.acquireWriteLock();", "-//    try {", "+    _doc.acquireWriteLock();", "+    try {", "-//    }", "-//    finally {_doc.releaseWriteLock(); }", "+    }", "+    finally {_doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6a647b6f8099e7ed76e0cff223908cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "0bcb8da0b79cf218cc2712f201e3771599202c44", "commitAfterChange": "c34979036dca11c3afc06b42fcb087eaf85bc790", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "    public boolean closeFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "    public boolean closeFile(OpenDefinitionsDocument doc)", "diff": ["-     return closeFiles(list, false);", "+     return closeFiles(list);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6d8532a1448bb7b4fad085d9da4952e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fbf201d6c571409933ea805efe2ae830a8c6d081", "commitAfterChange": "52d7118f909675d6286de388d3cc282a76e90ccf", "methodNumberBeforeChange": 322, "methodNumberAfterChange": 322, "signatureBeforeChange": "   private void _setUpToolBar()", "signatureAfterChange": "   private void _setUpToolBar()", "diff": ["-    // Junit", "+    // Run, Junit, and JavaDoc", "+    _toolBar.add(_createToolbarButton(_runAction));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e33305dc9eff21580599faefbf4cd1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public Object visit(SuperFieldAccess node)", "signatureAfterChange": "   public Class visit(SuperFieldAccess node)", "diff": ["-     */", "-    public Object visit(SuperFieldAccess node) {", "-\tField f = null;", "-\ttry {", "-\t    f = context.getSuperField(node, node.getFieldName());", "-\t} catch (Exception e) {", "-\t    throw new CatchedExceptionError(e, node);", "-\t}", "-", "-\t// Set the node properties", "-\tnode.setProperty(NodeProperties.FIELD, f);", "-\tClass c;", "-\tnode.setProperty(NodeProperties.TYPE,  c = f.getType());", "-\tnode.setProperty(NodeProperties.MODIFIER, context.getModifier(node));", "-\treturn c;", "-    }", "+   */", "+  public Class visit(SuperFieldAccess node) {", "+    Field f = null;", "+    try {", "+      f = context.getSuperField(node, node.getFieldName());", "+    } catch (Exception e) {", "+      throw new CatchedExceptionError(e, node);", "+    }", "+    ", "+    // Set the node properties", "+    node.setProperty(NodeProperties.FIELD, f);", "+    Class c;", "+    node.setProperty(NodeProperties.TYPE,  c = f.getType());", "+    node.setProperty(NodeProperties.MODIFIER, context.getModifier(node));", "+    return c;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f4e95d9b08086aebc8eccbd2ae5cf1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "f04b27133e1dfdd1ba7aef9e8d008a92f888d6d9", "commitAfterChange": "99b38c17e39f8591bf821ecb0016a46b269f3561", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public int balanceBackward()", "signatureAfterChange": "   public int balanceBackward()", "diff": ["-    return _definitionsDoc._reduced.balanceBackward();", "+    return _definitionsDoc.balanceBackward();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f84534d43de572c9202acdb4cb5843", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "d187ef0ae751d72da55c4bc4f82be93731c1e46f", "commitAfterChange": "d8ed07c181201a238142caf2537f1e0f6da8bb42", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void interpreterResetting()", "signatureAfterChange": "   public void interpreterResetting()", "diff": ["+      _document.setInProgress(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f9af05452b50e97be3fa2c428dcbd0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void defineConstant(String name, Object value)", "signatureAfterChange": "   public void defineConstant(String name, Object value)", "diff": ["-    ((InterpreterExtension)_djInterpreter).defineConstant(name, value);", "+    _djInterpreter.defineConstant(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d705946c47fadf2111a8176979f47f2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "     public Object visit(PostDecrement node)", "signatureAfterChange": "   public Class visit(PostDecrement node)", "diff": ["+   */", "+  public Class visit(PostDecrement node) {", "+    Node exp = node.getExpression();", "+    Class c  = (Class)exp.acceptVisitor(this);", "+    ", "+    // The type of the subexpression must be numeric", "+    if (!c.isPrimitive()   ||", "+        c == void.class    ||", "+        c == boolean.class) {", "+      throw new ExecutionError(\"post.decrement.type\", node);", "+    }", "+    ", "+    // The subexpression must be a variable", "+    if (!exp.hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"post.decrement.type\", node);", "+    }", "+    ", "+    node.setProperty(NodeProperties.TYPE, c);", "+    return c;", "+  }", "-     */", "-    public Object visit(PostDecrement node) {", "-        Node exp = node.getExpression();", "-        Class c  = (Class)exp.acceptVisitor(this);", "-", "-        // The type of the subexpression must be numeric", "-        if (!c.isPrimitive()   ||", "-            c == void.class    ||", "-            c == boolean.class) {", "-            throw new ExecutionError(\"post.decrement.type\", node);", "-        }", "-", "-        // The subexpression must be a variable", "-        if (!exp.hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"post.decrement.type\", node);", "-        }", "-", "-        node.setProperty(NodeProperties.TYPE, c);", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d708701879467be297c1f675c3fd18b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "commitAfterChange": "4e52eec7688cbd5ec3584417f424923ba61a75e0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public FullJavaVisitor(File file,                          LinkedList<String> importedPackages,                          LinkedList<Pair<String, JExpressionIF>> errors,                           Hashtable<String, Triple<SourceInfo, LanguageLevelVisitor, SymbolData>> continuations,                          LinkedList<Command> fixUps,                          LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles)", "signatureAfterChange": "   public FullJavaVisitor(File file,                          LinkedList<String> importedPackages,                          LinkedList<Pair<String, JExpressionIF>> errors,                           Hashtable<String, Triple<SourceInfo, LanguageLevelVisitor, SymbolData>> continuations,                          LinkedList<Command> fixUps,                          LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles)", "diff": ["-    super(file, \"\", null, new LinkedList<String>(), importedPackages, new HashSet<String>(), continuations, fixUps);", "+    this(file, \"\", null, new LinkedList<String>(), importedPackages, new HashSet<String>(), continuations, fixUps);", "-    this.visitedFiles= visitedFiles;//new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>();", "+    this.visitedFiles= visitedFiles; //new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d709ccf1e582cf352086461f25f8d5bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 849, "methodNumberAfterChange": 751, "signatureBeforeChange": "    final private boolean jj_3R_295()", "signatureAfterChange": "    final private boolean jj_3R_299()", "diff": ["-  final private boolean jj_3R_295() {", "+", "+  final private boolean jj_3R_299() {", "-    if (jj_3R_112()) return true;", "+    if (jj_3R_115()) return true;", "-      if (jj_3R_369()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_376()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d71b2fd7c97dea03d8f446a0e6ce53cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "    public void testRunMainMethod() throws Exception", "signatureAfterChange": "    public void testRunMainMethod() throws Exception", "diff": ["+    Utilities.clearEventQueue();  // Killing time here; Slave JVM may not have released Foo.class so that the file can be deleted on Windows."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d71e953bf681ddb8596130ece5844a94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 756, "methodNumberAfterChange": 872, "signatureBeforeChange": "    final private boolean jj_3R_375()", "signatureAfterChange": "    final private boolean jj_3R_379()", "diff": ["-", "-  final private boolean jj_3R_375() {", "-    if (jj_3R_107()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_428()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_379() {", "+    if (jj_3R_109()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_398()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d73128c620c3915991224663817363da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "10d037d002127c66461b05fbabf525120456d4de", "commitAfterChange": "db8669ae9206a0729c54329af2423ab54c073da7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "    private void _createPositionsArray()", "signatureAfterChange": "    private void _createPositionsArray()", "diff": ["-        int nextNewline = defsText.indexOf(NEWLINE, offset);", "+        int nextNewline = defsText.indexOf('\\n', offset);", "-    catch (BadLocationException willNeverEverEverHappen) {}", "+    catch (BadLocationException willNeverEverEverHappen) {", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d737993e6fcac8a69b5197a9a10081a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public synchronized void testBreakpoints()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testBreakpoints()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-    throws DebugException, BadLocationException, IOException, InterruptedException", "+    throws DebugException, BadLocationException, DocumentAdapterException,", "+    IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d742ca64c6def3adcb93f9eb0bee4a82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testInteractionsDefineAnonymousInnerClass()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsDefineAnonymousInnerClass()     throws BadLocationException, DocumentAdapterException,      IOException, InterruptedException", "diff": ["-    throws BadLocationException, IOException, InterruptedException", "+    throws BadLocationException, DocumentAdapterException, ", "+    IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7553d581dff8b8e271cae8fc4b3461e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/HistoryTest.java", "commitBeforeChange": "51b2542de7f979f07f8d8b46f0a6d987d196a9d1", "commitAfterChange": "4edad8e8a80e806b7e00866e949c609589a8b7ed", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testHistoryIsBounded()", "signatureAfterChange": "   public void testHistoryIsBounded()", "diff": ["-    assertEquals(\"history length is not bound to \" + maxLength,", "+", "+    assertEquals(\"History length is not bound to \" + maxLength,", "+\t\t maxLength,", "+\t\t _history.size());", "+    assertEquals(\"History elements are not removed in FILO order\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7630f82191df7b21f96c1d8568343be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testCompileAllFailsDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllFailsDifferentSourceRoots() throws BadLocationException, IOException, InterruptedException", "diff": ["-    doc1.saveFile(new FileSelector(file1));", "+    saveFile(doc1, new FileSelector(file1));", "-    doc2.saveFile(new FileSelector(file2));", "+    saveFile(doc2, new FileSelector(file2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d767ae4faafa27189128bb5537388273", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 413, "methodNumberAfterChange": 358, "signatureBeforeChange": "    final private boolean jj_3R_262()", "signatureAfterChange": "    final private boolean jj_3R_264()", "diff": ["-", "-  final private boolean jj_3R_262() {", "-    if (jj_3R_280()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_305()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_264() {", "+    if (jj_3R_282()) return true;", "+      if (jj_3R_307()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d76a78509f5fd1b94f3663e91ff69096", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "1ca22d8d9e892abbe72cd6aa5627cc7ce0e56b03", "commitAfterChange": "024873f55ad7ba6280213fee7183c6688ba3b395", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "        public Object forSyntaxErrorResult(SyntaxErrorResult that)", "signatureAfterChange": "        public Object forSyntaxErrorResult(SyntaxErrorResult that)", "diff": ["-        synchronized(TestJVMExtension.this) {", "+        synchronized(_testLock) {", "-          TestJVMExtension.this.notify();", "+          _testLock.notify();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7769a2dcb31abd4c67507a67ce09b12", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1f215280ffb4deee1474aa0ea630d96d544831f9", "commitAfterChange": "36da33844ba54377479a55c5dc3b578eed405d70", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "   public void toggleDebugger()", "signatureAfterChange": "   public void toggleDebugger()", "diff": ["-        debugger.endSession();", "+        debugger.shutdown();", "-        showDebugger();", "+        try {", "+          debugger.startup();", "+          showDebugger();", "+        }", "+        catch (DebugException de) {", "+          _showError(de, \"Debugger Error\",", "+                     \"Could not start the debugger.\");", "+        }", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d77a549442badfb6ab876378ebaf36a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 425, "signatureBeforeChange": "    final private boolean jj_3R_103()", "signatureAfterChange": "    final private boolean jj_3R_100()", "diff": ["-  final private boolean jj_3R_103() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_35()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_37()) return true;", "-    return false;", "+", "+  final private boolean jj_3R_100() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_32()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_34()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d77b156e2ee41de4f0e56d37c50ba571", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "     public boolean isModifiedOnDisk()", "signatureAfterChange": "     public boolean isModifiedOnDisk()", "diff": ["-      return _doc.isModifiedOnDisk();", "+      return getDocument().isModifiedOnDisk();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7a3d23549cf0e04b751ee090365efcf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorOptionComponent.java", "commitBeforeChange": "395b2a102021edacb1427340196ea5475967dc87", "commitAfterChange": "51bfc4d668bc1673b008afd130ba536a07f9c69d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void chooseFile()", "signatureAfterChange": "   public void chooseFile()", "diff": ["+    jfc.setApproveButtonText(\"Select\");", "+    jfc.setFileFilter(_fileFilter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7a9e525b118ffd59cbcc99f1a90b5c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "4276346051c6ab89c146c0041be28826e7dfbe12", "commitAfterChange": "86bed99990f6eb7fff2cb31d595e17b49135df26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ConfigFrame(MainFrame frame)", "signatureAfterChange": "   public ConfigFrame(MainFrame frame)", "diff": ["-    _dirChooser = new DirectoryChooser();", "+    _dirChooser = new DirectoryChooser(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7ad5c899d876fcddcdb913adc0ee587", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentAdapter.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void forceInsertText(int offs, String str, String style)     throws DocumentAdapterException", "signatureAfterChange": "   public void forceInsertText(int offs, String str, String style)", "diff": ["-  public void forceInsertText(int offs, String str, String style)", "-    throws DocumentAdapterException {", "+  public void forceInsertText(int offs, String str, String style) {", "-    try {", "-      super.insertString(offs, str, s);", "-    }", "-    catch (BadLocationException e) {", "-      throw new DocumentAdapterException(e);", "-    }", "+    try { super.insertString(offs, str, s); }", "+    catch (BadLocationException e) { throw new DocumentAdapterException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7d9e83550c8cffdd4f145553d2c3370", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TopLevelContext.java", "commitBeforeChange": "6b936f625ceea21472b90559f34694154e802e14", "commitAfterChange": "8d43ad99265fb94492eb304c2a9128684a27d753", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public TypeContext setPackage(String name)", "signatureAfterChange": "   public TypeContext setPackage(String name)", "diff": ["-  public TypeContext setPackage(String name) { return new TopLevelContext(_loader, name, this); }", "+  public TypeContext setPackage(String name) { return new TopLevelContext(_next, _loader, name, this); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7f2518a71cee9af94654619f145edf9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "8f8a64864bd9c3c9658401188aaec5c9c0dfe4f7", "commitAfterChange": "9e1a29777c7e5973840e817aca59ceea66af7a9c", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "   public abstract void addListener(GlobalModelListener listener);", "signatureAfterChange": "   public void addListener(GlobalModelListener listener)", "diff": ["-  public abstract void addListener(GlobalModelListener listener);", "+  public void addListener(GlobalModelListener listener) { _notifier.addListener(listener); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d80e80b89038f5b5871bf08bde57f6e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public String getIndentOfCurrStmt(int pos, char[] delims, char[] whitespace) throws BadLocationException", "signatureAfterChange": "   public String getIndentOfCurrStmt(int pos, char[] delims, char[] whitespace) throws BadLocationException", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8170626e53b999dc93467e58f957c91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 464, "methodNumberAfterChange": 461, "signatureBeforeChange": "    final private boolean jj_3R_423()", "signatureAfterChange": "    final private boolean jj_3R_425()", "diff": ["-", "-  final private boolean jj_3R_423() {", "-    if (jj_3R_98()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_437()) { jj_scanpos = xsp; break; }", "-    }", "+  final private boolean jj_3R_425() {", "+    if (jj_3R_99()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_439()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8287470e5c050aba4a7c86529d623ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "0c8d146c06eba1c2298f0daceb39048930ad6325", "commitAfterChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 32, "signatureBeforeChange": "    private void _updateWatchpoints()", "signatureAfterChange": "    private void _updateWatchpoints()", "diff": ["-        DrJava.consoleOut().println(\"No line number information for this method\");", "+        //DrJava.consoleOut().println(\"No line number information for this method\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d82cb442fc8a95764d84e474af856fbd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "34ce8483136d91f9eff46f1971dc8a612f363868", "commitAfterChange": "cfd4689ec89c3908ea0306a11510c85ea5436de0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void checkFile(File relativeFile, String funnyName) throws IOException, InvalidPackageException", "signatureAfterChange": "   private void checkFile(File relativeFile, String funnyName) throws IOException, InvalidPackageException", "diff": ["-    DrJavaRoot.openCommandLineFiles(_mf, new String[] { path });", "+    DrJavaRoot.openCommandLineFiles(_mf, new String[] { path }, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d83c0911067aae44871933a6de1743e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testCloseMultipleFiles() throws BadLocationException", "signatureAfterChange": "   public void testCloseMultipleFiles() throws BadLocationException", "diff": ["-    _log.log(\"testCloseMultipleFiles completed\");", "+    _log.log(this + \".testCloseMultipleFiles() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d83cbfee2851a6e8e1f2c388e5cd9523", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 560, "methodNumberAfterChange": 534, "signatureBeforeChange": "    final private boolean jj_3R_273()", "signatureAfterChange": "    final private boolean jj_3R_504()", "diff": ["+  final private boolean jj_3R_504() {", "+    if (jj_3R_526()) return true;", "+      if (jj_3R_542()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_273() {", "-    if (jj_3R_326()) return true;", "-      if (jj_3R_357()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8447a238e9138e17aaead8f56762342", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentRuleWithTraceTest.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public void testTrace() throws BadLocationException", "signatureAfterChange": "    public void testTrace() throws BadLocationException", "diff": ["-      rule4 = new ActionBracePlus(\"  \"),", "+      rule4 = new ActionBracePlus(2),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d855a19e2119add73a6b90c92a02811d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testConstructOneDocWithBoth()", "signatureAfterChange": "   public void testConstructOneDocWithBoth()", "diff": ["-    errors = new CompilerError[] { ", "-      new CompilerError(files[0], 2, 0, \"Test error with File and line\", false),", "-      new CompilerError(files[0], \"Test warning with File (no line)\", true),", "-      new CompilerError(files[0], 3, 0, \"Test error with File and line\", false),", "-      new CompilerError(\"Test error without File or line\", false),", "-      new CompilerError(files[0], 3, 0, \"Test warning with File and line\", true),", "-      new CompilerError(files[0], \"Test error with File (no line)\", false),", "-      new CompilerError(files[0], 1, 0, \"Test error with File and line\", false) ", "+    errors = new DJError[] { ", "+      new DJError(files[0], 2, 0, \"Test error with File and line\", false),", "+      new DJError(files[0], \"Test warning with File (no line)\", true),", "+      new DJError(files[0], 3, 0, \"Test error with File and line\", false),", "+      new DJError(\"Test error without File or line\", false),", "+      new DJError(files[0], 3, 0, \"Test warning with File and line\", true),", "+      new DJError(files[0], \"Test error with File (no line)\", false),", "+      new DJError(files[0], 1, 0, \"Test error with File and line\", false) ", "-    CompilerError[] copy = new CompilerError[errors.length];", "+    DJError[] copy = new DJError[errors.length];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d864c9aae70043f8c82cdd5a5726cada", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 397, "methodNumberAfterChange": 393, "signatureBeforeChange": "    final private boolean jj_3R_302()", "signatureAfterChange": "    final private boolean jj_3R_303()", "diff": ["-  final private boolean jj_3R_302() {", "-    if (jj_3R_311()) return true;", "-    if (jj_3R_324()) jj_scanpos = xsp;", "+  final private boolean jj_3R_303() {", "+    if (jj_3R_312()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_325()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8a8a2f61d0d44b206d8d632a604fc9e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public DefinitionsPane getLastDefPane()", "signatureAfterChange": "    protected JUnitErrorModel getErrorModel()", "diff": ["+", "+  protected JUnitErrorModel getErrorModel(){", "+    return getModel().getJUnitErrorModel();", "+  }", "-     */", "-    public DefinitionsPane getLastDefPane() {", "-      return _lastDefPane;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8af06219fba3a3b03f8f63fc97f51ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 439, "methodNumberAfterChange": 433, "signatureBeforeChange": "    final private boolean jj_3R_364()", "signatureAfterChange": "    final private boolean jj_3R_365()", "diff": ["-", "-  final private boolean jj_3R_364() {", "+  final private boolean jj_3R_365() {", "-    if (jj_3R_368()) {", "+    if (jj_3R_369()) {", "-    if (jj_3R_369()) return true;", "+    if (jj_3R_370()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8b76ecd91518b8591ecf4816b639d0c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 541, "methodNumberAfterChange": 454, "signatureBeforeChange": "    final private boolean jj_3R_473()", "signatureAfterChange": "    final private boolean jj_3R_474()", "diff": ["+", "+  final private boolean jj_3R_474() {", "+    if (jj_3R_489()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_504()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_473() {", "-    if (jj_3R_488()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_503()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8bddf1d2ecddc4fee8549c6b2cedeef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "     public Object visit(BitAndExpression node)", "signatureAfterChange": "   public Class visit(BitAndExpression node)", "diff": ["+   */", "+  public Class visit(BitAndExpression node) {", "+    Class c = visitBitwiseExpression(node);", "+    ", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.bitAnd", "+           (c,", "+            ln.getProperty(NodeProperties.VALUE),", "+            rn.getProperty(NodeProperties.VALUE)));", "+    return c;", "+  }", "-     */", "-    public Object visit(BitAndExpression node) {", "-        Class c = visitBitwiseExpression(node);", "-", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.bitAnd", "-                     (c,", "-                      ln.getProperty(NodeProperties.VALUE),", "-                      rn.getProperty(NodeProperties.VALUE)));", "-        }", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8c19e75425e2a3c68a1d44a1c6c1c52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 696, "methodNumberAfterChange": 696, "signatureBeforeChange": "    final private boolean jj_3R_406()", "signatureAfterChange": "    final private boolean jj_3R_408()", "diff": ["-", "-  final private boolean jj_3R_406() {", "-    if (jj_3R_407()) return true;", "-    if (jj_3R_168()) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_418()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_419()) jj_scanpos = xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_420()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(SEMICOLON)) return true;", "+  final private boolean jj_3R_408() {", "+    if (jj_3R_409()) return true;", "+    if (jj_3R_168()) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_420()) { jj_scanpos = xsp; break; }", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_3R_421()) jj_scanpos = xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_422()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(SEMICOLON)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8f58f55907639d64ca0c733b8a0846a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": "          public void testForPackageImportStatementOnly()", "signatureAfterChange": "          public void testForPackageImportStatementOnly()", "diff": ["-      Word[] words = new Word[] {new Word(SourceInfo.NO_INFO, \"alpha\"),", "-        new Word(SourceInfo.NO_INFO, \"beta\")};", "-      CompoundWord cw = new CompoundWord(SourceInfo.NO_INFO, words);", "-      PackageImportStatement cis = new PackageImportStatement(SourceInfo.NO_INFO, cw);", "+      Word[] words = new Word[] {new Word(SourceInfo.NONE, \"alpha\"),", "+        new Word(SourceInfo.NONE, \"beta\")};", "+      CompoundWord cw = new CompoundWord(SourceInfo.NONE, words);", "+      PackageImportStatement cis = new PackageImportStatement(SourceInfo.NONE, cw);", "-      Word[] words3 = new Word[] {new Word(SourceInfo.NO_INFO, \"myPackage\"), new Word(SourceInfo.NO_INFO, ", "+      Word[] words3 = new Word[] {new Word(SourceInfo.NONE, \"myPackage\"), new Word(SourceInfo.NONE, ", "-      CompoundWord cw3 = new CompoundWord(SourceInfo.NO_INFO, words3);", "-      PackageImportStatement pis = new PackageImportStatement(SourceInfo.NO_INFO, cw3);", "+      CompoundWord cw3 = new CompoundWord(SourceInfo.NONE, words3);", "+      PackageImportStatement pis = new PackageImportStatement(SourceInfo.NONE, cw3);", "-      Word[] words2 = new Word[] {new Word(SourceInfo.NO_INFO, \"myPackage\")};", "-      CompoundWord cw2 = new CompoundWord(SourceInfo.NO_INFO, words2);", "-      PackageImportStatement pis2 = new PackageImportStatement(SourceInfo.NO_INFO, cw2);", "+      Word[] words2 = new Word[] {new Word(SourceInfo.NONE, \"myPackage\")};", "+      CompoundWord cw2 = new CompoundWord(SourceInfo.NONE, words2);", "+      PackageImportStatement pis2 = new PackageImportStatement(SourceInfo.NONE, cw2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8fd3f024ca36a1cb623dfc035c1be32", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "b97db40bea671594a37f7cabd8d363cab45e0154", "commitAfterChange": "fab79f2f445044e7a60a89e228042164713428d9", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testGetLine5()", "signatureAfterChange": "   public void testGetLine5()", "diff": ["-    defModel.gotoLine(1);", "+    defModel.setCurrentLocation(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90983b778c54e7f942be1276f3b8e77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "      public abstract boolean containsStaticField(Type t, String name);", "signatureAfterChange": "      public abstract boolean containsStaticField(Type t, String name, Access.Module accessModule);", "diff": ["-  public abstract boolean containsStaticField(Type t, String name);", "+  public abstract boolean containsStaticField(Type t, String name, Access.Module accessModule);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90eb0e3d281a3b294e83094af7e2ac6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlusTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testBothIndentedAddStuff() throws javax.swing.text.BadLocationException", "signatureAfterChange": "   public void testBothIndentedAddStuff() throws javax.swing.text.BadLocationException", "diff": ["-    assertEquals(\"  foo\\n  abcbar\", _doc.getText(0, 14));", "+    assertEquals(\"  foo\\n  abcbar\", _doc.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9175527964038d4751be9f0e8f862ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 396, "methodNumberAfterChange": 403, "signatureBeforeChange": "    final private boolean jj_3R_214()", "signatureAfterChange": "    final private boolean jj_3R_239()", "diff": ["+", "+  final private boolean jj_3R_239() {", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_291()) jj_scanpos = xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_292()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_214() {", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_250()) jj_scanpos = xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_251()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d91a9c602d1423abffd2e677f9a5560a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 140, "signatureBeforeChange": "   public void loadHistory(FileOpenSelector selector)", "signatureAfterChange": "   public void loadHistory(FileOpenSelector selector) throws IOException", "diff": ["-  public void loadHistory(FileOpenSelector selector) {", "+  public void loadHistory(FileOpenSelector selector) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d91ec1d4caa10cb2aa9579b6df703884", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 12, "signatureBeforeChange": "   protected boolean isStartupInProgress()", "signatureAfterChange": "      protected boolean isDisposed()", "diff": ["+  protected boolean isDisposed() { return _monitor.value().equals(State.DISPOSED); }", "-  /** Returns true if the slave is in the process of starting. */", "-  protected boolean isStartupInProgress() { return _startupInProgress; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d934b818c2c851050c7a190b467056df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public IncompleteInputInteractionsModel(InteractionsDJDocument adapter)", "signatureAfterChange": "     public IncompleteInputInteractionsModel(InteractionsDJDocument adapter)", "diff": ["-      super(new MainJVM(), adapter, 1000, 25);", "+      super(new MainJVM(null), adapter, 1000, 25);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d94014c8036ea6e25063dff8f37dc14f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b3d6313113eef111465ef40865d8b51fd3f1c263", "commitAfterChange": "297ab8f541fdccc79367d02c322b7113ca0c7fca", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 158, "signatureBeforeChange": "      private void _saveProjectHelper(File file)", "signatureAfterChange": "      private void _saveProjectHelper(File file)", "diff": ["+    _model.setProjectChanged(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9522c09e2ab56cca95d9f5659b0a713", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public Component getTreeCellRendererComponent(                                                   JTree tree,                                                   Object value,                                                   boolean sel,                                                   boolean expanded,                                                   boolean leaf,                                                   int row,                                                   boolean hasFocus)", "signatureAfterChange": "     public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded,                                                   boolean leaf, int row, boolean hasFocus)", "diff": ["-    public Component getTreeCellRendererComponent(", "-                                                  JTree tree,", "-                                                  Object value,", "-                                                  boolean sel,", "-                                                  boolean expanded,", "-                                                  boolean leaf,", "-                                                  int row,", "-                                                  boolean hasFocus) {", "+    public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded,", "+                                                  boolean leaf, int row, boolean hasFocus) {", "-        if (leaf && _displayManager != null) setIcon(_displayManager.getIcon(doc));", "+        if (leaf && _displayManager != null) {", "+          setIcon(_displayManager.getIcon(doc));", "+          setText(_displayManager.getName(doc));", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d975f69f15cab371ce87e226723336cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 570, "methodNumberAfterChange": 580, "signatureBeforeChange": "    final private boolean jj_3R_520()", "signatureAfterChange": "    final private boolean jj_3R_293()", "diff": ["-", "-  final private boolean jj_3R_520() {", "-    if (jj_3R_96()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_530()) jj_scanpos = xsp;", "-    return false;", "-  }", "+  final private boolean jj_3R_293() {", "+    if (jj_3R_303()) return true;", "+    if (jj_3R_304()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d980f28aca2992cc41c7ca6a4bbd3df3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public void setJUnitInProgress()", "signatureAfterChange": "     public void setJUnitInProgress(OpenDefinitionsDocument odd)", "diff": ["-    public void setJUnitInProgress() {", "+    public void setJUnitInProgress(OpenDefinitionsDocument odd) {", "+      _docBeingTested = odd;", "-", "+      _checkSync(doc);", "+      ", "-        doc.insertString(0,", "-                         \"Testing in progress, please wait...\",", "+        doc.insertString(doc.getLength(),", "+                         \"Testing in progress, please wait...\\n\",", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9830d9474054380c36d1578694428e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 65, "signatureBeforeChange": "      private void _switchToSuspendedThread()", "signatureAfterChange": "   private void _switchToSuspendedThread() throws DebugException", "diff": ["-  ", "-  private void _switchToSuspendedThread(){", "+   */", "+  private void _switchToSuspendedThread() throws DebugException {", "-        /** ", "-         * Anytime a thread is suspended, it becomes the current thread.", "-         * This makes sure the debug panel will correctly put the", "-         * current thread in bold.", "-         */", "+        // Anytime a thread is suspended, it becomes the current thread.", "+        // This makes sure the debug panel will correctly put the", "+        // current thread in bold."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d997ac7602cecd84b63cb41e0e2d7d21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "f6810ad68cbb0aaa0d9f5ff0052437da87098ab7", "commitAfterChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "signatureAfterChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "diff": ["+      ", "+      if (i == DOCSTART-1) reducedPos = ERROR_INDEX; // No matching char was found", "+      _storeInCache(key, reducedPos);", "-    ", "-    if (i == DOCSTART-1) reducedPos = ERROR_INDEX; // No matching char was found", "-    _storeInCache(key, new Integer(reducedPos));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d99a62854eec50fd8bf927ada0314334", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public boolean hasSuspendedThreads();", "signatureAfterChange": "   public boolean hasSuspendedThreads() throws DebugException;", "diff": ["-  public boolean hasSuspendedThreads();", "+  public boolean hasSuspendedThreads() throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9a9cd33d94141855679e2b15b047dc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/Configuration.java", "commitBeforeChange": "7748aa0d84a52f8872bfaa33a4544c287e2cb350", "commitAfterChange": "32a6a91e5456ec4c66a7ab498cfc3e6e0c6e281e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public String getJSR14CollectionsPath()", "signatureAfterChange": "   public String getJSR14CollectionsPath()", "diff": ["-    return (String) _properties.get(JSR14_COLLECTIONS_KEY);", "+    return _properties.getProperty(JSR14_COLLECTIONS_KEY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d875c915051f9e64a4bcbeef42874e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 17, "signatureBeforeChange": "    public CompilerErrorModel getCompilerErrorModel()", "signatureAfterChange": "   public CompilerModel getCompilerModel()", "diff": ["-", "-  public CompilerErrorModel getCompilerErrorModel() {", "-    return _compilerErrorModel;", "-  }", "+  public CompilerModel getCompilerModel() {", "+    return _compilerModel;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9e6f1980201efd89d07a7581e4c3146", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/FileListProperty.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r   public void update(PropertyMaps pm)", "signatureAfterChange": "\r   public void update(PropertyMaps pm)", "diff": ["-    boolean doubleQuote = false;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da067a33a164412838ac0f8c7d7bd7c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 326, "methodNumberAfterChange": 791, "signatureBeforeChange": "    final private boolean jj_3R_319()", "signatureAfterChange": "    final private boolean jj_3R_177()", "diff": ["-", "-  final private boolean jj_3R_319() {", "-    if (jj_3R_279()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_398()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_177() {", "+    if (jj_3R_227()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_228()) { jj_scanpos = xsp; break; }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da1ea7427b5789684673f7ad2b3f08c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 281, "methodNumberAfterChange": 281, "signatureBeforeChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "signatureAfterChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["-          throw new UnexpectedException(e2);", "+          throw new UnexpectedException(e2.getTargetException());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da7beeaab386f204cb27ff20d31044ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlusTest.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testAnonymousInnerClassArg() throws BadLocationException", "signatureAfterChange": "      public void testAnonymousInnerClassArg() throws BadLocationException", "diff": ["-    IndentRuleAction rule = new ActionStartPrevStmtPlus(\"\", false);", "+    IndentRuleAction rule = new ActionStartPrevStmtPlus(0, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da85a29c39b9ac980d43a0f4444841de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/JSR14Compiler.java", "commitBeforeChange": "85538cb484722f3ee8b8f52d4f19defc02bd67d5", "commitAfterChange": "ec727abc662388138ad4bf94694974ef5e13db3c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void updateBootClassPath()", "signatureAfterChange": "      protected void updateBootClassPath()", "diff": ["-    String ccp = _collectionsPath;", "+    String ccp = _collectionsPath.getAbsolutePath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daa44c3181573b49b8dcacec28557225", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 195, "methodNumberAfterChange": 200, "signatureBeforeChange": "      private void _openProjectUpdate()", "signatureAfterChange": "      private void _openProjectUpdate()", "diff": ["-      _model.setProjectChanged(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daa6ee8f73ee2683a120291987c09d13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/ForcedChoiceOption.java", "commitBeforeChange": "3144efa2bdaef7eb118336f3bc431cce43bf0ac2", "commitAfterChange": "f3137148a923ab22d0c3b3413619e702ec846448", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ForcedChoiceOption(String key, String def, Collection<String> choices)", "signatureAfterChange": "   public ForcedChoiceOption(String key, String def, Collection<String> choices)", "diff": ["+    this(key, def, choices, Arrays.asList(new String[0]));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabb723a4de98a753d4e0f033a197f01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public static <I, R>     IncrementalTaskController<I, R> computeInThread(IncrementalTask<? extends I, ? extends R> task, boolean start)", "signatureAfterChange": "   public static <I, R>       IncrementalTaskController<I, R> computeInThread(IncrementalTask<? extends I, ? extends R> task, boolean start)", "diff": ["-   */", "-  public static <I, R>", "-    IncrementalTaskController<I, R> computeInThread(IncrementalTask<? extends I, ? extends R> task, boolean start) {", "-    return computeInThread(task, start, false);", "-  }", "+      IncrementalTaskController<I, R> computeInThread(IncrementalTask<? extends I, ? extends R> task, boolean start) {", "+    return computeWithExecutor(task, THREAD_EXECUTOR, start, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dae2093d27cb3bc7693e8a76e70505b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 593, "methodNumberAfterChange": 607, "signatureBeforeChange": "    final private boolean jj_3R_564()", "signatureAfterChange": "    final private boolean jj_3R_230()", "diff": ["-  final private boolean jj_3R_564() {", "-    if (jj_3R_278()) return true;", "-      if (jj_3R_570()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_230() {", "+    if (jj_3R_272()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_304()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daf68bc485d1f13c0a3dba57fecebd37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public IndentInfo getIndentInformation()", "signatureAfterChange": "   public IndentInfo getIndentInformation()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }  ", "+    finally { releaseReadLock(); }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daf9e3b04e8af90b8365f821c83731d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/InputStreamRedirector.java", "commitBeforeChange": "bb4b98f439d908bb82a053d84050800352efc81c", "commitAfterChange": "cd1609e710303d46ced563eabe056854e1c94813", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public int read(byte[] b, int off, int len) throws IOException", "signatureAfterChange": "   public synchronized int read(byte[] b, int off, int len) throws IOException", "diff": ["-  public int read(byte[] b, int off, int len) throws IOException {", "+  public synchronized int read(byte[] b, int off, int len) throws IOException {", "-        b[i] = (byte) ((Character) _buffer.remove(0)).charValue();", "+        b[i] = (byte) _buffer.remove(0).charValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db03825c1dcfab1107f48ba7543fea4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5122b57870a06ce192633fae172ea410d4b7581b", "commitAfterChange": "8cb074150c1494bfc3b263a6dfa5f3cba6209da2", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void updateFileTitle(String filename)", "signatureAfterChange": "   public void updateFileTitle()", "diff": ["-  public void updateFileTitle(String filename) {", "+  public void updateFileTitle() {", "+    String filename = _getDisplayFilename(_currentDefPane.getOpenDocument());", "-    _fileNameField.setText(filename);", "+    _docList.repaint();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db0ef20c13d5344a3c3b90a6d297707e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "d187ef0ae751d72da55c4bc4f82be93731c1e46f", "commitAfterChange": "d8ed07c181201a238142caf2537f1e0f6da8bb42", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public boolean inProgress()", "signatureAfterChange": "   public boolean inProgress()", "diff": ["-    return _inProgress;", "-  }", "+    return !_hasPrompt;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db24145429863144b9f1d5c729676c76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   private String _getValue(Value value) throws DebugException", "signatureAfterChange": "   private String _getValue(Value value) throws DebugException", "diff": ["-    List<Method> toStrings = rt.methodsByName(\"toString\");  // JDK 1.5 will eliminate this warning", "+    List toStrings = rt.methodsByName(\"toString\");", "-    Method method = toStrings.get(0);", "+    Method method = (Method)toStrings.get(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db29acde4ffa6a2563cf13a307a2f608", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public Class visit(ComplementExpression node)", "signatureAfterChange": "   public Class visit(ComplementExpression node)", "diff": ["-    Class c = (Class)n.acceptVisitor(this);", "-    ", "+    Class c = n.acceptVisitor(this);", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db772b848213a4522697ca3d7d4f9823", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": "     public void commentLinesInDefinitions(int selStart, int selEnd)", "signatureAfterChange": "     public void commentLinesInDefinitions(int selStart, int selEnd)", "diff": ["-      _doc.commentLines(selStart, selEnd);", "+      getDocument().commentLines(selStart, selEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db77fa0e4dd5083655680f615547dd74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "0bbc4205cb6cdac938c33646446cffe67a254d86", "commitAfterChange": "32c1a96bda59745efd4d13dbac97b7a11f8d7d24", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testMultilineIndentAfterScroll() throws BadLocationException", "signatureAfterChange": "   public void testMultilineIndentAfterScroll() throws BadLocationException", "diff": ["+    pane.endCompoundEdit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db7e5bdf28f6c69c201796d7af421146", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 713, "methodNumberAfterChange": 707, "signatureBeforeChange": "    final private boolean jj_3R_207()", "signatureAfterChange": "    final private boolean jj_3R_212()", "diff": ["+", "+  final private boolean jj_3R_212() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_29()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_254()) return true;", "+    }", "-", "-  final private boolean jj_3R_207() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_28()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_247()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db9554de6b25c5de0de0982b526fcd27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0bcb8da0b79cf218cc2712f201e3771599202c44", "commitAfterChange": "c34979036dca11c3afc06b42fcb087eaf85bc790", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 194, "signatureBeforeChange": "      private void _closeFolder()", "signatureAfterChange": "      private void _closeFolder()", "diff": ["-      _model.closeFiles(l, false);", "+      _model.closeFiles(l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db9e3c7016a6693fffb236cfd2cfc02c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPane.java", "commitBeforeChange": "c750f23eb2b9150b4fb75772deac7c17626a7d1c", "commitAfterChange": "74e4ff93e186e54c8f3a2ca5764d77cf5247e4cc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected void paintComponent(Graphics g)", "signatureAfterChange": "   protected void paintComponent(Graphics g)", "diff": ["-    if (g==null) return;", "-    if (CodeStatus.DEVELOPMENT) {", "-      if (_antiAliasText && g instanceof Graphics2D) {", "-        Graphics2D g2d = (Graphics2D)g;", "-        g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);", "-      }", "+    if (g == null) return;  // Addresses bug 1651914", "+    if (_antiAliasText && g instanceof Graphics2D) {", "+      Graphics2D g2d = (Graphics2D)g;", "+      g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dba2ef4fd9ef511daf27ec5c3839ff6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public Class visit(NotExpression node)", "signatureAfterChange": "   public Class visit(NotExpression node)", "diff": ["-    Class c = (Class)n.acceptVisitor(this);", "-    ", "+    Class c = n.acceptVisitor(this);", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbce9d157c4be20ae997249d6156c0d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 799, "methodNumberAfterChange": 308, "signatureBeforeChange": "    final private boolean jj_3R_468()", "signatureAfterChange": "    final private boolean jj_3R_390()", "diff": ["+  final private boolean jj_3R_390() {", "+    if (jj_3R_410()) {", "+    if (jj_3R_411()) return true;", "-  final private boolean jj_3R_468() {", "-    if (jj_3R_476()) {", "-    if (jj_3R_477()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbdd6397e1f84fb8e2ee0369f8212631", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "72cd3e48e9b9e298f00a111fb5ffe96f331ffca4", "commitAfterChange": "d4a2d68c03fa1b918347931c3e594614ce00cce5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ProjectFileIR parse(File projFile) throws IOException, FileNotFoundException, MalformedProjectFileException", "signatureAfterChange": "   public ProjectFileIR parse(File projFile) throws IOException, FileNotFoundException, MalformedProjectFileException", "diff": ["+    ", "+    //We don't store version information in .pjt files.  Yet another reason to use the .xml format.", "+    pfir.setDrJavaVersion(\"unknown\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc05dc2af6fd4bef621c78f42d1a6f31", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 107, "signatureBeforeChange": "   private void _updateErrorListeners()", "signatureAfterChange": "   void updateErrorListeners()", "diff": ["-  private void _updateErrorListeners() {", "+  void updateErrorListeners() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc06611ca16e8ac3e7cd309b9e187ca9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 291, "methodNumberAfterChange": 287, "signatureBeforeChange": "   public void open(FileOpenSelector openSelector)", "signatureAfterChange": "   public void open(FileOpenSelector openSelector)", "diff": ["-      simpleHourglassOn();", "+      hourglassOn();", "-    finally { simpleHourglassOff(); }", "+    finally { hourglassOff(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1de5bc89e392906858069f917c2285", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 539, "methodNumberAfterChange": 801, "signatureBeforeChange": "    final private boolean jj_3R_467()", "signatureAfterChange": "    final private boolean jj_3R_479()", "diff": ["-", "-  final private boolean jj_3R_467() {", "-    if (jj_3R_96()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3_27()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_479() {", "+    if (jj_3R_94()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_500()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc29f57f6b1583105561f939cff2dc7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/IntegerOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public void testCancelDoesNotChangeConfig()", "signatureAfterChange": "    public void testCancelDoesNotChangeConfig()", "diff": ["+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc3f7374cd9d1420d36d3440d18c50e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "8a099b753fcfb83be248d39f70edd5788e8b1222", "commitAfterChange": "4701dc92d8eb3da9b7f829b98cf858de261361f6", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": "    private void _interactionIsOver()", "signatureAfterChange": "    private void _interactionIsOver()", "diff": ["+    _interactionsDoc.setInProgress(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc407fc6b38c52d5f9fd1fd306a1f554", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void testInteractionsLiveUpdateClasspath()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsLiveUpdateClasspath()     throws BadLocationException, DocumentAdapterException,      IOException, InterruptedException", "diff": ["-    throws BadLocationException, IOException, InterruptedException", "+    throws BadLocationException, DocumentAdapterException, ", "+    IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc4b3d78dee5c10dd08ba62007db6aac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "9ae8e49d05b454014cd45ba0022e545d87ea9953", "commitAfterChange": "9c90b7b939ef84b126429fe2be8920396d1c5ebd", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public static String replaceVariables(String str, PropertyMaps props, Lambda<String,DrJavaProperty> getter)", "signatureAfterChange": "   public static String replaceVariables(String str, PropertyMaps props, Lambda<String,DrJavaProperty> getter)", "diff": ["+    tok.addQuotes(\"\\\"\", \"\\\"\");", "-                  atok.whitespaceRange(0,32);", "+                  atok.whitespaceRange(0,32); ", "+                  atok.addQuotes(\"${\", \"}\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc4c0eaae71dec2ea5b3007799361721", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "8c59b6d09078dbcf117925bc686cacee46ca999f", "commitAfterChange": "f8e25255cc9b1c52f4c1874e15c63efdafe32091", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private ClassType resolveClassName(String name, Node node)", "signatureAfterChange": "      private ClassType resolveClassName(String name, Node node)", "diff": ["-        catch (AmbiguousNameException e) { throw new ExecutionError(\"ambiguous.name\", node); }", "+        catch (AmbiguousNameException e) {", "+          setErrorStrings(node, topLevelName);", "+          throw new ExecutionError(\"ambiguous.name\", node);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc4e94e0693d506a73cfd5a843827a95", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 474, "methodNumberAfterChange": 291, "signatureBeforeChange": "    final private boolean jj_3R_103()", "signatureAfterChange": "    final private boolean jj_3R_103()", "diff": ["+  final private boolean jj_3R_103() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_71()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_156()) return true;", "+    }", "-", "-  final private boolean jj_3R_103() {", "-    if (jj_3R_155()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_221()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc7b3952883f2c039382f77d1da8aebc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 600, "methodNumberAfterChange": 761, "signatureBeforeChange": "    final private boolean jj_3R_151()", "signatureAfterChange": "    final private boolean jj_3R_171()", "diff": ["-  final private boolean jj_3R_151() {", "+", "+  final private boolean jj_3R_171() {", "+    if (jj_3_76()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_209()) {", "+    jj_scanpos = xsp;", "+    if (jj_scan_token(85)) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_210()) {", "+    jj_scanpos = xsp;", "-    if (jj_3R_217()) return true;", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    return false;", "-  }", "+    if (jj_3R_217()) {", "+    if (jj_3R_218()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_219()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_220()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_221()) return true;", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc93c9ac04debea209bd70d9849531bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testNoJUnitErrors() throws Exception", "signatureAfterChange": "   public void testNoJUnitErrors() throws Exception", "diff": ["-    doc.startCompile(); // synchronously compiles doc", "+    listener.compile(doc); // synchronously compiles doc", "-    _runJUnit(doc);", "-", "-    Utilities.clearEventQueue();", "+    listener.runJUnit(doc);", "-    ", "+    _log.log(\"testNoJUnitErrors completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc9686139869e1e93b1dae9ce8f32d6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 745, "methodNumberAfterChange": 748, "signatureBeforeChange": "    final private boolean jj_3R_215()", "signatureAfterChange": "    final private boolean jj_3R_219()", "diff": ["-  final private boolean jj_3R_215() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_3R_98()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_219() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_254()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_255()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_256()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_257()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_258()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_259()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_260()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_261()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_262()) return true;", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcb294a86e970e8f1c58ddffbec9b476", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 203, "methodNumberAfterChange": 212, "signatureBeforeChange": "     public void runMain()", "signatureAfterChange": "     public void runMain() throws IOException, ClassNameNotFoundException", "diff": ["-    public void runMain() {", "+    public void runMain() throws IOException, ClassNameNotFoundException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcbe8f0bc229a8694ff5c93d87f45097", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 316, "methodNumberAfterChange": 298, "signatureBeforeChange": "    final private boolean jj_3R_371()", "signatureAfterChange": "    final private boolean jj_3R_374()", "diff": ["-  final private boolean jj_3R_371() {", "-    if (jj_3R_384()) return true;", "+  final private boolean jj_3R_374() {", "+    if (jj_3R_387()) return true;", "-      if (jj_3R_406()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_409()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dccdd9f5e124c2310895cf9acd114930", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "2b3538f4ec792670cfb28bc41a5aee6f4c8718c0", "commitAfterChange": "c302d1db72cb508e0cec30d24e39d48cce8fd663", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public Void forClassDef(ClassDef that)", "signatureAfterChange": "   public Void forClassDef(ClassDef that)", "diff": ["-          System.err.println(\"importing junit.framework.TestCase in file \" + that.getSourceInfo());", "+//          System.err.println(\"importing junit.framework.TestCase in file \" + that.getSourceInfo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dccefa46c6242af68df1b998519738f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/NameVisitorExtension.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Object visit(VariableDeclaration node)", "signatureAfterChange": "   public Node visit(VariableDeclaration node)", "diff": ["-  public Object visit(VariableDeclaration node) {  ", "+  public Node visit(VariableDeclaration node) {  ", "-      Object o = n.acceptVisitor(this);", "+      Node o = n.acceptVisitor(this);", "-        if (o instanceof ReferenceType) {", "-          throw new ExecutionError(\"malformed.expression\", n);", "-        }", "+        rejectReferenceType(o,n);", "-    Class lc = (Class)node.getType().acceptVisitor(_tc);", "+    Class lc = node.getType().acceptVisitor(_tc);", "-      Class rc = (Class)init.acceptVisitor(_tc);", "+      Class rc = init.acceptVisitor(_tc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dccfb08ccd24d0a77f9f5ffcc2236edf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 628, "methodNumberAfterChange": 623, "signatureBeforeChange": "    final private boolean jj_3R_122()", "signatureAfterChange": "    final private boolean jj_3R_123()", "diff": ["-  final private boolean jj_3R_122() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_165()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_166()) return true;", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_123() {", "+    if (jj_scan_token(COMMA)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_167()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_168()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcd3d9884b952815e5fb32d6f5f77475", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "     public abstract ClassType lookupClass(Type t, String name, Iterable<? extends Type> typeArgs)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "     public abstract ClassType lookupClass(Type t, String name, Iterable<? extends Type> typeArgs,                                         Access.Module accessModule)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-  public abstract ClassType lookupClass(Type t, String name, Iterable<? extends Type> typeArgs)", "+  public abstract ClassType lookupClass(Type t, String name, Iterable<? extends Type> typeArgs,", "+                                        Access.Module accessModule)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dce63f89ddebf6c60d9b39ff23f403d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "a25fe41044d292186863ba8ddd26164fdef4fc59", "commitAfterChange": "682bd0a2b528d852a57206c89ed5bb4a5b484c14", "methodNumberBeforeChange": 183, "methodNumberAfterChange": 178, "signatureBeforeChange": "   boolean _closeProject()", "signatureAfterChange": "   boolean _closeProject()", "diff": ["-      if(_model.getDocumentCount() == 1)", "-        _model.setActiveFirstDocument();", "+      if(_model.getDocumentCount() == 1) _model.setActiveFirstDocument();", "-      _junitProjectAction.setEnabled(false);", "+//      _junitProjectAction.setEnabled(false);", "-      _compileOpenProjectAction.setEnabled(false);", "+//      _compileOpenProjectAction.setEnabled(false);", "-    }else{", "-      return false;", "+    else return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd1a1821587a8877602c0cf67780e93f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public static String encodeHTML(String s)", "signatureAfterChange": "   public static String encodeHTML(String s)", "diff": ["-    s = StringOps.replace(s, NEWLINE,\"<br>\");", "+    s = StringOps.replace(s, \"\\n\",\"<br>\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd1aba462bae8d3e787a12fd46f45987", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsEditorKit.java", "commitBeforeChange": "b05d6101d72721dc72e1089de24af7a09f520884", "commitAfterChange": "1c36c4f5a2718b62938a20268edf5b2f24819a2b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void actionPerformed(ActionEvent e)", "signatureAfterChange": "     public void actionPerformed(ActionEvent e)", "diff": ["-      LOG.log(\"SelectWordAction.actionPerformed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd39b2ed1aa0e2fb1d4846c5c62ff62d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testReplaceCreatesMatch() throws BadLocationException", "signatureAfterChange": "   public void testReplaceCreatesMatch() throws BadLocationException", "diff": ["-    _frm.replaceAll();", "+    replaceAll();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd4ab32960273dc0367049a8a251a8ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 508, "methodNumberAfterChange": 370, "signatureBeforeChange": "    final private boolean jj_3R_112()", "signatureAfterChange": "    final private boolean jj_3R_115()", "diff": ["-", "-  final private boolean jj_3R_112() {", "-    if (jj_3R_180()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_245()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_115() {", "+    if (jj_3R_183()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_248()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd4cea6f1e250bf4cc04d86df1a0bcd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 706, "methodNumberAfterChange": 704, "signatureBeforeChange": "    final private boolean jj_3R_345()", "signatureAfterChange": "    final private boolean jj_3R_567()", "diff": ["+", "+  final private boolean jj_3R_567() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(32)) jj_scanpos = xsp;", "+    if (jj_3R_181()) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_580()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_345() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(32)) jj_scanpos = xsp;", "-    if (jj_3R_206()) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_416()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd61b0e133c7e9f28982cc2846ffe49c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 22, "signatureBeforeChange": "      public void assertBreakpointSetCount(int i)", "signatureAfterChange": "      public void assertRegionRemovedCount(int i)", "diff": ["-    public void assertBreakpointSetCount(int i) {", "-      assertEquals(\"number of times breakpointSet fired\", i, breakpointSetCount);", "-    }", "+", "+    public void assertRegionRemovedCount(int i) {", "+      assertEquals(\"number of times regionRemoved fired\", i, regionRemovedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd7de3b679ca8e22efc475496fa26730", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringView.java", "commitBeforeChange": "12434dc2dab84dfe1024e2e2b39fd8f27da62bbd", "commitAfterChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected int drawUnselectedText(Graphics g, int x, int y, int p0, int p1) throws BadLocationException", "signatureAfterChange": "   protected int drawUnselectedText(Graphics g, int x, int y, int start, int end) throws BadLocationException", "diff": ["-  protected int drawUnselectedText(Graphics g, int x, int y, int p0, int p1) throws BadLocationException {", "+  protected int drawUnselectedText(Graphics g, int x, int y, int start, int end) throws BadLocationException {", "-    if (p0 == p1) return  x;", "+    if (start == end) return  x;", "-    Vector<HighlightStatus> stats = _doc.getHighlightStatus(p0, p1);", "+    Vector<HighlightStatus> stats = _doc.getHighlightStatus(start, end);", "-      if (location + length > p1) length = p1 - stat.getLocation();", "+      if (location + length > end) length = end - stat.getLocation();", "-      if (!(_doc instanceof InteractionsDJDocument) || !((InteractionsDJDocument)_doc).setColoring((p0+p1)/2,g))      ", "+      if (!(_doc instanceof InteractionsDJDocument) || !((InteractionsDJDocument)_doc).setColoring((start+end)/2,g))      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd8126498ba6e75d5fd41034a00cfb1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testInsertStarIntoStarSlash() throws BadLocationException", "signatureAfterChange": "   public void testInsertStarIntoStarSlash() throws BadLocationException", "diff": ["-    BraceReduction rm = _defModel.getReduced();", "+    BraceReduction _reduced = _defModel.getReduced();", "-    assertEquals(\"1\", \"/*\", rm.currentToken().getType());", "-    assertEquals(\"2\", ReducedToken.FREE, rm.currentToken().getState());", "-    rm.move(2);", "-    assertEquals(\"3\", \"*\", rm.currentToken().getType());", "-    assertEquals(\"4\", ReducedToken.INSIDE_BLOCK_COMMENT, rm.currentToken().getState());", "-    rm.move(1);", "-    assertEquals(\"5\", \"*/\", rm.currentToken().getType());", "-    assertEquals(\"6\", ReducedToken.FREE, rm.currentToken().getState());", "+    assertEquals(\"1\", \"/*\", _reduced.currentToken().getType());", "+    assertEquals(\"2\", ReducedToken.FREE, _reduced.currentToken().getState());", "+    _reduced.move(2);", "+    assertEquals(\"3\", \"*\", _reduced.currentToken().getType());", "+    assertEquals(\"4\", ReducedToken.INSIDE_BLOCK_COMMENT, _reduced.currentToken().getState());", "+    _reduced.move(1);", "+    assertEquals(\"5\", \"*/\", _reduced.currentToken().getType());", "+    assertEquals(\"6\", ReducedToken.FREE, _reduced.currentToken().getState());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd87cfb5962ad31724a0fb4964d5e0c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/TypeCheckerExtension.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Object visit(RemainderExpression node)", "signatureAfterChange": "   public Class visit(RemainderExpression node)", "diff": ["-  public Object visit(RemainderExpression node) {", "+  public Class visit(RemainderExpression node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd9b136019495fbc526da89d903c692d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocumentTest.java", "commitBeforeChange": "0f4d2da263ed93d9981fed5c0de39394b1b0893c", "commitAfterChange": "fc51b2245942e6d87f48245a9b8cdb4aedbcacc2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void xtestStylesListContentAndReset() throws EditDocumentException, InterruptedException", "signatureAfterChange": "   public void xtestStylesListContentAndReset() throws EditDocumentException, InterruptedException", "diff": ["-    System.err.println(\"reset interactions test reached\");", "+//    System.err.println(\"reset interactions test reached\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddc3754640d8fc749a23f617cc95d960", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 296, "methodNumberAfterChange": 877, "signatureBeforeChange": "    final private boolean jj_3R_624()", "signatureAfterChange": "    final private boolean jj_3R_111()", "diff": ["-  final private boolean jj_3R_624() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_628()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_629()) return true;", "-    }", "-    return false;", "+    if (jj_3_67()) {", "+    if (jj_3R_166()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddd804b9879f75d2adf7080ce83b7402", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 408, "methodNumberAfterChange": 384, "signatureBeforeChange": "    final private boolean jj_3R_311()", "signatureAfterChange": "    final private boolean jj_3R_315()", "diff": ["-  final private boolean jj_3R_311() {", "-    if (jj_3R_331()) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_346()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_315() {", "+    if (jj_3R_334()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_348()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddea85be2a5572e7422b8fd602e16eeb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ConsoleControllerTest.java", "commitBeforeChange": "e75c44dca53d5633e70ed3badd03d3667a23d4c8", "commitAfterChange": "c11896795d0041b0e5728ede27aa1fce3454d97c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testBasicConsoleInput()     throws EditDocumentException, InterruptedException", "signatureAfterChange": "   public void testBasicConsoleInput()     throws EditDocumentException, InterruptedException", "diff": ["-                 String.valueOf((int) System.getProperty(\"line.separator\").charAt(0)), result);", "+                 String.valueOf((int) '\\n' /* formerly StringOps.EOL.charAt(0) */), result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de18d36020961b3f23efc1f5e659f02a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelBrace.java", "commitBeforeChange": "28c4be6b04d5867405916840b451c47e4acad060", "commitAfterChange": "db16e322f21576ce25b97ab99611f7c7362cef3e", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public int nextBrace()", "signatureAfterChange": "   public int nextBrace()", "diff": ["+\t\t\t\t\t\tcopyCursor.dispose();", "-\t\t\t", "+\t\t\tcopyCursor.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de1d82f0d516fc7af163adcacd6982ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "56a5d7ef4f332df9b45adf95f71d664c61575e1a", "commitAfterChange": "010ae297b5b09284b0dfa287aa524a83e41fa50d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private File mkTempDir(String funnyName)", "signatureAfterChange": "   private File mkTempDir(String funnyName) throws IOException", "diff": ["-  private File mkTempDir(String funnyName) {", "+  private File mkTempDir(String funnyName) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de27986ac283b36d2225e7184a143c9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 529, "methodNumberAfterChange": 526, "signatureBeforeChange": "    final private boolean jj_3R_250()", "signatureAfterChange": "    final private boolean jj_3R_260()", "diff": ["-  final private boolean jj_3R_250() {", "-    if (jj_scan_token(STAR_ASSIGN)) return true;", "-    if (jj_3R_94()) return true;", "+", "+  final private boolean jj_3R_260() {", "+    if (jj_scan_token(STAR_ASSIGN)) return true;", "+    if (jj_3R_97()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de29bacc390c7c22657b17ab881d2bd0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void defineConstant(String name, long value)", "signatureAfterChange": "   public void defineConstant(String name, long value)", "diff": ["-    ((InterpreterExtension)_djInterpreter).defineConstant(name, value);", "+    _djInterpreter.defineConstant(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2b1b68074cefe1fa4e57c595cd5dee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "    private void _setupDebugPanel(ConfigPanel panel)", "signatureAfterChange": "    private void _setupDebugPanel(ConfigPanel panel)", "diff": ["-                                \"<html>Specifies extra locations in which the<br>\" +", "-                                \"debugger should look for java source files.</html>\");", "+                                \"<html>Any directories in which to search for source<br>\" +", "+                                \"files when stepping in the Debugger.</html>\");", "-                                                  \"Shows a tab in the debugger displaying the currently running threads.\"));", "+                                                  \"Whether to show a tab in the Debugger displaying the current threads.\"));", "-                                                  \"<html>Specifies that the debugger should step into java classes,<br>\" +", "+                                                  \"<html>Whether the Debugger should step into Java library classes,<br>\" +", "-                                                  \"Specifies that the debugger should step into DynamicJava classes.\"));", "+                                                  \"<html>Whether the Debugger should step into the classes<br>\" +", "+                                                  \"used by the Interactions Pane (DynamicJava).</html>\"));", "-                                                  \"Specifies that the debugger should step into DrJava classes.\"));", "+                                                  \"Whether the Debugger should step into DrJava's own class files.\"));", "-                                                 \"<html>Specifies classes that the debuggger should not step into.<br>\" +", "-                                                 \"Should be a comma-separated list of fully-qualified classnames.<br>\" +", "-                                                 \"To exclude an entire package, specify packagename.* in the list.</html>\"));", "+                                                 \"<html>Any classes that the debuggger should not step into.<br>\" +", "+                                                 \"Should be a comma-separated list of fully-qualified class names.<br>\" +", "+                                                 \"To exclude a package, specify packagename.* in the list.</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2da51ab6f5a0b4c5aa48d70f692e74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "4cf68dc70458288095c944d37276893b11daf353", "commitAfterChange": "c22ae4a2b42306ce89775aaf2a5b300676337b0d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      T getItem()", "signatureAfterChange": "     void remove()", "diff": ["-", "-    T getItem() { return _item; }", "+    /** Remove the current node. Assumes that this is neither _head not _tail. */", "+    void remove() {", "+      assert _prev != null && _next != null;", "+      _prev._next = _next;", "+      _next._prev = _prev;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2e95c48521a04da2ec99a788f0871b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/FontOptionTest.java", "commitBeforeChange": "a291d012d39913b9e4728a94eda66dcde428ea77", "commitAfterChange": "86073a7fb314101fbea8399fc18b3a4415cbc887", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testParse()", "signatureAfterChange": "      public void testParse()", "diff": ["-      // Any failed parse attempts return the default \"dialog\" font", "-      assertEquals(\"dialog\", fo.parse(\"true\").getFamily());", "+      // Any failed parse attempts return some platform-dependent default font", "+      assertTrue(\"defaults to a font\", (fo.parse(\"true\") instanceof Font));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de3425e91cd9ee96f198acccc53bd443", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "1ecc95c0c60f2dabd3e5d52eee223ff564461e48", "commitAfterChange": "a7a03ce246432b4e0ab5d61753312842c1cd49c1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "    public void addClassPath(String s)", "signatureAfterChange": "    public void addClassPath(String s) throws RemoteException", "diff": ["-  public void addClassPath(String s) {", "+", "+  public void addClassPath(String s) throws RemoteException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de36a8f2cb9db2831a678f81022cca96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtilTest.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public void testRunInThread()", "signatureAfterChange": "         public void testRunInThread()", "diff": ["+    debug.logStart();", "+    ", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de40eb158c882e22a571ec9fc3606bdb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "1510cae783655f3e20fbad13671dbf97008c3ec2", "commitAfterChange": "2aadb81a716e2a196f82baa127c28e3225664fab", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void removeRegion(final R region)", "signatureAfterChange": "   public void removeRegion(final R region)", "diff": ["-    System.err.println(\"doc regions for \" + doc + \" = \" + docRegions);", "+//    System.err.println(\"doc regions for \" + doc + \" = \" + docRegions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de6a4d50c73ac50de646554bc00b8852", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 594, "methodNumberAfterChange": 588, "signatureBeforeChange": "    final private boolean jj_3R_165()", "signatureAfterChange": "    final private boolean jj_3R_170()", "diff": ["-", "-  final private boolean jj_3R_165() {", "-    if (jj_scan_token(THROW)) return true;", "-    if (jj_3R_94()) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_170() {", "+    if (jj_scan_token(THROW)) return true;", "+    if (jj_3R_97()) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de773867c7f7af468c1117d15b5d32fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c5ab9d91688dca7fa6244117a62a5f0f85d131ec", "commitAfterChange": "fa3227bd8ed65d422e78bb16b48f5f807a121783", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "   private JMenu _setUpDebugMenu()", "signatureAfterChange": "   private JMenu _setUpDebugMenu()", "diff": ["-    tempItem = debugMenu.add(_setBreakpointAction);", "-    // add an accelerator to tempItem", "+    debugMenu.addSeparator();", "-    tempItem = debugMenu.add(_removeBreakpointAction);", "-    // add an accelerator to tempItem", "+    _breakpointMenuItem = debugMenu.add(_toggleBreakpointAction);", "+    // TO DO: add an accelerator", "+    _runDebuggerMenuItem = debugMenu.add(_runDebuggerAction);", "+    // TO DO: add an accelerator", "+    ", "+    // Start off disabled", "+    _setDebugMenuItemsEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de8667c113aa1a3c9d8b1cb6b47da2ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "a757cd8e27c11c0cc6bf4ab20e64c2d65c2b4076", "commitAfterChange": "0fb45818396fd0f22d5caa4d32dda7936589092c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": "       protected void setBreakpoint(String className, int lineNumber) throws DebugException", "signatureAfterChange": "       protected void setBreakpoint(String className, int lineNumber) throws DebugException", "diff": ["-  */    ", "+   */    ", "-      throw new DebugException();", "+      throw new DebugException(re.toString());", "-      throw new DebugException();", "+      throw new DebugException(cnfe.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dea228631bf853e345d47b0a212bbe6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/ScrollableDialog.java", "commitBeforeChange": "6d214db24b68a17f17e0cc8f3030a6df6dfa9e3d", "commitAfterChange": "b1335a3b17a414ac9a5047d93a0387148d0d6ac9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void show()", "signatureAfterChange": "   public void show()", "diff": ["+    MainFrame.setPopupLoc(_dialog);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deadce4a5db080410a463e786a58153f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "30084d60ea1c92bd9e5a911d71d6555be6180e71", "commitAfterChange": "113afd3151c2b14c9d66bb242346ae4c872989d1", "methodNumberBeforeChange": 469, "methodNumberAfterChange": 469, "signatureBeforeChange": "   private OpenDefinitionsDocument _rawOpenFile(File file) throws IOException, AlreadyOpenException", "signatureAfterChange": "   private OpenDefinitionsDocument _rawOpenFile(File file) throws IOException, AlreadyOpenException", "diff": ["-      doc.setInitialVScroll(scroll.getFirst());", "-      doc.setInitialHScroll( scroll.getSecond());", "-      doc.setInitialSelStart(sel.getFirst());", "-      doc.setInitialSelEnd(sel.getSecond());", "+      doc.setInitialVScroll(scroll.first());", "+      doc.setInitialHScroll( scroll.second());", "+      doc.setInitialSelStart(sel.first());", "+      doc.setInitialSelEnd(sel.second());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dec0e3e2f9636124ec07eda1bd338ed2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsPane.java", "commitBeforeChange": "1a9af627ea69f691af32f9a422290b5017b0703d", "commitAfterChange": "8d34579e0c7e80db1371da26e8172a594bf3d48e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private boolean _saveToFile(String path)", "signatureAfterChange": "   boolean saveToFile(String path)", "diff": ["-  private boolean _saveToFile(String path)", "+  boolean saveToFile(String path)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ded056ff8c8e681897d4d19d0b54d0fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["+    if (CodeStatus.DEVELOPMENT) {", "+      DrJava.CONFIG.addOptionListener( OptionConstants.JAVAC_LOCATION, new CompilerLocationOptionListener());", "+      DrJava.CONFIG.addOptionListener( OptionConstants.JSR14_LOCATION, new CompilerLocationOptionListener());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ded377b0f16399844da20f60ef59cf07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 334, "methodNumberAfterChange": 636, "signatureBeforeChange": "    final private boolean jj_3R_339()", "signatureAfterChange": "    final private boolean jj_3R_335()", "diff": ["-  final private boolean jj_3R_339() {", "-    if (jj_3R_345()) return true;", "-      if (jj_3R_360()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_335() {", "+    if (jj_3R_342()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_343()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deee80765ee1474dd29dd9b05cffb546", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessTest.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testCompileClasspathOKDefaultPackage()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileClasspathOKDefaultPackage()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    System.out.println(\"testCompileClasspathOKDefaultPackage()\");", "+//    System.out.println(\"testCompileClasspathOKDefaultPackage()\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df00dbe1006d15bf1025b478e93519be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Object visit(LabeledStatement node)", "signatureAfterChange": "   public Class visit(LabeledStatement node)", "diff": ["-     */", "-    public Object visit(LabeledStatement node) {", "-        node.getStatement().acceptVisitor(this);", "-        return null;", "-    }", "+   */", "+  public Class visit(LabeledStatement node) {", "+    node.getStatement().acceptVisitor(this);", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df0941b7075eba7df38c062bf9e2fc1a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "commitAfterChange": "9ce155a1f3e34352032d821032cb2dc70024460f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   @Override public Type visit(SimpleMethodCall node)", "signatureAfterChange": "   @Override public Type visit(SimpleMethodCall node)", "diff": ["-      // TODO: Check for uncaught exceptions", "+      checkThrownExceptions(inv.thrown(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df430567a5da69b9807186130d28d249", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/DebugContextTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testStaticFieldsConsistent() throws Exception", "signatureAfterChange": "   public void XXXtestStaticFieldsConsistent() throws Exception", "diff": ["-  public void testStaticFieldsConsistent() throws Exception {", "+  public void XXXtestStaticFieldsConsistent() throws Exception {", "+    debug.logStart();", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df531a511b60552bb21282cf492961c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 640, "methodNumberAfterChange": 645, "signatureBeforeChange": "    final private boolean jj_3R_136()", "signatureAfterChange": "    final private boolean jj_3R_140()", "diff": ["-  final private boolean jj_3R_136() {", "+  final private boolean jj_3R_140() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;", "-    if (jj_3R_186()) return true;", "+    if (jj_3R_194()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df5b843a4afb1a7b83fbece9c8290f67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/EditExternalDialog.java", "commitBeforeChange": "05448f4a16d388258dac3b5fe6469699fb11175e", "commitAfterChange": "b128df4fa9d8df79a76ba9e19a170c160365e646", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void _export()", "signatureAfterChange": "   public void _export()", "diff": ["+    _exportChooser.setMultiSelectionEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfa17d40c97ea7f4f40cff55de2af950", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigatorTest.java", "commitBeforeChange": "7c4507413beb0e75cdce1379ffec8d0279bed992", "commitAfterChange": "d1bf0f940bc3d914d8d8293a0e85760984d7b371", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testTraversalOps()", "signatureAfterChange": "      public void testTraversalOps()", "diff": ["+    tree.setNextChangeModelInitiated(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfb21c0d18da360841dce7d9b45d984c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 413, "methodNumberAfterChange": 597, "signatureBeforeChange": "    final private boolean jj_3R_256()", "signatureAfterChange": "    final private boolean jj_3R_571()", "diff": ["-  final private boolean jj_3R_256() {", "-    if (jj_3R_284()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_312()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_571() {", "+    if (jj_3R_286()) return true;", "+      if (jj_3R_577()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfb70964efc37ad9396e6bfa17c0f2ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "d3ca8d30db126f3de1352627e18f51d00a1bf339", "commitAfterChange": "1e619a02befaa7a99dc31172b2a007a2446ed2bd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public static String escapeFileName(String s)", "signatureAfterChange": "   public static String escapeFileName(String s)", "diff": ["+      else if (s.charAt(i)==':') {", "+        sb.append(\"\\u001b:\"); // for Windows, escape the : in drive letters", "+        // on Unix, this case is irrelevant, since pathSeparatorChar==':'", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfbce02a8dc77a9a6b2cc7c370557774", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/CollectUtil.java", "commitBeforeChange": "0e1d09dde6936169177bd564168991351deb65d8", "commitAfterChange": "a4e2145de592013fb29da195ee7f505ebce1be18", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public static Predicate<Object> containsPredicate(Set<?> set)", "signatureAfterChange": "    public static Predicate<Object> containsPredicate(Set<?> set)", "diff": ["-  public static Predicate<Object> containsPredicate(Set<?> set) {", "-    return LambdaUtil.bindFirst(ContainsPredicate.INSTANCE, set);", "+", "+  public static Predicate<Object> containsPredicate(Set<?> set) {", "+    return LambdaUtil.bindFirst(CONTAINS_PREDICATE, set);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfc024faee90979cd65edf3eede2b775", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "8468328336764977b1a392d354ad9fa8332d6cf0", "commitAfterChange": "b5065bdb57d50a5108c714db64f9cb4417931362", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void reset(String banner)", "signatureAfterChange": "   public void reset(String banner)", "diff": ["-      forceInsertText(0, banner, DEFAULT_STYLE);", "-      _promptPos = 0;", "+      _forceInsertText(0, banner, DEFAULT_STYLE);", "+      _promptPos = banner.length();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfd9f0e6eab68089e5ba37acbdebfdea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "          public void testIsUncheckedException()", "signatureAfterChange": "          public void testIsUncheckedException()", "diff": ["-      NullLiteral nl = new NullLiteral(JExprParser.NO_SOURCE_INFO);", "+      NullLiteral nl = new NullLiteral(SourceInfo.NO_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfdd777a0f03d4f9f916c1c2c1556dcf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "   final public SwitchStatement switchStatement() throws ParseException", "signatureAfterChange": "   final public SwitchStatement switchStatement() throws ParseException", "diff": ["-        Node n = (Node)list.get(list.size() - 1);", "+        Node n = list.get(list.size() - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfde79a0798344264410b04949fd4ba2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 449, "methodNumberAfterChange": 716, "signatureBeforeChange": "    final private boolean jj_3R_473()", "signatureAfterChange": "    final private boolean jj_3R_396()", "diff": ["-  final private boolean jj_3R_473() {", "-    if (jj_scan_token(BITWISE_AND)) return true;", "-    if (jj_3R_452()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_396() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_3R_345()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfe14ca07e99bebd856062bbc77f2690", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker15.java", "commitBeforeChange": "9e3824633ee746290537e9b5e107ba2db1504674", "commitAfterChange": "31da1983d1819399d97822faa171f51ddfde661b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   protected void staticImportHandler(ImportDeclaration node)", "signatureAfterChange": "   protected void staticImportHandler(ImportDeclaration node)", "diff": ["-      throw new RuntimeException(\"Uncaught Class Not Found Exception\");", "+      throw new CatchedExceptionError(e,node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfede31e5224532468a5cf33210a37ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineEmptyOrEnterPress.java", "commitBeforeChange": "7800062ae81518c3396891f7a26a405437cbcbf7", "commitAfterChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    try {", "-      // Determine if there are only whitespace chars by seeing if the first non-WS char is the endOfLine", "-      int here = doc.getCurrentLocation();", "-      int endOfLine = doc._getLineEndPos(here);", "-      int firstNonWS = doc._getLineFirstCharPos(here);", "-      return (endOfLine == firstNonWS);", "-    }", "-    catch (BadLocationException e) {", "-      // Shouldn't happen", "-      throw new UnexpectedException(e);", "-    }", "+    // Determine if there are only whitespace chars by seeing if the first non-WS char is the endOfLine", "+    int here = doc.getCurrentLocation();", "+    int endOfLine = doc._getLineEndPos(here);", "+    int firstNonWS = doc._getLineFirstCharPos(here);", "+    return (endOfLine == firstNonWS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dff5a25bc541f9112fd6e8655b377e6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d884ae55e9471d604870827048329b58394dd950", "commitAfterChange": "28bca5adabaaf178bdf954808155389f93ed51fa", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 202, "signatureBeforeChange": "   public FindResultsPanel createFindResultsPanel(final RegionManager<MovingDocumentRegion> rm, String title,                                                  String searchString, boolean searchAll, boolean matchCase,                                                  boolean wholeWord, boolean noComments, boolean noTestCases,                                                  WeakReference<OpenDefinitionsDocument> doc,                                                  FindReplacePanel findReplace)", "signatureAfterChange": "   public FindResultsPanel createFindResultsPanel(final RegionManager<MovingDocumentRegion> rm, String title,                                                  String searchString, boolean searchAll, boolean matchCase,                                                  boolean wholeWord, boolean noComments, boolean noTestCases,                                                  WeakReference<OpenDefinitionsDocument> doc,                                                  FindReplacePanel findReplace)", "diff": ["+    ", "-    final Hashtable<MovingDocumentRegion, HighlightManager.HighlightInfo> highlights =", "-      new Hashtable<MovingDocumentRegion, HighlightManager.HighlightInfo>();", "-    Pair<FindResultsPanel,Hashtable<MovingDocumentRegion, HighlightManager.HighlightInfo>> pair =", "-      new Pair<FindResultsPanel,Hashtable<MovingDocumentRegion, HighlightManager.HighlightInfo>>(panel, highlights);", "+    ", "+    final Map<MovingDocumentRegion, HighlightManager.HighlightInfo> highlights =", "+      Collections.synchronizedMap(new TreeMap<MovingDocumentRegion, HighlightManager.HighlightInfo>());", "+    Pair<FindResultsPanel, Map<MovingDocumentRegion, HighlightManager.HighlightInfo>> pair =", "+      new Pair<FindResultsPanel, Map<MovingDocumentRegion, HighlightManager.HighlightInfo>>(panel, highlights);", "-        DefinitionsPane bpPane = getDefPaneGivenODD(r.getDocument());", "-        highlights.put(r, bpPane.getHighlightManager().", "+        DefinitionsPane pane = getDefPaneGivenODD(r.getDocument());", "+//        if (pane == null) Utilities.show(\"ODD \" + r.getDocument() + \" produced a null DefinitionsPane!\");", "+        highlights.put(r, pane.getHighlightManager().", "+//        Utilities.show(\"Removing highlight for region \" + r);", "+//        Utilities.show(\"The retrieved highlight is \" + highlight);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e02b906f095598f2b2270202b1754cfb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void setBreakpoint(final Breakpoint breakpoint);", "signatureAfterChange": "   public void setBreakpoint(final Breakpoint breakpoint) throws DebugException;", "diff": ["-  public void setBreakpoint(final Breakpoint breakpoint);", "+  public void setBreakpoint(final Breakpoint breakpoint) throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e02fa432b57be1fbf46ee1743bfa9cac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "314c962d7f6ed2c6b00f5edc6e764b582b016016", "commitAfterChange": "3b2b8c4279d3d3c19a0254256362d4d46aeeddaf", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": "     protected DefinitionsDocument getDocument()", "signatureAfterChange": "     protected DefinitionsDocument getDocument()", "diff": ["-        System.out.println(\"DefaultGlobalModel: 1430: FileMovedException should be handled by box that fixes everything.\");", "+        System.out.println(\"DefaultGlobalModel: 1430: FileMovedException should be handled by something.\");", "-        System.out.println(\"DefaultGlobalModel: 1432: IOException should be handled by box that fixes everything.\");", "+        System.out.println(\"DefaultGlobalModel: 1432: IOException should be handled by something.\");", "-      }catch(FileMovedException e){", "-        System.out.println(\"DefaultGlobalModel: 1440: this should NEVER happen\");", "-      }catch(IOException e){", "-        System.out.println(\"DefaultGlobalModel: 1442: this should NEVER happen\");", "-      }catch(BadLocationException e){", "-        System.out.println(\"DefaultGlobalModel: 1442: this should NEVER happen\");", "+      }catch(Exception e){", "+        throw new UnexpectedException(e);", "-      return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e04301fcdcbd8032b064408c412b12aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "8cfaf2efb8ae59b79b9538e0bd5eaf251c6db08b", "commitAfterChange": "b732820bc2f8849bda78001b782e555a753cad1e", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 157, "signatureBeforeChange": "   public File[] getSourceRootSet()", "signatureAfterChange": "   public File[] getSourceRootSet()", "diff": ["-    LinkedList<File> roots = new LinkedList<File>();", "+    HashSet<File> roots = new HashSet<File>();", "-        if (!roots.contains(root)) { roots.add(root); } // Don't add duplicate Files, based on path", "+        roots.add(root); // Can't create duplicate entries in a HashSet"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0557c0b64e5db0d075cf69d6efb718c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 817, "methodNumberAfterChange": 712, "signatureBeforeChange": "    final private boolean jj_3R_230()", "signatureAfterChange": "    final private boolean jj_3R_233()", "diff": ["-", "-  final private boolean jj_3R_230() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_291()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_292()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_233() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_295()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_296()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e057734a1dce857babcbeff2e19a8440", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaTestCase.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void setUp() throws Exception", "signatureAfterChange": "   protected void setUp() throws Exception", "diff": ["-    Utilities.TextAreaMessageDialog.TEST_MODE = true;", "+    Utilities.TEST_MODE = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0619260b77e21d2124897bff0f437e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 610, "methodNumberAfterChange": 596, "signatureBeforeChange": "    final private boolean jj_3R_173()", "signatureAfterChange": "    final private boolean jj_3R_173()", "diff": ["-    if (jj_3R_562()) jj_scanpos = xsp;", "+    if (jj_3R_565()) jj_scanpos = xsp;", "-    if (jj_3R_563()) jj_scanpos = xsp;", "+    if (jj_3R_566()) jj_scanpos = xsp;", "-    if (jj_3R_564()) jj_scanpos = xsp;", "+    if (jj_3R_567()) jj_scanpos = xsp;", "-    if (jj_3R_211()) return true;", "+    if (jj_3R_212()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e07849ed5cf27bb3f5bd1e79d1627447", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorFileOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testApplyThenResetDefault()", "signatureAfterChange": "    public void testApplyThenResetDefault()", "diff": ["+    Utilities.clearEventQueue();", "+", "-    _option.resetToDefault(); // resets to default", "+    _option.resetToDefault();     // resets to default", "+    Utilities.clearEventQueue();  // preceding line generates event queue tasks"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e095051849339952e7a271c83087fa1d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "ce99ad77121aabff91f9c6fba762f853ca2a34f5", "commitAfterChange": "c7e182b04aa52ae1423064c733cc8609017cc26d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   protected File tempFile() throws IOException", "signatureAfterChange": "   protected File tempFile() throws IOException", "diff": ["-    return File.createTempFile(\"DrJava-test\", \".java\", _tempDir);", "+    return File.createTempFile(\"DrJava-test\", \".java\", _tempDir).getCanonicalFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e09f908ed4d8ac97154bffa55c40fc8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorKeyStrokeOptionComponent.java", "commitBeforeChange": "433b13a797196089fe338c13ae74a57a898d3d4c", "commitAfterChange": "dffb568c2302b16a97ba0780ebf9b8a7292012c9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "   protected void _removeIndex(int i)", "signatureAfterChange": "   protected void _removeIndex(int i)", "diff": ["-    _keyToKSOC.remove(_ksData.get(i)[0]);", "+    _keyToKSOC.remove(_data.get(i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0a5a5589a5e83d8dbf5e54fc88d7142", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 519, "methodNumberAfterChange": 531, "signatureBeforeChange": "    final private boolean jj_3R_443()", "signatureAfterChange": "    final private boolean jj_3R_444()", "diff": ["-  final private boolean jj_3R_443() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(32)) jj_scanpos = xsp;", "-    if (jj_3R_163()) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_456()) { jj_scanpos = xsp; break; }", "-    }", "+", "+  final private boolean jj_3R_444() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(32)) jj_scanpos = xsp;", "+    if (jj_3R_164()) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_457()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0ba99fb6f7f5d2d7c46e6e337fede41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "5b93e80cb10dee78dfbc4bb12adf88d5e7123ec9", "commitAfterChange": "4d0c10a9f2d7a750ce18de4fac7dbd578a167cc0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "diff": ["-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_COMPLETE_FILE_STORE_POSITION,", "-                                                  \"Save \\\"Auto-Complete File\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Auto-Complete File\\\" dialog.\"));", "+    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_COMPLETE_WORD_STORE_POSITION,", "+                                                  \"Save \\\"Auto-Complete Word\\\" Dialog Position\", this,", "+                                                  \"Whether to save and restore the size and position of the \\\"Auto-Complete Word\\\" dialog.\"));", "-      public void actionPerformed(ActionEvent e) { _mainFrame.resetCompleteFileDialogPosition(); }", "-    }, \"Reset \\\"Auto-Complete File\\\" Dialog Position and Size\", this, \"This resets the dialog position and size to its default values.\"));", "+      public void actionPerformed(ActionEvent e) { _mainFrame.resetCompleteWordDialogPosition(); }", "+    }, \"Reset \\\"Auto-Complete Word\\\" Dialog Position and Size\", this, \"This resets the dialog position and size to its default values.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0d3e6ee7169f78e45551b150d8a54a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "1f1e1c194ec79b5577db174af86a812206a9ebf6", "commitAfterChange": "8470bac42027a288eff50252d965c363d15d41dc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testInteractionsCanSeeCompile()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testInteractionsCanSeeCompile()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    throws BadLocationException, IOException", "+    throws BadLocationException, IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0d60ccfa96fd2fee3bb7dfe63231004", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 560, "methodNumberAfterChange": 555, "signatureBeforeChange": "    final private boolean jj_3R_277()", "signatureAfterChange": "    final private boolean jj_3R_290()", "diff": ["-", "-  final private boolean jj_3R_277() {", "-    if (jj_3R_84()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_538()) jj_scanpos = xsp;", "-    return false;", "-  }", "+  final private boolean jj_3R_290() {", "+    if (jj_3R_87()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_560()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0d6f3ac55cfaea9c24fbf12e072eb14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "28edcfb1557b7084eced62028c2fe7429bdf3ed1", "commitAfterChange": "b6f420e3de969a8f8dd7bc47b9ecaafbf647e921", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   public void commentLines(int selStart, int selEnd)", "signatureAfterChange": "   public void commentLines(int selStart, int selEnd)", "diff": ["+      _undoManager.startCompoundEdit();", "+      _undoManager.endCompoundEdit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0daf0c93bd1da4e403972f89b3fe1d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 327, "methodNumberAfterChange": 323, "signatureBeforeChange": "      private void _compile()", "signatureAfterChange": "      private void _compile()", "diff": ["-    simpleHourglassOn();", "+    hourglassOn();", "-    finally { simpleHourglassOff();}", "+    finally { hourglassOff();}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0e6626728f783afe99aab336c72579c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected void setUp()", "signatureAfterChange": " \t \tprotected void setUp()", "diff": ["-\t\t\tmodel0 = new ReducedModel();", "-\t\t\tmodel1 = new ReducedModel();", "-\t\t\tmodel2 = new ReducedModel();", "+\t\t\tmodel0 = new ReducedModelControl();", "+\t\t\tmodel1 = new ReducedModelControl();", "+\t\t\tmodel2 = new ReducedModelControl();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0f1216633e34cd66d6bd6d6af417ade", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerProxy.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public CompilerError[] compile(File sourceRoot, File[] files)", "signatureAfterChange": "   public CompilerError[] compile(File sourceRoot, File[] files)", "diff": ["-//    DrJava.consoleOut().println(\"realCompiler is \" + _realCompiler.getClass());", "+    _log.log(\"realCompiler is \" + _realCompiler.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e106346af09955131fa31d7fe8f1a95f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 414, "methodNumberAfterChange": 762, "signatureBeforeChange": "    final private boolean jj_3R_598()", "signatureAfterChange": "    final private boolean jj_3R_518()", "diff": ["-", "-  final private boolean jj_3R_598() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_602()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_603()) return true;", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_518() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_539()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_540()) return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e109e6d39a4a9b1439ab1079390d7506", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1c3947ce9682f305287b6afe6b5c5d87597bae6f", "commitAfterChange": "0acb22a1f5b2329a270795e5839a4690952252ed", "methodNumberBeforeChange": 668, "methodNumberAfterChange": 669, "signatureBeforeChange": "     public void compileBeforeJUnit(final CompilerListener testAfterCompile)", "signatureAfterChange": "     public void compileBeforeJUnit(final CompilerListener testAfterCompile)", "diff": ["-            _model.getJUnitModel().nonTestCase(true);  // cleans up", "+//            _model.getJUnitModel().nonTestCase(true);  // cleans up", "+            _junitInterrupted(new UnexpectedException(\"Unit testing cancelled by user\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e10e55c9197325e386ead3d97205a8c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "eba3fba4afbda1a0953798485a71c0bfbe1bb5cf", "commitAfterChange": "0010b17f7e497304215b54fd325dae9e3e72e53d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void setUp()", "signatureAfterChange": "   public void setUp()", "diff": ["+    DrJava.getConfig().resetToDefaults();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e11bace4f8093483806f07c74703e5ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9eeb88b1f508503e62560a83d5762a2b7670db6b", "commitAfterChange": "7e3ca17e4bff8d031b57422be3fd37f949cf4a13", "methodNumberBeforeChange": 400, "methodNumberAfterChange": 400, "signatureBeforeChange": "      boolean _closeProject()", "signatureAfterChange": "      boolean _closeProject()", "diff": ["-  boolean _closeProject() {", "-    _completeClassList = new ArrayList<GoToFileListEntry>(); // reset auto-completion list", "-    _autoImportClassList = new ArrayList<JavaAPIListEntry>(); // reset auto-import list", "-    return _closeProject(false);", "-  }", "+  boolean _closeProject() { return _closeProject(false); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e12195da8cbc5a05b61acc6184682db1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "51bfc4d668bc1673b008afd130ba536a07f9c69d", "commitAfterChange": "332b6e452982977da36f3fe748b79e9b0c3888de", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public synchronized void printBreakpoints()", "signatureAfterChange": "   public synchronized void printBreakpoints()", "diff": ["-    _model.printDebugMessage(\"Breakpoints: \" + getBreakpoints());", "+    Enumeration<Breakpoint> breakpoints = getBreakpoints().elements();", "+    if (breakpoints.hasMoreElements()) {", "+      _model.printDebugMessage(\"Breakpoints: \");", "+      while (breakpoints.hasMoreElements()) {", "+        Breakpoint breakpoint = breakpoints.nextElement();", "+        _model.printDebugMessage(\"  \" + breakpoint.getClassName() +", "+                                 \"  [line \" + breakpoint.getLineNumber() + \"]\");", "+      }", "+    }", "+    else {", "+      _model.printDebugMessage(\"No breakpoints set.\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e14484f3dd1bd528159fb324f8819b23", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 560, "methodNumberAfterChange": 560, "signatureBeforeChange": "    final private boolean jj_3R_272()", "signatureAfterChange": "    final private boolean jj_3R_273()", "diff": ["-  final private boolean jj_3R_272() {", "-    if (jj_3R_325()) return true;", "+  final private boolean jj_3R_273() {", "+    if (jj_3R_326()) return true;", "-      if (jj_3R_356()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_357()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e150247d3c0d87783ba920db5634509a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 737, "methodNumberAfterChange": 742, "signatureBeforeChange": "    final private boolean jj_3R_304()", "signatureAfterChange": "    final private boolean jj_3R_305()", "diff": ["+  final private boolean jj_3R_305() {", "-", "-  final private boolean jj_3R_304() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_74()) {", "+    if (jj_3_76()) {", "-    if (jj_3R_315()) return true;", "+    if (jj_3R_316()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e153606a5cef25ca80a162ca007350d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "b6c98c2729d523213cf8ee6bbc9636575f25da66", "commitAfterChange": "4bdaddc150401ace7c16f01fa5c54525f5642ceb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public InteractionsController(InteractionsModel model, InteractionsDJDocument adapter, InteractionsPane pane)", "signatureAfterChange": "   public InteractionsController(InteractionsModel model, InteractionsDJDocument adapter, InteractionsPane pane)", "diff": ["+    _model.setUpPane(pane);    // sets the interactions pane within the model and initializes the caret"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e19bc92964bab69a76a6a8a2bb4ec55d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5fc720735f9131675fc129089e1b035c0aa23528", "commitAfterChange": "3f4d69fa3bc8cf3992f7eea93fc2a3c7186d2140", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "   private JMenu _setUpToolsMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpToolsMenu(int mask)", "diff": ["-    tmpItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F5, mask));", "+    tmpItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1a8128964881b9d94c8345a412e7a51", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void addWatch(String field);", "signatureAfterChange": "   public void addWatch(String field) throws DebugException;", "diff": ["-  public void addWatch(String field);", "+  public void addWatch(String field) throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1abdf2cf60d5f4d4d5917d3c0b3bc43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 584, "methodNumberAfterChange": 492, "signatureBeforeChange": "    final private boolean jj_3R_261()", "signatureAfterChange": "    final private boolean jj_3R_264()", "diff": ["-  final private boolean jj_3R_261() {", "+  final private boolean jj_3R_264() {", "-      if (jj_3R_316()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_320()) { jj_scanpos = xsp; break; }", "-    if (jj_3R_317()) jj_scanpos = xsp;", "+    if (jj_3R_321()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1b2365de8d5d1b94790599275f3ee03", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   @Override public Type visit(SuperMethodCall node)", "signatureAfterChange": "   @Override public Type visit(SuperMethodCall node)", "diff": ["-    if (node.getArguments() != null) { args = node.getArguments(); }", "-    for (Expression e : args) { e.acceptVisitor(this); }", "+    if (node.getArguments() != null) { args = node.getArguments(); checkList(args); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1b24466bfee132c7af3f7c295b8b713", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 721, "methodNumberAfterChange": 611, "signatureBeforeChange": "    final private boolean jj_3R_596()", "signatureAfterChange": "    final private boolean jj_3R_557()", "diff": ["+", "+  final private boolean jj_3R_557() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_571()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_572()) return true;", "-  final private boolean jj_3R_596() {", "-    if (jj_3R_600()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_601()) return true;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1c5497eac502ee6c2f034b09305b183", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 707, "methodNumberAfterChange": 704, "signatureBeforeChange": "    final private boolean jj_3R_202()", "signatureAfterChange": "    final private boolean jj_3R_215()", "diff": ["-", "-  final private boolean jj_3R_202() {", "-    if (jj_3R_100()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_252()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_215() {", "+    if (jj_3R_102()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_286()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1e5fc33655f76bcedb96b5827a36f45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/BrowserHistoryManager.java", "commitBeforeChange": "7abad9d4d237e1759bd098868c3fc80eb6e4365f", "commitAfterChange": "dcd05db97717868f3a1bba07cb5b1b9106d93c65", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private void shrinkManager()", "signatureAfterChange": "   private void shrinkManager()", "diff": ["-      int size = _regions.size();", "+      int size = _pastRegions.size() + _futureRegions.size();", "-      for (int i = 0; i < diff; ++i) remove(_regions.first());", "+      for (int i = 0; i < diff; ++i) {", "+        // always remove the element farthest away from the larger stack", "+        remove(((_pastRegions.size()>_futureRegions.size())?_pastRegions:_futureRegions).get(0));", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1e6598758f7fe39aacdb0427778846e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 696, "methodNumberAfterChange": 280, "signatureBeforeChange": "    final private boolean jj_3R_372()", "signatureAfterChange": "    final private boolean jj_3R_78()", "diff": ["+", "+  final private boolean jj_3R_78() {", "+    if (jj_3R_117()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_118()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_372() {", "-    if (jj_3R_391()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_392()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1f1693d0c1de274ab743151b210169b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtilTest.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public boolean isFinished()", "signatureAfterChange": "          public boolean isResolved()", "diff": ["-    public void useMonitor() { _monitor.reset(); _useMonitor = true; }", "-    public boolean isFinished() { return !_intermediates.hasNext(); }", "+    ", "+    public boolean isResolved() { return !_intermediates.hasNext(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e20a5f1c3a63db766888cbb02174d67a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 372, "methodNumberAfterChange": 373, "signatureBeforeChange": "    final private boolean jj_3R_464()", "signatureAfterChange": "    final private boolean jj_3R_466()", "diff": ["-", "-  final private boolean jj_3R_464() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_470()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_471()) return true;", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_466() {", "+    if (jj_3R_472()) {", "+    if (jj_3R_473()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e21dd45040c40cf6da611f67cb0a8461", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public boolean isSelectedInGroup(ItemT i)", "signatureAfterChange": "   public boolean isSelectedInGroup(ItemT i)", "diff": ["-  /** @return true if the INavigatorItem is in the selected group. */", "+  /** @return true if the INavigatorItem is in the selected group.  Only runs in event thread. */", "-    synchronized (_model) {", "+//    synchronized (_model) {", "-    }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2337a8a214801a9f8a8373102161135", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": "     private File _getSourceRoot(String packageName)       throws InvalidPackageException", "signatureAfterChange": "     private File _getSourceRoot(String packageName)       throws InvalidPackageException", "diff": ["-      ", "+", "-          String part = (String) packageStack.pop();", "+          String part = packageStack.pop();", "-          ", "+", "-          ", "+", "-            ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e242e4ee42214d93d322ffb59f62a8a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "4e55340834f8e6032cf1387752575fd19cb935fe", "commitAfterChange": "de413eda4232899a577fad80816630301e25a4de", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "      public String toString()", "diff": ["-      sb.append(\"<html><pre><font face=\\\"sanserif\\\">\");", "+//      sb.append(\"<html><pre><font face=\\\"sanserif\\\">\");", "-      sb.append(AbstractDJDocument.getBlankString(120 - text.length()));", "-      sb.append(\"</pre></html>\");", "+//      sb.append(StringOps.getBlankString(120 - text.length()));", "+//      sb.append(\"</pre></html>\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e25a269896c534722e5e9828605bbcb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testCloseFileAllowAbandon() throws BadLocationException", "signatureAfterChange": "   public void testCloseFileAllowAbandon() throws BadLocationException", "diff": ["-   */", "+  /** Creates a new document, modifies it, then allows it to be closed, ignoring the changes made. */", "-      public boolean canAbandonFile(OpenDefinitionsDocument doc) {", "+      public synchronized boolean canAbandonFile(OpenDefinitionsDocument doc) {", "+    ", "+    _log.log(\"testCloseFileAllowAbandon completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e25afe832a3de2d075c0363931647c3b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 279, "methodNumberAfterChange": 279, "signatureBeforeChange": "   public ConstructorInvocation lookupConstructor(final Type t, final Iterable<? extends Type> typeArgs,                                                   final Iterable<? extends Expression> args,                                                  final Option<Type> expected)     throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException", "signatureAfterChange": "   public ConstructorInvocation lookupConstructor(final Type t, final Iterable<? extends Type> typeArgs,                                                   final Iterable<? extends Expression> args,                                                  final Option<Type> expected)     throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException", "diff": ["-    debug.logValues(\"Looking up constructor\",", "-                    new String[]{\"t\", \"typeArgs\", \"arg types\", \"expected\"},", "-                    wrap(t), wrap(typeArgs), wrap(IterUtil.map(args, NodeProperties.NODE_TYPE)),", "-                    expected);", "+    debug.logStart(new String[]{\"t\",\"typeArgs\",\"arg types\",\"expected\"},", "+                   wrap(t), wrap(typeArgs), wrap(IterUtil.map(args, NodeProperties.NODE_TYPE)), wrap(expected)); try {", "+                     ", "-            debug.logValues(new String[]{\"k\", \"declaredParameterTypes\"}, k, SymbolUtil.declaredParameterTypes(k));", "+            //debug.logValues(new String[]{\"k\", \"declaredParameterTypes\"}, k, SymbolUtil.declaredParameterTypes(k));", "+    ", "+    } finally { debug.logEnd(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e277c6748bf7418a8e4e235499e3b2e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocumentTest.java", "commitBeforeChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "commitAfterChange": "d07989306c43e4045df83ca1211956d5a85a21bd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testPackageNameEmpty() throws BadLocationException", "signatureAfterChange": "   public void testPackageNameEmpty()     throws BadLocationException, InvalidPackageException", "diff": ["-  public void testPackageNameEmpty() throws BadLocationException {", "+  public void testPackageNameEmpty()", "+    throws BadLocationException, InvalidPackageException", "+  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e28a214071190e3f3bf6a314f2e5dd11", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "28bca5adabaaf178bdf954808155389f93ed51fa", "commitAfterChange": "42ba31993563f21a54ea5d5971fd7d1c0955b49b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private void _remove()", "signatureAfterChange": "   private void _remove()", "diff": ["-    updateButtons();", "+    setChanging(true);", "+    setChanging(false);", "+    updateButtons();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e29aae91afd866b48745719f5a62e603", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "          public void testForDefaultCase()", "signatureAfterChange": "          public void testForDefaultCase()", "diff": ["-      UnbracedBody emptyBody = new UnbracedBody(SourceInfo.NO_INFO, new BodyItemI[0]);", "-      UnbracedBody returnBody = new UnbracedBody(SourceInfo.NO_INFO, new BodyItemI[] {new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 5))});", "-      UnbracedBody breakBody = new UnbracedBody(SourceInfo.NO_INFO, new BodyItemI[] {new UnlabeledBreakStatement(SourceInfo.NO_INFO)});", "+      UnbracedBody emptyBody = new UnbracedBody(SourceInfo.NONE, new BodyItemI[0]);", "+      UnbracedBody returnBody = new UnbracedBody(SourceInfo.NONE, new BodyItemI[] {new ValueReturnStatement(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 5))});", "+      UnbracedBody breakBody = new UnbracedBody(SourceInfo.NONE, new BodyItemI[] {new UnlabeledBreakStatement(SourceInfo.NONE)});", "-      DefaultCase dc = new DefaultCase(SourceInfo.NO_INFO, emptyBody);", "+      DefaultCase dc = new DefaultCase(SourceInfo.NONE, emptyBody);", "-      dc = new DefaultCase(SourceInfo.NO_INFO, returnBody);", "+      dc = new DefaultCase(SourceInfo.NONE, returnBody);", "-      dc = new DefaultCase(SourceInfo.NO_INFO, breakBody);", "+      dc = new DefaultCase(SourceInfo.NONE, breakBody);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2b9ca6281f4ced411518f68eefd4ae9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testLanguageLevelJUnitErrorLine() throws Exception", "signatureAfterChange": "   public void testLanguageLevelJUnitErrorLine() throws Exception", "diff": ["-    synchronized(listener) {", "-      doc.startJUnit();", "-      listener.assertJUnitStartCount(1);", "-      listener.wait();", "-    }", "+    ", "+    _runJUnit(doc);", "+    ", "+    listener.assertJUnitStartCount(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2c400bf9e988ac95f2036df16424504", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/TypeCheckerExtension.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Class visit(InstanceOfExpression node)", "signatureAfterChange": "   public Class visit(InstanceOfExpression node)", "diff": ["-    ", "+", "-    Class c = (Class) node.getExpression().acceptVisitor(this);", "+    Class c = node.getExpression().acceptVisitor(this);", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2e7fe0285549720a77fa2a63cec41ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentRuleWithTraceTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public void testTrace() throws BadLocationException", "signatureAfterChange": "    public void testTrace() throws BadLocationException", "diff": ["+    ", "-    rule1.indentLine(_doc, 23, Indenter.IndentReason.OTHER);", "-    rule1.indentLine(_doc, 75, Indenter.IndentReason.OTHER);", "+    _doc.acquireWriteLock();", "+    try {", "+      rule1.indentLine(_doc, 23, Indenter.IndentReason.OTHER);", "+      rule1.indentLine(_doc, 75, Indenter.IndentReason.OTHER);", "+    }", "+    finally {_doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2fc67442225e42c622767a0ddd632a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "4b6c56880670c4bb0f37de6a58c9d30d501c274a", "commitAfterChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public void addTestErrorHighlight(int from, int to)", "signatureAfterChange": "   public void addErrorHighlight(int from, int to)", "diff": ["+  public void addErrorHighlight(int from, int to)  {", "+    removeErrorHighlight();", "-   */", "-  public void addTestErrorHighlight(int from, int to)", "-  {", "-    removeTestErrorHighlight();", "-    _testErrorHighlightTag = _highlightManager.addHighlight(from, to, ERROR_PAINTER);", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e30267288015fec9ee014082da9d7588", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "a7a03ce246432b4e0ab5d61753312842c1cd49c1", "commitAfterChange": "3d97d4e9732e553ec694cfc208cfcad91b929426", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": "   private JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "signatureAfterChange": "   private JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "diff": ["-    scroll.setBorder(null); // removes all default borders (MacOS X installs default borders)", "+    //scroll.setBorder(null); // removes all default borders (MacOS X installs default borders)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e303f124b319b905265e95df47a4817d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void resetFlags()", "signatureAfterChange": "      public void resetFlags()", "diff": ["-      exceptionClassBuf = null;", "-      exceptionTraceBuf = null;", "-      syntaxErrorMsgBuf = null;", "-      syntaxErrorStartRow = 0;", "-      syntaxErrorStartCol = 0;", "-      syntaxErrorEndRow = 0;", "-      syntaxErrorEndCol = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e311a24490f23feb9ad99d9228f85701", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 656, "methodNumberAfterChange": 648, "signatureBeforeChange": "    final private boolean jj_3R_159()", "signatureAfterChange": "    final private boolean jj_3R_164()", "diff": ["-  final private boolean jj_3R_159() {", "-    if (jj_scan_token(DO)) return true;", "-    if (jj_3R_193()) return true;", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_94()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "+  final private boolean jj_3R_164() {", "+    if (jj_scan_token(DO)) return true;", "+    if (jj_3R_201()) return true;", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_3R_97()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3173953bc8d7fa9b5640a00ff9b2660", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/KeyStrokeOptionComponent.java", "commitBeforeChange": "364d0b19a9e3896eddcd174b6cb5aa4a53e74f1f", "commitAfterChange": "65d59a6eb5c83a25b9e6bfdf698fd61ca6d2f695", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public KeyStroke _getConfigKeyStroke()", "signatureAfterChange": "   public KeyStroke getConfigKeyStroke()", "diff": ["-  public KeyStroke _getConfigKeyStroke() {", "-    return _configKs;", "+   */", "+  public KeyStroke getConfigKeyStroke() {", "+    return _currentKey;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e329e97ed11806819da0ca231a670c39", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "5e007ed2a02c59f9c5f0ddad6c5fd3c21d5bb370", "commitAfterChange": "098248186c2cd94be6c7bc9bfe60fa3101b5a0ba", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public void gotoLine(int line)", "signatureAfterChange": "   public void gotoLine(int line)", "diff": ["-      _cachedLineNum = actualLine;", "-      _cachedLocation = _currentLocation;", "-      _cachedPrevLineLoc = _getLineStartPos(_currentLocation);", "-      _cachedNextLineLoc = _getLineEndPos(_currentLocation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e32a88733d92d63bdf9b32036f6aeedf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "28c4be6b04d5867405916840b451c47e4acad060", "commitAfterChange": "db16e322f21576ce25b97ab99611f7c7362cef3e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t\tprivate Iterator(Iterator iter)", "signatureAfterChange": " \t\tprivate Iterator(Iterator iter)", "diff": ["-\t\t\t\tModelList.this._listeners.add(this);", "+\t\t\t\tModelList.this.addListener(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e32e113f9d321fef343004adce641282", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "      private int _findPrevKeyword(String text, String kw, int pos) throws BadLocationException", "signatureAfterChange": "      private int _findPrevKeyword(String text, String kw, int pos) throws BadLocationException", "diff": ["-        if (!state.equals(ReducedModelState.FREE) || _isStartOfComment(text, i)", "+        if (!state.equals(FREE) || _isStartOfComment(text, i)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3305e0d8abbe9e9abe26ff7dbc30957", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "signatureAfterChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3320b74b12c7a39dbd1678169f9fb6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "520c98c03a1e651efb4dfbf7d7f2a55510c74658", "commitAfterChange": "3f953b8fb783fe3ca1b336468898f35cd9cde7db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private Class _checkBinaryExpression(String text, String leftExpected, String rightExpected)      throws ExceptionReturnedException", "signatureAfterChange": "   private Class _checkBinaryExpression(String text,                                         String leftExpected,                                         String rightExpected)      throws ExceptionReturnedException", "diff": ["-  private Class _checkBinaryExpression(String text, String leftExpected, String rightExpected) ", "+   */", "+  private Class _checkBinaryExpression(String text, ", "+                                       String leftExpected, ", "+                                       String rightExpected) ", "-    ", "-    _interpreter.interpret(\"int x; Integer X; Boolean B; boolean b; \"+ text);", "-    ", "+    _interpreter.interpret(text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3616f00a3c1ccc3c43245cf9620fb74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "fca5fcebd9a0a23f563d800e635b0c2ebad1969e", "commitAfterChange": "04d5f67f3ab0801dcf0753d1c84455182368f783", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "signatureAfterChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "diff": ["-          _documentNavigator.refreshDocument(getIDocGivenODD(this), file.getCanonicalFile().getParent());", "+          _documentNavigator.refreshDocument(getIDocGivenODD(this), fixPathForNavigator(file.getCanonicalPath()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e38dbe7679a1d2b60768e2a20d9abfbb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 566, "methodNumberAfterChange": 566, "signatureBeforeChange": "    final private boolean jj_3R_232()", "signatureAfterChange": "    final private boolean jj_3R_233()", "diff": ["-  final private boolean jj_3R_232() {", "-    if (jj_3R_272()) return true;", "+  final private boolean jj_3R_233() {", "+    if (jj_3R_273()) return true;", "-      if (jj_3R_324()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_325()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3cb898062f93bafed5e5c08513738ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6d9f2ce37ba22041a5b2840cffbd0f66339165b6", "commitAfterChange": "b153c43e59717c98f32c67f14d61a00a81016991", "methodNumberBeforeChange": 313, "methodNumberAfterChange": 313, "signatureBeforeChange": "    final private boolean jj_3R_490()", "signatureAfterChange": "    final private boolean jj_3R_493()", "diff": ["-", "-  final private boolean jj_3R_490() {", "-    if (jj_scan_token(CATCH)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(79)) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_499()) return true;", "-    }", "-    if (jj_3R_465()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "+  final private boolean jj_3R_493() {", "+    if (jj_scan_token(CATCH)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(79)) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_502()) return true;", "+    }", "+    if (jj_3R_468()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_127()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3e5cd50e3a434967cdecdbbbadeed32", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/HashRelation.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public int size()", "signatureAfterChange": "   @Override public int size()", "diff": ["-  public int size() { return _pairs.size(); }", "+  @Override public boolean isEmpty() { return _firstIndex.isEmpty(); }", "+  @Override public int size() { return _firstIndex.size(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3e9c3cd7381983022271db1811d807f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "14d9da817fd1dfb180c09b0881e9dfe4248e9250", "commitAfterChange": "a4c5974c7021519528f8f810c260f2782693140d", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   private void _setUpToolBar()", "signatureAfterChange": "   private void _setUpToolBar()", "diff": ["+    _toolBar.setFloatable(false);", "+    ", "+    _toolBar.addSeparator();", "+    // Undo, redo", "+    _toolBar.add(_undoAction);", "+    _toolBar.add(_redoAction);", "+    ", "+    _toolBar.addSeparator();", "+    ", "-    _toolBar.add(_undoAction);", "-    _toolBar.add(_redoAction);", "+    ", "+    _toolBar.addSeparator();", "+    ", "+    // Find", "+    _toolBar.add(_findReplaceAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e40b48bcc510423d9beca8f9ffe614fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "14370880ba431a91577f4a6da91962f3187c5d5d", "commitAfterChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testErrorInSuperClass() throws Exception", "signatureAfterChange": "   public void testErrorInSuperClass() throws Exception", "diff": ["-    listener.runJUnit(doc1);", "+    _log.log(\"Testing the first document\");", "+    listener.runJUnit(doc1); //  waits until JUnit is done", "-    listener.assertJUnitStartCount(1);", "+    _log.log(\"First document test should be complete\");", "+    listener.assertJUnitStartCount(1);  ", "+    _log.log(\"Testing the second document\");", "-    ", "+    _log.log(\"Second document testing should be complete\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e42a246f2ecc7e68e9dbf5c55198c66e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 617, "methodNumberAfterChange": 684, "signatureBeforeChange": "    final private boolean jj_3R_429()", "signatureAfterChange": "    final private boolean jj_3R_471()", "diff": ["-", "-  final private boolean jj_3R_429() {", "-    if (jj_scan_token(ASSIGN)) return true;", "-    if (jj_3R_90()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_471() {", "+    if (jj_scan_token(ASSIGN)) return true;", "+    if (jj_3R_91()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e42cd593234f03f782bd454d2b600c87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testIndentDoesNothing()       throws BadLocationException, OperationCanceledException", "signatureAfterChange": "   public void testIndentDoesNothing()       throws BadLocationException, OperationCanceledException", "diff": ["-    openDoc.syncCurrentLocationWithDefinitions(openDoc.getLength() - 1);", "-    int loc = openDoc.getCurrentDefinitionsLocation();", "+    openDoc.setCurrentLocation(openDoc.getLength() - 1);", "+    int loc = openDoc.getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e430e4113ae1eb044abf4b3b5473ab8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 176, "methodNumberAfterChange": 170, "signatureBeforeChange": "     public boolean isProjectFile()", "signatureAfterChange": "     public boolean isProjectFile()", "diff": ["-    public boolean isProjectFile(){", "-      if (!isUntitled()) return _state.isProjectFile(_file);", "-      else return false;", "-    }", "+    public boolean isProjectFile() { return (!isUntitled()) && _state.isProjectFile(_file); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4331462280dfc4392acf4c90c59d2c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "92062677ca813cb9ab44428a0d2d54f0c3309b04", "commitAfterChange": "274f7defc49003e66c942e814c9ce22958b3814c", "methodNumberBeforeChange": 309, "methodNumberAfterChange": 309, "signatureBeforeChange": "      private boolean _save()", "signatureAfterChange": "      private boolean _save()", "diff": ["-      _model.setActiveDocument(_model.getActiveDocument());", "+      _model.refreshActiveDocument();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e436e551b29f89dab7d510409efe923a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void addModifier(String modifier)", "signatureAfterChange": "   public void addModifier(String modifier)", "diff": ["-      if (_modifiersAndVisibility == null) { setMav(new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, new String[0])); }", "+      if (_modifiersAndVisibility == null) { setMav(new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[0])); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e43b267498d41aa746f3102b41cbdcb8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "07df9e8611c650306e145606873296ce77e32d2e", "commitAfterChange": "ffef92d973721c01556f7c658b9620d6a7c5fd34", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void testGetStateAtCurrent()", "signatureAfterChange": "  \tpublic void testGetStateAtCurrent()", "diff": ["-\t\t\tmodel1.insertLineComment();", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.insertLineComment();", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertSlash();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e446c8c8ddc30e36aa694ca0a2900616", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ddcbad2909e9c9411b7283368e21d7790422a21d", "commitAfterChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 148, "signatureBeforeChange": "          public void breakpointSet(final Breakpoint bp)", "signatureAfterChange": "          public void breakpointSet(final Breakpoint bp)", "diff": ["-          _currentDefPane.getHighlightManager().addHighlight(bp.getStartOffset(),", "-                                                             bp.getEndOffset(),", "-                                                             DefinitionsPane.BREAKPOINT_PAINTER);", "+          _breakpointHighlights.put(bp, ", "+                                    _currentDefPane.getHighlightManager().addHighlight(bp.getStartOffset(),", "+                                                                                       bp.getEndOffset(),", "+                                                                                       DefinitionsPane.BREAKPOINT_PAINTER));", "+      ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e451d46608bff805c73f9aa13001a219", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsParenOrBracket.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    System.err.println(\"QuestionBraceIsParenOrBracket\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e47061bd6c0ba455c228ebb04ea54ba0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testCompileAllDifferentSourceRoots()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllDifferentSourceRoots()     throws BadLocationException, IOException, InterruptedException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e47a2f1310165ec95ba50e9287c78ef0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "0f4d2da263ed93d9981fed5c0de39394b1b0893c", "commitAfterChange": "fc51b2245942e6d87f48245a9b8cdb4aedbcacc2", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public void testAnonymousInnerClass() throws BadLocationException", "signatureAfterChange": "   public void testAnonymousInnerClass() throws BadLocationException", "diff": ["-    System.err.println(\"Original text:\\n\" + text);", "+//    System.err.println(\"Original text:\\n\" + text);", "-    System.err.println(\"Indented text:\\n\" + doc.getText());", "-    System.err.println(\"Correct text:\\n\" + indented);", "+//    System.err.println(\"Indented text:\\n\" + doc.getText());", "+//    System.err.println(\"Correct text:\\n\" + indented);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e48f8074fe88ef9d3621c9c684d7b9c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "          public void testForFormalParameterDoFirst()", "signatureAfterChange": "          public void testForFormalParameterDoFirst()", "diff": ["-      PrimitiveType pt = new PrimitiveType(SourceInfo.NO_INFO, \"int\");", "-      Word w = new Word(SourceInfo.NO_INFO, \"param\");", "-      UninitializedVariableDeclarator uvd = new UninitializedVariableDeclarator(SourceInfo.NO_INFO, pt, w);", "+      PrimitiveType pt = new PrimitiveType(SourceInfo.NONE, \"int\");", "+      Word w = new Word(SourceInfo.NONE, \"param\");", "+      UninitializedVariableDeclarator uvd = new UninitializedVariableDeclarator(SourceInfo.NONE, pt, w);", "-      FormalParameter fp = new FormalParameter(SourceInfo.NO_INFO, uvd, false);", "+      FormalParameter fp = new FormalParameter(SourceInfo.NONE, uvd, false);", "-      FormalParameter fp2 = new FormalParameter(SourceInfo.NO_INFO, uvd, true);  ", "+      FormalParameter fp2 = new FormalParameter(SourceInfo.NONE, uvd, true);  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e49e6054483a64a9248e882619fcce0f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "7b3e2baaa631329b7e3233840fa805eba66e7b61", "commitAfterChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public Vector<StateBlock> insertQuote()", "signatureAfterChange": "   public Vector<StateBlock> insertQuote()", "diff": ["-\t\t\t\t\t_splitCurrentIfCommentBlock(true, _cursor);", "+\t\t\t\t\t_splitCurrentIfCommentBlock(true,true, _cursor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4a3417e93081dfa1fc1a61fcbd1cf62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ForEachTypingTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testMinimalForEach() throws ParseException", "signatureAfterChange": "   public void testMinimalForEach() throws ParseException", "diff": ["-    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: false (koala.dynamicjava.tree.ReferenceType: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.SimpleAssignExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 0 0 int)))]\", statements.toString());", "+    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: false (koala.dynamicjava.tree.ReferenceTypeName: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.SimpleAssignExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 0 0 int)))]\", statements.toString());", "-    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: false (koala.dynamicjava.tree.ReferenceType: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.SimpleAssignExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 0 0 int)))]\", statements.toString());", "+    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: false (koala.dynamicjava.tree.ReferenceTypeName: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.SimpleAssignExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 0 0 int)))]\", statements.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4ab13dbac401d3445fc3ae9568be472", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugWatchData.java", "commitBeforeChange": "5c952c5847e3008cec3ed5ff89d03d335c050f54", "commitAfterChange": "e3e56a8c058b51612dfa6f1f21259a37eadcdcbb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DebugWatchData(String name)", "signatureAfterChange": "   public DebugWatchData(String name)", "diff": ["-    _value = DebugWatchUndefinedValue.ONLY.toString();", "-    _type = null;", "+    _value = \"\";", "+    _type = \"\";", "+    _showValue = false;", "+    _showType = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4bd66527461ca826926842ff8784a92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 171, "signatureBeforeChange": "     public boolean isAuxiliaryFile()", "signatureAfterChange": "     public boolean isAuxiliaryFile()", "diff": ["-     */", "-    public boolean isAuxiliaryFile(){", "-      if (!isUntitled()) return _state.isAuxiliaryFile(_file);", "-      else return false;", "-    }", "+    /** @return true if the file is an auxiliary file. */", "+    public boolean isAuxiliaryFile(){ return (!isUntitled()) && _state.isAuxiliaryFile(_file); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4d5054f75d92807725c66caa11235e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "     public Object visit(CastExpression node)", "signatureAfterChange": "   public Class visit(CastExpression node)", "diff": ["+   */", "+  public Class visit(CastExpression node) {", "+    Class c = (Class)node.getTargetType().acceptVisitor(this);", "+    checkCastStaticRules(c, (Class)node.getExpression().acceptVisitor(this), node);", "+    ", "+    node.setProperty(NodeProperties.TYPE, c);", "+    return c;", "+  }", "-     */", "-    public Object visit(CastExpression node) {", "-        Class c = (Class)node.getTargetType().acceptVisitor(this);", "-        checkCastStaticRules(c, (Class)node.getExpression().acceptVisitor(this), node);", "-", "-        node.setProperty(NodeProperties.TYPE, c);", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4ddd6888481a089341287ba6ebff5db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 787, "methodNumberAfterChange": 267, "signatureBeforeChange": "    final private boolean jj_3R_449()", "signatureAfterChange": "    final private boolean jj_3R_449()", "diff": ["+", "+  final private boolean jj_3R_449() {", "+    if (jj_3R_89()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_29()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_449() {", "-    if (jj_3R_460()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_468()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4f93917c55d5cbc4b6067537ef4bcbd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 430, "methodNumberAfterChange": 600, "signatureBeforeChange": "    final private boolean jj_3R_279()", "signatureAfterChange": "    final private boolean jj_3R_283()", "diff": ["-", "-  final private boolean jj_3R_279() {", "-    if (jj_3R_301()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_326()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_283() {", "+    if (jj_3R_306()) return true;", "+      if (jj_3R_332()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4fed4e049fffb5a255b52d9ee953aa8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "69b7f744a06a218546e1e05a5acb1e8cacf5750d", "commitAfterChange": "e10e7bd83f125e1856c739971a7fde05620d52b1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public synchronized void shutdown()", "signatureAfterChange": "   public synchronized void shutdown()", "diff": ["+        _suspendedThreads = new RandomAccessStack();", "+        _deadThreads = new DeadThreadFilter();", "+        _runningThread = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5012b0211a9e4d05258d771b3657e66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testCompileAllDifferentSourceRoots()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllDifferentSourceRoots()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-    //synchronized(listener) {", "-      int numErrors = _model.getNumErrors();", "-      _model.compileAll();", "-      numErrors = _model.getNumErrors();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener.wait();", "-    //}", "+    int numErrors = _model.getNumErrors();", "+    _model.compileAll();", "+    numErrors = _model.getNumErrors();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    assertTrue(_name() + \"Foo Class file doesn't exist after compile\", compiled.exists());", "+    assertTrue(_name() + \"Foo Class file doesn't exist after compile\", ", "+               compiled.exists());", "-    assertTrue(_name() + \"Bar Class file doesn't exist after compile\", compiled2.exists());", "-    ", "-    _model.setResetAfterCompile(true);", "+    assertTrue(_name() + \"Bar Class file doesn't exist after compile\", ", "+               compiled2.exists());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e504241f0ee622b1412c3e0703a8e94d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "   public Class visit(PostDecrement node)", "signatureAfterChange": "   public Class visit(PostDecrement node)", "diff": ["-    Class c  = (Class)exp.acceptVisitor(this);", "-    ", "+    Class c  = exp.acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50dba49e42dd4e77aebe10a658cd3d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ArrayAllocation.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "     void initialize(TypeName t)", "signatureAfterChange": "     void initialize(TypeName t)", "diff": ["-          et = new ArrayTypeName(t, dimension-1, false, t.getFilename(), t.getBeginLine(), t.getBeginColumn(), endLine, endColumn);", "+          et = new ArrayTypeName(t, dimension-1, false, SourceInfo.span(t, this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e518174a63ef3d2eb974c06131254bab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "32ba174b30cfff4f2c73188ded7fd810622e7e12", "commitAfterChange": "273b9e6fd6b611d74f03283118f3b2c112f6192d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void interpretCurrentInteraction()", "signatureAfterChange": "   public void interpretCurrentInteraction()", "diff": ["-          _notifier.interactionIncomplete();", "+          _notifyInteractionIncomplete();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e51cb347c9e29eb2d4b1a8c56d1365b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "cfd8bfb1865d4fad4b92a33a577ef90b6209a355", "commitAfterChange": "fe0a017225a8b8d3dbd51265c876a1db2da058a1", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 157, "signatureBeforeChange": "   private JMenu _setUpToolsMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpToolsMenu(int mask)", "diff": ["-    // Compile, Compile all, Run Main Method", "+    // Compile, Test, Javadoc", "+    toolsMenu.addSeparator();", "+    ", "+    // Run"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e530bdb27d63b0e8cdfb7dc023d16f14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2707043a47325658db92e0290e695128c6817bba", "commitAfterChange": "0c506ac270d6b542eb2c43fb49629be8c2634151", "methodNumberBeforeChange": 282, "methodNumberAfterChange": 282, "signatureBeforeChange": "     public void fileOpened(final OpenDefinitionsDocument doc)", "signatureAfterChange": "     public void fileOpened(final OpenDefinitionsDocument doc)", "diff": ["-          _saveProjectAction.setEnabled(true);", "+//          _saveProjectAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e534df0b44effbc2982e82878dfdb768", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public Object visit(SuperMethodCall node)", "signatureAfterChange": "   public Class visit(SuperMethodCall node)", "diff": ["-     */", "-    public Object visit(SuperMethodCall node) {", "-\t// Do the type checking of the arguments", "-        List args = node.getArguments();", "-        Class[] pt = Constants.EMPTY_CLASS_ARRAY;", "-        if (args != null) {", "-            pt = new Class[args.size()];", "-            Iterator it = args.iterator();", "-\t    int i = 0;", "-            while (it.hasNext()) {", "-                pt[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "-            }", "-        }", "-        Method m = null;", "-        try {", "-            m = context.lookupSuperMethod(node, node.getMethodName(), pt);", "-        } catch (Exception e) {", "-            throw new CatchedExceptionError(e, node);", "-        }", "-        ", "-        // Set the node properties", "-\tClass c;", "-        node.setProperty(NodeProperties.METHOD, m);", "-        node.setProperty(NodeProperties.TYPE,   c = m.getReturnType());", "-        return c;", "-    }", "+   */", "+  public Class visit(SuperMethodCall node) {", "+    // Do the type checking of the arguments", "+    List args = node.getArguments();", "+    Class[] pt = Constants.EMPTY_CLASS_ARRAY;", "+    if (args != null) {", "+      pt = new Class[args.size()];", "+      Iterator it = args.iterator();", "+      int i = 0;", "+      while (it.hasNext()) {", "+        pt[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "+      }", "+    }", "+    Method m = null;", "+    try {", "+      m = context.lookupSuperMethod(node, node.getMethodName(), pt);", "+    } catch (Exception e) {", "+      throw new CatchedExceptionError(e, node);", "+    }", "+    ", "+    // Set the node properties", "+    Class c;", "+    node.setProperty(NodeProperties.METHOD, m);", "+    node.setProperty(NodeProperties.TYPE,   c = m.getReturnType());", "+    return c;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e53abd913ed5086b1c95fe019f427ef2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/MethodContext.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Class setProperties(ClassAllocation node, Class c, Class[] args, List<Node> memb)", "signatureAfterChange": "   public Class setProperties(ClassAllocation node, Class c, Class[] args, List<Node> memb)", "diff": ["-                                     stmts, false);", "+                                     stmts);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e53e534f9927fa9d52c285d3e58402cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 94, "signatureBeforeChange": "          public void testClassFile2SymbolData()", "signatureAfterChange": "          public void testClassFile2SymbolData()", "diff": ["-      SymbolData objectSD = _llv._classFile2SymbolData(\"java.lang.Object\", \"\");", "-      SymbolData stringSD = _llv._classFile2SymbolData(\"java.lang.String\", \"\");", "+      SymbolData objectSD = testLLVisitor._classFile2SymbolData(\"java.lang.Object\", \"\");", "+      SymbolData stringSD = testLLVisitor._classFile2SymbolData(\"java.lang.String\", \"\");", "-                   _llv.getSymbolData(\"java.lang.String\", SourceInfo.NO_INFO).getPackage());", "+                   testLLVisitor.getSymbolData(\"java.lang.String\", SourceInfo.NO_INFO).getPackage());", "-      SymbolData newStringSD = _llv._classFile2SymbolData(\"java.lang.String\", \"\");", "+      SymbolData newStringSD = testLLVisitor._classFile2SymbolData(\"java.lang.String\", \"\");", "-                 stringSD == _llv.symbolTable.get(\"java.lang.String\"));", "+                 stringSD == testLLVisitor.symbolTable.get(\"java.lang.String\"));", "-                 newStringSD == _llv.symbolTable.get(\"java.lang.String\"));      ", "+                 newStringSD == testLLVisitor.symbolTable.get(\"java.lang.String\"));      ", "-      SymbolData bartSD = _llv._classFile2SymbolData(\"Bart\", \"testFiles\");", "+      SymbolData bartSD = testLLVisitor._classFile2SymbolData(\"Bart\", \"testFiles\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e543c0353fe3e47259b9871cf08e4aba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListSortNavigator.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "       public String toString()", "signatureAfterChange": "      public String toString()", "diff": ["-   public String toString() { return \"JListSortNavigator\" + _model.toString(); }", "+  public String toString() { return _model.toString(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e55c48da9848342f6a6621d2f509c432", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "7c4507413beb0e75cdce1379ffec8d0279bed992", "commitAfterChange": "d1bf0f940bc3d914d8d8293a0e85760984d7b371", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 29, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["+      _model.addToBrowserHistory();", "+", "-        if (! matchDoc.equals(openDoc)) _model.setActiveDocument(matchDoc);  // set active doc if matchDoc != openDoc", "+        if (! matchDoc.equals(openDoc)) {", "+          _model.setActiveDocument(matchDoc);  // set active doc if matchDoc != openDoc", "+        }", "+            _model.addToBrowserHistory();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e56110e28e2c4bb321bc62c6abd007af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testStartupAndShutdown() throws DebugException, InterruptedException", "signatureAfterChange": "   public void testStartupAndShutdown() throws DebugException, InterruptedException", "diff": ["-      _debugger.startup();", "-      _setPendingNotifies(1);  // startup", "+      _debugger.startUp();", "+      _setPendingNotifies(1);  // startUp", "-    assertNotNull(\"EventRequestManager should not be null after startup\", _debugger.getEventRequestManager());", "-    assertNotNull(\"PendingRequestManager should not be null after startup\", _debugger.getPendingRequestManager());", "+    assertNotNull(\"EventRequestManager should not be null after startUp\", _debugger.getEventRequestManager());", "+    assertNotNull(\"PendingRequestManager should not be null after startUp\", _debugger.getPendingRequestManager());", "-      _debugger.startup();", "-      _setPendingNotifies(1);  // startup", "+      _debugger.startUp();", "+      _setPendingNotifies(1);  // startUp", "-      _debugger.startup();", "-      _setPendingNotifies(1);  // startup", "+      _debugger.startUp();", "+      _setPendingNotifies(1);  // startUp"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e565dfd85180ad9dfb7f0da3c04b6015", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/OptionConstants.java", "commitBeforeChange": "4009de7b28d2df87c05fce5746e7b354468d763f", "commitAfterChange": "ef6fbf4282520a8a1b7a89050b6be023e72a81a6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static Font getDefaultDocListFont()", "signatureAfterChange": "     public static Font getDefaultDocListFont()", "diff": ["-        return Font.decode(\"Monaco-PLAIN-10\");", "+        return Font.decode(\"Monaco 10\");", "-        return Font.decode(\"Monospaced-PLAIN-10\");", "+        return Font.decode(\"Monospaced 10\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5744a72b5c2647ecd78334c9cec3dc6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 534, "methodNumberAfterChange": 448, "signatureBeforeChange": "    final private boolean jj_3R_504()", "signatureAfterChange": "    final private boolean jj_3R_505()", "diff": ["+", "+  final private boolean jj_3R_505() {", "+    if (jj_3R_527()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_543()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_504() {", "-    if (jj_3R_526()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_542()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e581c948a752e9cfec3320e25bdd2fd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void tearDown() throws Exception", "signatureAfterChange": "    public void tearDown() throws Exception", "diff": ["-    _controller = null;", "-    _doc = null;", "-    _model = null;", "-    _pane = null;", "-    _adapter = null;", "+//    _controller = null;", "+//    _doc = null;", "+//    _model = null;", "+//    _pane = null;", "+//    _adapter = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e596a91096ff0ae6410b358c0c368b59", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 533, "methodNumberAfterChange": 420, "signatureBeforeChange": "    final private boolean jj_3R_338()", "signatureAfterChange": "    final private boolean jj_3R_343()", "diff": ["-  final private boolean jj_3R_338() {", "-    if (jj_scan_token(CASE)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_343() {", "+    if (jj_scan_token(CASE)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5a48237bab7d471b4da5ec75f817987", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testSearchesDoNotRepeatWhenChangingDirection() throws BadLocationException", "signatureAfterChange": "   public void testSearchesDoNotRepeatWhenChangingDirection() throws BadLocationException", "diff": ["-    _testFindNextSucceeds(_frm, CONTINUE, 0, 3);", "-    _testFindNextSucceeds(_frm, CONTINUE, 0, 7);", "+    _testFindNextSucceeds(_frm, 0, 3);", "+    _testFindNextSucceeds(_frm, 0, 7);", "-    _testFindNextSucceeds(_frm, CONTINUE, 0, 0);", "+    _testFindNextSucceeds(_frm, 0, 0);", "-    _testFindNextSucceeds(_frm, CONTINUE, 0, 7);", "+    _testFindNextSucceeds(_frm, 0, 7);", "-    _testFindNextSucceeds(_frm, CONTINUE, 0, 4);", "+    _testFindNextSucceeds(_frm, 0, 4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5b4878a1b89d68f3980178150d6fd8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/PackageData.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PackageData(PackageData pd, String s)", "signatureAfterChange": "   public PackageData(PackageData pd, String s)", "diff": ["-    _name = pd.getName() + \".\" + s;", "+    _name = pd.getName() + '.' + s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5bb8136f07d332c418e8deedc567f56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void defineConstant(String name, char value)", "signatureAfterChange": "   public void defineConstant(String name, char value)", "diff": ["-    ((InterpreterExtension)_djInterpreter).defineConstant(name, value);", "+    _djInterpreter.defineConstant(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5c7086e0eaa32490aa1c45d130d6db1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 800, "methodNumberAfterChange": 792, "signatureBeforeChange": "    final private boolean jj_3R_130()", "signatureAfterChange": "    final private boolean jj_3R_133()", "diff": ["-  final private boolean jj_3R_130() {", "+  final private boolean jj_3R_133() {", "-    if (jj_3R_182()) {", "+    if (jj_3R_190()) {", "-    if (jj_3R_183()) return true;", "+    if (jj_3R_191()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5d58f2a70975e2001d1f0e495cfb758", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 316, "methodNumberAfterChange": 314, "signatureBeforeChange": "    final private boolean jj_3R_377()", "signatureAfterChange": "    final private boolean jj_3R_378()", "diff": ["-  final private boolean jj_3R_377() {", "-    if (jj_3R_390()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_408()) jj_scanpos = xsp;", "+  final private boolean jj_3R_378() {", "+    if (jj_3R_391()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_409()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5d592a01459b3b4cf7b7ecb35f5cc40", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   @Override public Type visit(AnonymousAllocation node)", "signatureAfterChange": "   @Override public Type visit(AnonymousAllocation node)", "diff": ["-    if (node.getArguments() != null) { args = node.getArguments(); }", "-    for (Expression e : args) { e.acceptVisitor(this); }", "+    if (node.getArguments() != null) { args = node.getArguments(); checkList(args); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5dbb43cf43b98dea53a234dcb376fa0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyFullJavaVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public Void forCatchBlock(CatchBlock that)", "signatureAfterChange": "   public Void forCatchBlock(CatchBlock that)", "diff": ["-      formalParameters2VariableData(new FormalParameter[]{ that.getException() }, enclosing)[0];", "-    if (prune(that.getException())) return null;", "+      formalParameters2VariableData(new FormalParameter[]{ that.getException() }, enclosing)[0];  // !!!!! Why not bd?", "-                                  new HashSet<String>());", "+                                  new HashSet<String>(), _genericTypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5ecac998b3acda7d62c3f08c6e57ae8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "ba6275930e25f1b0898c45319a21c16860b3e177", "commitAfterChange": "1bd0fb2319802a0180bca30c066879626028c532", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void testForceFileOpen()     throws BadLocationException, IOException, OperationCanceledException,     AlreadyOpenException", "signatureAfterChange": "   public void testForceFileOpen()     throws BadLocationException, IOException, OperationCanceledException,     AlreadyOpenException", "diff": ["-        File file = null;", "+        //File file = null;", "-          file = doc.getFile();", "+          //file = ", "+          doc.getFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5f4dc39cca389af666c890eee52119f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/PathClassLoaderTest.java", "commitBeforeChange": "c600519b6859da4af01c52410f91013b1bbd745a", "commitAfterChange": "7f9f9a0527fe13a3dbec8283aa5b08139cfc594b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testLoadsPath() throws Exception", "signatureAfterChange": "      public void testLoadsPath() throws Exception", "diff": ["-    assertLoadsClassAsLoader(l, \"IntBox\");", "-    assertLoadsClassAsLoader(l, \"A\");", "-    assertLoadsClassAsLoader(l, \"B\");", "-    assertLoadsClassAsLoader(l, \"C\");", "+    assertLoadsClassAsLoader(l, \"pkg.IntBox\");", "+    assertLoadsClassAsLoader(l, \"pkg.A\");", "+    assertLoadsClassAsLoader(l, \"bpkg.B\");", "+    assertLoadsClassAsLoader(l, \"pkg.C\");", "-    assertCanGet(l, \"A\", 1);", "+    assertCanGet(l, \"pkg.A\", 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5fd0c6093a91a5fe186e30e88e0ad5c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "e28d42989a089b15d3a01e7dd19b426bc7021c04", "commitAfterChange": "261ca8732921a2a5c58b2777d5419ddfe2c261df", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testNonTestCaseError() throws Exception", "signatureAfterChange": "   public void testNonTestCaseError() throws Exception", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5fe5aeedade2d2c19ed58a725e2ce06", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 246, "methodNumberAfterChange": 390, "signatureBeforeChange": "    final private boolean jj_3_24()", "signatureAfterChange": "    final private boolean jj_3_24()", "diff": ["-", "-  final private boolean jj_3_24() {", "-    if (jj_scan_token(LBRACE)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3_24() {", "+    if (jj_3R_38()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e607f25e9681c1856a61951f33c72132", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testCompileFailsCorrectLineNumbers() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileFailsCorrectLineNumbers() throws BadLocationException, IOException, InterruptedException", "diff": ["-    doc.saveFile(new FileSelector(file));", "+    saveFile(doc, new FileSelector(file));", "-    doc2.saveFile(new FileSelector(file2));", "-    ", "+    saveFile(doc2, new FileSelector(file2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e60818da6639e41f731a4cf9d6132d55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "58507a81b298eda1c95791a37194e9f75288a8af", "commitAfterChange": "d752877ce93bbc024f3929677c06eafffafcc3e8", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 62, "signatureBeforeChange": "   public static String replaceVariables(String str, Hashtable<Object, Object> table)", "signatureAfterChange": "   public static String replaceVariables(String str, Hashtable<Object, Object> table)", "diff": ["+    // LOG.log(\"========================\");", "-      // if this is str single %, not an escaped %%...", "-      if((pos==str.length()-1) || (str.charAt(pos+1)!='%')) {", "+      // see if this is an escaped % (\"%%\")", "+      // LOG.log(\"str = '\"+str+\"'\");", "+      // LOG.log(\"pos = \"+pos);", "+      if((pos<str.length()-1) && (str.charAt(pos+1)=='%')) {", "+        // skip the second % as well", "+        // LOG.log(\"\\t%%\");", "+        str = str.substring(0, pos+1) + str.substring(pos+2);", "+      }", "+      else {", "+        // LOG.log(\"\\t%\");", "-      else {", "-        if (pos<str.length()-1) {", "-          // skip the second % as well", "-          ++pos;", "-        }", "-      }", "+    // LOG.log(\"end str = '\"+str+\"'\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e60843c77efbb01c2c0366c5e1e7c39c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "    public void testReplaceAllBackwards() throws BadLocationException", "signatureAfterChange": "    public void testReplaceAllBackwards() throws BadLocationException", "diff": ["-    _frm.replaceAll();", "+    replaceAll();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e63825b89d6ccb0724af5698c4847211", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "73d8f0963e3941f0992013e94dd38c610fad8320", "commitAfterChange": "79f5d66e5d12491f568b49d5064798e6d989d102", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         private void compileClass(Node ast)", "signatureAfterChange": "         private void compileClass(Node ast)", "diff": ["+    final boolean isInterface;", "+      isInterface = false;", "-      accessFlags = id.getAccessFlags();", "+      accessFlags = id.getAccessFlags() | Modifier.INTERFACE;", "+      isInterface = true;", "+      isInterface = false;", "+      isInterface = false;", "+    else { throw new RuntimeException(\"Unexpected class AST node type: \" + ast); }", "-    _classWriter.visitField(ACC_PRIVATE | ACC_STATIC | ACC_FINAL | ACC_SYNTHETIC, ADAPTER_FIELD,", "-                            EVALUATION_ADAPTER_DESCRIPTOR, null, null).visitEnd();", "-    if (!(ast instanceof InterfaceDeclaration)) {", "+    if (isInterface) {", "+      // interface fields must be public (adapter is necessary to interpret declared field initializers)", "+      _classWriter.visitField(ACC_PUBLIC | ACC_STATIC | ACC_FINAL | ACC_SYNTHETIC, ADAPTER_FIELD,", "+                              EVALUATION_ADAPTER_DESCRIPTOR, null, null).visitEnd();", "+    }", "+    else {", "+      _classWriter.visitField(ACC_PRIVATE | ACC_STATIC | ACC_FINAL | ACC_SYNTHETIC, ADAPTER_FIELD,", "+                              EVALUATION_ADAPTER_DESCRIPTOR, null, null).visitEnd();", "-          compileMethod(member); return null;", "+          compileMethod(member, isInterface); return null;", "-          compileField(member); return null;", "+          compileField(member, isInterface); return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e64336dc670ce711b796da78e43b6d8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "commitAfterChange": "d07989306c43e4045df83ca1211956d5a85a21bd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testPackageNameSimple() throws BadLocationException", "signatureAfterChange": "   public void testPackageNameSimple()     throws BadLocationException, InvalidPackageException", "diff": ["-  public void testPackageNameSimple() throws BadLocationException {", "+  public void testPackageNameSimple()", "+    throws BadLocationException, InvalidPackageException", "+  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e675429496c0631e4ccf58aebb015f25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b1ab5639c12e11d9d4773b42d5fad59d564680b4", "commitAfterChange": "c11d4ce83dfacd1ad010305b8bbd51b80abac1bf", "methodNumberBeforeChange": 242, "methodNumberAfterChange": 241, "signatureBeforeChange": "     void _showFileMovedError(FileMovedException fme)", "signatureAfterChange": "    void _showFileMovedError(FileMovedException fme)", "diff": ["-      if (doc != null) {", "-        if (_saveSelector.shouldSaveAfterFileMoved(doc, f)) {", "-          _saveAs();", "-        }", "-      }", "+      if (doc != null && _saveSelector.shouldSaveAfterFileMoved(doc, f)) _saveAs();", "-    catch (IOException ioe) {", "-      // Couldn't find the document, so ignore the FME", "-    }", "+    catch (IOException ioe) { /* Couldn't find the document, so ignore the FME */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e67a6bad3268ac2d55749f855dceec83", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "94495305a8fb1d1ea8c2b8ae2ef82ea7d92dd639", "commitAfterChange": "ae025ece2387b12ae04306fdd94dd1060cdc00c5", "methodNumberBeforeChange": 267, "methodNumberAfterChange": 268, "signatureBeforeChange": "     public void fileOpened(final OpenDefinitionsDocument doc)", "signatureAfterChange": "     public void fileOpened(final OpenDefinitionsDocument doc)", "diff": ["-        if(! _model.isProjectFile(f) && _model.isInProjectPath(doc))", "+        if(! _model.isProjectFile(f) && _model.isInProjectPath(doc)) {", "+          _model.setProjectChanged();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e68c8ec1a50ef8966a04ae19f824d2c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractSlaveJVM.java", "commitBeforeChange": "545558ad10034df1c23d84066b19e4c96d5c4d21", "commitAfterChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public final void quit()", "signatureAfterChange": "   public final void quit()", "diff": ["-    Thread t = new Thread() {", "+    Thread t = new Thread(_quitSlaveThreadName) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e69c046b3e6d4010063a35e9d9ea77df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testInteractionsCanSeeChangedClass() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsCanSeeChangedClass() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "diff": ["+    debug.logStart();", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6a6e4dd8400921594de9a609afa4654", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "d63224548fc8865b0ab459659b530c0d39d21fc7", "commitAfterChange": "d8eee91536a378507eadfac2f106d06ff2703bff", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   private void _badModifiers(String first, String second, ModifiersAndVisibility that)", "signatureAfterChange": "   public void _badModifiers(String first, String second, JExpressionIF that)", "diff": ["-  private void _badModifiers(String first, String second, ModifiersAndVisibility that) {", "+  public void _badModifiers(String first, String second, JExpressionIF that) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6b13960f03cf10b516556493f60558a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public int findNextEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "signatureAfterChange": "   public int findNextEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6b437f9ab64af14019764317c516b4c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "d5075fa67b6b594107dff56779d9c2d12a9b1794", "commitAfterChange": "cabefbe10a0006c896a724ca9825aff82516c66f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void findAll(String searchStr, final boolean searchAll, final boolean matchCase,                       final boolean wholeWord, final boolean noComments, final boolean noTestCases,                       final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm,                       final FindResultsPanel panel)", "signatureAfterChange": "   public void findAll(String searchStr, final boolean searchAll, final boolean matchCase,                       final boolean wholeWord, final boolean noComments, final boolean noTestCases,                       final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm,                       final FindResultsPanel panel)", "diff": ["+    ", "+    _machine.setSearchBackwards(false);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6c46bb1a361fe1b89865111c94a4574", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 463, "methodNumberAfterChange": 589, "signatureBeforeChange": "    final private boolean jj_3R_582()", "signatureAfterChange": "    final private boolean jj_3R_412()", "diff": ["-", "-  final private boolean jj_3R_582() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_585()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_586()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_412() {", "+    if (jj_scan_token(COMMA)) return true;", "+      if (jj_3R_427()) { jj_scanpos = xsp; break; }", "+    xsp = jj_scanpos;", "+    if (jj_3R_428()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6d9bfc789ac49e5432f0b04d4a9813e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 616, "methodNumberAfterChange": 619, "signatureBeforeChange": "    final private boolean jj_3R_172()", "signatureAfterChange": "    final private boolean jj_3R_180()", "diff": ["-  final private boolean jj_3R_172() {", "-    if (jj_scan_token(SWITCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_99()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(LBRACE)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_564()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(RBRACE)) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_180() {", "+    if (jj_scan_token(SWITCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_100()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(LBRACE)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_568()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(RBRACE)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6e5a34cfdefbf44706bce8516de90c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b6bfdc97713285768c8b922127b436d974f9f1e4", "commitAfterChange": "25355ecd0bc01ef2920944ee4f7366c5c45c1e55", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testInterpretJavaArguments()", "signatureAfterChange": "   public void testInterpretJavaArguments()", "diff": ["+    _log.log(\"testInterpretJavaArguments started\");", "+    _log.log(\"testInterpretJavaArguments ended\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6eaf8778ba8079b5cb95572838a0bbd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void testWholeWordSearchOnTestString1() throws BadLocationException", "signatureAfterChange": "    public void testWholeWordSearchOnTestString1() throws BadLocationException", "diff": ["-    _testFindNextSucceeds(_frm, CONTINUE, 0, 91);", "-    _testFindNextSucceeds(_frm, CONTINUE, 0, 128);", "-    _testFindNextSucceeds(_frm, CONTINUE, 0, 166);", "+    _testFindNextSucceeds(_frm, 0, 91);", "+    _testFindNextSucceeds(_frm, 0, 128);", "+    _testFindNextSucceeds(_frm, 0, 166);", "-    _testFindNextSucceeds(_frm, CONTINUE, 0, 125);", "-    _testFindNextSucceeds(_frm, CONTINUE, 0, 88);", "-    _testFindNextSucceeds(_frm, CONTINUE, 0, 163);", "+    _testFindNextSucceeds(_frm, 0, 125);", "+    _testFindNextSucceeds(_frm, 0, 88);", "+    _testFindNextSucceeds(_frm, 0, 163);", "-    _testFindNextFails(_frm, CONTINUE, 0, 163);", "+    _testFindNextFails(_frm, 0, 163);", "-    _testFindNextFails(_frm, CONTINUE, 0, 163);", "+    _testFindNextFails(_frm, 0, 163);", "-    _testFindNextFails(_frm, CONTINUE, 0, 163);", "+    _testFindNextFails(_frm, 0, 163);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e74205cead091ade91c81e8324f8c88e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsCurly.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    System.err.println(\"QuestionBraceIsCurly\");", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e74bd2430151233d0889b01790462997", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 304, "methodNumberAfterChange": 292, "signatureBeforeChange": "    final private boolean jj_3_67()", "signatureAfterChange": "    final private boolean jj_3_71()", "diff": ["+  final private boolean jj_3_71() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_93()) return true;", "+    if (jj_3R_302()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3_67() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_92()) return true;", "-    if (jj_3R_299()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e752a2be7bca79df1cc6d2b660debec1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 419, "methodNumberAfterChange": 709, "signatureBeforeChange": "    final private boolean jj_3R_249()", "signatureAfterChange": "    final private boolean jj_3R_252()", "diff": ["-", "-  final private boolean jj_3R_249() {", "-    if (jj_3R_262()) return true;", "-      if (jj_3R_295()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_252() {", "+    if (jj_3R_265()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_266()) { jj_scanpos = xsp; break; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e755f8c76d8b75af437a6b66116d476d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 426, "methodNumberAfterChange": 393, "signatureBeforeChange": "    final private boolean jj_3R_211()", "signatureAfterChange": "    final private boolean jj_3R_208()", "diff": ["-", "-  final private boolean jj_3R_211() {", "-    if (jj_scan_token(DO)) return true;", "-    if (jj_3R_173()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(63)) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_256()) return true;", "-    }", "-    jj_scanpos = xsp;", "-    if (jj_3R_257()) return true;", "-    }", "-    if (jj_3R_37()) return true;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(79)) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_258()) return true;", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(84)) {", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_208() {", "+    if (jj_scan_token(DO)) return true;", "+    if (jj_3R_170()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(63)) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_255()) return true;", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(78)) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_256()) return true;", "+    }", "+    if (jj_3R_34()) return true;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(79)) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_257()) return true;", "+    }", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(84)) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_258()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e75897c66b5348c4cbb19efc2c74cfe7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 840, "methodNumberAfterChange": 735, "signatureBeforeChange": "    final private boolean jj_3R_298()", "signatureAfterChange": "    final private boolean jj_3R_302()", "diff": ["-", "-  final private boolean jj_3R_298() {", "-    if (jj_scan_token(DO)) return true;", "-    if (jj_3R_179()) return true;", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_112()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_302() {", "+    if (jj_scan_token(DO)) return true;", "+    if (jj_3R_182()) return true;", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_115()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e75a49bfb5a8e1f0c05aee163cb0bd87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "cf96eb967b0121c0683cbf9a30a0ed919bd996d9", "commitAfterChange": "b53d99e3450a80916c5424f3c5e89716cbcce71b", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "      public void junitEnded()", "signatureAfterChange": "      public void junitEnded()", "diff": ["+      _tabbedPane.setSelectedComponent(_junitPanel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e75aec68435d022721c3d2625d47264b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 333, "methodNumberAfterChange": 317, "signatureBeforeChange": "    final private boolean jj_3R_297()", "signatureAfterChange": "    final private boolean jj_3R_313()", "diff": ["-  final private boolean jj_3R_297() {", "+", "+  final private boolean jj_3R_313() {", "-    if (jj_3R_420()) return true;", "+    if (jj_3R_349()) return true;", "-      if (jj_3R_472()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_350()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7689e2b5addccf85034ba44d6446217", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 303, "methodNumberAfterChange": 558, "signatureBeforeChange": "    final private boolean jj_3R_433()", "signatureAfterChange": "    final private boolean jj_3R_449()", "diff": ["-", "-  final private boolean jj_3R_433() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_278()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_397()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_449() {", "+    if (jj_3R_78()) return true;", "+    if (jj_3R_377()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7775e19c3e84d8eee1af661104253f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ProcessTaskController.java", "commitBeforeChange": "54bd5bee689bab14e75c88e1e0073ab33a50d736", "commitAfterChange": "cbcb761fd21bd00b53ee54378971530b28d41127", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "          public static void main(String... args)", "signatureAfterChange": "          public static void main(String... args)", "diff": ["+      debug.logStart();", "+      finally { debug.logEnd(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e78fb74136390781dd60a407d6844f54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void testSaveClearAndLoadHistory() throws EditDocumentException, IOException, InterruptedException", "signatureAfterChange": "   public void testSaveClearAndLoadHistory() throws EditDocumentException, IOException, InterruptedException", "diff": ["-                 FileOps.readFileAsString(f));", "+                 IOUtil.toString(f));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e79396ec79d6ed4894c8d50d74547019", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 420, "methodNumberAfterChange": 390, "signatureBeforeChange": "    final private boolean jj_3R_447()", "signatureAfterChange": "    final private boolean jj_3R_462()", "diff": ["+", "+  final private boolean jj_3R_462() {", "+    if (jj_scan_token(CASE)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_447() {", "-    if (jj_scan_token(CASE)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7da818587edd1e815aea71d18cdaa69", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 599, "methodNumberAfterChange": 597, "signatureBeforeChange": "    final private boolean jj_3R_268()", "signatureAfterChange": "    final private boolean jj_3R_270()", "diff": ["-  final private boolean jj_3R_268() {", "+  final private boolean jj_3R_270() {", "-    if (jj_3R_107()) return true;", "+    if (jj_3R_110()) return true;", "-    if (jj_3R_163()) return true;", "+    if (jj_3R_171()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7e2c7293cbdd9e78860850a65f36fbb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "               public void testForPlusAssignmentExpressionOnly()", "signatureAfterChange": "               public void testForPlusAssignmentExpressionOnly()", "diff": ["-        new PlusAssignmentExpression(SourceInfo.NO_INFO, ", "-                                     new IntegerLiteral(SourceInfo.NO_INFO, 5), new IntegerLiteral(SourceInfo.NO_INFO, 6));", "+        new PlusAssignmentExpression(SourceInfo.NONE, ", "+                                     new IntegerLiteral(SourceInfo.NONE, 5), new IntegerLiteral(SourceInfo.NONE, 6));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7e8add0470c6e65932b93f71e243cd4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public int balanceForward()", "signatureAfterChange": "   public int balanceForward()", "diff": ["-  public int balanceForward() { return rmb.balanceForward(); }", "+  public int balanceForward() { return getRMB().balanceForward(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8035f61f42186c3f292c7a90ae6f7a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 565, "methodNumberAfterChange": 562, "signatureBeforeChange": "    final private boolean jj_3R_574()", "signatureAfterChange": "    final private boolean jj_3R_270()", "diff": ["-", "-  final private boolean jj_3R_574() {", "-    if (jj_3R_556()) return true;", "-    if (jj_scan_token(COLON)) return true;", "-    if (jj_3R_100()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_270() {", "+    if (jj_3R_341()) return true;", "+    if (jj_scan_token(COLON)) return true;", "+    if (jj_3R_102()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8101aa5da2ad8a7c19cb8fc2ded5855", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ColorOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testApplyDoesChangeConfig()", "signatureAfterChange": "    public void testApplyDoesChangeConfig()", "diff": ["+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e815ba9b3330866d938ea612050de803", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testOpenMany() throws BadLocationException", "signatureAfterChange": "   public void testOpenMany() throws BadLocationException", "diff": ["-//    _log.log(\"testOpenMany completed\");", "+    _log.log(\"testOpenMany completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e81af071c546485cd2a87c9e9cdc7762", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "6b9d21c46904df78c4c42153380af1416ff61bab", "commitAfterChange": "7ee1de808f3f616f32f05bbcf5fc74efb00c8d4a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testCaretUpdatedOnInsert() throws EditDocumentException", "signatureAfterChange": "   public void testCaretUpdatedOnInsert() throws EditDocumentException", "diff": ["+    Utilities.clearEventQueue();", "+    _controller.setCachedCaretPos(pos);", "+    _controller.setCachedCaretPos(newPos + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83e217988296e85b284e00830b25473", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/RMIInteractionsModel.java", "commitBeforeChange": "f8e4975fc86eccfc2e1e190be55c64d1a287745a", "commitAfterChange": "1b5ef0eebd43a246e897081eb432b396efa2d20e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void _interpret(String toEval)", "signatureAfterChange": "   protected void _interpret(String toEval)", "diff": ["-  protected void _interpret(String toEval) { _jvm.interpret(toEval); }", "+  protected void _interpret(String toEval) {", "+    debug.logStart(\"Interpret \" + toEval);", "+    _jvm.interpret(toEval);", "+    debug.logEnd();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e847618119a8f76eb6bf445480992978", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 362, "methodNumberAfterChange": 316, "signatureBeforeChange": "    final private boolean jj_3R_343()", "signatureAfterChange": "    final private boolean jj_3R_371()", "diff": ["+", "+  final private boolean jj_3R_371() {", "+    if (jj_3R_384()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_406()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_343() {", "-    if (jj_3R_351()) return true;", "-      if (jj_3R_362()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e84a8e61910246ddb27862ab28daacb7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": "      private void _quit()", "signatureAfterChange": "      private void _quit()", "diff": ["-        if (rc == JOptionPane.NO_OPTION && dialog.getCheckBoxValue() == true) {", "+        return;", "+      }", "+      else {", "+        // Only remember the checkbox if they say yes", "+        if (dialog.getCheckBoxValue() == true) {", "-        return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e853fcc69db9977250be0f1629279361", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/jar/JarCreationTest.java", "commitBeforeChange": "ce99ad77121aabff91f9c6fba762f853ca2a34f5", "commitAfterChange": "c7e182b04aa52ae1423064c733cc8609017cc26d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testCreateJar()", "signatureAfterChange": "   public void testCreateJar()", "diff": ["-      add = File.createTempFile(\"JarTest\",\".java\");", "+      add = File.createTempFile(\"JarTest\",\".java\").getCanonicalFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e876869e21017eec97331ca4d1850451", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 37, "signatureBeforeChange": "      public void breakpointRemoved(Breakpoint bp)", "signatureAfterChange": "      public void regionAdded(Breakpoint bp)", "diff": ["+    public void regionAdded(Breakpoint bp) { fail(\"regionAdded fired unexpectedly\"); }", "-    public void breakpointRemoved(Breakpoint bp) { fail(\"breakpointRemoved fired unexpectedly\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e87c3e10f5a36cc29f340ffc3a9963c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 631, "methodNumberAfterChange": 697, "signatureBeforeChange": "    final private boolean jj_3R_282()", "signatureAfterChange": "    final private boolean jj_3R_280()", "diff": ["-", "-  final private boolean jj_3R_282() {", "-    if (jj_3R_179()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_280() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_349()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_350()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_351()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_352()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_353()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_354()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_355()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_356()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_357()) return true;", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e886df4d4085a98add14311d06d47469", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "f6810ad68cbb0aaa0d9f5ff0052437da87098ab7", "commitAfterChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public int findPrevCharPos(int pos, char[] whitespace) throws BadLocationException", "signatureAfterChange": "   public int findPrevCharPos(int pos, char[] whitespace) throws BadLocationException", "diff": ["+      ", "+      int result = reducedPos;", "+      if (i < 0) result = ERROR_INDEX;", "+      _storeInCache(key, result);", "+      return result;", "-    int result = reducedPos;", "-    if (i < 0) result = ERROR_INDEX;", "-    _storeInCache(key, new Integer(result));", "-    return result;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e89929f9d4f9ec0ae73af85c6334ed83", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/gui/Main.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "          public void run()", "signatureAfterChange": "          public void run()", "diff": ["-//        stopAction.update();", "+        stopAction.update();", "-//      stopAction.update();", "+      stopAction.update();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8d817466315aea344cfd8f619963870", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testGetSourceRootPackageThreeDeepValidRelative() throws BadLocationException, IOException", "signatureAfterChange": "   public void testGetSourceRootPackageThreeDeepValidRelative() throws BadLocationException, IOException", "diff": ["+    debug.logStart();", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8e1c7acd31068723b2b292ed6d5c2d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testCharacterOps()", "signatureAfterChange": "   public void testCharacterOps()  throws ExceptionReturnedException", "diff": ["-  public void testCharacterOps() {", "+  public void testCharacterOps()  throws ExceptionReturnedException{"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8f5beff46ccfc3876838d810bae8d54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModel.java", "commitBeforeChange": "0df5b67dc6a947ef0dc3e15977c6d8f0381eaef3", "commitAfterChange": "ab104d7a596197fd72adce8bdbadedeb720fbd0c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public String getDisplayFullPath(int index)", "signatureAfterChange": "   public String getDisplayFullPath(int index)", "diff": ["-    OpenDefinitionsDocument doc = (OpenDefinitionsDocument)", "-      getDefinitionsDocs().getElementAt(index);", "+    OpenDefinitionsDocument doc =", "+      getDefinitionsDocuments().get(index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8fe36bfd1f5c11e540a14a8eb53bf77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/MainFrame.java", "commitBeforeChange": "1ed74444e7bc359a9a1bceeac912e2a7a23c2add", "commitAfterChange": "7c92e58e6451902680f99442fe1b0e5b6ce56b46", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \t\t \tDefinitionsView getDefView()", "signatureAfterChange": " \t\t \tDefinitionsPane getDefPane()", "diff": ["-\tDefinitionsView getDefView()", "+\tDefinitionsPane getDefPane()", "-\t\t\treturn _definitionsView;", "+\t\t\treturn _definitionsPane;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e92138aba4def51f1efa388fd2418f7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "3c9da7b6f33927502f9cee032fa48adae4a189de", "commitAfterChange": "5b8db3ab6ffa6e60a3e348c2f56419eeafa67e87", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public void fileClosed(OpenDefinitionsDocument doc)", "signatureAfterChange": "      public void fileClosed(OpenDefinitionsDocument doc)", "diff": ["-      synchronized(this) {", "-        notify();", "+      synchronized (_closeLock) {", "+        _closeDone = true;", "+        _closeLock.notify();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e93204e6efa245c47fc3313e777fab01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandlerThread.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void _log(String message)", "signatureAfterChange": "   private void _log(String message)", "diff": ["-  protected void _log(String message) {", "-    _log.logTime(message);", "-  }", "+  private void _log(String message) { _log.log(message); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e93ee1d4705918a20b70cdc1a61a9743", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "commitAfterChange": "d07989306c43e4045df83ca1211956d5a85a21bd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testPackageNameWeird1() throws BadLocationException", "signatureAfterChange": "   public void testPackageNameWeird1()     throws BadLocationException, InvalidPackageException", "diff": ["-  public void testPackageNameWeird1() throws BadLocationException {", "+  public void testPackageNameWeird1()", "+    throws BadLocationException, InvalidPackageException", "+  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e95910162b6b428229571f26d3c7cad7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "     public boolean isModifiedSinceSave()", "signatureAfterChange": "     public boolean isModifiedSinceSave()", "diff": ["-      return _doc.isModifiedSinceSave();", "+      return getDocument().isModifiedSinceSave();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9605c4a91b0f1e4b7fb3c0dec9bf70a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 643, "methodNumberAfterChange": 643, "signatureBeforeChange": "   public synchronized void drop(DropTargetDropEvent dropTargetDropEvent)", "signatureAfterChange": "   public synchronized void drop(DropTargetDropEvent dropTargetDropEvent)", "diff": ["-          File file = (File)iterator.next();", "+          File file = iterator.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e96bcc81f1ce0bbe0ee434d1016ac822", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void setActiveNextDocument()", "signatureAfterChange": "   public void setActiveNextDocument()", "diff": ["-    INavigatorItem key = getIDocGivenODD(_activeDocument);", "+    INavigatorItem key = _activeDocument;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9736172b9692d18c2c5079ef3ad0c6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 639, "methodNumberAfterChange": 280, "signatureBeforeChange": "    final private boolean jj_3R_382()", "signatureAfterChange": "    final private boolean jj_3R_79()", "diff": ["+  final private boolean jj_3R_79() {", "+    if (jj_3R_120()) return true;", "+    if (jj_3R_121()) jj_scanpos = xsp;", "-  final private boolean jj_3R_382() {", "-    if (jj_3R_89()) return true;", "-    if (jj_3R_384()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9b6bd989609b198f3cae1613068ea6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public abstract StaticFieldReference lookupStaticField(Type t, String name)     throws UnmatchedLookupException;", "signatureAfterChange": "   public abstract StaticFieldReference lookupStaticField(Type t, String name, Access.Module accessModule)     throws UnmatchedLookupException;", "diff": ["-  public abstract StaticFieldReference lookupStaticField(Type t, String name)", "+  public abstract StaticFieldReference lookupStaticField(Type t, String name, Access.Module accessModule)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9dbeafd69c7f1a77c22206f2b2fa58c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public static TaskController<Void> runInThread(Runnable task)", "signatureAfterChange": "   public static TaskController<Void> runInThread(Runnable task)", "diff": ["-    return computeInThread(LambdaUtil.asThunk(task), true);", "+    return computeWithExecutor(LambdaUtil.asThunk(task), THREAD_EXECUTOR, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea0e116e6cdcc6345396e6194802c981", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersionTest.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testParseClassVersion()", "signatureAfterChange": "      public void testParseClassVersion()", "diff": ["+    assertEquals(JAVA_7, parseClassVersion(\"51.0\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea20caacf88bea5e9323f17aae2ae050", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/LogTest.java", "commitBeforeChange": "1824c23d7190107a20690dc4a2840a5d74f14a93", "commitAfterChange": "3b64166f1d62b17dc65eb373f58379c1d93452e7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testConcurrentWrites() throws IOException, InterruptedException", "signatureAfterChange": "   public void testConcurrentWrites() throws IOException, InterruptedException", "diff": ["-    System.err.println(\"LogTest.testConucrrentWrites complete\");", "+//    System.err.println(\"LogTest.testConucrrentWrites complete\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea3f24d969135810bbfd77fbd6d1d6d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public int balanceBackward()", "signatureAfterChange": "   public int balanceBackward()", "diff": ["-    int relDistance = 0;", "+    int relDistance;", "-    if (iter.atStart() ||", "-        iter.atFirstItem() ||", "-        !closedBraceImmediatelyLeft())", "-    {", "+    if (iter.atStart() || iter.atFirstItem() || !closedBraceImmediatelyLeft()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea4a63443d3e257007169a4664df00a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "28edcfb1557b7084eced62028c2fe7429bdf3ed1", "commitAfterChange": "b6f420e3de969a8f8dd7bc47b9ecaafbf647e921", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "   public void unCommentLines(int selStart, int selEnd)", "signatureAfterChange": "   public void uncommentLines(int selStart, int selEnd)", "diff": ["-  public void unCommentLines(int selStart, int selEnd) {", "+  public void uncommentLines(int selStart, int selEnd) {", "+      _undoManager.startCompoundEdit();", "-        _unCommentLine();", "+        _uncommentLine();", "-        _unCommentBlock(selStart, selEnd);", "+        _uncommentBlock(selStart, selEnd);", "+      _undoManager.endCompoundEdit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea4d3ebe168acb3426a8ea65c4d27124", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "28db8fb2942dc00cad50f5244fe215d573867721", "commitAfterChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public int balanceBackward()", "signatureAfterChange": "   public int balanceBackward()", "diff": ["-    try {  synchronized(_reduced) { return _reduced.balanceBackward(); } }", "+    try { synchronized(_reduced) { return _balanceBackward(); } }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea75fffc8a1403ef5b693b6f2f8acbdd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 372, "methodNumberAfterChange": 373, "signatureBeforeChange": "          public void activeDocumentChanged(final OpenDefinitionsDocument active)", "signatureAfterChange": "          public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["-      try {  // used or invokeAndWait variation", "-        ", "+          ", "-      }  // used for invokeAndWait variation", "-      catch(InterruptedException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa324fc55affe1138cca78296a394f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 660, "methodNumberAfterChange": 644, "signatureBeforeChange": "    final private boolean jj_3R_162()", "signatureAfterChange": "    final private boolean jj_3R_165()", "diff": ["+", "+  final private boolean jj_3R_165() {", "+    if (jj_scan_token(IF)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_98()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_206()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_553()) jj_scanpos = xsp;", "+    return false;", "+  }", "-  final private boolean jj_3R_162() {", "-    if (jj_scan_token(IF)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_97()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_201()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_553()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa69d830db85470b2b7077da1bc9bca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testConstructManyDocsWithoutLineNums()", "signatureAfterChange": "   public void testConstructManyDocsWithoutLineNums()", "diff": ["-    errors = new CompilerError[] { ", "-      new CompilerError(files[0], \"Test error with File\", false),", "-      new CompilerError(files[2], \"Test warning with File\", true),", "-      new CompilerError(files[4], \"Test warning with File\", true),", "-      new CompilerError(files[1], \"Test error with File\", false),", "-      new CompilerError(files[3], \"Test warning with File\", true),", "-      new CompilerError(files[3], \"Test error with File\", false),", "-      new CompilerError(files[4], \"Test error with File\", false),", "-      new CompilerError(files[0], \"Test error with File\", false) ", "+    errors = new DJError[] { ", "+      new DJError(files[0], \"Test error with File\", false),", "+      new DJError(files[2], \"Test warning with File\", true),", "+      new DJError(files[4], \"Test warning with File\", true),", "+      new DJError(files[1], \"Test error with File\", false),", "+      new DJError(files[3], \"Test warning with File\", true),", "+      new DJError(files[3], \"Test error with File\", false),", "+      new DJError(files[4], \"Test error with File\", false),", "+      new DJError(files[0], \"Test error with File\", false) ", "-    CompilerError[] copy = new CompilerError[errors.length];", "+    DJError[] copy = new DJError[errors.length];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eab692ebd9c14c2b0278446061aab66a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "          public void testAddVars()", "signatureAfterChange": "          public void testAddVars()", "diff": ["-      System.err.println(\"testAddVars finished\");", "+//      System.err.println(\"testAddVars finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eabaa0195bfa66504ac71317c79ce877", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 389, "methodNumberAfterChange": 316, "signatureBeforeChange": "    final private boolean jj_3R_356()", "signatureAfterChange": "    final private boolean jj_3R_388()", "diff": ["+", "+  final private boolean jj_3R_388() {", "+    if (jj_scan_token(MINUS)) return true;", "+    if (jj_3R_375()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_356() {", "-    if (jj_scan_token(LESS_OR_EQUAL)) return true;", "-    if (jj_3R_337()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eacda0e5e3c1ccd24058e75f3f12f7ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   @Override public TypeContext visit(TryStatement node)", "signatureAfterChange": "   @Override public TypeContext visit(TryStatement node)", "diff": ["-      setVariable(p, new LocalVariable(p.getName(), caughtT, p.isFinal()));", "+      setVariable(p, new LocalVariable(p.getName(), caughtT, p.getModifiers().isFinal()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eacde0eba5f8ad06baeb72f0e66c867d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 524, "methodNumberAfterChange": 522, "signatureBeforeChange": "    final private boolean jj_3R_251()", "signatureAfterChange": "    final private boolean jj_3R_261()", "diff": ["-", "-  final private boolean jj_3R_251() {", "-    if (jj_scan_token(SLASH_ASSIGN)) return true;", "-    if (jj_3R_94()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_261() {", "+    if (jj_scan_token(SLASH_ASSIGN)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eada3132e0119974af7404f20cf83384", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 795, "methodNumberAfterChange": 339, "signatureBeforeChange": "    final private boolean jj_3R_516()", "signatureAfterChange": "    final private boolean jj_3R_511()", "diff": ["+", "+  final private boolean jj_3R_511() {", "+    if (jj_3R_530()) return true;", "+      if (jj_3R_552()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_516() {", "-    if (jj_3R_536()) return true;", "-      if (jj_3R_565()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb1638d830e7770d1ff9405874b3322e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2aadb81a716e2a196f82baa127c28e3225664fab", "commitAfterChange": "c4ec4fbaa86590f5d9d73c067159d69b14149c37", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": "     public boolean equals(Object other)", "signatureAfterChange": "     public boolean equals(Object other)", "diff": ["-      if (other == null) { return false; }", "-      if (! (other instanceof ClassNameAndPackageEntry)) return false;", "-      ClassNameAndPackageEntry o = (ClassNameAndPackageEntry)other;", "+      if (other == null || ! (other instanceof ClassNameAndPackageEntry)) return false;  // multiple subclasses defined", "+      ClassNameAndPackageEntry o = (ClassNameAndPackageEntry) other;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb5305bed5d37c45b40b7db2df279f7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "d350dd729092f66f8ad737ae377c54d2ad394fbf", "commitAfterChange": "e40155b18bade831c571f9b33dc6334fca6b1698", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public int balanceForward()", "signatureAfterChange": "   public int balanceForward()", "diff": ["-    //System.out.println(\"-------------------------------------------\");", "+//    System.err.println(\"-------------------------------------------\");", "-//    Utilities.show(\"Balancing forward with iterator cursor at \" + absOffset() + \" and walker at \" + _parent.walkerOffset());", "-", "+//    System.err.println(\"Balancing forward with iterator cursor at \" + absOffset() + \" and walker at \" + _parent.walkerOffset());", "+    ", "-//    System.err.println(\"In balanceFor, current token = \" + iter.current());", "+    ", "-//      System.err.println(\"; isShadowed = \" + isShadowed() + \"; RETURNING -1\");", "+//      System.err.println(\"openBraceImmediatelyLeft(): \" + openBraceImmediatelyLeft());", "+//      System.err.println(\"! atStart, atFirstItem, or no closed brace\");", "+//      System.err.println(\"balanceForward immediately aborted; returning -1\");", "-", "+    ", "-    assert iter.current() instanceof Brace;", "-  ", "+    ", "-", "+    ", "-//    System.err.println(\"Starting scan loop; \" + \" current token is: \" + iter.current());", "-//              System.err.println(\"! encountered closed brace that didn't match, returning -1\");", "+//              System.err.println(\"! encountered closed brace that didn't match\");", "+//              System.err.println(\"! encountered closed brace \" + curBrace + \" that didn't match; returning -1\");", "-", "+      ", "-//      System.err.println(\"Hit end of file. distance: \" + distance + \", returning -1\");", "+//      System.err.println(\"Unmatched braces in stack: balancebackward returning -1\");", "+//      System.err.println(\"! ran to end of file. distance: \" + distance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb6e835c81e82717fc4be548a55c0fff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/PopupConsole.java", "commitBeforeChange": "0d9f1553021bdec23ece7e3cb20a25799f49e14f", "commitAfterChange": "85d3a69d147c6c1ce63751f75aec1113945356f7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void interruptConsole()", "signatureAfterChange": "   public void interruptConsole()", "diff": ["-    System.out.println(\"acquiring commandLock\");", "-      System.out.println(\"lock acquired\");", "-    System.out.println(\"command lock released\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb700f90543b869d32e9b2280966b09e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 420, "methodNumberAfterChange": 469, "signatureBeforeChange": "    final private boolean jj_3_13()", "signatureAfterChange": "    final private boolean jj_3_33()", "diff": ["+  final private boolean jj_3_33() {", "+    if (jj_3R_85()) return true;", "+    if (jj_scan_token(COLON)) return true;", "-", "-  final private boolean jj_3_13() {", "-    if (jj_3R_87()) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb8f515df7b4977d907b6d049a45ad89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f9981b5126ddf4f32d24773a4d0aa52292b60f44", "commitAfterChange": "b905bf9540e16d07e22d509564906f39b61368bc", "methodNumberBeforeChange": 700, "methodNumberAfterChange": 701, "signatureBeforeChange": "          public void interactionEnded()", "signatureAfterChange": "          public void interactionEnded()", "diff": ["-      _runProjectAction.setEnabled(_model.isProjectActive());", "+      _runProjectAction.setEnabled(isProjectActiveAndMainClassSet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebaa188e0ecf28b06737cb7251951f6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 383, "methodNumberAfterChange": 386, "signatureBeforeChange": "    final private boolean jj_3R_130()", "signatureAfterChange": "    final private boolean jj_3R_131()", "diff": ["+", "+  final private boolean jj_3R_131() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_65()) jj_scanpos = xsp;", "+    if (jj_scan_token(SUPER)) return true;", "+    if (jj_3R_103()) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_63()) jj_scanpos = xsp;", "-    if (jj_scan_token(SUPER)) return true;", "-    if (jj_3R_102()) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebc5c3c3c218857f7a014d8c14c7d2cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public String getNextTopLevelClassName(int startPos, int endPos) throws ClassNameNotFoundException", "signatureAfterChange": "   public String getNextTopLevelClassName(int startPos, int endPos) throws ClassNameNotFoundException", "diff": ["-    readLock();", "+    acquireReadLock();", "-        readUnlock();", "+        releaseReadLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebe08dfd72535e175d0f9c8214c3aab2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c5840283da06690e8676e5b395b239a18a3908bb", "commitAfterChange": "b126c48fb6e642ca409d0fdb5b704f90178a8277", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": "   private JMenu _setUpLanguageLevelMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpLanguageLevelMenu(int mask)", "diff": ["+    rbMenuItem.setToolTipText(\"Use full Java syntax\");", "+    rbMenuItem.setToolTipText(\"Use Elementary language-level features\");", "+    rbMenuItem.setToolTipText(\"Use Intermediate language-level features\");", "+    rbMenuItem.setToolTipText(\"Use Advanced language-level features\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebeaef9377c3d5a94e030747d38eb4d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 273, "methodNumberAfterChange": 854, "signatureBeforeChange": "    final private boolean jj_3R_375()", "signatureAfterChange": "    final private boolean jj_3R_461()", "diff": ["-", "-  final private boolean jj_3R_375() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3_64()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_389()) return true;", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_461() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_66()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_481()) return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebeb843afb2a764d86c24e3179ea906a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d7ad233986e68ea13b262a57ebd130ce2e9ceed5", "commitAfterChange": "d581c32ea49adc707a4c5dd3f5443e6e5e93cd47", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": "     public void scrollToLineInSource(File file, int lineNumber)", "signatureAfterChange": "     public void scrollToLineInSource(OpenDefinitionsDocument doc, int lineNumber)", "diff": ["-    public void scrollToLineInSource(File file, int lineNumber) {", "-      try {", "-        OpenDefinitionsDocument doc = _model.getDocumentForFile(file);", "-        _model.setActiveDocument(doc);", "-      }", "-      catch (IOException ioe) {", "-        _showIOError(ioe);", "-      }", "+    public void scrollToLineInSource(OpenDefinitionsDocument doc, int lineNumber) {", "+      _model.setActiveDocument(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec0b6115e6f95f3dc30dc7e290e5ccee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentAdapter.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void removeText(int offs, int len) throws DocumentAdapterException", "signatureAfterChange": "   public void removeText(int offs, int len)", "diff": ["-  public void removeText(int offs, int len) throws DocumentAdapterException {", "+  public void removeText(int offs, int len) {", "-    try {", "-      if (_condition.canRemoveText(offs, len)) forceRemoveText(offs, len);", "-    }", "+    try { if (_condition.canRemoveText(offs, len)) forceRemoveText(offs, len); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec18ecb8958ce2825ae443114c55dc88", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testInteractionsCanSeeCompiledClasses()     throws BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsCanSeeCompiledClasses()     throws BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-    // IN PROGRESS: BUG #702733", "-//    assertEquals(\"result of static field\",", "-//                 \"3\",", "-//                 interpret(\"DrJavaTestBaz.x\"));", "+    assertEquals(\"result of static field\",", "+                 \"3\",", "+                 interpret(\"DrJavaTestBaz.x\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec1fd3ebdfd48531e906d84e48d8dac3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 458, "methodNumberAfterChange": 322, "signatureBeforeChange": "    final private boolean jj_3R_377()", "signatureAfterChange": "    final private boolean jj_3R_367()", "diff": ["+  final private boolean jj_3R_367() {", "+    if (jj_3R_104()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_418()) jj_scanpos = xsp;", "-  final private boolean jj_3R_377() {", "-    if (jj_3R_103()) return true;", "-    if (jj_3R_390()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec241c15c5f2d56f0917cd24b0dceca6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "b42121281abc84b5922f4d3c2653d8341fced477", "commitAfterChange": "6b690d7e50bc9f782260d6c38aaf261dfe0715e0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      private void _replaceFindPrevious()", "signatureAfterChange": "      private void _replaceFindPrevious()", "diff": ["-    String replaceWord = _replaceField.getText();", "+    final String replaceWord = _replaceField.getText();", "-      _selectReplacedItem(replaceWord.length());", "+      _selectFoundOrReplacedItem(replaceWord.length());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec42c0f32cccdc10a2243f68e34e5c63", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "fb1b63ba1878393caf36d179652660c6b03a0e25", "commitAfterChange": "dc69a85baa929a49ab45fc0c6b8335df9ae74d24", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void quit()", "signatureAfterChange": "   public void quit()", "diff": ["-      //_interpreterControl.killInterpreter();", "+      _interpreterControl.killInterpreter(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec4634ab61d614a16844ca739f781b48", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocument.java", "commitBeforeChange": "80e5b2a4860b03c09786e96e9454b1209681f568", "commitAfterChange": "fcd44b069955d5a8c8e628fd06f8d74718eca4f0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void append(String str, AttributeSet set)", "signatureAfterChange": "   public void append(String str, AttributeSet set)", "diff": ["-    try { insertString(getLength(), str, set); }", "-    catch (BadLocationException e) { throw new UnexpectedException(e); }  // impossible", "+    try { _append(str, set); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec494d6bf567cb8fa7653ff21c0236c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public Object visit(ThrowStatement node)", "signatureAfterChange": "   public Class visit(ThrowStatement node)", "diff": ["-     */", "-    public Object visit(ThrowStatement node) {", "-        Class c = (Class)node.getExpression().acceptVisitor(this);", "-        if (!Throwable.class.isAssignableFrom(c)) {", "-\t    node.setProperty(NodeProperties.ERROR_STRINGS,", "-\t\t\t     new String[] { c.getName() });", "-            throw new ExecutionError(\"throw.type\", node);", "-        }", "-        return null;", "-    }", "+   */", "+  public Class visit(ThrowStatement node) {", "+    Class c = (Class)node.getExpression().acceptVisitor(this);", "+    if (!Throwable.class.isAssignableFrom(c)) {", "+      node.setProperty(NodeProperties.ERROR_STRINGS,", "+                       new String[] { c.getName() });", "+      throw new ExecutionError(\"throw.type\", node);", "+    }", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec7b27a63fd324bf36b5321c797d5192", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/ConstantPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public short put(MethodIdentifier cst)", "signatureAfterChange": "   public short put(MethodIdentifier cst)", "diff": ["-    Info info = (Info)constants.get(cst);", "+    Info info = constants.get(cst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec7b64c742bff9190e7c0fd5bf01b398", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "963348ced7921c9036c4d0267a79aecf5dc0da09", "commitAfterChange": "d4a459468ccaac61f85f36bf8b362dd0885e5cf0", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 114, "signatureBeforeChange": "      public void fileSaved(OpenDefinitionsDocument doc)", "signatureAfterChange": "      public void fileSaved(OpenDefinitionsDocument doc)", "diff": ["+      _revertAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec85120b40643a8fd2f7be386300f5ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 684, "methodNumberAfterChange": 668, "signatureBeforeChange": "    final private boolean jj_3R_381()", "signatureAfterChange": "    final private boolean jj_3R_310()", "diff": ["+", "+  final private boolean jj_3R_310() {", "+    if (jj_scan_token(CATCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_94()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_167()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_381() {", "-    if (jj_scan_token(CATCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_92()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_178()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec966493dbae6b8f7ef0d22e4c15fdd2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "25a10abeda1945066d6766970fef196b893518a9", "commitAfterChange": "106e4789ac2e2c4fd58ff3089bc0fdc0755082ae", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "   private void _copyVariablesFromInterpreter() throws DebugException", "signatureAfterChange": "   private void _copyVariablesFromInterpreter() throws DebugException", "diff": ["-        if (wrappedVal.length() == 1) { // if it can't be found (length is 0), just ignore it", "+        if ((wrappedVal!=null) && (wrappedVal.length() == 1)) { // if it can't be found (length is 0), just ignore it", "-            if (!oldVal.equals(val)) {", "+            if ((oldVal==null) || (!oldVal.equals(val))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec9b59314a795878944704def0af3a41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public DefinitionsPane(MainFrame mf, final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public DefinitionsPane(MainFrame mf, final OpenDefinitionsDocument doc)", "diff": ["-    // Add listener that checks if position in the document has changed.", "-    // If it has changed, check and see if we should be highlighting matching braces.", "-    this.addCaretListener(_matchListener);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eca2e3ba5d3e82f4b730ca68b01f08f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public void testCompileFailsCorrectLineNumbers() throws BadLocationException, IOException", "signatureAfterChange": "     public void testCompileFailsCorrectLineNumbers() throws BadLocationException, IOException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecb450311da71227482c59684066c9ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public static <I, R> IncrementalTaskController<I, R> computeInThread(IncrementalTask<? extends I, ? extends R> task)", "signatureAfterChange": "   public static <I, R> IncrementalTaskController<I, R> computeInThread(IncrementalTask<? extends I, ? extends R> task)", "diff": ["-    return computeInThread(task, true, false);", "+    return computeWithExecutor(task, THREAD_EXECUTOR, true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecccfa6738294482d1babe54a8ca5cb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "24e790b85d3a1a29de15955ca1ba9200a6865f83", "commitAfterChange": "4ceb386773fd5eb837ddcd34820c563b6c3c20cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testMultilineCommentOrUncommentAfterScroll()      throws BadLocationException, InterruptedException", "signatureAfterChange": "   public void testMultilineCommentOrUncommentAfterScroll()      throws BadLocationException, InterruptedException", "diff": ["-      \"// public class stuff {\\n\" + ", "-      \"//   private int _int;\\n\" + ", "-      \"//   private Bar _bar;\\n\" +", "-      \"//   public void foo() {\\n\" +", "-      \"//     _bar.baz(_int);\\n\" +", "-      \"//   }\\n\" +", "-      \"// }\\n\";", "+      \"//public class stuff {\\n\" + ", "+      \"//  private int _int;\\n\" + ", "+      \"//  private Bar _bar;\\n\" +", "+      \"//  public void foo() {\\n\" +", "+      \"//    _bar.baz(_int);\\n\" +", "+      \"//  }\\n\" +", "+      \"//}\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd65f2027452cd4b7f895ab5495a438", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyAdvancedVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "              public void testForInitializedVariableDeclaratorDoFirst()", "signatureAfterChange": "              public void testForInitializedVariableDeclaratorDoFirst()", "diff": ["-      InitializedVariableDeclarator ivd = new InitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO,", "-                                                                            new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"),", "-                                                                            new Word(JExprParser.NO_SOURCE_INFO, \"i\"),", "-                                                                            new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 2));", "+      InitializedVariableDeclarator ivd = new InitializedVariableDeclarator(SourceInfo.NO_INFO,", "+                                                                            new PrimitiveType(SourceInfo.NO_INFO, \"int\"),", "+                                                                            new Word(SourceInfo.NO_INFO, \"i\"),", "+                                                                            new IntegerLiteral(SourceInfo.NO_INFO, 2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ece0ece366ee1d79a50947df6206c118", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 268, "methodNumberAfterChange": 716, "signatureBeforeChange": "    final private boolean jj_3R_132()", "signatureAfterChange": "    final private boolean jj_3R_160()", "diff": ["-", "-  final private boolean jj_3R_132() {", "-    if (jj_3R_178()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_160() {", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ece8443097b3d34c9c932de30425207a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "   private void _removeAllDebugInterpreters() throws DebugException", "signatureAfterChange": "   private void _removeAllDebugInterpreters() throws DebugException", "diff": ["-      ((DefaultInteractionsModel)_model.getInteractionsModel());", "+      _model.getInteractionsModel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ece8eebf21f0d2642bac39aefcd368ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 375, "methodNumberAfterChange": 375, "signatureBeforeChange": "          public void indentLines(int selStart, int selEnd)", "signatureAfterChange": "          public void indentLines(int selStart, int selEnd)", "diff": ["-    public void indentLines(int selStart, int selEnd) { getDocument().indentLines(selStart, selEnd); }", "+    public void indentLines(int selStart, int selEnd) { ", "+      DefinitionsDocument doc = getDocument();", "+      doc.acquireWriteLock();", "+      try { doc.indentLines(selStart, selEnd); }", "+      finally { doc.releaseWriteLock(); }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecee103c0261e2c4140e0a6e7a128b73", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 213, "methodNumberAfterChange": 174, "signatureBeforeChange": "    final private boolean jj_3R_131()", "signatureAfterChange": "    final private boolean jj_3R_128()", "diff": ["-", "-  final private boolean jj_3R_131() {", "-    if (jj_3R_91()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_148()) { jj_scanpos = xsp; break; }", "-    }", "-    xsp = jj_scanpos;", "-    if (jj_3R_149()) jj_scanpos = xsp;", "-    return false;", "-  }", "+  final private boolean jj_3R_128() {", "+    if (jj_3R_88()) return true;", "+      if (jj_3R_145()) { jj_scanpos = xsp; break; }", "+    if (jj_3R_146()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecf993c0185d3095b100ebe3bdc63fe0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   @Override public Type visit(SimpleAllocation node)", "signatureAfterChange": "   @Override public Type visit(SimpleAllocation node)", "diff": ["-    if (node.getArguments() != null) { args = node.getArguments(); }", "-    for (Expression e : args) { e.acceptVisitor(this); }", "+    if (node.getArguments() != null) { args = node.getArguments(); checkList(args); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed0cf2728311adff7f003f1ff0f38c65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testCloseFileDisallowAbandon() throws BadLocationException", "signatureAfterChange": "   public void testCloseFileDisallowAbandon() throws BadLocationException", "diff": ["-   */", "+  /** Creates a new document, modifies it, but disallows a call to close it without saving changes. */", "-      public boolean canAbandonFile(OpenDefinitionsDocument doc) {", "+      public synchronized boolean canAbandonFile(OpenDefinitionsDocument doc) {", "-      public void fileClosed(OpenDefinitionsDocument doc) {", "-        closeCount++;", "-      }", "+      public synchronized void fileClosed(OpenDefinitionsDocument doc) { closeCount++; }", "+    ", "+    _log.log(\"testCloseFileDisallowAbandon completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed12ed3f28001d512ca5fc4d2cc240b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 321, "methodNumberAfterChange": 323, "signatureBeforeChange": "    final private boolean jj_3R_169()", "signatureAfterChange": "    final private boolean jj_3R_165()", "diff": ["-", "-  final private boolean jj_3R_169() {", "-    if (jj_3R_31()) return true;", "-    if (jj_3R_185()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_165() {", "+    if (jj_3R_27()) return true;", "+    if (jj_3R_181()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed1c50164005b4735dfb20bd1387f2b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "da631ae365e5ae3fe7064b60f098ede0150c39bb", "commitAfterChange": "574257b530483460a9c0ce0cc5577b7fd93532dd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setCompilationInProgress()", "signatureAfterChange": "     public void setCompilationInProgress()", "diff": ["-      SwingDocument doc = new SwingDocument();", "+      ErrorDocument doc = new ErrorDocument(getErrorDocumentTitle());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed20d834cc7834e354b7a192f69aa735", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "1f215280ffb4deee1474aa0ea630d96d544831f9", "commitAfterChange": "36da33844ba54377479a55c5dc3b578eed405d70", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DebugManager(GlobalModel model)", "signatureAfterChange": "   public DebugManager(GlobalModel model) throws DebugException", "diff": ["-  public DebugManager(GlobalModel model) {", "-    _isReady = false;", "-    _session = null;", "-    _swat = null;", "+  public DebugManager(GlobalModel model) throws DebugException {", "+    //_isReady = false;", "+    //session = null;", "+    //_swat = null;", "-    _logwriter = new PrintWriter(DrJava.consoleOut());", "+    //_logwriter = new PrintWriter(DrJava.consoleOut());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2cf47c3ca02c426aff2b41add350b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 525, "methodNumberAfterChange": 523, "signatureBeforeChange": "    final private boolean jj_3R_154()", "signatureAfterChange": "    final private boolean jj_3R_157()", "diff": ["-", "-  final private boolean jj_3R_154() {", "-    if (jj_scan_token(NEW)) return true;", "-    if (jj_3R_98()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_329()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_330()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_157() {", "+    if (jj_scan_token(NEW)) return true;", "+    if (jj_3R_99()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_332()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_333()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed33fc4deb046e093455b7d4ecc5937d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   protected VariableData[] formalParameters2VariableData(FormalParameter[] fps, Data d)", "signatureAfterChange": "   protected VariableData[] formalParameters2VariableData(FormalParameter[] fps, Data d)", "diff": ["-                                    new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, mav), ", "+                                    new ModifiersAndVisibility(SourceInfo.NO_INFO, mav), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed392b6e9b059000fe687c30ff3f7da7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 370, "methodNumberAfterChange": 579, "signatureBeforeChange": "    final private boolean jj_3R_115()", "signatureAfterChange": "    final private boolean jj_3R_225()", "diff": ["-  final private boolean jj_3R_115() {", "-    if (jj_3R_183()) return true;", "-    if (jj_3R_248()) jj_scanpos = xsp;", "+", "+  final private boolean jj_3R_225() {", "+    if (jj_3R_274()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_275()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed4f624d6383d16fd400d6a844d33f76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public Object visit(SynchronizedStatement node)", "signatureAfterChange": "   public Class visit(SynchronizedStatement node)", "diff": ["-     */", "-    public Object visit(SynchronizedStatement node) {", "-        // Check the lock", "-        if (((Class)node.getLock().acceptVisitor(this)).isPrimitive()) {", "-            throw new ExecutionError(\"lock.type\", node);", "-        }", "-", "-        node.getBody().acceptVisitor(this);", "-        return null;", "-    }", "+   */", "+  public Class visit(SynchronizedStatement node) {", "+    // Check the lock", "+    if (((Class)node.getLock().acceptVisitor(this)).isPrimitive()) {", "+      throw new ExecutionError(\"lock.type\", node);", "+    }", "+    ", "+    node.getBody().acceptVisitor(this);", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed5521a3f94e653d32bd711d719a60cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testEvaluationVisitorExtensionNO_RESULT()", "signatureAfterChange": "   public void testEvaluationVisitorExtensionNO_RESULT()", "diff": ["-  public void testEvaluationVisitorExtensionNO_RESULT() {   ", "-    boolean passed = false;", "-    ", "+  public void testEvaluationVisitorExtensionNO_RESULT() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed556572b732b979d63444edbf145fb5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public synchronized void shutdown()", "signatureAfterChange": "   public synchronized void shutdown()", "diff": ["-  ", "+   */", "-      DrJava.consoleOut().println(\"Shutting down...\");", "+      //DrJava.consoleOut().println(\"Shutting down...\");", "-        //remove all remaining breakpoints"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed6eda710d7870014f6e170cf79120ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "signatureAfterChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "diff": ["-      // TODO: where is abstract check?", "-//      else if (that.getDeclarators()[i] instanceof UninitializedVariableDeclarator) {  ", "-//        _addAndIgnoreError(\"All static fields must be initialized\", that);", "-//      }", "-      ", "-//      vdsList.addLast(vds[i]);", "+      else if (that.getDeclarators()[i] instanceof UninitializedVariableDeclarator) {  ", "+        _addAndIgnoreError(\"All static fields must be initialized\", that);", "+      }", "+// TODO: where is abstract check?     "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed7444a56eb86c7286b5de6d07ac2141", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 304, "methodNumberAfterChange": 685, "signatureBeforeChange": "    final private boolean jj_3R_402()", "signatureAfterChange": "    final private boolean jj_3R_421()", "diff": ["-", "-  final private boolean jj_3R_402() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_442()) {", "-    if (jj_3R_443()) {", "-    if (jj_3R_444()) return true;", "-    }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_421() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_441()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_442()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_443()) return true;", "+    }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed772ae74e8e8e8243ca296353726f1c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/Interpreter.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Interpreter(Options opt)", "signatureAfterChange": "      public Interpreter(Options opt)", "diff": ["-    this(opt, new TopLevelContext(Interpreter.class.getClassLoader()), RuntimeBindings.EMPTY);", "+    this(opt, new TopLevelContext(Interpreter.class.getClassLoader(), opt), RuntimeBindings.EMPTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed7e00e5326fae89ca11aca857d98ffb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/ConstantPool.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   Info get(short i)", "signatureAfterChange": "   Info get(short i)", "diff": ["-    return (Info)constantList.get(i);", "+    return constantList.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed8f960640140c3c316b37e2752be53e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 293, "methodNumberAfterChange": 289, "signatureBeforeChange": "   private void _openFolder(File dir, boolean rec)", "signatureAfterChange": "   private void _openFolder(File dir, boolean rec)", "diff": ["-    simpleHourglassOn();", "+    hourglassOn();", "-    finally { simpleHourglassOff(); }", "+    finally { hourglassOff(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed966e8805af82c9f13762861c25df63", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void removeWatch(int index);", "signatureAfterChange": "   public void removeWatch(int index) throws DebugException;", "diff": ["-  public void removeWatch(int index);", "+  public void removeWatch(int index) throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eda23fec674ec10f4092ea0946e03a3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Debugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void removeAllWatches();", "signatureAfterChange": "   public void removeAllWatches() throws DebugException;", "diff": ["-  public void removeAllWatches();", "+  public void removeAllWatches() throws DebugException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edb548faa9c53ad7c73b3c7557217099", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/KeyStrokeOptionComponent.java", "commitBeforeChange": "364d0b19a9e3896eddcd174b6cb5aa4a53e74f1f", "commitAfterChange": "65d59a6eb5c83a25b9e6bfdf698fd61ca6d2f695", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public KeyStrokeOptionComponent (KeyStrokeOption opt, String text, final Frame parent)", "signatureAfterChange": "    public KeyStrokeOptionComponent(KeyStrokeOption opt,                                   String text,                                   final Frame parent)", "diff": ["-  public KeyStrokeOptionComponent (KeyStrokeOption opt, String text, final Frame parent) {", "+  public KeyStrokeOptionComponent(KeyStrokeOption opt,", "+                                  String text,", "+                                  final Frame parent) {", "-    _ks = DrJava.CONFIG.getSetting(opt);", "-    _configKs = _ks;", "+    _currentKey = DrJava.CONFIG.getSetting(opt);", "+    _newKey = _currentKey;", "-    _jb = new JButton();", "-    _jb.setBackground(Color.white);", "-    _jb.setText(_option.format(_ks));", "-    _jb.addActionListener(new ActionListener() {", "+    _button = new JButton();", "+    _button.setBackground(Color.white);", "+    _button.setText(_option.format(_currentKey));", "+    _button.addActionListener(new ActionListener() {", "-    _keyToKSOC.put(_ks, this);", "+    _keyToKSOC.put(_currentKey, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edc0b3b67757ad58185cb3ef6ee5df87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          public void testForVariableDeclarationOnly()", "signatureAfterChange": "          public void testForVariableDeclarationOnly()", "diff": ["-      if (errors.size() > 0) System.err.println(\"Error was:\" + errors.get(0).getFirst());", "+//      if (errors.size() > 0) System.err.println(\"Error was:\" + errors.get(0).getFirst());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edfc91e50986a85a4b5ab89da272f768", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/Brace.java", "commitBeforeChange": "973271a114877f62b3cb122ffc9ab5f28c91b43a", "commitAfterChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private Brace(int type, ReducedModelState state)", "signatureAfterChange": "   private Brace(int type, ReducedModelState state)", "diff": ["+    _size = getType().length();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee081f8715574d19288371cdf875f63e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/VectorOption.java", "commitBeforeChange": "e66e301ba3e7c9392b46f6d5762feacdcedbfdde", "commitAfterChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Vector<T> parse(String s)", "signatureAfterChange": "   public Vector<T> parse(String s)", "diff": ["-    st.ordinaryChar('\\\\');", "+    st.ordinaryChar('|');", "-        if (tok=='\\\\') {", "-          if (prevtok=='\\\\') {", "-            // second backslash in a row, append a backslash to string builder", "-            sb.append('\\\\');", "+        if (tok=='|') {", "+          if (prevtok=='|') {", "+            // second pipe in a row, append a pipe to string builder", "+            sb.append('|');", "-            // first backslash, next token decides", "+            // first pipe, next token decides", "-          if (prevtok=='\\\\') {", "-            // backslash followed by delimiter --> escaped delimiter", "+          if (prevtok=='|') {", "+            // pipe followed by delimiter --> escaped delimiter", "-            // no preceding backslash --> real delimiter", "+            // no preceding pipe --> real delimiter", "-          // not a backslash or delimiter", "-          if (prevtok=='\\\\') {", "+          // not a pipe or delimiter", "+          if (prevtok=='|') {", "-            throw new OptionParseException(name, s, \"A backslash was discovered before the token '\" + st.sval +", "-                                           \"'. A backslash is only allowed in front of another backslash \" +", "+            throw new OptionParseException(name, s, \"A pipe | was discovered before the token '\" + st.sval +", "+                                           \"'. A pipe is only allowed in front of another pipe \" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee1267dba0f38187af831858977865d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   private void _initPopup()", "signatureAfterChange": "   private void _initPopup()", "diff": ["-    Action suspendAction", "-      = new AbstractAction() {", "+    Action suspendAction = new AbstractAction(\"Select Thread\") {", "-        try{", "+        try {", "-        catch(DebugException exception){", "+        catch(DebugException exception) {", "-    ", "+", "-    JMenuItem threadSuspendedSelect = new JMenuItem();", "-    threadSuspendedSelect.setAction(suspendAction);", "-    JMenuItem threadSuspendedResume = new JMenuItem();", "-    threadSuspendedResume.setAction(new AbstractAction() {", "+    JMenuItem threadSuspendedSelect = new JMenuItem(suspendAction);", "+    JMenuItem threadSuspendedResume = new JMenuItem(new AbstractAction() {", "-        try{", "+        try {", "-        catch(DebugException dbe){", "+        catch(DebugException dbe) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee16e02739c7462f62c983916da07af6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "8279bc33117c74621df6401dedd10a0cae247a2c", "commitAfterChange": "ce3350f89c936debb5fbaa8f27f501d1524368cf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "    private void _ensureInterpreterConnected()", "signatureAfterChange": "    private void _ensureInterpreterConnected()", "diff": ["-        while (_interpreterJVM == null) {", "+        while (_interpreterJVM() == null) {", "-    }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee1d3d2e7cfd9a2ac55a378904da7915", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 455, "methodNumberAfterChange": 458, "signatureBeforeChange": "    final private boolean jj_3R_289()", "signatureAfterChange": "    final private boolean jj_3R_290()", "diff": ["-  final private boolean jj_3R_289() {", "+  final private boolean jj_3R_290() {", "-    if (jj_3R_256()) return true;", "+    if (jj_3R_257()) return true;", "-    if (jj_3R_477()) return true;", "+    if (jj_3R_479()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee2d5c3b3cef9147c18fbf50e53ede59", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelConverter.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "signatureAfterChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "diff": ["-        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(SourceInfo.NO_INFO)));", "+        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(SourceInfo.NONE)));", "-          if (symbolTable.get(\"java.lang.Integer\") == null) llv.getSymbolData(\"java.lang.Integer\", SourceInfo.NO_INFO);", "-          if (symbolTable.get(\"java.lang.Double\") == null)  llv.getSymbolData(\"java.lang.Double\", SourceInfo.NO_INFO);", "-          if (symbolTable.get(\"java.lang.Boolean\") == null) llv.getSymbolData(\"java.lang.Boolean\", SourceInfo.NO_INFO);", "-          if (symbolTable.get(\"java.lang.Long\") == null)    llv.getSymbolData(\"java.lang.Long\", SourceInfo.NO_INFO);", "-          if (symbolTable.get(\"java.lang.Byte\") == null)    llv.getSymbolData(\"java.lang.Byte\", SourceInfo.NO_INFO);", "-          if (symbolTable.get(\"java.lang.Short\") == null)   llv.getSymbolData(\"java.lang.Short\", SourceInfo.NO_INFO);", "-          if (symbolTable.get(\"java.lang.Float\") == null)   llv.getSymbolData(\"java.lang.Float\", SourceInfo.NO_INFO);", "+          if (symbolTable.get(\"java.lang.Integer\") == null) llv.getSymbolData(\"java.lang.Integer\", SourceInfo.NONE);", "+          if (symbolTable.get(\"java.lang.Double\") == null)  llv.getSymbolData(\"java.lang.Double\", SourceInfo.NONE);", "+          if (symbolTable.get(\"java.lang.Boolean\") == null) llv.getSymbolData(\"java.lang.Boolean\", SourceInfo.NONE);", "+          if (symbolTable.get(\"java.lang.Long\") == null)    llv.getSymbolData(\"java.lang.Long\", SourceInfo.NONE);", "+          if (symbolTable.get(\"java.lang.Byte\") == null)    llv.getSymbolData(\"java.lang.Byte\", SourceInfo.NONE);", "+          if (symbolTable.get(\"java.lang.Short\") == null)   llv.getSymbolData(\"java.lang.Short\", SourceInfo.NONE);", "+          if (symbolTable.get(\"java.lang.Float\") == null)   llv.getSymbolData(\"java.lang.Float\", SourceInfo.NONE);", "-            llv.getSymbolData(\"java.lang.Character\", SourceInfo.NO_INFO);", "+            llv.getSymbolData(\"java.lang.Character\", SourceInfo.NONE);", "-        _addVisitorError(new Pair<String, JExpressionIF>(ae.getMessage(), new NullLiteral(SourceInfo.NO_INFO)));", "+        _addVisitorError(new Pair<String, JExpressionIF>(ae.getMessage(), new NullLiteral(SourceInfo.NONE)));", "-        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(SourceInfo.NO_INFO)));", "+        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(SourceInfo.NONE)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee414f601d2174cc350cf332d2dab968", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/JavaCCParserFactory.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SourceCodeParser createParser(InputStream is, String fname)", "signatureAfterChange": "   public SourceCodeParser createParser(InputStream is)", "diff": ["-   */", "-  public SourceCodeParser createParser(InputStream is, String fname) {", "-    return new JavaCCParser(is, fname);", "+  public SourceCodeParser createParser(InputStream is) {", "+    return new JavaCCParser(is);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee4edf27b2d7da6a8f011d398a6f0733", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 398, "methodNumberAfterChange": 408, "signatureBeforeChange": "    final private boolean jj_3R_329()", "signatureAfterChange": "    final private boolean jj_3R_311()", "diff": ["-  final private boolean jj_3R_329() {", "-    if (jj_3R_337()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_348()) { jj_scanpos = xsp; break; }", "-    }", "+", "+  final private boolean jj_3R_311() {", "+    if (jj_3R_331()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_346()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee52f3f06151516ce1535aca886c9763", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyFullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "          public void xtestForSimpleSuperReferenceDoFirst()", "signatureAfterChange": "          public void xtestForSimpleSuperReferenceDoFirst()", "diff": ["-     SimpleSuperReference sr = new SimpleSuperReference(JExprParser.NO_SOURCE_INFO);", "+     SimpleSuperReference sr = new SimpleSuperReference(SourceInfo.NO_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee53002f528abc00ad9b28a514af3d76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "commitAfterChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "     public String getFilename()", "signatureAfterChange": "     public String getFilename()", "diff": ["-      return _doc.getFilename();", "+      return getDocument().getFilename();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee5e30f0f42b2cf71e9acffbb7a2a0db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "28c4be6b04d5867405916840b451c47e4acad060", "commitAfterChange": "db16e322f21576ce25b97ab99611f7c7362cef3e", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public int nextBrace()", "signatureAfterChange": "   public int nextBrace()", "diff": ["+\t\t\t\t\t\tcopyCursor.dispose();", "-\t\t\t", "+\t\t\tcopyCursor.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee7c4d46bb01576fca6f6522c754148d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 557, "methodNumberAfterChange": 557, "signatureBeforeChange": "    final private boolean jj_3R_325()", "signatureAfterChange": "    final private boolean jj_3R_326()", "diff": ["-  final private boolean jj_3R_325() {", "-    if (jj_3R_357()) return true;", "+  final private boolean jj_3R_326() {", "+    if (jj_3R_358()) return true;", "-      if (jj_3R_365()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_366()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee8afa48a614915fcb9fc64e248f844b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ModelList.java", "commitBeforeChange": "28c4be6b04d5867405916840b451c47e4acad060", "commitAfterChange": "db16e322f21576ce25b97ab99611f7c7362cef3e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t\tpublic Iterator()", "signatureAfterChange": " \t\tpublic Iterator()", "diff": ["-\t\t\t\tModelList.this._listeners.add(this);", "+\t\t\t\tModelList.this.addListener(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee94dd4a7b795d6f6d9759f446f5afb5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 756, "methodNumberAfterChange": 454, "signatureBeforeChange": "    final private boolean jj_3R_480()", "signatureAfterChange": "    final private boolean jj_3R_432()", "diff": ["+  final private boolean jj_3R_432() {", "+    if (jj_3R_92()) return true;", "+    if (jj_3R_447()) jj_scanpos = xsp;", "-", "-  final private boolean jj_3R_480() {", "-    if (jj_3R_90()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_488()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee99c7f27915bbbe973d18f44407a75b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public Object visit(StaticMethodCall node)", "signatureAfterChange": "   public Class visit(StaticMethodCall node)", "diff": ["-     */", "-    public Object visit(StaticMethodCall node) {", "-        // Do the type checking of the arguments", "-        List args = node.getArguments();", "-        Class[] cargs = Constants.EMPTY_CLASS_ARRAY;", "-        if (args != null) {", "-            cargs = new Class[args.size()];", "-            Iterator it = args.iterator();", "-            int      i  = 0;", "-            while (it.hasNext()) {", "-                cargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "-            }", "-        }", "-        Method m = null;", "-        Node   n = node.getMethodType();", "-\tClass  c = (Class)n.acceptVisitor(this);", "-", "-        try {", "-            m = context.lookupMethod(n, node.getMethodName(), cargs);", "-        } catch (NoSuchMethodException e) {", "-\t    String s0 = node.getMethodName();", "-\t    String s1 = c.getName();", "-\t    node.setProperty(NodeProperties.ERROR_STRINGS, new String[] { s0, s1 });", "-\t    throw new ExecutionError(\"no.such.method\", node);", "-        }", "-", "-        // Set the node properties", "-        node.setProperty(NodeProperties.METHOD, m);", "-        node.setProperty(NodeProperties.TYPE,   c = m.getReturnType());", "-        return c;", "-    }", "+   */", "+  public Class visit(StaticMethodCall node) {", "+    // Do the type checking of the arguments", "+    List args = node.getArguments();", "+    Class[] cargs = Constants.EMPTY_CLASS_ARRAY;", "+    if (args != null) {", "+      cargs = new Class[args.size()];", "+      Iterator it = args.iterator();", "+      int      i  = 0;", "+      while (it.hasNext()) {", "+        cargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "+      }", "+    }", "+    Method m = null;", "+    Node   n = node.getMethodType();", "+    Class  c = (Class)n.acceptVisitor(this);", "+    ", "+    try {", "+      m = context.lookupMethod(n, node.getMethodName(), cargs);", "+    } catch (NoSuchMethodException e) {", "+      String s0 = node.getMethodName();", "+      String s1 = c.getName();", "+      node.setProperty(NodeProperties.ERROR_STRINGS, new String[] { s0, s1 });", "+      throw new ExecutionError(\"no.such.method\", node);", "+    }", "+    ", "+    // Set the node properties", "+    node.setProperty(NodeProperties.METHOD, m);", "+    node.setProperty(NodeProperties.TYPE,   c = m.getReturnType());", "+    return c;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eea6351dceea177fa6d10f3ea13a795e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private boolean _isTestCase(String className)", "signatureAfterChange": "   private boolean _isTestCase(String className)", "diff": ["-              //new ScrollableDialog(null, \"ClassNotFoundException: \"+ className, cnfe.getStackTrace().toString(), \"\").show();", "-        return false; }", "+      error.log(cnfe);", "+      return false;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eebfb23a26061c4a68d9336edad7223e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": "     public InterpreterExtension(ClasspathManager cpm)", "signatureAfterChange": "     public InterpreterExtension(ClasspathManager cpm)", "diff": ["-      nameVisitorContext = makeGlobalContext(this);", "+      nameVisitorContext = makeGlobalTypeContext(this);", "-      checkVisitorContext = makeGlobalContext(this);", "+      checkVisitorContext = makeGlobalTypeContext(this);", "-      evalVisitorContext = makeGlobalContext(this);", "+      evalVisitorContext = makeGlobalObjectContext(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eec9830816ebb5951374f50afd9bb306", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringView.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   ColoringView(Element elem)", "signatureAfterChange": "   ColoringView(Element elem)", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      ", "-      ColorOptionListener col = new ColorOptionListener();", "-      ", "-      DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_COMMENT_COLOR, col);", "-      DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_DOUBLE_QUOTED_COLOR, col);", "-      DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_SINGLE_QUOTED_COLOR, col);", "-      DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_NORMAL_COLOR, col);", "-      DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_KEYWORD_COLOR, col);", "-      DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_NUMBER_COLOR, col);", "-      DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_TYPE_COLOR, col); ", "-    }", "+    // Listen for updates to configurable colors", "+    ColorOptionListener col = new ColorOptionListener();", "+    DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_COMMENT_COLOR, col);", "+    DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_DOUBLE_QUOTED_COLOR, col);", "+    DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_SINGLE_QUOTED_COLOR, col);", "+    DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_NORMAL_COLOR, col);", "+    DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_KEYWORD_COLOR, col);", "+    DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_NUMBER_COLOR, col);", "+    DrJava.CONFIG.addOptionListener( OptionConstants.DEFINITIONS_TYPE_COLOR, col); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eed16bf2e3261bca2dde9f75c441f838", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Position[] getPositions()", "signatureAfterChange": "   public Position getPosition(T error)", "diff": ["+  public Position getPosition(T error) {", "+    int spot = Arrays.binarySearch(_errors, error);", "+    return _positions[spot];", "-  public Position[] getPositions() {", "-    return _positions;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eed3c24b86038f0ca7db354454fd8c3f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "commitAfterChange": "b1b91197c778ee62ce767051b412c31f7bcdddb8", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 68, "signatureBeforeChange": "   private ObjectReference _getDebugInterpreter(String interpreterName)     throws InvalidTypeException, ClassNotLoadedException,     IncompatibleThreadStateException, InvocationException, DebugException", "signatureAfterChange": "   private ObjectReference _getDebugInterpreter()     throws InvalidTypeException, ClassNotLoadedException,     IncompatibleThreadStateException, InvocationException, DebugException", "diff": ["-  private ObjectReference _getDebugInterpreter(String interpreterName)", "+  private ObjectReference _getDebugInterpreter()", "+    String interpreterName = _getUniqueThreadName(threadRef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eee6c4c8cdfdfc47732cf2531abade84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "92062677ca813cb9ab44428a0d2d54f0c3309b04", "commitAfterChange": "274f7defc49003e66c942e814c9ce22958b3814c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setInProgress(boolean inProgress)", "signatureAfterChange": "   public void setInProgress(boolean inProgress)", "diff": ["-   */", "-  public void setInProgress(boolean inProgress) { ", "-    acquireWriteLock();", "-    _hasPrompt = ! inProgress;", "-    releaseWriteLock();", "-  }", "+    */", "+  public void setInProgress(boolean inProgress) { _document.setHasPrompt(! inProgress); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeee9e61cda5e1225f0b059a122f1cac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TopLevelContext.java", "commitBeforeChange": "6b388fb1877469cd91350296fabdf9fe8d522b74", "commitAfterChange": "b5cc61b9509dcda722d6dd7d5605a055e9915381", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public Type typeContainingMemberClass(String name, TypeSystem ts) throws AmbiguousNameException", "signatureAfterChange": "   public ClassType typeContainingMemberClass(String name, TypeSystem ts) throws AmbiguousNameException", "diff": ["-  public Type typeContainingMemberClass(String name, TypeSystem ts) throws AmbiguousNameException {", "+  public ClassType typeContainingMemberClass(String name, TypeSystem ts) throws AmbiguousNameException {", "-    Type result = explicitImport == null ? null : ts.makeClassType(explicitImport);", "+    ClassType result = explicitImport == null ? null : ts.makeClassType(explicitImport);", "-      LinkedList<Type> onDemandMatches = new LinkedList<Type>();", "+      LinkedList<ClassType> onDemandMatches = new LinkedList<ClassType>();", "-        Type t = ts.makeClassType(c);", "+        ClassType t = ts.makeClassType(c);", "-        Type t = ts.makeClassType(c);", "+        ClassType t = ts.makeClassType(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eef067e727efadd71dd29214fb23deaf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 583, "methodNumberAfterChange": 310, "signatureBeforeChange": "    final private boolean jj_3R_368()", "signatureAfterChange": "    final private boolean jj_3R_369()", "diff": ["+  final private boolean jj_3R_369() {", "+    if (jj_3R_374()) return true;", "+      if (jj_3R_390()) { jj_scanpos = xsp; break; }", "-  final private boolean jj_3R_368() {", "-    if (jj_3R_373()) return true;", "-      if (jj_3R_401()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eef3b987aa5808e6fb03a4e845caf3b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 824, "methodNumberAfterChange": 756, "signatureBeforeChange": "    final private boolean jj_3R_293()", "signatureAfterChange": "    final private boolean jj_3R_314()", "diff": ["+", "+  final private boolean jj_3R_314() {", "+    if (jj_3R_336()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_337()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_293() {", "-    if (jj_3R_366()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_445()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef16f73d182c949e9663a27417185380", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "   boolean atEnd()", "signatureAfterChange": "   boolean atEnd()", "diff": ["-  boolean atEnd() { return (getRMB()._cursor.atEnd() || getRMC()._cursor.atEnd()); }", "+  boolean atEnd() { return (_rmb._cursor.atEnd() || _rmc._cursor.atEnd()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef29f43c9fa77bcc851c853eccb7f0a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "651f9c8060aa8498340cc0dfb61af287d74336bb", "commitAfterChange": "92fd9b7a5c54c25bae950a66c845aa56a34968c4", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 66, "signatureBeforeChange": "   private void _setUpToolBar()", "signatureAfterChange": "   private void _setUpToolBar()", "diff": ["+", "-    ", "+", "-    ", "+", "+    _toolBar.add(_closeAction);", "-    ", "-    // Undo, redo", "+", "+    _toolBar.add(_printPreviewAction);", "+    _toolBar.add(_printAction);", "+    _toolBar.addSeparator();", "+", "+", "-    ", "-    ", "+", "-    ", "+", "-    ", "+", "-    ", "+", "-    ", "+", "+", "-    ", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef37faa52133d49f32b6f97bd75ddd22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 328, "methodNumberAfterChange": 320, "signatureBeforeChange": "   private void addDocToNavigator(OpenDefinitionsDocument doc) throws IOException", "signatureAfterChange": "   private void addDocToNavigator(OpenDefinitionsDocument doc) throws IOException", "diff": ["-    INavigatorItem idoc = makeIDocFromODD(doc);", "-    synchronized (_documentsRepos) { _documentsRepos.put(idoc, doc); }", "+    // INavigatorItem idoc = makeIDocFromODD(doc);", "+    synchronized (_documentsRepos) { _documentsRepos.add(doc); }", "-    _documentNavigator.addDocument(idoc, fixPathForNavigator(path));", "+    _documentNavigator.addDocument(doc, fixPathForNavigator(path));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef3a44a0b802e057243df0b8ca1e0f88", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 398, "methodNumberAfterChange": 376, "signatureBeforeChange": "          public void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)       throws OperationCanceledException", "signatureAfterChange": "          public void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)       throws OperationCanceledException", "diff": ["+    ", "+    public void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)", "+      throws OperationCanceledException {", "+      DefinitionsDocument doc = getDocument();", "+      doc.acquireWriteLock();", "+      try { doc.indentLines(selStart, selEnd, reason, pm); }", "+      finally { doc.releaseWriteLock(); }", "+    }", "-    ", "-    public void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)", "-      throws OperationCanceledException {", "-      getDocument().indentLines(selStart, selEnd, reason, pm);", "-    }     "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef463c55530a734fd39f4980c747a488", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "37449cba11f74bdf3921e2b515b5228eef23235b", "commitAfterChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public T getItem()", "signatureAfterChange": "   public T getItem()", "diff": ["-    T item = (T)_matchList.getSelectedValue();", "+    T item = _matchList.getSelectedValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef546321c24588a929b1d896bd223423", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2e4dc36e0c74c534d3da6cd41fba04222175644c", "commitAfterChange": "1ea3dd9f63752abe86fd2373767db30462f2b9f6", "methodNumberBeforeChange": 216, "methodNumberAfterChange": 216, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    config.addOptionListener(WORKING_DIRECTORY, new WorkingDirOptionListener());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef5c307c1d94a01b662642e15670f90e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 310, "methodNumberAfterChange": 688, "signatureBeforeChange": "    final private boolean jj_3R_405()", "signatureAfterChange": "    final private boolean jj_3R_159()", "diff": ["-  final private boolean jj_3R_405() {", "-    if (jj_3R_419()) return true;", "-      if (jj_3R_437()) { jj_scanpos = xsp; break; }", "+", "+  final private boolean jj_3R_159() {", "+    if (jj_3R_192()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_193()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef7aaf30ff5da52984536b17c425b6cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/BidirectionalHashMap.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "      public String toString()", "diff": ["-    String ret = new String();", "+    String ret = \"\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef7c1703d8f28bfe83f7a59dbe8a8961", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 525, "methodNumberAfterChange": 523, "signatureBeforeChange": "    final private boolean jj_3R_134()", "signatureAfterChange": "    final private boolean jj_3R_136()", "diff": ["-  final private boolean jj_3R_134() {", "+", "+  final private boolean jj_3R_136() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;", "-    if (jj_3R_178()) return true;", "+    if (jj_3R_180()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef7dbf377867f9cb3ed9a14cec1e6c22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BookmarksPanel.java", "commitBeforeChange": "b9f87cd074abdafacdb2719b29e0803fd0f81cf0", "commitAfterChange": "04d7824a20eb03ad17793ba3198be21442313bdc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   protected void updateButtons()", "signatureAfterChange": "   protected void _updateButtons()", "diff": ["-  protected void updateButtons() {", "+  protected void _updateButtons() {", "-    _removeAllButton.setEnabled(_regionRootNode != null && _regionRootNode.getDepth() > 0);", "+    _removeAllButton.setEnabled(_rootNode != null && _rootNode.getDepth() > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef934abfd2b97f7845006daf0d872238", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 629, "methodNumberAfterChange": 608, "signatureBeforeChange": "    final private boolean jj_3R_152()", "signatureAfterChange": "    final private boolean jj_3R_156()", "diff": ["+", "+  final private boolean jj_3R_156() {", "+    if (jj_3R_195()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_250()) jj_scanpos = xsp;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_152() {", "-    if (jj_3R_190()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_241()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efd13e88ba8027541e5bfa7cbc446e70", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 425, "methodNumberAfterChange": 420, "signatureBeforeChange": "    final private boolean jj_3R_221()", "signatureAfterChange": "    final private boolean jj_3R_222()", "diff": ["-  final private boolean jj_3R_221() {", "-    if (jj_3R_246()) return true;", "+  final private boolean jj_3R_222() {", "+    if (jj_3R_247()) return true;", "-      if (jj_3R_275()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_276()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efe96259e852572b0aca8cdf56d23d6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 468, "methodNumberAfterChange": 469, "signatureBeforeChange": "   public void commentLines()", "signatureAfterChange": "   void commentLines()", "diff": ["-  // Comment out current selection using wing commenting.  Public for testing purposes only. */", "-  public void commentLines() {", "+  // Comment out current selection using wing commenting.  Non-private for testing purposes only. */", "+  void commentLines() {", "-    _currentDefPane.endCompoundEdit();", "-    DummyOpenDefDoc dummy = new DummyOpenDefDoc();", "-    _currentDefPane.notifyInactive();", "+//    _currentDefPane.endCompoundEdit();", "+//    _currentDefPane.notifyInactive();", "-    _currentDefPane.notifyActive();", "+//    _currentDefPane.notifyActive();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "effbe3af633159ac8874922adb730381", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "299f7a06b8a48edb5fbfad39f77146da0b8bf04b", "commitAfterChange": "37671eca87df017e5050f261f36dc6955d8b96f5", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "      public static void main(String[] args)", "signatureAfterChange": "      public static void main(String[] args)", "diff": ["-    d.hourglassOn();", "+//    d.setEnabled(false);", "-//    System.exit(1);", "+    System.exit(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f005982b31e1ab74a3f4d8033457e981", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 680, "methodNumberAfterChange": 805, "signatureBeforeChange": "    final private boolean jj_3R_549()", "signatureAfterChange": "    final private boolean jj_3R_515()", "diff": ["-  final private boolean jj_3R_549() {", "-    if (jj_3R_90()) return true;", "+  final private boolean jj_3R_515() {", "+    if (jj_scan_token(ASSIGN)) return true;", "+    if (jj_3R_91()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f01805136072058e01b00087adcaf0be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "          public void testForIfThenElseStatementOnly()", "signatureAfterChange": "          public void testForIfThenElseStatementOnly()", "diff": ["-                   \"This method expected to return type: \\\"int\\\" but here returned type: \\\"boolean\\\".\", ", "+                   \"This method expected to return type: \\\"int\\\" but here returned type: \\\"boolean\\\"\", "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f01c6ca0a3fce14f2864988928f5a673", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "27c256ec9281e0464172656b15ccb73506c1cbc1", "commitAfterChange": "efe2cdfa860877c37343dbc5d29e380b33344492", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 84, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+    _interactionsHistoryChooser.setMultiSelectionEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f01cdf31186c1514c20cfcc659f266f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "37dab6b79fc3d4e6f7b2b5f0aa53a4ea9b7f7476", "commitAfterChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "   void _completeFileUnderCursor()", "signatureAfterChange": "   void _completeFileUnderCursor()", "diff": ["-      String s = odd.getText();", "+      String s = odd.getText(AbstractDJDocument.DOCSTART, loc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f028bee872e42aa1f4741cfb9dcb7ff1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 694, "methodNumberAfterChange": 905, "signatureBeforeChange": "    final private boolean jj_3R_562()", "signatureAfterChange": "    final private boolean jj_3R_108()", "diff": ["-", "-  final private boolean jj_3R_562() {", "-    if (jj_3R_581()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_606()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_108() {", "+    if (jj_3R_161()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3_63()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f040c29574a6a1a70de23987e1d401a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testLanguageLevelJUnitErrorLine() throws Exception", "signatureAfterChange": "    public void testLanguageLevelJUnitErrorLine() throws Exception", "diff": ["-    ", "+    debug.logStart();", "-    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0502da51ea31d3c05e40974711137c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocument.java", "commitBeforeChange": "7842792d64565cd346a6ae645d8530905901dfab", "commitAfterChange": "479880e2b62fcba3e57dbf3e96f57f9d3621e7c2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void insertString(int offset, String str, AttributeSet a)     throws BadLocationException", "signatureAfterChange": "   public void insertString(int offset, String str, AttributeSet a)     throws BadLocationException", "diff": ["-", "-", "-", "+\t\t_modifiedHighlights = false;", "+\t\t", "+\t\t\t\t_modifiedHighlights = _modifiedHighlights ||", "+\t\t\t\t\t_reduced.hasHighlightChanged();", "-", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f06639c0397f5267d227873eb0ba6969", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 760, "methodNumberAfterChange": 671, "signatureBeforeChange": "    final private boolean jj_3R_113()", "signatureAfterChange": "    final private boolean jj_3R_116()", "diff": ["-  final private boolean jj_3R_113() {", "+  final private boolean jj_3R_116() {", "-    if (jj_3R_181()) {", "+    if (jj_3R_184()) {", "-    if (jj_3R_182()) return true;", "+    if (jj_3R_185()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f06d9bf70359fe892d837e2878274fd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentAdapter.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void insertText(int offs, String str, String style)     throws DocumentAdapterException", "signatureAfterChange": "   public void insertText(int offs, String str, String style)", "diff": ["-  public void insertText(int offs, String str, String style)", "-    throws DocumentAdapterException {", "+  public void insertText(int offs, String str, String style) {", "-    try {", "-      if (_condition.canInsertText(offs, str, style)) forceInsertText(offs, str, style);", "-    }", "+    try { if (_condition.canInsertText(offs, str, style)) forceInsertText(offs, str, style); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f06df2a342a7c6f770f4e34645dd7807", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPane.java", "commitBeforeChange": "ef8053d5a3d77032e160ea243be48b30918a9ff8", "commitAfterChange": "8a977371ad1fe621f24183ca1ab0253a154a0d13", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void insertNewline()", "signatureAfterChange": "      public void insertNewline()", "diff": ["-  private void insertNewline() {", "-    StyledDocument interactionsDoc = _model.getInteractionsDocument();", "+  public void insertNewline() {", "-      interactionsDoc.insertString(interactionsDoc.getLength(), \"\\n  \", null);", "+      _doc.insertString(_doc.getLength(), \"\\n  \", null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f06fce3938af17aee1f651d324538597", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 594, "methodNumberAfterChange": 592, "signatureBeforeChange": "    final private boolean jj_3R_101()", "signatureAfterChange": "    final private boolean jj_3R_103()", "diff": ["-  final private boolean jj_3R_101() {", "+", "+  final private boolean jj_3R_103() {", "-    if (jj_3R_160()) jj_scanpos = xsp;", "+    if (jj_3R_168()) jj_scanpos = xsp;", "-      if (jj_3_40()) { jj_scanpos = xsp; break; }", "+      if (jj_3_42()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f082c3a8bebfb640dc9f379e66bfc7d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testImmediateQuit() throws Exception", "signatureAfterChange": "    public void testImmediateQuit() throws Exception", "diff": ["+    _log.log(\"testImmediateQuit completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0876b086fbc8caac2fff7465f4982d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 335, "methodNumberAfterChange": 304, "signatureBeforeChange": "    final private boolean jj_3_31()", "signatureAfterChange": "    final private boolean jj_3_33()", "diff": ["-", "-  final private boolean jj_3_31() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_46()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_47()) return true;", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3_33() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_43()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_44()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f094d14868c2417b13070887eb1e2e79", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "3138149e59af557581689e53b212f79d04dd8105", "commitAfterChange": "2fc1b48ae47904f12ff70a4157426a6f949b079b", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "    public void killInterpreter(File wd)", "signatureAfterChange": "    public void killInterpreter(File wd)", "diff": ["-      System.out.println(\"Killing Interpreter for working directory \" + wd);", "+//      System.err.println(\"Killing Interpreter for working directory \" + wd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f09dbc55536c841ca803484d588f6749", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public synchronized void startup() throws DebugException", "signatureAfterChange": "   public synchronized void startup() throws DebugException", "diff": ["-      _model.addListener(_watchListener);", "+      _model.getInteractionsModel().addListener(_watchListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0a38009e43dc2a5c7c36a9c874f5c61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 43, "signatureBeforeChange": "               public void testComplexAnonymousClassInstantiationHelper()", "signatureAfterChange": "          public void testComplexAnonymousClassInstantiationHelper()", "diff": ["-    ", "-      ComplexAnonymousClassInstantiation basic = new ComplexAnonymousClassInstantiation(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"java.lang.Object\")),", "-                                                                                        new ClassOrInterfaceType(SourceInfo.NO_INFO, \"Inner\", new Type[0]), ", "-                                                                                        new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]),", "-                                                                                        new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      ", "+      SimpleNameReference snr =", "+        new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"java.lang.Object\"));", "+      ComplexAnonymousClassInstantiation basic = ", "+        new ComplexAnonymousClassInstantiation(SourceInfo.NO_INFO, ", "+                                               snr,", "+                                               new ClassOrInterfaceType(SourceInfo.NO_INFO, \"Inner\", new Type[0]), ", "+                                               new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]),", "+                                               new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      _iv.complexAnonymousClassInstantiationHelper(basic, _sd1);", "+      _iv._enclosingClassName = \"i.like.monkey\";", "+      _iv.complexAnonymousClassInstantiationHelper(basic, _sd1); // TODO: the wrong enclosing context?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0b9b9ee705ee48ae7e48708ab03ddc6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected StaticMethodCall _getStaticMethodCallForFunction(MethodCall method, Context context)", "signatureAfterChange": "   protected StaticMethodCall _getStaticMethodCallForFunction(MethodCall method, Context context)", "diff": ["-    StaticMethodCall expr = null;", "-      expr = new StaticMethodCall(rt, methodName, args);", "+      StaticMethodCall expr = new StaticMethodCall(rt, methodName, args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0ba2cfd0b34eee5e1a3ac26c23659a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 134, "signatureBeforeChange": "     private File _getSourceRoot(String packageName)       throws InvalidPackageException", "signatureAfterChange": "     private File _getSourceRoot(String packageName)       throws InvalidPackageException", "diff": ["-        sourceFile = getDocument().getFile();", "+        sourceFile = getFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0cc669bc72f4c215f3f23bb9cba6fe0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 216, "methodNumberAfterChange": 206, "signatureBeforeChange": "     public void startJUnit() throws ClassNotFoundException, IOException", "signatureAfterChange": "     public void startJUnit() throws ClassNotFoundException, IOException", "diff": ["-      _junitModel.junit(ConcreteOpenDefDoc.this);", "+      _junitModel.junit(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0cd5dd9a2257ac5873722399d18b209", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testStringOps()", "signatureAfterChange": "   public void testStringOps() throws ExceptionReturnedException", "diff": ["-  public void testStringOps() {", "+  public void testStringOps() throws ExceptionReturnedException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0f316f30de32cb34ca32a5a7055ed8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 646, "methodNumberAfterChange": 500, "signatureBeforeChange": "    final private boolean jj_3R_531()", "signatureAfterChange": "    final private boolean jj_3R_558()", "diff": ["+  final private boolean jj_3R_558() {", "+    if (jj_3_42()) {", "+    if (jj_3R_573()) return true;", "-", "-  final private boolean jj_3R_531() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_545()) {", "-    if (jj_3R_546()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0fde00363b3d533cba99339000df7a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassMemberChecker.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          @Override public Void visit(ConstructorDeclaration node)", "signatureAfterChange": "          @Override public Void visit(ConstructorDeclaration node)", "diff": ["-        setVariable(param, new LocalVariable(param.getName(), t, param.isFinal()));", "+        setVariable(param, new LocalVariable(param.getName(), t, param.getModifiers().isFinal()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1045e06b996a22d6b7f5f25e1930311", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "    private Value _getValueOfLocalVariable(LocalVariable var, ThreadReference thread)     throws InvalidTypeException, ClassNotLoadedException, AbsentInformationException,     IncompatibleThreadStateException, InvocationException, DebugException", "signatureAfterChange": "    private Value _getValueOfLocalVariable(LocalVariable var, ThreadReference thread)     throws InvalidTypeException, ClassNotLoadedException,       IncompatibleThreadStateException, InvocationException, DebugException", "diff": ["-    throws InvalidTypeException, ClassNotLoadedException, AbsentInformationException,", "-    IncompatibleThreadStateException, InvocationException, DebugException", "+    throws InvalidTypeException, ClassNotLoadedException,", "+      IncompatibleThreadStateException, InvocationException, DebugException", "-    Value v = null;", "-    ", "+", "-        List<Mirror> args = new LinkedList<Mirror>(); //Added parameterization <Mirror>. ", "+        List<Mirror> args = new LinkedList<Mirror>(); //Added parameterization <Mirror>.", "-        v = interpreter.invokeMethod(thread, method2Call, args,", "+        Value v = interpreter.invokeMethod(thread, method2Call, args,", "-        ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1120e08373a9f0862d217a4273047e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ForcedChoiceOptionComponentTest.java", "commitBeforeChange": "331da9dae5ca8d07aef3df8e995cb58d0f6f24d7", "commitAfterChange": "ad6842e7f3f5b3d0f8c5827298c4ec26a70a9f28", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testApplyThenResetDefault()", "signatureAfterChange": "    public void testApplyThenResetDefault()", "diff": ["+    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f11a41751310e3d789952caf6a99db22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public void interpreterResetting()", "signatureAfterChange": "   public void interpreterResetting()", "diff": ["-      _document.acquireWriteLock();", "-      try {", "+//      _document.acquireWriteLock();", "+//      try {", "-      }", "-      finally { _document.releaseWriteLock(); }", "+//      }", "+//      finally { _document.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f120157b585168fa28f250d538222abd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "53d061333fe3393f6569c1f553912f1a449482ad", "commitAfterChange": "12c8304e14a6d9eafe2f7093583d8040569150c1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testGetSourceRootPackageThreeDeepValidRelative() throws BadLocationException, IOException", "signatureAfterChange": "   public void testGetSourceRootPackageThreeDeepValidRelative() throws BadLocationException, IOException", "diff": ["-//    _log.log(\"testGetSourceRootPackageThreeDeepValidRelative() completed\");", "+    _log.log(\"testGetSourceRootPackageThreeDeepValidRelative() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f14cdb1653f71caa3200758cb44ca0fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ClipboardHistoryFrame.java", "commitBeforeChange": "37449cba11f74bdf3921e2b515b5228eef23235b", "commitAfterChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   private void okButtonPressed()", "signatureAfterChange": "   private void okButtonPressed()", "diff": ["-      String s = ((ListItem)_historyList.getModel().getElementAt(_historyList.getSelectedIndex())).getFull();", "+      String s = _historyList.getModel().getElementAt(_historyList.getSelectedIndex()).getFull();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f15881c22c9abdf370c7a108fe5c7ef4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "     public Object visit(PostIncrement node)", "signatureAfterChange": "   public Class visit(PostIncrement node)", "diff": ["+   */", "+  public Class visit(PostIncrement node) {", "+    Node exp = node.getExpression();", "+    Class c  = (Class)exp.acceptVisitor(this);", "+    ", "+    // The type of the subexpression must be numeric", "+    if (!c.isPrimitive()   ||", "+        c == void.class    ||", "+        c == boolean.class) {", "+      throw new ExecutionError(\"post.increment.type\", node);", "+    }", "+    ", "+    // The subexpression must be a variable", "+    if (!exp.hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"post.increment.type\", node);", "+    }", "+    ", "+    node.setProperty(NodeProperties.TYPE, c);", "+    return c;", "+  }", "-     */", "-    public Object visit(PostIncrement node) {", "-        Node exp = node.getExpression();", "-        Class c  = (Class)exp.acceptVisitor(this);", "-", "-        // The type of the subexpression must be numeric", "-        if (!c.isPrimitive()   ||", "-            c == void.class    ||", "-            c == boolean.class) {", "-            throw new ExecutionError(\"post.increment.type\", node);", "-        }", "-", "-        // The subexpression must be a variable", "-        if (!exp.hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"post.increment.type\", node);", "-        }", "-", "-        node.setProperty(NodeProperties.TYPE, c);", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f15ddd31759ab59a79452a236536f4f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "5c952c5847e3008cec3ed5ff89d03d335c050f54", "commitAfterChange": "e3e56a8c058b51612dfa6f1f21259a37eadcdcbb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testErrorsInMultipleDocuments() throws IOException, OperationCanceledException", "signatureAfterChange": "      public void testErrorsInMultipleDocuments() throws IOException, OperationCanceledException", "diff": ["-    { new File(\"//nowhere1\"),", "-      new File(\"//nowhere2\") };", "+    { new File(\"/tmp/nowhere1\"),", "+      new File(\"/tmp/nowhere2\") };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f15f333f164447cfd670dbeb095800b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void setPosition(int pos)", "signatureAfterChange": "     public void setPosition(int pos)", "diff": ["+//    System.err.println(\"Setting position \" + pos + \" in doc [\" + _doc.getText() + \"]\");", "+    assert (pos >= 0) && (pos <= _doc.getLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f18512add5a33333f56f260ed0c2a1a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "commitAfterChange": "6082e28d363f7796f6c9506e0c82e9e5f29262e2", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 138, "signatureBeforeChange": "   private void _closeProject()", "signatureAfterChange": "   private void _closeProject()", "diff": ["-    for(OpenDefinitionsDocument d: projDocs){", "-      _model.closeFile(d);", "-    }", "+//    for(OpenDefinitionsDocument d: projDocs){", "+//      _model.closeFile(d);", "+//    }", "+    closeFiles(projDocs);", "+    _close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f188d0b78e84cd8a6024b310e88b2613", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": "     @Override public Type visit(SuperMethodCall node)", "signatureAfterChange": "     @Override public Type visit(SuperMethodCall node)", "diff": ["-        // TODO: Check accessibility of method", "+        checkAccessibility(inv.method(), node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f18fdea0695df4d6d44a3b0a3ee7a9d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 442, "methodNumberAfterChange": 340, "signatureBeforeChange": "    final private boolean jj_3R_199()", "signatureAfterChange": "    final private boolean jj_3R_202()", "diff": ["-", "-  final private boolean jj_3R_199() {", "-    if (jj_scan_token(THROW)) return true;", "-    if (jj_3R_102()) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_202() {", "+    if (jj_scan_token(THROW)) return true;", "+    if (jj_3R_105()) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1924ffd4d89603cfb1eceea78777541", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/Option.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   void removeListener(Configuration c, OptionListener<T> l)", "signatureAfterChange": "   void removeListener(Configuration c, OptionListener<T> l)", "diff": ["-  /** magic listener-bag remover */", "+  /** Magic listener-bag remover */", "-    if (v==null) return;", "-    if (v.remove(l) && v.size() == 0) {", "-      listeners.remove(c);", "-    }", "+    if (v != null && v.remove(l) && v.size() == 0) listeners.remove(c);  // v.remove(l) has a side effect!"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f195f5cf2d3fed2cd0bda480dd0de82f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "      public String toString()", "diff": ["-  public String toString() { return \"JListNavigator\" + _model.toString(); }", "+  public String toString() { return _model.toString(); } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1967063f75a8c4d832f8817512ae721", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsController.java", "commitBeforeChange": "4323cde44353bf75af5409bb82963021b992fdd6", "commitAfterChange": "477cc9aa76ddc70908b0e1223c1ab0d83476c65e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void verifyText(VerifyEvent e)", "signatureAfterChange": "     public void verifyText(VerifyEvent e)", "diff": ["-      System.out.println(\"checking for edit legality\");", "-        System.out.println(\"nope\");", "+        // EditCondition says we can't", "-      System.out.println(\"yep\");", "-      ", "-      StyledText pane = _view.getTextPane();", "-      int caretPos = pane.getCaretOffset();", "+      StyledText pane = _view.getTextPane();", "+      int caretPos = pane.getCaretOffset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a53fc3377353fc2dfb1ac601fc9aa5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 449, "methodNumberAfterChange": 376, "signatureBeforeChange": "    final private boolean jj_3R_152()", "signatureAfterChange": "    final private boolean jj_3R_153()", "diff": ["+  final private boolean jj_3R_153() {", "+    if (jj_3R_105()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_191()) { jj_scanpos = xsp; break; }", "+    }", "-  final private boolean jj_3R_152() {", "-    if (jj_3R_104()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_190()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1b18f52d77486275f9a107334bfbbfa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "76c0b2960b62020d46b810955623e0af759eee20", "commitAfterChange": "936042cad9bfa0086510cc58a96357306371fb07", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testCompileWithPackageStatementInsideClass() throws BadLocationException, IOException,      InterruptedException", "signatureAfterChange": "   public void testCompileWithPackageStatementInsideClass() throws BadLocationException, IOException,      InterruptedException", "diff": ["+    debug.logStart();", "+    ", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1b2d65d318513c8542e2942fc54bf0a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4ea2cd518855e40df6753e4f4157e51bfa3110ce", "commitAfterChange": "4741154917524eb52199eddabe5e1780caea0eb7", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "   public MainFrame(int rmiPort)", "signatureAfterChange": "   public MainFrame(int rmiPort)", "diff": ["+    // Set frame icon", "+    setIconImage(getIcon(\"drjava64.png\").getImage());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1e90a4fc1372fc2ec1c7ea9dd62a152", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "dab158c5d408db6c4f930265bca0246d6ef37f1b", "commitAfterChange": "036a8027e2377c96155d3219b37dda9670c5f5a5", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public static boolean isAncestorOf(File ancestor, File f)", "signatureAfterChange": "   public static boolean isAncestorOf(File ancestor, File f)", "diff": ["+    _log.log(\"ancestor = \" +ancestor + \"     f = \" + f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1f5ac25f8965053e9ae00aaf114b810", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlusTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testAddSpaces() throws javax.swing.text.BadLocationException", "signatureAfterChange": "   public void testAddSpaces() throws javax.swing.text.BadLocationException", "diff": ["-    assertEquals(\"foo\\n   bar\", _doc.getText(0, 10));", "+    assertEquals(\"foo\\n   bar\", _doc.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1f69bbe8f9f99f6728e0c2b8e3bd650", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void startInterpreterJVM()", "signatureAfterChange": "   public void startInterpreterJVM()", "diff": ["-//      Utilities.showDebug(\"Calling invokeSlave(\" + jvmArgs + \", \" + _startupClasspath + \")\");", "-      invokeSlave(jvmArgsArray, _startupClasspath);", "+//      Utilities.showDebug(\"Calling invokeSlave(\" + jvmArgs + \", \" + _startupClasspath + \", \" + _model.getWorkingDirectory() +\")\");", "+      invokeSlave(jvmArgsArray, _startupClassPath, _workDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f213652a913c5b469f583812d0ef30b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "        public String getText()", "signatureAfterChange": "        public String getText()", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f21cc1fa0cc392f66070139cdfa9bfe7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 347, "methodNumberAfterChange": 877, "signatureBeforeChange": "    final private boolean jj_3R_401()", "signatureAfterChange": "    final private boolean jj_3R_409()", "diff": ["-", "-  final private boolean jj_3R_401() {", "-    if (jj_scan_token(MINUS_ASSIGN)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_409() {", "+    if (jj_scan_token(MINUS_ASSIGN)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f22b955cdbdb042ad19e8bf8d58d5ba1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 349, "methodNumberAfterChange": 575, "signatureBeforeChange": "    final private boolean jj_3R_358()", "signatureAfterChange": "    final private boolean jj_3R_357()", "diff": ["-  final private boolean jj_3R_358() {", "-    if (jj_3R_366()) return true;", "-      if (jj_3R_374()) { jj_scanpos = xsp; break; }", "+  final private boolean jj_3R_357() {", "+    if (jj_3R_363()) return true;", "+      if (jj_3R_375()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f23683bfab778edc1876913d52a1119c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "520c98c03a1e651efb4dfbf7d7f2a55510c74658", "commitAfterChange": "3f953b8fb783fe3ca1b336468898f35cd9cde7db", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "       public void testIfThenStatement() throws ExceptionReturnedException", "signatureAfterChange": "       public void testIfThenStatement() throws ExceptionReturnedException", "diff": ["-    _interpreter.interpret(\"Boolean B = Boolean.TRUE;\" + text);", "+    _interpreter.interpret(text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f248852197c5b7b2b77d1d842baaa268", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void xtestEnumType15()", "signatureAfterChange": "   public void xtestEnumType15()", "diff": ["-    TigerUtilities.setTigerEnabled(true);", "+    setTigerEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f24a3dcf1e5bf04290fdeb22a77b4c0d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "aaf929e2f10e21e12d70415a67e84135593a5810", "commitAfterChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "      public static String getStartUpBanner()", "signatureAfterChange": "      public String getStartUpBanner()", "diff": ["-  public static String getStartUpBanner() { return getBanner(new File(System.getProperty(\"user.dir\"))); }", "+  public String getStartUpBanner() { return getBanner(_workingDirectory); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f24c760a03d1f0dcbb37f1ce95c68da5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public Object visit(IfThenElseStatement node)", "signatureAfterChange": "   public Class visit(IfThenElseStatement node)", "diff": ["-     */", "-    public Object visit(IfThenElseStatement node) {", "-        // Check the condition", "-        if (node.getCondition().acceptVisitor(this) != boolean.class) {", "-            throw new ExecutionError(\"condition.type\", node);", "-        }", "-", "-        node.getThenStatement().acceptVisitor(this);", "-        node.getElseStatement().acceptVisitor(this);", "-        return null;", "-    }", "+   */", "+  public Class visit(IfThenElseStatement node) {", "+    // Check the condition", "+    if (node.getCondition().acceptVisitor(this) != boolean.class) {", "+      throw new ExecutionError(\"condition.type\", node);", "+    }", "+    ", "+    node.getThenStatement().acceptVisitor(this);", "+    node.getElseStatement().acceptVisitor(this);", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f253afa17733f8d313af8c90b6d4f44b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "4117398987de5205499e8524a48aeb3a8a6b43ad", "commitAfterChange": "e433bba86704c86b158b09f6c33458c252eb4b1b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   private void _setupResourceLocPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupResourceLocPanel(ConfigPanel panel)", "diff": ["+    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.STICKY_INTERACTIONS_DIRECTORY,", "+                                                         \"Restore last working directory of the Interactions pane on startup\", this,", "+                                                         \"<html>Whether to restore the last working directory of the Interaction pane on startup,<br>\"+", "+                                                         \"or to always use the value of the \\\"user.home\\\" Java property<br>\"+", "+                                                         \"(currently \"+System.getProperty(\"user.home\")+\").\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2551cea72edcd7fc1d82a454b4ad67d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 307, "methodNumberAfterChange": 303, "signatureBeforeChange": "   void _saveAll()", "signatureAfterChange": "   void _saveAll()", "diff": ["-    simpleHourglassOn();", "+    hourglassOn();", "-    finally { simpleHourglassOff(); }", "+    finally { hourglassOff(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f25d43a2bcf5e5bda82389fadc4af188", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 602, "methodNumberAfterChange": 599, "signatureBeforeChange": "    final private boolean jj_3R_179()", "signatureAfterChange": "    final private boolean jj_3R_192()", "diff": ["-  final private boolean jj_3R_179() {", "+  final private boolean jj_3R_192() {", "-    if (jj_3R_100()) return true;", "+    if (jj_3R_102()) return true;", "-    if (jj_3R_238()) return true;", "-    return false;", "-  }", "+    if (jj_3R_266()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f269f9a15f77afeaec564c9bfc1aa2ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 557, "methodNumberAfterChange": 482, "signatureBeforeChange": "    final private boolean jj_3R_307()", "signatureAfterChange": "    final private boolean jj_3R_308()", "diff": ["+  final private boolean jj_3R_308() {", "+    if (jj_3R_377()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_422()) { jj_scanpos = xsp; break; }", "+    }", "-", "-  final private boolean jj_3R_307() {", "-    if (jj_3R_376()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_421()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2779ad3c35de8fe48089be792bea4a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeInterpreter.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public static Object[] interpretArguments(String key, Object[] args)", "signatureAfterChange": "   public static Object[] interpretArguments(String key, Object[] args)", "diff": ["-    ConstructorParametersDescriptor cpd = ", "-      (ConstructorParametersDescriptor)constructorParameters.get(key);", "+    ConstructorParametersDescriptor cpd = constructorParameters.get(key);", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f28301403161b306ed3ddd5c9c94b038", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "   public TypeData forComplexMethodInvocation(ComplexMethodInvocation that)", "signatureAfterChange": "   public TypeData forComplexMethodInvocation(ComplexMethodInvocation that)", "diff": ["-    if (!assertFound(context, that.getEnclosing()) || context==null) {return null;}", "-  ", "+    if (! assertFound(context, that.getEnclosing()) || context == null)  return null;", "+    ", "-    checkAccessibility(that, context.getSymbolData().getMav(), context.getSymbolData().getName(), context.getSymbolData(),", "-                       _data.getSymbolData(), \"class or interface\", true);", "-", "+    checkAccessibility(that, context.getSymbolData().getMav(), context.getSymbolData().getName(), ", "+                       context.getSymbolData(), _data.getSymbolData(), \"class or interface\", true);", "-    if (inStaticMethod()) { context = context.getSymbolData();}", "+    // WHICH IS WRONG.  If the method call has an explicit receiver object, this property is IRRELEVANT.g", "+//    if (inStaticMethod()) { context = context.getSymbolData();}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f29cf8eb60d526fabcc9e194fbe46a1b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/SlaveJVMRunner.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private static void _showErrorMessage(String cause, Throwable t)", "signatureAfterChange": "   private static void _showErrorMessage(String cause, Throwable t)", "diff": ["-    else if (! Utilities.TextAreaMessageDialog.TEST_MODE) System.out.println(msg);", "+    else if (! Utilities.TEST_MODE) System.out.println(msg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f29e35ebc71bb2c963c3fb808bd7eb9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlus.java", "commitBeforeChange": "558f3e76b0939d235eb8771fbc6a284d80a06f72", "commitAfterChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc, int pos)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc,                           BraceReduction reducedModel,                           int pos)", "diff": ["-  public void indentLine(DefinitionsDocument doc, int pos) {", "+  public void indentLine(DefinitionsDocument doc, ", "+                         BraceReduction reducedModel, ", "+                         int pos)", "+  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2b5730f06b7312a26281aa9e96b645b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentRuleAction.java", "commitBeforeChange": "558f3e76b0939d235eb8771fbc6a284d80a06f72", "commitAfterChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public abstract void indentLine(DefinitionsDocument doc, int pos);", "signatureAfterChange": "   public abstract void indentLine(DefinitionsDocument doc,                                    BraceReduction reducedModel,                                   int pos);", "diff": ["-  public abstract void indentLine(DefinitionsDocument doc, int pos);", "+  public abstract void indentLine(DefinitionsDocument doc, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2b7941ae9e9924a1778826cf6f24d91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "0fb45818396fd0f22d5caa4d32dda7936589092c", "commitAfterChange": "50fc18100c630eff6fad096902bce85c20d6d172", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void init(UIAdapter adapter)", "signatureAfterChange": "   public void init(UIAdapter adapter)", "diff": ["+    performCommand(\"classpath \" + _model.getClasspath());", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2d49b62ff9121738b4f10245c6f9ab8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "   protected static void createAccessors(SymbolData sd, File file)", "signatureAfterChange": "   protected static void createAccessors(SymbolData sd, File file)", "diff": ["-                                       new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, mavStrings), ", "+                                       new ModifiersAndVisibility(SourceInfo.NO_INFO, mavStrings), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e32b33401aaf7610a52e0c278081a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 359, "methodNumberAfterChange": 357, "signatureBeforeChange": "    final private boolean jj_3R_308()", "signatureAfterChange": "    final private boolean jj_3R_309()", "diff": ["-", "-  final private boolean jj_3R_308() {", "-    if (jj_3R_346()) return true;", "+  final private boolean jj_3R_309() {", "+    if (jj_3R_347()) return true;", "-      if (jj_3R_367()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_368()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e3af5161743b96d2dfa89316eaed18", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fee21edb1b15f1499b5409a250cdb90d3f204739", "commitAfterChange": "e100da4da75b9cbdfc04df45bf52679ed811f23a", "methodNumberBeforeChange": 351, "methodNumberAfterChange": 362, "signatureBeforeChange": "      private void _openProjectUpdate()", "signatureAfterChange": "      private void _openProjectUpdate()", "diff": ["+      _autoRefreshAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2eab2b5728ff866928d486ed7d63424", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "00f79f8f4066e601ad05fa98265f6d88ea266cf5", "commitAfterChange": "c0f364c039dc3bd9aa615c971e27b8fb38745916", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 79, "signatureBeforeChange": "   protected boolean tryToDeletePath(TreePath tp)", "signatureAfterChange": "   protected boolean tryToDeletePath(TreePath tp)", "diff": ["-      ((DefaultTreeModel)_tree.getModel()).nodeStructureChanged(parent);", "+      getModel().nodeStructureChanged(parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2f8ee1eb3104d3eff36c66e8552c8b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "f6810ad68cbb0aaa0d9f5ff0052437da87098ab7", "commitAfterChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public int findNextEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "signatureAfterChange": "   public int findNextEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "diff": ["+      ", "+      if (i == text.length()) reducedPos = ERROR_INDEX; // No matching char was found", "+      _storeInCache(key, reducedPos);", "-    // Return position of matching char or ERROR_INDEX ", "-    ", "-    if (i == text.length()) reducedPos = ERROR_INDEX; // No matching char was found", "-    _storeInCache(key, new Integer(reducedPos));", "+    // Return position of matching char or ERROR_INDEX     "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2feafc2d6368185416a91ce6d49a0a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "2929449ae6587f03038439e75c91a7d89b0daaf8", "commitAfterChange": "c1ff07970240c7ef75ff58b54b7af66d381343b1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public IndentInfo getIndentInformation()", "signatureAfterChange": "   public IndentInfo getIndentInformation()", "diff": ["+    // get distance to the brace enclosing the current location", "+    rmb.getDistToEnclosingBraceCurrent(braceInfo);", "+    // get distance to the beginning of that brace's line", "+    rmc.getDistToCurrentBraceNewline(braceInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f30898daf0b75d5a9649dec345ab1da0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "24a1f858d68df0b918509903332d1ccee255eb85", "commitAfterChange": "4a3f93e2a406e3962e60f635bd24485059967bca", "methodNumberBeforeChange": 392, "methodNumberAfterChange": 391, "signatureBeforeChange": "     public void hourglassOn()", "signatureAfterChange": "     public void hourglassOn()", "diff": ["-      _menuBar.setEnabled(false);", "+      // _menuBar.setEnabled(false); // causes problems on Mac OS 10.6; make sure this runs in the event thread?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3248c1f3947d7a0315095b3a4c837df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "    protected void createToString(SymbolData sd)", "signatureAfterChange": "    protected void createToString(SymbolData sd)", "diff": ["-                                   new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, mavStrings), ", "+                                   new ModifiersAndVisibility(SourceInfo.NO_INFO, mavStrings), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f327043fbdaf1467d6d105847d770f9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "df9cbdf4ec8cbcbc3942b966a48a15d33dcac7ed", "commitAfterChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   private InterpreterJVM()", "signatureAfterChange": "   private InterpreterJVM() throws RemoteException", "diff": ["-  private InterpreterJVM() {", "+  private InterpreterJVM() throws RemoteException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f33205bd7388c869c917963e3f1c8ac7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersionTest.java", "commitBeforeChange": "022699e767ab37237911be36e7a5ac8176ca23b6", "commitAfterChange": "64485acb22f7b04ee86b39b46487ccbab2253387", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "        public void testVersionToFullVersion()", "signatureAfterChange": "        public void testVersionToFullVersion()", "diff": ["-    assertEquals(\"Java >7.0\", FUTURE.fullVersion().toString());", "+    assertEquals(\"Java 8.0\", JAVA_8.fullVersion().toString());", "+    assertEquals(\"Java >8.0\", FUTURE.fullVersion().toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f33de150d0c1b57ebdf4440bc9222f11", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 350, "methodNumberAfterChange": 598, "signatureBeforeChange": "    final private boolean jj_3R_603()", "signatureAfterChange": "    final private boolean jj_3R_294()", "diff": ["-", "-  final private boolean jj_3R_603() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_605()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_606()) return true;", "-    }", "+", "+  final private boolean jj_3R_294() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_305()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_306()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f376797ea013aa93d90df975b5d15fac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "ce944bab12f670cf565ac442d0f81c8cbf5e4ad0", "commitAfterChange": "40f75fb9af67065ae22daabe92401f806f2b3766", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testTypeBraceNotInCode() throws BadLocationException", "signatureAfterChange": "   public void testTypeBraceNotInCode() throws BadLocationException", "diff": ["-    ", "+    _log.log(\"calling invokeAndWait in testTypeBraceNotInCode\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f384285342a4a20b9196eaa3b87efa24", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/JavacGJCompiler.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public CompilerError[] compile(File sourceRoot, File[] files)", "signatureAfterChange": "   public CompilerError[] compile(File sourceRoot, File[] files)", "diff": ["-        new CompilerError(\"\",", "-                          -1,", "-                          -1,", "-                          \"Compile exception: \" + t,", "-                          false)", "+        new CompilerError(\"Compile exception: \" + t, false)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f38b9f372b2dec3ea96c53080b5457c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-    throws DebugException, BadLocationException, IOException, InterruptedException", "+    throws DebugException, BadLocationException, DocumentAdapterException,", "+    IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3929083024297b185a775d18684edba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "6730b2e413a99565d4307ad95e1ac5e98eebdf83", "commitAfterChange": "e174f3f9eb19ef8a7530f2c7ad04a839e38770be", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void xtestEnumType14()", "signatureAfterChange": "   public void xtestEnumType14()", "diff": ["-    TigerUtilities.setTigerEnabled(false);", "+    setTigerEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f397ffd20e7f2c58535618f88a5c8631", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 544, "methodNumberAfterChange": 427, "signatureBeforeChange": "    final private boolean jj_3R_192()", "signatureAfterChange": "    final private boolean jj_3R_195()", "diff": ["-  final private boolean jj_3R_192() {", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_102()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_266()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_195() {", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_105()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_270()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3acc503e1cbdbd6e5afa4b3ae2bbfce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "      public void cleanBuildDirectory() throws FileMovedException, IOException", "signatureAfterChange": "      public void cleanBuildDirectory()", "diff": ["-  public void cleanBuildDirectory() throws FileMovedException, IOException {", "+  public void cleanBuildDirectory()  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3b4fa73b634d67c1c482c8e54228ccf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/util/Log.java", "commitBeforeChange": "5e7a16013fcb5945eddc036e2d2d0ce3e14ba2d0", "commitAfterChange": "e1389ddb9dcb8a7d3a230cc1be322481e1c8fd6a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _init()", "signatureAfterChange": "   protected void _init()", "diff": ["-          Utilities.show(\"Could not create log: \" + ioe);", "+//          Utilities.show(\"Could not create log: \" + ioe);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3c35de97c448004e2d8558547f2ce2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "51bfc4d668bc1673b008afd130ba536a07f9c69d", "commitAfterChange": "332b6e452982977da36f3fe748b79e9b0c3888de", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": "          public void currThreadDied()", "signatureAfterChange": "          public void currThreadDied()", "diff": ["+", "+      // Make sure we're at the prompt", "+      // (This should really be fixed in InteractionsPane, not here.)", "+      _interactionsPane.setCaretPosition(_model.getInteractionsFrozenPos());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3c3b2b2cb7b23cd510c56fc9746560e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 571, "methodNumberAfterChange": 372, "signatureBeforeChange": "    final private boolean jj_3R_363()", "signatureAfterChange": "    final private boolean jj_3R_362()", "diff": ["+", "+  final private boolean jj_3R_362() {", "+    if (jj_3R_370()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_387()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_363() {", "-    if (jj_3R_371()) return true;", "-      if (jj_3R_388()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3ed020c1d39c766d6799912d7f09cfe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "97a825e752ef3da28458a0080f0990b0f0659788", "commitAfterChange": "3f50a00dbfaba534529de5a114a9d7c30612e9a7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testGlassPaneEditableState()", "signatureAfterChange": "   public void testGlassPaneEditableState()", "diff": ["+    ", "+    Utilities.clearEventQueue();", "-    ", "+            ", "+    Utilities.clearEventQueue();", "+    ", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f42332609bc264281b11e52178f9292f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecurUtil.java", "commitBeforeChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "commitAfterChange": "34d03e4ba66c612a034017381b72d822fe9c84d0", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public static String arrayToString(long[] array, ArrayStringMode stringMode)", "signatureAfterChange": "   public static String arrayToString(long[] array, ArrayStringMode stringMode)", "diff": ["-          else { result.append(\", \"); }", "+          else { result.append(stringMode.delimiter()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f444eca1743942d03aa6c5fa4b7afee5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 294, "methodNumberAfterChange": 595, "signatureBeforeChange": "    final private boolean jj_3R_386()", "signatureAfterChange": "    final private boolean jj_3R_386()", "diff": ["-  final private boolean jj_3R_386() {", "-    if (jj_scan_token(FINAL)) return true;", "-    return false;", "+", "+  final private boolean jj_3R_386() {", "+    if (jj_3R_176()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4595f9c817d615a8d132b18cf5fd272", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 406, "signatureBeforeChange": "    final private boolean jj_3R_357()", "signatureAfterChange": "    final private boolean jj_3R_353()", "diff": ["-    if (jj_scan_token(GREATER_OR_EQUAL)) return true;", "-    if (jj_3R_337()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_353() {", "+    if (jj_scan_token(EQUAL)) return true;", "+    if (jj_3R_331()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f46c0f7047d234c49522624d10104e61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "     public Object visit(ShiftLeftExpression node)", "signatureAfterChange": "   public Class visit(ShiftLeftExpression node)", "diff": ["+   */", "+  public Class visit(ShiftLeftExpression node) {", "+    Class c = visitShiftExpression(node);", "+    ", "+    Node  ln = node.getLeftExpression();", "+    Node  rn = node.getRightExpression();", "+    ", "+    // Compute the expression if it is constant", "+    if (ln.hasProperty(NodeProperties.VALUE) &&", "+        rn.hasProperty(NodeProperties.VALUE)) {", "+      node.setProperty", "+        (NodeProperties.VALUE,", "+         InterpreterUtilities.shiftLeft", "+           (NodeProperties.getType(node),", "+            ln.getProperty(NodeProperties.VALUE),", "+            rn.getProperty(NodeProperties.VALUE)));", "+    }", "+    return c;", "+  }", "-     */", "-    public Object visit(ShiftLeftExpression node) {", "-        Class c = visitShiftExpression(node);", "-", "-        Node  ln = node.getLeftExpression();", "-        Node  rn = node.getRightExpression();", "-", "-        // Compute the expression if it is constant", "-        if (ln.hasProperty(NodeProperties.VALUE) &&", "-            rn.hasProperty(NodeProperties.VALUE)) {", "-            node.setProperty", "-                (NodeProperties.VALUE,", "-                 InterpreterUtilities.shiftLeft", "-                     (NodeProperties.getType(node),", "-                      ln.getProperty(NodeProperties.VALUE),", "-                      rn.getProperty(NodeProperties.VALUE)));", "-        }", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f478bbfff9b74d8d729d0373e2a978b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6d9f2ce37ba22041a5b2840cffbd0f66339165b6", "commitAfterChange": "b153c43e59717c98f32c67f14d61a00a81016991", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 382, "signatureBeforeChange": "    final private boolean jj_3R_503()", "signatureAfterChange": "    final private boolean jj_3R_506()", "diff": ["-  final private boolean jj_3R_503() {", "-    if (jj_3R_505()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_506()) return true;", "-    }", "+", "+  final private boolean jj_3R_506() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_508()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_509()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f49527f3eb3a5b6ff13cbe0e823bf9f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/SlaveJVMRunner.java", "commitBeforeChange": "6f65660ac59d60c67824b69ecafc847d84a92da8", "commitAfterChange": "8279bc33117c74621df6401dedd10a0cae247a2c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public static void main(String[] args)", "signatureAfterChange": "   public static void main(String[] args)", "diff": ["-        // Note that both of these calls result in unchecked warnings", "-        // from GJ, since they have lost the parametric typing information.", "-        // The warnings, if you're curious, are:", "-        //", "-        // warning: unchecked call to registerSlave(SlaveType) as a member", "-        // of the raw type edu.rice.cs.util.newjvm.MasterRemote", "-        // warning: unchecked method invocation:", "-        // start(edu.rice.cs.util.newjvm.MasterRemote<SlaveType>) in ", "-        // edu.rice.cs.util.newjvm.SlaveRemote is applied to", "-        // (edu.rice.cs.util.newjvm.MasterRemote)", "+        // start the slave before notifying the master", "-        javax.swing.JOptionPane.showMessageDialog(null, e);", "+        //javax.swing.JOptionPane.showMessageDialog(null, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f49c0da267c9ec6c7aab89e803c7d8ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "d33d42f5f56aa9f97fa7ee5954a0170706bf34dc", "commitAfterChange": "d94a1a3c2d24d89ea1f580460a5e45b2a0d432b1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ProjectPropertiesFrame(MainFrame mf, File projFile)", "signatureAfterChange": "   public ProjectPropertiesFrame(MainFrame mf, File projFile)", "diff": ["+        reset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4af8b079eb59c51885a86aa5a5b6a7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 613, "methodNumberAfterChange": 343, "signatureBeforeChange": "    final private boolean jj_3R_294()", "signatureAfterChange": "    final private boolean jj_3R_371()", "diff": ["+  final private boolean jj_3R_371() {", "+    if (jj_3R_100()) return true;", "+    if (jj_3R_379()) jj_scanpos = xsp;", "-", "-  final private boolean jj_3R_294() {", "-    if (jj_3R_304()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_305()) jj_scanpos = xsp;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4cd2272fd09b4bf3a0b93d72d632d50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 418, "methodNumberAfterChange": 756, "signatureBeforeChange": "    final private boolean jj_3R_599()", "signatureAfterChange": "    final private boolean jj_3R_375()", "diff": ["-", "-  final private boolean jj_3R_599() {", "-    if (jj_3R_104()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_604()) jj_scanpos = xsp;", "-    return false;", "-  }", "+  final private boolean jj_3R_375() {", "+    if (jj_3R_107()) return true;", "+    if (jj_3R_428()) jj_scanpos = xsp;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4d7ed215e0f2af24ffc42208c571a96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   static FileConfiguration _initConfig() throws IllegalStateException", "signatureAfterChange": "   static FileConfiguration _initConfig() throws IllegalStateException", "diff": ["-    final File propFile = _propertiesFile;    // a static variable shared across configurations in tests", "-    ", "-    try { propFile.createNewFile(); }               // be nice and ensure a config file if there isn't one", "+    try { _propertiesFile.createNewFile(); }               // be nice and ensure a config file if there isn't one", "-    config = new FileConfiguration(propFile);", "+    config = new FileConfiguration(_propertiesFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4e23aecaccc7e155a723fe14c4e710f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "073854cddec32cfa8210669804563378e1d96566", "commitAfterChange": "512f2d01a44aebe9e820ea2b6904a7d9ee6beac7", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public static String readFileAsSwingText(final File file) throws IOException", "signatureAfterChange": "   public static String readFileAsSwingText(final File file) throws IOException", "diff": ["-    * including \"\\n\", \"\\r\", and \"\\r\\n\" are converted to \"\\n\". */", "+    * including \"\\n\", \"\\r\", and \"\\r\\n\" are converted to \"\\n\". Characters below 32, except for newlines, are changed to spaces. */", "+        else if ((c < 32) && (c != '\\n')) buf.append(' ');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4e627478417ee35d0be48c338b0a612", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 388, "signatureBeforeChange": "    final private boolean jj_3R_315()", "signatureAfterChange": "    final private boolean jj_3R_322()", "diff": ["-", "-  final private boolean jj_3R_315() {", "-    if (jj_3R_334()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_348()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_322() {", "+    if (jj_3R_341()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_355()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4f29a4e5c8ee5a2630c03d83ef9d60c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/gui/Main.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Main()", "signatureAfterChange": "   public Main()", "diff": ["-//    listeners.put(STOP_ACTION,     stopAction);", "+    listeners.put(STOP_ACTION,     stopAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f513a9c6623c41d6c55e669cf16cd0e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 588, "methodNumberAfterChange": 585, "signatureBeforeChange": "    final private boolean jj_3R_573()", "signatureAfterChange": "    final private boolean jj_3R_269()", "diff": ["-  final private boolean jj_3R_573() {", "+  final private boolean jj_3R_269() {", "-    if (jj_3R_579()) {", "+    if (jj_3R_339()) {", "-      if (jj_3R_580()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_340()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f518e8a8eddb12478f9ff0b209aeaa1a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "818d684134925745129d103adc256ed04e291a53", "commitAfterChange": "b5c5207541d6b51d1a0355eaf7cbf64875cccd1f", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "   private void _setUpStatusBar()", "signatureAfterChange": "   private void _setUpStatusBar()", "diff": ["-    _fileNameField.setBorder(new ", "- CompoundBorder(new EmptyBorder(2,2,2,2),", "-         new CompoundBorder(new BevelBorder(BevelBorder.LOWERED),", "-       new EmptyBorder(2,2,2,2))));", "-    /*", "+    ", "+    ", "-    _currLocationField.setFont(_fileNameField.getFont().deriveFont(Font.PLAIN));", "-    _currLocationField.setBorder(new ", "- CompoundBorder(new EmptyBorder(2,2,2,2),", "-         new CompoundBorder(new BevelBorder(BevelBorder.LOWERED),", "-       new EmptyBorder(2,2,2,2))));", "-    // _fileNameField.setBorder(new javax.swing.border.EmptyBorder(2,2,2,2));", "-    // _fileNameField.setBorder(new javax.swing.border.BevelBorder(BevelBorder.LOWERED));*/", "-   // _statusBar = new JPanel();", "-    getContentPane().add(_fileNameField, BorderLayout.SOUTH);", "+    _currLocationField.setFont(_currLocationField.getFont().deriveFont(Font.PLAIN));", "+    ", "+    _statusBar = new JPanel( new BorderLayout() );", "+    _statusBar.add( _fileNameField, BorderLayout.WEST );", "+    _statusBar.add( _currLocationField, BorderLayout.EAST );", "+    _statusBar.setBorder(new ", "+               CompoundBorder(new EmptyBorder(2,2,2,2),", "+                              new CompoundBorder(new BevelBorder(BevelBorder.LOWERED),", "+                                                 new EmptyBorder(2,2,2,2))));", "+    getContentPane().add(_statusBar, BorderLayout.SOUTH);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f51a0c25adf1d3fda8ae85eff13bc58a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ddcbad2909e9c9411b7283368e21d7790422a21d", "commitAfterChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "    private void _revert()", "signatureAfterChange": "    private void _revert()", "diff": ["+      _currentDefPane.hasWarnedAboutModified(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5377495293a027682d64aef0c5a206c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/swing/SwingUtil.java", "commitBeforeChange": "dba5d2158724820f410d4efff37289045b3aca4c", "commitAfterChange": "6db2338d4c58e83974c8e6232ba8e48286d65b5e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public static JFrame makeMainApplicationFrame(String title, int width, int height)", "signatureAfterChange": "   public static JFrame makeMainApplicationFrame(String title, int width, int height)", "diff": ["-    // cast is necessary for 1.4 compatibility", "-    ((JComponent) result.getContentPane()).setPreferredSize(new Dimension(width, height));", "+    result.getContentPane().setPreferredSize(new Dimension(width, height));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f539a2bf943b146302b1fd4723b71028", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public void testMultipleCallsToFindNext() throws BadLocationException", "signatureAfterChange": "    public void testMultipleCallsToFindNext() throws BadLocationException", "diff": ["-    _testFindNextSucceeds(_frm, CONTINUE, 0, 12);", "-    _testFindNextSucceeds(_frm, CONTINUE, 0, 25);", "-    _testFindNextSucceeds(_frm, CONTINUE, 0, 40);", "+    _testFindNextSucceeds(_frm, 0, 12);", "+    _testFindNextSucceeds(_frm, 0, 25);", "+    _testFindNextSucceeds(_frm, 0, 40);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f540985fd5fe07ad8853b71cf6038120", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "e21c87a73c9cc18626d8ac0032c171af7d12b5c4", "commitAfterChange": "5c74c26bc0d0172fae7fedb4ceddf9beb8fb625d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f54de5db1e75954b8ddd3533081b7ee3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "1333ad40debe120f6d8fd5fb5ff36c57ce6b1ccf", "commitAfterChange": "3907c0e8430f2d380a191d1ad8364cbfdd1d1b28", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testSuiteFinished(JUnitError[] errors)", "signatureAfterChange": "   public void testSuiteFinished(JUnitError[] errors)", "diff": ["+      _log.log(re.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f584e1d31cddc52d28125818d8bd608c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected void _addActions()", "signatureAfterChange": "   protected void _addViewActions()", "diff": ["-  protected void _addActions() {", "+  protected void _addViewActions() {", "+    // Prevent any edits before the prompt!", "+    _adapter.setEditCondition(new InteractionsEditCondition());", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5a3ce56707d4591dc079400ec6ad067", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 538, "methodNumberAfterChange": 423, "signatureBeforeChange": "    final private boolean jj_3R_194()", "signatureAfterChange": "    final private boolean jj_3R_197()", "diff": ["-  final private boolean jj_3R_194() {", "-    if (jj_scan_token(SWITCH)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_102()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_scan_token(LBRACE)) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_269()) { jj_scanpos = xsp; break; }", "-    }", "-    if (jj_scan_token(RBRACE)) return true;", "+", "+  final private boolean jj_3R_197() {", "+    if (jj_scan_token(SWITCH)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_105()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_scan_token(LBRACE)) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_273()) { jj_scanpos = xsp; break; }", "+    }", "+    if (jj_scan_token(RBRACE)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5af28a23699eccd017561bda880869e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "303ddb2c47275a1e2c25f273f6ed234a39d50962", "commitAfterChange": "05170b9ac5bef61612128757c005ac85c724ec32", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      public void saveProject(String filename) throws IOException", "signatureAfterChange": "      public void saveProject(String filename) throws IOException", "diff": ["-    System.out.println(\"base is \" + base);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5d78f7aa9bcd57621c6568fa9471941", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "     public Object visit(ExclusiveOrAssignExpression node)", "signatureAfterChange": "   public Class visit(ExclusiveOrAssignExpression node)", "diff": ["+   */", "+  public Class visit(ExclusiveOrAssignExpression node) {", "+    return visitBitwiseAssign(node);", "+  }", "-     */", "-    public Object visit(ExclusiveOrAssignExpression node) {", "-        return visitBitwiseAssign(node);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5d8d2e5205818f514dc1fbdb22065cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "d35e32a1de226d87150b531ef5ce1ae4b12d8aad", "commitAfterChange": "45d30ac03b86f4d49d4aca60c27da3c6f00c26ab", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public File getMainClassContainingFile()", "signatureAfterChange": "   public File getMainClassContainingFile()", "diff": ["+    // maybe we have an inner class; remove names from the end and see if we find", "+    // a file for it that way.", "+    // Example:", "+    // some/package/SomeClass/Inner/AnotherInner.java (not found)", "+    // some/package/SomeClass/Inner.java (not found)", "+    // some/package/SomeClass.java (not found)", "-    File tempFile = new File(getProjectFile().getParent(), path+\".java\");", "-    ", "+    File tempFile = new File(getProjectRoot(), path+\".java\");", "-      tempFile = new File(getProjectFile().getParent(), path+\".java\");", "+      tempFile = new File(getProjectRoot(), path+\".java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5e1558c3db3c9a551cb7c234abc03a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/DelayedInterrupter.java", "commitBeforeChange": "dba5d2158724820f410d4efff37289045b3aca4c", "commitAfterChange": "6db2338d4c58e83974c8e6232ba8e48286d65b5e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DelayedInterrupter(Thread worker, final int timeToInterrupt)", "signatureAfterChange": "   public DelayedInterrupter(Thread worker, final int timeToInterrupt)", "diff": ["+    _interrupter.setDaemon(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f5e3ff3f63546fe5250611a4c58515", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "101c103fed282ea73966b5bc0dce7152a188fba5", "commitAfterChange": "2bbdbef8ef11cd93c30f52236eee8443bfc75e9d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private InterpretResult interpret(String input, Interpreter interpreter)", "signatureAfterChange": "      private InterpretResult interpret(String input, Interpreter interpreter)", "diff": ["+    // set the thread context class loader, this way NextGen and Mint can use the interpreter's class loader", "+    Thread.currentThread().setContextClassLoader(_interpreterLoader);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f613590acd3dffda86e00cfaa71b3033", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1de5cb95fee280565741d04f9d0c9ba9427f28c2", "commitAfterChange": "c12f68e3bc37fa5484d2cfb01f6ad9fc1d626551", "methodNumberBeforeChange": 295, "methodNumberAfterChange": 299, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["+    /*", "+     * Phil Repicky -smallproj", "+     * 2/14/2005", "+     * Make these do something:", "+     * _navPaneFolderPopupMenu.add(\"Open a File in this Folder Action\");", "+     * _navPaneFolderPopupMenu.add(\"Make a New File in this Folder Action\");", "+     */", "+    _navPaneFolderPopupMenu.add(_newFileFolderAction);", "+    _navPaneFolderPopupMenu.add(_openOneFolderAction);", "+    _navPaneFolderPopupMenu.add(_openAllFolderAction);", "+    ", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f627e5be9e76b78e57308a136e247b55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 435, "methodNumberAfterChange": 430, "signatureBeforeChange": "    final private boolean jj_3R_369()", "signatureAfterChange": "    final private boolean jj_3R_370()", "diff": ["+  final private boolean jj_3R_370() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_164()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_353()) return true;", "-    if (jj_3R_163()) return true;", "-    if (jj_3R_352()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f636cecbc34e87ec30db76f8e793ee30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecurUtil.java", "commitBeforeChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "commitAfterChange": "34d03e4ba66c612a034017381b72d822fe9c84d0", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public static String arrayToString(double[] array, ArrayStringMode stringMode)", "signatureAfterChange": "   public static String arrayToString(double[] array, ArrayStringMode stringMode)", "diff": ["-          else { result.append(\", \"); }", "+          else { result.append(stringMode.delimiter()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f67dbc2861762fa8a375cb1dca51aa04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "72163ebd454d71c0955c00c7a1a43c6fa207331b", "commitAfterChange": "cdddd415c8ee9888478b5a253ffbb086fce1ed57", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _setUpAction(_cutAction, \"Cut\", \"Cut selected text to the clipboard\");", "-    _setUpAction(_copyAction, \"Copy\", \"Copy selected text to the clipboard\");", "-    _setUpAction(_pasteAction, \"Paste\", \"Paste text from the clipboard\");", "+    _setUpAction(cutAction, \"Cut\", \"Cut selected text to the clipboard\");", "+    _setUpAction(copyAction, \"Copy\", \"Copy selected text to the clipboard\");", "+    _setUpAction(pasteAction, \"Paste\", \"Paste text from the clipboard\");", "-    _cutAction.putValue(Action.NAME, \"Cut\");", "-    _copyAction.putValue(Action.NAME, \"Copy\");", "-    _pasteAction.putValue(Action.NAME, \"Paste\");", "+    cutAction.putValue(Action.NAME, \"Cut\");", "+    copyAction.putValue(Action.NAME, \"Copy\");", "+    pasteAction.putValue(Action.NAME, \"Paste\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f69035cf588a502fbb07e04ed3d2fd70", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 449, "methodNumberAfterChange": 444, "signatureBeforeChange": "    final private boolean jj_3R_417()", "signatureAfterChange": "    final private boolean jj_3R_427()", "diff": ["-", "-  final private boolean jj_3R_417() {", "-    if (jj_scan_token(IDENTIFIER)) return true;", "-    if (jj_3R_412()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_436()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_427() {", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    if (jj_3R_439()) return true;", "+      if (jj_3R_443()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f696988e18d6d059227ab8d4c95b1c72", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorCaretListener.java", "commitBeforeChange": "8c167429ba92c08453565171838e7b90a541e18d", "commitAfterChange": "a3306545963d95b8e7f45728ebf6e03a4f716f60", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void updateHighlight(int curPos)", "signatureAfterChange": "   public void updateHighlight(int curPos)", "diff": ["-", "+    //DrJava.consoleOut().println(\"updateHighlight: \" + curPos);", "+    //if (_positions == null) {", "+    //  DrJava.consoleOut().println(\"positions array is null!\");", "+    //}", "+      if (_positions[errorAfter] == null) {", "+        // Something is wrong here, but this is happening on warnings!", "+        //  Need to figure out why...", "+        //DrJava.consoleOut().println(\"Found a null position (1)!  index: \" + errorAfter);", "+        return;", "+      }", "+      Position p = _positions[errorBefore];", "+      //if (p == null) {", "+      //  DrJava.consoleOut().println(\"Found a null position (2)!  index: \" + errorBefore);", "+      //}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6b73c55fc53c6dc290fe0f056b66c02", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/repl/EclipseInteractionsModel.java", "commitBeforeChange": "1827cec0a07b944a36f95e36eebdc6666dc9617c", "commitAfterChange": "302914e42441eaa34fb8588c2f19600c7ec3298a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected void _notifyInterpreterResetFailed(Throwable t)", "signatureAfterChange": "   protected void _notifyInterpreterResetFailed(Throwable t)", "diff": ["-      ((InteractionsListener)_listeners.get(i)).interpreterResetFailed(t);", "+      _listeners.get(i).interpreterResetFailed(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6bcaa68aa4ba5aafa394a9c609112db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 709, "methodNumberAfterChange": 619, "signatureBeforeChange": "    final private boolean jj_3_19()", "signatureAfterChange": "    final private boolean jj_3_37()", "diff": ["+", "+  final private boolean jj_3_37() {", "+    if (jj_3R_83()) return true;", "-", "-  final private boolean jj_3_19() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_3R_90()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6e599a30d5aed626806a10f4d2a96d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyIntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "          public void testForConcreteMethodDefDoFirst()", "signatureAfterChange": "          public void testForConcreteMethodDefDoFirst()", "diff": ["-      ConcreteMethodDef cmd = new ConcreteMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      ConcreteMethodDef cmd = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "-                                                    new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                                    new Word(JExprParser.NO_SOURCE_INFO, \"methodName\"),", "+                                                    new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                                    new Word(SourceInfo.NO_INFO, \"methodName\"),", "-                                                    new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6fce1984ca0317dd8205740807264fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void resetInteractions()", "signatureAfterChange": "   public void resetInteractions()", "diff": ["-      String packageName = _definitionsDoc.getPackageName();", "-      File sourceRoot = _getSourceRoot(packageName);", "-      _resetInteractions(packageName, sourceRoot);", "+      File[] sourceRoots = getSourceRootSet();", "+      _resetInteractions(sourceRoots);", "-      _resetInteractions(\"\", null);", "+      _resetInteractions(new File[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70b609689a8026bde37aa13d2b19adb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/LongLiteral.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public LongLiteral(String rep)", "signatureAfterChange": "   public LongLiteral(String rep) throws NumberFormatException", "diff": ["-  public LongLiteral(String rep) {", "+  public LongLiteral(String rep) throws NumberFormatException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7162d6490bf7723c30cc3ffe764803c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "da631ae365e5ae3fe7064b60f098ede0150c39bb", "commitAfterChange": "574257b530483460a9c0ce0cc5577b7fd93532dd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public ErrorListPane()", "signatureAfterChange": "     public ErrorListPane()", "diff": ["-      setDocument(new SwingDocument());", "+      setDocument(new ErrorDocument(getErrorDocumentTitle()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f732c5ee0937355db226454595607993", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "commitAfterChange": "f938008597ce54d16e4a865d30f8ef062ea55d2f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "    protected void initThread(ProcessCreator pc)", "signatureAfterChange": "    protected void initThread(ProcessCreator pc)", "diff": ["-      PropertyMaps.ONLY.clearVariables();", "+      _pc.getPropertyMaps().clearVariables();", "+      _sb.append(\"Evaluated command line:\");", "+      _sb.append(_pc.evaluatedCommandLine());", "+      _sb.append('\\n');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f73b22364c09c21339ad8d477c7d49f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ReverseHighlighter.java", "commitBeforeChange": "2aadb81a716e2a196f82baa127c28e3225664fab", "commitAfterChange": "c4ec4fbaa86590f5d9d73c067159d69b14149c37", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Object addHighlight(int p0, int p1, Highlighter.HighlightPainter p) throws BadLocationException", "signatureAfterChange": "   public Object addHighlight(int p0, int p1, Highlighter.HighlightPainter p) throws BadLocationException", "diff": ["-    i.painter = p;", "+    i._painter = p;", "-    int insertPos = highlights.size();", "-    /*if ((!(p instanceof DefaultFrameHighlightPainter)) && (!(p instanceof DefaultUnderlineHighlightPainter))) {", "-     // insert solid painters after the frame and underline painters", "-     while (insertPos>0) {", "-     HighlightInfo hli = highlights.elementAt( insertPos-1 );", "-     if ((! (hli.getPainter() instanceof DefaultFrameHighlightPainter)) && ", "-     (! (hli.getPainter() instanceof DefaultUnderlineHighlightPainter))) {", "-     break;", "-     }", "-     --insertPos;", "-     }", "-     }*/", "+    int insertPos = _highlights.size();", "+", "-      while (insertPos>0) {", "-        HighlightInfo hli = highlights.elementAt( insertPos-1 );", "+      while (insertPos > 0) {", "+        HighlightInfo hli = _highlights.get( insertPos-1 );", "-      while (insertPos>0) {", "-        HighlightInfo hli = highlights.elementAt( insertPos-1 );", "+      while (insertPos > 0) {", "+        HighlightInfo hli = _highlights.get( insertPos-1 );", "-      while (insertPos>0) {", "-        HighlightInfo hli = highlights.elementAt( insertPos-1 );", "+      while (insertPos > 0) {", "+        HighlightInfo hli = _highlights.get( insertPos-1 );", "-    highlights.add(insertPos, i);", "+    _highlights.add(insertPos, i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f740ef2996161c142a14f8ba17685932", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "37449cba11f74bdf3921e2b515b5228eef23235b", "commitAfterChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   private void updateInfo()", "signatureAfterChange": "   private void updateInfo()", "diff": ["-      T item = (T)_matchList.getSelectedValue();", "+      T item = _matchList.getSelectedValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f750ad9ef44a9681bdd6445848f674d6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "72163ebd454d71c0955c00c7a1a43c6fa207331b", "commitAfterChange": "cdddd415c8ee9888478b5a253ffbb086fce1ed57", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 166, "signatureBeforeChange": "      private boolean _inDebugMode()", "signatureAfterChange": "      boolean inDebugMode()", "diff": ["-  private boolean _inDebugMode() {", "+  boolean inDebugMode() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f75802b696fe7d75035deaa2e6bef274", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 280, "methodNumberAfterChange": 224, "signatureBeforeChange": "     public File getSourceRoot() throws InvalidPackageException", "signatureAfterChange": "     public File getSourceRoot() throws InvalidPackageException", "diff": ["+     */", "+    public File getSourceRoot() throws InvalidPackageException { return _getSourceRoot(_packageName); }", "-     */", "-    public File getSourceRoot() throws InvalidPackageException {", "-//      Utilities.show(\"getSourceRoot() called on \" + this);", "-      if (_packageName == null) _packageName = getPackageName();", "-//      Utilities.show(\"getSourceRoot() returned \" + _getSourceRoot(_packageName));", "-      return _getSourceRoot(_packageName);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f76f167dee36f73685f4277c0c34e31b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/OpenDefinitionsDocument.java", "commitBeforeChange": "03dd354632fbfc12bf279640160bfd934404dc39", "commitAfterChange": "2714f88d04f312c23b21ec6a440193d44b7121ba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public File getFile() throws IllegalStateException;", "signatureAfterChange": "   public File getFile() throws IllegalStateException, FileMovedException;", "diff": ["-  public File getFile() throws IllegalStateException;", "+  public File getFile() throws IllegalStateException, FileMovedException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f77a6342979d6ce087714888f3e2d988", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 502, "methodNumberAfterChange": 678, "signatureBeforeChange": "    final private boolean jj_3R_193()", "signatureAfterChange": "    final private boolean jj_3R_192()", "diff": ["-", "-  final private boolean jj_3R_193() {", "-    if (jj_3R_87()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_253()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_192() {", "+    if (jj_3R_224()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_225()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7849b323717a9594def46eb4fb26925", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 481, "methodNumberAfterChange": 486, "signatureBeforeChange": "    final private boolean jj_3R_109()", "signatureAfterChange": "    final private boolean jj_3R_113()", "diff": ["-", "-  final private boolean jj_3R_109() {", "-    if (jj_3R_94()) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_113() {", "+    if (jj_3R_97()) return true;", "+    if (jj_scan_token(SEMICOLON)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f78ae590f75d99c044d1cd36a1673740", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "        private int _findNextOpenSquiggly(String text, int pos) throws BadLocationException", "signatureAfterChange": "        private int _findNextOpenCurly(String text, int pos) throws BadLocationException", "diff": ["-  private int _findNextOpenSquiggly(String text, int pos) throws BadLocationException {", "+  private int _findNextOpenCurly(String text, int pos) throws BadLocationException {", "-        if (!state.equals(ReducedModelState.FREE) || _isStartOfComment(text, i)", "+        if (!state.equals(FREE) || _isStartOfComment(text, i)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7b00ff518d1c8f6e97dba5b153e6a8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "96ad3855c918160b9e88b6e79e10e5c56e9643c0", "commitAfterChange": "321e79b1f242fd0fc2fe88ee000f7a52383c7144", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "   final public Expression shiftExpression() throws ParseException", "signatureAfterChange": "   final public Expression shiftExpression() throws ParseException", "diff": ["-      case RSIGNEDSHIFT:", "-      case RUNSIGNEDSHIFT:", "+      case RSSHIFT1:", "+      case RUSHIFT1:", "-      case RSIGNEDSHIFT:", "-        jj_consume_token(RSIGNEDSHIFT);", "+      case RSSHIFT1:", "+        jj_consume_token(RSSHIFT1);", "+        jj_consume_token(RSSHIFT2);", "-      case RUNSIGNEDSHIFT:", "-        jj_consume_token(RUNSIGNEDSHIFT);", "+      case RUSHIFT1:", "+        jj_consume_token(RUSHIFT1);", "+        jj_consume_token(RUSHIFT2);", "+        jj_consume_token(RUSHIFT3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7b877ba450a3a3de2c3647f4a623199", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/ConfigurationTool.java", "commitBeforeChange": "2de5de833fec6c0fefce3e0dfbb07764b1900707", "commitAfterChange": "fa036878036cfa9b3fdfb0b92616499d17bb99f7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "             public FileConfiguration evaluate()", "signatureAfterChange": "       public FileConfiguration evaluate()", "diff": ["-        (new Begin<FileConfiguration>() {", "-            public FileConfiguration evaluate() {", "-                try { ", "-                    PROPERTIES_FILE.createNewFile(); ", "-                    // be nice and ensure a config file ", "-                } catch(IOException e) { // IOException occurred ", "-                } ", "-                FileConfiguration config = ", "-                new FileConfiguration(PROPERTIES_FILE); ", "-                try { ", "-                    config.loadConfiguration(); ", "-                } catch(IOException e) { ", "-                }", "-                catch (Exception e) {", "-                  // problem parsing the config file. Just use defaults", "-                }", "-                return config;", "-            }", "+    (new Begin<FileConfiguration>() {", "+      public FileConfiguration evaluate() {", "+        try { ", "+          PROPERTIES_FILE.createNewFile(); ", "+          // be nice and ensure a config file ", "+        } catch(IOException e) { // IOException occurred ", "+        } ", "+        FileConfiguration config = ", "+          new FileConfiguration(PROPERTIES_FILE); ", "+        try { ", "+          config.loadConfiguration(); ", "+        }", "+        catch (Exception e) {", "+          // problem parsing the config file.", "+          // Use defaults and remember what happened (for the UI)", "+          config.resetToDefaults();", "+          config.storeStartupException(e);", "+        }", "+        return config;", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c87f8af278ae69c1a464c3ec1fcda5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 72, "signatureBeforeChange": "   @SuppressWarnings(\"unchecked\")   public static <T, R> Lambda2<Lambda<? super T, ? extends R>, T, R> applicationLambda()", "signatureAfterChange": "   @SuppressWarnings(\"unchecked\")   public static <T, R> Lambda2<Lambda<? super T, ? extends R>, T, R> applicationLambda()", "diff": ["-    // for some reason I have to convert to a raw type before the cast, or it's an error, not a warning", "-    return (Lambda2<Lambda<? super T, ? extends R>, T, R>) (Lambda2) ApplicationLambda.INSTANCE;", "+    return (Lambda2<Lambda<? super T, ? extends R>, T, R>) ApplicationLambda.INSTANCE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7d6d8c60f9d5722acbec2162de347d6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "30084d60ea1c92bd9e5a911d71d6555be6180e71", "commitAfterChange": "113afd3151c2b14c9d66bb242346ae4c872989d1", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public void replReturnedSyntaxError(String errorMessage, String interaction, int startRow, int startCol,                                       int endRow, int endCol )", "signatureAfterChange": "   public void replReturnedSyntaxError(String errorMessage, String interaction, int startRow, int startCol,                                       int endRow, int endCol )", "diff": ["-    edu.rice.cs.util.Pair<Integer,Integer> oAndL =", "+    edu.rice.cs.plt.tuple.Pair<Integer,Integer> oAndL =", "-    _notifySyntaxErrorOccurred(_document.getPromptPos() + oAndL.getFirst().intValue(),oAndL.getSecond().intValue());", "+    _notifySyntaxErrorOccurred(_document.getPromptPos() + oAndL.first().intValue(),oAndL.second().intValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7e3b8bad6a748d972fc79436ba368d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   private void _commentLine()", "signatureAfterChange": "   private void _commentLine()", "diff": ["-    *  @pre this.writeLock() and _reduced lock are already held! */", "+    * line to be commented out.  Also assumes that this.writeLock() and _reduced lock are already held. */", "-    try { insertString(_currentLocation - getCurrentCol(), \"//\", null); }", "+    try { insertString(_currentLocation, \"//\", null); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7fe08ae7b0e35d8f9be703e080e10ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "     public Object visit(MultiplyAssignExpression node)", "signatureAfterChange": "   public Class visit(MultiplyAssignExpression node)", "diff": ["+   */", "+  public Class visit(MultiplyAssignExpression node) {", "+    // Check the types", "+    Node  ln = node.getLeftExpression();", "+    Class lc = (Class)ln.acceptVisitor(this);", "+    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "+    ", "+    if (lc == null          || rc == null          ||", "+        lc == void.class    || rc == void.class    ||", "+        lc == boolean.class || rc == boolean.class ||", "+        !lc.isPrimitive()   || !rc.isPrimitive()) {", "+      throw new ExecutionError(\"multiplication.type\", node);", "+    }", "+    ", "+    // The left subexpression must be a variable", "+    if (!ln.hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"left.expression\", node);", "+    }", "+    ", "+    // Sets the type property of this node", "+    node.setProperty(NodeProperties.TYPE, lc);", "+    return lc;", "+  }", "-     */", "-    public Object visit(MultiplyAssignExpression node) {", "-        // Check the types", "-\tNode  ln = node.getLeftExpression();", "-        Class lc = (Class)ln.acceptVisitor(this);", "-        Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "-", "-        if (lc == null          || rc == null          ||", "-            lc == void.class    || rc == void.class    ||", "-            lc == boolean.class || rc == boolean.class ||", "-            !lc.isPrimitive()   || !rc.isPrimitive()) {", "-            throw new ExecutionError(\"multiplication.type\", node);", "-        }", "-        ", "-        // The left subexpression must be a variable", "-        if (!ln.hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"left.expression\", node);", "-        }", "-", "-        // Sets the type property of this node", "-        node.setProperty(NodeProperties.TYPE, lc);", "-        return lc;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8021de7eecfe87a8bb0b0b01dc9cc0e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/javadoc/NoJavadocAvailable.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void javadocAll(DirectorySelector select, FileSaveSelector saver)", "signatureAfterChange": "   public void javadocAll(DirectorySelector select, FileSaveSelector saver) throws IOException", "diff": ["-  public void javadocAll(DirectorySelector select, FileSaveSelector saver) {", "+  public void javadocAll(DirectorySelector select, FileSaveSelector saver) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8209441650f99b4bb8054466f09b95a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "53d061333fe3393f6569c1f553912f1a449482ad", "commitAfterChange": "12c8304e14a6d9eafe2f7093583d8040569150c1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testExitInteractions() throws EditDocumentException, InterruptedException", "signatureAfterChange": "   public void testExitInteractions() throws EditDocumentException, InterruptedException", "diff": ["-//    _log.log(\"testExitInteractions() completed\");", "+    _log.log(\"testExitInteractions() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f82af7cefe3726307af9d2caa14e0695", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public int getFirstNonWSCharPos(int pos, char[] whitespace, boolean acceptComments) throws BadLocationException", "signatureAfterChange": "   public int getFirstNonWSCharPos(int pos, char[] whitespace, boolean acceptComments) throws BadLocationException", "diff": ["-    readLock();", "+    acquireReadLock();", "-    finally { readUnlock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f82ddf5440c29417ce37ef3c714dc3e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "ea5caceb61fece070d7111a62941070cf2982769", "commitAfterChange": "997d67839eca4386dbc5f66cebcd8a080dee4cfc", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "signatureAfterChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "diff": ["+    boolean process = false;", "+    int state = 0;", "-      if (_keywords.contains(token)) {", "+", "+      //first check to see if we need highlighting", "+      process = false;", "+      if (_isType(token)) {", "+        //right now keywords incl prim types, so must put this first", "+        state = HighlightStatus.TYPE;", "+        process = true;", "+      } else if (_keywords.contains(token)) {", "+        state = HighlightStatus.KEYWORD;", "+        process = true;", "+      } else if (_isNum(token)) {", "+        state = HighlightStatus.NUMBER;", "+        process = true;", "+      }", "+", "+      if (process) {", "-                                              HighlightStatus.KEYWORD),", "+                                              state),", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f82ea8b00a41a1443da6e00f92664371", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void setBuildDirectory(File f)", "signatureAfterChange": "   public void setBuildDirectory(File f)", "diff": ["-  public void setBuildDirectory(File f) {", "-    _state.setBuildDirectory(f);", "-    if (f != null) ", "-      throw new UnsupportedOperationException(\"Cannot create new build directory without an interpreter\");", "-    _notifier.projectBuildDirChanged();", "+  /** Sets the class with the project's main method.  Degenerate version overridden in DefaultGlobalModel. */", "+  public void setBuildDirectory(File f) {", "+    _state.setBuildDirectory(f);", "+    _notifier.projectBuildDirChanged();", "+    setProjectChanged(true);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f854b560fcbcd247f4d4f2e6ba884f7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPane.java", "commitBeforeChange": "d187ef0ae751d72da55c4bc4f82be93731c1e46f", "commitAfterChange": "d8ed07c181201a238142caf2537f1e0f6da8bb42", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public InteractionsPane(StyledDocument doc)", "signatureAfterChange": "   public InteractionsPane(StyledDocument doc)", "diff": ["+    this(\"INTERACTIONS_KEYMAP\", doc);", "+  }", "-    _keymap = addKeymap(\"INTERACTIONS_KEYMAP\", getKeymap());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f857916d49fae0c95d7e50d33acde921", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/InteractionsDocument.java", "commitBeforeChange": "8417ddcfd5dbe91145435687b878857a28a6fc40", "commitAfterChange": "19f352f86be54a48e35fa3c387c0a98798be1f17", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void addClassPath(String path)", "signatureAfterChange": "    public void addClassPath(String path)", "diff": ["+\t\tSystem.out.println(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f866b7ad5ca4f4570f06ebbd2e541a47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2707043a47325658db92e0290e695128c6817bba", "commitAfterChange": "0c506ac270d6b542eb2c43fb49629be8c2634151", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": "            private void _openProjectUpdate()", "signatureAfterChange": "            private void _openProjectUpdate()", "diff": ["-      _saveProjectAction.setEnabled(false);", "+//      _saveProjectAction.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8715824ff9cc328a337fc3d30f11759", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/NullFile.java", "commitBeforeChange": "b128df4fa9d8df79a76ba9e19a170c160365e646", "commitAfterChange": "e16fd9dc1aa815e303a7aa80be407f3a031e237d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r   public NullFile()", "signatureAfterChange": "    public NullFile()", "diff": ["-\r", "-  public NullFile() { \r", "-    super(\"*NullFile<\" + ct + \">\"); \r", "-    ct++;\r", "-  }\r", "+", "+  public NullFile() { ", "+    this(\"*NullFile<\" + ct + \">\"); ", "+    ct++;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87a6b98688362ae118444c0d3f222e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ForcedChoiceOptionComponentTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public void testCancelDoesNotChangeConfig()", "signatureAfterChange": "    public void testCancelDoesNotChangeConfig()", "diff": ["+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f895e2dd1b4b7096b1e76f8b557f42a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "          public void testSimpleAnonymousClassInstantiationHelper()", "signatureAfterChange": "          public void testSimpleAnonymousClassInstantiationHelper()", "diff": ["-     SimpleAnonymousClassInstantiation basic = new SimpleAnonymousClassInstantiation(JExprParser.NO_SOURCE_INFO, new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"Object\", new Type[0]), ", "-                                                                        new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[0]),", "-                                                                        new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+     SimpleAnonymousClassInstantiation basic = new SimpleAnonymousClassInstantiation(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"Object\", new Type[0]), ", "+                                                                        new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]),", "+                                                                        new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8971dd3cc8ba8346c8045cfa1e1c1da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "e28d42989a089b15d3a01e7dd19b426bc7021c04", "commitAfterChange": "261ca8732921a2a5c58b2777d5419ddfe2c261df", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testResultOfNonPublicTestCase() throws Exception", "signatureAfterChange": "   public void testResultOfNonPublicTestCase() throws Exception", "diff": ["+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f898f09c71102389618a655b4ccad639", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "cbb9f04386fdbcd6c82a6f2a5ae6b635359499fb", "commitAfterChange": "e77b9389e0feb3169a20412f8892f630db108f0e", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public void junitJVMReady()", "signatureAfterChange": "   public void junitJVMReady()", "diff": ["-  /** Called when the JVM used for unit tests has registered. */", "+  /** Called when the JVM used for unit tests has registered.  Does not necessarily run in even thread. */", "-    _notifier.junitEnded();", "+    _notifyJUnitEnded();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8b425c241e161980b4c7ac64711fa28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 544, "methodNumberAfterChange": 544, "signatureBeforeChange": "    final private boolean jj_3R_386()", "signatureAfterChange": "    final private boolean jj_3R_387()", "diff": ["-", "-  final private boolean jj_3R_386() {", "-    if (jj_3R_395()) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_406()) jj_scanpos = xsp;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_387() {", "+    if (jj_3R_396()) return true;", "+    xsp = jj_scanpos;", "+    if (jj_3R_407()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8c6442ef359621719ebc1420b25e2ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "e16fd9dc1aa815e303a7aa80be407f3a031e237d", "commitAfterChange": "97f3497fff8964fcbfb5676986b962bdda4668d8", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   private String encodeFileRelative(File f, String prefix, File base) throws IOException", "signatureAfterChange": "   private String encodeFileRelative(File f, String prefix, File base) throws IOException", "diff": ["-    String path = FileOps.makeRelativeTo(f, base).getPath();", "+    String path = FileOps.stringMakeRelativeTo(f, base);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8fa7455cad3e75e07c0872259117fda", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 652, "methodNumberAfterChange": 664, "signatureBeforeChange": "    final private boolean jj_3R_622()", "signatureAfterChange": "    final private boolean jj_3R_377()", "diff": ["+", "+  final private boolean jj_3R_377() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3_82()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_397()) return true;", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_622() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_626()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_627()) return true;", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f90d7c77b73dde72215f14088e5a723f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "7b4a527a2fd4010c88a2ef6ea8f158547b322968", "commitAfterChange": "7b22fbe0160e9fdc451caeb623e46b870b03ccd3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testInteractionsCanSeeChangedClass()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testInteractionsCanSeeChangedClass()     throws BadLocationException, IOException", "diff": ["+", "+", "+      CompileShouldSucceedListener listener =new CompileShouldSucceedListener();", "+      _model.addListener(listener);", "+", "+      listener.checkCompileOccurred();", "+      assertCompileErrorsPresent(false);", "+      _model.removeListener(listener);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9190f14532067dc6e9bd543948b0c54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 530, "methodNumberAfterChange": 408, "signatureBeforeChange": "    final private boolean jj_3R_103()", "signatureAfterChange": "    final private boolean jj_3R_106()", "diff": ["-  final private boolean jj_3R_103() {", "+  final private boolean jj_3R_106() {", "-    if (jj_3R_168()) jj_scanpos = xsp;", "+    if (jj_3R_171()) jj_scanpos = xsp;", "-      if (jj_3_42()) { jj_scanpos = xsp; break; }", "+      if (jj_3_46()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f92166cb30e86d3a8d785f3fe78a596a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 318, "methodNumberAfterChange": 306, "signatureBeforeChange": "    final private boolean jj_3R_382()", "signatureAfterChange": "    final private boolean jj_3R_385()", "diff": ["-", "-  final private boolean jj_3R_382() {", "-    if (jj_3R_107()) return true;", "-    if (jj_3R_281()) return true;", "+", "+  final private boolean jj_3R_385() {", "+    if (jj_3R_109()) return true;", "+    if (jj_3R_289()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f92b495e290a7b4947759f64ed9d5d34", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "ffd4041892a5b6241078fa85d1e6d8e288f9b5a3", "commitAfterChange": "a2e65b5d7c2d7a000e177f6f8c9c0731c89b2734", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "    public void testModifiedByOtherFalse()     throws BadLocationException, IOException, OperationCanceledException,       AlreadyOpenException, InterruptedException", "signatureAfterChange": "      public void testModifiedByOtherFalse()     throws BadLocationException, IOException, OperationCanceledException,     AlreadyOpenException, InterruptedException", "diff": ["-", "+  ", "-      AlreadyOpenException, InterruptedException", "+    AlreadyOpenException, InterruptedException", "-// don't catch and fail!", "+    // don't catch and fail!", "-", "-   public void fileReverted(OpenDefinitionsDocument doc) {", "+      ", "+      public void fileReverted(OpenDefinitionsDocument doc) {", "-     shouldRevertFileCount++;", "-     return false;", "-    }", "+        shouldRevertFileCount++;", "+        return false;", "+      }", "-", "+    ", "-", "-  doc.revertIfModifiedOnDisk();", "+    ", "+    doc.revertIfModifiedOnDisk();", "-", "-  synchronized(tempFile1) { ", "-    tempFile1.wait(1000);", "-  }", "-", "-  String s = \"THIS IS ONLY A TEST\";", "-  FileOps.writeStringToFile(tempFile1, s);", "+    ", "+    synchronized(tempFile1) { ", "+      tempFile1.wait(2000);", "+    }", "+    ", "+    String s = \"THIS IS ONLY A TEST\";", "+    FileOps.writeStringToFile(tempFile1, s);", "-", "-  assertTrue(\"modified on disk1\", doc.isModifiedOnDisk());", "-  boolean reverted = doc.revertIfModifiedOnDisk();", "-  assertTrue(\"modified on disk\", reverted == false);", "-  listener.assertShouldRevertFileCount(1);", "+    ", "+    assertTrue(\"modified on disk1\", doc.isModifiedOnDisk());", "+    boolean reverted = doc.revertIfModifiedOnDisk();", "+    assertTrue(\"modified on disk\", reverted == false);", "+    listener.assertShouldRevertFileCount(1);", "-  assertContents(FOO_TEXT, doc);", "+    assertContents(FOO_TEXT, doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f93946aa91af23a40c9b087d80d2ece7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public TypeData forClassDef(ClassDef that)", "signatureAfterChange": "   public TypeData forClassDef(ClassDef that)", "diff": ["-    SymbolData testSd = getSymbolData(\"junit.framework.TestCase\", new NullLiteral(JExprParser.NO_SOURCE_INFO), false, true);", "+    SymbolData testSd = getSymbolData(\"junit.framework.TestCase\", new NullLiteral(SourceInfo.NO_INFO), false, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9475d079a242b8dadb3d8d9eaeead42", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testIndentInfoBracket() throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoBracket() throws BadLocationException", "diff": ["-    BraceReduction _reduced = doc.getReduced();", "-    doc.insertString(0, \"\\n[\\n\", null);", "+    BraceReduction _reduced = _doc.getReduced();", "+    _doc.insertString(0, \"\\n[\\n\", null);", "-    doc.insertString(1, \"  helo \", null);", "-    doc.move(2);", "+    _doc.insertString(1, \"  helo \", null);", "+    _doc.move(2);", "-    _assertContents(\"\\n  helo [\\n\", doc);", "+    _assertContents(\"\\n  helo [\\n\", _doc);", "-    doc.move(-1);", "-    doc.insertString(9, \" [\", null);", "-    doc.move(1);", "+    _doc.move(-1);", "+    _doc.insertString(9, \" [\", null);", "+    _doc.move(1);", "-    _assertContents(\"\\n  helo [ [\\n\", doc);", "+    _assertContents(\"\\n  helo [ [\\n\", _doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f94beabe82c454a23ffc1a19f63bf7b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 176, "signatureBeforeChange": "          public void removeUndoableEditListener(UndoableEditListener listener)", "signatureAfterChange": "      public void removeUndoableEditListener(UndoableEditListener listener)", "diff": ["+", "+    public void removeUndoableEditListener(UndoableEditListener listener){", "+      _undoableEditListeners.remove(listener);", "+      getDocument().removeUndoableEditListener(listener);", "+    }", "-    public void removeUndoableEditListener(UndoableEditListener listener){", "-      getDocument().removeUndoableEditListener(listener);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f95c47f384c1da1cce123c5d6656b0f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 334, "methodNumberAfterChange": 855, "signatureBeforeChange": "    final private boolean jj_3R_406()", "signatureAfterChange": "    final private boolean jj_3R_414()", "diff": ["-", "-  final private boolean jj_3R_406() {", "-    if (jj_scan_token(XOR_ASSIGN)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_414() {", "+    if (jj_scan_token(XOR_ASSIGN)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f964fdf859a68f2028b358a176b715b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/DocumentAdapter.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void removeText(int offs, int len) throws DocumentAdapterException;", "signatureAfterChange": "   public void removeText(int offs, int len);", "diff": ["-  public void removeText(int offs, int len) throws DocumentAdapterException;", "+  public void removeText(int offs, int len);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f971a173b59917ea2ea69f6547ea8cf8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "8a1c75e7bc7406b418bdb0debe15514bedad92d0", "commitAfterChange": "741892f3862eb35183b7fbd2985425d7c824db17", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "signatureAfterChange": "   public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "diff": ["-    removeDocument(doc);", "+    DefaultMutableTreeNode node = getNodeForDoc(doc);", "+    _model.removeNodeFromParent(node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9b31397c24a7ab2b98ca3185136cd74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b2ec3858349748a50ed05d608ee69cd1e1c2f487", "commitAfterChange": "6cbb131228ce2e137700481ee80d7471f8a2b3bb", "methodNumberBeforeChange": 269, "methodNumberAfterChange": 269, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["+    config.addOptionListener(PLASTIC_THEMES, new ConfigOptionListeners.PlasticThemeListener(_configFrame));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9b3c207baa75176a56745455ad4dfc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "442c59b932709a9e16b8bf4afb9e7306f5a80d8b", "commitAfterChange": "01b10549898effa38e785508ee38f72b1a436fc2", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": "   public static List<JavaAPIListEntry> _generateJavaAPIList(String base,                                                             String stripPrefix,                                                             String suffix)", "signatureAfterChange": "   public static Set<JavaAPIListEntry> _generateJavaAPISet(String base,                                                           String stripPrefix,                                                           String suffix)", "diff": ["-  public static List<JavaAPIListEntry> _generateJavaAPIList(String base,", "-                                                            String stripPrefix,", "-                                                            String suffix) {", "+  public static Set<JavaAPIListEntry> _generateJavaAPISet(String base,", "+                                                          String stripPrefix,", "+                                                          String suffix) {", "-    List<JavaAPIListEntry> l = new ArrayList<JavaAPIListEntry>();", "-    return _generateJavaAPIList(base, stripPrefix, url);", "+    return _generateJavaAPISet(base, stripPrefix, url);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9b824e6c5ee8e66d1cafc3be23775a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 559, "methodNumberAfterChange": 464, "signatureBeforeChange": "    final private boolean jj_3R_253()", "signatureAfterChange": "    final private boolean jj_3R_256()", "diff": ["-", "-  final private boolean jj_3R_253() {", "-    if (jj_3R_311()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_312()) return true;", "-    }", "+", "+  final private boolean jj_3R_256() {", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_315()) {", "+    if (jj_3R_316()) return true;", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9cc08f259766870805c6b7e9a813670", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 531, "methodNumberAfterChange": 314, "signatureBeforeChange": "    final private boolean jj_3R_433()", "signatureAfterChange": "    final private boolean jj_3R_437()", "diff": ["+", "+  final private boolean jj_3R_437() {", "+    if (jj_3R_449()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_480()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_433() {", "-    if (jj_3R_447()) return true;", "-      if (jj_3R_458()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9d28f2aaab5e9907d2eda56bf630685", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 366, "methodNumberAfterChange": 340, "signatureBeforeChange": "    final private boolean jj_3R_220()", "signatureAfterChange": "    final private boolean jj_3R_319()", "diff": ["-", "-  final private boolean jj_3R_220() {", "-    if (jj_3R_258()) return true;", "-    if (jj_scan_token(SEMICOLON)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_319() {", "+    if (jj_3R_251()) return true;", "+    if (jj_3R_392()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9e5b9a3a6c671554aba51d611c325b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "b42121281abc84b5922f4d3c2653d8341fced477", "commitAfterChange": "6b690d7e50bc9f782260d6c38aaf261dfe0715e0", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      private void _replace()", "signatureAfterChange": "      private void _replace()", "diff": ["-    String replaceWord = _replaceField.getText();", "+    final String replaceWord = _replaceField.getText();", "-    if (replaced) _selectReplacedItem(replaceWord.length());", "+    if (replaced) _selectFoundOrReplacedItem(replaceWord.length());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9ec772f666ea4edfda8b71693d79fea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 435, "methodNumberAfterChange": 332, "signatureBeforeChange": "    final private boolean jj_3R_200()", "signatureAfterChange": "    final private boolean jj_3R_203()", "diff": ["-  final private boolean jj_3R_200() {", "+", "+  final private boolean jj_3R_203() {", "-    if (jj_3R_102()) return true;", "+    if (jj_3R_105()) return true;", "-    if (jj_3R_143()) return true;", "+    if (jj_3R_146()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9fdff769498dc173bf2358ca73849c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "e70766c672e058ab37ae5757bf5008b997a8ff63", "commitAfterChange": "5089bb7a50fb7750f9e599079bf91522d8072d34", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public boolean isDefinedVariable(String name)", "signatureAfterChange": "   public boolean isDefinedVariable(String name)", "diff": ["-    //Check importation manager for explicitly imported fields", "-    ", "-    ", "-    //Check importation manager for import-on-demand clauses with fields", "-    ", "-    ", "-    return false;", "+    return importationManager.fieldExists(name);", "+    //return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa0805cddc008593ff59b198532af9e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "8e9d6d4a3458f4fb8d197d118149328dfb2ae150", "commitAfterChange": "f0e93e8f70d74090c83524f565ab98d73710c2e7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public DefinitionsPane(MainFrame mf,                          OpenDefinitionsDocument doc)", "signatureAfterChange": "   public DefinitionsPane(MainFrame mf,                          OpenDefinitionsDocument doc)", "diff": ["-    setContentType(\"text/java\");", "-", "-    // Add listener that checks if position in the document has changed.", "-    // If it has changed, check and see if we should be highlighting matching braces.", "-    this.addCaretListener(_matchListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa114d69a72e5bcde47e3cf45d505a3f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public Void forArrayType(ArrayType that)", "signatureAfterChange": "     public Void forArrayType(ArrayType that)", "diff": ["+    System.err.println(\"###### getSymbolData on \" + that.getName() + \" SHOULD BE ARRAY NAME\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa1bb7264d406914ca00cee22d704885", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4dc5ace86e9b2c575f2b09ebb783f4d8d9db5e9a", "commitAfterChange": "798fcd5fdec1efc6698cb1c49cd62bdab41daffc", "methodNumberBeforeChange": 756, "methodNumberAfterChange": 377, "signatureBeforeChange": "    final private boolean jj_3R_534()", "signatureAfterChange": "    final private boolean jj_3R_536()", "diff": ["+  final private boolean jj_3R_536() {", "+    if (jj_3R_239()) return true;", "+      if (jj_3R_555()) { jj_scanpos = xsp; break; }", "-", "-  final private boolean jj_3R_534() {", "-    if (jj_3R_551()) return true;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_552()) { jj_scanpos = xsp; break; }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa23ab072e89e0bb51f6b5e3d97cd71c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": "      public void fileSaved(OpenDefinitionsDocument doc)", "signatureAfterChange": "      public void fileSaved(OpenDefinitionsDocument doc)", "diff": ["-      if (CodeStatus.DEVELOPMENT) {", "-        _recentFileManager.updateOpenFiles(doc.getFile());", "-      }", "+      _recentFileManager.updateOpenFiles(doc.getFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa872f182d0e91381baa8dfb974c862c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 378, "methodNumberAfterChange": 381, "signatureBeforeChange": "          public void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)       throws OperationCanceledException", "signatureAfterChange": "          public void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)       throws OperationCanceledException", "diff": ["-      doc.acquireWriteLock();", "-      try { doc.indentLines(selStart, selEnd, reason, pm); }", "-      finally { doc.releaseWriteLock(); }", "+//      doc.acquireWriteLock();", "+//      try { ", "+      doc.indentLines(selStart, selEnd, reason, pm); ", "+//      }", "+//      finally { doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa89a9727aa8029a3acde3c07de2925c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/MainFrame.java", "commitBeforeChange": "5e30c7f70ee8822945ce8efbfadabc105dbf602f", "commitAfterChange": "d1b53b456f7dd4cc72458a21036639096a69a74e", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "          public void fileSaved(File file)", "signatureAfterChange": "          public void fileSaved(File file)", "diff": ["+      _fileNameField.setText(file.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa902d18de09054aa5dddfaa126a9eed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testGetLine4() throws BadLocationException", "signatureAfterChange": "   public void testGetLine4() throws BadLocationException", "diff": ["-    _defModel.insertString(0, s, null);", "-    _defModel.gotoLine(8);", "-    assertEquals(\"#0.0\", 4, _defModel.getCurrentLine());", "+    _doc.insertString(0, s, null);", "+    _doc.gotoLine(8);", "+    assertEquals(\"#0.0\", 4, _doc.getCurrentLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa95aa328f1284f0c90867521b02f5a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 375, "methodNumberAfterChange": 378, "signatureBeforeChange": "    final private boolean jj_3R_105()", "signatureAfterChange": "    final private boolean jj_3R_106()", "diff": ["-  final private boolean jj_3R_105() {", "-    if (jj_3R_158()) return true;", "+  final private boolean jj_3R_106() {", "+    if (jj_3R_159()) return true;", "-    if (jj_3R_224()) jj_scanpos = xsp;", "+    if (jj_3R_225()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fac0197bbb8b0204f5d59cd0bfd56c51", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 460, "methodNumberAfterChange": 763, "signatureBeforeChange": "    final private boolean jj_3R_188()", "signatureAfterChange": "    final private boolean jj_3R_126()", "diff": ["-", "-  final private boolean jj_3R_188() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_3R_103()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_126() {", "+    if (jj_3R_161()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "facd70d2d0e3a7639cdd3723a52fcb88", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 339, "methodNumberAfterChange": 860, "signatureBeforeChange": "    final private boolean jj_3R_404()", "signatureAfterChange": "    final private boolean jj_3R_412()", "diff": ["-", "-  final private boolean jj_3R_404() {", "-    if (jj_scan_token(RIGHT_UNSIGNED_SHIFTASSIGN)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_412() {", "+    if (jj_scan_token(RIGHT_UNSIGNED_SHIFTASSIGN)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fae1395c6c789d25b0ac342eeb93109e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyFullJavaVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "signatureAfterChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "diff": ["-    System.err.println(\"Calling _variableDeclaration2VariableData in BodyBodyFullJavaVisitor.java\");", "+//    System.err.println(\"Calling _variableDeclaration2VariableData in BodyBodyFullJavaVisitor.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faef5318d52981ec32d9067b38186a6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "28edcfb1557b7084eced62028c2fe7429bdf3ed1", "commitAfterChange": "b6f420e3de969a8f8dd7bc47b9ecaafbf647e921", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "     public void indentLines(int selStart, int selEnd)", "signatureAfterChange": "     public void indentLines(int selStart, int selEnd)", "diff": ["+      _undoManager.startCompoundEdit();", "+      _undoManager.endCompoundEdit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faf9328baa10b204128152776c20ebc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "d187ef0ae751d72da55c4bc4f82be93731c1e46f", "commitAfterChange": "d8ed07c181201a238142caf2537f1e0f6da8bb42", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void setInProgress(boolean inProgress)", "signatureAfterChange": "   public void setInProgress(boolean inProgress)", "diff": ["-    _inProgress = inProgress;", "+    _hasPrompt = !inProgress;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb11d496b7a0ffe22407087b0c63c887", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   private void _copyFile(File fromFile, File toFile) throws IOException", "signatureAfterChange": "   private void _copyFile(File fromFile, File toFile) throws IOException", "diff": ["+    fromFile.deleteOnExit();", "+    toFile.deleteOnExit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb157b69d4184ea63fb83c7b8ccaff2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "5fcb38a9e5144c9ef6a799230bac118e680b79fd", "commitAfterChange": "1d939764a7a48ee57c8c9b9e857d49b241cabd3e", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": "   public ProjectProfile _makeProjectProfile(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "signatureAfterChange": "   public ProjectProfile _makeProjectProfile(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "diff": ["-    File[] exclFiles = _state.getExcludedFiles();", "-    for(File f: exclFiles) { builder.addExcludedFile(f); }", "+    for(File f: _state.getExclFiles()) { builder.addExcludedFile(f); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb1826b17dc2987ec52963becea99140", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerRegistryTest.java", "commitBeforeChange": "1a20ac05e52f9ee0a88d470513f2a7fe1aa1939e", "commitAfterChange": "d0895d1ac641d5855832b6d42c1c1052f9c47c9f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testLimitAllAtOnce()", "signatureAfterChange": "   public void testLimitAllAtOnce()", "diff": ["+    ", "+    assertEquals(\"DrJava.java should not see an available compiler\",", "+                 false,", "+                 DrJava.hasAvailableCompiler());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb65539f01db1a25fd9a6e946727f3ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 556, "methodNumberAfterChange": 556, "signatureBeforeChange": "    final private boolean jj_3R_584()", "signatureAfterChange": "    final private boolean jj_3R_587()", "diff": ["-", "-  final private boolean jj_3R_584() {", "-    if (jj_3R_586()) {", "+    if (jj_3R_589()) {", "-    if (jj_3R_587()) return true;", "+    if (jj_3R_590()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb677741c2d4f3c30b41cb63088f77d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentAdapter.java", "commitBeforeChange": "412d701e31bce969c01f5f2b90490fb427358c05", "commitAfterChange": "e783b76611d7e152e89196e486dc2b772b1c80a9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void forceInsertText(int offs, String str, String style)     throws DocumentAdapterException", "signatureAfterChange": "   public void forceInsertText(int offs, String str, String style)     throws DocumentAdapterException", "diff": ["-      s = _styles.get(style);", "+      s = getDocStyle(style);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb6cc9b482e55f9aa472300dcb6cd176", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "65e0dc8fac1e94dcf72ee1fc21a294aea75b8b90", "commitAfterChange": "c90ce4d56017660360cfc75bcf5d4fc50796ac80", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "    private void _displayStackTrace (JUnitError e)", "signatureAfterChange": "    private void _displayStackTrace (JUnitError e)", "diff": ["+    _frame.setPopupLoc(_stackFrame);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb7fa02b77a5b0ec8444039103d930eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 606, "methodNumberAfterChange": 513, "signatureBeforeChange": "    final private boolean jj_3R_284()", "signatureAfterChange": "    final private boolean jj_3R_288()", "diff": ["-    if (jj_3_35()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_359()) return true;", "-    }", "-    return false;", "-  }", "+  final private boolean jj_3R_288() {", "+    if (jj_3_39()) {", "+    if (jj_3R_365()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb82c7baabcc9a36caa2a82135274807", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 662, "methodNumberAfterChange": 652, "signatureBeforeChange": "    final private boolean jj_3R_158()", "signatureAfterChange": "    final private boolean jj_3R_163()", "diff": ["-  final private boolean jj_3R_158() {", "-    if (jj_scan_token(WHILE)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_94()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_193()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_163() {", "+    if (jj_scan_token(WHILE)) return true;", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_97()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    if (jj_3R_201()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb8a27a7000bc2d86ff7d5b102f9e5c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 13, "signatureBeforeChange": "    public void testGetIndentOfCurrStmtEndOfDoc() throws BadLocationException", "signatureAfterChange": "    public void testGetIndentOfCurrStmtEndOfDoc() throws BadLocationException", "diff": ["-    assertEquals(\"cursor at end of document, no indent\", 0, _doc.getIndentOfCurrStmt(5));", "+    assertEquals(\"cursor at end of document, no indent\", 0, _getIndentOfCurrStmt(5));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb8eee258c7d18999a56129fd5741c0b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "     public Object visit(BitOrAssignExpression node)", "signatureAfterChange": "   public Class visit(BitOrAssignExpression node)", "diff": ["+   */", "+  public Class visit(BitOrAssignExpression node) {", "+    return visitBitwiseAssign(node);", "+  }", "-     */", "-    public Object visit(BitOrAssignExpression node) {", "-        return visitBitwiseAssign(node);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbaa6b275b0a4de16779aaf61360dfb6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "5e007ed2a02c59f9c5f0ddad6c5fd3c21d5bb370", "commitAfterChange": "098248186c2cd94be6c7bc9bfe60fa3101b5a0ba", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "   protected void insertUpdate(AbstractDocument.DefaultDocumentEvent chng, AttributeSet attr)", "signatureAfterChange": "   protected void insertUpdate(AbstractDocument.DefaultDocumentEvent chng, AttributeSet attr)", "diff": ["-      Runnable doCommand = (length == 1) ? new CharInsertCommand(offset, str.charAt(0)) : new InsertCommand(offset, str);", "-      RemoveCommand undoCommand = new UninsertCommand(offset, length);", "+      Runnable doCommand = ", "+        (length == 1) ? new CharInsertCommand(offset, str.charAt(0)) : new InsertCommand(offset, str);", "+      RemoveCommand undoCommand = new UninsertCommand(offset, length, str);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbb7828fa7e013aca6d8442929735a0f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/MainFrame.java", "commitBeforeChange": "87780b8b29e29760153c854d847bcdc00db37ade", "commitAfterChange": "4dfb7e8e2c11d7b61367445afcbbd318e060ee7c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+    ", "+    // Make the output view the active one", "+    _outputView.makeActive();", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbdf3280c7c6d72ab78e26025ba657e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "1a20ac05e52f9ee0a88d470513f2a7fe1aa1939e", "commitAfterChange": "d0895d1ac641d5855832b6d42c1c1052f9c47c9f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private static boolean _userWantsToPickAgain()", "signatureAfterChange": "   private static boolean _userWantsToPickAgain()", "diff": ["-  private static boolean _userWantsToPickAgain() {", "-      \"The file you chose did not appear to contain the compiler. \",", "-      \"Would you like to pick again? The compiler is generally \",", "-      \"located in 'tools.jar', in the 'lib' subdirectory under \",", "-      \"your JDK installation directory.\",", "-      \"(If you say 'No', DrJava will be unable to compile programs.)\"", "-                                               \"Compiler not found\",", "+   */", "+  private static boolean _userWantsToPickAgain() {", "+    final String[] text = {", "+      \"The file you chose did not appear to be a valid 'tools.jar'. \",", "+      \"Would you like to pick again? The 'tools.jar' file is \",", "+      \"generally located in the 'lib' subdirectory under your \",", "+      \"JDK installation directory.\",", "+      \"(If you say 'No', DrJava might be unable to compile or \",", "+      \"debug programs.)\"", "+    };", "+    ", "+    int result = JOptionPane.showConfirmDialog(null,", "+                                               text,", "+                                               \"Locate 'tools.jar'?\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc08659b9f5ff2c6b68abb2c3409e9d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "       public void testForEmptyExpressionOnly()", "signatureAfterChange": "       public void testForEmptyExpressionOnly()", "diff": ["-     EmptyExpression ee = new EmptyExpression(JExprParser.NO_SOURCE_INFO);", "+     EmptyExpression ee = new EmptyExpression(SourceInfo.NO_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc17520b90c1fa653c5b3b8952e352d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhraseTest.java", "commitBeforeChange": "1cb762451f589947c585a2a219ca59cd916faaa1", "commitAfterChange": "33157731339c994882aa1f63ed4a691707c328ca", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testStartOfDocument() throws BadLocationException", "signatureAfterChange": "   public void testStartOfDocument() throws BadLocationException", "diff": ["-    /**", "-    */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc1d4ad9bc10275e4ec5c3ba040e66a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/Utilities.java", "commitBeforeChange": "6d214db24b68a17f17e0cc8f3030a6df6dfa9e3d", "commitAfterChange": "b1335a3b17a414ac9a5047d93a0387148d0d6ac9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public static void showDialog(Component comp, String title, String message)", "signatureAfterChange": "     public static void showDialog(Component comp, String title, String message)", "diff": ["+        MainFrame.setPopupLoc(dialog);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc26c95831321c4c0a56618635795a2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "d8dc2cdeba22db2fb0316de83a445bb83f56ae4d", "commitAfterChange": "fecb09777cd63cca239611fe19e85d2f0e8401e9", "methodNumberBeforeChange": 581, "methodNumberAfterChange": 829, "signatureBeforeChange": "    final private boolean jj_3R_548()", "signatureAfterChange": "    final private boolean jj_3R_548()", "diff": ["-  final private boolean jj_3R_548() {", "+", "+  final private boolean jj_3R_548() {", "+    if (jj_3R_554()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc3f3c968298a1d0330b106c9efda870", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DrJavaTestCaseClassLoader.java", "commitBeforeChange": "cd41b34cec4c099dc551839a16c1a804b7900ef0", "commitAfterChange": "91f1790d793689beae896db47015b721b602919f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private byte[] lookupClassData(String className) throws ClassNotFoundException", "signatureAfterChange": "   private byte[] lookupClassData(String className) throws ClassNotFoundException", "diff": ["-   */", "+  /** Reads in and returns data from class file for the given classname. */", "-      String path= (String) fPathItems.elementAt(i);", "+      String path= fPathItems.elementAt(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc3fd10239e6b38b1b7a5a722277fecf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "df472bcb2bf0d8ba296911d59ac250fe6e447811", "commitAfterChange": "896d23e2fc31ecf410625227cad5c5d61f4d6309", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "      void open(FileOpenSelector openSelector)", "signatureAfterChange": "    void open(FileOpenSelector openSelector)", "diff": ["-  ", "+", "+      hourglassOn();", "+    }", "+    finally {", "+      hourglassOff();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc42cea6987cf0da138d92bddc9e946b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "932762732e00ba19898bb0fcbc6f05a9c3384a3e", "commitAfterChange": "79cd8422a68cecd247626713ed61a8eea3d1fada", "methodNumberBeforeChange": 596, "methodNumberAfterChange": 593, "signatureBeforeChange": "    final private boolean jj_3R_180()", "signatureAfterChange": "    final private boolean jj_3R_193()", "diff": ["-", "-  final private boolean jj_3R_180() {", "+  final private boolean jj_3R_193() {", "-    if (jj_3R_238()) return true;", "+    if (jj_3R_266()) return true;", "-    if (jj_3R_100()) return true;", "+    if (jj_3R_102()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc78df322b8e2bb673262c4ed2741685", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "8468328336764977b1a392d354ad9fa8332d6cf0", "commitAfterChange": "b5065bdb57d50a5108c714db64f9cb4417931362", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ConsoleDocument(ConsoleDocumentInterface doc)", "signatureAfterChange": "   public ConsoleDocument(ConsoleDocumentInterface doc)", "diff": ["-    _promptPos = 0;", "+    _promptPos = DEFAULT_CONSOLE_PROMPT.length();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc8223c68cd210d637e27e77dd2a3b07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e8cc87f4c1373cc71556480da6b0490c23688c68", "commitAfterChange": "ab5f98cfbaf4d4f03ed7df38b403a2ed47f6970f", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 132, "signatureBeforeChange": "   private void _openProjectHelper(File projectFile)", "signatureAfterChange": "   private void _openProjectHelper(File projectFile)", "diff": ["+    _projectPropertiesAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc84c2ccf8b685b8b8ee05c7089231c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void write() throws IOException", "signatureAfterChange": "   public void write() throws IOException", "diff": ["-    if (_projectRoot != null) {", "-      fw.write(\"\\n(proj-root-and-base\");", "+    assert (_projectRoot != null);", "+", "+    fw.write(\"\\n(proj-root-and-base\");", "-      fw.write(\"\\n\" + encodeFileRelative(_projectRoot, \"  \", _projectFile));", "-      fw.write(\")\");", "-    }", "-    else fw.write(\"\\n;; no project root; should never happen\");", "-        ", "+    fw.write(\"\\n\" + encodeFileRelative(_projectRoot, \"  \", _projectFile));", "+    fw.write(\")\");", "+", "-    if (_workDir != null && _workDir.getPath() != \"\") {", "+    if (_workDir.getPath() != \"\") {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc8f30a7c8bd386685cc4390ded0c73c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/Brace.java", "commitBeforeChange": "c88bf4a527291490e603bb8724d52a101cc61a60", "commitAfterChange": "9ac042462ff2ccafde5facafd742598846cdb098", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public boolean isDoubleEscapeSequence()", "signatureAfterChange": "   public boolean isDoubleEscapeSequence()", "diff": ["-    return  isDoubleEscape() || isEscapedQuote();", "+    return  isDoubleEscape() || isEscapedDoubleQuote() ||", "+      isEscapedSingleQuote();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc918f77df867cd34c9dd5e32e412839", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsEditorKit.java", "commitBeforeChange": "b05d6101d72721dc72e1089de24af7a09f520884", "commitAfterChange": "1c36c4f5a2718b62938a20268edf5b2f24819a2b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void actionPerformed(ActionEvent e)", "signatureAfterChange": "      public void actionPerformed(ActionEvent e)", "diff": ["-      LOG.log(\"EndWordAction.actionPerformed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc9dcfdbf5f67637b1e424d90bf2427c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   protected void addDocToClassPath(OpenDefinitionsDocument doc)", "signatureAfterChange": "   protected void addDocToClassPath(OpenDefinitionsDocument doc)", "diff": ["-          _interactionsModel.addProjectFilesClassPath(classPath.toURI().toURL());", "-        else _interactionsModel.addExternalFilesClassPath(classPath.toURI().toURL());", "+          _interactionsModel.addProjectFilesClassPath(classPath.toURL());", "+        else _interactionsModel.addExternalFilesClassPath(classPath.toURL());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fca3ca172320385561a9895d4ce01764", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testReplaceCreatesMatchBackwards() throws BadLocationException", "signatureAfterChange": "   public void testReplaceCreatesMatchBackwards() throws BadLocationException", "diff": ["-    doc.insertString(0, \"hhelloello\", null);", "+    _doc.insertString(0, \"hhelloello\", null);", "-    frm.setFindWord(\"hello\");", "-    frm.setMatchCase(false);", "-    frm.setSearchBackwards(true);", "-    frm.setReplaceWord(\"\");", "-    frm.replaceAll();", "-    assertEquals(\"replace creates new match\", \"hello\", doc.getText(0, doc.getLength()));", "+    _frm.setFindWord(\"hello\");", "+    _frm.setMatchCase(false);", "+    _frm.setSearchBackwards(true);", "+    _frm.setReplaceWord(\"\");", "+    _frm.replaceAll();", "+    assertEquals(\"replace creates new match\", \"hello\", _doc.getText(0, _doc.getLength()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcb8d01c242590c4e15506f5929a3861", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "8714a43a313a1a0d2ca9cc83816dab7a08ff011b", "commitAfterChange": "ea5cfb95023de08fddeb23c31d383ebdee6d9006", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 126, "signatureBeforeChange": "   private JMenu _setUpEditMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpEditMenu(int mask)", "diff": ["+    // Indent lines", "+    editMenu.addSeparator();", "+    //_addMenuItem(editMenu, _indentLinesAction, KEY_INDENT);", "+    editMenu.add(_indentLinesAction);", "+    ", "-    ", "-    // Indent lines", "-    //editMenu.addSeparator();", "-    //_addMenuItem(editMenu, _indentLinesAction, KEY_INDENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fce6cd748019863e825b3ebcf0f9d59e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "1acb63fa1c578959b54f9766299c6e0a8865f601", "commitAfterChange": "fa78ee7a06602f123abf33b8aef0005c93bb3efa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private static void getFilesInDir(File d, List<File> acc, boolean recur, FileFilter filter)", "signatureAfterChange": "   private static void getFilesInDir(File d, List<File> acc, boolean recur, FileFilter filter)", "diff": ["-  private static void getFilesInDir(File d, List<File> acc, boolean recur, FileFilter filter){", "-    if(d.isDirectory()){", "-      File[] fa = d.listFiles(filter);", "-      for(File f: fa){", "-        if(f.isDirectory() && recur){ ", "-          getFilesInDir(f, acc, recur, filter);", "-        }else if(f.isFile()){", "-          acc.add(f);", "-        }", "-      }      ", "-    }else{", "-      acc.add(d);", "-    }", "+  private static void getFilesInDir(File d, List<File> acc, boolean recur, FileFilter filter) {", "+    if (d.isDirectory()) {", "+      for (File f: d.listFiles(filter)) {", "+        if (f.isDirectory() && recur) getFilesInDir(f, acc, recur, filter);", "+        else if (f.isFile()) acc.add(f);", "+      }", "+    }      ", "+    else acc.add(d);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcfba964d5b75216622cd0c20187c1c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "529170b5e1f3ae51e7605361a4e0e7b51ac950b2", "commitAfterChange": "c41db23b64398f487a5aaf468732fd9fd28c85f7", "methodNumberBeforeChange": 632, "methodNumberAfterChange": 632, "signatureBeforeChange": "     public void breakpointReached(Breakpoint bp)", "signatureAfterChange": "     public void breakpointReached(Breakpoint bp)", "diff": ["-    public void breakpointReached(Breakpoint bp) { showTab(_interactionsContainer, true); }", "+    public void breakpointReached(Breakpoint bp) {", "+      _model.getInteractionsModel().autoImport();", "+      showTab(_interactionsContainer, true);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1af1bbb26076a388b7ac0804b01904", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4d3fa64499badc01be2d089cba1394a47c2f30de", "commitAfterChange": "ed48d6b9cb86b6e63d0852d1106c5aba17823c84", "methodNumberBeforeChange": 687, "methodNumberAfterChange": 684, "signatureBeforeChange": "    final private boolean jj_3R_300()", "signatureAfterChange": "    final private boolean jj_3R_300()", "diff": ["+", "+  final private boolean jj_3R_300() {", "+    if (jj_3R_310()) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_311()) jj_scanpos = xsp;", "-  final private boolean jj_3R_300() {", "-    if (jj_3R_311()) {", "-    if (jj_3R_312()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd36d47532024bc1dce04f1e04577279", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringView.java", "commitBeforeChange": "240a30cf8c6d31d9516bfba9bb2eb458c6b4faf7", "commitAfterChange": "8ed63fc06e982cfe66ff539657385f71f2d1dbd3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   ColoringView(Element elem)", "signatureAfterChange": "   public ColoringView(Element elem)", "diff": ["-  ColoringView(Element elem) {", "+  public ColoringView(Element elem) {", "+    final FontOptionListener fol = new FontOptionListener();", "+      DrJava.getConfig().addOptionListener( OptionConstants.FONT_MAIN, fol);", "+            DrJava.getConfig().removeOptionListener( OptionConstants.FONT_MAIN, fol);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd48a100af4ba4cf540f8dfbbafdb9dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 520, "methodNumberAfterChange": 371, "signatureBeforeChange": "    final private boolean jj_3R_97()", "signatureAfterChange": "    final private boolean jj_3R_95()", "diff": ["+  final private boolean jj_3R_95() {", "+    if (jj_3R_139()) {", "+    if (jj_3R_140()) return true;", "-", "-  final private boolean jj_3R_97() {", "-    if (jj_3R_153()) {", "-    if (jj_3R_154()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd4d058de94226cb5b381f88401832f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "c0487ade35919fa6d08b7c39361898d3c5751c04", "commitAfterChange": "7b4296c095d59b57f25b910a8bdce57816e7621f", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public int getFirstNonWSCharPos(int pos, char[] whitespace, boolean acceptComments) throws BadLocationException", "signatureAfterChange": "   public int getFirstNonWSCharPos(int pos, char[] whitespace, boolean acceptComments) throws BadLocationException", "diff": ["-    StringBuffer keyBuf = new StringBuffer(\"getFirstNonWSCharPos:\").append(pos);", "+    StringBuilder keyBuf = new StringBuilder(\"getFirstNonWSCharPos:\").append(pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd59f2c327f62bcfdf105837d7d64a6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "828da1589ecf80d1be67fffa7a1ab51335a3ab2f", "commitAfterChange": "faaa7b3cbc2c17378fdf27d2e0d53e3491783d3d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testStepInto()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testStepInto()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-    throws DebugException, BadLocationException, IOException, InterruptedException", "+    throws DebugException, BadLocationException, DocumentAdapterException,", "+    IOException, InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd7795b8f2aa1888bda8510db220b685", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavadocErrorPanel.java", "commitBeforeChange": "da631ae365e5ae3fe7064b60f098ede0150c39bb", "commitAfterChange": "574257b530483460a9c0ce0cc5577b7fd93532dd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void _updateWithErrors() throws BadLocationException", "signatureAfterChange": "     protected void _updateWithErrors() throws BadLocationException", "diff": ["-      SwingDocument doc = new SwingDocument();", "+      ErrorDocument doc = new ErrorDocument(getErrorDocumentTitle());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd7c2000c58dc8373aca5ff25acb65e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "     public Object visit(ShiftRightAssignExpression node)", "signatureAfterChange": "   public Class visit(ShiftRightAssignExpression node)", "diff": ["+   */", "+  public Class visit(ShiftRightAssignExpression node) {", "+    Class c = visitShiftExpression(node);", "+    ", "+    // The left subexpression must be a variable", "+    if (!node.getLeftExpression().hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"shift.right.type\", node);", "+    }", "+    ", "+    return c;", "+  }", "-     */", "-    public Object visit(ShiftRightAssignExpression node) {", "-        Class c = visitShiftExpression(node);", "-", "-        // The left subexpression must be a variable", "-        if (!node.getLeftExpression().hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"shift.right.type\", node);", "-        }", "-", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd8024829b1c2c6d1e16384469700eaa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void setActivePreviousDocument()", "signatureAfterChange": "   public void setActivePreviousDocument()", "diff": ["-    INavigatorItem key = getIDocGivenODD(_activeDocument);", "+    INavigatorItem key = _activeDocument;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd912db3dcfd7ab294d7a8536d7e50ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6082e28d363f7796f6c9506e0c82e9e5f29262e2", "commitAfterChange": "35d96698360e3de9d027b8743e5a37f097d6163e", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 141, "signatureBeforeChange": "   private void _closeProject()", "signatureAfterChange": "   private void _closeProject()", "diff": ["-    _close();", "+    if(_model.getDocumentCount() == 1)", "+      _model.setActiveFirstDocument();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd953d50e3841ad14b992af12a3acca1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "b6f420e3de969a8f8dd7bc47b9ecaafbf647e921", "commitAfterChange": "8bdb35d64cb05e3140d2e418cebfe8458ce4a718", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public DefinitionsPane(MainFrame mf,                          GlobalModel model,                          OpenDefinitionsDocument doc)", "signatureAfterChange": "   public DefinitionsPane(MainFrame mf,                          GlobalModel model,                          OpenDefinitionsDocument doc)", "diff": ["-    setFont(mainFont);", "+    setFont(mainFont);    ", "+    _antiAliasText = DrJava.getConfig().getSetting(TEXT_ANTIALIAS).booleanValue();", "+    ", "+    DrJava.getConfig().addOptionListener( OptionConstants.TEXT_ANTIALIAS,", "+                                    new AntiAliasOptionListener());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fda88e009758fe24fc618c221b05dd56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/LogTest.java", "commitBeforeChange": "c797f7e57ea0230b6931e66637aa0a3d00547f03", "commitAfterChange": "0a16594b9476a5c9cc31dd37e345bf51d1d17aa2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testLog() throws IOException", "signatureAfterChange": "   public void testLog() throws IOException", "diff": ["-    File FILE1 = IOUtil.createAndMarkTempFile(\"logtest001\",\".txt\");", "-    Log log1 = new Log(FILE1, true);", "+    File file1 = IOUtil.createAndMarkTempFile(\"logtest001\",\".txt\");", "+    Log log1 = new Log(file1, true);", "-    BufferedReader fin = new BufferedReader(new FileReader(FILE1));", "+    BufferedReader fin = new BufferedReader(new FileReader(file1));", "-    assertEquals(\"Log open message\", \"Log '\" + FILE1.getName() + \"' opened\", s0.substring(30, 43+FILE1.getName().length()));", "+    assertEquals(\"Log open message\", \"Log '\" + file1.getName() + \"' opened\", s0.substring(30, 43+file1.getName().length()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdc2a583891c5fcaad199791dbdc5d4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ClasspathVectorTest.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void test_toString()", "signatureAfterChange": "   public void test_toString()", "diff": ["-    assertEquals(\"Multiple element classpath\", File.separator+\"jsr14.jar\" + File.pathSeparator + \"/wherever/supercool.jar\" + File.pathSeparator, v.toString());", "+    String fileName = File.separator + \"wherever\" + File.separator + \"supercool.jar\";", "+    assertEquals(\"Multiple element classpath\", File.separator+\"jsr14.jar\" + File.pathSeparator + fileName + File.pathSeparator, v.toString());", "-    assertEquals(\"Multiple element classpath\", File.separator+\"jsr14.jar\" + File.pathSeparator + \"/wherever/supercool.jar\" + File.pathSeparator + \"/hosted.jar\" + File.pathSeparator, v.toString());", "+    assertEquals(\"Multiple element classpath\", File.separator+\"jsr14.jar\" + File.pathSeparator + fileName + File.pathSeparator + File.separator + \"hosted.jar\" + File.pathSeparator, v.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdc879e0c41c25eb6211431cc5f5d67d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 848, "methodNumberAfterChange": 748, "signatureBeforeChange": "    final private boolean jj_3R_369()", "signatureAfterChange": "    final private boolean jj_3R_376()", "diff": ["-  final private boolean jj_3R_369() {", "+  final private boolean jj_3R_376() {", "-    if (jj_3R_420()) {", "+    if (jj_3R_429()) {", "-      if (jj_3R_421()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_430()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdc91bd970f882b44aaba583c8e641ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "commitAfterChange": "6fa1e9e0526601b88fed849b111530adacda855f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 19, "signatureBeforeChange": "    public void addClassPath(String s)", "signatureAfterChange": "   public void addClassPath(String s)", "diff": ["+   */", "-    _activeInterpreter.getInterpreter().addClassPath(s);", "+    ", "+    // Add to the default interpreter, if it is a JavaInterpreter", "+    if (_defaultInterpreter.getInterpreter() instanceof JavaInterpreter) {", "+      ((JavaInterpreter)_defaultInterpreter.getInterpreter()).addClassPath(s);", "+    }", "+    ", "+    // Add to any named JavaInterpreters to be consistent", "+    Enumeration<InterpreterData> interpreters = _interpreters.elements();", "+    while (interpreters.hasMoreElements()) {", "+      Interpreter interpreter = interpreters.nextElement().getInterpreter();", "+      if (interpreter instanceof JavaInterpreter) {", "+        ((JavaInterpreter)interpreter).addClassPath(s);", "+      }", "+    }", "+    ", "+    // Keep this entry on the accumulated classpath"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fde7c010b5d20686983aecb00e55dd89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     public Object visit(RemainderAssignExpression node)", "signatureAfterChange": "   public Class visit(RemainderAssignExpression node)", "diff": ["+   */", "+  public Class visit(RemainderAssignExpression node) {", "+    // Check the types", "+    Node  ln = node.getLeftExpression();", "+    Class lc = (Class)ln.acceptVisitor(this);", "+    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "+    ", "+    if (lc == null          || rc == null          ||", "+        lc == void.class    || rc == void.class    ||", "+        lc == boolean.class || rc == boolean.class ||", "+        !lc.isPrimitive()   || !rc.isPrimitive()) {", "+      throw new ExecutionError(\"remainder.type\", node);", "+    }", "+    ", "+    // The left subexpression must be a variable", "+    if (!ln.hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"left.expression\", node);", "+    }", "+    ", "+    // Sets the type property of this node", "+    node.setProperty(NodeProperties.TYPE, lc);", "+    return lc;", "+  }", "-     */", "-    public Object visit(RemainderAssignExpression node) {", "-        // Check the types", "- \tNode  ln = node.getLeftExpression();", "-        Class lc = (Class)ln.acceptVisitor(this);", "-        Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "-", "-        if (lc == null          || rc == null          ||", "-            lc == void.class    || rc == void.class    ||", "-            lc == boolean.class || rc == boolean.class ||", "-            !lc.isPrimitive()   || !rc.isPrimitive()) {", "-            throw new ExecutionError(\"remainder.type\", node);", "-        ", "-        // The left subexpression must be a variable", "-        if (!ln.hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"left.expression\", node);", "-", "-        // Sets the type property of this node", "-        node.setProperty(NodeProperties.TYPE, lc);", "-        return lc;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdfdabfac43fdf69c551fa68a013634f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b9f87cd074abdafacdb2719b29e0803fd0f81cf0", "commitAfterChange": "04d7824a20eb03ad17793ba3198be21442313bdc", "methodNumberBeforeChange": 268, "methodNumberAfterChange": 268, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["-      _breakpointsPanel = new BreakpointsPanel(this);", "+      _breakpointsPanel = new BreakpointsPanel(this, _model.getBreakpointManager());", "-    _bookmarksPanel = new BookmarksPanel(this);", "+    _bookmarksPanel = new BookmarksPanel(this, _model.getBookmarkManager());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe07a6fd337a7bdd4e28fa44d669fc5e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "         public abstract boolean containsMethod(Type t, String name);", "signatureAfterChange": "         public abstract boolean containsMethod(Type t, String name, Access.Module accessModule);", "diff": ["-  public abstract boolean containsMethod(Type t, String name);", "+  public abstract boolean containsMethod(Type t, String name, Access.Module accessModule);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe15ec730d6196912854cb53708d8893", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "commitAfterChange": "35da9b77b7d75aca3d6277e27e3ba3dc86f3eaa9", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   private void _indentBlock(final int start, final int end, int reason, ProgressMonitor pm)     throws OperationCanceledException", "signatureAfterChange": "   private void _indentBlock(final int start, final int end, int reason, ProgressMonitor pm)     throws OperationCanceledException, BadLocationException", "diff": ["-    throws OperationCanceledException {", "-    // throwErrorHuh();", "-    //DrJava.consoleOut().println(\"indenting block of \" + (end-start));", "-    try {", "-      // Keep marker at the end. This Position will be the correct endpoint no matter how we change ", "-      // the doc doing the indentLine calls.", "-      final Position endPos = this.createPosition(end);", "-      // Iterate, line by line, until we get to/past the end", "-      int walker = start;", "-      while (walker < endPos.getOffset()) {", "-        setCurrentLocation(walker);", "-        // Keep pointer to walker position that will stay current", "-        // regardless of how indentLine changes things", "-        Position walkerPos = this.createPosition(walker);", "-        // Indent current line", "-        // We currently ignore current location info from each line, because", "-        // it probably doesn't make sense in a block context.", "-        _indentLine(reason);", "-        // Move back to walker spot", "-        setCurrentLocation(walkerPos.getOffset());", "-        walker = walkerPos.getOffset();", "-        ", "-        if (pm != null) {", "-          // Update ProgressMonitor.", "-          pm.setProgress(walker);", "-          ", "-          // Check for cancel button-press.", "-          if (pm.isCanceled()) throw new OperationCanceledException();", "-        }", "-        ", "-        // Adding 1 makes us point to the first character AFTER the next newline.", "-        // We don't actually move yet. That happens at the top of the loop,", "-        // after we check if we're past the end.", "-        walker += _reduced.getDistToNextNewline() + 1;", "-        //DrJava.consoleOut().println(\"progress: \" + (100*(walker-start)/(end-start)));", "+    throws OperationCanceledException, BadLocationException {", "+    ", "+    // Keep marker at the end. This Position will be the correct endpoint no matter how we change ", "+    // the doc doing the indentLine calls.", "+    final Position endPos = this.createPosition(end);", "+    // Iterate, line by line, until we get to/past the end", "+    int walker = start;", "+    while (walker < endPos.getOffset()) {", "+      setCurrentLocation(walker);", "+      // Keep pointer to walker position that will stay current", "+      // regardless of how indentLine changes things", "+      Position walkerPos = this.createPosition(walker);", "+      // Indent current line", "+      // We currently ignore current location info from each line, because", "+      // it probably doesn't make sense in a block context.", "+      _indentLine(reason);", "+      // Move back to walker spot", "+      setCurrentLocation(walkerPos.getOffset());", "+      walker = walkerPos.getOffset();", "+      ", "+      if (pm != null) {", "+        pm.setProgress(walker); // Update ProgressMonitor.", "+        if (pm.isCanceled()) throw new OperationCanceledException(); // Check for cancel button-press.", "+      ", "+      // Adding 1 makes us point to the first character AFTER the next newline. We don't actually move the", "+      // location yet. That happens at the top of the loop, after we check if we're past the end.", "+      walker += _reduced.getDistToNextNewline() + 1;", "-    catch (BadLocationException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe2bb103b53fa5d5c9704dc042e67d4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "dab739e9c0a893840c19d552b534083722093495", "commitAfterChange": "9d7de430d203354a52d3faa0378a92c50af92fb7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testDoNotRunJUnitWhenCompileErrorsOccur()      throws BadLocationException, IOException", "signatureAfterChange": "   public void testDoNotRunJUnitWhenCompileErrorsOccur() throws Exception", "diff": ["-  public void testDoNotRunJUnitWhenCompileErrorsOccur() ", "-    throws BadLocationException, IOException {", "+  public void testDoNotRunJUnitWhenCompileErrorsOccur() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe446ed01f6a0aad12491766ecdc2d99", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 281, "methodNumberAfterChange": 263, "signatureBeforeChange": "    final private boolean jj_3R_447()", "signatureAfterChange": "    final private boolean jj_3R_449()", "diff": ["-  final private boolean jj_3R_447() {", "+  final private boolean jj_3R_449() {", "-    if (jj_3R_257()) return true;", "+    if (jj_3R_151()) return true;", "-    if (jj_3R_375()) return true;", "+    if (jj_3R_377()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe48439e8b96f1ddc14f64df9d11f73d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 595, "methodNumberAfterChange": 395, "signatureBeforeChange": "    final private boolean jj_3R_311()", "signatureAfterChange": "    final private boolean jj_3R_303()", "diff": ["+", "+  final private boolean jj_3R_303() {", "+    if (jj_3R_322()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_347()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-  final private boolean jj_3R_311() {", "-    if (jj_3R_329()) return true;", "-      if (jj_3R_344()) { jj_scanpos = xsp; break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe7c84958ebcae1f9c274ba07b9b23e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "     public Object visit(AddAssignExpression node)", "signatureAfterChange": "   public Class visit(AddAssignExpression node)", "diff": ["+   */", "+  public Class visit(AddAssignExpression node) {", "+    // Check the types", "+    Node  ln = node.getLeftExpression();", "+    Class lc = (Class)ln.acceptVisitor(this);", "+    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "+    ", "+    if (lc != String.class) {", "+      if (lc == null || rc == null ||", "+          lc == void.class || rc == void.class ||", "+          rc == boolean.class || !rc.isPrimitive()) {", "+        throw new ExecutionError(\"addition.type\", node);", "+      }", "+    }", "+    ", "+    // The left subexpression must be a variable", "+    if (!ln.hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"left.expression\", node);", "+    }", "+    ", "+    // Sets the type property of this node", "+    node.setProperty(NodeProperties.TYPE, lc);", "+    return lc;", "+  }", "-     */", "-    public Object visit(AddAssignExpression node) {", "-        // Check the types", "-\tNode  ln = node.getLeftExpression();", "-        Class lc = (Class)ln.acceptVisitor(this);", "-        Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "-", "-        if (lc != String.class) {", "-            if (lc == null || rc == null ||", "-                lc == void.class || rc == void.class ||", "-                rc == boolean.class || !rc.isPrimitive()) {", "-                throw new ExecutionError(\"addition.type\", node);", "-            }", "-        }", "-        ", "-        // The left subexpression must be a variable", "-        if (!ln.hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"left.expression\", node);", "-        }", "-", "-        // Sets the type property of this node", "-        node.setProperty(NodeProperties.TYPE, lc);", "-        return lc;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe8860e8f2011a5b978b7c93234cc31c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameStatics.java", "commitBeforeChange": "deb4bbe3644e2d17508378353337903e5f2c956b", "commitAfterChange": "f9f9b40d76f2ccbda12717eda0af359f2105ef7b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static File proposeToChangeExtension(Component parent, File input,                                               String title,                                               String message,                                               String changeButton,                                               String keepButton,                                               String newExt)", "signatureAfterChange": "   public static File proposeToChangeExtension(Component parent, File input,                                               String title,                                               String message,                                               String changeButton,                                               String keepButton,                                               String newExt)", "diff": ["-        if (! file.exists() || verifyOverwrite(parent, file)) { ", "-          return file;", "-        }", "+        return file;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe9aa444534d7e0b912e1f885c60e39e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 286, "methodNumberAfterChange": 253, "signatureBeforeChange": "    final private boolean jj_3_9()", "signatureAfterChange": "    final private boolean jj_3_11()", "diff": ["-", "-  final private boolean jj_3_9() {", "-    if (jj_3R_31()) return true;", "-    if (jj_scan_token(IDENTIFIER)) return true;", "+", "+  final private boolean jj_3_11() {", "+    if (jj_3R_27()) return true;", "+    if (jj_3R_32()) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feb1a0c1e6849da289820cb7a0fa48dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "17b59cf1640c29fbcc5ed0fdfe96f8053eaa1da0", "commitAfterChange": "eef32107e75e031eb7210130ce310e1714e51b91", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private ClassType resolveClassName(String name, Node node)", "signatureAfterChange": "      private ClassType resolveClassName(String name, Node node)", "diff": ["-          if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.inner.class\"); }", "+          if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.inner.class\", node); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec4f0be17172684140637e996952a7b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6595282fd67e77d6079df1ee1647ba51751bbcec", "commitAfterChange": "de0f38d123822794b2970bd8e5814e75677feb46", "methodNumberBeforeChange": 585, "methodNumberAfterChange": 574, "signatureBeforeChange": "    final private boolean jj_3R_582()", "signatureAfterChange": "    final private boolean jj_3R_584()", "diff": ["-  final private boolean jj_3R_582() {", "+  final private boolean jj_3R_584() {", "-    if (jj_3R_584()) {", "+    if (jj_3R_586()) {", "-    if (jj_3R_585()) return true;", "+    if (jj_3R_587()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fedb6c8839e85c9ca3fa2d9e8198e4cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 627, "methodNumberAfterChange": 690, "signatureBeforeChange": "    final private boolean jj_3R_281()", "signatureAfterChange": "    final private boolean jj_3R_283()", "diff": ["-", "-  final private boolean jj_3R_281() {", "-    if (jj_3R_297()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_298()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_283() {", "+    if (jj_3R_299()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_300()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fef33f7da5619762d132e7a619361080", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/GJv6Compiler.java", "commitBeforeChange": "c8a7a8a9d3d089ab42661ede7d141969c6ed2339", "commitAfterChange": "edb148d96e488bb5de94fe3df6063e44425ab166", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public CompilerError[] getErrors()", "signatureAfterChange": "     public CompilerError[] getErrors()", "diff": ["-      return _errors.toArray(new CompilerError[0]);", "+      return _errors.toArray(new CompilerError[_errors.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff0b7703faa782a965bb2766edd2827b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "e2dfab60fe06b4a75e9a9d17c0a9c2d622def7c7", "commitAfterChange": "9ee7f82d7f7234787f3748460b46ad8c5d1fc967", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     protected void _updateWithErrors(String failureName, String failureMeaning, DefaultStyledDocument doc)       throws BadLocationException", "signatureAfterChange": "     protected void _updateWithErrors(String failureName, String failureMeaning, SwingDocument doc)       throws BadLocationException", "diff": ["-    protected void _updateWithErrors(String failureName, String failureMeaning, DefaultStyledDocument doc)", "+    protected void _updateWithErrors(String failureName, String failureMeaning, SwingDocument doc)", "-      doc.insertString(doc.getLength(), numErrsMsg, BOLD_ATTRIBUTES);", "+      doc.append(numErrsMsg, BOLD_ATTRIBUTES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff4a9db1dd5a00c69f486650a3e82430", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "297ab8f541fdccc79367d02c322b7113ca0c7fca", "commitAfterChange": "bd78c447b7fcc4e2af8af823e3ed37c896be8908", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "signatureAfterChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "diff": ["+          ", "+          /* update the navigator */", "+          _documentNavigator.removeDocument(getIDocGivenODD(this));", "+          _documentNavigator.addDocument(getIDocGivenODD(this), file.getCanonicalFile().getParent());", "+          "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff87e6c9378e4148310cd25cc9d35d74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/StringOptionTest.java", "commitBeforeChange": "ab56c47a9f6c097d16c8c38565dec5edb6fb4d6f", "commitAfterChange": "0d80b47fa71022c1d579ad193bcaa14dd927885e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testParse()", "signatureAfterChange": "      public void testParse()", "diff": ["-    StringOption so = new StringOption(\"classpath\");", "+    StringOption so = new StringOption(\"classpath\",null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffb30f45c91a8a334b02a6c653964a8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryLevelTest.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testSuccessful()", "signatureAfterChange": "   public void testSuccessful()", "diff": ["-    ", "+    System.err.println(\"testFiles for testSuccessful = \" + Arrays.toString(testFiles));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffbe98bb10fa153bf2245a60f6b358d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f1019f9568774298366441c3a10efdd63f48057e", "commitAfterChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "methodNumberBeforeChange": 366, "methodNumberAfterChange": 893, "signatureBeforeChange": "    final private boolean jj_3R_397()", "signatureAfterChange": "    final private boolean jj_3R_405()", "diff": ["-", "-  final private boolean jj_3R_397() {", "-    if (jj_scan_token(STAR_ASSIGN)) return true;", "-    if (jj_3R_102()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_405() {", "+    if (jj_scan_token(STAR_ASSIGN)) return true;", "+    if (jj_3R_105()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffd3e8ff7e28901661d6b4d2e60c0668", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2500166c0751d6a8cb3d1502502bde53fcc48afb", "commitAfterChange": "e8cc87f4c1373cc71556480da6b0490c23688c68", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 130, "signatureBeforeChange": "   private void _openProjectHelper(File projectFile)", "signatureAfterChange": "   private void _openProjectHelper(File projectFile)", "diff": ["+    _saveProjectAction.setEnabled(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffd71694227b62de2a98250c00eee3f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "30084d60ea1c92bd9e5a911d71d6555be6180e71", "commitAfterChange": "113afd3151c2b14c9d66bb242346ae4c872989d1", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "   public void close()", "signatureAfterChange": "   public void close()", "diff": ["-      DrJava.getConfig().removeOptionListener(p.getFirst(), p.getSecond());", "+      DrJava.getConfig().removeOptionListener(p.first(), p.second());", "-      DrJava.getConfig().removeOptionListener(p.getFirst(), p.getSecond());", "+      DrJava.getConfig().removeOptionListener(p.first(), p.second());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffeb3fbb8d0428ac1718373eb77d7359", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "1ca22d8d9e892abbe72cd6aa5627cc7ce0e56b03", "commitAfterChange": "024873f55ad7ba6280213fee7183c6688ba3b395", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "       public Object forExceptionResult(ExceptionResult that)", "signatureAfterChange": "       public Object forExceptionResult(ExceptionResult that)", "diff": ["-        synchronized(TestJVMExtension.this) {", "+        synchronized(_testLock) {", "-          TestJVMExtension.this.notify();", "+          _testLock.notify();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fffb5cdef524bcc9cc89e24b1828f964", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/PopupConsole.java", "commitBeforeChange": "f5e0f21c1557f81d0d7f0c29eb237b06db708ca4", "commitAfterChange": "0d9f1553021bdec23ece7e3cb20a25799f49e14f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void interruptConsole()", "signatureAfterChange": "   public void interruptConsole()", "diff": ["+    System.out.println(\"acquiring commandLock\");", "+      System.out.println(\"lock acquired\");", "+    System.out.println(\"command lock released\");"]}], "num": 68}