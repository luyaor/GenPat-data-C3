{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f9a6bf032443e5cebd9d2ec5d022413", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32e9eed9ca574e0946512ec4560a7552", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "a25fe41044d292186863ba8ddd26164fdef4fc59", "commitAfterChange": "682bd0a2b528d852a57206c89ed5bb4a5b484c14", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 230, "signatureBeforeChange": "     public void actionPerformed(ActionEvent e)", "signatureAfterChange": "      private void _junitFolder()", "diff": ["-    public void actionPerformed(ActionEvent e) {", "-      new Thread(\"Running JUnit Tests\") {", "-        public void run() {", "-//          new ScrollableDialog(null, \"_junitAllAction called\", \"\", \"\").show();", "-          try {", "-            hourglassOn();", "-            if (_model.isProjectActive()) _model.getJUnitModel().junitProject();", "-            else _model.getJUnitModel().junitAll();", "-          }", "-          finally {  hourglassOff(); }", "-        }", "-      }.start();", "-    }", "+  ", "+  private void _junitFolder() {", "+    final SwingWorker worker = new SwingWorker() {", "+      public Object construct() {", "+        ", "+        INavigatorItem n;", "+        hourglassOn();  // turned off when JUnitStarted event is fired", "+        Enumeration<INavigatorItem> e = _model.getDocumentNavigator().getDocuments();", "+        final LinkedList<OpenDefinitionsDocument> l = new LinkedList<OpenDefinitionsDocument>();", "+        if (_model.getDocumentNavigator().isGroupSelected()) {", "+          while (e.hasMoreElements()){", "+            n = e.nextElement();", "+            if(_model.getDocumentNavigator().isSelectedInGroup(n)){", "+              l.add((OpenDefinitionsDocument) n);  // FIX THIS CAST!", "+            }", "+          }", "+          _model.getJUnitModel().junitDocs(l);", "+        }", "+        return null;", "+      }", "+    };", "+    worker.start(); ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef4d54ffdbe7b44ace7bc013ee3063a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "65a7277b66a8820a81606e41a75578dc0c567fde", "commitAfterChange": "0521918891eda29899ac41ba2b8556742f237bce", "methodNumberBeforeChange": 490, "methodNumberAfterChange": 489, "signatureBeforeChange": "      private void _junitFolder()", "signatureAfterChange": "      private void _junitFolder()", "diff": ["-    new Thread(\"Run JUnit on specified folder\") {", "-      public void run() { ", "-        _disableJUnitActions();", "+    // moved this back into the event thread to fix bug 2848696", "+    // this code doesn't have to run in an auxiliary thread", "+    // the actual unit testing later is done in a separate thread", "+    _disableJUnitActions();", "-        if (_model.getDocumentNavigator().isGroupSelected()) {", "-          ArrayList<OpenDefinitionsDocument> docs = _model.getDocumentNavigator().getDocuments();", "-          final LinkedList<OpenDefinitionsDocument> l = new LinkedList<OpenDefinitionsDocument>();", "-          for (OpenDefinitionsDocument doc: docs) {", "-            if (_model.getDocumentNavigator().isSelectedInGroup(doc)) l.add(doc);", "-          }", "-          try { _model.getJUnitModel().junitDocs(l); }  // hourglassOn executed by junitStarted()", "-          catch(UnexpectedException e) { _junitInterrupted(e); }", "-          catch(Exception e) { _junitInterrupted(new UnexpectedException(e)); }", "-        }", "+    if (_model.getDocumentNavigator().isGroupSelected()) {", "+      ArrayList<OpenDefinitionsDocument> docs = _model.getDocumentNavigator().getDocuments();", "+      final LinkedList<OpenDefinitionsDocument> l = new LinkedList<OpenDefinitionsDocument>();", "+      for (OpenDefinitionsDocument doc: docs) {", "+        if (_model.getDocumentNavigator().isSelectedInGroup(doc)) l.add(doc);", "-    }.start();", "+      try { _model.getJUnitModel().junitDocs(l); }  // hourglassOn executed by junitStarted()", "+      catch(UnexpectedException e) { _junitInterrupted(e); }", "+      catch(Exception e) { _junitInterrupted(new UnexpectedException(e)); }", "+    }"]}], "num": 24255}