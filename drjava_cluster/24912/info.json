{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "793e414f9ae34202cdef199b62aa7e8c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e127a11bcd858d6c3676a84de3ed8d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "54bd5bee689bab14e75c88e1e0073ab33a50d736", "commitAfterChange": "cbcb761fd21bd00b53ee54378971530b28d41127", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public static <R> TaskController<R> computeInProcess(final Thunk<? extends R> task, final JVMBuilder jvmBuilder,                                                        boolean start)", "signatureAfterChange": "   public static <R> TaskController<R> computeInProcess(Thunk<? extends R> task, JVMBuilder jvmBuilder,                                                        boolean start)", "diff": ["-  public static <R> TaskController<R> computeInProcess(final Thunk<? extends R> task, final JVMBuilder jvmBuilder,", "+  public static <R> TaskController<R> computeInProcess(Thunk<? extends R> task, JVMBuilder jvmBuilder,", "+    jvmBuilder = jvmBuilder.addDefaultProperties(getProperties(\"plt.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51bc6843a88d42515548c94c9823e369", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "dba5d2158724820f410d4efff37289045b3aca4c", "commitAfterChange": "6db2338d4c58e83974c8e6232ba8e48286d65b5e", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public static <R> TaskController<R> computeInProcess(final Thunk<? extends R> task)", "signatureAfterChange": "   public static <R> TaskController<R> computeInProcess(Thunk<? extends R> task)", "diff": ["-  public static <R> TaskController<R> computeInProcess(final Thunk<? extends R> task) {", "-    return computeInProcess(task, true);", "+  public static <R> TaskController<R> computeInProcess(Thunk<? extends R> task) {", "+    return computeInProcess(task, JVMBuilder.DEFAULT, true);", "+  }"]}], "num": 24912}