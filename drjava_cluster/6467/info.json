{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ae4f36120b9ed53cd30189a4e6d0156", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cab72a9d6aa84fa3ea36d607c49a0b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "bfbbbb34f309b13ef404f393392d7ea8745940cd", "commitAfterChange": "9d671cad5f849049059b2e199aea7279dd398525", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   private void _setupDebugPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDebugPanel(ConfigPanel panel)", "diff": ["-                       new StringOptionComponent(OptionConstants.DEBUG_STEP_EXCLUDE,", "-                                                 \"Classes/Packages To Exclude\", ", "-                                                 this,", "-                                                 \"<html>Any classes that the debuggger should not step into.<br>\" +", "-                                                 \"Should be a COMMA-separated list of fully-qualified class names.<br>\" +", "-                                                 \"To exclude a package, add <code>packagename.*</code> to the list.</html>\"));", "+                       new VectorStringOptionComponent(OptionConstants.DEBUG_STEP_EXCLUDE,", "+                                                       \"Classes/Packages To Exclude\", ", "+                                                       this,", "+                                                       \"<html>Any classes that the debuggger should not step into.<br>\" +", "+                                                       \"Should be a list of fully-qualified class names.<br>\" +", "+                                                       \"To exclude a package, add <code>packagename.*</code> to the list.</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c7c19e443fd410bb381c866a110b311", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JDKDescriptor.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public String getDescription(JavaVersion.FullVersion version)", "signatureAfterChange": "\r     public String getDescription(JavaVersion.FullVersion version)", "diff": ["-    public String getName() { return \"none\"; }", "-    public String getDescription(JavaVersion.FullVersion version) {", "-      switch(version.vendor()) {", "-        case SUN:", "-          return \"Sun JDK library \" + version.toString();", "-        case OPENJDK:", "-          return \"OpenJDK library \" + version.toString();", "-        case APPLE:", "-          return \"Apple JDK library \" + version.toString();", "-        default:", "-          return \"JDK library \" + version.toString();", "-      }", "-    }", "+    public String getName() { return \"none\"; }\r", "+    public String getDescription(JavaVersion.FullVersion version) {\r", "+      switch(version.vendor()) {\r", "+        case ORACLE:\r", "+          return \"Oracle JDK library \" + version.toString();\r", "+        case OPENJDK:\r", "+          return \"OpenJDK library \" + version.toString();\r", "+        case APPLE:\r", "+          return \"Apple JDK library \" + version.toString();\r", "+        default:\r", "+          return \"JDK library \" + version.toString();\r", "+      }\r", "+    }\r"]}], "num": 6467}