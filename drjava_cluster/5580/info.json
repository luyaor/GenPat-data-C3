{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7eaf5dcabea8275f653fdfbf371cd49", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12d8559cc4eb3a8064f7cd49ebb6b365", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public Vector<String> getAugmentedClassPath()", "signatureAfterChange": "   public synchronized Vector<String> getAugmentedClassPath()", "diff": ["-  public Vector<String> getAugmentedClassPath() {", "+  public synchronized Vector<String> getAugmentedClassPath() {", "-    for (ClassPathEntry e: classPathManager.getProjectCP())  ret.add(e.getEntry().toString());", "+    for (ClassPathEntry e: _classPathManager.getProjectCP())  ret.add(e.getEntry().toString());", "-    for (ClassPathEntry e: classPathManager.getBuildDirectoryCP()) ", "+    for (ClassPathEntry e: _classPathManager.getBuildDirectoryCP()) ", "-    for (ClassPathEntry e: classPathManager.getProjectFilesCP())", "+    for (ClassPathEntry e: _classPathManager.getProjectFilesCP())", "-    for (ClassPathEntry e: classPathManager.getExternalFilesCP())", "+    for (ClassPathEntry e: _classPathManager.getExternalFilesCP())", "-    for (ClassPathEntry e: classPathManager.getExtraCP())", "+    for (ClassPathEntry e: _classPathManager.getExtraCP())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bd38953c5392955880b167711e4e087", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   protected void _updateInterpreterClassPath(JavaInterpreter interpreter)", "signatureAfterChange": "   protected void _updateInterpreterClassPath(JavaInterpreter interpreter)", "diff": ["-    for (ClassPathEntry e: _classPathManager.getProjectCP())", "-      interpreter.addProjectClassPath(e.getEntry());", "+    for (File f : _classPathManager.getProjectCP())", "+      interpreter.addProjectClassPath(f);", "-    for (ClassPathEntry e: _classPathManager.getBuildDirectoryCP())", "-      interpreter.addBuildDirectoryClassPath(e.getEntry());", "+    for (File f : _classPathManager.getBuildDirectoryCP())", "+      interpreter.addBuildDirectoryClassPath(f);", "-    for (ClassPathEntry e: _classPathManager.getProjectFilesCP())", "-      interpreter.addProjectFilesClassPath(e.getEntry());", "+    for (File f : _classPathManager.getProjectFilesCP())", "+      interpreter.addProjectFilesClassPath(f);", "-    for (ClassPathEntry e: _classPathManager.getExternalFilesCP())", "-      interpreter.addExternalFilesClassPath(e.getEntry());", "+    for (File f : _classPathManager.getExternalFilesCP())", "+      interpreter.addExternalFilesClassPath(f);", "-    for (ClassPathEntry e: _classPathManager.getExtraCP())", "-      interpreter.addExtraClassPath(e.getEntry());", "+    for (File f : _classPathManager.getExtraCP())", "+      interpreter.addExtraClassPath(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1de20205e06ef24d42f9aed0ae83795e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public synchronized ClassPathVector getClassPath()", "signatureAfterChange": "      public synchronized Iterable<File> getClassPath()", "diff": ["+  public synchronized Iterable<File> getClassPath() {", "+    Iterable<File> result = IterUtil.empty();", "+    result = IterUtil.compose(result, _classPathManager.getProjectCP());", "+    result = IterUtil.compose(result, _classPathManager.getBuildDirectoryCP());", "+    result = IterUtil.compose(result, _classPathManager.getProjectFilesCP());", "+    result = IterUtil.compose(result, _classPathManager.getExternalFilesCP());", "+    result = IterUtil.compose(result, _classPathManager.getExtraCP());", "+    return result;", "-   */", "-  public synchronized ClassPathVector getClassPath() {", "-    ClassPathVector ret = new ClassPathVector();", "-    ", "-    for (ClassPathEntry e: _classPathManager.getProjectCP()) ret.add(e.getEntry());", "-    ", "-    for (ClassPathEntry e: _classPathManager.getBuildDirectoryCP()) ret.add(e.getEntry());", "-    ", "-    for (ClassPathEntry e: _classPathManager.getProjectFilesCP()) ret.add(e.getEntry());", "-    ", "-    for (ClassPathEntry e: _classPathManager.getExternalFilesCP()) ret.add(e.getEntry());", "-    ", "-    for (ClassPathEntry e: _classPathManager.getExtraCP()) ret.add(e.getEntry());", "-    ", "-    return ret;", "-  } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2690e13c1c83ff7f5a96c369599fe1f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public synchronized ClassPathVector getAugmentedClassPath()", "signatureAfterChange": "      public Iterable<File> getAugmentedClassPath()", "diff": ["-   */", "-  public synchronized ClassPathVector getAugmentedClassPath() {", "-    ClassPathVector ret = new ClassPathVector();", "-", "-    for (ClassPathEntry e: _classPathManager.getProjectCP())  ret.add(e.getEntry().toString());", "-", "-    for (ClassPathEntry e: _classPathManager.getBuildDirectoryCP()) ", "-      ret.add(e.getEntry().toString());", "-    ", "-    for (ClassPathEntry e: _classPathManager.getProjectFilesCP())", "-      ret.add(e.getEntry().toString());", "-", "-    for (ClassPathEntry e: _classPathManager.getExternalFilesCP())", "-      ret.add(e.getEntry().toString());", "-", "-    for (ClassPathEntry e: _classPathManager.getExtraCP())", "-      ret.add(e.getEntry().toString());", "-", "-    return ret;", "+  public Iterable<File> getAugmentedClassPath() { return getClassPath(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b7a748a7d2086674de4bb6c045de2a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public ClassPathVector getClassPath()", "signatureAfterChange": "   public synchronized ClassPathVector getClassPath()", "diff": ["-  public ClassPathVector getClassPath() {", "+  public synchronized ClassPathVector getClassPath() {", "-    for (ClassPathEntry e: classPathManager.getProjectCP()) ret.add(e.getEntry());", "+    for (ClassPathEntry e: _classPathManager.getProjectCP()) ret.add(e.getEntry());", "-    for (ClassPathEntry e: classPathManager.getBuildDirectoryCP()) ret.add(e.getEntry());", "+    for (ClassPathEntry e: _classPathManager.getBuildDirectoryCP()) ret.add(e.getEntry());", "-    for (ClassPathEntry e: classPathManager.getProjectFilesCP()) ret.add(e.getEntry());", "+    for (ClassPathEntry e: _classPathManager.getProjectFilesCP()) ret.add(e.getEntry());", "-    for (ClassPathEntry e: classPathManager.getExternalFilesCP()) ret.add(e.getEntry());", "+    for (ClassPathEntry e: _classPathManager.getExternalFilesCP()) ret.add(e.getEntry());", "-    for (ClassPathEntry e: classPathManager.getExtraCP()) ret.add(e.getEntry());", "+    for (ClassPathEntry e: _classPathManager.getExtraCP()) ret.add(e.getEntry());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddb1551eec4c950d23775b6e165eecd7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 38, "signatureBeforeChange": "   protected void _updateInterpreterClassPath(JavaInterpreter interpreter)", "signatureAfterChange": "   protected void _updateInterpreterClassPath(JavaInterpreter interpreter)", "diff": ["-  protected void _updateInterpreterClassPath(JavaInterpreter interpreter) {", "+  protected /* synchronized */ void _updateInterpreterClassPath(JavaInterpreter interpreter) {", "-    for (ClassPathEntry e: classPathManager.getProjectCP())", "+    for (ClassPathEntry e: _classPathManager.getProjectCP())", "-    for (ClassPathEntry e: classPathManager.getBuildDirectoryCP())", "+    for (ClassPathEntry e: _classPathManager.getBuildDirectoryCP())", "-    for (ClassPathEntry e: classPathManager.getProjectFilesCP())", "+    for (ClassPathEntry e: _classPathManager.getProjectFilesCP())", "-    for (ClassPathEntry e: classPathManager.getExternalFilesCP())", "+    for (ClassPathEntry e: _classPathManager.getExternalFilesCP())", "-    for (ClassPathEntry e: classPathManager.getExtraCP())", "+    for (ClassPathEntry e: _classPathManager.getExtraCP())"]}], "num": 5580}