{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b670d0b688da1e30dda277d52622d724", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f3eee37c048d1d0a16996bafc3c06a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 910, "methodNumberAfterChange": 608, "signatureBeforeChange": "    final private boolean jj_3R_82()", "signatureAfterChange": "    final private boolean jj_3R_82()", "diff": ["+", "+  final private boolean jj_3R_82() {", "+    if (jj_scan_token(LESS)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_119()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_120()) return true;", "+    }", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_121()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_82() {", "-    if (jj_scan_token(SYNCHRONIZED)) return true;", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_87()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    if (jj_3R_136()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c69d558a139ee3063e11616dec79367", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public int findNext(ContinueCommand startFromTop)", "signatureAfterChange": "   public FindResult findNext()", "diff": ["-  public int findNext(ContinueCommand startFromTop) {", "+  public FindResult findNext() {", "+        _found = true;", "-      else if ((getStartOffset() > 0) && (startFromTop.shouldContinue())) { ", "+      else {", "+        _wrapped = true;", "+      // flag the return value so that they can tell that we had to wrap the file to determine the info.", "+    ", "+      if(foundOffset == -1 && _found) {", "+        _current = _start;", "+        _found = false;", "+        return findNext();", "+      } ", "-        foundOffset = -1;", "+        FindResult fr = new FindResult(foundOffset, _wrapped);", "+        _wrapped = false;", "+        return fr;", "-      return foundOffset;"]}], "num": 29050}