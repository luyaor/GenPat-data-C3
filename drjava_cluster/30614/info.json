{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84a85a5a06f2cdd13ca9f0491387b9f2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f80d64e1d5f2afb906b1f56345b2ecd4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testOpenRealFileAllowAbandon()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testOpenRealFile()     throws BadLocationException, IOException", "diff": ["-  public void testOpenRealFileAllowAbandon()", "+   */", "+  public void testOpenRealFile()", "-    _model.openFile(new FileSelector(tempFile));", "-    listener.assertOpenCount(1);", "-    assertModified(false);", "-    assertContents(BAR_TEXT);", "+    try {", "+      OpenDefinitionsDocument doc = _model.openFile(new FileSelector(tempFile));", "+      listener.assertOpenCount(1);", "+      assertModified(false, doc);", "+      assertContents(BAR_TEXT, doc);", "+    }", "+    catch (OperationCanceledException oce) {", "+      // Should not be canceled", "+      fail(\"Open was unexpectedly canceled!\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd181ddc68fc48fb7465abdbc35d51f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testOpenNonexistentFile()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testOpenNonexistentFile()     throws BadLocationException, IOException", "diff": ["+    OpenDefinitionsDocument doc = null;", "+", "-      _model.openFile(new FileSelector(new File(\"fake-file\")));", "+      doc = _model.openFile(new FileSelector(new File(\"fake-file\")));", "+    catch (OperationCanceledException oce) {", "+      // Should not be canceled", "+      fail(\"Open was unexpectedly canceled!\");", "+    }", "-    assertLength(0);", "-    assertModified(false);", "-  }", "+    assertEquals(\"non-existant file\", doc, null);"]}], "num": 30614}