{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2235acd67a8072b68621d01e397b55a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "039d62f1f4c1760cd4e14f5053f1e252", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "   private void createPopupMenu()", "signatureAfterChange": "   private void createPopupMenu()", "diff": ["+", "+    /* Toggle bookmark */", "+    JMenuItem toggleBookmarkItem = new JMenuItem(\"Toggle Bookmark\");", "+    toggleBookmarkItem.addActionListener ( new AbstractAction() {", "+      public void actionPerformed( ActionEvent ae) {", "+        if (getSelectionStart()==getSelectionEnd()) {", "+          // nothing selected", "+          // Make sure that the breakpoint is set on the *clicked* line, if within a selection block.", "+          setCaretPosition(viewToModel(_popupMenuMA.getLastMouseClick().getPoint()));", "+        }", "+        _mainFrame.toggleBookmark();", "+      }", "+    });", "+    _popMenu.add(toggleBookmarkItem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "130202f45a4bd8f6ba90c27a1295f8a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOpsTest.java", "commitBeforeChange": "ebd73bc10a1e39a5f459340660fc404670db2d0e", "commitAfterChange": "43b808b9e05f3378c0faae83fe4225562adc4c6e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static Test suite()", "signatureAfterChange": "   public void testGetStackTrace()", "diff": ["-   */", "-  public static Test suite() {", "-    return  new TestSuite(StringOpsTest.class);", "-  }", "+   */", "+  public void testGetStackTrace() {", "+    final String trace = \"hello\";", "+    Throwable t = new Throwable() {", "+      public void printStackTrace(PrintWriter w) {", "+        w.print(trace);", "+      }", "+    };", "+    assertEquals(\"Should have returned the correct stack trace!\", trace, StringOps.getStackTrace(t));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0c345b00ac08860c5225bfb96b5b8de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "91f1790d793689beae896db47015b721b602919f", "commitAfterChange": "d33d42f5f56aa9f97fa7ee5954a0170706bf34dc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private void createPopupMenu()", "signatureAfterChange": "   private void createPopupMenu()", "diff": ["+    /* Go to this file... */", "+    _popMenu.addSeparator();", "+    JMenuItem gotoFileUnderCursorItem = new JMenuItem(\"Go to File Under Cursor...\");", "+    gotoFileUnderCursorItem.addActionListener ( new AbstractAction() {", "+      public void actionPerformed( ActionEvent ae) {", "+        _doc.setCurrentLocation(getCaretPosition());", "+        _mainFrame._gotoFileUnderCursor();", "+      }", "+    });", "+    _popMenu.add(gotoFileUnderCursorItem);", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0f421a589e0f493adb12e7ec9deab93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-mac/edu/rice/cs/drjava/platform/MacPlatform.java", "commitBeforeChange": "77b08b2c2aecee48e010895d99d03539a1aa19da", "commitAfterChange": "8c0220c285239f624657ec2660b265363e131e14", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void beforeUISetup()", "signatureAfterChange": "   public void beforeUISetup()", "diff": ["+    ", "+    // needs to be done here, otherwise the event gets lost", "+    ApplicationListener appListener = new ApplicationAdapter() {", "+      public void handleOpenFile(ApplicationEvent event) {", "+        if (event.getFilename()!=null) {", "+          edu.rice.cs.drjava.DrJavaRoot.handleRemoteOpenFile(new java.io.File(event.getFilename()), -1);", "+        }", "+      }", "+    };", "+    ", "+    // Register the ApplicationListener.", "+    Application appl = new Application();", "+    appl.addApplicationListener(appListener);"]}], "num": 7832}