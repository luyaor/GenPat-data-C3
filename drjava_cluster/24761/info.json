{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b55bfbda8a2872371e3cb7ba3b4c184", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01c1fa0f9c6a0bb09fafb9c452102267", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "f858bdc4a8556fa2d602de70e64361813405ec96", "commitAfterChange": "9a6ce0c2dd9939538b22d21a227d64c36bc636d3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public DefaultGlobalModel()", "signatureAfterChange": "   public DefaultGlobalModel()", "diff": ["-//    AbstractMasterJVM._log.log(this + \" has called contstructor for DefaultGlobal Model\");", "+    Iterable<? extends JDKToolsLibrary> tools = findLibraries();", "+    List<CompilerInterface> compilers = new LinkedList<CompilerInterface>();", "+    _debugger = null;", "+    for (JDKToolsLibrary t : tools) {", "+      if (t.compiler().isAvailable()) { compilers.add(t.compiler()); }", "+      if (_debugger == null && t.debugger().isAvailable()) { _debugger = t.debugger(); }", "+    }", "+    if (_debugger == null) { _debugger = NoDebuggerAvailable.ONLY; }", "+    ", "-    _compilerModel = new DefaultCompilerModel(this);", "+    _compilerModel = new DefaultCompilerModel(this, compilers);", "-    _createDebugger();", "+    _setupDebugger();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14c005bd8da0bbd3d7808d2de4b84210", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "34921a1a3d031bdf7caa876f32f38a6fdc9dedda", "commitAfterChange": "fca5fcebd9a0a23f563d800e635b0c2ebad1969e", "methodNumberBeforeChange": 273, "methodNumberAfterChange": 275, "signatureBeforeChange": "   private OpenDefinitionsDocument _openFile(File file)     throws IOException, AlreadyOpenException", "signatureAfterChange": "   private OpenDefinitionsDocument _openFile(File file)     throws IOException, AlreadyOpenException", "diff": ["+      String _topLevelPath;", "+      if(getProjectFile() != null){", "+        _topLevelPath = getProjectFile().getCanonicalPath();", "+        _topLevelPath = _topLevelPath.substring(0, _topLevelPath.lastIndexOf(File.separator));;", "+      }else{", "+        _topLevelPath = \"\";", "+      }", "-      _documentNavigator.addDocument(idoc, path);", "+      if (!path.equals(_topLevelPath) && !path.startsWith(_topLevelPath + File.separator) ){", "+        /** it's in external files, so don't give it a path */", "+        _documentNavigator.addDocument(idoc, \"\");", "+      }else{", "+        path = path.substring(_topLevelPath.length());", "+        _documentNavigator.addDocument(idoc, path);", "+      }", "+      ", "+      "]}], "num": 24761}