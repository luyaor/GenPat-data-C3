{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a2e687af439eaf6906a66a9376dfc32", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6226b5b60195e09798bdee5987dfd2d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r   public void testSetNodeNoOverwrite() throws Exception", "signatureAfterChange": "   public void testSetNodeNoOverwrite() throws Exception", "diff": ["-  }\r", "-  public void testSetNodeNoOverwrite() throws Exception {\r", "-    XMLConfig xc = new XMLConfig();\r", "-    xc.set(\"foo/bar\", \"abc\", false);\r", "-    \r", "-    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar>abc</bar>\"+NL+\"</foo>\"+NL, xc.toString());\r", "-    assertEquals(\"abc\", xc.get(\"foo/bar\"));\r", "-    \r", "-    xc.set(\"foo/bar\", \"def\", false);\r", "-    \r", "-    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar>abc</bar>\"+NL+\"  <bar>def</bar>\"+NL+\"</foo>\"+NL, xc.toString());\r", "-    List<String> r = xc.getMultiple(\"foo/bar\");\r", "-    assertEquals(2, r.size());\r", "-    assertEquals(\"abc\", r.get(0));\r", "-    assertEquals(\"def\", r.get(1));\r", "-  }\r", "+  }", "+  public void testSetNodeNoOverwrite() throws Exception {", "+    XMLConfig xc = new XMLConfig();", "+    xc.set(\"foo/bar\", \"abc\", false);", "+    ", "+    assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar>abc</bar>\"+NL+\"</foo>\"+NL), xc.toString());", "+    assertEquals(\"abc\", xc.get(\"foo/bar\"));", "+    ", "+    xc.set(\"foo/bar\", \"def\", false);", "+    ", "+    assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar>abc</bar>\"+NL+\"  <bar>def</bar>\"+NL+\"</foo>\"+NL), xc.toString());", "+    List<String> r = xc.getMultiple(\"foo/bar\");", "+    assertEquals(2, r.size());", "+    assertEquals(\"abc\", r.get(0));", "+    assertEquals(\"def\", r.get(1));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd1b6f0988c8d930a5d57ebdacfd3245", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r   public void testSetAttrNoOverwrite() throws Exception", "signatureAfterChange": "   public void testSetAttrNoOverwrite() throws Exception", "diff": ["-  }\r", "-  public void testSetAttrNoOverwrite() throws Exception {\r", "-    XMLConfig xc = new XMLConfig();\r", "-    xc.set(\"foo/bar.fee\", \"abc\", false);\r", "-    \r", "-    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fee=\\\"abc\\\"/>\"+NL+\"</foo>\"+NL, xc.toString());\r", "-    assertEquals(\"abc\", xc.get(\"foo/bar.fee\"));\r", "-    \r", "-    xc.set(\"foo/bar.fee\", \"def\", false);\r", "-    \r", "-    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fee=\\\"abc\\\"/>\"+NL+\"  <bar fee=\\\"def\\\"/>\"+NL+\"</foo>\"+NL, xc.toString());\r", "-    List<String> r = xc.getMultiple(\"foo/bar.fee\");\r", "-    assertEquals(2, r.size());\r", "-    assertEquals(\"abc\", r.get(0));\r", "-    assertEquals(\"def\", r.get(1));\r", "-  }\r", "+  }", "+  public void testSetAttrNoOverwrite() throws Exception {", "+    XMLConfig xc = new XMLConfig();", "+    xc.set(\"foo/bar.fee\", \"abc\", false);", "+    ", "+    assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fee=\\\"abc\\\"/>\"+NL+\"</foo>\"+NL), xc.toString());", "+    assertEquals(\"abc\", xc.get(\"foo/bar.fee\"));", "+    ", "+    xc.set(\"foo/bar.fee\", \"def\", false);", "+    ", "+    assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fee=\\\"abc\\\"/>\"+NL+\"  <bar fee=\\\"def\\\"/>\"+NL+\"</foo>\"+NL), xc.toString());", "+    List<String> r = xc.getMultiple(\"foo/bar.fee\");", "+    assertEquals(2, r.size());", "+    assertEquals(\"abc\", r.get(0));", "+    assertEquals(\"def\", r.get(1));", "+  }"]}], "num": 12845}