{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d2d57b217d5fe55ef70a0a91828aa257", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "886d2439f6684f7573981612c6471ec1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartAfterOpenBraceTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testCommentsAfterBrace() throws BadLocationException", "signatureAfterChange": "      public void testCommentsAfterBrace() throws BadLocationException", "diff": ["-    assertTrue(\"START = DOCSTART.\", !_rule.applyRule(_doc, 0));", "-    assertTrue(\"START = DOCSTART.\", !_rule.applyRule(_doc, 14));", "-    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 15));", "-    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 30));", "-    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 44));", "-    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 45));", "-    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 60));", "-    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 77));", "+    assertTrue(\"START = DOCSTART.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "+    assertTrue(\"START = DOCSTART.\", !_rule.applyRule(_doc, 14, Indenter.OTHER));", "+    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 15, Indenter.OTHER));", "+    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 30, Indenter.OTHER));", "+    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 44, Indenter.OTHER));", "+    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 45, Indenter.OTHER));", "+    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 60, Indenter.OTHER));", "+    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 77, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba6e12832823a7e4269f79cc915d86bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartAfterOpenBraceTest.java", "commitBeforeChange": "5d2701667cf27d44a069ea945e7b8afcad461e22", "commitAfterChange": "0dc9a35e122071847260a9f3f7c5a7bac3c46105", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testCommentsAfterBrace() throws BadLocationException", "signatureAfterChange": "      public void testCommentsAfterBrace() throws BadLocationException", "diff": ["-    assertTrue(\"START = DOCSTART.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "-    assertTrue(\"START = DOCSTART.\", !_rule.applyRule(_doc, 14, Indenter.OTHER));", "-    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 15, Indenter.OTHER));", "-    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 30, Indenter.OTHER));", "-    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 44, Indenter.OTHER));", "-    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 45, Indenter.OTHER));", "-    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 60, Indenter.OTHER));", "-    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 77, Indenter.OTHER));", "+    assertTrue(\"START = DOCSTART.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START = DOCSTART.\", !_rule.applyRule(_doc, 14, Indenter.IndentReason.OTHER));", "+    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 15, Indenter.IndentReason.OTHER));", "+    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 30, Indenter.IndentReason.OTHER));", "+    assertTrue(\"Only WS between START and open brace.\", _rule.applyRule(_doc, 44, Indenter.IndentReason.OTHER));", "+    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 45, Indenter.IndentReason.OTHER));", "+    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 60, Indenter.IndentReason.OTHER));", "+    assertTrue(\"Only comment and WS between START and open brace.\", _rule.applyRule(_doc, 77, Indenter.IndentReason.OTHER));"]}], "num": 6858}