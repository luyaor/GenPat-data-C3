{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e086eb617b1c220c99ecb037b08969a2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf647b4d1433b8b0dd00ccd604ed0605", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartAfterOpenBraceTest.java", "commitBeforeChange": "5d2701667cf27d44a069ea945e7b8afcad461e22", "commitAfterChange": "0dc9a35e122071847260a9f3f7c5a7bac3c46105", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testNoBrace() throws BadLocationException", "signatureAfterChange": "      public void testNoBrace() throws BadLocationException", "diff": ["-    assertTrue(\"START has no preceding brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "-    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, 8, Indenter.OTHER));", "-    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, _text.length()-1, Indenter.OTHER));", "+    assertTrue(\"START has no preceding brace.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, 8, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, _text.length()-1, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7e833e6c5a04e62cc00bbccf77863f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartAfterOpenBraceTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void testNoBrace() throws BadLocationException", "signatureAfterChange": "          public void testNoBrace() throws BadLocationException", "diff": ["-    assertTrue(\"START has no preceding brace.\", !_rule.applyRule(_doc, 0));", "-    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, 8));", "-    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, _text.length()-1));", "+    assertTrue(\"START has no preceding brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "+    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, 8, Indenter.OTHER));", "+    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, _text.length()-1, Indenter.OTHER));"]}], "num": 5289}