{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7a5829b044adadbe7e901e883a48f3f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0fb4e7615752300bf18eeebad29afc6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public FindReplaceDialog(MainFrame frame, SingleDisplayModel model)", "signatureAfterChange": "   public FindReplaceDialog(MainFrame frame, SingleDisplayModel model)", "diff": ["-    _labelPanel = new JPanel(new GridLayout(2,1));", "+    _labelPanel = new JPanel(new GridLayout(3,1));", "-", "+    ", "+    ", "+//    haven't completed this functionality yet    ", "+    IgnoreCommentsAndStringsListener icasl = new IgnoreCommentsAndStringsListener();", "+    _ignoreCommentsAndStrings = new JCheckBox(\"Ignore Comments and Strings\", DrJava.getConfig().getSetting(OptionConstants.FIND_NO_COMMENTS_STRINGS));", "+    _machine.setIgnoreCommentsAndStrings(DrJava.getConfig().getSetting(OptionConstants.FIND_NO_COMMENTS_STRINGS));", "+    _ignoreCommentsAndStrings.addItemListener(icasl);", "+    ", "+    _commentsAndStringsPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0));", "+    _commentsAndStringsPanel.add(_ignoreCommentsAndStrings);", "+        ", "+    ", "+    ", "-    //_rightPanel = new JPanel(new GridLayout(1,2,5,0));", "-    JPanel midPanel = new JPanel(new GridLayout(2,1));", "-    JPanel farRightPanel = new JPanel(new GridLayout(2,1));", "+//    _rightPanel = new JPanel(new GridLayout(1,2,5,0));", "+    JPanel midPanel = new JPanel(new GridLayout(3,1));", "+    JPanel farRightPanel = new JPanel(new GridLayout(3,1));", "-    /******** Set up the Panel containing both rows of checkboxes ********/", "+    /******** Set up the Panel containing all 3 rows of checkboxes ********/", "+    farRightPanel.add(_commentsAndStringsPanel);", "-    /******** Set upt the Panel containing the two above main panels ********/", "+    /******** Set upt the Panel containing the three above main panels ********/", "+     ", "-    hookComponents(this,_rightPanel,_labelPanel,buttons);", "+    hookComponents(this, _rightPanel, _labelPanel,buttons);", "-    _searchAllDocuments.setNextFocusableComponent(_findNextButton); // JL (edited)", "+    _searchAllDocuments.setNextFocusableComponent(_ignoreCommentsAndStrings); // JL (edited)", "+    _ignoreCommentsAndStrings.setNextFocusableComponent(_findNextButton);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bef1fc8d273156a63cb5e8a149537bdc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "bfba802081a2eff3b15a8f59c15cce454daf2425", "commitAfterChange": "f3f02042066599d1dcd5a3abe554d8c7a4055945", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "signatureAfterChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "diff": ["+    ", "-    for (CompilerInterface i : compilers) { _compilers.add(i); }", "-    if (_compilers.size() > 0) { _active = _compilers.get(0); }", "-    else { _active = NoCompilerAvailable.ONLY; }", "+    List<String> compilerNames = new ArrayList<String>();", "+    ", "+    String dCompName = DrJava.getConfig().getSetting(OptionConstants.COMPILER_DEFAULT);", "+    ", "+    for (CompilerInterface i : compilers) { _compilers.add(i); compilerNames.add(i.getName());}", "+    if (_compilers.size() > 0) { ", "+      if(dCompName!=\"\" && compilerNames.contains(dCompName)) {", "+        _active = _compilers.get(compilerNames.indexOf(dCompName));", "+      }", "+      else {", "+        _active = _compilers.get(0);", "+        DrJava.getConfig().setSetting(OptionConstants.COMPILER_DEFAULT, _active.getName());", "+      }", "+    }", "+    else { ", "+      _active = NoCompilerAvailable.ONLY; ", "+    }"]}], "num": 17984}