{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "813fee4df7190d8a4af96167d1c1c09e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "194d8c14390aec7d6542dde3a9c9cf0a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 163, "signatureBeforeChange": "   public static <T1, T2, T3, T4, R> Lambda<T2, Lambda3<T1, T3, T4, R>>      currySecond(final Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda)", "signatureAfterChange": "     public BindThirdLambda2(Lambda3<? super T1, ? super T2, ? super T3, ? extends R> lambda, T3 arg3)", "diff": ["+    private final T3 _arg3;", "+    public BindThirdLambda2(Lambda3<? super T1, ? super T2, ? super T3, ? extends R> lambda, T3 arg3) {", "+      _lambda = lambda; _arg3 = arg3;", "+    }", "-  public static <T1, T2, T3, T4, R> Lambda<T2, Lambda3<T1, T3, T4, R>> ", "-    currySecond(final Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda) {", "-    return new Lambda<T2, Lambda3<T1, T3, T4, R>>() {", "-      public Lambda3<T1, T3, T4, R> value(final T2 a2) {", "-        return new Lambda3<T1, T3, T4, R>() {", "-          public R value(T1 a1, T3 a3, T4 a4) { return lambda.value(a1, a2, a3, a4); }", "-        };", "-      }", "-    };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26f3ddec9701eb7f3c01ce318eef6df9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 294, "signatureBeforeChange": "   public static <T1, T2, T3, R> Lambda<T1, Lambda2<T2, T3, R>>      curryFirst(final Lambda3<? super T1, ? super T2, ? super T3, ? extends R> lambda)", "signatureAfterChange": "     public R value(T1 arg1, T2 arg2)", "diff": ["-   */", "-  public static <T1, T2, T3, R> Lambda<T1, Lambda2<T2, T3, R>> ", "-    curryFirst(final Lambda3<? super T1, ? super T2, ? super T3, ? extends R> lambda) {", "-    return new Lambda<T1, Lambda2<T2, T3, R>>() {", "-      public Lambda2<T2, T3, R> value(final T1 arg1) {", "-        return new Lambda2<T2, T3, R>() {", "-          public R value(T2 arg2, T3 arg3) { return lambda.value(arg1, arg2, arg3); }", "-        };", "-      }", "-    };", "+    public RunnableLambda2(Runnable2<? super T1, ? super T2> r, R result) { _r = r; _result = result; }", "+    public R value(T1 arg1, T2 arg2) { _r.run(arg1, arg2); return _result; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95768bd7c79d0d99e47c9a973dfaf31d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 304, "signatureBeforeChange": "   public static <T1, T2, T3, R> Lambda<T2, Lambda2<T1, T3, R>>      currySecond(final Lambda3<? super T1, ? super T2, ? super T3, ? extends R> lambda)", "signatureAfterChange": "     public LambdaPredicate(Lambda<? super T, ? extends Boolean> l)", "diff": ["-   */", "-  public static <T1, T2, T3, R> Lambda<T2, Lambda2<T1, T3, R>> ", "-    currySecond(final Lambda3<? super T1, ? super T2, ? super T3, ? extends R> lambda) {", "-    return new Lambda<T2, Lambda2<T1, T3, R>>() {", "-      public Lambda2<T1, T3, R> value(final T2 arg2) {", "-        return new Lambda2<T1, T3, R>() {", "-          public R value(T1 arg1, T3 arg3) { return lambda.value(arg1, arg2, arg3); }", "-        };", "-    };", "+    private final Lambda<? super T, ? extends Boolean> _l;", "+    public LambdaPredicate(Lambda<? super T, ? extends Boolean> l) { _l = l; }"]}], "num": 3311}