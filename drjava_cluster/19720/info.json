{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1a68523bfcbc837c72ba393206e6cc8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b1459ef356ec3b0e26bada7fc49dc02", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "1313de8815d48e0a1c60eb5bee6900b6b7af3993", "commitAfterChange": "802c4acbf71daa5d149dbcd67d1f360241574951", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 27, "signatureBeforeChange": "     private void _checkSync(Document doc)", "signatureAfterChange": "     private void _checkSync(Document doc)", "diff": ["-      if (_odd == null) {", "+      if (_warnedOutOfSync) {", "-      if (!_odd.checkIfClassFileInSync()) {", "-        try {", "-          doc.insertString(doc.getLength(), TEST_OUT_OF_SYNC, OUT_OF_SYNC_ATTRIBUTES);", "-        }", "-        catch (BadLocationException ble) {", "-          throw new UnexpectedException(ble);", "+      for (int i = 0; i < _odds.size(); i++) {", "+        if (!_odds.get(i).checkIfClassFileInSync()) {", "+          try {", "+            doc.insertString(0, TEST_OUT_OF_SYNC, OUT_OF_SYNC_ATTRIBUTES);", "+            _warnedOutOfSync = true;", "+            return;", "+          }", "+          catch (BadLocationException ble) {", "+            throw new UnexpectedException(ble);", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb687066d41d1e635c95b91275fd5dc4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "530cb3b64455d081e962324602750973729aa1fb", "commitAfterChange": "edb6c56f8ad5495255b4157f1e495f302271cd2d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public synchronized void removeBreakpoint(final Breakpoint breakpoint)", "signatureAfterChange": "   public synchronized void removeBreakpoint(final Breakpoint breakpoint)", "diff": ["-    if ( breakpoint.getRequest() != null && _eventManager != null) {", "+    Vector<BreakpointRequest> requests = breakpoint.getRequests();", "+    if ( requests.size() > 0 && _eventManager != null) {", "-        _eventManager.deleteEventRequest(breakpoint.getRequest());", "+        for (int i=0; i < requests.size(); i++) {", "+          _eventManager.deleteEventRequest(requests.elementAt(i));", "+        }", "-    else {", "-      _pendingRequestManager.removePendingRequest(breakpoint);", "-    }", "+    //else {", "+    // Now always remove from pending request, since it's always there", "+    _pendingRequestManager.removePendingRequest(breakpoint);", "+    //}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2bb000936c3f5ff1bf9be684258e4eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BraceReductionTestCase.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public BraceReductionTestCase(String name)", "signatureAfterChange": "   protected void insertGap(BraceReduction model, int size)", "diff": ["-  ", "-  public BraceReductionTestCase(String name) {", "-    super(name);", "+   */", "+  protected void insertGap(BraceReduction model, int size) {", "+    for (int i = 0; i < size; i++) {", "+      model.insertChar(' ');", "+    }"]}], "num": 19720}