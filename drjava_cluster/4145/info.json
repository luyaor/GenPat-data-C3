{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a3c680cec71023dd3c1b0f7f8ec822e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b9a5b816f53884e796eb24e6bfb9e02", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public synchronized void testBreakpoints() throws Exception", "signatureAfterChange": "   public synchronized void testBreakpoints() throws Exception", "diff": ["-    if (printMessages) System.out.println(\"----testBreakpoints----\");", "+    _log.log(\"----testBreakpoints----\");", "-    if (printMessages) System.out.println(\"----After breakpoint:\\n\" + getInteractionsText());", "+    _log.log(\"----After breakpoint:\\n\" + getInteractionsText());", "-    if (printMessages) System.out.println(\"adding another breakpoint\");", "+    _log.log(\"adding another breakpoint\");", "-      if (printMessages) System.out.println(\"resuming\");", "+      _log.log(\"resuming\");", "-    if (printMessages) System.out.println(\"----After one resume:\\n\" + getInteractionsText());", "+    _log.log(\"----After one resume:\\n\" + getInteractionsText());", "-      if ( printMessages ) System.out.println(\"-------- Resuming --------\");", "+      _log.log(\"-------- Resuming --------\");", "-    if (printMessages) System.out.println(\"----After second resume:\\n\" + getInteractionsText());", "+    _log.log(\"----After second resume:\\n\" + getInteractionsText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70732c70f902bbc14536f1b298a58832", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "de5d6cb8095b8316a5027b98971107ba8d8608ac", "commitAfterChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 15, "signatureBeforeChange": "              public void debuggerStarted()", "signatureAfterChange": "   public synchronized void testBreakpointsNonPublicClasses()      throws DebugException, BadLocationException, IOException, InterruptedException", "diff": ["-      ", "-      public void debuggerStarted() {", "-        synchronized(_notifierLock) {", "-          debuggerStartedCount++;", "-          if (printEvents) System.out.println(\"debuggerStarted \" + debuggerStartedCount);", "-          _notifyObject(_notifierLock);", "-        }", "-      }", "+  public synchronized void testBreakpointsNonPublicClasses() ", "+    if (printMessages) System.out.println(\"----testBreakpointsNonPublicClasses----\");", "+    BreakpointTestListener debugListener = new BreakpointTestListener();", "+      _debugManager.startup();", "+    _debugManager.toggleBreakpoint(doc,DEBUG_CLASS.indexOf(\"Baz Line 1\"),14);", "+      interpretIgnoreResult(\"new DrJavaDebugClass2().baz()\");", "+    if (printMessages) System.out.println(\"----After breakpoint:\\n\" + getInteractionsText());", "+    assertInteractionsDoesNotContain(\"Baz Line 1\");", "+    if (printMessages) System.out.println(\"----After one resume:\\n\" + getInteractionsText());", "+    assertInteractionsContains(\"Baz Line 1\");", "+    if (printMessages) System.out.println(\"----After second resume:\\n\" + getInteractionsText());", "+    assertInteractionsContains(\"Bar Line 2\");"]}], "num": 4145}