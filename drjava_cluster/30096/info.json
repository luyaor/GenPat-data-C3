{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3276b79cc303b757ce4e205c33679529", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "536909db16eddd792b4cbee72ea14d8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      public void testPromptListClearedOnReset() throws Exception", "signatureAfterChange": "      public void testPromptListClearedOnReset() throws Exception", "diff": ["-                 InteractionsDocument.DEFAULT_BANNER.length() + InteractionsDocument.DEFAULT_PROMPT.length(),", "+                 InteractionsModel.getStartUpBanner().length() + InteractionsDocument.DEFAULT_PROMPT.length(),", "-                 InteractionsDocument.DEFAULT_BANNER.length() + InteractionsDocument.DEFAULT_PROMPT.length(),", "+                 InteractionsModel.getStartUpBanner().length() + InteractionsDocument.DEFAULT_PROMPT.length(),", "-                 InteractionsDocument.DEFAULT_BANNER.length() + InteractionsDocument.DEFAULT_PROMPT.length() * 2 + 1,", "+                 InteractionsModel.getStartUpBanner().length() + InteractionsDocument.DEFAULT_PROMPT.length() * 2 + 1,", "-      _model.resetInterpreter();", "+      _model.resetInterpreter(FileOption.NULL_FILE);  // restarting the interpreter since argument is not null"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dbc833e66296db2af04f8ce609559c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testStepInto()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testStepInto()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-      _debugger.step(Debugger.STEP_INTO);", "+      _asynchStep(Debugger.STEP_INTO);", "-      _debugger.step(Debugger.STEP_OVER);", "+      _asynchStep(Debugger.STEP_OVER);", "-      _debugger.step(Debugger.STEP_OVER);", "+      _asynchStep(Debugger.STEP_OVER);", "-      _debugger.step(Debugger.STEP_OVER);", "+      _asynchStep(Debugger.STEP_OVER);", "-      _debugger.step(Debugger.STEP_OVER);", "+      _asynchStep(Debugger.STEP_OVER);", "-      _debugger.step(Debugger.STEP_OVER);", "-      _waitForNotifies(2);  // interactionEnded, currThreadDied", "+      _asynchStep(Debugger.STEP_OVER);", "+      _waitForNotifies(3);  // interactionEnded, currThreadDied, interpreterChanged"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0c236c9e4251748b54e9605fadea8f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk15/edu/rice/cs/drjava/model/compiler/Javac150Compiler.java", "commitBeforeChange": "9e416ec969ee1b990100c9d98abf8588475251ab", "commitAfterChange": "5333b963d0d699214d4f763e3246299880072474", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public List<? extends CompilerError> compile(List<? extends File> files, List<? extends File> classPath,                                                 List<? extends File> sourcePath, File destination,                                                 List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "signatureAfterChange": "   public List<? extends CompilerError> compile(List<? extends File> files, List<? extends File> classPath,                                                 List<? extends File> sourcePath, File destination,                                                 List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "diff": ["-  */", "+    */", "-    DebugUtil.debug.logStart(\"compile()\");", "-    DebugUtil.debug.logValues(new String[]{ \"files\", \"classPath\", \"sourcePath\", \"destination\", \"bootClassPath\", ", "+    debug.logStart(\"compile()\");", "+    debug.logValues(new String[]{ \"this\", \"files\", \"classPath\", \"sourcePath\", \"destination\", \"bootClassPath\", ", "-                              files, classPath, sourcePath, destination, bootClassPath, sourceVersion, showWarnings);", "-    if (bootClassPath == null) { bootClassPath = _defaultBootClassPath; }", "+                    this, files, classPath, sourcePath, destination, bootClassPath, sourceVersion, showWarnings);", "+    ", "-      DebugUtil.debug.logEnd(\"compile() (caught an exception)\");", "+      error.log(t);", "+      debug.logEnd(\"compile() (caught an exception)\");", "-    DebugUtil.debug.logEnd(\"compile()\");", "+    debug.logEnd(\"compile()\");"]}], "num": 30096}