{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b058bcd83a94673ac082fd6ed179923b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a2b28c2516ad25cb1dcd05b6b4a7a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigatorTest.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testRenameDocument()", "signatureAfterChange": "   public void testRenameDocument()", "diff": ["-    _name = \"MyTest.dj0\";", "-    INavigatorItem item = new DummyINavigatorItem(\"MyTest.dj0\");", "-    Object _lock = new Object();", "-    synchronized(_lock) {", "+    String name = \"MyTest.dj0\";", "+    String newName = \"MyTest.dj0*\";", "+    DummyINavigatorItem item = new DummyINavigatorItem(name);", "+    DummyINavigatorItem newItem = new DummyINavigatorItem(newName);", "+//    Object _lock = new Object();", "+//    synchronized(_lock) {", "-    }", "+//    }", "-    synchronized(_lock) {", "+//    synchronized(_lock) {", "-    }", "-    synchronized(_lock) {", "+//    }", "+//    synchronized(_lock) {", "-      LeafNode node = (LeafNode)folder3.getChildAt(0);;", "-      assertEquals(\"should have been renamed\", _name, node.toString());", "-      assertEquals(\"node should have same parent\", folder3, node.getParent());", "+      LeafNode node = (LeafNode)folder3.getChildAt(0);", "+      assertEquals(\"node should have correct name\", name, node.toString());", "-    }", "+      tree.addDocument(newItem, \"folder3\");", "+      folder3 = (InnerNode)source.getChildAt(2);", "+      LeafNode newNode = (LeafNode)folder3.getChildAt(0);", "+      ", "+//      tree.refreshDocument(newItem, \"folder3\")", "+      assertEquals(\"should have been renamed\", newName, newNode.toString());", "+      assertEquals(\"node should have same parent\", folder3, newNode.getParent());", "+      tree.removeDocument(newItem);", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dbd17486f4ef8db1ddfb28058d17a12", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigatorTest.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testRenameDocument()", "signatureAfterChange": "   public void testRenameDocument()", "diff": ["-    String name = \"MyTest.dj0\";", "-    String newName = \"MyTest.dj0*\";", "-    DummyINavigatorItem item = new DummyINavigatorItem(name);", "-    DummyINavigatorItem newItem = new DummyINavigatorItem(newName);", "-//    Object _lock = new Object();", "-//    synchronized(_lock) {", "-      tree.addDocument(item, \"folder3\");", "-//    }", "+    final String name = \"MyTest.dj0\";", "+    final String newName = \"MyTest.dj0*\";", "+    final DummyINavigatorItem item = new DummyINavigatorItem(name);", "+    final DummyINavigatorItem newItem = new DummyINavigatorItem(newName);", "+    Utilities.invokeAndWait(new Runnable() { public void run() { tree.addDocument(item, \"folder3\"); } });", "-//    synchronized(_lock) {", "-      tree.refreshDocument(item, \"folder3\");", "-//    }", "-//    synchronized(_lock) {", "-      assertEquals(\"folder3 should have 1 children\", 1, folder3.getChildCount());", "-      LeafNode<?> node = (LeafNode<?>)folder3.getChildAt(0);", "-      assertEquals(\"node should have correct name\", name, node.toString());", "-      tree.removeDocument(item);", "-      tree.addDocument(newItem, \"folder3\");", "-      folder3 = (InnerNode)source.getChildAt(2);", "-      LeafNode<?> newNode = (LeafNode<?>)folder3.getChildAt(0);", "-      ", "+    Utilities.invokeAndWait(new Runnable() { public void run() { tree.refreshDocument(item, \"folder3\"); } });", "+    assertEquals(\"folder3 should have 1 children\", 1, folder3.getChildCount());", "+    LeafNode<?> node = (LeafNode<?>)folder3.getChildAt(0);", "+    assertEquals(\"node should have correct name\", name, node.toString());", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() { ", "+        tree.removeDocument(item);", "+        tree.addDocument(newItem, \"folder3\");", "+      }", "+    });", "+    folder3 = (InnerNode)source.getChildAt(2);", "+    LeafNode<?> newNode = (LeafNode<?>)folder3.getChildAt(0);", "+    ", "-      assertEquals(\"should have been renamed\", newName, newNode.toString());", "-      assertEquals(\"node should have same parent\", folder3, newNode.getParent());", "-      tree.removeDocument(newItem);", "-//    }", "+    assertEquals(\"should have been renamed\", newName, newNode.toString());", "+    assertEquals(\"node should have same parent\", folder3, newNode.getParent());", "+    Utilities.invokeAndWait(new Runnable() { public void run() { tree.removeDocument(newItem); } });"]}], "num": 15072}