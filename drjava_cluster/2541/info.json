{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0020c85bc6d5036ba275ae83c7f958d1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4473a5b0e0a26989e22c88c9218571ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testDebugSourcepath()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testDebugSourcepath()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-      _debugger.step(Debugger.STEP_INTO);", "+      _asynchStep(Debugger.STEP_INTO);", "-      _debugger.step(Debugger.STEP_OVER);", "+      _asynchStep(Debugger.STEP_OVER);", "-      _debugger.step(Debugger.STEP_OVER);", "+      _asynchStep(Debugger.STEP_OVER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a3c6c4c839640089a99bbe1f36678ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithSkipComments.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-        if (state.equals(ReducedModelState.INSIDE_LINE_COMMENT)) return false;", "-        if (state.equals(ReducedModelState.INSIDE_BLOCK_COMMENT)) {  // Handle case: ...*/*", "+        if (state.equals(INSIDE_LINE_COMMENT)) return false;", "+        if (state.equals(INSIDE_BLOCK_COMMENT)) {  // Handle case: ...*/*", "-        if (state.equals(ReducedModelState.FREE)) { // Can prefix still fit on the current line?", "+        if (state.equals(FREE)) { // Can prefix still fit on the current line?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96119c0b5deea098302ca5e3c5fb4e13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocument.java", "commitBeforeChange": "38d431471777ac8e0fa48e5f04830082f87a84ac", "commitAfterChange": "0a31738e2a608cffca114c6f81b02f002a0e82e1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public boolean setColoring(int point, Graphics g)", "signatureAfterChange": "   public boolean setColoring(int point, Graphics g)", "diff": ["-          else if (p.second().equals(ConsoleDocument.SYSTEM_OUT_STYLE)) {", "+          /* Note: SYSTEM_OUT_STYLE, SYSTEM_IN_STYLE, SYSTEM_ERR_STYLE are defined in EditDocumentInterface */", "+          else if (p.second().equals(SYSTEM_OUT_STYLE)) {", "-          else if (p.second().equals(ConsoleDocument.SYSTEM_IN_STYLE)) {", "+          else if (p.second().equals(SYSTEM_IN_STYLE)) {", "-          else if (p.second().equals(ConsoleDocument.SYSTEM_ERR_STYLE)) {", "+          else if (p.second().equals(SYSTEM_ERR_STYLE)) {"]}], "num": 2541}