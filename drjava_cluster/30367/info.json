{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "002536311f7d5cea926dae9b6b488fc1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "414626d9ef88e219c49c2967ee11a65e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "623dbae8bf369adeb4e3b2a78ab2b5a3f4b29e9b", "commitAfterChange": "d0501f87d274a5806c24d0d105495acde5ccbe13", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testGranularUndo() throws BadLocationException", "signatureAfterChange": "      public void testGranularUndo() throws BadLocationException", "diff": ["-    KeyStroke ks = DrJava.getConfig().getSetting(OptionConstants.KEY_UNDO);", "-    Action a = KeyBindingManager.Singleton.get(ks);", "-    definitions.processKeyEvent(new KeyEvent(definitions,", "-                                             KeyEvent.KEY_PRESSED,", "-                                             (new Date()).getTime(),", "-                                             ks.getModifiers(),", "-                                             ks.getKeyCode(), KeyEvent.CHAR_UNDEFINED));", "+    final KeyStroke ks = DrJava.getConfig().getSetting(OptionConstants.KEY_UNDO);", "+    final Action a = KeyBindingManager.Singleton.get(ks);", "+    ", "+    final KeyEvent e = new KeyEvent(definitions,", "+                                    KeyEvent.KEY_PRESSED,", "+                                    0,", "+                                    ks.getModifiers(),", "+                                    ks.getKeyCode(),", "+                                    KeyEvent.CHAR_UNDEFINED);", "+    definitions.processKeyEvent(e);", "+    ", "+    // 2", "+    /* Test bug #905405 Undo Alt+Anything Causes Exception */", "+    ", "+    // Type 'Alt-B'", "+    definitions.processKeyEvent(new KeyEvent(definitions, ", "+                                             KeyEvent.KEY_PRESSED, ", "+                                             (new Date()).getTime(),", "+                                             InputEvent.ALT_MASK,", "+                                             KeyEvent.VK_Q, KeyEvent.CHAR_UNDEFINED));", "+    definitions.processKeyEvent(new KeyEvent(definitions, ", "+                                             KeyEvent.KEY_TYPED, ", "+                                             (new Date()).getTime(),", "+                                             InputEvent.ALT_MASK,", "+                                             KeyEvent.VK_UNDEFINED, 'Q'));", "+    definitions.processKeyEvent(new KeyEvent(definitions, ", "+                                             KeyEvent.KEY_RELEASED, ", "+                                             (new Date()).getTime(),", "+                                             InputEvent.ALT_MASK,", "+                                             KeyEvent.VK_Q, KeyEvent.CHAR_UNDEFINED));", "+    ", "+    /*", "+     * If the bug is not fixed in DefinitionsPane.processKeyEvent, this test", "+     * will not fail because the exception is thrown in another thread. ", "+     * However, the stack trace will get printed onto the console.  I don't", "+     * know how to fix this problem in case someone unfixes the bug.", "+     */", "+    SwingUtilities.notifyAction(a, ks, e, e.getSource(), e.getModifiers());", "+//    definitions.setCaretPosition(doc.getLength());", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "455cfe961ea54a3e62396a3be5cd67da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public void testBackspace() throws BadLocationException", "signatureAfterChange": "   public void testBackspace()", "diff": ["-  public void testBackspace() throws BadLocationException {", "-    DefinitionsPane definitions = _frame.getCurrentDefPane();", "-    OpenDefinitionsDocument doc = definitions.getOpenDefDocument();", "+  public void testBackspace() {", "+    final DefinitionsPane definitions = _frame.getCurrentDefPane();", "+    final OpenDefinitionsDocument doc = definitions.getOpenDefDocument();", "-    doc.insertString(0, \"test\", null);", "+", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        doc.append(\"test\", null);", "+        definitions.setCaretPosition(4);", "+        int backspaceCode = KeyEvent.VK_BACK_SPACE;", "+        // The following is the sequence of key events for backspace", "+        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(), 0, ", "+                                                 backspaceCode, KeyEvent.CHAR_UNDEFINED));", "+        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(), 0,", "+                                                 backspaceCode, KeyEvent.CHAR_UNDEFINED));", "+        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_TYPED, (new Date()).getTime(), 0,", "+                                                 KeyEvent.VK_UNDEFINED, '\\b'));", "+      }", "+    });", "-    definitions.setCaretPosition(4);", "-    int backspaceCode = KeyEvent.VK_BACK_SPACE;", "-     // The following is the sequence of key events for backspace", "-     definitions.processKeyEvent(new KeyEvent(definitions,", "-                                              KeyEvent.KEY_PRESSED,", "-                                              (new Date()).getTime(),", "-                                              0,", "-                                              backspaceCode,", "-                                              KeyEvent.CHAR_UNDEFINED));", "-     definitions.processKeyEvent(new KeyEvent(definitions,", "-                                              KeyEvent.KEY_RELEASED,", "-                                              (new Date()).getTime(),", "-                                              0,", "-                                              backspaceCode,", "-                                              KeyEvent.CHAR_UNDEFINED));", "-     definitions.processKeyEvent(new KeyEvent(definitions,", "-                                              KeyEvent.KEY_TYPED,", "-                                              (new Date()).getTime(),", "-                                              0,", "-                                              KeyEvent.VK_UNDEFINED,", "-                                              '\\b'));", "-     _assertDocumentContents(doc, \"tes\", \"Deleting with Backspace went wrong\");", "+    _assertDocumentContents(doc, \"tes\", \"Deleting with Backspace went wrong\");", "+    ", "+    _log.log(\"testBackSpace completed\");"]}], "num": 30367}