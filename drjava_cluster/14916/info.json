{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6db384d7c6867e0b8b75461de15f48b0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64d19323254ba4ef354ba5d7e2fefda2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public abstract ObjectMethodInvocation lookupMethod(Expression object, String name,                                                       Iterable<? extends Type> typeArgs,                                                        Iterable<? extends Expression> args,                                                       Option<Type> expected)     throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "   public abstract ObjectMethodInvocation lookupMethod(Expression object, String name,                                                       Iterable<? extends Type> typeArgs,                                                        Iterable<? extends Expression> args,                                                       Option<Type> expected)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-    throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException;", "+    throws InvalidTypeArgumentException, UnmatchedLookupException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "746c986bd648ebee82cee32c47a6779e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public abstract ConstructorInvocation lookupConstructor(Type t, Iterable<? extends Type> typeArgs,                                                            Iterable<? extends Expression> args,                                                           Option<Type> expected)     throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "   public abstract ConstructorInvocation lookupConstructor(Type t, Iterable<? extends Type> typeArgs,                                                            Iterable<? extends Expression> args,                                                           Option<Type> expected)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-    throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException;", "+    throws InvalidTypeArgumentException, UnmatchedLookupException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b56cf81c895acdb1b33fdb2e979c20cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public abstract StaticMethodInvocation lookupStaticMethod(Type t, String name,                                                             Iterable<? extends Type> typeArgs,                                                              Iterable<? extends Expression> args,                                                             Option<Type> expected)     throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "   public abstract StaticMethodInvocation lookupStaticMethod(Type t, String name,                                                             Iterable<? extends Type> typeArgs,                                                              Iterable<? extends Expression> args,                                                             Option<Type> expected)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-    throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException;", "+    throws InvalidTypeArgumentException, UnmatchedLookupException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6065aec8f79a17e775f9b0309eef26c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "   public abstract ClassType lookupStaticClass(Type t, String name, Iterable<? extends Type> typeArgs)     throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "   public abstract ClassType lookupStaticClass(Type t, String name, Iterable<? extends Type> typeArgs)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-    throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException;", "+    throws InvalidTypeArgumentException, UnmatchedLookupException;"]}], "num": 14916}