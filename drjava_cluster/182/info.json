{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18cd8401b82b39ecd179688612967d68", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01cc5676b26a6c198ae189aad445a44a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 292, "signatureBeforeChange": "   public static <T1, T2, R> Lambda2<T1, T2, R> asLambda(final Runnable2<? super T1, ? super T2> r,                                                          final R result)", "signatureAfterChange": "   public static <T1, T2, R> Lambda2<T1, T2, R> asLambda(Runnable2<? super T1, ? super T2> r, R result)", "diff": ["-  /** @return  A lambda that executes the given runnable, then returns {@code result} */", "-  public static <T1, T2, R> Lambda2<T1, T2, R> asLambda(final Runnable2<? super T1, ? super T2> r, ", "-                                                        final R result) {", "-    return new Lambda2<T1, T2, R>() { ", "-      public R value(T1 arg1, T2 arg2) { r.run(arg1, arg2); return result; }", "-    };", "-  }", "+  /** Create a lambda that executes the given runnable, then returns {@code result}. */", "+  public static <T1, T2, R> Lambda2<T1, T2, R> asLambda(Runnable2<? super T1, ? super T2> r, R result) {", "+    return new RunnableLambda2<T1, T2, R>(r, result);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75727136f5b7bb78fd1d42c86b781054", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 296, "signatureBeforeChange": "   public static <T1, T2, T3, R> Lambda3<T1, T2, T3, R>      asLambda(final Runnable3<? super T1, ? super T2, ? super T3> r, final R result)", "signatureAfterChange": "   public static <T1, T2, T3, R>      Lambda3<T1, T2, T3, R> asLambda(Runnable3<? super T1, ? super T2, ? super T3> r, R result)", "diff": ["-  /** @return  A lambda that executes the given runnable, then returns {@code result} */", "-  public static <T1, T2, T3, R> Lambda3<T1, T2, T3, R> ", "-    asLambda(final Runnable3<? super T1, ? super T2, ? super T3> r, final R result) {", "-    return new Lambda3<T1, T2, T3, R>() { ", "-      public R value(T1 arg1, T2 arg2, T3 arg3) { r.run(arg1, arg2, arg3); return result; }", "-    };", "-  }", "+  /** Create a lambda that executes the given runnable, then returns {@code result}. */", "+  public static <T1, T2, T3, R> ", "+    Lambda3<T1, T2, T3, R> asLambda(Runnable3<? super T1, ? super T2, ? super T3> r, R result) {", "+    return new RunnableLambda3<T1, T2, T3, R>(r, result);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9547a57ac27a23e043af333a718e0410", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 300, "signatureBeforeChange": "   public static <T1, T2, T3, T4, R> Lambda4<T1, T2, T3, T4, R>      asLambda(final Runnable4<? super T1, ? super T2, ? super T3, ? super T4> r, final R result)", "signatureAfterChange": "   public static <T1, T2, T3, T4, R> Lambda4<T1, T2, T3, T4, R>      asLambda(Runnable4<? super T1, ? super T2, ? super T3, ? super T4> r, R result)", "diff": ["-  /** @return  A lambda that executes the given runnable, then returns {@code result} */", "-  public static <T1, T2, T3, T4, R> Lambda4<T1, T2, T3, T4, R> ", "-    asLambda(final Runnable4<? super T1, ? super T2, ? super T3, ? super T4> r, final R result) {", "-    return new Lambda4<T1, T2, T3, T4, R>() { ", "-      public R value(T1 a1, T2 a2, T3 a3, T4 a4) { r.run(a1, a2, a3, a4); return result; }", "-    };", "-  }", "+  /** Create a lambda that executes the given runnable, then returns {@code result}. */", "+  public static <T1, T2, T3, T4, R> Lambda4<T1, T2, T3, T4, R> ", "+    asLambda(Runnable4<? super T1, ? super T2, ? super T3, ? super T4> r, R result) {", "+    return new RunnableLambda4<T1, T2, T3, T4, R>(r, result);", "+  }"]}], "num": 182}