{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4605c5017292aa1460f41b8019054bdf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63341b3d1418f863b4ebc888b9a57ab2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "57576abf3c61a61cbc760b4b0e10c533bcfaab23", "commitAfterChange": "2d130b589eb563459c94da96fea961fcbe800771", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public static int hashCode(Iterable<?> iter)", "signatureAfterChange": "   public static int hashCode(Iterable<?> iter)", "diff": ["-    int result = Iterable.class.hashCode();", "-    int shift = 0;", "-    // So that values in long lists don't get ignored, we mask shift to be < 16", "-    for (Object obj : iter) { result ^= RecurUtil.safeHashCode(obj) << (shift & 0xF); shift++; }", "-    return result;", "+    return ObjectUtil.hash(iter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea4b2cb7228887bc967e7e17ebfb5aad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "467e5b5cdd1dcb74e3af8270c3f2ac9d390a6395", "commitAfterChange": "a30a5503c4bed745d3bf75a4b449d026f5c00795", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public String getVariableToString(String var, int... indices)", "signatureAfterChange": "   public String getVariableToString(String var)", "diff": ["-  public String getVariableToString(String var, int... indices) {", "+  public String getVariableToString(String var) {", "+    if (!isValidFieldName(var)) { return \"<error in watch name>\"; }", "-      for(int i = 0; i < indices.length; ++i) {", "-        if (!o.getClass().isArray()) { return \"<error: value is not an array>\"; }", "-        o = Array.get(o, indices[i]);", "-      }"]}], "num": 7555}