{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0069cf3b72586b9cc9bbf25763d9c94", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94ada46c266aa11f26e81a4bb435d786", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "1ff154e9eb4de7b8f07ce9a8120997b76e53aa3f", "commitAfterChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      public void testBookmark() throws Exception", "signatureAfterChange": "      public void testBookmark() throws Exception", "diff": ["-    assertEquals(\"Should be 2 bookmarks\", 2, bms.size());", "+    assertEquals(\"Should be 2 bookmarks\", 2, bms.size());  // the bookmarks are disjoint", "-    assertEquals(\"Should be 3 bookmarks\", 3, bms.size());", "-    assertEquals(\"Start offset should be 3\", 3, bms.get(0).getStartOffset());", "-    assertEquals(\"End offset should be 6\", 6, bms.get(0).getEndOffset());", "-    assertEquals(\"Start offset should be 5\", 5, bms.get(1).getStartOffset());", "-    assertEquals(\"End offset should be 10\", 10, bms.get(1).getEndOffset());", "-    assertEquals(\"Start offset should be 8\", 8, bms.get(2).getStartOffset());", "-    assertEquals(\"End offset should be 12\", 12, bms.get(2).getEndOffset());", "+    assertEquals(\"Should be 0 bookmarks\", 0, bms.size());  // the preceding two bookmarks overlapped and were deleted", "+//    assertEquals(\"Start offset should be 5\", 5, bms.get(0).getStartOffset());", "+//    assertEquals(\"End offset should be 10\", 10, bms.get(0).getEndOffset());", "+//    assertEquals(\"Start offset should be 5\", 5, bms.get(1).getStartOffset());", "+//    assertEquals(\"End offset should be 10\", 10, bms.get(1).getEndOffset());", "+//    assertEquals(\"Start offset should be 8\", 8, bms.get(2).getStartOffset());", "+//    assertEquals(\"End offset should be 12\", 12, bms.get(2).getEndOffset());", "-    assertEquals(\"Should be 2 bookmarks\", 2, bms.size());", "-    assertEquals(\"Start offset should be 3\", 3, bms.get(0).getStartOffset());", "-    assertEquals(\"End offset should be 6\", 6, bms.get(0).getEndOffset());", "-    assertEquals(\"Start offset should be 5\", 5, bms.get(1).getStartOffset());", "-    assertEquals(\"End offset should be 10\", 10, bms.get(1).getEndOffset());", "+    assertEquals(\"Should be 1 bookmarks\", 1, bms.size());  // no preceding bookmark", "+    assertEquals(\"Start offset should be 8\", 8, bms.get(0).getStartOffset());", "+    assertEquals(\"End offset should be 12\", 12, bms.get(0).getEndOffset());", "+//    assertEquals(\"Start offset should be 5\", 5, bms.get(1).getStartOffset());", "+//    assertEquals(\"End offset should be 10\", 10, bms.get(1).getEndOffset());", "-    assertEquals(\"Should be 1 bookmarks\", 1, bms.size());", "-    assertEquals(\"Start offset should be 5\", 5, bms.get(0).getStartOffset());", "-    assertEquals(\"End offset should be 10\", 10, bms.get(0).getEndOffset());", "+    assertEquals(\"Should be 2 bookmarks\", 2, bms.size());  // no overlap", "+    assertEquals(\"Start offset should be 3\", 3, bms.get(0).getStartOffset());", "+    assertEquals(\"End offset should be 6\", 6, bms.get(0).getEndOffset());", "+    assertEquals(\"Start offset should be 8\", 8, bms.get(1).getStartOffset());", "+    assertEquals(\"End offset should be 12\", 12, bms.get(1).getEndOffset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de7167bc3cd2023f502bd158f14caffe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "b128df4fa9d8df79a76ba9e19a170c160365e646", "commitAfterChange": "e16fd9dc1aa815e303a7aa80be407f3a031e237d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      public void testBookmark() throws Exception", "signatureAfterChange": "      public void testBookmark() throws Exception", "diff": ["-    Vector<DocumentRegion> bms = _model.getBookmarkManager().getRegions();", "+    Vector<OrderedDocumentRegion> bms = _model.getBookmarkManager().getRegions();", "-    assertEquals(\"Start offset should be \"+FOO_CLASS.indexOf('\\n'), FOO_CLASS.indexOf('\\n'), bms.get(0).getEndOffset());", "+    assertEquals(\"End offset should be \"+FOO_CLASS.indexOf('\\n'), FOO_CLASS.indexOf('\\n'), bms.get(0).getEndOffset());", "-    assertEquals(\"Start offset should be 6\", 6, bms.get(0).getEndOffset());", "+    assertEquals(\"End offset should be 6\", 6, bms.get(0).getEndOffset());", "+    // Note: bms is sorted by increasing (startOffset, endOffset)", "-    assertEquals(\"Start offset should be 6\", 6, bms.get(0).getEndOffset());", "+    assertEquals(\"End offset should be 6\", 6, bms.get(0).getEndOffset());", "-    assertEquals(\"Start offset should be 12\", 12, bms.get(1).getEndOffset());", "+    assertEquals(\"End offset should be 12\", 12, bms.get(1).getEndOffset());", "-    assertEquals(\"Start offset should be 6\", 6, bms.get(0).getEndOffset());", "-    assertEquals(\"Start offset should be 8\", 8, bms.get(1).getStartOffset());", "-    assertEquals(\"Start offset should be 12\", 12, bms.get(1).getEndOffset());", "-    assertEquals(\"Start offset should be 5\", 5, bms.get(2).getStartOffset());", "-    assertEquals(\"Start offset should be 10\", 10, bms.get(2).getEndOffset());", "+    assertEquals(\"End offset should be 6\", 6, bms.get(0).getEndOffset());", "+    assertEquals(\"Start offset should be 5\", 5, bms.get(1).getStartOffset());", "+    assertEquals(\"End offset should be 10\", 10, bms.get(1).getEndOffset());", "+    assertEquals(\"Start offset should be 8\", 8, bms.get(2).getStartOffset());", "+    assertEquals(\"End offset should be 12\", 12, bms.get(2).getEndOffset());", "-    assertEquals(\"Start offset should be 6\", 6, bms.get(0).getEndOffset());", "+    assertEquals(\"End offset should be 6\", 6, bms.get(0).getEndOffset());", "-    assertEquals(\"Start offset should be 10\", 10, bms.get(1).getEndOffset());", "+    assertEquals(\"End offset should be 10\", 10, bms.get(1).getEndOffset());", "-    assertEquals(\"Start offset should be 10\", 10, bms.get(0).getEndOffset());", "+    assertEquals(\"End offset should be 10\", 10, bms.get(0).getEndOffset());"]}], "num": 19384}