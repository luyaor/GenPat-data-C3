{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24750e132bddca37e39405144f9f8aeb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "247ff2bbef331d4c93ff0c3ae47532a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 121, "signatureBeforeChange": "          public void testForSourceFile()", "signatureAfterChange": "          public void testForSourceFile()", "diff": ["-      ClassDef cd = new ClassDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"Awesome\"),", "+      ClassDef cd = new ClassDef(SourceInfo.NO_INFO, PUBLIC_MAV, new Word(SourceInfo.NO_INFO, \"Awesome\"),", "-      ClassDef cd2 = new ClassDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"Gnarly\"),", "+      ClassDef cd2 = new ClassDef(SourceInfo.NO_INFO, PUBLIC_MAV, new Word(SourceInfo.NO_INFO, \"Gnarly\"),", "-      InterfaceDef id = new InterfaceDef(SourceInfo.NO_INFO, _publicMav, ", "+      InterfaceDef id = new InterfaceDef(SourceInfo.NO_INFO, PUBLIC_MAV, ", "-      assertTrue(\"_classNamesInThisFile should contain the two ClassDefs.\", ", "-                 testLLVisitor._classNamesInThisFile.contains(\"Awesome\"));", "-      assertTrue(\"_classNamesInThisFile should contain the two ClassDefs.\", ", "-                 testLLVisitor._classNamesInThisFile.contains(\"Gnarly\"));", "+      assertTrue(\"_classesInThisFile should contain the two ClassDefs.\", ", "+                 testLLVisitor._classesInThisFile.contains(\"Awesome\"));", "+      assertTrue(\"_classesInThisFile should contain the two ClassDefs.\", ", "+                 testLLVisitor._classesInThisFile.contains(\"Gnarly\"));", "-      assertTrue(\"_classNamesInThisFile should contain the InterfaceDef\", ", "-                 testLLVisitor._classNamesInThisFile.contains(\"NiftyWords\"));", "-      assertTrue(\"_classesToBeParsed should contain the two ClassDefs.\", ", "-                 testLLVisitor._classesToBeParsed.containsKey(\"Awesome\"));", "-      assertTrue(\"_classesToBeParsed should contain the two ClassDefs.\", ", "-                 testLLVisitor._classesToBeParsed.containsKey(\"Gnarly\"));", "-      assertTrue(\"_classesToBeParsed should contain the InterfaceDef\", ", "-                 testLLVisitor._classesToBeParsed.containsKey(\"NiftyWords\"));", "+      assertTrue(\"_classesInThisFile should contain the InterfaceDef\", ", "+                 testLLVisitor._classesInThisFile.contains(\"NiftyWords\"));", "+      assertTrue(\"_classesInThisFile should contain the two ClassDefs.\", ", "+                 testLLVisitor._classesInThisFile.contains(\"Awesome\"));", "+      assertTrue(\"_classesInThisFile should contain the two ClassDefs.\", ", "+                 testLLVisitor._classesInThisFile.contains(\"Gnarly\"));", "+      assertTrue(\"_classesInThisFile should contain the InterfaceDef\", ", "+                 testLLVisitor._classesInThisFile.contains(\"NiftyWords\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfc62e5ea7875905b7593ac0d4c64bc0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 117, "signatureBeforeChange": "          public void testForSourceFile()", "signatureAfterChange": "          public void testForSourceFile()", "diff": ["-      _llv.forSourceFile(sf);", "+      testLLVisitor.forSourceFile(sf);", "-                 _llv._classNamesInThisFile.contains(\"Awesome\"));", "-      assertTrue(\"_classNamesInThisFile should contain the two ClassDefs.\", _llv._classNamesInThisFile.contains(\"Gnarly\"));", "+                 testLLVisitor._classNamesInThisFile.contains(\"Awesome\"));", "+      assertTrue(\"_classNamesInThisFile should contain the two ClassDefs.\", testLLVisitor._classNamesInThisFile.contains(\"Gnarly\"));", "-      assertTrue(\"_classNamesInThisFile should contain the InterfaceDef\", _llv._classNamesInThisFile.contains(\"NiftyWords\"));", "-      assertTrue(\"_classesToBeParsed should contain the two ClassDefs.\", _llv._classesToBeParsed.containsKey(\"Awesome\"));", "-      assertTrue(\"_classesToBeParsed should contain the two ClassDefs.\", _llv._classesToBeParsed.containsKey(\"Gnarly\"));", "-      assertTrue(\"_classesToBeParsed should contain the InterfaceDef\", _llv._classesToBeParsed.containsKey(\"NiftyWords\"));", "+      assertTrue(\"_classNamesInThisFile should contain the InterfaceDef\", testLLVisitor._classNamesInThisFile.contains(\"NiftyWords\"));", "+      assertTrue(\"_classesToBeParsed should contain the two ClassDefs.\", testLLVisitor._classesToBeParsed.containsKey(\"Awesome\"));", "+      assertTrue(\"_classesToBeParsed should contain the two ClassDefs.\", testLLVisitor._classesToBeParsed.containsKey(\"Gnarly\"));", "+      assertTrue(\"_classesToBeParsed should contain the InterfaceDef\", testLLVisitor._classesToBeParsed.containsKey(\"NiftyWords\"));"]}], "num": 13840}