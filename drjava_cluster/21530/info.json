{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a99f2b6f11142532f4209719a0af507b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e70aab91781119a43413aeaaf6531ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 247, "signatureBeforeChange": "       public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "signatureAfterChange": "     public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "diff": ["-    return new Predicate4<T1, T2, T3, T4>() {", "-      public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4) {", "-        for (Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p : preds) { ", "-          if (!p.value(arg1, arg2, arg3, arg4)) { return false; }", "-        }", "-        return true;", "-      }", "+    }", "+    public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4) {", "+      for (Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p : _preds) {", "+        if (!p.value(arg1, arg2, arg3, arg4)) { return Boolean.FALSE; }", "+      }", "+      return Boolean.TRUE;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90318cf5b8ebb1f39bcda3ac8ff96584", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 267, "signatureBeforeChange": "       public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "signatureAfterChange": "     public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "diff": ["-    return new Predicate4<T1, T2, T3, T4>() {", "-      public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4) {", "-        for (Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p : preds) { ", "-          if (p.value(arg1, arg2, arg3, arg4)) { return true; }", "-        }", "-        return false;", "-      }", "+    }", "+    public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4) {", "+      for (Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p : _preds) {", "+        if (p.value(arg1, arg2, arg3, arg4)) { return Boolean.TRUE; }", "+      }", "+      return Boolean.FALSE;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9c5e64d3cecfd8764771fd0870ef064", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 227, "signatureBeforeChange": "        public Boolean value(T1 a1, T2 a2, T3 a3, T4 a4)", "signatureAfterChange": "     public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "diff": ["+    public NegationPredicate4(Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p) { _p = p; }", "+    public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4) { return !_p.value(arg1, arg2, arg3, arg4); }", "-    return new Predicate4<T1, T2, T3, T4>() { ", "-      public Boolean value(T1 a1, T2 a2, T3 a3, T4 a4) { return !pred.value(a1, a2, a3, a4); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc6e21e6ac9fdf1f5936d119309d3c9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 314, "signatureBeforeChange": "        public Boolean value(T1 a1, T2 a2, T3 a3, T4 a4)", "signatureAfterChange": "     public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "diff": ["-    return new Predicate4<T1, T2, T3, T4>() { ", "-      public Boolean value(T1 a1, T2 a2, T3 a3, T4 a4) { return lambda.value(a1, a2, a3, a4); }", "+    public LambdaPredicate4(Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends Boolean> l) { _l = l; }", "+    public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4) { return _l.value(arg1, arg2, arg3, arg4); }"]}], "num": 21530}