{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99518e00f418ed1293e0f07092282581", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3abbe7a6c51981503d9e9d3cc70f5580", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "diff": ["-        try {", "-          f = doc.getFile();", "-        }", "-        catch (IllegalStateException ise) {", "-          // We know file exists", "-          fail(\"file does not exist\");", "-        }", "+        try { f = doc.getFile(); }", "-          assertEquals(\"saved file\", file.getCanonicalFile(),", "-                       f.getCanonicalFile());", "+          assertEquals(\"saved file\", file.getCanonicalFile(), f.getCanonicalFile());", "-        catch (IOException ioe) {", "-          fail(\"could not get canonical file\");", "-        }", "+        catch (IOException ioe) { fail(\"could not get canonical file\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4ba8d997b0f2ebb46ab1d294c979dec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "3b64166f1d62b17dc65eb373f58379c1d93452e7", "commitAfterChange": "36e86519fec0be37255f092c8ef3144003d9d925", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public static File makeRelativeTo(File f, File b) throws IOException, SecurityException", "signatureAfterChange": "   public static File makeRelativeTo(File f, File b) throws IOException, SecurityException", "diff": ["+    try {", "+      File[] roots = File.listRoots();", "+      File fRoot = null;", "+      File bRoot = null;", "+      for(File r: roots) {", "+        if (isAncestorOf(r, f)) { fRoot = r; }", "+        if (isAncestorOf(r, b)) { bRoot = r; }", "+        if ((fRoot!=null) && (bRoot!=null)) { break; }", "+      }", "+      if ((fRoot==null) || (!fRoot.equals(bRoot))) {", "+        // f and b have different file system roots", "+        // just make f absolute and canonical", "+        return f.getAbsoluteFile().getCanonicalFile();", "+      }", "+    }", "+    catch(Exception e) { /* ignore, follow previous procedure */ }", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e77257d9dab741254132dc0eb66d5806", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void testCancelSaveAlreadySaved()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCancelSaveAlreadySaved()     throws BadLocationException, IOException", "diff": ["-        try {", "-          f = doc.getFile();", "-        }", "-        catch (IllegalStateException ise) {", "-          // We know file exists", "-          fail(\"file does not exist\");", "-        }", "+        try { f = doc.getFile(); }", "-          assertEquals(\"saved file\", file.getCanonicalFile(),", "-                       f.getCanonicalFile());", "+          assertEquals(\"saved file\", file.getCanonicalFile(), f.getCanonicalFile());", "-        catch (IOException ioe) {", "-          fail(\"could not get canonical file\");", "-        }", "+        catch (IOException ioe) { fail(\"could not get canonical file\"); }"]}], "num": 1253}