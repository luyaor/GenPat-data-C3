{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35f53b7826b551a555309d0bea5afd4e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2788049c6e00a753210983ec3f0534f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectMenuTest.java", "commitBeforeChange": "1f51a58fb5eb087a3de9d612fc558cbf36f82551", "commitAfterChange": "1b66bb1251187d54a875812b660c0f064ce8404e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["-    _projFile = File.createTempFile(\"test\", \".pjt\");", "-    _file1 = File.createTempFile(\"test1\",\".java\");", "-    _file2 = File.createTempFile(\"test2\",\".java\");", "-", "+    // create project in a directory with an auxiliary file outside of it", "+    _auxFile = File.createTempFile(\"aux\", \".java\");", "+    File auxFileParent = _auxFile.getParentFile();", "+    _projDir = new File(auxFileParent, \"project-dir\");", "+    _projDir.mkdir();", "+    _projFile = File.createTempFile(\"test\", \".pjt\", _projDir);", "+    _file1 = File.createTempFile(\"test1\",\".java\", _projDir);", "+    _file2 = File.createTempFile(\"test2\",\".java\", _projDir);", "+    ", "-      \"   (file (name \\\"\"+ _file1RelName +\"\\\")(select 32 32))\\n\" +", "-      \"   (file (name \\\"\"+ _file2RelName +\"\\\")(select 0 0)(active)))\\n\";", "-", "+      \"   (file (name \\\"\"+ _file1RelName +\"\\\")(select 32 32)(active)))\\n\";", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4f994f6eae0594955d6ea8ae25f0678", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectMenuTest.java", "commitBeforeChange": "314c962d7f6ed2c6b00f5edc6e764b582b016016", "commitAfterChange": "3b2b8c4279d3d3c19a0254256362d4d46aeeddaf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp() throws IOException", "signatureAfterChange": "   public void setUp() throws IOException", "diff": ["-    _testFile = File.createTempFile(\"_test\", \"pjt\");", "+    _projFile = File.createTempFile(\"test\", \".pjt\");", "+    _file1 = File.createTempFile(\"test1\",\".java\");", "+    _file2 = File.createTempFile(\"test2\",\".java\");", "-    reader = new BufferedReader(new FileReader(_testFile));", "-    BufferedWriter w = new BufferedWriter(new FileWriter(_testFile));", "-    w.write(TEST_FILE_TEXT);", "+    // generate the relative path names for the files in the project file", "+    String temp = _file1.getParentFile().getCanonicalPath();", "+    _file1RelName = _file1.getCanonicalPath().substring(temp.length()+1); ", "+    temp = _file2.getParentFile().getCanonicalPath();", "+    _file2RelName = _file2.getCanonicalPath().substring(temp.length()+1);", "+    ", "+    _projFileText = ", "+      \";; DrJava project file.  Written with build: 20040623-1933\\n\" +", "+      \"(source ;; comment\\n\" +", "+      \"   (file (name \\\"\"+ _file1RelName +\"\\\")(select 32 32))\\n\" +", "+      \"   (file (name \\\"\"+ _file2RelName +\"\\\")(select 0 0)))\\n\";", "+    ", "+    reader = new BufferedReader(new FileReader(_projFile));", "+    BufferedWriter w = new BufferedWriter(new FileWriter(_projFile));", "+    w.write(_projFileText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c47a1e6e7535579a4ed948743d73cfd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "e75c44dca53d5633e70ed3badd03d3667a23d4c8", "commitAfterChange": "c11896795d0041b0e5728ede27aa1fce3454d97c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "   @Deprecated public static File createTempDirectory(final String name, final File parent) throws IOException", "signatureAfterChange": " public static File createTempDirectory( String name, File parent) throws IOException", "diff": ["-  @Deprecated public static File createTempDirectory(final String name, final File parent) throws IOException {", "-    File file =  File.createTempFile(name, \"\", parent);", "-    file.delete();", "-    file.mkdir();", "-    file.deleteOnExit();", "-    return file;", "+  /* @Deprecated */ public static File createTempDirectory(/* final */ String name, /* final */ File parent) throws IOException {", "+    File result = File.createTempFile(name, \"\", parent);", "+    boolean success = result.delete();", "+    success = success && result.mkdir();", "+    if (! success) { throw new IOException(\"Attempt to create directory failed\"); }", "+    IOUtil.attemptDeleteOnExit(result);", "+    return result;", "+//    File file =  File.createTempFile(name, \"\", parent);", "+//    file.delete();", "+//    file.mkdir();", "+//    file.deleteOnExit();", "+//", "+//    return file;"]}], "num": 24179}