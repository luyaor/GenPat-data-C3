{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "098b5c095404c51c42143b3c1047768e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "103413be58a6d98851dc5434231de763", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "e7660fffdb51451a3d4a61981945f6529addb874", "commitAfterChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 41, "signatureBeforeChange": "   private FindResult _findNextInOtherDocs(final OpenDefinitionsDocument startDoc, int start, int len)", "signatureAfterChange": "   private FindResult _findNextInOtherDocs(final OpenDefinitionsDocument startDoc, int start, int len)", "diff": ["+      boolean inTestCase = (_doc.getFileName().endsWith(\"Test.java\"));", "+      if (!_ignoreTestCases || !inTestCase) {", "-      ", "+        ", "-      ", "-      ", "-      // find next match in _doc", "-      _doc.acquireReadLock();", "-      FindResult fr;", "-      try { fr = _findNextInDocSegment(_doc, 0, _doc.getLength(), false, allWrapped); } ", "-      finally { _doc.releaseReadLock(); }", "-      ", "-      if (fr.getFoundOffset() >= 0) return fr;", "-      ", "+        ", "+        ", "+        // find next match in _doc", "+        _doc.acquireReadLock();", "+        FindResult fr;", "+        try { fr = _findNextInDocSegment(_doc, 0, _doc.getLength(), false, allWrapped); } ", "+        finally { _doc.releaseReadLock(); }", "+        ", "+        if (fr.getFoundOffset() >= 0) return fr;", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc407517c44272094f3ef7dc54d3c57d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "14164b6a15fd606e897810fd89f2e7edec0280c4", "commitAfterChange": "52c187d5d51895f0b58a56680e35117f80ff45ef", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private FindResult _findWrapped(OpenDefinitionsDocument doc, int start, int len, boolean allWrapped)", "signatureAfterChange": "     private FindResult _findWrapped(OpenDefinitionsDocument doc, int start, int len, boolean allWrapped)", "diff": ["-    doc.readLock();", "-    try {", "-      if (doc.getLength() == 0) return new FindResult(doc, -1, true, allWrapped);", "-      if (_isForward) {", "-        newLen = start;", "-        newStart = 0;", "-      }", "-      else {", "-        newStart = len;", "-        newLen = doc.getLength() - len;", "-      }", "+    if (doc.getLength() == 0) return new FindResult(doc, -1, true, allWrapped);", "+    if (_isForward) {", "+      newLen = start;", "+      newStart = 0;", "+    }", "+    else {", "+      newStart = len;", "+      newLen = doc.getLength() - len;", "+    }", "-      return _findNextInDocSegment(doc, newStart, newLen, true, allWrapped);", "-    }", "-    finally { doc.readUnlock(); }", "+    return _findNextInDocSegment(doc, newStart, newLen, true, allWrapped);"]}], "num": 31297}