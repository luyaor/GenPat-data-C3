{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e73bb8ea3786b55b746695838c061cb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db9464a90217e4f00bd58ae4ecb8cb76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1c3947ce9682f305287b6afe6b5c5d87597bae6f", "commitAfterChange": "0acb22a1f5b2329a270795e5839a4690952252ed", "methodNumberBeforeChange": 428, "methodNumberAfterChange": 429, "signatureBeforeChange": "   private void _newProject()", "signatureAfterChange": "   private void _newProject()", "diff": ["-      File pf = _saveChooser.getSelectedFile();  // project file", "-      if ((pf==null) || (pf.exists() && !_verifyOverwrite())) { return; }", "+      File projectFile = _saveChooser.getSelectedFile();", "+      if (projectFile == null || (projectFile.exists() && ! _verifyOverwrite())) { return; }", "-      String fileName = pf.getName();", "+      String fileName = projectFile.getName();", "-        if (lastIndex == -1) pf = new File (pf.getAbsolutePath() + \".xml\");", "-        else pf = new File(fileName.substring(0, lastIndex) + \".xml\");", "+        if (lastIndex == -1) projectFile = new File (projectFile.getAbsolutePath() + \".xml\");", "+        else projectFile = new File(fileName.substring(0, lastIndex) + \".xml\");", "-      _model.createNewProject(pf); // sets model to a new FileGroupingState for project file pf", "+      _model.createNewProject(projectFile); // sets model to a new FileGroupingState for project file pf", "-      _currentProjFile = pf;", "+      _setUpProjectButtons(projectFile);", "+      _currentProjFile = projectFile;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a1e105e2e9b41fdb3617b20844567f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "afda437000b953ac5d61ee69781723d29e664271", "commitAfterChange": "de9a557f090086de80e9723b0612333c5fd32e24", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 250, "signatureBeforeChange": "   private void _newProject()", "signatureAfterChange": "   private void _newProject()", "diff": ["-      File file = _saveChooser.getSelectedFile();  // project file", "-      String fileName = file.getName();", "+      File pf = _saveChooser.getSelectedFile();  // project file", "+      String fileName = pf.getName();", "-        if (lastIndex == -1) file = new File (file.getAbsolutePath() + \".pjt\");", "-        else file = new File(fileName.substring(0, lastIndex) + \".pjt\");", "+        if (lastIndex == -1) pf = new File (pf.getAbsolutePath() + \".pjt\");", "+        else pf = new File(fileName.substring(0, lastIndex) + \".pjt\");", "-      ProjectPropertiesFrame ppf = new ProjectPropertiesFrame(MainFrame.this, file);", "-      _editProject(ppf);    // Uses new project properties frame", "-//      ppf.saveSettings();   // Saves edited profile in global model", "-      ", "-      try { _model.newProject(file); }", "+      _model.createNewProject(pf); // sets model to a new FileGroupingState for project file pf", "+//      ProjectPropertiesFrame ppf = new ProjectPropertiesFrame(MainFrame.this, file);", "+//      ppf.saveSettings();  // Saves new project profile in global model", "+      _editProject();  // edits the properties of the new FileGroupingState", "+      try { _model.configNewProject(); }  // configures the new project in the model", "-      _currentProjFile = file;", "+      _currentProjFile = pf;"]}], "num": 26336}