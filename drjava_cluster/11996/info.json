{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18c062e9a626df1642a51131f3f53286", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f8e28e226166a3195b762c9edf3e5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "commitAfterChange": "e7a6b9c5a51a2cf7b9cfb5a10d90c24a3c7c3844", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 67, "signatureBeforeChange": "   public Void forBitwiseNotExpressionDoFirst(BitwiseNotExpression that)", "signatureAfterChange": "   public Void forBitwiseNotExpressionDoFirst(BitwiseNotExpression that)", "diff": ["-  }", "-  public Void forBitwiseNotExpressionDoFirst(BitwiseNotExpression that) {", "-    _addAndIgnoreError(\"Bitwise not expressions cannot be used at any language level.\" + ", "-                       \"  Perhaps you meant to negate this value using regular not (!)\", that);", "-    return null;", "-  }", "+  public Void forBitwiseAndExpressionDoFirst(BitwiseAndExpression that) { return null; }", "+  public Void forBitwiseNotExpressionDoFirst(BitwiseNotExpression that) { return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6d6c512a6322c6aee331298ec76865f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "commitAfterChange": "e7a6b9c5a51a2cf7b9cfb5a10d90c24a3c7c3844", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 66, "signatureBeforeChange": "   public Void forBitwiseAndExpressionDoFirst(BitwiseAndExpression that)", "signatureAfterChange": "   public Void forBitwiseAndExpressionDoFirst(BitwiseAndExpression that)", "diff": ["-  }", "-  public Void forBitwiseAndExpressionDoFirst(BitwiseAndExpression that) {", "-    _addAndIgnoreError(\"Bitwise and expressions cannot be used at any language level.\" + ", "-                       \"  Perhaps you meant to compare two values using regular and (&&)\", that);", "-    return null;", "-  }", "+  public Void forBitwiseXorExpressionDoFirst(BitwiseXorExpression that) { return null; }", "+  public Void forBitwiseAndExpressionDoFirst(BitwiseAndExpression that) { return null; }"]}], "num": 11996}