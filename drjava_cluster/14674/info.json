{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58e518ea934c2ae6b883f400f80a6dcc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26b33e977f658dbb7551d0942c0f2050", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "1acb63fa1c578959b54f9766299c6e0a8865f601", "commitAfterChange": "fa78ee7a06602f123abf33b8aef0005c93bb3efa", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public static LinkedList<String> packageExplore(String prefix, File root)", "signatureAfterChange": "   public static LinkedList<String> packageExplore(String prefix, File root)", "diff": ["-    //This set makes sure we don't get caught in a loop if the filesystem has symbolic links", "-    //that form a circle by tracking the directories we have already explored", "+    // This set makes sure we don't get caught in a loop if the filesystem has symbolic links", "+    // that form a circle by tracking the directories we have already explored", "-    //This filter allows only directories, and accepts each directory", "-    //only once", "+    // This filter allows only directories, and accepts each directory only once", "-    //Explore each directory, adding (unique) subdirectories to the", "-    //working list.  If a directory has .java files, add the associated", "-    //package to the list of packages", "-    while (!working.empty()){", "+    // Explore each directory, adding (unique) subdirectories to the working list.  If a directory has .java ", "+    // files, add the associated package to the list of packages", "+    while (! working.empty()) {", "-      for(int a = 0; a < subDirectories.length; a++){", "-        File dir = subDirectories[a];", "+      for (File dir: subDirectories) {", "-        if (current.prefix.equals(\"\")){", "-          paf = new PrefixAndFile(dir.getName(), dir);", "-        } else {", "-          paf = new PrefixAndFile(current.prefix + \".\" + dir.getName(), dir);", "-        }", "+        if (current.prefix.equals(\"\")) paf = new PrefixAndFile(dir.getName(), dir);", "+        else  paf = new PrefixAndFile(current.prefix + \".\" + dir.getName(), dir);", "-      if (javaFiles.length != 0 && !current.prefix.equals(\"\")){", "+      if (javaFiles.length != 0 && !current.prefix.equals(\"\")) {", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9abd5f0554c190fd8e249a77fc831522", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "9ee478d3fb33bcb383dedc1906c5e14c84fc878b", "commitAfterChange": "2c410784e4fa53ebc121330c159aaf4b4c4c6253", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public static Vector<String> packageExplore(String prefix, File root)", "signatureAfterChange": "   public static LinkedList packageExplore(String prefix, File root)", "diff": ["-  public static Vector<String> packageExplore(String prefix, File root) {", "+  public static LinkedList packageExplore(String prefix, File root) {", "+    /* Inner holder class. */", "+    ", "-    Vector<String> output = new Vector<String>();", "+    LinkedList output = new LinkedList();", "-", "-    //This filter checks for files that end in .java", "-    FileFilter javaFileFilter = new FileFilter(){", "-      public boolean accept(File f){", "-        //Do this runaround for filesystems that are case preserving", "-        //but case insensitive", "-        //Remove the last 5 letters from the file name, append \".java\"", "-        //to the end, create a new file and see if its equivalent to the", "-        //original", "-        StringBuffer name = new StringBuffer(f.getAbsolutePath());", "-        String shortName = f.getName();", "-        if (shortName.length() < 6){", "-          return false;", "-        }", "-        name.delete(name.length() - 5, name.length());", "-        name.append(\".java\");", "-        File test = new File(new String(name));", "-        if (test.equals(f)){", "-          return true;", "-        } else {", "-          return false;", "-        }", "-      }", "-    };", "-        System.out.println(\"exploring \" + dir);", "+//         System.out.println(\"exploring \" + dir);", "-      File [] javaFiles = current.root.listFiles(javaFileFilter);", "+      File [] javaFiles = current.root.listFiles(JAVA_FILE_FILTER);", "-        output.addElement(current.prefix);", "-        System.out.println(\"adding \" + current.prefix);", "+        output.add(current.prefix);", "+//         System.out.println(\"adding \" + current.prefix);", "-  return output;", "+    return output;"]}], "num": 14674}