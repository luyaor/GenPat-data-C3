{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63ae6c361cf6665e42971bb8307a86e1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "314f679d66b9e2fd0047fbe83854271a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JDKToolsLibrary.java", "commitBeforeChange": "f1daacb1f9c546b2b765d3fc6cc41bd412931a0f", "commitAfterChange": "591ec87995880046281596623701cb5a561fc66e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public static JDKToolsLibrary makeFromRuntime(GlobalModel model)", "signatureAfterChange": "      public static JDKToolsLibrary makeFromRuntime(GlobalModel model)", "diff": ["-    return new JDKToolsLibrary(version, compiler, debugger);", "+    JavadocModel javadoc = new NoJavadocAvailable(model);", "+    try {", "+      Class.forName(\"com.sun.tools.javadoc.Main\");", "+      javadoc = new DefaultJavadocModel(model, null, GlobalModel.RUNTIME_CLASS_PATH);", "+    }", "+    catch (ClassNotFoundException e) { /* can't load */ }", "+    catch (LinkageError e) { /* can't load (probably not necessary, but might as well catch it) */ }", "+    ", "+    return new JDKToolsLibrary(version, compiler, debugger, javadoc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d13e3907fb68b09e54e68fc8f22dbf7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-hj/edu/rice/cs/drjava/model/compiler/HjCompiler.java", "commitBeforeChange": "503a4c8c883d0c0e1badd33935b5da20910f7033", "commitAfterChange": "bc15f82b93b6ffb78da3a3058742b383768e7aa6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "         public boolean isAvailable()", "signatureAfterChange": "       public boolean isAvailable()", "diff": ["-    return true;", "+    try {", "+      Class.forName(\"hj.parser.HjLexer\");", "+      Class.forName(\"polyglot.ext.hj.Version\");", "+      Class.forName(\"polyglot.ext.hj.visit.HjTranslator\");", "+      return true;", "+    }", "+    catch (Exception e) { return false; }", "+    catch (LinkageError e) { return false; }"]}], "num": 3450}