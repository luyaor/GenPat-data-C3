{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72746a2bab59f687bd53f22d1dc50167", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b61f70a98c0582dcf570ae3733fe0ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 16, "signatureBeforeChange": "    public void testGetLineFirstCharPos() throws BadLocationException", "signatureAfterChange": "    public void testGetLineFirstCharPos() throws BadLocationException", "diff": ["-                 _doc.getLineFirstCharPos(1));", "+                 _getLineFirstCharPos(1));", "-                 _doc.getLineFirstCharPos(1));", "+                 _getLineFirstCharPos(1));", "-                 _doc.getLineFirstCharPos(7));", "+                 _getLineFirstCharPos(7));", "-                 _doc.getLineFirstCharPos(16));", "+                 _getLineFirstCharPos(16));", "-                 _doc.getLineFirstCharPos(19));", "+                 _getLineFirstCharPos(19));", "-    _doc.getLineFirstCharPos(5);", "+    _getLineFirstCharPos(5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f8c146217f8a06c1d252071a072fc5d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   private int _commentBlock(final int start, final int end)", "signatureAfterChange": "   private int _commentBlock(final int start, final int end)", "diff": ["-      int walker = start;", "+      int walker = getLineStartPos(start);", "-          setCurrentLocation(walker);", "-          // Keep pointer to walker position that will stay current", "-          // regardless of how commentLine changes things", "-          Position walkerPos = this.createUnwrappedPosition(walker);", "-          // Comment out current line", "-          _commentLine();  // must be atomic", "+          setCurrentLocation(walker);  // Update cursor", "+          ", "+          _commentLine();              // Comment out current line; must be atomic", "-          // Move back to walker spot", "-          setCurrentLocation(walkerPos.getOffset());", "-          walker = walkerPos.getOffset();", "+", "+          walker = walker + 2;         // Skip over inserted slashes; getDistToNewline(walker) = 0 if not advanced", "+          setCurrentLocation(walker);  // reset currentLocation to position past newline", "+", "-          // We don't actually move yet. That happens at the top of the loop,", "-          // after we check if we're past the end.", "-          //DrJava.consoleOut().println(\"progress: \" + (100*(walker-start)/(end-start)));"]}], "num": 2591}