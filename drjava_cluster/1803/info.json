{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f73b8c75ea61ff307c05c5403119e18", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f95fe04d2dd7f65c0b72183b3f4256e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "1333ad40debe120f6d8fd5fb5ff36c57ce6b1ccf", "commitAfterChange": "3907c0e8430f2d380a191d1ad8364cbfdd1d1b28", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void interpret(final String s)", "signatureAfterChange": "    public void interpret(final String s)", "diff": ["-    /*", "+    // Spawn thread on InterpreterJVM side", "+    //  (will receive result in the interpretResult(...) method)", "+    catch (java.rmi.UnmarshalException ume) {", "+      // Could not receive result from interpret; system probably exited.", "+      // We will silently fail and let the interpreter restart.", "+      _log.log(\"main.interp: UnmarshalException, so interpreter is dead:\\n\"", "+                 + ume);", "+    }", "-    */", "+    // Spawn thread on this side (receive result \"immediately\")", "+    /*", "+    */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6d2f31e0e8e5dd8a96b00f3890e2216", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "8279bc33117c74621df6401dedd10a0cae247a2c", "commitAfterChange": "ce3350f89c936debb5fbaa8f27f501d1524368cf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "    public void killInterpreter()", "signatureAfterChange": "    public void killInterpreter()", "diff": ["-    synchronized(this) {", "-      if ((_interpreterProcess != null) && (_interpreterJVM != null)) {", "-        try {", "-          _interpreterJVM.exitJVM();", "-        }", "-        catch (RemoteException re) {", "-          // couldn't ask it to quit nicely. be mean and kill", "-          _interpreterProcess.destroy();", "-        }", "-", "-        _interpreterProcess = null;", "-        _interpreterJVM = null;", "-      }", "+    try {", "+      quitSlave();", "+    }", "+    catch (RemoteException re) {", "+      _threwException(re);"]}], "num": 1803}