{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3168597c33a3bd4de152a280bce2c0a0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3c13fa2f1eb42c173f61f1220d81ec8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "commitAfterChange": "56a5d7ef4f332df9b45adf95f71d664c61575e1a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testCompileWithPackageStatementInsideClass()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileWithPackageStatementInsideClass() throws BadLocationException, IOException", "diff": ["-   */", "-  public void testCompileWithPackageStatementInsideClass()", "-    throws BadLocationException, IOException", "-  {", "+  /** Puts an otherwise valid package statement inside a class declaration. This better not work! */", "+  public void testCompileWithPackageStatementInsideClass() throws BadLocationException, IOException {", "-    CompileShouldFailListener listener = new CompileShouldFailListener();", "-    _model.addListener(listener);", "+    _compileDone = false;", "+    _model.addListener(_failListener);", "+    _waitCompileDone();", "-    listener.checkCompileOccurred();", "+    _failListener.checkCompileOccurred();", "-    assertTrue(_name() + \"Class file exists after failed compile\",", "-               !compiled.exists());", "+    assertTrue(_name() + \"Class file exists after failed compile\", !compiled.exists());", "-    assertEquals(\"CompilerErrorModel has errors after reset\",", "-                 0,", "-                 cem.getNumErrors());", "-    _model.removeListener(listener);", "+    assertEquals(\"CompilerErrorModel has errors after reset\", 0, cem.getNumErrors());", "+    _model.removeListener(_failListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f120bd524412ac65cc7ac1c9ef2c7b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testDisplayFilename() throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   public void testCompleteFilename() throws BadLocationException, IOException, OperationCanceledException,      AlreadyOpenException", "diff": ["-  /** Tests the displayFileName method. */", "-  public void testDisplayFilename() throws IOException, OperationCanceledException, AlreadyOpenException {", "+  /** Tests the getCompleteFileName method. */", "+  public void testCompleteFilename() throws BadLocationException, IOException, OperationCanceledException, ", "+    AlreadyOpenException {", "-    assertEquals(\"untitled display filename\", \"(Untitled)\", _sdModel.getDisplayFileName(doc));", "+    assertEquals(\"untitled display filename\", \"(Untitled)\", doc.getCompletePath());", "-    String name = file.getName();", "+    String name = file.getAbsolutePath();", "-    assertEquals(\".java display filename\",", "-                 name.substring(0, name.length()-5),", "-                 _sdModel.getDisplayFileName(doc));", "+            ", "+    assertEquals(\".java display filename\", name, doc.getCompletePath());", "-    name = file.getName();", "+    name = file.getAbsolutePath();", "-    assertEquals(\".txt display filename\", name, _sdModel.getDisplayFileName(doc));", "+    assertEquals(\".txt display filename\", name, doc.getCompletePath());", "-    // Doesn't end in \".java\"", "-    file = File.createTempFile(\"DrJava-filename-test\", \".java.txt\", _tempDir).getCanonicalFile();", "+    // Modified File", "+    file = File.createTempFile(\"DrJava-filename-test\", \".java\", _tempDir).getCanonicalFile();", "-    name = file.getName();", "+    name = file.getAbsolutePath();", "-    assertEquals(\".java.txt display filename\", name, _sdModel.getDisplayFileName(doc));", "+    changeDocumentText(\"foo\", doc);", "+    assertEquals(\".java.txt display filename\", name + \" *\", doc.getCompletePath());"]}], "num": 19091}