{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc226078a0fa70ed41bfc83409847218", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37b6c1ad1819ddb403d8757b96a43b14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 173, "signatureBeforeChange": "   public static <T1, T2, T3, R> Iterable<R>      valuesOf(Iterable<? extends Lambda3<? super T1, ? super T2, ? super T3, ? extends R>> iter,               final T1 arg1, final T2 arg2, final T3 arg3)", "signatureAfterChange": "   public static <T1, T2, T3, R> Iterable<R>     valuesOf(Iterable<? extends Lambda3<? super T1, ? super T2, ? super T3, ? extends R>> iter,               T1 arg1, T2 arg2, T3 arg3)", "diff": ["-  /** @return  An iterable containing the values of the application of the given lambdas */", "-  public static <T1, T2, T3, R> Iterable<R> ", "-    valuesOf(Iterable<? extends Lambda3<? super T1, ? super T2, ? super T3, ? extends R>> iter, ", "-             final T1 arg1, final T2 arg2, final T3 arg3) {", "-    Lambda<Lambda3<? super T1, ? super T2, ? super T3, ? extends R>, R> lambdaValue = ", "-      new Lambda<Lambda3<? super T1, ? super T2, ? super T3, ? extends R>, R>() {", "-        public R value(Lambda3<? super T1, ? super T2, ? super T3, ? extends R> lam) { ", "-          return lam.value(arg1, arg2, arg3);", "-        }", "-      };", "-    return new MappedIterable<Lambda3<? super T1, ? super T2, ? super T3, ? extends R>, ", "-                              R>(iter, lambdaValue);", "-  }", "+  /** Lazily create an iterable containing the values of the application of the given lambdas. */", "+  public static <T1, T2, T3, R> Iterable<R>", "+    valuesOf(Iterable<? extends Lambda3<? super T1, ? super T2, ? super T3, ? extends R>> iter, ", "+             T1 arg1, T2 arg2, T3 arg3) {", "+    return new MappedIterable<Lambda3<? super T1, ? super T2, ? super T3, ? extends R>, R>", "+                 (iter, new Lambda3Value<T1, T2, T3, R>(arg1, arg2, arg3));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74263c9443da8a8d8f995b9fd2ce0066", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 176, "signatureBeforeChange": "   public static <T1, T2, T3, T4, R> Iterable<R>      valuesOf(Iterable<? extends Lambda4<? super T1, ? super T2,                                          ? super T3, ? super T4, ? extends R>> iter,               final T1 arg1, final T2 arg2, final T3 arg3, final T4 arg4)", "signatureAfterChange": "   public static <T1, T2, T3, T4, R> Iterable<R>     valuesOf(Iterable<? extends Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R>> iter,               T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "diff": ["-  /** @return  An iterable containing the values of the application of the given lambdas */", "-  public static <T1, T2, T3, T4, R> Iterable<R> ", "-    valuesOf(Iterable<? extends Lambda4<? super T1, ? super T2, ", "-                                        ? super T3, ? super T4, ? extends R>> iter, ", "-             final T1 arg1, final T2 arg2, final T3 arg3, final T4 arg4) {", "-    Lambda<Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R>, R> lambdaValue = ", "-      new Lambda<Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R>, R>() {", "-        public R value(Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lam) { ", "-          return lam.value(arg1, arg2, arg3, arg4);", "-        }", "-      };", "-    return new MappedIterable<Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R>,", "-                              R>(iter, lambdaValue);", "-  }", "+  /** Lazily create an iterable containing the values of the application of the given lambdas. */", "+  public static <T1, T2, T3, T4, R> Iterable<R>", "+    valuesOf(Iterable<? extends Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R>> iter, ", "+             T1 arg1, T2 arg2, T3 arg3, T4 arg4) {", "+    return new MappedIterable<Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R>, R>", "+                 (iter, new Lambda4Value<T1, T2, T3, T4, R>(arg1, arg2, arg3, arg4));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9978cf12498f3036f8ae8ac4db1f3813", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 167, "signatureBeforeChange": "   public static <T, R> Iterable<R>      valuesOf(Iterable<? extends Lambda<? super T, ? extends R>> iter, final T arg)", "signatureAfterChange": "   public static <T, R> Iterable<R> valuesOf(Iterable<? extends Lambda<? super T, ? extends R>> iter, T arg)", "diff": ["-  /** @return  An iterable containing the values of the application of the given lambdas */", "-  public static <T, R> Iterable<R> ", "-    valuesOf(Iterable<? extends Lambda<? super T, ? extends R>> iter, final T arg) {", "-    Lambda<Lambda<? super T, ? extends R>, R> lambdaValue = ", "-      new Lambda<Lambda<? super T, ? extends R>, R>() {", "-        public R value(Lambda<? super T, ? extends R> lam) { return lam.value(arg); }", "-      };", "-    return new MappedIterable<Lambda<? super T, ? extends R>, R>(iter, lambdaValue);", "+  /** Lazily create an iterable containing the values of the application of the given lambdas. */", "+  public static <T, R> Iterable<R> valuesOf(Iterable<? extends Lambda<? super T, ? extends R>> iter, T arg) {", "+    return new MappedIterable<Lambda<? super T, ? extends R>, R>(iter, new LambdaValue<T, R>(arg));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1ecdb49668e5551052c3f3f29935fba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 170, "signatureBeforeChange": "   public static <T1, T2, R> Iterable<R>      valuesOf(Iterable<? extends Lambda2<? super T1, ? super T2, ? extends R>> iter,               final T1 arg1, final T2 arg2)", "signatureAfterChange": "   public static <T1, T2, R> Iterable<R>      valuesOf(Iterable<? extends Lambda2<? super T1, ? super T2, ? extends R>> iter, T1 arg1, T2 arg2)", "diff": ["-  /** @return  An iterable containing the values of the application of the given lambdas */", "+  /** Lazily create an iterable containing the values of the application of the given lambdas. */", "-    valuesOf(Iterable<? extends Lambda2<? super T1, ? super T2, ? extends R>> iter, ", "-             final T1 arg1, final T2 arg2) {", "-    Lambda<Lambda2<? super T1, ? super T2, ? extends R>, R> lambdaValue = ", "-      new Lambda<Lambda2<? super T1, ? super T2, ? extends R>, R>() {", "-        public R value(Lambda2<? super T1, ? super T2, ? extends R> lam) { ", "-          return lam.value(arg1, arg2);", "-        }", "-      };", "-    return new MappedIterable<Lambda2<? super T1, ? super T2, ? extends R>, R>(iter, lambdaValue);", "-  }", "+    valuesOf(Iterable<? extends Lambda2<? super T1, ? super T2, ? extends R>> iter, T1 arg1, T2 arg2) {", "+    return new MappedIterable<Lambda2<? super T1, ? super T2, ? extends R>, R>", "+                 (iter, new Lambda2Value<T1, T2, R>(arg1, arg2));"]}], "num": 6584}