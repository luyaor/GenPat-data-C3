{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e6dd0b74daa2d0f0a1dadc233345068", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e7d6c7ae81987b1c8d8dcdd04d5ccc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void junitAll(List<String> qualifiedClassnames, List<File> files)", "signatureAfterChange": "   public void junitAll(List<String> qualifiedClassnames, List<File> files)", "diff": ["-  public void junitAll(List<String> qualifiedClassnames, List<File> files){", "-    _notifier.junitAllStarted();", "-    List<String> tests = _jvm.runTestSuite(qualifiedClassnames, files, true);", "-    _isTestInProgress = true;", "+  public void junitAll(List<String> qualifiedClassnames, List<File> files) {", "+    synchronized (_compilerModel) {", "+      synchronized (this) {", "+        if (_testInProgress) return;", "+        _testInProgress = true;", "+      }", "+      try {", "+        List<String> testClasses = _jvm.findTestClasses(qualifiedClassnames, files);", "+        if (testClasses.isEmpty()) {", "+          nonTestCase(true);", "+          return;", "+        } ", "+        _notifier.junitAllStarted(); ", "+        _jvm.runTestSuite();", "+      }", "+      catch(IOException e) { ", "+        _notifier.junitEnded();", "+        throw new UnexpectedException(e); }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fc1e8418faed06067ae62521647c757", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "commitAfterChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void junitClasses(List<String> qualifiedClassnames, List<File> files)", "signatureAfterChange": " public void run()", "diff": ["-    */", "-  public void junitClasses(List<String> qualifiedClassnames, List<File> files) {", "-    Utilities.showDebug(\"junitClasses(\" + qualifiedClassnames + \", \" + files);", "-    synchronized(_compilerModel.getCompilerLock()) {", "-      ", "-      // Check _testInProgress ", "-      if (_testInProgress) return;", "-      ", "-      List<String> testClasses;", "-      try { testClasses = _jvm.findTestClasses(qualifiedClassnames, files); }", "-      catch(IOException e) { throw new UnexpectedException(e); }", "-      ", "-//      System.err.println(\"Found test classes: \" + testClasses);", "-      ", "-      if (testClasses.isEmpty()) {", "-        nonTestCase(true);", "-        return;", "-      }", "-      _notifier.junitClassesStarted();", "-      _testInProgress = true;", "-      try { _jvm.runTestSuite(); } ", "-      catch(Exception e) {", "-//        System.err.println(\"Threw exception \" + e);", "-        _notifier.junitEnded();", "-        _testInProgress = false;", "-        throw new UnexpectedException(e); ", "-      }", "-    }", "-  }", "+        // notify listeners that JUnit testing has finally started!", "+        Utilities.invokeLater(new Runnable() { public void run() { _notifier.junitStarted(); } });"]}], "num": 17547}