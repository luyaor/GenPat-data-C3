{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "215d52d113166b967e6c1f8860e8e1cf", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1705b88dff5b70caa08fa8458bf521f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "512658e6d0ae282068e705a86d988618e9ce9c5f", "commitAfterChange": "7d708b4318d2a7ffa9f01174e54dfcf52e139a3d", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     @Override public Type visit(SimpleMethodCall node)", "signatureAfterChange": "     @Override public Type visit(SimpleMethodCall node)", "diff": ["-      ClassType t;", "+      Type t;", "-        try {", "-          t = context.typeContainingMethod(node.getMethodName(), ts);", "-          if (t == null) {", "-            setErrorStrings(node, node.getMethodName());", "-            throw new ExecutionError(\"undefined.name\", node);", "-          }", "+        t = context.typeContainingMethod(node.getMethodName(), ts);", "+        if (t == null) {", "+          setErrorStrings(node, node.getMethodName());", "+          throw new ExecutionError(\"undefined.name\", node);", "-        catch (AmbiguousNameException e) { throw new ExecutionError(\"ambiguous.name\", node); }", "-      DJClass enclosingThis = enclosingThis(t);", "+      DJClass enclosingThis = context.getThis(t, ts);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5486058963a41f150dfe3f091924688a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "8c59b6d09078dbcf117925bc686cacee46ca999f", "commitAfterChange": "f8e25255cc9b1c52f4c1874e15c63efdafe32091", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Node resolveAmbiguousName(AmbiguousName node)", "signatureAfterChange": "     private Node resolveAmbiguousName(AmbiguousName node)", "diff": ["-        catch (AmbiguousNameException e) { throw new ExecutionError(\"ambiguous.name\", node); }", "+        catch (AmbiguousNameException e) {", "+          setErrorStrings(node, className);", "+          throw new ExecutionError(\"ambiguous.name\", node);", "+        }", "-          else { throw new ExecutionError(\"ambiguous.name\", node); }", "+          else {", "+            setErrorStrings(node, className);", "+            throw new ExecutionError(\"ambiguous.name\", node);", "+          }", "-              else { throw new ExecutionError(\"ambiguous.name\", node); }", "+              else {", "+                setErrorStrings(node, memberName.image());", "+                throw new ExecutionError(\"ambiguous.name\", node);", "+              }"]}], "num": 16842}