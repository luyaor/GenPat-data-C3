{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23238415e4e98384c89a94bba764d7a0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "333c3ce9c07cdbe7a5ff4f34e8d9b81b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "ddaa83f5d7e463d396f773edc05bd85484692b8a", "commitAfterChange": "c0411b7a6f6c403c7ffb73b1d0c38cb49fd33824", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public void uncommentLines(int selStart, int selEnd)", "signatureAfterChange": "   public int uncommentLines(int selStart, int selEnd)", "diff": ["-  public void uncommentLines(int selStart, int selEnd) {", "+  public int uncommentLines(int selStart, int selEnd) {", "+    int toReturn = selEnd;", "+          setCurrentLocation(selStart);", "+          toReturn-=2;", "-          setCurrentLocation(oldCurrentPosition.getOffset());", "+          //setCurrentLocation(oldCurrentPosition.getOffset());", "-    else _uncommentBlock(selStart, selEnd);", "+    else  toReturn = _uncommentBlock(selStart, selEnd);", "+    return toReturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45ecf8d83e11eac53693cc4cfb554600", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "ddaa83f5d7e463d396f773edc05bd85484692b8a", "commitAfterChange": "c0411b7a6f6c403c7ffb73b1d0c38cb49fd33824", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public void commentLines(int selStart, int selEnd)", "signatureAfterChange": "   public int commentLines(int selStart, int selEnd)", "diff": ["-  public void commentLines(int selStart, int selEnd) {", "+  public int commentLines(int selStart, int selEnd) {", "-      //int key = _undoManager.startCompoundEdit();  //Uncommented in regards to the FrenchKeyBoardFix", "-      if (selStart == selEnd) {", "-        writeLock();", "-        try {", "-          ", "-          synchronized(_reduced) {", "-            Position oldCurrentPosition = createPosition(_currentLocation);", "-            _commentLine();", "-            //int caretPos = getCaretPosition();", "-            //_doc().setCurrentLocation(caretPos);", "-          }", "-        }", "-        catch (BadLocationException e) { throw new UnexpectedException(e); }", "-        finally { writeUnlock(); }", "-      }", "-      else _commentBlock(selStart, selEnd);", "+    //int key = _undoManager.startCompoundEdit();  //Uncommented in regards to the FrenchKeyBoardFix", "+    int toReturn = selEnd;", "+    if (selStart == selEnd) {", "+      writeLock();", "+      try {", "-      _undoManager.endLastCompoundEdit();  //Changed from endCompoundEdit(key) for FrenchKeyBoardFix", "+        synchronized(_reduced) {", "+          setCurrentLocation(selStart);", "+          Position oldCurrentPosition = createPosition(_currentLocation);", "+          _commentLine();   ", "+          toReturn+=2;", "+          //int caretPos = getCaretPosition();", "+          //_doc().setCurrentLocation(caretPos);", "+        }", "+      }", "+      catch (BadLocationException e) { throw new UnexpectedException(e); }", "+      finally { writeUnlock(); }", "+    }", "+    else toReturn = _commentBlock(selStart, selEnd);   ", "+    _undoManager.endLastCompoundEdit();  //Changed from endCompoundEdit(key) for FrenchKeyBoardFix", "+    return toReturn;"]}], "num": 20378}