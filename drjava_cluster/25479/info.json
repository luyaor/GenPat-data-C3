{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57f8f3d119a68e67be77b4cf173364fe", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b03bb76ed6859f29c93beb8d1374e30b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "51d1f2e57f80c21afa7918fd2fa925d58d67589d", "commitAfterChange": "814cfebe8a374d445ce9c3fa02698b2d647448f9", "methodNumberBeforeChange": 263, "methodNumberAfterChange": 263, "signatureBeforeChange": "      public void setUpDrJavaProperties()", "signatureAfterChange": "      public void setUpDrJavaProperties()", "diff": ["+    ", "+    PropertyMaps.ONLY.setProperty(\"DrJava\", new DrJavaProperty(\"tmpfile\") {", "+      java.util.Random _r = new java.util.Random();", "+      public String toString() {", "+        invalidate();", "+        update();", "+        return _value;", "+      }", "+      public void update() {", "+        try {", "+          File f;", "+          if (_attributes.get(\"name\").equals(\"\")) {", "+            File dir = new File(System.getProperty(\"java.io.tmpdir\"));", "+            if (!_attributes.get(\"dir\").equals(\"\")) {", "+              dir = new File(_attributes.get(\"dir\"));", "+            }", "+            f = new File(dir, \"DrJava-Execute-\"+System.currentTimeMillis()+\"-\"+(_r.nextInt() & 0xffff)+\".tmp\");", "+            if (!_attributes.get(\"dir\").equals(\"\")) {", "+              f = new File(new File(_attributes.get(\"dir\")),f.getName());", "+            }", "+          }", "+          else {", "+            File dir = new File(System.getProperty(\"java.io.tmpdir\"));", "+            if (!_attributes.get(\"dir\").equals(\"\")) {", "+              dir = new File(_attributes.get(\"dir\"));", "+            }", "+            f = new File(dir, _attributes.get(\"name\"));", "+          }", "+          try {", "+            f = f.getCanonicalFile();", "+          }", "+          catch(IOException ioe) { }", "+          f.deleteOnExit();", "+          _value = edu.rice.cs.util.StringOps.escapeSpacesWith1bHex(f.toString());", "+        }", "+        catch(SecurityException e) { _value = \"Error.\"; }", "+      }", "+      public String getCurrent() {", "+        invalidate();", "+        final String s = super.getCurrent();", "+        File f = new File(edu.rice.cs.util.StringOps.unescapeSpacesWith1bHex(_value));", "+        final String keep = _attributes.get(\"keep\");", "+        if (!(keep.equals(\"true\") || keep.equals(\"yes\") || keep.equals(\"1\"))) {", "+          f.deleteOnExit();", "+        }", "+        String text = edu.rice.cs.util.StringOps.escapeSpacesWith1bHex(_attributes.get(\"content\"));", "+        try {", "+          FileWriter fw = new FileWriter(f);", "+          fw.write(text, 0, text.length());", "+          fw.close();", "+        }", "+        catch(IOException ioe) { /*ignore*/ }", "+        return s;", "+      }", "+      public void resetAttributes() {", "+        _attributes.clear();", "+        _attributes.put(\"dir\", \"\");", "+        _attributes.put(\"name\", \"\");", "+        _attributes.put(\"keep\", \"\");", "+        _attributes.put(\"content\", \"\");", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb61bc317126a795d7c100226a30aa88", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fee21edb1b15f1499b5409a250cdb90d3f204739", "commitAfterChange": "e100da4da75b9cbdfc04df45bf52679ed811f23a", "methodNumberBeforeChange": 274, "methodNumberAfterChange": 275, "signatureBeforeChange": "   public void setUpDrJavaProperties()", "signatureAfterChange": "   public void setUpDrJavaProperties()", "diff": ["+    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerProperty(\"drjava.current.line\", ", "+                                                              \"Returns the current line in the Definitions Pane.\") {", "+      public void update() {", "+        _value = String.valueOf(_posListener.lastLine());", "+      }", "+    });", "+    PropertyMaps.ONLY.setProperty(\"DrJava\", new EagerProperty(\"drjava.current.col\", ", "+                                                              \"Returns the current column in the Definitions Pane.\") {", "+      public void update() {", "+//        int line = _currentDefPane.getCurrentLine();", "+//        int lineOffset = _currentDefPane.getLineStartOffset(line);", "+//        int caretPos = _currentDefPane.getCaretPosition();", "+        _value = String.valueOf(_posListener.lastCol());", "+      }", "+    });", "+    ", "+    PropertyMaps.ONLY.setProperty(\"Action\", new DrJavaActionProperty(\"action.save.all\", \"(Save All...)\",", "+                                                                     \"Execute a \\\"Save All\\\" action.\") {", "+      public void update() {", "+        _saveAll();", "+      }", "+    });", "+    PropertyMaps.ONLY.setProperty(\"Action\", new DrJavaActionProperty(\"action.compile.all\", \"(Compile All...)\",", "+                                                                     \"Execute a \\\"Compile All\\\" action.\") {", "+      public void update() {", "+        _compileAll();", "+      }", "+    });", "+    PropertyMaps.ONLY.setProperty(\"Action\", new DrJavaActionProperty(\"action.clean\", \"(Clean Build Directory...)\",", "+                                                                     \"Execute a \\\"Clean Build Directory\\\" action.\") {", "+      public void update() {", "+        // could not use _clean(), since ProjectFileGroupingState.cleanBuildDirectory()", "+        // is implemented as an asynchronous task, and DrJava would not wait for its completion", "+        edu.rice.cs.plt.io.IOUtil.deleteRecursively(_model.getBuildDirectory());", "+      }", "+    });", "+    PropertyMaps.ONLY.setProperty(\"Action\", new DrJavaActionProperty(\"action.open.file\", \"(Open File...)\",", "+                                                                     \"Execute an \\\"Open File\\\" action.\\n\"+", "+                                                                     \"Required attributes:\\n\"+", "+                                                                     \"\\tfile=\\\"<file to open>\\\"\\n\"+", "+                                                                     \"Optional attributes:\\n\"+", "+                                                                     \"\\tline=\\\"<line number to display>\") {", "+      public void update() {", "+        if (_attributes.get(\"file\")!=null) {", "+          final String dir = StringOps.unescapeSpacesWith1bHex(StringOps.replaceVariables(DEF_DIR,", "+                                                                                          PropertyMaps.ONLY,", "+                                                                                          PropertyMaps.GET_CURRENT));", "+          final String fil = StringOps.unescapeSpacesWith1bHex(StringOps.replaceVariables(_attributes.get(\"file\"),", "+                                                                                          PropertyMaps.ONLY,", "+                                                                                          PropertyMaps.GET_CURRENT));", "+          FileOpenSelector fs = new FileOpenSelector() {", "+            public File[] getFiles() {", "+              if (fil.startsWith(\"/\")) { return new File[] { new File(fil) }; }", "+              else { return new File[] { new File(dir, fil) }; }", "+            }", "+          };", "+          open(fs);", "+          int lineNo = -1;", "+          if (_attributes.get(\"line\")!=null) {", "+            try {", "+              lineNo = new Integer(_attributes.get(\"line\"));", "+            }", "+            catch(NumberFormatException nfe) {", "+              lineNo = -1;", "+            }", "+          }", "+          if (lineNo>=0) {", "+            final int l = lineNo;", "+            edu.rice.cs.util.swing.Utilities.invokeLater(new Runnable() { ", "+              public void run() { _jumpToLine(l); }", "+            });", "+          }", "+        }", "+      }", "+      /** Reset the attributes. */", "+      public void resetAttributes() {", "+        _attributes.clear();", "+        _attributes.put(\"file\", null);", "+        _attributes.put(\"line\", null);", "+      }", "+    });", "+    PropertyMaps.ONLY.setProperty(\"Action\", new DrJavaActionProperty(\"action.auto.refresh\", \"(Auto-Refresh...)\",", "+                                                                     \"Execute an \\\"Auto-Refresh Project\\\" action.\") {", "+      public void update() {", "+        _model.autoRefreshProject();", "+      }", "+    });"]}], "num": 25479}