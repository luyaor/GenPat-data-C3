{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd48e9714d885e7f176b1ba7932993d3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e64d8dae03596fdc8910e928621eee6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "18d23bc33a9e21a21fbea8669d376abbec4474d5", "commitAfterChange": "d43aa0dddfca5bd508283f6af1dfc42f0f92a186", "methodNumberBeforeChange": 179, "methodNumberAfterChange": 179, "signatureBeforeChange": "   public static <T> T last(Iterable<? extends T> iter)", "signatureAfterChange": "   public static <T> T last(Iterable<? extends T> iter)", "diff": ["-      return ((OptimizedLastIterable<? extends T>) iter).last();", "+      // javac 6 doesn't like this -- OptimizedLastIterable<? extends T> </: Iterable<capture extends T>", "+      @SuppressWarnings(\"unchecked\") OptimizedLastIterable<? extends T> o = (OptimizedLastIterable<? extends T>) iter;", "+      return o.last();", "-      List<? extends T> l = (List<? extends T>) iter;", "+      // javac 6 doesn't like this -- List<? extends T> </: Iterable<capture extends T>", "+      @SuppressWarnings(\"unchecked\") List<? extends T> l = (List<? extends T>) iter;", "-      SortedSet<? extends T> s = (SortedSet<? extends T>) iter;", "+      // javac 6 doesn't like this -- SortedSet<? extends T> </: Iterable<capture extends T>", "+      @SuppressWarnings(\"unchecked\") SortedSet<? extends T> s = (SortedSet<? extends T>) iter;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8d2d2cb7acef48a02136b48ae1a19e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/CollectUtil.java", "commitBeforeChange": "0e1d09dde6936169177bd564168991351deb65d8", "commitAfterChange": "a4e2145de592013fb29da195ee7f505ebce1be18", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public static <T> Set<? extends T> asSet(Iterable<? extends T> iter)", "signatureAfterChange": "      public static <T> Set<T> asSet(Iterable<T> iter)", "diff": ["-  public static <T> Set<? extends T> asSet(Iterable<? extends T> iter) {", "-    if (iter instanceof Set<?>) {", "-      @SuppressWarnings(\"unchecked\") Set<? extends T> set = (Set<? extends T>) iter;", "-      return set;", "-    }", "-    else if (iter instanceof Collection<?>) {", "-      @SuppressWarnings(\"unchecked\") Collection<? extends T> coll = (Collection<? extends T>) iter;", "-      return new HashSet<T>(coll);", "-    }", "+  public static <T> Set<T> asSet(Iterable<T> iter) {", "+    if (iter instanceof Set<?>) { return (Set<T>) iter; }", "+    else if (iter instanceof Collection<?>) { return new HashSet<T>((Collection<T>) iter); }", "-      @SuppressWarnings(\"unchecked\") SizedIterable<? extends T> si = (SizedIterable<? extends T>) iter;", "+      SizedIterable<T> si = (SizedIterable<T>) iter;"]}], "num": 5437}