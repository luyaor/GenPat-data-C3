{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd6140bf547842f530d41d6f69c51a0f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27d29067170be63fe8b20dd416b3e9a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BackSlashTest.java", "commitBeforeChange": "b400b9a6647834c824c840f4cbeb6ad51c113120", "commitAfterChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void testBackSlashBeforeDoubleEscape()", "signatureAfterChange": "  \tpublic void testBackSlashBeforeDoubleEscape()", "diff": ["-\t\t\tassertEquals(\"#0.0\", \"\\\\\\\\\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#0.1\", 1, model1._offset);", "-\t\t\tassertEquals(\"#0.2\", \"\\\\\", model1._cursor.nextItem().getType());", "+\t\t\tassertEquals(\"#0.0\", \"\\\\\\\\\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#0.1\", 1, model1.getBlockOffset());", "+\t\t\tassertEquals(\"#0.2\", \"\\\\\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#1.0\", \"\\\\\\\\\", model2._cursor.current().getType());", "-\t\t\tassertEquals(\"#1.1\", 1, model2._offset);", "-\t\t\tassertEquals(\"#1.2\", \"\\\"\", model2._cursor.nextItem().getType());", "+\t\t\tassertEquals(\"#1.0\", \"\\\\\\\\\", model2.getCursor().current().getType());", "+\t\t\tassertEquals(\"#1.1\", 1, model2.getBlockOffset());", "+\t\t\tassertEquals(\"#1.2\", \"\\\"\", model2.getCursor().nextItem().getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e1004e815e20320008fc0d99a059b8d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/BackSlashTest.java", "commitBeforeChange": "b400b9a6647834c824c840f4cbeb6ad51c113120", "commitAfterChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void testBackSlashBeforeDoubleEscape()", "signatureAfterChange": "  \tpublic void testBackSlashBeforeDoubleEscape()", "diff": ["-\t\t\tassertEquals(\"#0.0\", \"\\\\\\\\\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#0.1\", 1, model1._offset);", "-\t\t\tassertEquals(\"#0.2\", \"\\\\\", model1._cursor.nextItem().getType());", "+\t\t\tassertEquals(\"#0.0\", \"\\\\\\\\\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#0.1\", 1, model1.getBlockOffset());", "+\t\t\tassertEquals(\"#0.2\", \"\\\\\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#1.0\", \"\\\\\\\\\", model2._cursor.current().getType());", "-\t\t\tassertEquals(\"#1.1\", 1, model2._offset);", "-\t\t\tassertEquals(\"#1.2\", \"\\\"\", model2._cursor.nextItem().getType());", "+\t\t\tassertEquals(\"#1.0\", \"\\\\\\\\\", model2.getCursor().current().getType());", "+\t\t\tassertEquals(\"#1.1\", 1, model2.getBlockOffset());", "+\t\t\tassertEquals(\"#1.2\", \"\\\"\", model2.getCursor().nextItem().getType());"]}], "num": 518}