{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "186b77d41178e51bd54fbeac6d874253", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484c699f0eaa8b6e7e32cf4414b9c8af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "commitAfterChange": "dc012dd7d972609a38d1836c72ebe86b07df0e53", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   private boolean _insideString(String docText)", "signatureAfterChange": "   private boolean _insideString(String docText)", "diff": ["-   * is within a comment on the same line as the string*/", "-  private boolean _insideString(String docText) {", "-//    Utilities.showDebug(\"DEBUG: _insideString called\");  ", "+   */", "+  private boolean _insideString(String docText) {    ", "-", "-//    Utilities.showDebug(\"DEBUG: value of previousNewLineOffset = \" +  previousNewLineOffset);    ", "-    ", "-      if (!_insideBlockComment(tempText) && !_insideChar(tempText))", "+      //     - a quotation mark inside a string should not count as opening or closing a string", "+      if (!_insideBlockComment(tempText) && !_insideChar(tempText) && (tempText.lastIndexOf(\"\\\\\") != tempText.length()-1))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4537059d28df065eeed8f666c3b7bc4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "8470bac42027a288eff50252d965c363d15d41dc", "commitAfterChange": "cb029f12bd6c2fdcdba02605492a4baf5ca47e02", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "   private synchronized int _findKeywordAtToplevel( String keyword, String text)", "signatureAfterChange": "   private synchronized int _findKeywordAtToplevel( String keyword, String text)", "diff": ["+          ", "+        // check that the keyword is not in a comment and is followed by whitespace", "-        if (rt.getState() == ReducedModelStates.FREE) {", "-        //if (!_isCommentedOrSpace(index,text)) {", "+        if (rt.getState() == ReducedModelStates.FREE && ", "+            Character.isWhitespace(text.charAt(index + keyword.length()))) {", "+          //if (!_isCommentedOrSpace(index,text)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e940c44d417952d49b00a5c4cb08a4d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "fb4768f0a5915f88272f3d532585a4203c452f84", "commitAfterChange": "94495305a8fb1d1ea8c2b8ae2ef82ea7d92dd639", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void addDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "signatureAfterChange": "   public void addDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "diff": ["-    if (!path.startsWith(_topLevelPath))", "+    ", "+    if (!path.equals(_topLevelPath) && !path.startsWith(_topLevelPath + File.separator) )"]}], "num": 4306}