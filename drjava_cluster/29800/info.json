{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c37f15039abcc03555ffb22bc10a180b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d2cd7e96feda73cd093ff2f253fadad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private Iterable<JDKToolsLibrary> findLibraries()", "signatureAfterChange": "      private Iterable<JDKToolsLibrary> findLibraries()", "diff": ["-    Map<VerDescPair, JDKToolsLibrary> results = new TreeMap<VerDescPair, JDKToolsLibrary>();", "+    Map<LibraryKey, JDKToolsLibrary> results = new TreeMap<LibraryKey, JDKToolsLibrary>();", "-        results.put(getVerDescPair(fromConfig), fromConfig);", "+        results.put(getLibraryKey(LibraryKey.PRIORITY_CONFIG, fromConfig), fromConfig);", "-        if (!results.containsKey(getVerDescPair(fromRuntime))) {", "+        if (!results.containsKey(getLibraryKey(LibraryKey.PRIORITY_RUNTIME, fromRuntime))) {", "-          results.put(getVerDescPair(fromRuntime), fromRuntime);", "+          results.put(getLibraryKey(LibraryKey.PRIORITY_RUNTIME, fromRuntime), fromRuntime);", "-      if (!results.containsKey(getVerDescPair(t))) {", "+      // give a lower priority to built-in compilers", "+      int priority = (edu.rice.cs.util.FileOps.getDrJavaFile().equals(tVersion.location()))?LibraryKey.PRIORITY_BUILTIN:LibraryKey.PRIORITY_SEARCH;", "+      if (!results.containsKey(getLibraryKey(priority, t))) {", "-        results.put(getVerDescPair(t), t);", "+        results.put(getLibraryKey(priority, t), t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97dc28f88c3e868b066f3fd7d7942579", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ecd8712b87b08f04e81a172c17c295c61485659a", "commitAfterChange": "e240585fa71c6cba067e4f383e2111594b5db4e4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         private Iterable<JDKToolsLibrary> findLibraries()", "signatureAfterChange": "         private Iterable<JDKToolsLibrary> findLibraries()", "diff": ["-    Map<JavaVersion, JDKToolsLibrary> results = new TreeMap<JavaVersion, JDKToolsLibrary>();", "+    Map<JavaVersion.FullVersion, JDKToolsLibrary> results = new TreeMap<JavaVersion.FullVersion, JDKToolsLibrary>();", "-      if (fromConfig.isValid()) { results.put(fromConfig.version().majorVersion(), fromConfig); }", "+      if (fromConfig.isValid()) { results.put(fromConfig.version().majorVersion().fullVersion(), fromConfig); }", "-    if (fromRuntime.isValid() && !results.containsKey(runtimeVersion)) { results.put(runtimeVersion, fromRuntime); }", "+    if (fromRuntime.isValid() && !results.containsKey(runtimeVersion)) { results.put(runtimeVersion.fullVersion(), fromRuntime); }", "-      JavaVersion tVersion = t.version().majorVersion();", "-      // guaranteed to be valid", "+      JavaVersion.FullVersion tVersion = t.version();", "+      if (!DrJava.getConfig().getSetting(edu.rice.cs.drjava.config.OptionConstants.DISPLAY_ALL_COMPILER_VERSIONS).booleanValue()) {", "+        tVersion = tVersion.majorVersion().fullVersion();", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0d3e39bccc43647660c6384dc455247", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "503a4c8c883d0c0e1badd33935b5da20910f7033", "commitAfterChange": "bc15f82b93b6ffb78da3a3058742b383768e7aa6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private Iterable<JDKToolsLibrary> findLibraries()", "signatureAfterChange": "      private Iterable<JDKToolsLibrary> findLibraries()", "diff": ["+  ", "-    Map<JavaVersion.FullVersion, JDKToolsLibrary> results = new TreeMap<JavaVersion.FullVersion, JDKToolsLibrary>();", "+    Map<VerDescPair, JDKToolsLibrary> results = new TreeMap<VerDescPair, JDKToolsLibrary>();", "-        results.put(coarsenVersion(fromConfig.version()), fromConfig);", "+        results.put(getVerDescPair(fromConfig), fromConfig);", "-      JavaVersion.FullVersion runtimeVersion = fromRuntime.version();", "-        if (!results.containsKey(coarsenVersion(runtimeVersion))) {", "+        if (!results.containsKey(getVerDescPair(fromRuntime))) {", "-          results.put(coarsenVersion(runtimeVersion), fromRuntime);", "+          results.put(getVerDescPair(fromRuntime), fromRuntime);", "-      if (!results.containsKey(coarsenedVersion)) {", "+      if (!results.containsKey(getVerDescPair(t))) {", "-        results.put(coarsenedVersion, t);", "+        results.put(getVerDescPair(t), t);"]}], "num": 29800}