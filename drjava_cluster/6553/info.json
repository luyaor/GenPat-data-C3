{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8aa9a69a30bebe20c03f8c1dfb400c97", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6efbcffacf819b0dca00930144787ddd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/JavacFromSetLocation.java", "commitBeforeChange": "6affb651d9a7cac4ccd8cb2496fd606ef867f67b", "commitAfterChange": "afd6b29774fc42079476cd6409b622dfbd923e78", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    private static ClassLoader _getClassLoader()", "signatureAfterChange": "          private static ClassLoader _getClassLoader()", "diff": ["-", "-  private static ClassLoader _getClassLoader() {", "-    String loc = Configuration.ONLY.getJavacLocation();", "-    if (loc == null) {", "-      throw new RuntimeException(\"javac location not set\");", "-", "-    try {", "-      URL url = new File(loc).toURL();", "-      return new URLClassLoader(new URL[] { url });", "+    ", "+    private static ClassLoader _getClassLoader() {", "+        String loc = DrJava.CONFIG.getSetting(JAVAC_LOCATION);", "+        if (loc == null || loc.length() == 0) {", "+            throw new RuntimeException(\"javac location not set\");", "+        }", "+        ", "+        try {", "+            URL url = new File(loc).toURL();", "+            return new URLClassLoader(new URL[] { url });", "+        }", "+        catch (MalformedURLException e) {", "+            throw new RuntimeException(\"malformed url exception\");", "+        }", "-    catch (MalformedURLException e) {", "-      throw new RuntimeException(\"malformed url exception\");", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0d1012628530c9652a9988a286a911a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "69d4590eff40914052a36cc82d8a74c43211028e", "commitAfterChange": "46bddad84804814dd0241cc4f939b2c8bb524e79", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public synchronized void move(int dist)", "signatureAfterChange": "   public void move(int dist)", "diff": ["-  public synchronized void move(int dist) {", "-    throwErrorHuh();", "+  public void move(int dist) {", "+    // throwErrorHuh();", "-    int newLoc = _currentLocation + dist;", "-    if (newLoc < 0) {", "-      //      throw new RuntimeException(\"location < 0?! oldLoc=\" + _currentLocation + \" dist=\" +", "-      //                                  dist);", "-      throw new IllegalStateException(\"Tried to cursor to a negative location\");", "+    synchronized (_reduced) {", "+      int newLoc = _currentLocation + dist;", "+      if (newLoc < 0) {", "+        //      throw new RuntimeException(\"location < 0?! oldLoc=\" + _currentLocation + \" dist=\" +", "+        //                                  dist);", "+        throw new IllegalStateException(\"Tried to cursor to a negative location\");", "+      }", "+      _currentLocation = newLoc;", "+      _reduced.move(dist);", "-    _currentLocation = newLoc;", "-    _reduced.move(dist);"]}], "num": 6553}