{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "363ce2194ed5f053755889286b84c16a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f62b5ab75f95bbb109f3d3362b208be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersion.java", "commitBeforeChange": "1f3058becb78ba58ec6d1c56724efee045364cc2", "commitAfterChange": "a915713ffc333fa5e6054f9ce8312c6fe076be4f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public static FullVersion parseFullVersion(String java_version,                                              String java_runtime_name,                                              String java_vm_vendor,                                              File location)", "signatureAfterChange": "   public static FullVersion parseFullVersion(String java_version,                                              String java_runtime_name,                                              String java_vm_vendor,                                              File location)", "diff": ["-   */", "+  // Why are underscores used as word separators in identifiers below?", "+    ", "+    /** Strip trailing \".jdk\" off of java_version strings from post Java 6 Oracle JVMs for Mac OS X. */", "+    if (java_version.endsWith(\".jdk\")) java_version = java_version.substring(0, java_version.length() - 4);", "-      java_version = \"1.\"+java_version;", "+      java_version = \"1.\" + java_version;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96716368756f9481f4f4b6568098b546", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "3bb525675df17c5cd50695a90ffe7d8bb2eb200c", "commitAfterChange": "cb572b3617cad32fd1949d7534520be983606d43", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 196, "signatureBeforeChange": "     public void addDocumentListener(DocumentListener listener)", "signatureAfterChange": "     public void addDocumentListener(DocumentListener listener)", "diff": ["-      getDocument().addDocumentListener(listener);", "+      if(_cache.isDDocInCache(this)){", "+        getDocument().addDocumentListener(listener);", "+      }", "+      else {", "+        _cache.getReconstructor(this).addDocumentListener(listener);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de3d04208acea495ee6d8eb09033648a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "69a380647f3d586f130ea02ad1e8381a390045e3", "commitAfterChange": "739371db1261b11c3be5fd70233012a49b45b7ca", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": "      private Expression unbox(Expression exp, String methodName)", "signatureAfterChange": "      private Expression unbox(Expression exp, String methodName)", "diff": ["+      if (NodeProperties.hasValue(exp)) { NodeProperties.setValue(result, NodeProperties.getValue(exp)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5bd06a78a7a1f776e682dffb60ad2c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/IncrementalTaskController.java", "commitBeforeChange": "ba3f1737bae917eb057a0651ee7d4f727a22cab6", "commitAfterChange": "d28ad1c0de8862f820b20e04c9a78fc9e0194666", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected abstract void doStart();", "signatureAfterChange": "     public final void start()", "diff": ["-   */", "-  protected abstract void doStart();", "+  protected class PausedState extends WaitingState {", "+    public final void start() {", "+      if (state.compareAndSet(this, new FreshStartingState())) { doResume(); }", "+      else { state.get().start(); }", "+    }"]}], "num": 18428}