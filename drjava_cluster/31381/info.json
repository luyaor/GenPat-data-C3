{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3f7004dd4eab64dc84e5ac96ffdfb0b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49d926da8f1077e3b41c45b5a1497e75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   synchronized public void setCurrentThread(DebugThreadData threadData) throws NoSuchElementException", "signatureAfterChange": "   synchronized public void setCurrentThread(DebugThreadData threadData) throws DebugException", "diff": ["-  synchronized public void setCurrentThread(DebugThreadData threadData) throws NoSuchElementException{", "+  synchronized public void setCurrentThread(DebugThreadData threadData) throws DebugException{", "-      thread_ref.suspend();", "+//       thread_ref.suspend();", "+//        ", "+//       try{", "+//         if( thread_ref.frameCount() <= 0 ) {", "+//           printMessage(thread_ref.name() + \" could not be suspended. It had no stackframes.\");", "+//           _suspendedThreads.push(thread_ref);", "+//           resume();", "+//           return;", "+//         }", "+//       }", "+//       catch(IncompatibleThreadStateException ex){", "+//         throw new UnexpectedException(ex);", "+//       }", "+//       ", "+//       /** ", "+//        * Step now so that we can get an interpreter, ", "+//        * do not notify (hence the false argument) ", "+//        */", "+//       _stepHelper(StepRequest.STEP_OVER, false);", "+      return;", "-    _suspendedThreads.push(thread_ref);", "+    _suspendedThreads.push(thread_ref);", "-    }", "+    }    ", "-    currThreadSuspended();", "+    // also uncomment lines in currThreadSuspended() and in currThreadResumed() to make new functionality work", "+    _switchToInterpreterForThreadReference(thread_ref);", "+    _switchToSuspendedThread();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd33ba84554b0b1dbb14b32e9838fa9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1a21d93c6026fc975d9f1a1bda2fbd55942a0154", "commitAfterChange": "7cbabe0b7b5f77b58eac69afdca15c16ef2f6a9b", "methodNumberBeforeChange": 269, "methodNumberAfterChange": 269, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["-    _tabbedPanesFrame = new DetachedFrame(\"Tabbed Panes\", MainFrame.this, new Lambda<Void,DetachedFrame>() {", "-      public Void apply(DetachedFrame frame) {", "+    _tabbedPanesFrame = new DetachedFrame(\"Tabbed Panes\", MainFrame.this, new Runnable1<DetachedFrame>() {", "+      public void run(DetachedFrame frame) {", "-        return null;", "-    }, new Lambda<Void,DetachedFrame>() {", "-      public Void apply(DetachedFrame frame) {", "+    }, new Runnable1<DetachedFrame>() {", "+      public void run(DetachedFrame frame) {", "-        return null;", "-      _debugFrame = new DetachedFrame(\"Debugger\", MainFrame.this, new Lambda<Void,DetachedFrame>() {", "-        public Void apply(DetachedFrame frame) {", "+      _debugFrame = new DetachedFrame(\"Debugger\", MainFrame.this, new Runnable1<DetachedFrame>() {", "+        public void run(DetachedFrame frame) {", "-          return null;", "-      }, new Lambda<Void,DetachedFrame>() {", "-        public Void apply(DetachedFrame frame) {", "+      }, new Runnable1<DetachedFrame>() {", "+        public void run(DetachedFrame frame) {", "-          return null;"]}], "num": 31381}