{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f94435f16dfa14e981e2c7e6a82f64bf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bae853826ff6124330bc8916d0be05fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public synchronized void startUp() throws DebugException", "signatureAfterChange": "   public synchronized void startUp() throws DebugException", "diff": ["-  /** Attaches the debugger to the Interactions JVM to prepare for debugging. */", "+  /** Attaches the debugger to the Interactions JVM to prepare for debugging.  Only runs in event thread. */", "+    assert EventQueue.isDispatchThread();", "-        odd.acquireReadLock();", "-        try { setBreakpoint(new JPDABreakpoint(odd, odd._getOffset(lnr), lnr, bp.isEnabled(), this)); }", "-        finally { odd.releaseReadLock(); }", "+//        odd.acquireReadLock();", "+//        try { ", "+          setBreakpoint(new JPDABreakpoint(odd, odd._getOffset(lnr), lnr, bp.isEnabled(), this)); ", "+//        }", "+//        finally { odd.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d84ec4b98fdaeecfb23e574b68b36c7b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public synchronized void startUp() throws DebugException", "signatureAfterChange": "   public synchronized void startUp() throws DebugException", "diff": ["-  /** Attaches the debugger to the Interactions JVM to prepare for debugging. */", "+  /** Attaches the debugger to the Interactions JVM to prepare for debugging.  Only runs in event thread. */", "+    assert EventQueue.isDispatchThread();", "-        odd.acquireReadLock();", "-        try { setBreakpoint(new JPDABreakpoint(odd, odd._getOffset(lnr), lnr, bp.isEnabled(), this)); }", "-        finally { odd.releaseReadLock(); }", "+//        odd.acquireReadLock();", "+//        try { ", "+          setBreakpoint(new JPDABreakpoint(odd, odd._getOffset(lnr), lnr, bp.isEnabled(), this)); ", "+//        }", "+//        finally { odd.releaseReadLock(); }"]}], "num": 15889}