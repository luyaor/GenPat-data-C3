{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "832dc1eaaccecfcd64ee8e05eafd0f09", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "491f8195c7eaed7bfc46df85c9337243", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/GlobalModelTestCase.java", "commitBeforeChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "commitAfterChange": "d07989306c43e4045df83ca1211956d5a85a21bd", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 42, "signatureBeforeChange": "      public void interactionsReset()", "signatureAfterChange": "      public void interactionsReset()", "diff": ["-", "-    public void interactionsReset() {", "-      assertCompileStartCount(1);", "-      assertCompileEndCount(1);", "-      // don't care whether interactions or console are reset first", "-      interactionsResetCount++;", "-    }", "+", "+    public void interactionsReset() {", "+      assertInteractionsResetCount(0);", "+      assertCompileStartCount(1);", "+      assertCompileEndCount(1);", "+      // don't care whether interactions or console are reset first", "+      interactionsResetCount++;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e262edbc751157e0c7d8989f1e819b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "commitAfterChange": "d07989306c43e4045df83ca1211956d5a85a21bd", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 42, "signatureBeforeChange": "      public void interactionsReset()", "signatureAfterChange": "      public void interactionsReset()", "diff": ["-", "-    public void interactionsReset() {", "-      assertCompileStartCount(1);", "-      assertCompileEndCount(1);", "-      // don't care whether interactions or console are reset first", "-      interactionsResetCount++;", "-    }", "+", "+    public void interactionsReset() {", "+      assertInteractionsResetCount(0);", "+      assertCompileStartCount(1);", "+      assertCompileEndCount(1);", "+      // don't care whether interactions or console are reset first", "+      interactionsResetCount++;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1b8b1916134d1c8669b087f910ddf19", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/KeyBindingManager.java", "commitBeforeChange": "dff1e78708d1fc8c89ac7283a8a2c5db6fd8ed74", "commitAfterChange": "545baa1c63b7ee7d993e35e240105f7970f7c2d1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void putKeyToMenuItemMap (KeyStroke ks, JMenuItem tmpItem)", "signatureAfterChange": "          private void _updateMenuItem (KeyStrokeData data)", "diff": ["-   */", "-  public void putKeyToMenuItemMap (KeyStroke ks, JMenuItem tmpItem) {", "-    _keyToMenuItemMap.put(ks, tmpItem);", "-  } ", "+    private void _updateMenuItem (KeyStrokeData data) {", "+      JMenuItem jmi = data.getJMenuItem();", "+      ", "+      //Check associated Menu Item", "+      if (jmi != null) { // otherwise this keystroke should map to an action that isn't in the menu", "+        KeyStroke ks = data.getKeyStroke();", "+        jmi.setAccelerator(ks);", "+      }", "+    }"]}], "num": 14137}