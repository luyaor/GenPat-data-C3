{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81a6ce80092598e96995bd81e5883ffc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10153ccc5e8eb19f13a537bcafced8ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "      public void testCompoundAssignment() throws ParseException", "signatureAfterChange": "      public void testCompoundAssignment() throws ParseException", "diff": ["-    List<IdentifierToken> idnt1  = new LinkedList<IdentifierToken>();", "-    idnt1.add(new Identifier(\"i\"));", "-", "-    List<IdentifierToken> idnt2  = new LinkedList<IdentifierToken>();", "-    idnt2.add(new Identifier(\"j\"));", "-", "-    expectedAST.add(new ExclusiveOrAssignExpression(new QualifiedName(idnt1), new QualifiedName(idnt2)));", "+    expectedAST.add(new ExclusiveOrAssignExpression(new AmbiguousName(\"i\"), new AmbiguousName(\"j\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "165a80f75aba1d1e0774d627787c9b64", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EnumDeclaration.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    static List<Node> AddValues(String enumTypeName, List<Node> body, List<EnumConstant> consts)", "signatureAfterChange": "    static List<Node> AddValues(String enumTypeName, List<Node> body, List<EnumConstant> consts)", "diff": ["-    List<IdentifierToken> iIds = new LinkedList<IdentifierToken>();", "-    iIds.add(new Identifier(\"i\"));", "-    QualifiedName iId = new QualifiedName(iIds);", "+    AmbiguousName iId = new AmbiguousName(\"i\");", "-    List<IdentifierToken> sIds = new LinkedList<IdentifierToken>();", "-    sIds.add(new Identifier(\"s\"));", "-    QualifiedName sId = new QualifiedName(sIds);", "-    args.add(new QualifiedName(sIds));", "+    AmbiguousName sId = new AmbiguousName(\"s\");", "+    args.add(new AmbiguousName(\"s\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aa8416376d0c808427bad35ac7aa1ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      public void testIfStatement3() throws ParseException", "signatureAfterChange": "      public void testIfStatement3() throws ParseException", "diff": ["-    List<IdentifierToken> idnt1  = new LinkedList<IdentifierToken>();", "-    idnt1.add(new Identifier(\"o\"));", "-    ", "-    List<IdentifierToken> idnt2  = new LinkedList<IdentifierToken>();", "-    idnt2.add(new Identifier(\"SomeClass\"));", "-    ", "-    expectedAST.add(new IfThenStatement(new ObjectFieldAccess(new QualifiedName(idnt2), \"CONSTANT\"),", "-                                        new IfThenElseStatement(new ObjectMethodCall(new QualifiedName(idnt1), \"m\", null, \"\", -1, -1, -1, -1), ", "+    expectedAST.add(new IfThenStatement(new ObjectFieldAccess(new AmbiguousName(\"SomeClass\"), \"CONSTANT\"),", "+                                        new IfThenElseStatement(new ObjectMethodCall(new AmbiguousName(\"o\"), \"m\", null, \"\", -1, -1, -1, -1), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74836a4a45b5f7e9ec08dc8b8c9e3938", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EnumDeclaration.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    static List<Node> HandleConstructors(String name, List<Node> body)", "signatureAfterChange": "    static List<Node> HandleConstructors(String name, List<Node> body)", "diff": ["-    List<IdentifierToken> idnt1  = new LinkedList<IdentifierToken>();", "-    idnt1.add(new Identifier(\"$1\"));", "-    List<IdentifierToken> idnt2  = new LinkedList<IdentifierToken>();", "-    idnt2.add(new Identifier(\"$2\"));", "-", "-    args.add(new QualifiedName(idnt1));", "-    args.add(new QualifiedName(idnt2));", "+    args.add(new AmbiguousName(\"$1\"));", "+    args.add(new AmbiguousName(\"$2\"));", "-        ((ConstructorDeclaration)current).setConstructorInvocation(new ConstructorInvocation(null, args, true));", "+        ((ConstructorDeclaration)current).setConstructorCall(new ConstructorCall(null, args, true));", "-                                          new ConstructorInvocation(null, args, true),", "+                                          new ConstructorCall(null, args, true),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e24792cff309e1e5ce273564c1c5e91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      public void testIfStatement2() throws ParseException", "signatureAfterChange": "      public void testIfStatement2() throws ParseException", "diff": ["-    List<IdentifierToken> idnt1  = new LinkedList<IdentifierToken>();", "-    idnt1.add(new Identifier(\"o\"));", "-", "-    List<IdentifierToken> idnt2  = new LinkedList<IdentifierToken>();", "-    idnt2.add(new Identifier(\"o\"));", "-    ", "-    expectedAST.add(new IfThenElseStatement(new ObjectMethodCall(new QualifiedName(idnt1), \"m\", null, \"\", -1, -1, -1, -1), ", "+    expectedAST.add(new IfThenElseStatement(new ObjectMethodCall(new AmbiguousName(\"o\"), \"m\", null, \"\", -1, -1, -1, -1), ", "-                                            new IfThenStatement(new BooleanLiteral(true),new ObjectMethodCall(new QualifiedName(idnt2), \"m\", null, \"\", -1, -1, -1, -1))));", "+                                            new IfThenStatement(new BooleanLiteral(true),new ObjectMethodCall(new AmbiguousName(\"o\"), \"m\", null, \"\", -1, -1, -1, -1))));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4e2840f9fd8cd2ce38352a6c7d1ab9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void testSwitchStatement() throws ParseException", "signatureAfterChange": "      public void testSwitchStatement() throws ParseException", "diff": ["-    List<IdentifierToken> idnto  = new LinkedList<IdentifierToken>();", "-    idnto.add(new Identifier(\"o\"));", "-    stmts1.add(new ObjectMethodCall(new QualifiedName(idnto), \"m\", null, \"\", -1, -1, -1, -1));", "+    stmts1.add(new ObjectMethodCall(new AmbiguousName(\"o\"), \"m\", null, \"\", -1, -1, -1, -1));", "-    List<IdentifierToken> idnt1  = new LinkedList<IdentifierToken>();", "-    idnt1.add(new Identifier(\"i\"));", "-    expectedAST.add(new SwitchStatement(new QualifiedName(idnt1), cases, \"\", -1, -1, -1, -1));", "+    expectedAST.add(new SwitchStatement(new AmbiguousName(\"i\"), cases, \"\", -1, -1, -1, -1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef1f15adb18c369f83fcf93d80d60eb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public void testDoStatement() throws ParseException", "signatureAfterChange": "      public void testDoStatement() throws ParseException", "diff": ["-    List<IdentifierToken> idnt1  = new LinkedList<IdentifierToken>();", "-    idnt1.add(new Identifier(\"i\"));", "-    ", "-    List<IdentifierToken> idnt2  = new LinkedList<IdentifierToken>();", "-    idnt2.add(new Identifier(\"i\"));", "-    ", "-    stmts.add(new PostDecrement(new QualifiedName(idnt2)));", "+    stmts.add(new PostDecrement(new AmbiguousName(\"i\")));", "-    expectedAST.add(new DoStatement(new GreaterOrEqualExpression(new QualifiedName(idnt1), new IntegerLiteral(\"0\")), new BlockStatement(stmts)));", "+    expectedAST.add(new DoStatement(new GreaterOrEqualExpression(new AmbiguousName(\"i\"), new IntegerLiteral(\"0\")), new BlockStatement(stmts)));"]}], "num": 14740}