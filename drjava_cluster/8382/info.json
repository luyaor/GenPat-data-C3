{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffe36c4cf0dc78b21de757dfbeb067e6", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "159e9b55e4f8178a6a9583072f5fe338", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 81, "signatureBeforeChange": "   public static <T> List<T> asList(Iterable<T> iter)", "signatureAfterChange": "     public boolean isEmpty()", "diff": ["+    public boolean isEmpty() { return _array.length == 0; }", "-   */", "-  public static <T> List<T> asList(Iterable<T> iter) {", "-    if (iter instanceof List<?>) { return (List<T>) iter; }", "-    else if (iter instanceof Collection<?>) { return new ArrayList<T>((Collection<T>) iter); }", "-    else {", "-      ArrayList<T> result = new ArrayList<T>(0); // minimize footprint of empty", "-      for (T e : iter) { result.add(e); }", "-      return result;", "-    }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "878f1bb1ee5d216e014ccf20dea38ad4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 176, "methodNumberAfterChange": 69, "signatureBeforeChange": "   public static <T> ArrayList<T> asArrayList(Iterable<T> iter)", "signatureAfterChange": "     public boolean isEmpty()", "diff": ["+    public ObjectArrayWrapper(T[] array, boolean refs) { _array = array; _refs = refs; }", "+    public boolean isEmpty() { return _array.length == 0; }", "-   */", "-  public static <T> ArrayList<T> asArrayList(Iterable<T> iter) {", "-    if (iter instanceof ArrayList<?>) { return (ArrayList<T>) iter; }", "-    else if (iter instanceof Collection<?>) { return new ArrayList<T>((Collection<T>) iter); }", "-    else {", "-      ArrayList<T> result = new ArrayList<T>(0); // minimize footprint of empty", "-      for (T e : iter) { result.add(e); }", "-      return result;", "-    }", "-  }"]}], "num": 8382}