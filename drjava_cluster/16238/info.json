{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c44b283ac041419feb89f6de308533cf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99ecb53fc996cc19dc6b6f75ad9f579e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "df9cbdf4ec8cbcbc3942b966a48a15d33dcac7ed", "commitAfterChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "methodNumberBeforeChange": 343, "methodNumberAfterChange": 350, "signatureBeforeChange": "     public boolean checkIfClassFileInSync()", "signatureAfterChange": "     public boolean checkIfClassFileInSync()", "diff": ["-      if (isUntitled()) return true; // unmodified, untitled document", "+      if (isEmpty()) return true;", "-      DefinitionsDocument dd = getDocument();", "+", "-        dd.setClassFileInSync(false);", "+        setClassFileInSync(false);", "-      File classFile = dd.getCachedClassFile();", "+      File classFile = getCachedClassFile();", "-        dd.setCachedClassFile(classFile);", "+        setCachedClassFile(classFile);", "-          dd.setClassFileInSync(false);", "+          setClassFileInSync(false);", "-        dd.setClassFileInSync(false);", "+        setClassFileInSync(false);", "-        dd.setClassFileInSync(false);", "+        setClassFileInSync(false);", "-        dd.setClassFileInSync (true);", "+        setClassFileInSync(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0d3e39bccc43647660c6384dc455247", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "503a4c8c883d0c0e1badd33935b5da20910f7033", "commitAfterChange": "bc15f82b93b6ffb78da3a3058742b383768e7aa6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private Iterable<JDKToolsLibrary> findLibraries()", "signatureAfterChange": "      private Iterable<JDKToolsLibrary> findLibraries()", "diff": ["+  ", "-    Map<JavaVersion.FullVersion, JDKToolsLibrary> results = new TreeMap<JavaVersion.FullVersion, JDKToolsLibrary>();", "+    Map<VerDescPair, JDKToolsLibrary> results = new TreeMap<VerDescPair, JDKToolsLibrary>();", "-        results.put(coarsenVersion(fromConfig.version()), fromConfig);", "+        results.put(getVerDescPair(fromConfig), fromConfig);", "-      JavaVersion.FullVersion runtimeVersion = fromRuntime.version();", "-        if (!results.containsKey(coarsenVersion(runtimeVersion))) {", "+        if (!results.containsKey(getVerDescPair(fromRuntime))) {", "-          results.put(coarsenVersion(runtimeVersion), fromRuntime);", "+          results.put(getVerDescPair(fromRuntime), fromRuntime);", "-      if (!results.containsKey(coarsenedVersion)) {", "+      if (!results.containsKey(getVerDescPair(t))) {", "-        results.put(coarsenedVersion, t);", "+        results.put(getVerDescPair(t), t);"]}], "num": 16238}