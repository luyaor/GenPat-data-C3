{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32f00ec881e671a31642da98598763cb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e37fa4d8d8e307dc72233a600ecc964", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/OrderedBidirectionalHashMapTest.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testSearch()", "signatureAfterChange": "      public void testSearch()", "diff": ["-    System.out.println(\"dbls = \" + Arrays.asList(dbls).toString());", "-    System.out.println(\"vals = \" + Arrays.asList(vals).toString());", "+//    System.out.println(\"dbls = \" + Arrays.asList(dbls).toString());", "+//    System.out.println(\"vals = \" + Arrays.asList(vals).toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eac0a759f06d03434c9ec40a8ec45290", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testReconstructor() throws IOException", "signatureAfterChange": "      public void testReconstructor() throws IOException", "diff": ["-    _adapterTable.get(doc1).setReconstructor(d);", "-    assertFalse(\"The document should not be in the cache after an update\", _adapterTable.get(doc1).isReady());", "-    ", "-    _adapterTable.get(doc1).getDocument(); // force the cache to reconstruct the document.", "-", "-    assertEquals(\"The make in the reconstructor was called 1nce\", 1, _doc_made);", "-    assertEquals(\"The save in the reconstructor was not called\", 0, _doc_saved);", "+//    _adapterTable.get(doc1).setReconstructor(d);", "+//    assertFalse(\"The document should not be in the cache after an update\", _adapterTable.get(doc1).isReady());", "+//    ", "+//    _adapterTable.get(doc1).getDocument(); // force the cache to reconstruct the document.", "+//", "+//    assertEquals(\"The make in the reconstructor was called 1nce\", 1, _doc_made);", "+//    assertEquals(\"The save in the reconstructor was not called\", 0, _doc_saved);"]}], "num": 144}