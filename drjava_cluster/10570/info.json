{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c5163a3acaa1213e757fbf3a96f0d1f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "781ae96d377d99915d65bd42ff25d8f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SpecialTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public TypeData forInnerInterfaceDef(InnerInterfaceDef that)", "signatureAfterChange": "   public TypeData forInnerInterfaceDef(InnerInterfaceDef that)", "diff": ["-//    if (sd == null) { System.out.println(\"I tried to look up \" + className + \" in \" + _data.getName() + \" but I got back null\");}", "+//    if (sd == null) System.out.println(\"Tried to look up \" + className + \" in \" + _data.getName() ", "+//                                           + \" but I got back null\");", "-    final TypeData mav_result = that.getMav().visit(this);", "-    final TypeData name_result = that.getName().visit(this);", "-    final TypeData[] typeParameters_result = makeArrayOfRetType(that.getTypeParameters().length);", "+    final TypeData mavRes = that.getMav().visit(this);", "+    final TypeData nameRes = that.getName().visit(this);", "+    final TypeData[] typeParamRes = makeArrayOfRetType(that.getTypeParameters().length);", "-      typeParameters_result[i] = that.getTypeParameters()[i].visit(this);", "+      typeParamRes[i] = that.getTypeParameters()[i].visit(this);", "-    final TypeData[] interfaces_result = makeArrayOfRetType(that.getInterfaces().length);", "+    final TypeData[] interfacesRes = makeArrayOfRetType(that.getInterfaces().length);", "-      interfaces_result[i] = that.getInterfaces()[i].visit(this);", "+      interfacesRes[i] = that.getInterfaces()[i].visit(this);", "-    final TypeData body_result = ", "+    final TypeData bodyRes = ", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80232d97a9afa0e41473345c14e0cbd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SpecialTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public TypeData forInnerClassDef(InnerClassDef that)", "signatureAfterChange": "   public TypeData forInnerClassDef(InnerClassDef that)", "diff": ["-    final TypeData mav_result = that.getMav().visit(this);", "-    final TypeData name_result = that.getName().visit(this);", "-    final TypeData[] typeParameters_result = makeArrayOfRetType(that.getTypeParameters().length);", "+    final TypeData mavRes = that.getMav().visit(this);", "+    final TypeData nameRes = that.getName().visit(this);", "+    final TypeData[] typeParamRes = makeArrayOfRetType(that.getTypeParameters().length);", "-      typeParameters_result[i] = that.getTypeParameters()[i].visit(this);", "+      typeParamRes[i] = that.getTypeParameters()[i].visit(this);", "-    final TypeData superclass_result = that.getSuperclass().visit(this);", "-    final TypeData[] interfaces_result = makeArrayOfRetType(that.getInterfaces().length);", "+    final TypeData superClassRes = that.getSuperclass().visit(this);", "+    final TypeData[] interfacesRes = makeArrayOfRetType(that.getInterfaces().length);", "-      interfaces_result[i] = that.getInterfaces()[i].visit(this);", "+      interfacesRes[i] = that.getInterfaces()[i].visit(this);", "-    final TypeData body_result = ", "+    final TypeData bodyRes = "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb01234f0f78c29c0136a1187edf6abe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "   public TypeData forInnerClassDef(InnerClassDef that)", "signatureAfterChange": "   public TypeData forInnerClassDef(InnerClassDef that)", "diff": ["-    final TypeData mav_result = that.getMav().visit(this);", "-    final TypeData name_result = that.getName().visit(this);", "-    final TypeData[] typeParameters_result = makeArrayOfRetType(that.getTypeParameters().length);", "+    final TypeData mavRes = that.getMav().visit(this);", "+    final TypeData nameRes = that.getName().visit(this);", "+    final TypeData[] typeParamRes = makeArrayOfRetType(that.getTypeParameters().length);", "-      typeParameters_result[i] = that.getTypeParameters()[i].visit(this);", "+      typeParamRes[i] = that.getTypeParameters()[i].visit(this);", "-    final TypeData[] interfaces_result = makeArrayOfRetType(that.getInterfaces().length);", "+    final TypeData[] interfacesRes = makeArrayOfRetType(that.getInterfaces().length);", "-      interfaces_result[i] = that.getInterfaces()[i].visit(this);", "+      interfacesRes[i] = that.getInterfaces()[i].visit(this);", "-    final TypeData body_result = that.getBody().visit(new ClassBodyTypeChecker(sd, _file, _package, _importedFiles, ", "+    final TypeData bodyRes = that.getBody().visit(new ClassBodyTypeChecker(sd, _file, _package, _importedFiles, ", "-//    return forInnerClassDefOnly(that, mav_result, name_result, typeParameters_result, superClass, ", "-//                                interfaces_result, body_result);", "+//    return forInnerClassDefOnly(that, mavRes, nameRes, typeParamRes, superClass, ", "+//                                typeParamRes, bodyRes);"]}], "num": 10570}