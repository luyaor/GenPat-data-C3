{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91bb8599c1721c9ddcbffbf9ec1d5f82", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1de20205e06ef24d42f9aed0ae83795e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public synchronized ClassPathVector getClassPath()", "signatureAfterChange": "      public synchronized Iterable<File> getClassPath()", "diff": ["+  public synchronized Iterable<File> getClassPath() {", "+    Iterable<File> result = IterUtil.empty();", "+    result = IterUtil.compose(result, _classPathManager.getProjectCP());", "+    result = IterUtil.compose(result, _classPathManager.getBuildDirectoryCP());", "+    result = IterUtil.compose(result, _classPathManager.getProjectFilesCP());", "+    result = IterUtil.compose(result, _classPathManager.getExternalFilesCP());", "+    result = IterUtil.compose(result, _classPathManager.getExtraCP());", "+    return result;", "-   */", "-  public synchronized ClassPathVector getClassPath() {", "-    ClassPathVector ret = new ClassPathVector();", "-    ", "-    for (ClassPathEntry e: _classPathManager.getProjectCP()) ret.add(e.getEntry());", "-    ", "-    for (ClassPathEntry e: _classPathManager.getBuildDirectoryCP()) ret.add(e.getEntry());", "-    ", "-    for (ClassPathEntry e: _classPathManager.getProjectFilesCP()) ret.add(e.getEntry());", "-    ", "-    for (ClassPathEntry e: _classPathManager.getExternalFilesCP()) ret.add(e.getEntry());", "-    ", "-    for (ClassPathEntry e: _classPathManager.getExtraCP()) ret.add(e.getEntry());", "-    ", "-    return ret;", "-  } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b7a748a7d2086674de4bb6c045de2a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public ClassPathVector getClassPath()", "signatureAfterChange": "   public synchronized ClassPathVector getClassPath()", "diff": ["-  public ClassPathVector getClassPath() {", "+  public synchronized ClassPathVector getClassPath() {", "-    for (ClassPathEntry e: classPathManager.getProjectCP()) ret.add(e.getEntry());", "+    for (ClassPathEntry e: _classPathManager.getProjectCP()) ret.add(e.getEntry());", "-    for (ClassPathEntry e: classPathManager.getBuildDirectoryCP()) ret.add(e.getEntry());", "+    for (ClassPathEntry e: _classPathManager.getBuildDirectoryCP()) ret.add(e.getEntry());", "-    for (ClassPathEntry e: classPathManager.getProjectFilesCP()) ret.add(e.getEntry());", "+    for (ClassPathEntry e: _classPathManager.getProjectFilesCP()) ret.add(e.getEntry());", "-    for (ClassPathEntry e: classPathManager.getExternalFilesCP()) ret.add(e.getEntry());", "+    for (ClassPathEntry e: _classPathManager.getExternalFilesCP()) ret.add(e.getEntry());", "-    for (ClassPathEntry e: classPathManager.getExtraCP()) ret.add(e.getEntry());", "+    for (ClassPathEntry e: _classPathManager.getExtraCP()) ret.add(e.getEntry());"]}], "num": 405}