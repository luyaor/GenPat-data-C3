{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58f1cf96c8d4fbfb334746232e1ee8bc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2668f61b827a500e1025e6ef37abf3f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "1c6afe551331288ca825b92ecb3fda34bf325ee0", "commitAfterChange": "946c9827fd9c7515742a2a4508e6a7ac84a9f5a8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "signatureAfterChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "diff": ["-    if (printMessages) System.out.println(\"-----testUnsavedAndUnCompiledChanges-----\");", "+    if (printMessages) System.err.println(\"-----testUnsavedAndUnCompiledChanges-----\");", "-//    System.out.println(\"Untitled file is named: \" + untitled.getName());", "+    if (printMessages) System.err.println(\"Untitled file is named: \" + untitled.getName());", "-//    System.err.println(\"Ordinary compile completed\");", "+    if (printMessages) System.err.println(\"Ordinary compile completed\");", "-//    System.err.println(\"document changed; modifiedSinceSave = \" + doc.isModifiedSinceSave());", "+    if (printMessages) System.err.println(\"document changed; modifiedSinceSave = \" + doc.isModifiedSinceSave());", "-//    System.err.println(\"JUnit completed\");", "+    if (printMessages) System.err.println(\"JUnit completed\");", "-    if (printMessages) System.out.println(\"after test\");", "+    if (printMessages) System.err.println(\"after test\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d81b13d1b57d0db279124674d63ab2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "1bfe4c9bbfa52380052c9f1dfedadd290f963e29", "commitAfterChange": "ce99ad77121aabff91f9c6fba762f853ca2a34f5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testStartupAndShutdown() throws DebugException, InterruptedException", "signatureAfterChange": "   public void testStartupAndShutdown() throws DebugException, InterruptedException", "diff": ["-    // Reset interactions (which shuts down debugger)", "+    // Define listener that will count notification events", "+      public void interactionStarted() {", "+        // Don't notify: happens in the same thread", "+        if (printMessages) System.out.println(\"interactionStarted called in resetListener\");", "+        interactionStartCount++;", "+      }", "+      public void interactionEnded() {", "+         // Don't notify: happens in the same thread", "+        if (printMessages) System.out.println(\"interactionEnded called in resetListener\");", "+        interactionEndCount++;", "+      }", "+        if (printMessages) System.out.println(\"interpreterChanged called in resetListener\");", "+    // Install listener", "+    _model.addListener(resetListener); // interactionStarted, interactionEnded, shutdown, interpreterReady", "+    _setPendingNotifies(2);", "+    ", "+    ", "+    _model.resetInteractions(FileOption.NULL_FILE);", "-    _model.addListener(resetListener);", "-    synchronized(_notifierLock) {", "-      _model.resetInteractions(FileOption.NULL_FILE);", "-      _setPendingNotifies(3);  // interactionEnded, shutdown, interpreterReady", "-      while (_pendingNotifies > 0) _notifierLock.wait();", "-    }", "+    synchronized(_notifierLock) { while (_pendingNotifies > 0) _notifierLock.wait(); }", "-", "+    "]}], "num": 5288}