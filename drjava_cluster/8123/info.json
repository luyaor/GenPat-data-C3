{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b28f9df94baf21db0f182498be8b10c2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c51346d945e3f47716a9dbdd777939d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testConstructManyDocsWithLineNums()", "signatureAfterChange": "   public void testConstructManyDocsWithLineNums()", "diff": ["-    errors = new CompilerError[] { ", "-      new CompilerError(files[0], 2, 0, \"Test error with File\", false),", "-      new CompilerError(files[2], 3, 0, \"Test warning with File\", true),", "-      new CompilerError(files[4], 1, 0, \"Test warning with File\", true),", "-      new CompilerError(files[1], 2, 0, \"Test error with File\", false),", "-      new CompilerError(files[2], 2, 0, \"Test warning with File\", true),", "-      new CompilerError(files[3], 3, 0, \"Test error with File\", false),", "-      new CompilerError(files[4], 3, 0, \"Test error with File\", false),", "-      new CompilerError(files[0], 1, 0, \"Test error with File\", false) ", "+    errors = new DJError[] { ", "+      new DJError(files[0], 2, 0, \"Test error with File\", false),", "+      new DJError(files[2], 3, 0, \"Test warning with File\", true),", "+      new DJError(files[4], 1, 0, \"Test warning with File\", true),", "+      new DJError(files[1], 2, 0, \"Test error with File\", false),", "+      new DJError(files[2], 2, 0, \"Test warning with File\", true),", "+      new DJError(files[3], 3, 0, \"Test error with File\", false),", "+      new DJError(files[4], 3, 0, \"Test error with File\", false),", "+      new DJError(files[0], 1, 0, \"Test error with File\", false) ", "-    CompilerError[] copy = new CompilerError[errors.length];", "+    DJError[] copy = new DJError[errors.length];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7d12afc9f93341534528635af567fc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void fullSetup()", "signatureAfterChange": "   private void fullSetup()", "diff": ["-    errors = new CompilerError[] { ", "-      new CompilerError(files[0], \"Test error with File (no line)\", false),", "-      new CompilerError(files[4], 3, 0, \"Test error with File\", false),", "-      new CompilerError(files[2], \"Test warning with File (no line)\", true),", "-      new CompilerError(files[4], \"Test warning with File (no line)\", true),", "-      new CompilerError(files[2], 3, 0, \"Test warning with File\", true),", "-      new CompilerError(files[4], 1, 0, \"Test warning with File\", true),", "-      new CompilerError(files[1], \"Test warning with File (no line)\", true),", "-      new CompilerError(files[1], \"Test error with File (no line)\", false),", "-      new CompilerError(files[2], \"Test error with File (no line)\", false),", "-      new CompilerError(files[3], \"Test error with File (no line)\", false),", "-      new CompilerError(files[3], 3, 0, \"Test error with File\", false),", "-      new CompilerError(files[4], \"Test error with File (no line)\", false),", "-      new CompilerError(files[0], 2, 0, \"Test error with File\", false),", "-      new CompilerError(files[2], 2, 0, \"Test warning with File\", true),", "-      new CompilerError(files[0], 1, 0, \"Test error with File\", false) ", "+    errors = new DJError[] { ", "+      new DJError(files[0], \"Test error with File (no line)\", false),", "+      new DJError(files[4], 3, 0, \"Test error with File\", false),", "+      new DJError(files[2], \"Test warning with File (no line)\", true),", "+      new DJError(files[4], \"Test warning with File (no line)\", true),", "+      new DJError(files[2], 3, 0, \"Test warning with File\", true),", "+      new DJError(files[4], 1, 0, \"Test warning with File\", true),", "+      new DJError(files[1], \"Test warning with File (no line)\", true),", "+      new DJError(files[1], \"Test error with File (no line)\", false),", "+      new DJError(files[2], \"Test error with File (no line)\", false),", "+      new DJError(files[3], \"Test error with File (no line)\", false),", "+      new DJError(files[3], 3, 0, \"Test error with File\", false),", "+      new DJError(files[4], \"Test error with File (no line)\", false),", "+      new DJError(files[0], 2, 0, \"Test error with File\", false),", "+      new DJError(files[2], 2, 0, \"Test warning with File\", true),", "+      new DJError(files[0], 1, 0, \"Test error with File\", false) ", "-    CompilerError[] copy = new CompilerError[errors.length];", "+    DJError[] copy = new DJError[errors.length];"]}], "num": 8123}