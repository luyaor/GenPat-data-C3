{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9911cce497f79893b33a86d6d7ac7e9b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7726ad98c5c9d6698cdd7c5bdab19f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/Java5Class.java", "commitBeforeChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "commitAfterChange": "9ce155a1f3e34352032d821032cb2dc70024460f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   private static Type classAsType(Class<?> c)", "signatureAfterChange": "   private static Type classAsType(Class<?> c)", "diff": ["-    if (c.isPrimitive()) {", "-      if (c.equals(boolean.class)) { return TypeSystem.BOOLEAN; }", "-      else if (c.equals(int.class)) { return TypeSystem.INT; }", "-      else if (c.equals(double.class)) { return TypeSystem.DOUBLE; }", "-      else if (c.equals(char.class)) { return TypeSystem.CHAR; }", "-      else if (c.equals(void.class)) { return TypeSystem.VOID; }", "-      else if (c.equals(long.class)) { return TypeSystem.LONG; }", "-      else if (c.equals(byte.class)) { return TypeSystem.BYTE; }", "-      else if (c.equals(short.class)) { return TypeSystem.SHORT; }", "-      else if (c.equals(float.class)) { return TypeSystem.FLOAT; }", "-      else { throw new IllegalArgumentException(\"Unrecongized primitive: \" + c); }", "-    }", "+    if (c.isPrimitive()) { return SymbolUtil.typeOfPrimitiveClass(c); }", "-  }    ", "+  }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7b80806143beebe6a9f95f5700075af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/JavaClass.java", "commitBeforeChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "commitAfterChange": "9ce155a1f3e34352032d821032cb2dc70024460f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private static Type classAsType(Class<?> c)", "signatureAfterChange": "   private static Type classAsType(Class<?> c)", "diff": ["-    if (c.isPrimitive()) {", "-      if (c.equals(boolean.class)) { return TypeSystem.BOOLEAN; }", "-      else if (c.equals(int.class)) { return TypeSystem.INT; }", "-      else if (c.equals(double.class)) { return TypeSystem.DOUBLE; }", "-      else if (c.equals(char.class)) { return TypeSystem.CHAR; }", "-      else if (c.equals(void.class)) { return TypeSystem.VOID; }", "-      else if (c.equals(long.class)) { return TypeSystem.LONG; }", "-      else if (c.equals(byte.class)) { return TypeSystem.BYTE; }", "-      else if (c.equals(short.class)) { return TypeSystem.SHORT; }", "-      else if (c.equals(float.class)) { return TypeSystem.FLOAT; }", "-      else { throw new IllegalArgumentException(\"Unrecongized primitive: \" + c); }", "-    }", "+    if (c.isPrimitive()) { return SymbolUtil.typeOfPrimitiveClass(c); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f067505dd527bba0bc3ce9c071c9ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 40, "signatureBeforeChange": "   private SymbolData _getSymbolData_Primitive(String className)", "signatureAfterChange": "           public void execute()", "diff": ["-    */", "-  private SymbolData _getSymbolData_Primitive(String className) {", "-    if (className.equals(\"boolean\")) {", "-      return SymbolData.BOOLEAN_TYPE;", "-    }", "-    else if (className.equals(\"char\")) {", "-      return SymbolData.CHAR_TYPE;", "-    }", "-    else if (className.equals(\"byte\")) {", "-      return SymbolData.BYTE_TYPE;", "-    }", "-    else if (className.equals(\"short\")) {", "-      return SymbolData.SHORT_TYPE;", "-    }", "-    else if (className.equals(\"int\")) {", "-      return SymbolData.INT_TYPE;", "-    }", "-    else if (className.equals(\"long\")) {", "-      return SymbolData.LONG_TYPE;", "-    }", "-    else if (className.equals(\"float\")) {", "-      return SymbolData.FLOAT_TYPE;", "-    }", "-    else if (className.equals(\"double\")) {", "-      return SymbolData.DOUBLE_TYPE;", "-    }", "-    else if (className.equals(\"void\")) {", "-      return SymbolData.VOID_TYPE;", "-    }", "-    else if (className.equals(\"null\")) {", "-      return SymbolData.NULL_TYPE;", "-    }", "-    return null;", "-  }", "+        Command fixUp = new Command() {", "+          public void execute() { ", "+            SymbolData newSd = _identifyType(typeName, si, enclosingClassName);", "+            assert newSd != null && newSd != SymbolData.NOT_FOUND;  // TODO !!!: Expand to error message?", "+            varData[j].setType(newSd);", "+          }"]}], "num": 15331}