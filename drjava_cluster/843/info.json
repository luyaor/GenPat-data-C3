{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "960d54ef425d185d8f12eea3fa01a088", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d12a6256d88a6fbcf81f3859843acf3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "e48d5f3129b8001e5afe1a32af197a9281189fe3", "commitAfterChange": "7c30ebf6c2ad7a3fa703d87cd5aaa9a3fff06bee", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected void goToRegion()", "signatureAfterChange": "   protected void goToRegion()", "diff": ["-    Breakpoint r = getSelectedRegion();", "-    if (r != null) {", "-      _debugger.scrollToSource(r);", "+    ArrayList<Breakpoint> bps = getSelectedRegions();", "+    if (bps.size() == 1) {", "+      _debugger.scrollToSource(bps.get(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60215a9e0d90e8df9b96cc4f4b71a26f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "e48d5f3129b8001e5afe1a32af197a9281189fe3", "commitAfterChange": "7c30ebf6c2ad7a3fa703d87cd5aaa9a3fff06bee", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected void enableDisableBreakpoint()", "signatureAfterChange": "   protected void enableDisableBreakpoint()", "diff": ["-    final Breakpoint r = getSelectedRegion();", "-    if (r != null) {", "-      _model.getBreakpointManager().changeRegion(r, new Lambda<Object, Breakpoint>() {", "-        public Object apply(Breakpoint bp) {", "-          bp.setEnabled(!bp.isEnabled());", "-          return null;", "-        }", "-      });", "+    final ArrayList<Breakpoint> bps = getSelectedRegions();", "+    if (bps.size()>0) {", "+      final boolean newState = !bps.get(0).isEnabled();", "+      for (Breakpoint bp: bps) {", "+        _model.getBreakpointManager().changeRegion(bp, new Lambda<Object, Breakpoint>() {", "+          public Object apply(Breakpoint bp) {", "+            bp.setEnabled(newState);", "+            return null;", "+          }", "+        });", "+      }"]}], "num": 843}