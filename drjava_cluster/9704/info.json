{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "731fdd328cb1e826438159466314f7c3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ecefe40c5755290b2b499b25c5a026d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/modifier/StaticFieldModifier.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object prepare(Visitor v, Context ctx)", "signatureAfterChange": "   public Object prepare(Visitor<Object> v, Context ctx)", "diff": ["+   */", "+  public Object prepare(Visitor<Object> v, Context ctx) {", "+    try {", "+      return field.get(null);", "+    } catch (Exception e) {", "+      throw new CatchedExceptionError(e, node);", "-     */", "-    public Object prepare(Visitor v, Context ctx) {", "-\ttry {", "-\t    return field.get(null);", "-\t} catch (Exception e) {", "-            throw new CatchedExceptionError(e, node);", "-\t}", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38f0094c8c7b44f579eb89d2a8860d2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/modifier/SuperFieldModifier.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object prepare(Visitor v, Context ctx)", "signatureAfterChange": "   public Object prepare(Visitor<Object> v, Context ctx)", "diff": ["+   */", "+  public Object prepare(Visitor<Object> v, Context ctx) {", "+    try {", "+      return field.get(ctx.get(\"this\"));", "+    } catch (Exception e) {", "+      throw new CatchedExceptionError(e, node);", "-     */", "-    public Object prepare(Visitor v, Context ctx) {", "-\ttry {", "-\t    return field.get(ctx.get(\"this\"));", "-\t} catch (Exception e) {", "-            throw new CatchedExceptionError(e, node);", "-\t}", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3c9485c0ce797c54bc27d9c3efb7f28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/modifier/ObjectFieldModifier.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object prepare(Visitor v, Context ctx)", "signatureAfterChange": "   public Object prepare(Visitor<Object> v, Context ctx)", "diff": ["+   */", "+  public Object prepare(Visitor<Object> v, Context ctx) {", "+    fields.add(0, fieldObject);", "+    ", "+    fieldObject = node.getExpression().acceptVisitor(v);", "+    try {", "+      return field.get(fieldObject);", "+    } catch (Exception e) {", "+      throw new CatchedExceptionError(e, node);", "-     */", "-    public Object prepare(Visitor v, Context ctx) {", "-\tfields.add(0, fieldObject);", "-", "-\tfieldObject = node.getExpression().acceptVisitor(v);", "-\ttry {", "-\t    return field.get(fieldObject);", "-\t} catch (Exception e) {", "-            throw new CatchedExceptionError(e, node);", "-\t}", "+  }"]}], "num": 9704}