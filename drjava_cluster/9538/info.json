{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09e6c61744868ee2d6664b59816d36bc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bc74b45b85b121fd6df4dadca8c2d8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 476, "methodNumberAfterChange": 476, "signatureBeforeChange": "   void debuggerToggleBreakpoint()", "signatureAfterChange": "   void debuggerToggleBreakpoint()", "diff": ["-      debugger.toggleBreakpoint(doc, _currentDefPane.getCaretPosition(), _currentDefPane.getCurrentLine(), true);", "+      boolean breakpointSet = ", "+        debugger.toggleBreakpoint(doc, _currentDefPane.getCaretPosition(), _currentDefPane.getCurrentLine(), true);", "+      if (breakpointSet) createBookmarks();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d774f10efc644613eef53f17674209a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "commitAfterChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void removeRegion(final R region)", "signatureAfterChange": "   public void removeRegion(final R region)", "diff": ["-    docRegions.remove(region);  // remove the region from the manager", "+    final boolean wasRemoved = docRegions.remove(region);  // remove the region from the manager", "-    // notify", "-    Utilities.invokeLater(new Runnable() { public void run() {", "-      _lock.startRead();", "-      try { for (RegionManagerListener<R> l: _listeners) { l.regionRemoved(region); } } ", "-      finally { _lock.endRead(); }", "-    } });", "+    // only notify if the region was actually added", "+    if (wasRemoved) {", "+      // notify", "+      Utilities.invokeLater(new Runnable() { public void run() {", "+        _lock.startRead();", "+        try { for (RegionManagerListener<R> l: _listeners) { l.regionRemoved(region); } } ", "+        finally { _lock.endRead(); }", "+      } });", "+    }"]}], "num": 9538}