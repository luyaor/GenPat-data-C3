{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d16badcc5ce9b9edc00b85bc6c7b7057", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc33b31d0005d8f7bdb9406fad7868d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 414, "methodNumberAfterChange": 414, "signatureBeforeChange": "\r \r   public void forCatchBlock(CatchBlock that)", "signatureAfterChange": "    public void forCatchBlock(CatchBlock that)", "diff": ["-\r", "-  public void forCatchBlock(CatchBlock that) {\r", "-    forCatchBlockDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getException().visit(this);\r", "-    that.getBlock().visit(this);\r", "-    forCatchBlockOnly(that);\r", "-  }\r", "+", "+  public void forCatchBlock(CatchBlock that) {", "+    forCatchBlockDoFirst(that);", "+    if (prune(that)) return;", "+    that.getException().visit(this);", "+    that.getBlock().visit(this);", "+    forCatchBlockOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f11a79833cc9d062f72605b0a71d4ddb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 487, "methodNumberAfterChange": 487, "signatureBeforeChange": "\r \r   public void forArrayAccess(ArrayAccess that)", "signatureAfterChange": "    public void forArrayAccess(ArrayAccess that)", "diff": ["-\r", "-  public void forArrayAccess(ArrayAccess that) {\r", "-    forArrayAccessDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getArray().visit(this);\r", "-    that.getIndex().visit(this);\r", "-    forArrayAccessOnly(that);\r", "-  }\r", "+", "+  public void forArrayAccess(ArrayAccess that) {", "+    forArrayAccessDoFirst(that);", "+    if (prune(that)) return;", "+    that.getArray().visit(this);", "+    that.getIndex().visit(this);", "+    forArrayAccessOnly(that);", "+  }"]}], "num": 29433}