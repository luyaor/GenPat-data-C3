{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88be7eb18fdc1a392bcd3ced90aea176", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13a0c554ea8b8d06793799fd6adffb2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 250, "signatureBeforeChange": "   public void addToBrowserHistory()", "signatureAfterChange": "   public void addToBrowserHistory()", "diff": ["-  /** Add the current location to the browser history.  Only runs in event thread. */", "+  /** Add the current location to the browser history.  Aborts if not run in event thread. */", "-    assert EventQueue.isDispatchThread(); ", "+    if (! EventQueue.isDispatchThread()) return;", "-      doc.acquireReadLock();", "-        startPos = doc.createWrappedPosition(doc.getCaretPosition()).getOffset();", "-        endPos = doc.createWrappedPosition(doc.getLineEndPos(doc.getCaretPosition())).getOffset();", "+        startPos = doc.createPosition(doc.getCaretPosition()).getOffset();", "+        endPos = doc.createPosition(doc.getLineEndPos(doc.getCaretPosition())).getOffset();", "-      finally { doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3848ecfd44fdbc8e1d9ae44cac1e2558", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "6d55d86705248616cac5b324a7c528485ceb6104", "commitAfterChange": "d9483f6c228cd09f3431ad6b50a3d96bdaf83832", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 251, "signatureBeforeChange": "   public synchronized void addToBrowserHistory()", "signatureAfterChange": "   public void addToBrowserHistory()", "diff": ["-  /** Add the current location to the browser history. */", "-  public synchronized void addToBrowserHistory() {", "+  /** Add the current location to the browser history.  Only runs in event thread. */", "+  public void addToBrowserHistory() {", "+    assert EventQueue.isDispatchThread(); ", "-        startPos = doc.createPosition(doc.getCaretPosition()).getOffset();", "-        endPos = doc.createPosition(doc.getLineEndPos(doc.getCaretPosition())).getOffset();", "+        startPos = doc.createWrappedPosition(doc.getCaretPosition()).getOffset();", "+        endPos = doc.createWrappedPosition(doc.getLineEndPos(doc.getCaretPosition())).getOffset();"]}], "num": 5025}