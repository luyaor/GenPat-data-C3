{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fda3efa0d0adcd4cb210439f636013e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3917947a72d3bdb6ef8ef30f923b8a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   protected static void writeSafeEquals(String className, SymbolData sd, int baseIndent, String valueEqualsName,                                          MethodData[] accessors)", "signatureAfterChange": "   protected static void writeSafeEquals(String className, SymbolData sd, int baseIndent, String valueEqualsName,                                          MethodData[] accessors)", "diff": ["-      new VariableData(listName, new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[]{ \"private\", \"static\" }),", "-                       _llv.getQualifiedSymbolData(\"java.util.LinkedList\", SourceInfo.NO_INFO, false),", "+      new VariableData(listName, new ModifiersAndVisibility(SourceInfo.NONE, new String[]{ \"private\", \"static\" }),", "+                       _llv.getQualifiedSymbolData(\"java.util.LinkedList\", SourceInfo.NONE, false),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2c7d3e10339e6d8800dd110811e9803", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   protected static void writeSafeHashCode(String className, SymbolData sd, int baseIndent, boolean waitForVarDef,                                            String valueHashCodeName, MethodData[] accessors)", "signatureAfterChange": "   protected static void writeSafeHashCode(String className, SymbolData sd, int baseIndent, boolean waitForVarDef,                                            String valueHashCodeName, MethodData[] accessors)", "diff": ["-      new VariableData(listName, new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[]{ \"private\", \"static\" }),", "-                       _llv.getQualifiedSymbolData(\"java.util.LinkedList\", SourceInfo.NO_INFO, false),", "+      new VariableData(listName, new ModifiersAndVisibility(SourceInfo.NONE, new String[]{ \"private\", \"static\" }),", "+                       _llv.getQualifiedSymbolData(\"java.util.LinkedList\", SourceInfo.NONE, false),"]}], "num": 4410}