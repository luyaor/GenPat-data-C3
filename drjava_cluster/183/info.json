{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f28810adc52ac7d575d704b1c84edd8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0977b4f3e4a9f338342a1a985122897e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CompoundUndoManager.java", "commitBeforeChange": "8ccb5b5787c23c1ec149415240d859632e14b0eb", "commitAfterChange": "de735ebb692c41fde6f4d0600cc3fb90b66c892a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void endCompoundEdit(int key)", "signatureAfterChange": "   public void endCompoundEdit(int key)", "diff": ["-    if(_keys.get(0).intValue() == key) {", "-      CompoundEdit compoundEdit = _compoundEdits.remove(0);", "-      compoundEdit.end();", "-", "-      if (compoundEdit.canUndo()) {", "-        if (!_compoundEditInProgress()) {", "-          super.addEdit(compoundEdit);", "+    if(_keys.size() > 0) {", "+      if(_keys.get(0).intValue() == key) {", "+        CompoundEdit compoundEdit = _compoundEdits.remove(0);", "+        compoundEdit.end();", "+        ", "+        if (compoundEdit.canUndo()) {", "+          if (!_compoundEditInProgress()) {", "+            super.addEdit(compoundEdit);", "-          _notifyUndoHappened();", "+            _notifyUndoHappened();", "+          }", "+          else {", "+            _compoundEdits.get(0).addEdit(compoundEdit);", "+          }", "-        else {", "-          _compoundEdits.get(0).addEdit(compoundEdit);", "-        }", "-      }", "-      _keys.remove(0);", "+        _keys.remove(0);", "-    }", "-    else {", "-      throw new IllegalStateException(\"Improperly nested compound edits.\");", "+      }", "+      else {", "+        throw new IllegalStateException(\"Improperly nested compound edits.\");", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e7a79994b5ea599331a50260a8136c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 109, "signatureBeforeChange": "     public boolean isModifiedSinceSave()", "signatureAfterChange": "     public boolean isModifiedSinceSave()", "diff": ["-      return getDocument().isModifiedSinceSave();", "+      /* if the document is not in the cache, then we know that it's not modified, so", "+       * only check if the DDoc is in the cache */", "+      if(_cache.isDDocInCache(this)){", "+        return getDocument().isModifiedSinceSave();", "+      }else{", "+        return false;", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac2d5fdeb5dcc736a62a5099ebc970e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d012414100e088dfd0a2ea6e642cc05f11fbf32b", "commitAfterChange": "762f9487498790edfa8d7b58c3d83cb6592af447", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": "   private void _updateDefScrollRowHeader()", "signatureAfterChange": "   private void _updateDefScrollRowHeader()", "diff": ["-    ", "-    boolean ruleEnabled = DrJava.CONFIG.getSetting(LINEENUM_ENABLED).booleanValue();", "-    ", "-    Iterator scrollPanes = _defScrollPanes.values().iterator();", "-    while (scrollPanes.hasNext()) {  ", "-      JScrollPane scroll = (JScrollPane) scrollPanes.next();", "-      if (scroll != null) {", "-        DefinitionsPane pane = (DefinitionsPane) scroll.getViewport().getView();", "-        if (scroll.getRowHeader() == null || scroll.getRowHeader().getView() == null) {", "-          if (ruleEnabled) {", "-            scroll.setRowHeaderView(new Rule(pane));", "+    if (CodeStatus.DEVELOPMENT) {  // no line enumeration in stable", "+      boolean ruleEnabled = DrJava.CONFIG.getSetting(LINEENUM_ENABLED).booleanValue();", "+      ", "+      Iterator scrollPanes = _defScrollPanes.values().iterator();", "+      while (scrollPanes.hasNext()) {  ", "+        JScrollPane scroll = (JScrollPane) scrollPanes.next();", "+        if (scroll != null) {", "+          DefinitionsPane pane = (DefinitionsPane) scroll.getViewport().getView();", "+          if (scroll.getRowHeader() == null || scroll.getRowHeader().getView() == null) {", "+            if (ruleEnabled) {", "+              scroll.setRowHeaderView(new LineEnumRule(pane));", "+            }", "-        }", "-        else {", "-          if (!ruleEnabled) {", "-            scroll.setRowHeaderView(null);", "+          else {", "+            if (!ruleEnabled) {", "+              scroll.setRowHeaderView(null);", "+            }", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9dce26ebbae6b76f2168ff120959d8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "3bb525675df17c5cd50695a90ffe7d8bb2eb200c", "commitAfterChange": "cb572b3617cad32fd1949d7534520be983606d43", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 229, "signatureBeforeChange": "      public void resetUndoManager()", "signatureAfterChange": "      public void resetUndoManager()", "diff": ["-      getDocument().resetUndoManager();", "+      // if it's not in the cache, the undo manager will be ", "+      // reset when it's reconstructed", "+      if(_cache.isDDocInCache(this)){", "+        getDocument().resetUndoManager();", "+      }"]}], "num": 183}