{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "904888a2aeaffe77573fe6fc09e8f7a5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38591cd3294938a0139d1a182bf2685e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/GenericTreeTest.java", "commitBeforeChange": "480277542c22ee726328704403a3f512c72cbc44", "commitAfterChange": "a7174554906b671f62d483cb1503079ad4cf43ea", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public void xtestInterpretPolyConstructors()", "signatureAfterChange": "     public void testInterpretPolyConstructors()", "diff": ["-    public void xtestInterpretPolyConstructors(){", "+    public void testInterpretPolyConstructors(){", "-        \"  public <String> C(String s){\\n\"+ //or <String[]>", "-        \"      str = s;\\n\"+", "+        \"  public <T extends String> C(T s){\\n\"+ ", "+        \"    str = s;\\n\"+", "+        \"  }\\n\"+", "+        \"  public String getStr(){\\n\"+", "+        \"    return str;\\n\"+", "+        \"  }\\n\"+", "+        \"}\\n\"+", "+        \"new C(\\\"Str1\\\").getStr();\\n\";", "+    ", "+      assertEquals(\"Str1\", interpret(testString));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7116b5c322f0e2b79b8bfd6854c3290d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TigerTest.java", "commitBeforeChange": "640d94c961319de37237c21816ee469b313568b5", "commitAfterChange": "dbdd53c636f6618ffbae999ad0ee607bc3e2b6a3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testStaticImportOfMethods()", "signatureAfterChange": "   public void testStaticImportOfMethods()", "diff": ["+  ", "+    testString = ", "+      \"package LL;\\n\"+", "+      \"import static java.lang.Double.*;\\n\"+", "+      \"public class MM {\\n\"+", "+      \"  public static double parseDouble(String s) {\\n\"+", "+      \"    return 0.0; \\n\"+", "+      \"  }\\n\"+", "+      \"  public static double m() {\\n\"+", "+      \"    return parseDouble(\\\"1.5\\\");\\n\"+", "+      \"  }\\n\"+", "+      \"}\\n\"+", "+      \"parseDouble(\\\"1.5\\\");\\n\";", "+    assertEquals(1.5,interpret(testString));", "+    testString = \"MM.m();\";", "+    assertEquals(\"Member of class should take precedence over staticly imported member\",0.0,interpret(testString));", "+    "]}], "num": 9167}