{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2b05a2976d64b95ae40057e8eada7e9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "360def5d7a5e01855302714b2f5b3b54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list)", "signatureAfterChange": "     public ConsList<? extends T> forNonempty(T first, ConsList<? extends T> rest)", "diff": ["-    public ConsList<? extends T> forEmpty(ConsList.Empty<? extends T> list) { return _rest; }", "-    public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list) {", "-      return ConsList.cons(list.first(), list.rest().apply(this));", "+    public ConsList<? extends T> forEmpty() { return _toAppend; }", "+    public ConsList<? extends T> forNonempty(T first, ConsList<? extends T> rest) {", "+      return ConsList.cons(first, rest.apply(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a393dbba314dee882a0b56c573c89d4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "1902ca9428bb3bc3eae3550e478cc24cc107999e", "commitAfterChange": "c171c7d908dc3eacd710969c309add95e9a47bb0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 29, "signatureBeforeChange": "       public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends S> list)", "signatureAfterChange": "     public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends S> list)", "diff": ["-      public ConsList<? extends T> forEmpty(ConsList.Empty<? extends S> list) { return ConsList.empty(); }", "-      public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends S> list) {", "-        return ConsList.cons(lambda.value(list.first()), list.rest().apply(this));", "-      }", "+    public ConsList<? extends T> forEmpty(ConsList.Empty<? extends S> list) { return ConsList.empty(); }", "+    public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends S> list) {", "+      return ConsList.cons(_lambda.value(list.first()), list.rest().apply(this));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b335137ca596e12c4ce988604eabae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends S> list)", "signatureAfterChange": "     public ConsList<T> forNonempty(S first, ConsList<? extends S> rest)", "diff": ["-    public ConsList<? extends T> forEmpty(ConsList.Empty<? extends S> list) { return ConsList.empty(); }", "-    public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends S> list) {", "-      return ConsList.cons(_lambda.value(list.first()), list.rest().apply(this));", "+    public ConsList<T> forEmpty() { return ConsList.empty(); }", "+    public ConsList<T> forNonempty(S first, ConsList<? extends S> rest) {", "+      return ConsList.cons(_lambda.value(first), rest.apply(this));"]}], "num": 26724}