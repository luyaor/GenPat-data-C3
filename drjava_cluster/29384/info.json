{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "688c766048dfb891d12b7e9cc56d8dd4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c433dcb0cafe8e9de284ff03b1844a77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public void testLoadHistoryWithAndWithoutSemicolons() throws IOException, EditDocumentException,      InterruptedException", "signatureAfterChange": "   public void testLoadHistoryWithAndWithoutSemicolons() throws IOException, EditDocumentException,      InterruptedException", "diff": ["-    InteractionListener listener = new InteractionListener();", "+    final InteractionListener listener = new InteractionListener();", "-    IOUtil.writeStringToFile(f1,s1+'\\n'+s2+'\\n');", "-    IOUtil.writeStringToFile(f2,s3+'\\n'+s4+'\\n');", "+    IOUtil.writeStringToFile(f1, s1 + '\\n' + s2 + '\\n');", "+    IOUtil.writeStringToFile(f2, s3 + '\\n' + s4 + '\\n');", "-    _model.loadHistory(fs1);", "+    safeLoadHistory(fs1);", "-    _model.loadHistory(fs2);", "+    safeLoadHistory(fs2);", "-    ", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1bb1b72ba1fb73a9175b9b6e62316dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "7b4a527a2fd4010c88a2ef6ea8f158547b322968", "commitAfterChange": "7b22fbe0160e9fdc451caeb623e46b870b03ccd3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testCompileUnsavedButSaveWhenAsked()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileUnsavedButSaveWhenAsked()     throws BadLocationException, IOException", "diff": ["-    assertCompileErrorsPresent(false);", "-    listener.assertCompileStartCount(1);", "-    listener.assertCompileEndCount(1);", "-    listener.assertInteractionsResetCount(1);", "-    listener.assertConsoleResetCount(1);", "+    assertCompileErrorsPresent(_name(), false);", "+    listener.checkCompileOccurred();"]}], "num": 29384}