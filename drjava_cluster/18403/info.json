{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5926aa98f17c23f8d53db7453980d19", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9314ed4432cc7c36d5364f8cf372342b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/KeyBindingManager.java", "commitBeforeChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "commitAfterChange": "ba6205cad42ae00df3c37c5cbd4625770848df66", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private boolean shouldUpdate(KeyStroke ks, Action a)", "signatureAfterChange": "   private boolean shouldUpdate(KeyStroke ks, Action a)", "diff": ["-      //KeyStrokeData data = (KeyStrokeData)_actionToDataMap.get(a);", "+      //KeyStrokeData data = _actionToDataMap.get(a);", "-    else if (((KeyStrokeData)_keyToDataMap.get(ks)).getAction().equals(a)) {", "+    else if (_keyToDataMap.get(ks).getAction().equals(a)) {", "-        KeyStrokeData conflictKSD = (KeyStrokeData)_keyToDataMap.get(ks);", "+        KeyStrokeData conflictKSD = _keyToDataMap.get(ks);", "-        KeyStrokeData newKSD = (KeyStrokeData)_actionToDataMap.get(a);", "+        KeyStrokeData newKSD = _actionToDataMap.get(a);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48075ed9c5333ab1f82fe37eaf41676", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public Class visit(InnerAllocation node)", "signatureAfterChange": "   public Class visit(InnerAllocation node)", "diff": ["-    Class ec = (Class)node.getExpression().acceptVisitor(this);", "-    ", "+    Class ec = node.getExpression().acceptVisitor(this);", "+", "-    Class c = (Class)type.acceptVisitor(this);", "+    Class c = type.acceptVisitor(this);", "-    ", "+", "-    ", "+", "-        ", "+", "-          cargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "+          cargs[i++] = ((Node)it.next()).acceptVisitor(this);", "-    ", "+", "-    ", "+"]}], "num": 18403}