{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea997eff0824f5b92dc05b6e4948d12d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72617162d9eded8e264ea958d04c22db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r   public void forVariableDeclarationOnly(VariableDeclaration that)", "signatureAfterChange": "   public void forVariableDeclarationOnly(VariableDeclaration that)", "diff": ["-   * two fields have the same names */\r", "-  public void forVariableDeclarationOnly(VariableDeclaration that) {\r", "-    VariableData[] vds = _variableDeclaration2VariableData(that, _symbolData);\r", "-    //make sure that none of the static fields are uninitialized:\r", "-    LinkedList<VariableData> vdsList = new LinkedList<VariableData>();\r", "-    for (int i = 0; i<vds.length; i++) {\r", "-      if (vds[i].hasModifier(\"static\") && (that.getDeclarators()[i] instanceof UninitializedVariableDeclarator)) {\r", "-        _addAndIgnoreError(\"All static fields must be initialized\", that);\r", "-      }\r", "-      else if (!vds[i].hasModifier(\"static\") && (that.getDeclarators()[i] instanceof InitializedVariableDeclarator)) {\r", "-        _addAndIgnoreError(\"Only static fields may be initialized outside of a constructor at the Intermediate level\", that);\r", "-      }\r", "-      \r", "-      else {\r", "-        vdsList.addLast(vds[i]);\r", "-      }\r", "-    }\r", "-    if(!_symbolData.addFinalVars(vdsList.toArray(new VariableData[vdsList.size()]))) {\r", "-      _addAndIgnoreError(\"You cannot have two fields with the same name.  Either you already have a field by that name in this class, or one of your superclasses or interfaces has a field by that name\", that);\r", "-    }\r", "-  }\r", "+   * two fields have the same names */", "+  public void forVariableDeclarationOnly(VariableDeclaration that) {", "+    VariableData[] vds = _variableDeclaration2VariableData(that, _classData);", "+    //make sure that none of the static fields are uninitialized:", "+    LinkedList<VariableData> vdsList = new LinkedList<VariableData>();", "+    for (int i = 0; i<vds.length; i++) {", "+      if (vds[i].hasModifier(\"static\") && (that.getDeclarators()[i] instanceof UninitializedVariableDeclarator)) {", "+        _addAndIgnoreError(\"All static fields must be initialized\", that);", "+      }", "+      else if (!vds[i].hasModifier(\"static\") && (that.getDeclarators()[i] instanceof InitializedVariableDeclarator)) {", "+        _addAndIgnoreError(\"Only static fields may be initialized outside of a constructor at the Intermediate level\", that);", "+      }", "+      ", "+      else {", "+        vdsList.addLast(vds[i]);", "+      }", "+    }", "+    if(!_classData.addFinalVars(vdsList.toArray(new VariableData[vdsList.size()]))) {", "+      _addAndIgnoreError(\"You cannot have two fields with the same name.  Either you already have a field by that name in this class, or one of your superclasses or interfaces has a field by that name\", that);", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aeee364882f59a97e2f66b7cb0ab435", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "signatureAfterChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "diff": ["-    //make sure that none of the static fields are uninitialized:", "+    // make sure that every non-static field is private and no static field are uninitialized:", "-    for (int i = 0; i<vds.length; i++) {", "-      if (vds[i].hasModifier(\"static\") && (that.getDeclarators()[i] instanceof UninitializedVariableDeclarator)) {", "+    for (int i = 0; i < vds.length; i++) {", "+      if (! vds[i].isStatic()) vds[i].setPrivate();", "+      else if (that.getDeclarators()[i] instanceof UninitializedVariableDeclarator) {  ", "-      else if (!vds[i].hasModifier(\"static\") && (that.getDeclarators()[i] instanceof InitializedVariableDeclarator)) {", "-        _addAndIgnoreError(\"Only static fields may be initialized outside of a constructor at the Intermediate level\", that);", "-      }", "+//      else if (!vds[i].hasModifier(\"static\") && (that.getDeclarators()[i] instanceof InitializedVariableDeclarator)) {", "+//        _addAndIgnoreError(\"Only static fields may be initialized outside of a constructor at the Intermediate level\", that);", "+//      }", "-      else {", "-        vdsList.addLast(vds[i]);", "-      }", "+      vdsList.addLast(vds[i]);", "-    if(!_classData.addFinalVars(vdsList.toArray(new VariableData[vdsList.size()]))) {", "+//    System.err.println(\"Constructed vdslist = \" + vdsList);", "+    if (! _classData.addFinalVars(vdsList.toArray(new VariableData[vdsList.size()]))) {", "+//      System.err.println(\"Duplicate variable declaration found\");"]}], "num": 9236}