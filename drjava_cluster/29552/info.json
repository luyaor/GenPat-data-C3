{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6bd38f58b19e5a92bd2a5d34e19d3b0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "260e9b2ebd2834900fe4d8f1dcb80856", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 133, "signatureBeforeChange": "              public Iterator<Character> iterator()", "signatureAfterChange": "     public Iterator<Character> iterator()", "diff": ["+    public boolean isFixed() { return _fixed; }", "+    public Iterator<Character> iterator() {", "+      return new IndexedIterator<Character>() {", "+        protected int size() { return _s.length(); }", "+        protected Character get(int i) { return _s.charAt(i); }", "+      };", "+    }", "-      ", "-      public Iterator<Character> iterator() {", "-        return new IndexedIterator<Character>() {", "-          protected int size() { return sequence.length(); }", "-          protected Character get(int i) { return sequence.charAt(i); }", "-        };", "-      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e779a936c4485e0692a904a79fe79cea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/HashRelation.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public Iterator<Pair<T1, T2>> iterator()", "signatureAfterChange": "      public Iterator<Pair<T1, T2>> iterator()", "diff": ["-  ", "-  public Iterator<Pair<T1, T2>> iterator() {", "-    return new Iterator<Pair<T1, T2>>() {", "-      private final Iterator<Pair<T1, T2>> _iter = _pairs.iterator();", "-      private Pair<T1, T2> _last;", "-      public boolean hasNext() { return _iter.hasNext(); }", "-      public Pair<T1, T2> next() { _last = _iter.next(); return _last; }", "-      public void remove() {", "-        _iter.remove(); // if this succeeds, _last is valid", "-        removeFromIndex(_last.first(), _last.second());", "-      }", "-  }", "+  ", "+  public Iterator<Pair<T1, T2>> iterator() { return _firstIndex.iterator(); }"]}], "num": 29552}