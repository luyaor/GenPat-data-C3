{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fa289e4e3cc6c1dc3f75d9772b87fb0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c6aa3ec7a92a3a8c7f2173c0256ae15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "303ddb2c47275a1e2c25f273f6ed234a39d50962", "commitAfterChange": "05170b9ac5bef61612128757c005ac85c724ec32", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "signatureAfterChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "diff": ["+          ", "+          ", "+          INavigatorItem idoc = _documentsRepos.getKey(getODDForDocument(_doc));", "+//          _documentNavigator.removeDocument(idoc);", "+//          _documentNavigator.addDocument(idoc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2339c192bbdde4f37a966dd6a0c4e5c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "50fc18100c630eff6fad096902bce85c20d6d172", "commitAfterChange": "1ecc95c0c60f2dabd3e5d52eee223ff564461e48", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "   private void _updateErrorListeners()", "signatureAfterChange": "   private void _updateErrorListeners()", "diff": ["+", "+        JUnitErrorCaretListener junitListener = pane.getJUnitErrorCaretListener();", "+        junitListener.resetErrorModel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "608e5209c6f4caac1a71e67612820a86", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk7/edu/rice/cs/drjava/model/compiler/Javac170Compiler.java", "commitBeforeChange": "844c5b5a76f593d88002386f7e1c5749ae206027", "commitAfterChange": "ac40c3972879cd0ae692485b72f8c40bbd1968d9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r   \r   public boolean isAvailable()", "signatureAfterChange": "\r   \r   public boolean isAvailable()", "diff": ["-      return true;\r", "+      \r", "+      // Make sure the compiler returned is not null; this can happen if we have the JRE's library, not the JDK's.\r", "+      JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();\r", "+      \r", "+      return (compiler != null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9953176f15cc18ea5e39af66642cdde", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "5944dd2b12a74ebad6e3549d813d2dd557403c7e", "commitAfterChange": "53735c967d2add6a16ab5776bac9111426f41996", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   protected String interpret(String input) throws DocumentAdapterException", "signatureAfterChange": "   protected String interpret(String input) throws DocumentAdapterException", "diff": ["-    // skip 1 for newline", "-    final int resultsStartLocation = interactionsDoc.getDocLength() + 1;", "+    // skip the right length for the newline", "+    int newLineLen = System.getProperty(\"line.separator\").length();", "+    final int resultsStartLocation = interactionsDoc.getDocLength() + newLineLen;", "-    // skip 1 for newline", "-    final int resultsEndLocation = interactionsDoc.getDocLength() - 1 -", "+    // skip the right length for the newline", "+    final int resultsEndLocation = interactionsDoc.getDocLength() - newLineLen -"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecc9ab76b1731656f77d787caa26bf30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b5c5207541d6b51d1a0355eaf7cbf64875cccd1f", "commitAfterChange": "9d3a5a43d320b76bd0a861fd1445a502e23c0797", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 74, "signatureBeforeChange": "          public void updateLocation()", "signatureAfterChange": "          public void updateLocation()", "diff": ["-      currLoc.setText(doc.getCurrentLine() + \":\" + doc.getCurrentCol());", "+      DefinitionsDocument doc = _model.getActiveDocument().getDocument();", "+      _currLocationField.setText(doc.getCurrentLine() + ", "+                                 \":\" + doc.getCurrentCol());"]}], "num": 20271}