{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "028c329353b897a57f610bca809f4338", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "387d0f6ff4368e66aedf9d56e93c1201", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "d80369d9c3076ba83762fd67d26b865a3f105bab", "commitAfterChange": "bdd7aa6c0bcfa675b71488b11d63dfa5dd20cdb9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "signatureAfterChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "diff": ["-    List<String> compilerNames = new ArrayList<String>();", "-    ", "-    String dCompName = DrJava.getConfig().getSetting(OptionConstants.COMPILER_DEFAULT);", "+    ArrayList<String> compilerNames = new ArrayList<String>();", "-    if (_compilers.size() > 0) { ", "-      if(dCompName!=\"\" && compilerNames.contains(dCompName)) {", "+    ", "+    OptionConstants.COMPILER_PREFERENCE_CONTROL.setList(compilerNames); //populates the compiler list for preference panel", "+    ", "+    String dCompName = DrJava.getConfig().getSetting(OptionConstants.DEFAULT_COMPILER_PREFERENCE);", "+    ", "+    if (_compilers.size() > 0) {", "+      if(!dCompName.equals(OptionConstants.COMPILER_PREFERENCE_CONTROL.NO_PREFERENCE) && compilerNames.contains(dCompName))", "-      }", "-      else {", "+      else ", "-        DrJava.getConfig().setSetting(OptionConstants.COMPILER_DEFAULT, _active.getName());", "-      }", "-    else { ", "-      _active = NoCompilerAvailable.ONLY; ", "-    }", "+    else", "+      _active = NoCompilerAvailable.ONLY;", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bef1fc8d273156a63cb5e8a149537bdc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "bfba802081a2eff3b15a8f59c15cce454daf2425", "commitAfterChange": "f3f02042066599d1dcd5a3abe554d8c7a4055945", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "signatureAfterChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "diff": ["+    ", "-    for (CompilerInterface i : compilers) { _compilers.add(i); }", "-    if (_compilers.size() > 0) { _active = _compilers.get(0); }", "-    else { _active = NoCompilerAvailable.ONLY; }", "+    List<String> compilerNames = new ArrayList<String>();", "+    ", "+    String dCompName = DrJava.getConfig().getSetting(OptionConstants.COMPILER_DEFAULT);", "+    ", "+    for (CompilerInterface i : compilers) { _compilers.add(i); compilerNames.add(i.getName());}", "+    if (_compilers.size() > 0) { ", "+      if(dCompName!=\"\" && compilerNames.contains(dCompName)) {", "+        _active = _compilers.get(compilerNames.indexOf(dCompName));", "+      }", "+      else {", "+        _active = _compilers.get(0);", "+        DrJava.getConfig().setSetting(OptionConstants.COMPILER_DEFAULT, _active.getName());", "+      }", "+    }", "+    else { ", "+      _active = NoCompilerAvailable.ONLY; ", "+    }"]}], "num": 20856}