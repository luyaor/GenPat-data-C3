{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1298396152a09fc3c309ee768734e12", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36c9c9ea3fa1551ebfd540ab542c1579", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "55ffd5d461fa009444744f2527631191c6f9decc", "commitAfterChange": "0fed03351fa05790a48229380b62c5e4589b0332", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": "     public File getFile()", "signatureAfterChange": "          public FileDisplay getFileDisplay()", "diff": ["+    ", "+    public FileDisplay getFileDisplay() {", "+      String text = getText();", "+      if (_originalDisplay == null)", "+        return null;", "+      else if (text == null || text.equals(\"\"))", "+        return _originalDisplay;", "+      else", "+        return _fdm.makeFileDisplay(_originalDisplay.getParentFile(), text);", "+    }", "-    }", "-    public File getFile() {", "-      if (_parent == null)", "-        return null;", "-      else", "-        return new File(_parent, getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fffa70533f1fb2d0d3edc8a1d260c67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "bdd7aa6c0bcfa675b71488b11d63dfa5dd20cdb9", "commitAfterChange": "f5dd2dee51c1ad8dcca1f4a88c8821b0f45f645c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   static boolean handleCommandLineArgs(String[] args)", "signatureAfterChange": "   static boolean handleCommandLineArgs(String[] args)", "diff": ["-        _config = _initConfig();  // read specified .djrava file into _config", "+      else if (arg.equals(\"-jll\")) {", "+        String[] argsForJLL = new String[args.length-argIndex];", "+        System.arraycopy(args, argIndex, argsForJLL, 0, argsForJLL.length);", "+        edu.rice.cs.javalanglevels.LanguageLevelConverter.main(argsForJLL);", "+        System.exit(0);", "+      }", "+      ", "+    ", "+    _config = _initConfig();  // read specified .djrava file into _config"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd0f425b13ad0b1c5017df0912e0684a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "2de653a0c121f420695cbc85c38fd5c41317e81a", "commitAfterChange": "172b2d02551aa349912ace36cce3fe3011ec0453", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": "   private FindResult _findNextInAllDocs(AbstractDocumentInterface docToSearch, int start, int end) throws BadLocationException", "signatureAfterChange": "   private FindResult _findNextInAllDocs(AbstractDocumentInterface docToSearch, int start, int end) throws BadLocationException", "diff": ["-    ", "+    _checkAllDocsWrapped = true;    ", "+      if (docToSearch == _firstDoc) {", "+        _allDocsWrapped = true;", "+        _checkAllDocsWrapped = false;", "+      }", "+      ", "-      ", "+            ", "-        return new FindResult(docToSearch, foundOffset, false);", "+        return new FindResult(docToSearch, foundOffset, false, _allDocsWrapped);", "-    return new FindResult(docToSearch, -1, false);", "+    return new FindResult(docToSearch, -1, false, _allDocsWrapped);"]}], "num": 25015}