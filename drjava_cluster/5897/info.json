{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a58ec4aa5b8dd1d9ec0eeb8eaeceae0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f2ef88f04f4c7cb96dd096924644fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 492, "methodNumberAfterChange": 492, "signatureBeforeChange": "\r \r   public void forParenthesizedExpressionList(ParenthesizedExpressionList that)", "signatureAfterChange": "    public void forParenthesizedExpressionList(ParenthesizedExpressionList that)", "diff": ["-\r", "-  public void forParenthesizedExpressionList(ParenthesizedExpressionList that) {\r", "-    forParenthesizedExpressionListDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    for (int i = 0; i < that.getExpressions().length; i++) that.getExpressions()[i].visit(this);\r", "-    forParenthesizedExpressionListOnly(that);\r", "-  }\r", "+", "+  public void forParenthesizedExpressionList(ParenthesizedExpressionList that) {", "+    forParenthesizedExpressionListDoFirst(that);", "+    if (prune(that)) return;", "+    for (int i = 0; i < that.getExpressions().length; i++) that.getExpressions()[i].visit(this);", "+    forParenthesizedExpressionListOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83dc29eb13e68e1cc9a8545ec7329208", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 493, "methodNumberAfterChange": 493, "signatureBeforeChange": "\r \r   public void forUnparenthesizedExpressionList(UnparenthesizedExpressionList that)", "signatureAfterChange": "    public void forUnparenthesizedExpressionList(UnparenthesizedExpressionList that)", "diff": ["-\r", "-  public void forUnparenthesizedExpressionList(UnparenthesizedExpressionList that) {\r", "-    forUnparenthesizedExpressionListDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    for (int i = 0; i < that.getExpressions().length; i++) that.getExpressions()[i].visit(this);\r", "-    forUnparenthesizedExpressionListOnly(that);\r", "-  }\r", "+", "+  public void forUnparenthesizedExpressionList(UnparenthesizedExpressionList that) {", "+    forUnparenthesizedExpressionListDoFirst(that);", "+    if (prune(that)) return;", "+    for (int i = 0; i < that.getExpressions().length; i++) that.getExpressions()[i].visit(this);", "+    forUnparenthesizedExpressionListOnly(that);", "+  }"]}], "num": 5897}