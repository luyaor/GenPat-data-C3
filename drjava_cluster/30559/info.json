{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6241ac5866880f7b6602c782db839b91", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12289cc250451c507f60f6de19b1cc95", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/JVMUtilities.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public static String createMethodDescriptor(String rt, String[] pts)", "signatureAfterChange": "   public static String createMethodDescriptor(String rt, String[] pt)", "diff": ["-  public static String createMethodDescriptor(String rt, String[] pts) {", "-    if (pts != null) {", "-      StringBuffer result = new StringBuffer(\"(\");", "-      for (String pt: pts) result.append(pt);", "-      return result.append(')').append(rt).toString();  // Note: append operation modifies the receiver!", "-    } ", "-    return rt;", "+   */", "+  public static String createMethodDescriptor(String rt, String[] pt) {", "+    if (pt != null) {", "+      String result = \"(\";", "+      for (int i = 0; i < pt.length; i++) {", "+        result += pt[i];", "+      }", "+      return result + \")\" + rt;", "+    } else {", "+      return rt;", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ee54c9dfc3c6dafc17a2a25f080b6c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionBracePlus.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["+    int dist = info.distToLineEnclosingBrace();", "-    if (info.lineEnclosingBraceType().equals(\"\") || info.distToLineEnclosingBrace() < 0) {", "+    if (info.lineEnclosingBraceType().equals(\"\") || dist < 0) {  // Should use interned Strings here", "-    int bracePos = startLine - info.distToLineEnclosingBrace();", "+    int bracePos = startLine - dist;", "-    if (info.distToEnclosingBraceStart() >= 0) {", "-      braceNewline = startLine - info.distToEnclosingBraceStart();", "-    }", "+    int distStart = info.distToEnclosingBraceStart();", "+    if (distStart > 0) braceNewline = startLine - distStart;", "-    final StringBuilder tab = new StringBuilder(_suffix.length() + braceLen);", "-    for (int i=0; i < braceLen; i++) {", "-      tab.append(\" \");", "-    }", "-    tab.append(_suffix);", "+    final int tab = _suffixCt + braceLen;", "-    doc.setTab(tab.toString(), here);", "+    doc.setTab(tab, here);"]}], "num": 30559}