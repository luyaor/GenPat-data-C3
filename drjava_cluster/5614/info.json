{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83ff8eea961dee9657c64d6aea9feb93", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67107f24db8c6048a64512b175bcb30a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/PreviewFrame.java", "commitBeforeChange": "8a3aaf6e3fe6fafb27249a8ad4b2c013ef4ae05a", "commitAfterChange": "102797244429ae58868d0037b49467f5a00bbd6a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void windowActivated(WindowEvent ev)", "signatureAfterChange": "     private JSpinnerChanger(Class spinnerClass, JComponent spinnerObj)        throws Exception", "diff": ["+    private final Object[] args = new Object[1];", "+    private JSpinnerChanger(Class spinnerClass, JComponent spinnerObj) ", "+      throws Exception {", "+      spinner = spinnerObj;", "+      setValueMethod = spinnerClass.getMethod(\"setValue\", new Class[] {", "+        Object.class", "+      });", "+    }", "-  private WindowListener _windowCloseListener = new WindowListener() {", "-    public void windowActivated(WindowEvent ev) {}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afac7716905709401e40c0ed40654ee0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 113, "signatureBeforeChange": "       public U value(S arg)", "signatureAfterChange": "     public U value(S arg)", "diff": ["-    return new Lambda<S, U>() {", "-      public U value(S arg) { return l2.value(l1.value(arg)); }", "+    }", "+    public U value(S arg) { return _l2.value(_l1.value(arg)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f472d654ac964ba65979445e3f9b0f39", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "dba5d2158724820f410d4efff37289045b3aca4c", "commitAfterChange": "6db2338d4c58e83974c8e6232ba8e48286d65b5e", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 41, "signatureBeforeChange": "       public Process value()", "signatureAfterChange": "   public static Remote exportInProcess(Thunk<? extends Remote> factory)       throws InterruptedException, InvocationTargetException, IOException", "diff": ["-    ProcessController<R> controller = new ProcessController<R>(task, new LazyThunk<Process>(new Thunk<Process>() {", "-      public Process value() {", "-        try { return runJavaProcess(TaskProcess.class.getName(), IterUtil.<String>empty(), workingDir); }", "-        catch (IOException e) { throw new WrappedException(e); }", "-      }", "+  public static Remote exportInProcess(Thunk<? extends Remote> factory)", "+      throws InterruptedException, InvocationTargetException, IOException {", "+    return exportInProcess(factory, JVMBuilder.DEFAULT);"]}], "num": 5614}