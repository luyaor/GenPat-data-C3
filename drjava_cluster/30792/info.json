{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf404a741494043b8cd2d871c75b668e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df336153891481f9e7f2948314cc782", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "20a2512e394be5865ddd8dc1ebd648c5dfb08d0c", "commitAfterChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void setUp()", "signatureAfterChange": "   protected void setUp()", "diff": ["-    frm = new FindReplaceMachine();", "+    docPrev = new PlainDocument();", "+    docNext = new PlainDocument();", "+    frm = new FindReplaceMachine(new DocumentIterator() {", "+      public Document getPrevDocument(Document d) {", "+        if (d == doc) {", "+          return docPrev;", "+        }", "+        else if (d == docPrev) {", "+          return docNext;", "+        }", "+        else {", "+          return doc;", "+        }", "+      }", "+      public Document getNextDocument(Document d) {", "+        if (d == doc) {", "+          return docNext;", "+        }", "+        else if (d == docPrev) {", "+          return doc;", "+        }", "+        else {", "+          return docPrev;", "+        }", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97594cd35f5a4d4584c382a739c46572", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected void setUp()", "signatureAfterChange": "   protected void setUp()", "diff": ["-    doc = new PlainDocument();", "-    docPrev = new PlainDocument();", "-    docNext = new PlainDocument();", "-    frm = new FindReplaceMachine(new DocumentIterator() {", "+    _doc = new PlainDocument();", "+    _docPrev = new PlainDocument();", "+    _docNext = new PlainDocument();", "+    _frm = new FindReplaceMachine(new DocumentIterator() {", "-        if (d == doc) {", "-          return docPrev;", "+        if (d == _doc) {", "+          return _docPrev;", "-        else if (d == docPrev) {", "-          return docNext;", "+        else if (d == _docPrev) {", "+          return _docNext;", "-          return doc;", "+          return _doc;", "+", "-        if (d == doc) {", "-          return docNext;", "+        if (d == _doc) {", "+          return _docNext;", "-        else if (d == docPrev) {", "-          return doc;", "+        else if (d == _docPrev) {", "+          return _doc;", "-          return docPrev;", "+          return _docPrev;", "-    frm.setDocument(doc);", "+    _frm.setDocument(_doc);"]}], "num": 30792}