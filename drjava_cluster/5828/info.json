{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b276f4534e64616ea42f2c848f150cd3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ceab2afd092130fef7f771aeb0722f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void addExternalFilesClassPath(File f)", "signatureAfterChange": "   public boolean addExternalFilesClassPath(File f)", "diff": ["+   */", "+  public boolean addExternalFilesClassPath(File f) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.addExternalFilesClassPath(f); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "+  }", "-  /** Blocks until the interpreter is connected. */", "-  public void addExternalFilesClassPath(File f) {", "-    if (! _restart) return;", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.addExternalFilesClassPath(f); }", "-    catch(RemoteException re) { _threwException(re); }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69022eedee519863c9d1bc91adda6b05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void setPrivateAccessible(boolean allow)", "signatureAfterChange": "   public boolean setPrivateAccessible(boolean allow)", "diff": ["+   */", "+  public boolean setPrivateAccessible(boolean allow) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.setPrivateAccessible(allow); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "-    * is connected. */", "-  public void setPrivateAccessible(boolean allow) { // TODO: synchronize?", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (!_restart) return;", "-    ", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    try { slave.setPrivateAccessible(allow); }", "-    catch (RemoteException re) { _threwException(re); }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7623995256a7e87e0c5cafa69d36f9b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void addBuildDirectoryClassPath(File f)", "signatureAfterChange": "   public boolean addBuildDirectoryClassPath(File f)", "diff": ["+   */", "+  public boolean addBuildDirectoryClassPath(File f) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.addBuildDirectoryClassPath(f); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "+  }", "-  /** Blocks until the interpreter is connected. */", "-  public void addBuildDirectoryClassPath(File f) {", "-    if (! _restart) return;", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.addBuildDirectoryClassPath(f); }", "-    catch(RemoteException re) { _threwException(re); }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "817f8de633bf1fb5d613283253550de9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public void addProjectFilesClassPath(File f)", "signatureAfterChange": "   public boolean addProjectFilesClassPath(File f)", "diff": ["+   */", "+  public boolean addProjectFilesClassPath(File f) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.addProjectFilesClassPath(f); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "+  }", "-  /** Blocks until the interpreter is connected. */", "-  public void addProjectFilesClassPath(File f) {", "-    if (! _restart) return;", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.addProjectFilesClassPath(f); }", "-    catch(RemoteException re) { _threwException(re); }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991c4592f7ad5a6df295a270ada5fb17", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void addExtraClassPath(File f)", "signatureAfterChange": "   public boolean addExtraClassPath(File f)", "diff": ["+   */", "+  public boolean addExtraClassPath(File f) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.addExtraClassPath(f); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "+  }", "-  /** Blocks until the interpreter is connected. */", "-  public void addExtraClassPath(File f) {", "-    if (! _restart) return;", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.addExtraClassPath(f); }", "-    catch(RemoteException re) { _threwException(re); }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f0aafdba61c60320963d3f0b64d2a3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void setPackageScope(String packageName)", "signatureAfterChange": "   public boolean setPackageScope(String packageName)", "diff": ["-  public void setPackageScope(String packageName) {", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (! _restart) return;", "-    ", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.interpret(\"package \" + packageName + \";\"); }", "-    catch (RemoteException re) { _threwException(re); }", "+  public boolean setPackageScope(String packageName) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.interpret(\"package \" + packageName + \";\"); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bddebe5e3d8e5d9ec15efdcf36f0568b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void addProjectClassPath(File f)", "signatureAfterChange": "   public boolean addProjectClassPath(File f)", "diff": ["+   */", "+  public boolean addProjectClassPath(File f) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.addProjectClassPath(f); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "+  }", "-  /** Blocks until the interpreter is connected. */", "-  public void addProjectClassPath(File f) {", "-    if (! _restart) return;", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.addProjectClassPath(f); }", "-    catch(RemoteException re) { _threwException(re); }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed7429f042b8b7253a464132d0ae296b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public void addInterpreter(String name)", "signatureAfterChange": "   public boolean addInterpreter(String name)", "diff": ["-    */", "-  public void addInterpreter(String name) {", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (! _restart) return;", "-    ", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.addInterpreter(name);  }", "-    catch (RemoteException re) { _threwException(re);  }", "+   */", "+  public boolean addInterpreter(String name) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.addInterpreter(name); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }"]}], "num": 5828}