{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bceea78c7479077a909d1b411859f9e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40bd858940985b09116e2f3314af05ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "diff": ["-", "+    ", "-", "+    ", "-        ", "+    ", "-    _auxiliaryFiles.clear();", "-    for(File file: auxFiles){", "-      _auxiliaryFiles.add(file);", "+    synchronized (_auxiliaryFiles) {", "+      _auxiliaryFiles.clear();", "+      for(File file: auxFiles) { _auxiliaryFiles.add(file); }", "-", "+    ", "-    ", "-    ", "-    for(DocFile f: srcFiles){", "+    for (DocFile f: srcFiles) {", "-      if(f.lastModified() > f.getSavedModDate()){", "-        file = new File(f.getPath());", "-      }", "-      if (f.isActive() && active == null) {", "-        active = file;", "-      }", "-      else {", "-        al.add(file);", "-      }", "+      if (f.lastModified() > f.getSavedModDate()) file = new File(f.getPath());", "+      if (f.isActive() && active == null) active = file;", "+      else al.add(file);", "-    for(DocFile f: auxFiles){", "+    for (DocFile f: auxFiles) {", "-      if(f.lastModified() > f.getSavedModDate()){", "-        file = new File(f.getPath());", "-      }", "-      if (f.isActive() && active == null) {", "-        active = file;", "-      }", "-      else {", "-        al.add(file);", "-      }", "+      if (f.lastModified() > f.getSavedModDate()) file = new File(f.getPath());", "+      if (f.isActive() && active == null) active = file;", "+      else al.add(file);", "-    ", "-     ", "+    ", "-    for(OpenDefinitionsDocument d: projDocs){", "-      if(d.isProjectFile()){", "-        closeFile(d);", "-      }else{", "+    for (OpenDefinitionsDocument d: projDocs) {", "+      if (d.isProjectFile()) closeFile(d);", "+      else", "-          INavigatorItem idoc = getIDocGivenODD(d);", "-          String path = fixPathForNavigator(d.getFile().getCanonicalPath());", "-          _documentNavigator.refreshDocument(idoc, path);", "-        }catch(IOException e){", "-          // noop", "-        }", "+        INavigatorItem idoc = getIDocGivenODD(d);", "+        String path = fixPathForNavigator(d.getFile().getCanonicalPath());", "+        _documentNavigator.refreshDocument(idoc, path);", "+      catch(IOException e) { /* do nothing */ }", "-      public File[] getFiles() {", "-        return filesToOpen;", "-      }", "+      public File[] getFiles() { return filesToOpen; }", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be8be712d3f400e314b3e6738b9e2126", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 138, "signatureBeforeChange": "   private File[] _loadProject(ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(ProjectFileIR ir) throws IOException", "diff": ["-  private File[] _loadProject(ProjectFileIR ir) throws IOException {", "+  private void _loadProject(ProjectFileIR ir) throws IOException {", "-    ArrayList<File> projFiles = new ArrayList<File>();", "-    File active = null;", "+    ArrayList<DocFile> projFiles = new ArrayList<DocFile>();", "+    DocFile active = null;", "-      File file = f;", "-      if (f.lastModified() > f.getSavedModDate()) file = new File(f.getPath());", "-      if (f.isActive() && active == null) active = file;", "-      else projFiles.add(file);", "+      if (f.lastModified() > f.getSavedModDate()) f.setSavedModDate(f.lastModified());", "+      if (f.isActive() && active == null) active = f;", "+      else projFiles.add(f);", "-      File file = f;", "-      if (f.lastModified() > f.getSavedModDate()) file = new File(f.getPath());", "-      if (f.isActive() && active == null) active = file;", "-      else projFiles.add(file);", "+      if (f.lastModified() > f.getSavedModDate()) f.setSavedModDate(f.lastModified());", "+      if (f.isActive() && active == null) active = f;", "+      else projFiles.add(f);", "-    final List<OpenDefinitionsDocument> projDocs = getProjectDocuments();  // opened documents in the project source tree ", "+    final List<OpenDefinitionsDocument> projDocs = getProjectDocuments();  // project source files ", "-    // This code may be unnecessary; no files from the previous project (if any) can be open since it was already closed.  ", "-    // But all other files open at time this project is loaded are eligible for inclusion in the new project.  This", "+    // No files from the previous project (if any) can be open since it was already closed.  ", "+    // But all other files open at time this project is loaded are eligible for inclusion in the new project.  ", "-    final File[] filesToOpen = projFiles.toArray(new File[projFiles.size()]);", "+    final DocFile[] filesToOpen = projFiles.toArray(new DocFile[projFiles.size()]);", "-   ", "-    return srcFiles; // Unnecessarily returns src files in keeping with the previous interface."]}], "num": 14502}