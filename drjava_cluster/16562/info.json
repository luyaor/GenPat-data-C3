{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "37bf3bb1ac9a3857dccf21fcae1c1438", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c7823cd10f2e74b4887dc48b2a2bc78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public Type visit(ArrayAllocation node)", "signatureAfterChange": "   public Class<?> visit(ArrayAllocation node)", "diff": ["-  public Type visit(ArrayAllocation node) {", "+  public Class<?> visit(ArrayAllocation node) {", "-      Type c1 = exp.acceptVisitor(this);", "-      Class<?> c = (Class<?>)c1;", "+      Class<?> c = exp.acceptVisitor(this);", "-    ", "+", "-    Type c1 = node.getCreationType().acceptVisitor(this);", "-    Class<?> c = (Class<?>)c1;", "+    Class<?> c = node.getCreationType().acceptVisitor(this);", "+", "-    ", "+", "-    Type ac = Array.newInstance(c, new int[node.getDimension()]).getClass();", "+    Class<?> ac = Array.newInstance(c, new int[node.getDimension()]).getClass();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df1f382d6bcb7fa4e1d7291f505fc419", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public Class<?> visit(ArrayAllocation node)", "signatureAfterChange": "   public Type visit(ArrayAllocation node)", "diff": ["-  public Class<?> visit(ArrayAllocation node) {", "+  public Type visit(ArrayAllocation node) {", "-      Class<?> c = exp.acceptVisitor(this);", "+      Type c1 = exp.acceptVisitor(this);", "+      Class<?> c = (Class<?>)c1;", "-", "+    ", "-    Class<?> c = node.getCreationType().acceptVisitor(this);", "-", "+    Type c1 = node.getCreationType().acceptVisitor(this);", "+    Class<?> c = (Class<?>)c1;", "-", "+    ", "-    Class<?> ac = Array.newInstance(c, new int[node.getDimension()]).getClass();", "+    Type ac = Array.newInstance(c, new int[node.getDimension()]).getClass();"]}], "num": 16562}