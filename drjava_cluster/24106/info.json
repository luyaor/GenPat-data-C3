{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6b30a1e4dad571643091545a075a95a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "419693de83c34a9a928453618cc72016", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 345, "methodNumberAfterChange": 345, "signatureBeforeChange": "     private File _locateClassFile()", "signatureAfterChange": "     private File _locateClassFile()", "diff": ["-      return findFileInPaths(fileName, DrJava.getConfig().getSetting(EXTRA_CLASSPATH));", "+      Vector<File> cpSetting = DrJava.getConfig().getSetting(EXTRA_CLASSPATH);", "+      return findFileInPaths(fileName, cpSetting);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a38ed0453c1f878d2fbb1aea1325816", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public TypeData forForStatement(ForStatement that)", "signatureAfterChange": "   public TypeData forForStatement(ForStatement that)", "diff": ["-   */", "+    */", "-    BodyTypeChecker btc = createANewInstanceOfMe(_bodyData, _file, _package, _importedFiles, _importedPackages, cloneVariableDataList(_vars), _thrown);", "+    LinkedList<VariableData> newVars = cloneVariableDataList(_vars);", "+    BodyTypeChecker btc = ", "+      createANewInstanceOfMe(_bodyData, _file, _package, _importedFiles, _importedPackages, newVars, _thrown);", "-    ExpressionTypeChecker etc = new ExpressionTypeChecker(_data, _file, _package, _importedFiles, _importedPackages, btc._vars, _thrown);", "+    ExpressionTypeChecker etc = ", "+      new ExpressionTypeChecker(_data, _file, _package, _importedFiles, _importedPackages, btc._vars, _thrown);", "-    //Now, change any VariableDatas that were given a value in the ForStatement back to having been unassigned since its code is not", "-    //necessarily executed.", "+    // Now, change any VariableDatas that were given a value in the ForStatement back to having been unassigned since ", "+    // its code is not necessarily executed.", "-    if (expOk.booleanValue()) {return forForStatementOnly(that, init_result, condition_result, update_result, code_result);}", "+    if (expOk.booleanValue()) ", "+      return forForStatementOnly(that, init_result, condition_result, update_result, code_result);"]}], "num": 24106}