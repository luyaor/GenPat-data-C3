{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3919ca0a0f9a7f8f574687b3c45a0b21", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ceab2afd092130fef7f771aeb0722f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void addExternalFilesClassPath(File f)", "signatureAfterChange": "   public boolean addExternalFilesClassPath(File f)", "diff": ["+   */", "+  public boolean addExternalFilesClassPath(File f) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.addExternalFilesClassPath(f); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "+  }", "-  /** Blocks until the interpreter is connected. */", "-  public void addExternalFilesClassPath(File f) {", "-    if (! _restart) return;", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.addExternalFilesClassPath(f); }", "-    catch(RemoteException re) { _threwException(re); }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991c4592f7ad5a6df295a270ada5fb17", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void addExtraClassPath(File f)", "signatureAfterChange": "   public boolean addExtraClassPath(File f)", "diff": ["+   */", "+  public boolean addExtraClassPath(File f) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.addExtraClassPath(f); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "+  }", "-  /** Blocks until the interpreter is connected. */", "-  public void addExtraClassPath(File f) {", "-    if (! _restart) return;", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.addExtraClassPath(f); }", "-    catch(RemoteException re) { _threwException(re); }", "-  }"]}], "num": 4654}