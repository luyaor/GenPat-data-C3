{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7bd649e980c7d628ee23896c8fdcde51", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5956d936d237918d39e250517e01e610", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/BrowserHistoryManager.java", "commitBeforeChange": "7abad9d4d237e1759bd098868c3fc80eb6e4365f", "commitAfterChange": "dcd05db97717868f3a1bba07cb5b1b9106d93c65", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public SortedSet<BrowserDocumentRegion> getRegions()", "signatureAfterChange": "   public SortedSet<BrowserDocumentRegion> getRegions()", "diff": ["+  /** @return a SortedSet<BrowserDocumentRegion> containing the DocumentRegion objects in this mangager. */", "+  public SortedSet<BrowserDocumentRegion> getRegions() {", "+    TreeSet<BrowserDocumentRegion> ts = new TreeSet<BrowserDocumentRegion>(_pastRegions);", "+    ts.addAll(_futureRegions);", "+    return ts;", "-  /** @return an ArrayList<DocumentRegion> containing the DocumentRegion objects in this mangager. */", "-  public SortedSet<BrowserDocumentRegion> getRegions() { return _regions; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69cf2e48107ad04e4219306eae67f454", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "7800062ae81518c3396891f7a26a405437cbcbf7", "commitAfterChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void updateLines(R r)", "signatureAfterChange": "   public void updateLines(R r)", "diff": ["+    if (tail.size() == 0) return;", "+    OrderedDocumentRegion[] tailRegions = tail.toArray(new OrderedDocumentRegion[0]);", "-    for (R region: tail) {", "-      if (region.getStartOffset() == region.getEndOffset()) removeRegion(region);", "+    for (OrderedDocumentRegion region: tailRegions) {", "+      // The following cast is gross, but the silly erasure based generics won't let me execute new R[0]", "+      if (region.getStartOffset() == region.getEndOffset()) removeRegion((R) region);"]}], "num": 23553}