{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58bc1661694342840cf3a76c2d056e4d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f6a146e5069f1a460afe4d0bc03c243", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/EventNotifier.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   synchronized public void notifyListeners(Notifier n)", "signatureAfterChange": "   public void notifyListeners(Notifier n)", "diff": ["-  synchronized public void notifyListeners(Notifier n) {", "-    int size = _listeners.size();", "-    for(int i = 0; i < size; i++) {", "-      n.notifyListener(_listeners.get(i));", "+  public void notifyListeners(Notifier n) {", "+    _lock.startRead();", "+    try {", "+      int size = _listeners.size();", "+      for(int i = 0; i < size; i++) {", "+        n.notifyListener(_listeners.get(i));", "+      }", "+    }", "+    finally {", "+      _lock.endRead();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92798e77e8e6efa0b3f1602fefc46eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/EventNotifier.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   synchronized public void interpreterReady()", "signatureAfterChange": "   public void interpreterReady()", "diff": ["-  synchronized public void interpreterReady() {", "-    int size = _listeners.size();", "-    for(int i = 0; i < size; i++) {", "-      _listeners.get(i).interpreterReady();", "+  public void interpreterReady() {", "+    _lock.startRead();", "+    try {", "+      int size = _listeners.size();", "+      for(int i = 0; i < size; i++) {", "+        _listeners.get(i).interpreterReady();", "+      }", "+    }", "+    finally {", "+      _lock.endRead();"]}], "num": 20731}