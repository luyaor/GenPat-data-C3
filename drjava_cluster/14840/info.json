{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79d6cff4215f7153b4d0f7c9896c7e92", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "440bf148578e356d98f22244451f73d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "a0233fef3427e8ddd7241be47fe79cd3cd5d54bc", "commitAfterChange": "bdbf83f4446e0652c53f385c6b6636ed4fa2affd", "methodNumberBeforeChange": 470, "methodNumberAfterChange": 470, "signatureBeforeChange": "   public ConstructorInvocation lookupConstructor(final Type t, final Iterable<? extends Type> typeArgs,                                                   final Iterable<? extends Expression> args)     throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException", "signatureAfterChange": "   public ConstructorInvocation lookupConstructor(final Type t, final Iterable<? extends Type> typeArgs,                                                   final Iterable<? extends Expression> args)     throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException", "diff": ["-    if (IterUtil.isEmpty(results)) { throw new UnmatchedLookupException(); }", "-    else if (IterUtil.sizeOf(results) > 1) { throw new UnmatchedLookupException(); }", "-    else { return results.iterator().next(); }", "+    int matches = IterUtil.sizeOf(results);", "+    if (matches != 1) { throw new UnmatchedLookupException(matches); }", "+    else { return IterUtil.first(results); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0d53d1e3144377a1a01c33e7d1d3f4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "a0233fef3427e8ddd7241be47fe79cd3cd5d54bc", "commitAfterChange": "bdbf83f4446e0652c53f385c6b6636ed4fa2affd", "methodNumberBeforeChange": 528, "methodNumberAfterChange": 528, "signatureBeforeChange": "   public StaticFieldReference lookupStaticField(Type t, final String name)     throws InvalidTargetException, UnmatchedLookupException", "signatureAfterChange": "   public StaticFieldReference lookupStaticField(Type t, final String name)     throws InvalidTargetException, UnmatchedLookupException", "diff": ["-    if (IterUtil.isEmpty(results)) { throw new UnmatchedLookupException(); }", "-    else if (IterUtil.sizeOf(results) > 1) { throw new UnmatchedLookupException(); }", "-    else { return results.iterator().next(); }", "+    int matches = IterUtil.sizeOf(results);", "+    if (matches != 1) { throw new UnmatchedLookupException(matches); }", "+    else { return IterUtil.first(results); }"]}], "num": 14840}