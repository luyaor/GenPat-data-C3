{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7153695a766201796ecdb9078d1b232e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bc10dd5047225965028fe7f0ea3ca21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 59, "signatureBeforeChange": "           protected int size()", "signatureAfterChange": "     public int size(int bound)", "diff": ["+    public int size() { return _array.length; }", "+    public int size(int bound) { return _array.length <= bound ? _array.length : bound; }", "-        return new IndexedIterator<Character>() {", "-          protected int size() { return sequence.length(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "291df4c3b747f79392ade3c060fce1e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 51, "signatureBeforeChange": "       public int size()", "signatureAfterChange": "     public int size(int bound)", "diff": ["+    public int size() { return _array.length; }", "+    public int size(int bound) { return _array.length <= bound ? _array.length : bound; }", "-    class Wrapper extends AbstractIterable<Character> implements SizedIterable<Character> {", "-      public int size() { return sequence.length(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f1153e646c252240698e4aae14d6a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "       public int size()", "signatureAfterChange": "     public int size(int bound)", "diff": ["+    public int size() { return _array.length; }", "+    public int size(int bound) { return _array.length <= bound ? _array.length : bound; }", "-    class Wrapper extends AbstractIterable<T> implements SizedIterable<T> {", "-      public int size() { return array.length; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa2210c579cf8019ca6829072a2aa0c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 131, "signatureBeforeChange": "              public boolean isFixed()", "signatureAfterChange": "     public int size(int bound)", "diff": ["+    public int size() { return _s.length(); }", "+    public int size(int bound) { int result = _s.length(); return result <= bound ? result : bound; }", "-      ", "-      public boolean isFixed() { return true; }"]}], "num": 1354}