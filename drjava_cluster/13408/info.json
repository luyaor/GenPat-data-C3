{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc0c7d1aae6e8eee45bad55fd17099e4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bd2810dd2ae85be8b18499ac1a2bec8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 50, "signatureBeforeChange": "        public void fileOpened(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public void fileOpened(OpenDefinitionsDocument doc)", "diff": ["-", "-      public void fileOpened(OpenDefinitionsDocument doc) {", "-        File file = null;", "-        try { file = doc.getFile(); }", "-        catch (FileMovedException fme) {", "-          // We know file should exist", "-          fail(\"file does not exist\");", "-        }", "-        try {", "-          assertEquals(\"file to open\", tempFile1.getCanonicalFile(), file.getCanonicalFile());", "-          openCount++;", "-        }", "-        catch (IOException ioe) { fail(\"could not get canonical file\"); }", "-      }", "+    TestFileIOListener(File f) { _expected = f; }", "+    public void fileOpened(OpenDefinitionsDocument doc) {", "+      super.fileOpened(doc);", "+      File file = null;", "+      try { file = doc.getFile(); }", "+      catch (FileMovedException fme) { fail(\"file does not exist\"); }     // We know file should exist", "+      assertEquals(\"file to open\", FileOps.getCanonicalFile(_expected), FileOps.getCanonicalFile(file));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9eab490d9f74ace8123b39a6bb117aaa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 47, "signatureBeforeChange": "        public void fileOpened(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public synchronized void fileOpened(OpenDefinitionsDocument doc)", "diff": ["-", "-      public void fileOpened(OpenDefinitionsDocument doc) { openCount++; }", "+  class TestIOListener extends TestListener {", "+    public synchronized void fileOpened(OpenDefinitionsDocument doc) {  openCount++; } "]}], "num": 13408}