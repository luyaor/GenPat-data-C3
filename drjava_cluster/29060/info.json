{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "584a2fa94a8d49df6f6549704e39fa2b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ee033f45131582b7434881a30466862", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testGetIndentOfCurrStmtDelimiterSameLine()      throws BadLocationException", "signatureAfterChange": "    public void testGetIndentOfCurrStmtDelimiterSameLine()      throws BadLocationException", "diff": ["-      assertEquals(\"prev delimiter on same line, no indent\",", "-                   \"\",", "-                   _doc.getIndentOfCurrStmt(6));", "+      assertEquals(\"prev delimiter on same line, no indent\", 0, _doc.getIndentOfCurrStmt(6));", "-      assertEquals(\"prev delimiter on same line, indent two spaces\",", "-                   \"  \",", "-                   _doc.getIndentOfCurrStmt(8));", "+      assertEquals(\"prev delimiter on same line, indent two spaces\", 2, _doc.getIndentOfCurrStmt(8));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5db721672b6cbfeaa0038c00d70bfc8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 10, "signatureBeforeChange": "    public void testGetIndentOfCurrStmtDelimiterSameLine()      throws BadLocationException", "signatureAfterChange": "    public void testGetIndentOfCurrStmtDelimiterSameLine()      throws BadLocationException", "diff": ["-      assertEquals(\"prev delimiter on same line, no indent\", 0, _doc.getIndentOfCurrStmt(6));", "+      assertEquals(\"prev delimiter on same line, no indent\", 0, _getIndentOfCurrStmt(6));", "-      assertEquals(\"prev delimiter on same line, indent two spaces\", 2, _doc.getIndentOfCurrStmt(8));", "+      assertEquals(\"prev delimiter on same line, indent two spaces\", 2, _getIndentOfCurrStmt(8));"]}], "num": 29060}