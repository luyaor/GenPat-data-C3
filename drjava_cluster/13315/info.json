{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86407c5ca2e3a638eeb06817bc2ae699", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a53e6b2b3bc10ef5fcdb9c0a017c918", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "      public void testForVariableDeclaration()", "signatureAfterChange": "      public void testForVariableDeclaration()", "diff": ["-      //make sure that if forVariableDeclaration is called with a AnonymousClassInstantiation, the symboldata is only added once.", "-      //this is to make sure an old bug stays fixed.", "-      SimpleAnonymousClassInstantiation basic = new SimpleAnonymousClassInstantiation(JExprParser.NO_SOURCE_INFO, new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"Object\", new Type[0]), ", "-                                                                        new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[0]),", "-                                                                        new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      // Make sure that if forVariableDeclaration is called with a AnonymousClassInstantiation, ", "+      // the symboldata is only added once. This is to make sure an old bug stays fixed.", "+      SimpleAnonymousClassInstantiation basic = ", "+        new SimpleAnonymousClassInstantiation(NO_INFO, new ClassOrInterfaceType(NO_INFO, \"Object\", new Type[0]), ", "+                                              new ParenthesizedExpressionList(NO_INFO, new Expression[0]),", "+                                              new BracedBody(NO_INFO, new BodyItemI[0]));", "-     VariableDeclarator[] d1 = {new InitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.lang.Object\", new Type[0]), new Word(JExprParser.NO_SOURCE_INFO, \"b\"), basic)};", "-     VariableDeclaration vd1 = new VariableDeclaration(JExprParser.NO_SOURCE_INFO,_publicMav, d1); ", "+     VariableDeclarator[] d1 = {", "+       new InitializedVariableDeclarator(NO_INFO, new ClassOrInterfaceType(NO_INFO, \"java.lang.Object\", new Type[0]), ", "+                                         new Word(NO_INFO, \"b\"), basic)", "+     };", "+     VariableDeclaration vd1 = new VariableDeclaration(NO_INFO,_publicMav, d1); ", "-     ClassBodyAdvancedVisitor cbav = new ClassBodyAdvancedVisitor(_sd1, \"\", _av._file, _av._package, _av._importedFiles, _av._importedPackages, _av._classNamesInThisFile, _av.continuations);", "+     ClassBodyAdvancedVisitor cbav =", "+       new ClassBodyAdvancedVisitor(_sd1, \"\", _av._file, _av._package, _av._importedFiles, ", "+                                    _av._importedPackages, _av._classNamesInThisFile, _av.continuations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daeda78fa435e9d0efa9551e47d1a7bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 44, "signatureBeforeChange": "          public void testForVariableDeclaration()", "signatureAfterChange": "          public void testForVariableDeclaration()", "diff": ["-      //make sure that if forVariableDeclaration is called with a AnonymousClassInstantiation, the symboldata is only added once.", "-      //this is to make sure an old bug stays fixed.", "-      SimpleAnonymousClassInstantiation basic = new SimpleAnonymousClassInstantiation(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"Object\", new Type[0]), ", "-                                                                                      new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]),", "-                                                                                      new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+      // Confirm that if forVariableDeclaration is called with a AnonymousClassInstantiation, the symboldata is only ", "+      // added once. This is to make sure an old bug stays fixed.", "+      SimpleAnonymousClassInstantiation basic = ", "+        new SimpleAnonymousClassInstantiation(SourceInfo.NO_INFO, ", "+                                              new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), ", "+                                              new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]),", "+                                              new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      VariableDeclarator[] d1 = {new InitializedVariableDeclarator(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), new Word(SourceInfo.NO_INFO, \"b\"), basic)};", "-      VariableDeclaration vd1 = new VariableDeclaration(SourceInfo.NO_INFO,_publicMav, d1); ", "+      VariableDeclarator[] d1 = { ", "+        new InitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                          new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), ", "+                                          new Word(SourceInfo.NO_INFO, \"b\"), basic)};", "+      ", "+      VariableDeclaration vd1 = new VariableDeclaration(SourceInfo.NO_INFO,PUBLIC_MAV, d1); ", "-        new ClassBodyIntermediateVisitor(_sd1, ", "+        new ClassBodyIntermediateVisitor(_sd1,", "+                                         _sd1.getName(),", "-                                         _iv._classNamesInThisFile, ", "-                                         _iv.continuations);", "+                                         _iv._classesInThisFile, ", "+                                         _iv.continuations,", "+                                         _iv.fixUps);", "-      "]}], "num": 13315}