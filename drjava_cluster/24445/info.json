{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6de07d039aae683f7b7210ae64e1dae9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991c4592f7ad5a6df295a270ada5fb17", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void addExtraClassPath(File f)", "signatureAfterChange": "   public boolean addExtraClassPath(File f)", "diff": ["+   */", "+  public boolean addExtraClassPath(File f) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.addExtraClassPath(f); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "+  }", "-  /** Blocks until the interpreter is connected. */", "-  public void addExtraClassPath(File f) {", "-    if (! _restart) return;", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.addExtraClassPath(f); }", "-    catch(RemoteException re) { _threwException(re); }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f0aafdba61c60320963d3f0b64d2a3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void setPackageScope(String packageName)", "signatureAfterChange": "   public boolean setPackageScope(String packageName)", "diff": ["-  public void setPackageScope(String packageName) {", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (! _restart) return;", "-    ", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.interpret(\"package \" + packageName + \";\"); }", "-    catch (RemoteException re) { _threwException(re); }", "+  public boolean setPackageScope(String packageName) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.interpret(\"package \" + packageName + \";\"); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }"]}], "num": 24445}