{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77961ed01bbc5dbd957ae1fa490ef86e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1904a5323e44377b25ba18ab6e88f124", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "   public Type visit(ConditionalExpression node)", "signatureAfterChange": "   public Class<?> visit(ConditionalExpression node)", "diff": ["-  public Type visit(ConditionalExpression node) {", "+  public Class<?> visit(ConditionalExpression node) {", "-    Type type = condExp.acceptVisitor(this);", "+    Class<?> type = condExp.acceptVisitor(this);", "-    ", "+", "-    ", "+", "-    Type c1A = exp1.acceptVisitor(this);", "-    Type c2B = exp2.acceptVisitor(this);", "-    Type ec = null;", "-    ", "-    Class<?> c1 = (Class<?>)c1A;", "-    Class<?> c2 = (Class<?>)c2B;", "-    ", "+    Class<?> c1 = exp1.acceptVisitor(this);", "+    Class<?> c2 = exp2.acceptVisitor(this);", "+    Class<?> ec = null;", "+", "-             exp2.hasProperty(NodeProperties.VALUE) && c2 == int.class) {", "+               exp2.hasProperty(NodeProperties.VALUE) && c2 == int.class) {", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b648a9166bb274703a53d93d07dbe14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "488e3f877c7f7a8647e0d3f7fb5faea712ac20ce", "commitAfterChange": "35470e88ca153d8164d45d018c673900eac06ea2", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 65, "signatureBeforeChange": "          private boolean supportedObject(Object val)", "signatureAfterChange": "          private boolean supportedAtom(Object val)", "diff": ["-    private boolean supportedObject(Object val) {", "+    private boolean supportedAtom(Object val) {", "-              val instanceof Class<?> || val instanceof EnumSet<?> || val instanceof Enum<?> ||", "-              val instanceof DJClass || val instanceof Variable || val instanceof Function ||", "-              val instanceof Type;", "+              val instanceof Character || val instanceof Class<?> ||", "+              val instanceof EnumSet<?> || val instanceof Enum<?>;", "+    }"]}], "num": 11969}