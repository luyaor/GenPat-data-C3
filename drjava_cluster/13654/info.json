{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e564f5d201a8f8bedb6afc54b6300213", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06619e7828673674bc0dcab9b3e41cdf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/print/PagePrinter.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public int print(Graphics graphics, PageFormat format, int pageIndex)", "signatureAfterChange": "   public int print(Graphics graphics, PageFormat format, int pageIndex)", "diff": ["-      TextLayout layout = (TextLayout) _textLayouts.get(i);", "-      TextLayout lineNumber = (TextLayout) _lineNumbers.get(i);", "+      TextLayout layout = _textLayouts.get(i);", "+      TextLayout lineNumber = _lineNumbers.get(i);", "-      layout.draw(g2d, _parent.LINE_NUMBER_WIDTH, y);", "+      layout.draw(g2d, _parent.LINE_NUM_WIDTH, y);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11c5b8266778ed578496280f2051ab6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "cd41b34cec4c099dc551839a16c1a804b7900ef0", "commitAfterChange": "91f1790d793689beae896db47015b721b602919f", "methodNumberBeforeChange": 383, "methodNumberAfterChange": 383, "signatureBeforeChange": "   private void _ensureNotActive(List<OpenDefinitionsDocument> docs)", "signatureAfterChange": "   private void _ensureNotActive(List<OpenDefinitionsDocument> docs)", "diff": ["-      OpenDefinitionsDocument nextActive = (OpenDefinitionsDocument) nav.getNext(item);", "+      OpenDefinitionsDocument nextActive = nav.getNext(item);", "-      nextActive = (OpenDefinitionsDocument) nav.getPrevious(item);", "+      nextActive = nav.getPrevious(item);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19a9b12faed33e87975d2c639abf3ac8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "   private Class visitRelationalExpression(BinaryExpression node)", "signatureAfterChange": "   private Class visitRelationalExpression(BinaryExpression node)", "diff": ["-    Class lc = (Class)node.getLeftExpression().acceptVisitor(this);", "-    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "-    ", "+    Class lc = node.getLeftExpression().acceptVisitor(this);", "+    Class rc = node.getRightExpression().acceptVisitor(this);", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c38621bf031b560c20d0176389b2d9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ReverseHighlighter.java", "commitBeforeChange": "714a91a3f9a91ffe3e5ee9ae0bd0c977c7aa4e31", "commitAfterChange": "86cce18ff80f67b178e899650f588fd3636436b4", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r     public synchronized void run()", "signatureAfterChange": "\r     public synchronized void run()", "diff": ["-     */\r", "+    /** Executes range(s) damage and cleans range queue. */\r", "-          // the Document should be the same to properly\r", "-          // display highlights\r", "+          // the Document should be the same to properly display highlights\r", "-            mapper.damageRange(component,\r", "-                               ((Position)p0.get(i)).getOffset(),\r", "-                               ((Position)p1.get(i)).getOffset());\r", "+            mapper.damageRange(component, p0.get(i).getOffset(), p1.get(i).getOffset());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f67a3cbda77e8651c2290a35656f98f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public Class visit(SimpleAllocation node)", "signatureAfterChange": "   public Class visit(SimpleAllocation node)", "diff": ["-    Class c  = (Class)type.acceptVisitor(this);", "-    ", "+    Class c  = type.acceptVisitor(this);", "+", "-    ", "+", "-      ", "+", "-        cargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "+        cargs[i++] = ((Node)it.next()).acceptVisitor(this);", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2121d343559777ad94ed79f6561a25cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "   private Class visitShiftExpression(BinaryExpression node)", "signatureAfterChange": "   private Class visitShiftExpression(BinaryExpression node)", "diff": ["-    Class lc = (Class)node.getLeftExpression().acceptVisitor(this);", "-    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "+    Class lc = node.getLeftExpression().acceptVisitor(this);", "+    Class rc = node.getRightExpression().acceptVisitor(this);", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27a7c479387a88dec48d0ad9d8028487", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public Class visit(SimpleAssignExpression node)", "signatureAfterChange": "   public Class visit(SimpleAssignExpression node)", "diff": ["-    Class rc = (Class)right.acceptVisitor(this);", "-    ", "+    Class rc = right.acceptVisitor(this);", "+", "-    ", "-    Class lc = (Class)left.acceptVisitor(this);", "-    ", "+", "+    Class lc = left.acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e04e70048a31096cd36e7b700e1684f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testOpenMany() throws BadLocationException", "signatureAfterChange": "   public void testOpenMany() throws BadLocationException", "diff": ["-    ", "-    OpenDefinitionsDocument doc2 = (OpenDefinitionsDocument)docs.get(1);", "+", "+    OpenDefinitionsDocument doc2 = docs.get(1);", "-    ", "-    OpenDefinitionsDocument doc3 = (OpenDefinitionsDocument)docs.get(2);", "+", "+    OpenDefinitionsDocument doc3 = docs.get(2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3753756c207bff73f188e0bd7560d9ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "   public Class visit(ConditionalExpression node)", "signatureAfterChange": "   public Class visit(ConditionalExpression node)", "diff": ["-    ", "+", "-    Class c1 = (Class)n1.acceptVisitor(this);", "-    Class c2 = (Class)n2.acceptVisitor(this);", "+    Class c1 = n1.acceptVisitor(this);", "+    Class c2 = n2.acceptVisitor(this);", "-    ", "+", "-      }       ", "+      }", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38f8476bac823373c846a97d5ef4a465", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public Class visit(AddExpression node)", "signatureAfterChange": "   public Class visit(AddExpression node)", "diff": ["-    Class lc = (Class)ln.acceptVisitor(this);", "-    Class rc = (Class)rn.acceptVisitor(this);", "+    Class lc = ln.acceptVisitor(this);", "+    Class rc = rn.acceptVisitor(this);", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e8d077a63d41dcef0fd3647b4a2e2e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public Class visit(RemainderAssignExpression node)", "signatureAfterChange": "   public Class visit(RemainderAssignExpression node)", "diff": ["-    Class lc = (Class)ln.acceptVisitor(this);", "-    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "-    ", "+    Class lc = ln.acceptVisitor(this);", "+    Class rc = node.getRightExpression().acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ba85ee796008bb10e31f23ff90b2a2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "   public Class visit(AndExpression node)", "signatureAfterChange": "   public Class visit(AndExpression node)", "diff": ["-    Class lc = (Class)ln.acceptVisitor(this);", "-    Class rc = (Class)rn.acceptVisitor(this);", "-    ", "+    Class lc = ln.acceptVisitor(this);", "+    Class rc = rn.acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5018bd63afa98ecfc4c5408dc54add23", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "   private Class visitBitwiseAssign(BinaryExpression node)", "signatureAfterChange": "   private Class visitBitwiseAssign(BinaryExpression node)", "diff": ["-    Class lc = (Class)ln.acceptVisitor(this);", "-    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "-    ", "+    Class lc = ln.acceptVisitor(this);", "+    Class rc = node.getRightExpression().acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f185e453c9d74711b1550f0fad6020", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public Class visit(SubtractAssignExpression node)", "signatureAfterChange": "   public Class visit(SubtractAssignExpression node)", "diff": ["-    Class lc = (Class)ln.acceptVisitor(this);", "-    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "-    ", "+    Class lc = ln.acceptVisitor(this);", "+    Class rc = node.getRightExpression().acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e74643a8076fc3c94444aa39bedf821", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public Class visit(AddAssignExpression node)", "signatureAfterChange": "   public Class visit(AddAssignExpression node)", "diff": ["-    Class lc = (Class)ln.acceptVisitor(this);", "-    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "-    ", "+    Class lc = ln.acceptVisitor(this);", "+    Class rc = node.getRightExpression().acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fbcf44468471b0130166ea73e03b4f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "   public Class visit(OrExpression node)", "signatureAfterChange": "   public Class visit(OrExpression node)", "diff": ["-    Class lc = (Class)ln.acceptVisitor(this);", "-    Class rc = (Class)rn.acceptVisitor(this);", "-    ", "+    Class lc = ln.acceptVisitor(this);", "+    Class rc = rn.acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88ce97ed2588e16b6a8f8ba20171328d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "cd41b34cec4c099dc551839a16c1a804b7900ef0", "commitAfterChange": "91f1790d793689beae896db47015b721b602919f", "methodNumberBeforeChange": 380, "methodNumberAfterChange": 380, "signatureBeforeChange": "   public void setActivePreviousDocument()", "signatureAfterChange": "   public void setActivePreviousDocument()", "diff": ["-    OpenDefinitionsDocument prevKey = (OpenDefinitionsDocument) _documentNavigator.getPrevious(key);", "+    OpenDefinitionsDocument prevKey = _documentNavigator.getPrevious(key);", "-    else setActiveDocument((OpenDefinitionsDocument)_documentNavigator.getLast());", "+    else setActiveDocument(_documentNavigator.getLast());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9218059143cd1b2635f9097cdb4ccd90", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public Class visit(VariableDeclaration node)", "signatureAfterChange": "   public Class visit(VariableDeclaration node)", "diff": ["-    Class lc = (Class)node.getType().acceptVisitor(this);", "+    Class lc = node.getType().acceptVisitor(this);", "-    ", "+", "-      Class rc = (Class)init.acceptVisitor(this);", "+      Class rc = init.acceptVisitor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2e8efb9c0d7f297def05dcc38c3621d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public Class visit(StaticMethodCall node)", "signatureAfterChange": "   public Class visit(StaticMethodCall node)", "diff": ["-        cargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "+        cargs[i++] = ((Node)it.next()).acceptVisitor(this);", "-    Class  c = (Class)n.acceptVisitor(this);", "-    ", "+    Class  c = n.acceptVisitor(this);", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6be0ab9eac8816ab1e3a59d924307d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "   private Class visitBitwiseExpression(BinaryExpression node)", "signatureAfterChange": "   private Class visitBitwiseExpression(BinaryExpression node)", "diff": ["-    Class lc = (Class)node.getLeftExpression().acceptVisitor(this);", "-    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "+    Class lc = node.getLeftExpression().acceptVisitor(this);", "+    Class rc = node.getRightExpression().acceptVisitor(this);", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7b240d0affacf7b1d896836ce38b735", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public Class visit(ClassAllocation node)", "signatureAfterChange": "   public Class visit(ClassAllocation node)", "diff": ["-      Class   ct   = (Class)ctn.acceptVisitor(this);", "+      Class   ct   = ctn.acceptVisitor(this);", "-      ", "+", "-          args[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "+          args[i++] = ((Node)it.next()).acceptVisitor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b90733fc33c0f83ed884284be590f6b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public Class visit(DivideAssignExpression node)", "signatureAfterChange": "   public Class visit(DivideAssignExpression node)", "diff": ["-    Class lc = (Class)ln.acceptVisitor(this);", "-    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "-    ", "+    Class lc = ln.acceptVisitor(this);", "+    Class rc = node.getRightExpression().acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7863cdd8cdefd8a82a729bbbf885d0b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "cd41b34cec4c099dc551839a16c1a804b7900ef0", "commitAfterChange": "91f1790d793689beae896db47015b721b602919f", "methodNumberBeforeChange": 379, "methodNumberAfterChange": 379, "signatureBeforeChange": "   public void setActiveNextDocument()", "signatureAfterChange": "   public void setActiveNextDocument()", "diff": ["-    OpenDefinitionsDocument nextKey = (OpenDefinitionsDocument) _documentNavigator.getNext(key);", "+    OpenDefinitionsDocument nextKey = _documentNavigator.getNext(key);", "-    else setActiveDocument((OpenDefinitionsDocument)_documentNavigator.getFirst());", "+    else setActiveDocument(_documentNavigator.getFirst());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca9a11c291aaf05c0f3e92381c7a5d23", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public Class visit(EqualExpression node)", "signatureAfterChange": "   public Class visit(EqualExpression node)", "diff": ["-    Class lc = (Class)ln.acceptVisitor(this);", "-    Class rc = (Class)rn.acceptVisitor(this);", "-    ", "+    Class lc = ln.acceptVisitor(this);", "+    Class rc = rn.acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4b974284a58699ac607f406dc385e7c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public Class visit(ObjectMethodCall node)", "signatureAfterChange": "   public Class visit(ObjectMethodCall node)", "diff": ["-    Class      c   = (Class)exp.acceptVisitor(this);", "+    Class      c   = exp.acceptVisitor(this);", "-    ", "+", "-          cargs[i++] = (Class)((Node)it.next()).acceptVisitor(this);", "+          cargs[i++] = ((Node)it.next()).acceptVisitor(this);", "-      ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dea79a272bf68ee6687d5d1ce7dc7357", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "   public Class visit(CastExpression node)", "signatureAfterChange": "   public Class visit(CastExpression node)", "diff": ["-    Class c = (Class)node.getTargetType().acceptVisitor(this);", "-    checkCastStaticRules(c, (Class)node.getExpression().acceptVisitor(this), node);", "-    ", "+    Class c = node.getTargetType().acceptVisitor(this);", "+    checkCastStaticRules(c, node.getExpression().acceptVisitor(this), node);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1ee258e36f06441c3b2270f147957ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public Class visit(NotEqualExpression node)", "signatureAfterChange": "   public Class visit(NotEqualExpression node)", "diff": ["-    Class lc = (Class)ln.acceptVisitor(this);", "-    Class rc = (Class)rn.acceptVisitor(this);", "-    ", "+    Class lc = ln.acceptVisitor(this);", "+    Class rc = rn.acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9fa6337e9b23a5b0d1fcbb8a44c39c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public Class visit(MultiplyAssignExpression node)", "signatureAfterChange": "   public Class visit(MultiplyAssignExpression node)", "diff": ["-    Class lc = (Class)ln.acceptVisitor(this);", "-    Class rc = (Class)node.getRightExpression().acceptVisitor(this);", "-    ", "+    Class lc = ln.acceptVisitor(this);", "+    Class rc = node.getRightExpression().acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eae24a28b60e9e596cdfbc5183036f25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public Class visit(ArrayAllocation node)", "signatureAfterChange": "   public Class visit(ArrayAllocation node)", "diff": ["-      Class c = (Class)((Node)it.next()).acceptVisitor(this);", "+      Class c = ((Node)it.next()).acceptVisitor(this);", "-    ", "-    Class c = (Class)node.getCreationType().acceptVisitor(this);", "-    ", "+", "+    Class c = node.getCreationType().acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efb99e208ea4975078dc0ad135c2956f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public Class visit(ArrayAccess node)", "signatureAfterChange": "   public Class visit(ArrayAccess node)", "diff": ["-    Class c = (Class)node.getExpression().acceptVisitor(this);", "-    ", "+    Class c = node.getExpression().acceptVisitor(this);", "+", "-    ", "+", "-    ", "+", "-    c = (Class)node.getCellNumber().acceptVisitor(this);", "-    ", "+    c = node.getCellNumber().acceptVisitor(this);", "+"]}], "num": 13654}