{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd21fc23d87494af766592a6bef31f24", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "855a63195f8b038be0c97d0bead6721b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentHelperTest.java", "commitBeforeChange": "0d293f065df295b40875d176fa985aae8404680f", "commitAfterChange": "1cb762451f589947c585a2a219ca59cd916faaa1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testGetFirstNonWSCharPos() throws BadLocationException", "signatureAfterChange": "     public void testGetFirstNonWSCharPos() throws BadLocationException", "diff": ["-    //      _setDocText(\"foo();\\n// comment\\nbar();\\n\");", "-    //      assertEquals(\"Ignore single-line comments\",", "-    //      18,", "-    //      _doc.getFirstNonWSCharPos(9));", "-      ", "-    //      _setDocText(\"foo();\\n /* bar\\nblah */ boo\\n\");", "-    //    assertEquals(\"Ignore multiline comments\",", "-    //\t\t 23,", "-    //\t\t _doc.getFirstNonWSCharPos(6));\t ", "+    _setDocText(\"foo();\\n// comment\\nbar();\\n\");", "+    assertEquals(\"Ignore single-line comments\",", "+\t\t 18,", "+\t\t _doc.getFirstNonWSCharPos(6));", "+    ", "+    _setDocText(\"foo();\\n /* bar\\nblah */ boo\\n\");", "+    assertEquals(\"Ignore multiline comments\",", "+    \t\t 23,", "+    \t\t _doc.getFirstNonWSCharPos(6));\t ", "+    _setDocText(\"foo   /\");", "+    assertEquals(\"Slash at end of document\",", "+\t\t 6,", "+\t\t _doc.getFirstNonWSCharPos(4));", "+    _setDocText(\"foo   //\");", "+    assertEquals(\"// at end\",", "+\t\t -1,", "+\t\t _doc.getFirstNonWSCharPos(4));", "+    _setDocText(\"foo   /*\");", "+    assertEquals(\"/* at end\",", "+\t\t -1,", "+\t\t _doc.getFirstNonWSCharPos(4));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdec36058b3d235ac4fd471e0ff77115", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void testNumListeners()", "signatureAfterChange": "     public void testNumListeners()", "diff": ["-   int numDocListeners = doc1.getDocument().getDocumentListeners().length;", "-   int numUndoListeners = doc1.getDocument().getUndoableEditListeners().length;", "+   int numDocListeners = doc1.getDocumentListeners().length;", "+   int numUndoListeners = doc1.getUndoableEditListeners().length;", "-   doc1.getDocument();", "-   doc2.getDocument();", "-   doc3.getDocument();", "-   doc4.getDocument();", "+   doc1.getLength();", "+   doc2.getLength();", "+   doc3.getLength();", "+   doc4.getLength();", "-   doc5.getDocument();", "+   doc5.getLength();", "-   doc1.getDocument();", "+   doc1.getLength();", "-   assertEquals(\"the number of document listeners is the same after reconstruction\", numDocListeners, doc1.getDocument().getDocumentListeners().length);", "-   assertEquals(\"the number of undoableEditListeners is the same after reconstruction\", numUndoListeners, doc1.getDocument().getUndoableEditListeners().length);", "+   assertEquals(\"the number of document listeners is the same after reconstruction\", numDocListeners, doc1.getDocumentListeners().length);", "+   assertEquals(\"the number of undoableEditListeners is the same after reconstruction\", numUndoListeners, doc1.getUndoableEditListeners().length);"]}], "num": 9868}