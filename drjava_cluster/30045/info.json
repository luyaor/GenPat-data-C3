{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8369af1e9c4de2b3fb6f55a50a225edb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e5f0403ce3afac50252426a3a52490e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/BooleanOption.java", "commitBeforeChange": "2de5de833fec6c0fefce3e0dfbb07764b1900707", "commitAfterChange": "fa036878036cfa9b3fdfb0b92616499d17bb99f7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Boolean parse(String s)", "signatureAfterChange": "   public Boolean parse(String s)", "diff": ["-    if (s.equals(\"true\"))", "+    if (s.equals(\"true\")) {", "-    ", "-    if (s.equals(\"false\"))", "+    }", "+    if (s.equals(\"false\")) {", "-    ", "-    else", "-      throw new IllegalArgumentException(\"Input must be a lowercase String \" +", "-                                           \"representing a boolean value\");", "+    }", "+    else {", "+      throw new OptionParseException(name, s,", "+                                     \"Must be a lowercase String \" +", "+                                     \"representing a boolean value.\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c23e37db77d1d983c6bd34e5566feb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/BooleanOption.java", "commitBeforeChange": "8f8a64864bd9c3c9658401188aaec5c9c0dfe4f7", "commitAfterChange": "9e1a29777c7e5973840e817aca59ceea66af7a9c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Boolean parse(String s)", "signatureAfterChange": "   public Boolean parse(String s)", "diff": ["-  public Boolean parse(String s)", "-  {", "+  public Boolean parse(String s) {", "-    if (s.equals(\"true\")) {", "-      return Boolean.TRUE;", "-    }", "-    if (s.equals(\"false\")) {", "-      return Boolean.FALSE;", "-    }", "-    else {", "-      throw new OptionParseException(name, s,", "-                                     \"Must be a String representing\" +", "-                                     \"a boolean value.\");", "-    }", "+    if (s.equals(\"true\")) return Boolean.TRUE;", "+    if (s.equals(\"false\")) return Boolean.FALSE;", "+    else throw new OptionParseException(name, s, \"Must be a String representing a boolean value.\");"]}], "num": 30045}