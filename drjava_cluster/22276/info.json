{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e5c0d0f86541a80226e0c8bc5a8dc78", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fd8e66aa764367e6899a4ead8f890d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "commitAfterChange": "4e52eec7688cbd5ec3584417f424923ba61a75e0", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 59, "signatureBeforeChange": "   protected void identifyInnerClasses(TypeDefBase that)", "signatureAfterChange": "   protected void identifyInnerClasses(TypeDefBase that)", "diff": ["-    String enclosingType = getQualifiedClassName(that.getName().getText());", "+    String prefix = _enclosingClassName == null ? \"\" : _enclosingClassName + '.';", "+    String enclosingType = getQualifiedClassName(prefix + that.getName().getText());", "+//    System.err.println(\"***** identifyInnerClasses called for \" + enclosingType + \" in file \" + _file);", "+//    System.err.println(\"SymbolData for \" + enclosingType + \" is \" + sd);", "+    enclosingType = sd.getName(); // that may be a local class, which has a more elaborate name", "+//        System.err.println(\"***** Making continuation for \" + fullClassName + \" in file \" + _file);", "+//        System.err.println(\"***** Continuation \" + innerSD + \" returned\");", "+//        Utilities.show(\"***** Continuation \" + innerSD + \" returned\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a6bf498f672c942e94c08301d61a3ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   protected MethodData createMethodData(final MethodDef that, final SymbolData sd)", "signatureAfterChange": "   protected MethodData createMethodData(final MethodDef that, final SymbolData sd)", "diff": ["-    System.err.println(\"createMethodData(\" + that.getName().getText() + \", \" + sd + \") called.\");", "-    System.err.println(\"_enclosingClassName = \" + _enclosingClassName);", "+//    System.err.println(\"createMethodData(\" + that.getName().getText() + \", \" + sd + \") called.\");", "+//    System.err.println(\"_enclosingClassName = \" + _enclosingClassName);", "-    System.err.println(\"Creating MethodData for \" + name + \" in type \" + sd);", "+//    System.err.println(\"Creating MethodData for \" + name + \" in type \" + sd);", "-      System.err.println(\"Creating return type fixup for \" + rtString + \" in method \" + name + \" in class \" + sd);", "+//      System.err.println(\"Creating return type fixup for \" + rtString + \" in method \" + name + \" in class \" + sd);", "-    System.err.println(\"Called createMethodData(\" + name + \", \" + sd.getName() + \")\");", "+//    System.err.println(\"Called createMethodData(\" + name + \", \" + sd.getName() + \")\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49a9e3652f3834235506ccb4516b30d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "e1cae1f7b6aae460aab41e86b032251abb119211", "commitAfterChange": "d1929cdbc61164d9dd0af29defc1992f3c759cb6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   @SuppressWarnings(\"unchecked\")   public void removeRegions(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   @SuppressWarnings(\"unchecked\")   public void removeRegions(final OpenDefinitionsDocument doc)", "diff": ["-//    System.err.println(\"Removing ODD \" + doc + \" in \" + this);", "+//    System.err.println(\"Removing regions from ODD \" + doc + \" in \" + this);", "+//    System.err.println(\"_documents = \" + _documents);", "+//    System.err.println(\"ODD \" + doc + \" exists in \" + this);", "-//      System.err.println(\"Removing document regions for \" + doc + \" in \" + this);", "-      // The following ugly line of code is dictated by the \"fail fast\" semantics of Java iterators", "-      while (! regions.isEmpty()) regions.remove(regions.first());", "+//      System.err.println(\"Before removal, regions = \" + regions);", "+      // The following ugly loop is dictated by the \"fail fast\" semantics of Java iterators", "+      while (! regions.isEmpty()) {", "+        R r = regions.first();", "+        regions.remove(r);  ", "+        _notifyRegionRemoved(r);", "+      }", "+//      System.err.println(\"After removal, regions = \" + regions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8244f870a1a96d3eea4ae13bee65afd0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   protected VariableData[] _variableDeclaration2VariableData(VariableDeclaration vd, final Data enclosing)", "signatureAfterChange": "   protected VariableData[] _variableDeclaration2VariableData(VariableDeclaration vd, final Data enclosing)", "diff": ["-    System.err.println(\"*** 2Var called for \\n\" + declaratorsToString(vd.getDeclarators()) + \"\\nin \" + enclosing);", "+//    System.err.println(\"*** 2Var called for \\n\" + declaratorsToString(vd.getDeclarators()) + \"\\nin \" + enclosing);", "-      System.err.println(\"Creating new VariableData \" + name + \" : \" + typeName + \" within \" + _enclosingClassName);", "+//      System.err.println(\"Creating new VariableData \" + name + \" : \" + typeName + \" within \" + _enclosingClassName);", "-        System.err.println(\"**** Creating fixup for preceding VariableData\");", "+//        System.err.println(\"**** Creating fixup for preceding VariableData\");", "-            System.err.println(\"**** Executing fixup for \" + typeName + \" within \" + enclosingName);", "+//            System.err.println(\"**** Executing fixup for \" + typeName + \" within \" + enclosingName);"]}], "num": 22276}