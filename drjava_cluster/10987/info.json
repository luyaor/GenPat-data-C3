{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33d60de8efa1c24fe7efad7f60dc06cb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9692094f73ca79c852b435d20ea0a8fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Breakpoint.java", "commitBeforeChange": "530cb3b64455d081e962324602750973729aa1fb", "commitAfterChange": "edb6c56f8ad5495255b4157f1e495f302271cd2d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "      public String toString()", "diff": ["-    if (_request != null) {", "+    if (_requests.size() > 0) {", "+      // All BreakpointRequests are identical-- one copy for each loaded", "+      //  class.  So just print info from the first one, and how many there are.", "-        \", method: \" + ((BreakpointRequest)_request).location().method() +", "-        \", codeIndex: \" + ((BreakpointRequest)_request).location().codeIndex() + \"]\";", "+        \", method: \" + _requests.elementAt(0).location().method() +", "+        \", codeIndex: \" + _requests.elementAt(0).location().codeIndex() +", "+        \", numRefTypes: \" + _requests.size() + \"]\";", "-    else", "+    else {", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb39c7eefa3a8dfa244cb130d9ea995b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "8ffb3ce85dd256ff9cb8d7378cb82fb3debde2f9", "commitAfterChange": "0df41f295768b78613155bc47fcd824786200608", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "   public static File getShortFile(File f) throws IOException", "signatureAfterChange": "   public static File getShortFile(File f) throws IOException", "diff": ["-            if (line.equals(f.getName())) {", "+            // do a case-insensitive comparison here to accomodate Windows", "+            // we later check if it's the same file", "+            if (line.toLowerCase().equals(f.getName().toLowerCase())) {", "-            else if (line.startsWith(f.getName()) && f.getName().contains(\"~\")) {", "+            else if (line.toLowerCase().startsWith(f.getName().toLowerCase()) && f.getName().contains(\"~\")) {", "-            else if (line.endsWith(\" \"+f.getName())) {", "+            else if (line.toLowerCase().endsWith(\" \"+f.getName().toLowerCase())) {"]}], "num": 10987}