{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "868a5846f82e268e9f5b07c749e114c3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a438a82ddcfd0db501bdfa72b5080c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 150, "signatureBeforeChange": "          public void currThreadSuspended()", "signatureAfterChange": "          public void currThreadSuspended()", "diff": ["-      //DrJava.consoleOut().println(\"showing resume, etc\");", "-      _setThreadDependentDebugMenuItems(true);", "-      _debugPanel.updateData();", "+      // Only change GUI from event-dispatching thread", "+      Runnable doCommand = new Runnable() {", "+        public void run() {", "+          //DrJava.consoleOut().println(\"showing resume, etc\");", "+          _setThreadDependentDebugMenuItems(true);", "+          //DrJava.consoleOut().println(\"done with MF.currThreadSuspended...\");", "+        }", "+      };", "+      SwingUtilities.invokeLater(doCommand);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a582be6a15f433868e16a695ec57ee6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "     public void currThreadSet(DebugThreadData thread)", "signatureAfterChange": "     public void currThreadSet(DebugThreadData thread)", "diff": ["-      _threadTable.repaint();", "+", "+      // Only change GUI from event-dispatching thread", "+      Runnable doCommand = new Runnable() {", "+        public void run() {", "+          updateData();", "+        }", "+      };", "+      SwingUtilities.invokeLater(doCommand);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9165efdf4b0d69668bb8549ea890484c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ReflectUtilTest.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testIsAnonymousClass()", "signatureAfterChange": "      public void testIsAnonymousClass()", "diff": ["-    assertTrue(isAnonymousClass(Predicate.TRUE.getClass()));", "-    assertTrue(isAnonymousClass(LambdaUtil.nullThunk().getClass()));", "+    assertTrue(isAnonymousClass(ANONYMOUS_EXCEPTION.getClass()));", "+    Runnable localRunnable = new Runnable() { public void run() {} };", "+    assertTrue(isAnonymousClass(localRunnable.getClass()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3475b11ee25f24bd95a8b631a1d896f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ReflectUtilTest.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public void testSimpleName()", "signatureAfterChange": "    public void testSimpleName()", "diff": ["-    assertEquals(\"anonymous Predicate\", simpleName(Predicate.TRUE.getClass()));", "+    assertEquals(\"anonymous RuntimeException\", simpleName(ANONYMOUS_EXCEPTION.getClass()));", "+    Runnable localRunnable = new Runnable() { public void run() {} };", "+    assertEquals(\"anonymous Runnable\", simpleName(localRunnable.getClass()));"]}], "num": 5632}