{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "340d9a998d066174d3e13d38ee087d81", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c1d36b9cee90f230264c4ef7d7f0440", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractSlaveJVM.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public final synchronized void quit()", "signatureAfterChange": "   public final synchronized void quit()", "diff": ["-    _log.log(this + \".quit() called\");", "+//    _log.log(this + \".quit() called\");", "+//    _master = null;", "+    ", "-              _log.log(\"Waiting for \" + AbstractSlaveJVM.this + \".quit() to exit\");", "+//              _log.log(\"Waiting for \" + AbstractSlaveJVM.this + \".quit() to exit\");", "-          Thread.sleep(100);  // This is kluge to allow the parent RMI calling thread to exit", "-    _log.log(this + \".quit() RMI call exited\");", "+//    _log.log(this + \".quit() RMI call exited\");", "-      _slaveJVMLock.notify();", "+      _slaveJVMLock.notify();  // There does not appear to be any constraint forcing this thread to exit before shutdown"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2affa7bf8e29f88adc727557727537a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "2df0898882e5e96efc3a0e1f26666331fe161926", "commitAfterChange": "149da2b3620a4f7e40666414f25f32856665a055", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public File getMainClassContainingFile()", "signatureAfterChange": "   public File getMainClassContainingFile()", "diff": ["-    _LOG.log(\"matching against: \"+getMainClass());", "-    ", "-      ", "-      _LOG.log(\"\\t\"+toMatch);", "-    ", "-    _LOG.log(\"\\t\"+toRet.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5922b5a848feffac15f621b2331b03e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "331da9dae5ca8d07aef3df8e995cb58d0f6f24d7", "commitAfterChange": "ad6842e7f3f5b3d0f8c5827298c4ec26a70a9f28", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": "   private String getNextIdentifier(final int startPos) throws ClassNameNotFoundException", "signatureAfterChange": "   private String getNextIdentifier(final int startPos) throws ClassNameNotFoundException", "diff": ["+//    _log.log(\"getNextIdentifer(\" + startPos + \") called\");", "+    ", "-      _log.log(\"In getNextIdentifer text = \\n\" + text);", "-      _log.log(\"index = \" + index + \"; length = \" + length);", "+//      _log.log(\"In getNextIdentifer text = \\n\" + text);", "+//      _log.log(\"index = \" + index + \"; length = \" + length);", "-      _log.log(\"endIndex = \" + endIndex);", "+//      _log.log(\"endIndex = \" + endIndex);"]}], "num": 29142}