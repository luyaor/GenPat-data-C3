{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea53ef7211e54b74e52d92cfaf52992f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26a79938f456f16bd8ca84e39e4358ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "8d3cdbacfda748aaaf1451c3632bfbbb860b1d39", "commitAfterChange": "69a380647f3d586f130ea02ad1e8381a390045e3", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "signatureAfterChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "diff": ["-    //DJError[] errors = _model.getCompileErrors();", "-", "-    //StringBuffer buf = new StringBuffer();", "-    //for (int i = 0; i < errors.length; i++) {", "-    //  buf.append(\"\\nerror #\" + i + \": \" + errors[i]);", "-    //}", "-", "-    assertEquals(name + \"compile errors > 0? numErrors =\" + numErrors, b, numErrors > 0);", "+    ", "+    assertEquals(name + \" compile errors > 0 ? numErrors = \" + numErrors, b, numErrors > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b540f86d42333b057ff76d0779a9193", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "signatureAfterChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "diff": ["-    CompilerError[] errors = _model.getCompileErrors();", "+    //CompilerError[] errors = _model.getCompileErrors();", "+    int numErrors = _model.getNumErrors();", "-    StringBuffer buf = new StringBuffer();", "-    for (int i = 0; i < errors.length; i++) {", "-      buf.append(\"\\nerror #\" + i + \": \" + errors[i]);", "-    }", "+    //StringBuffer buf = new StringBuffer();", "+    //for (int i = 0; i < errors.length; i++) {", "+    //  buf.append(\"\\nerror #\" + i + \": \" + errors[i]);", "+    //}", "-    assertEquals(name + \"compile errors > 0? errors=\" + buf,", "+    assertEquals(name + \"compile errors > 0? numErrors=\" + numErrors,", "-                 errors.length > 0);", "+                 numErrors > 0);"]}], "num": 23671}