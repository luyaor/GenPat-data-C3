{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d676d2ee320591b1279baf66b87704c1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "785bf1a1e95ab071cb45d28445a90167", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "commitAfterChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "methodNumberBeforeChange": 658, "methodNumberAfterChange": 650, "signatureBeforeChange": "          public void activeDocumentChanged(final OpenDefinitionsDocument active)", "signatureAfterChange": "          public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["+      assert EventQueue.isDispatchThread();", "-      Utilities.invokeLater(new Runnable() {  // invokeAndWait can create occasional deadlocks.", "-        public void run() {", "+//      Utilities.invokeLater(new Runnable() {  // invokeAndWait can create occasional deadlocks.", "+//        public void run() {", "-        }", "-      });", "+//        }", "+//      });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b67cdbb3e9294185e4a82cdac64cbf72", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 650, "methodNumberAfterChange": 660, "signatureBeforeChange": "          public void activeDocumentChanged(final OpenDefinitionsDocument active)", "signatureAfterChange": "          public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["-      assert EventQueue.isDispatchThread();", "-//      Utilities.invokeLater(new Runnable() {  // invokeAndWait can create occasional deadlocks.", "-//        public void run() {", "+      Utilities.invokeLater(new Runnable() {  // invokeAndWait can create occasional deadlocks.", "+        public void run() {", "-//        }", "-//      });", "+        }", "+      });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc3d47cf93f13886d4b0382a480a3cd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 660, "methodNumberAfterChange": 650, "signatureBeforeChange": "          public void activeDocumentChanged(final OpenDefinitionsDocument active)", "signatureAfterChange": "          public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["+      assert EventQueue.isDispatchThread();", "-      Utilities.invokeLater(new Runnable() {  // invokeAndWait can create occasional deadlocks.", "-        public void run() {", "+//      Utilities.invokeLater(new Runnable() {  // invokeAndWait can create occasional deadlocks.", "+//        public void run() {", "-        }", "-      });", "+//        }", "+//      });"]}], "num": 4022}