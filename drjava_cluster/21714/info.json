{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f36f583dd4dc74b7815349406cb727c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1708c8e051cdf60cc320a3c7cc88c550", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "commitAfterChange": "42161d6697319e0431a875a1f8336eb6cdd1fe73", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   synchronized void scrollToSource(LocatableEvent e)", "signatureAfterChange": "   synchronized void scrollToSource(LocatableEvent e)", "diff": ["-      String className = rt.name();", "-      String ps = System.getProperty(\"file.separator\");", "-      // replace periods with the System's file separator", "-      className = StringOps.replace(className, \".\", ps);", "-      ", "-      // crop off the $ if there is one and anything after it", "-      int indexOfDollar = className.indexOf('$');    ", "-      if (indexOfDollar > -1) {", "-        className = className.substring(0, indexOfDollar);", "+      String filename = \"\";", "+      try {", "+        filename = rt.sourceName();", "+      catch (AbsentInformationException aie) {", "+        // Don't know real source name:", "+        //   assume source name is same as file name", "+        String className = rt.name();", "+        String ps = System.getProperty(\"file.separator\");", "+        // replace periods with the System's file separator", "+        className = StringOps.replace(className, \".\", ps);", "+        ", "+        // crop off the $ if there is one and anything after it", "+        int indexOfDollar = className.indexOf('$');    ", "+        if (indexOfDollar > -1) {", "+          className = className.substring(0, indexOfDollar);", "+        }", "-      String filename = className + \".java\";", "-      // If not on sourcepath, check source root set (open files)", "+        filename = className + \".java\";", "+      }", "+        ", "+      // Check source root set (open files)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5988ed138c05810d282366c9f673c938", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "1313de8815d48e0a1c60eb5bee6900b6b7af3993", "commitAfterChange": "802c4acbf71daa5d149dbcd67d1f360241574951", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private JUnitError _makeJUnitError(TestFailure failure, String className, boolean isError, String fileName)", "signatureAfterChange": "   private JUnitError _makeJUnitError(TestFailure failure, List<String> classNames,                                      boolean isError, List<File> files)", "diff": ["-  private JUnitError _makeJUnitError(TestFailure failure, String className, boolean isError, String fileName) {", "-   ", "+  private JUnitError _makeJUnitError(TestFailure failure, List<String> classNames,", "+                                     boolean isError, List<File> files) {", "+", "-    ", "-    StringWriter sWriter = new StringWriter();", "-    PrintWriter pWriter  = new PrintWriter(sWriter);", "-    ", "-    failure.thrownException().printStackTrace(pWriter);", "-        ", "+", "+    String testString = failedTest.toString();", "+    int firstIndex = testString.indexOf('(') + 1;", "+    int secondIndex = testString.indexOf(')');", "+    String className = testString.substring(firstIndex, secondIndex);", "+    int indexOfClass = classNames.indexOf(className);", "+    File file;", "+    if (indexOfClass != -1) {", "+      file = files.get(indexOfClass);", "+    }", "+    else {", "+      file = _jmc.getFileForClassName(className);", "+    }", "+", "+//    String ps = System.getProperty(\"file.separator\");", "+//    // replace periods with the System's file separator", "+//    className = StringOps.replace(className, \".\", ps);", "+//", "+//    // crop off the $ if there is one and anything after it", "+//    int indexOfDollar = className.indexOf('$');", "+//    if (indexOfDollar > -1) {", "+//      className = className.substring(0, indexOfDollar);", "+//    }", "+//", "+//    String filename = className + \".java\";", "+", "-      ", "-      return new JUnitError(new File(fileName), lineNum, 0, exception,", "-                            ! (failure.thrownException() instanceof AssertionFailedError),", "-                            testName, stackTrace);", "+    boolean isFailure = (failure.thrownException() instanceof AssertionFailedError) &&", "+      !classNameAndTest.equals(\"junit.framework.TestSuite$1.warning\");", "+    return new JUnitError(file, lineNum, 0, exception, !isFailure, testName, className, stackTrace);"]}], "num": 21714}