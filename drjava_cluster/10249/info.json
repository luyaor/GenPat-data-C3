{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f4a02490fb39d5df2d9d2e3c98a83f3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58ea5c1628df84d5972eef37e7960af3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SimpleDocumentRegion.java", "commitBeforeChange": "d57a4715eeda5394b496008be220f6252b47b950", "commitAfterChange": "ac02f569f5916c295bec9f11458dcf6db5964244", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "   public String toString()", "diff": ["-  ", "+  public Position getEndPosition() { return _endPosition; }", "-    return (_doc != null ? _doc.toString() : \"null\") + \"[\" + _startOffset + \" .. \" + _endOffset + \"]\";", "+    return (/* _doc != null ? */ _doc.toString() /* : \"null\" */) + \"[\" + getStartOffset() + \" .. \" + getEndOffset() + \"]\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f51608a8271685c0e931a70bbfe69a9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "    private static void writeSafeValueToString(SymbolData sd, int baseIndent, String methodName)", "signatureAfterChange": "    private static void writeSafeValueToString(SymbolData sd, int baseIndent, String methodName)", "diff": ["-    String[] primitiveTypes = new String[]{\"byte[]\", \"short[]\", \"char[]\", \"int[]\", \"long[]\", \"float[]\", \"double[]\", \"boolean[]\"};", "+    String[] primitiveTypes = new String[]{\"byte[]\", \"short[]\", \"char[]\", \"int[]\", \"long[]\", \"float[]\", \"double[]\",", "+      \"boolean[]\"};", "-    _writeToFileOut(indentString(baseIndent, 1) + \" * This method is automatically generated by the LanguageLevelConverter.\" + newLine);", "-    _writeToFileOut(indentString(baseIndent, 1) + \" * As a helper to toString(), it recursively generates a string for any object,\" + newLine);", "+    _writeToFileOut(indentString(baseIndent, 1) + ", "+                    \" * This method is automatically generated by the LanguageLevelConverter.\" + newLine);", "+    _writeToFileOut(indentString(baseIndent, 1) + ", "+                    \" * As a helper to toString(), it recursively generates a string for any object,\" + newLine);", "-    _writeToFileOut(indentString(baseIndent, 1) + \"private java.lang.String \" + methodName + \"(java.lang.Object o) {\" + newLine + newLine);", "+    _writeToFileOut(indentString(baseIndent, 1) + \"private java.lang.String \" + methodName + \"(java.lang.Object o) {\" +", "+                    newLine + newLine);", "-      _writeToFileOut(indentString(baseIndent, 5) + \"return arrayToString((java.lang.Object[]) o, new java.util.HashSet<java.lang.Object[]>());\" + newLine);", "+      _writeToFileOut(indentString(baseIndent, 5) + ", "+                      \"return arrayToString((java.lang.Object[]) o, new java.util.HashSet<java.lang.Object[]>());\" + ", "+                      newLine);", "-      _writeToFileOut(indentString(baseIndent, 5) + \"return arrayToString((java.lang.Object[]) o, new java.util.HashSet());\" + newLine);", "+      _writeToFileOut(indentString(baseIndent, 5) + ", "+                      \"return arrayToString((java.lang.Object[]) o, new java.util.HashSet());\" + newLine);", "-      _writeToFileOut(indentString(baseIndent, 3) + \"public java.lang.String arrayToString(\" + type + \" array) {\" + newLine);", "-      _writeToFileOut(indentString(baseIndent, 4) + \"java.lang.StringBuffer result = new java.lang.StringBuffer();\" + newLine);", "+      _writeToFileOut(indentString(baseIndent, 3) + \"public java.lang.String arrayToString(\" + type + \" array) {\" +", "+                      newLine);", "+      _writeToFileOut(indentString(baseIndent, 4) + \"java.lang.StringBuffer result = new java.lang.StringBuffer();\" +", "+                      newLine);", "-      _writeToFileOut(indentString(baseIndent, 3) + \"public java.lang.String arrayToString(java.lang.Object[] array, java.util.HashSet<java.lang.Object[]> alreadyPrinted) {\" + newLine);", "+      _writeToFileOut(indentString(baseIndent, 3) + ", "+                      \"public java.lang.String arrayToString(java.lang.Object[] array, \" + ", "+                      \"java.util.HashSet<java.lang.Object[]> alreadyPrinted) {\" + newLine);", "-      _writeToFileOut(indentString(baseIndent, 3) + \"public java.lang.String arrayToString(java.lang.Object[] array, java.util.HashSet alreadyPrinted) {\" + newLine);", "+      _writeToFileOut(indentString(baseIndent, 3) + ", "+                      \"public java.lang.String arrayToString(java.lang.Object[] array, \" + ", "+                      \"java.util.HashSet alreadyPrinted) {\" + newLine);", "-    _writeToFileOut(indentString(baseIndent, 4) + \"if (alreadyPrinted.contains(array)) { return (\\\"[...]\\\"); }\" + newLine);", "+    _writeToFileOut(indentString(baseIndent, 4) + ", "+                    \"if (alreadyPrinted.contains(array)) { return (\\\"[...]\\\"); }\" + newLine);", "-    _writeToFileOut(indentString(baseIndent, 4) + \"java.lang.StringBuffer result = new java.lang.StringBuffer();\" + newLine);", "+    _writeToFileOut(indentString(baseIndent, 4) + ", "+                    \"java.lang.StringBuffer result = new java.lang.StringBuffer();\" + newLine);", "-    _writeToFileOut(indentString(baseIndent, 6) + \"result.append(arrayToString((java.lang.Object[]) array[i], alreadyPrinted));\" + newLine);", "+    _writeToFileOut(indentString(baseIndent, 6) + ", "+                    \"result.append(arrayToString((java.lang.Object[]) array[i], alreadyPrinted));\" + newLine);", "-    _writeToFileOut(indentString(baseIndent, 2) + \"else if (o.getClass().isArray()) { return new ArrayToString().valueFor(o); }\" + newLine);", "+    _writeToFileOut(indentString(baseIndent, 2) + ", "+                    \"else if (o.getClass().isArray()) { return new ArrayToString().valueFor(o); }\" + newLine);"]}], "num": 10249}