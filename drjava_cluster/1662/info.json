{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "379791745bbde4fc2337c5ee2ec2cd52", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "164163b69ab19c952c80348b9ff5b62b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SpecialTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public TypeData forInitializedVariableDeclarator(InitializedVariableDeclarator that)", "signatureAfterChange": "   public TypeData forInitializedVariableDeclarator(InitializedVariableDeclarator that)", "diff": ["-    final SymbolData type_result = getSymbolData(that.getType().getName(), _data, that.getType());", "-    final TypeData name_result = that.getName().visit(this); //we think this is always null", "+    final SymbolData typeRes = getSymbolData(that.getType().getName(), _data, that.getType());", "+    final TypeData nameRes = that.getName().visit(this); //we think this is always null", "-      initializer_result = forArrayInitializerHelper((ArrayInitializer) that.getInitializer(), type_result);", "+      initializer_result = forArrayInitializerHelper((ArrayInitializer) that.getInitializer(), typeRes);", "-    return forInitializedVariableDeclaratorOnly(that, type_result, name_result, initializer_result);", "+    return forInitializedVariableDeclaratorOnly(that, typeRes, nameRes, initializer_result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ca66dee3f3d65580c5bbbcae07565be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavadocFrame.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private static File _parsePackagesFile(File packages, File destDir)", "signatureAfterChange": "   private static File _parsePackagesFile(File packages, File destDir)", "diff": ["-              String filename = line.substring(startIndex, endIndex);", "-              return new File(destDir, filename);", "+              String fileName = line.substring(startIndex, endIndex);", "+              return new File(destDir, fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "710983874946d2efb625d342845a4e87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "591ec87995880046281596623701cb5a561fc66e", "commitAfterChange": "ce73fdb27a8e7aa886580e240ca54bfd98e64031", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      Node(T item, Node<T> previous, Node<T> successor)", "signatureAfterChange": "      Node(T item, Node<T> before, Node<T> after)", "diff": ["-    Node(T item, Node<T> previous, Node<T> successor) {", "+    Node(T item, Node<T> before, Node<T> after) {", "-      pred = previous;", "-      succ = successor;", "+      pred = before;", "+      succ = after;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3fda945eec52228e29e25a63e28acc4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SpecialTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public TypeData forInitializedVariableDeclaratorOnly(InitializedVariableDeclarator that, TypeData type_result,                                                         TypeData name_result, TypeData initializer_result)", "signatureAfterChange": "   public TypeData forInitializedVariableDeclaratorOnly(InitializedVariableDeclarator that, TypeData typeRes,                                                         TypeData nameRes, TypeData initializer_result)", "diff": ["-  public TypeData forInitializedVariableDeclaratorOnly(InitializedVariableDeclarator that, TypeData type_result, ", "-                                                       TypeData name_result, TypeData initializer_result) {", "+  public TypeData forInitializedVariableDeclaratorOnly(InitializedVariableDeclarator that, TypeData typeRes, ", "+                                                       TypeData nameRes, TypeData initializer_result) {", "-      //we know type_result is always a SymbolData.", "-      else if (!_isAssignableFrom(type_result.getSymbolData(), initializer_result.getSymbolData())) {", "-        _addError(\"Type: \\\"\" + type_result.getName() + \"\\\" expected, instead found type: \\\"\" + ", "+      //we know typeRes is always a SymbolData.", "+      else if (!_isAssignableFrom(typeRes.getSymbolData(), initializer_result.getSymbolData())) {", "+        _addError(\"Type: \\\"\" + typeRes.getName() + \"\\\" expected, instead found type: \\\"\" + "]}], "num": 1662}