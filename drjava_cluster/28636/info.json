{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ebab3ca4a714d63d9cf2ddd888446320", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d5ec49e26b1907e929c91e5c73f07b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 83, "signatureBeforeChange": "   final public ContinueStatement continueStatement() throws ParseException", "signatureAfterChange": "   final public ContinueStatement continueStatement() throws ParseException", "diff": ["-    b = jj_consume_token(CONTINUE);", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case IDENTIFIER:", "-      id = jj_consume_token(IDENTIFIER);", "-      break;", "-    default:", "-      jj_la1[79] = jj_gen;", "-      ;", "+    try {", "+      b = jj_consume_token(CONTINUE);", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case IDENTIFIER:", "+        id = jj_consume_token(IDENTIFIER);", "+        break;", "+      default:", "+        jj_la1[80] = jj_gen;", "+        ;", "+      }", "+      e = jj_consume_token(SEMICOLON);", "+        {if (true) return new ContinueStatement((id != null) ? id.image : null,", "+                                     filename,", "+                                     b.beginLine, b.beginColumn,", "+                                     e.endLine,   e.endColumn);}", "+    } catch (ParseException pe) {", "+      _throwParseException(pe,\"Invalid continue statement\");", "-    e = jj_consume_token(SEMICOLON);", "-      {if (true) return new ContinueStatement((id != null) ? id.image : null,", "-                                   filename,", "-                                   b.beginLine, b.beginColumn,", "-                                   e.endLine,   e.endColumn);}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd5f5411ac27b4dd22be4d60a383bd68", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 82, "signatureBeforeChange": "   final public BreakStatement breakStatement() throws ParseException", "signatureAfterChange": "   final public BreakStatement breakStatement() throws ParseException", "diff": ["-    b = jj_consume_token(BREAK);", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case IDENTIFIER:", "-      id = jj_consume_token(IDENTIFIER);", "-      break;", "-    default:", "-      jj_la1[78] = jj_gen;", "-      ;", "+    try {", "+      b = jj_consume_token(BREAK);", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case IDENTIFIER:", "+        id = jj_consume_token(IDENTIFIER);", "+        break;", "+      default:", "+        jj_la1[79] = jj_gen;", "+        ;", "+      }", "+      e = jj_consume_token(SEMICOLON);", "+        {if (true) return new BreakStatement((id != null) ? id.image : null,", "+                                  filename,", "+                                  b.beginLine, b.beginColumn,", "+                                  e.endLine,   e.endColumn);}", "+    } catch (ParseException pe) {", "+      _throwParseException(pe,\"Invalid break statement\");", "-    e = jj_consume_token(SEMICOLON);", "-      {if (true) return new BreakStatement((id != null) ? id.image : null,", "-                                filename,", "-                                b.beginLine, b.beginColumn,", "-                                e.endLine,   e.endColumn);}"]}], "num": 28636}