{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30ca19c25d34d6b542f9085b752b113a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a257bffe7929fd13da5a7a7c85bda19", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOpsTest.java", "commitBeforeChange": "e25e198d3461a3829d1b121d86e81cf53dcdcedd", "commitAfterChange": "37e4818ebb05d7f1fa17c0c24d15a4b05e27b515", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "    public void testMakeRelativeTo() throws IOException, SecurityException", "signatureAfterChange": "      public void testMakeRelativeTo() throws IOException, SecurityException", "diff": ["+  ", "-                 FileOps.makeRelativeTo(abs,base).getPath());", "+                 fixPathFormat(FileOps.makeRelativeTo(abs,base).getPath()));", "-                 FileOps.makeRelativeTo(abs,base).getPath());", "+                 fixPathFormat(FileOps.makeRelativeTo(abs,base).getPath()));", "-                 FileOps.makeRelativeTo(abs,base).getPath());", "+                 fixPathFormat(FileOps.makeRelativeTo(abs,base).getPath()));", "-                 FileOps.makeRelativeTo(abs,base).getPath());", "+                 fixPathFormat(FileOps.makeRelativeTo(abs,base).getPath()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64161109aa7875f6871ef5d327d38aba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r   public void testSetFromNode() throws Exception", "signatureAfterChange": "   public void testSetFromNode() throws Exception", "diff": ["-  }\r", "-  public void testSetFromNode() throws Exception {\r", "-    XMLConfig xc = new XMLConfig();\r", "-    Node n = xc.set(\"foo/bar\", \"abc\", false);\r", "-    \r", "-    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar>abc</bar>\"+NL+\"</foo>\"+NL, xc.toString());\r", "-    assertEquals(\"abc\", xc.get(\"foo/bar\"));\r", "-    \r", "-    xc.set(\".fuz\", \"def\", n, false);\r", "-    \r", "-    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"</foo>\"+NL, xc.toString());\r", "-    assertEquals(\"abc\", xc.get(\"foo/bar\"));\r", "-    \r", "-    n = xc.set(\"fum\", \"\", n.getParentNode(), false);\r", "-    \r", "-    if (System.getProperty(\"java.version\").startsWith(\"1.5\")) {\r", "-      assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"  <fum></fum>\"+NL+\"</foo>\"+NL,\r", "-                   xc.toString());\r", "-    }\r", "-    else {\r", "-      assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"  <fum/>\"+NL+\"</foo>\"+NL,\r", "-                   xc.toString());\r", "-    }\r", "-    assertEquals(\"\", xc.get(\"foo/fum\"));\r", "-    \r", "-    xc.set(\"file\", \"test1.txt\", n, false);\r", "-    xc.set(\"file\", \"test2.txt\", n, false);\r", "-    \r", "-    if (System.getProperty(\"java.version\").startsWith(\"1.5\")) {\r", "-      assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL\r", "-                     + \"  <fum><file>test1.txt</file>\"+NL+\"    <file>test2.txt</file>\"+NL+\"  </fum>\"+NL+\"</foo>\"+NL,\r", "-                   xc.toString());\r", "-    }\r", "-    else {\r", "-      assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL\r", "-                     + \"  <fum>\"+NL+\"    <file>test1.txt</file>\"+NL+\"    <file>test2.txt</file>\"+NL+\"  </fum>\"+NL+\"</foo>\"+NL,\r", "-                   xc.toString());\r", "-    }\r", "-    List<String> r = xc.getMultiple(\"foo/fum/file\");\r", "-    assertEquals(2, r.size());\r", "-    assertEquals(\"test1.txt\", r.get(0));\r", "-    assertEquals(\"test2.txt\", r.get(1));\r", "-  }\r", "+  }", "+  public void testSetFromNode() throws Exception {", "+    XMLConfig xc = new XMLConfig();", "+    Node n = xc.set(\"foo/bar\", \"abc\", false);", "+    ", "+    assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar>abc</bar>\"+NL+\"</foo>\"+NL), xc.toString());", "+    assertEquals(\"abc\", xc.get(\"foo/bar\"));", "+    ", "+    xc.set(\".fuz\", \"def\", n, false);", "+    ", "+    assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"</foo>\"+NL), xc.toString());", "+    assertEquals(\"abc\", xc.get(\"foo/bar\"));", "+    ", "+    n = xc.set(\"fum\", \"\", n.getParentNode(), false);", "+    ", "+    if (System.getProperty(\"java.version\").startsWith(\"1.5\")) {", "+      assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"  <fum></fum>\"+NL+\"</foo>\"+NL),", "+                   xc.toString());", "+    }", "+    else {", "+      assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"  <fum/>\"+NL+\"</foo>\"+NL),", "+                   xc.toString());", "+    }", "+    assertEquals(\"\", xc.get(\"foo/fum\"));", "+    ", "+    xc.set(\"file\", \"test1.txt\", n, false);", "+    xc.set(\"file\", \"test2.txt\", n, false);", "+    ", "+    if (System.getProperty(\"java.version\").startsWith(\"1.5\")) {", "+      assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL", "+                                 + \"  <fum><file>test1.txt</file>\"+NL+\"    <file>test2.txt</file>\"+NL+\"  </fum>\"+NL+\"</foo>\"+NL),", "+                   xc.toString());", "+    }", "+    else {", "+      assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL", "+                                 + \"  <fum>\"+NL+\"    <file>test1.txt</file>\"+NL+\"    <file>test2.txt</file>\"+NL+\"  </fum>\"+NL+\"</foo>\"+NL),", "+                   xc.toString());", "+    }", "+    List<String> r = xc.getMultiple(\"foo/fum/file\");", "+    assertEquals(2, r.size());", "+    assertEquals(\"test1.txt\", r.get(0));", "+    assertEquals(\"test2.txt\", r.get(1));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcea464a13cd5dd7b8bde4e587dbfc69", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedLevelTest.java", "commitBeforeChange": "22d657e12f9772e827da127651c8e929ac3086b2", "commitAfterChange": "b00da75251cc187a59120994342504cc3f5e9bfa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testSuccessful()", "signatureAfterChange": "   public void testSuccessful()", "diff": ["-                       IOUtil.toString(correctFile),", "-                       IOUtil.toString(resultingFile));", "+                       lf(IOUtil.toString(correctFile)),", "+                       lf(IOUtil.toString(resultingFile)));", "-                         IOUtil.toString(correctFile),", "-                         IOUtil.toString(resultingFile));", "+                         lf(IOUtil.toString(correctFile)),", "+                         lf(IOUtil.toString(resultingFile)));", "-                           IOUtil.toString(correctFile),", "-                           IOUtil.toString(resultingFile));", "+                           lf(IOUtil.toString(correctFile)),", "+                           lf(IOUtil.toString(resultingFile)));"]}], "num": 26394}