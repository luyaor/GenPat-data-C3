{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16512a634977d47967dc795d517c1787", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0dd785b2927a0cfd26fab9e9f2c6fdd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "fb61bb542bf295f9ff563d4fe1831b256b325388", "commitAfterChange": "6a5c20e1ee845b9752ac481574f6a7bee8c034e1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void junitRunning()", "signatureAfterChange": "     public void junitTestEndedCount(OpenDefinitionsDocument doc, String name,                                     boolean wasSuccessful, boolean causedError)", "diff": ["-    public void junitRunning() {", "-      junitRunningCount++;", "+    }", "+    public void junitTestEndedCount(OpenDefinitionsDocument doc, String name,", "+                                    boolean wasSuccessful, boolean causedError) {", "+      junitTestEndedCount++;", "+      assertTrue(\"junitTestEndedCount should be same as junitTestStartedCount\",", "+                 junitTestStartedCount == junitTestEndedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c274a1225cbb95b9f5862e038120b66f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "commitAfterChange": "62776e907e3e6dddd6b4161559ae3b70f27cc2e5", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 10, "signatureBeforeChange": "    public static boolean bootClassPathHasJSR14v24()", "signatureAfterChange": "    public static boolean canLoad(ClassLoader cl, String className)", "diff": ["+  /* Tests whether the specified class loader can load the specifed class */", "+   public static boolean canLoad(ClassLoader cl, String className) {", "+    try {", "+      cl.loadClass(className);", "+      return true;", "+    }", "+    catch(ClassNotFoundException e) { return false; }", "+    catch(RuntimeException e) { return false; }", "+  }", "-", "-  public static boolean bootClassPathHasJSR14v24() {", "-    try {", "-      Class.forName(\"com.sun.javadoc.ParameterizedType\");", "-      return true;", "-    }", "-    catch (Throwable t) { return false; }", "-  }"]}], "num": 6174}