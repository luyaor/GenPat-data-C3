{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48283e95e7de48602075633777cfd0cf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5bbf34964400f632d55b02cf4b2feb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public boolean setToDefaultInterpreter()", "signatureAfterChange": "   public Option<Pair<Boolean, Boolean>> setToDefaultInterpreter()", "diff": ["-  public boolean setToDefaultInterpreter() {", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (! _restart) return false;", "-    ", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try {", "-      boolean result = slave.setToDefaultInterpreter();", "-      _currentInterpreterName = DEFAULT_INTERPRETER_NAME;", "-      return result;", "-    }", "-    catch (ConnectIOException ce) {", "-      _log.log(this + \"could not connect to the interpreterJVM after killing it.  Threw \" + ce);", "-      return false;", "-    }", "-    catch (RemoteException re) {", "-      _threwException(re);", "-      return false;", "-    }", "+  public Option<Pair<Boolean, Boolean>> setToDefaultInterpreter() {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return Option.none(); }", "+    try { return Option.some(remote.setToDefaultInterpreter()); }", "+    catch (RemoteException e) { _handleRemoteException(e); return Option.none(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7d0aa5ba4b8b86cf2173f93e62f536d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void setShowMessageOnResetFailure(boolean show)", "signatureAfterChange": "   public Option<Pair<Boolean, Boolean>> setActiveInterpreter(String name)", "diff": ["-    */", "-  public void setShowMessageOnResetFailure(boolean show) {", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (! _restart) return;", "-    ", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.setShowMessageOnResetFailure(show); }", "-    catch (RemoteException re) { _threwException(re); }", "-  }", "+  public Option<Pair<Boolean, Boolean>> setActiveInterpreter(String name) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return Option.none(); }", "+    try { return Option.some(remote.setActiveInterpreter(name)); }", "+    catch (RemoteException e) { _handleRemoteException(e); return Option.none(); }"]}], "num": 27768}