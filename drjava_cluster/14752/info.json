{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51285da3d1ea90f405c16f333b5737a4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5fe18640b4b5faa28f7b9cd7575498", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "commitAfterChange": "2df7289d55456372fbaf4e3ab78549d8571648f8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void compile(OpenDefinitionsDocument doc) throws IOException", "signatureAfterChange": "   public void compile(OpenDefinitionsDocument doc) throws IOException", "diff": ["+    */", "+  public void compile(OpenDefinitionsDocument doc) throws IOException {", "+    if (_prepareForCompile()) {", "+      _doCompile(Arrays.asList(doc));", "+    }", "+  }", "-   */", "-  public void compile(OpenDefinitionsDocument doc) throws IOException {", "-    ", "-    List<OpenDefinitionsDocument> defDocs;", "-    defDocs = _model.getOpenDefinitionsDocuments(); ", "-    ", "-    // Only compile if all docs are saved.  In project mode, untitled docs are ignored.", "-    if (_hasModifiedFiles(defDocs)) _notifier.saveBeforeCompile();", "-    if (_hasModifiedFiles(defDocs)) return;  /* Abort compilation */", "-    ", "-    // In project mode, untitled files are ignored; check if doc is untitled. ", "-    if (doc.isUntitled()) {", "-      _notifier.saveUntitled();", "-      if (doc.isUntitled()) return;", "-    }", "-    ", "-    File f = doc.getFile();", "-    File[] files, excludedFiles;", "-    ", "-    if (endsWithExt(f, EXTENSIONS)) {", "-      files = new File[]{f};", "-      excludedFiles = new File[0];", "-    }", "-    else {", "-      files = new File[0];", "-      excludedFiles = new File[]{f};", "-    }", "-    doc.setCachedClassFile(null); // clear cached class file", "-    _rawCompile(new File[] { doc.getSourceRoot() }, files, excludedFiles); ", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f49136e10e074f0527564136cbbf0043", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void openFile(FileOpenSelector com) throws IOException", "signatureAfterChange": "   public OpenDefinitionsDocument openFile(FileOpenSelector com)     throws IOException, OperationCanceledException", "diff": ["+  public OpenDefinitionsDocument openFile(FileOpenSelector com)", "+    throws IOException, OperationCanceledException", "+  {", "+    DefinitionsDocument tempDoc = (DefinitionsDocument)", "+      _editorKit.createDefaultDocument();", "+      _editorKit.read(new FileReader(file), tempDoc, 0);", "+      tempDoc.setFile(file);", "+      tempDoc.resetModification();", "+", "+      OpenDefinitionsDocument doc = new DefinitionsDocumentHandler(tempDoc);", "+      _definitionsDocs.add(doc);", "+", "+          l.fileOpened(file);", "+", "+      return doc;", "-  public void openFile(FileOpenSelector com) throws IOException {", "-    boolean canOpen = canAbandonFile();", "-    if (canOpen) {", "-      DefinitionsDocument tempDoc = (DefinitionsDocument)", "-        _editorKit.createDefaultDocument();", "-      try {", "-        final File file = com.getFile();", "-        _editorKit.read(new FileReader(file), tempDoc, 0);", "-        tempDoc.setFile(file);", "-        tempDoc.resetModification();", "-        _definitionsDoc = tempDoc;", "-            l.fileOpened(file);", "-      }", "-      catch (OperationCanceledException oce) {", "-        // do nothing", "-      }", "-      catch (BadLocationException docFailed) {", "-        throw new UnexpectedException(docFailed);"]}], "num": 14752}