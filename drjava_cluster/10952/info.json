{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c68ec49af10fe1bbc07ac7ce09216c8a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e0d0ac828f14270e1139ea8a77141bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public abstract ClassType lookupStaticClass(Type t, String name, Iterable<? extends Type> typeArgs)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "   public abstract ClassType lookupStaticClass(Type t, String name, Iterable<? extends Type> typeArgs,                                               Access.Module accessModule)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-  public abstract ClassType lookupStaticClass(Type t, String name, Iterable<? extends Type> typeArgs)", "+  public abstract ClassType lookupStaticClass(Type t, String name, Iterable<? extends Type> typeArgs,", "+                                              Access.Module accessModule)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcd3d9884b952815e5fb32d6f5f77475", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "     public abstract ClassType lookupClass(Type t, String name, Iterable<? extends Type> typeArgs)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "     public abstract ClassType lookupClass(Type t, String name, Iterable<? extends Type> typeArgs,                                         Access.Module accessModule)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-  public abstract ClassType lookupClass(Type t, String name, Iterable<? extends Type> typeArgs)", "+  public abstract ClassType lookupClass(Type t, String name, Iterable<? extends Type> typeArgs,", "+                                        Access.Module accessModule)"]}], "num": 10952}