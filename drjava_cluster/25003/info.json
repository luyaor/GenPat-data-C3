{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cce655cfd02390bdde330fe64954a862", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d371e9923a5a2ce6a0d26d11131050f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "c88bf4a527291490e603bb8724d52a101cc61a60", "commitAfterChange": "9ac042462ff2ccafde5facafd742598846cdb098", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 33, "signatureBeforeChange": "   private int _updateFree(ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private int _updateFree(ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["+    _combineCurrentAndNextIfFind(\"\\\\\",\"'\",copyCursor);  // \\-'", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\'\",copyCursor);// \\-\\'", "+    else if (type.equals(\"\\'\")) {", "+      // make sure this is a OPEN single quote", "+      if (copyCursor.current().isClosed()) {", "+        copyCursor.current().flip();", "+      }", "+      copyCursor.current().setState(FREE);", "+      copyCursor.next();", "+      return INSIDE_SINGLE_QUOTE;", "+    }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3099d2ddba1f07b714653acd2649b4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "c88bf4a527291490e603bb8724d52a101cc61a60", "commitAfterChange": "9ac042462ff2ccafde5facafd742598846cdb098", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 33, "signatureBeforeChange": "   private int _updateFree(ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private int _updateFree(ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["+    _combineCurrentAndNextIfFind(\"\\\\\",\"'\",copyCursor);  // \\-'", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\'\",copyCursor);// \\-\\'", "+    else if (type.equals(\"\\'\")) {", "+      // make sure this is a OPEN single quote", "+      if (copyCursor.current().isClosed()) {", "+        copyCursor.current().flip();", "+      }", "+      copyCursor.current().setState(FREE);", "+      copyCursor.next();", "+      return INSIDE_SINGLE_QUOTE;", "+    }", "+    }", "+  }"]}], "num": 25003}