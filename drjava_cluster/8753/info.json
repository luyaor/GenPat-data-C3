{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "faa5daa7cc750e5751b2ee7670c15481", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21e33278c3d23da24e3bc3736d868e4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "b2d820b253c15b02ecb50e43e9a336a56dadd45e", "commitAfterChange": "a80c6de11e537b6579c447ea812ef2f4f98b5f2f", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 63, "signatureBeforeChange": "   private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className,                               final boolean shouldHighlight)", "signatureAfterChange": "   private void openAndScroll(final OpenDefinitionsDocument doc, int line, String className,                               final boolean shouldHighlight)", "diff": ["-  private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className, ", "+  private void openAndScroll(final OpenDefinitionsDocument doc, int line, String className, ", "+      if (LanguageLevelStackTraceMapper.isLLFile(doc.getRawFile())) {", "+        // map J", "+      }", "+      final int llLine = line;", "-      EventQueue.invokeLater(new Runnable() { public void run() { _notifier.threadLocationUpdated(doc, line, shouldHighlight); } });", "+      EventQueue.invokeLater(new Runnable() { public void run() { _notifier.threadLocationUpdated(doc, llLine, shouldHighlight); } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d4c8e5a66c7b599d95c82f278dca479", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 381, "signatureBeforeChange": "   private OpenDefinitionsDocument _rawOpenFile(File file) throws IOException, AlreadyOpenException", "signatureAfterChange": "   private OpenDefinitionsDocument _rawOpenFile(File file) throws IOException, AlreadyOpenException", "diff": ["-    if (openDoc != null) throw new AlreadyOpenException(openDoc);", "+    if (openDoc != null) throw new AlreadyOpenException(openDoc); // handled in MainFrame.openFile(...)", "-      doc.setPackage(df.getPackage());", "+      String pkg = df.getPackage();", "+      doc.setPackage(pkg);  // Trust information in the project file; if it is wrong, _packageName invariant is broken", "+    else {", "+//      Utilities.show(\"Opened a file \" + file.getName() + \" that is not a DocFile\");", "+      doc.setPackage(doc.getPackageNameFromDocument()); // get the package name from the file; forces file to be read", "+    }"]}], "num": 8753}