{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e771a800be8ee23850952cadbb3c5a7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "488cfe02744ca0f52f50292a769e7200", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "12b972c6351f6122675c003ccbc59ef481c89cda", "commitAfterChange": "b10686f6739b4554b283179f3edc2b09ee48a09a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   @Override public TypeContext visit(MethodDeclaration node)", "signatureAfterChange": "   @Override public TypeContext visit(MethodDeclaration node)", "diff": ["-    node.getReturnType().acceptVisitor(sigChecker);", "+", "+    Type returnT = node.getReturnType().acceptVisitor(sigChecker);", "+    setErasedType(node, ts.erasedClass(returnT));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3ab13b34fa1630bdcc7120aeb02bc53", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassMemberChecker.java", "commitBeforeChange": "12b972c6351f6122675c003ccbc59ef481c89cda", "commitAfterChange": "b10686f6739b4554b283179f3edc2b09ee48a09a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override public Void visit(MethodDeclaration node)", "signatureAfterChange": "      @Override public Void visit(MethodDeclaration node)", "diff": ["-    node.getReturnType().acceptVisitor(sigChecker);", "+    ", "+    Type returnT = node.getReturnType().acceptVisitor(sigChecker);", "+    setErasedType(node, _opt.typeSystem().erasedClass(returnT));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebb1618c1500d5e16aaf903867a3eba5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "e7fa83968a0076b95166203c3ff9a5bddde8dfee", "commitAfterChange": "b2bccf49a3d470addd7a5aec1fd2eaf00accbe3b", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "   @Override public Type visit(ArrayTypeName node)", "signatureAfterChange": "   @Override public Type visit(ArrayTypeName node)", "diff": ["-    return setType(node, new SimpleArrayType(elementType));", "+    Type arrayT = node.isVararg() ? new VarargArrayType(elementType) :", "+                                    new SimpleArrayType(elementType);", "+    return setType(node, arrayT);"]}], "num": 903}