{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8531fde8b1b21dd42170d9e11c053ac8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ad14c6cbc4eb8a464686e95a20750ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 51, "signatureBeforeChange": "   public void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)     throws OperationCanceledException", "signatureAfterChange": "   public void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)     throws OperationCanceledException", "diff": ["+    assert isWriteLocked();", "+    ", "-    acquireWriteLock();", "+//    acquireWriteLock();", "-        Position oldCurrentPosition = createUnwrappedPosition(_currentLocation);", "-        int lineStart = getLineStartPos(selStart);", "-        if (lineStart <  0) lineStart = 0;", "-        setCurrentLocation(lineStart);", "+        Position oldPosition = createUnwrappedPosition(_currentLocation);", "+        int lineStart = _getLineStartPos(selStart);", "+        if (lineStart <  0) lineStart = 0;  // selStart on first line", "+        _setCurrentLocation(lineStart);", "-          _setCurrentLocation(oldCurrentPosition.getOffset());", "-          if (onlyWhiteSpaceBeforeCurrent()) {", "-            int space = getWhiteSpace();", "-            _reduced.move(space);", "-            _currentLocation = _currentLocation + space;", "-          }", "+          _setCurrentLocation(oldPosition.getOffset()); // moves currentLocation back to original offset on line", "+          if (onlyWhiteSpaceBeforeCurrent()) _move(_getWhiteSpace());  // passes any additional spaces before firstNonWS", "-    catch (Throwable t) { throw new UnexpectedException(t); }", "-    finally { releaseWriteLock(); } ", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "+//    finally { releaseWriteLock(); } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ddfa9b698beda4ee48f3c7364d5e99d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "commitAfterChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)     throws OperationCanceledException", "signatureAfterChange": "   public void indentLines(int selStart, int selEnd, Indenter.IndentReason reason, ProgressMonitor pm)     throws OperationCanceledException", "diff": ["-      synchronized(_reduced) {", "-        if (selStart == selEnd) {  // single line to indent", "+//      synchronized(_reduced) {   // Unnecessary. Write access is exclusive.", "+      if (selStart == selEnd) {  // single line to indent", "-          Position oldCurrentPosition = createUnwrappedPosition(_currentLocation);", "-          ", "-          // Indent, updating current location if necessary.", "+        Position oldCurrentPosition = createUnwrappedPosition(_currentLocation);", "+        ", "+        // Indent, updating current location if necessary.", "-          if (_indentLine(reason)) {", "-            _setCurrentLocation(oldCurrentPosition.getOffset());", "-            if (onlyWhiteSpaceBeforeCurrent()) {", "-              int space = getWhiteSpace();", "-              move(space);", "-            }", "+        if (_indentLine(reason)) {", "+          _setCurrentLocation(oldCurrentPosition.getOffset());", "+          if (onlyWhiteSpaceBeforeCurrent()) {", "+            int space = getWhiteSpace();", "+            move(space);", "-        else _indentBlock(selStart, selEnd, reason, pm);", "+      else _indentBlock(selStart, selEnd, reason, pm);", "+//      }"]}], "num": 3721}