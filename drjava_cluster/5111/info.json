{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f982317e9c365e328e4b6f8523d42c1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27134017130b43b1367948b58f233173", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "b069e2bfa2f8651c897cd701a15acb237a3766d7", "commitAfterChange": "bf2319a0fd4ff0da05d171cf995d395154267897", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public static String memSizeToString(long l)", "signatureAfterChange": "   public static String memSizeToString(long l)", "diff": ["-    StringWriter sw = new StringWriter();", "-    PrintWriter pw = new PrintWriter(sw);", "+    StringBuilder sb = new StringBuilder();", "-        pw.format(\"%d %s\", whole, sizes[i]);", "+        sb.append(whole);", "+        sb.append(' ');", "+        sb.append(sizes[i]);", "-        pw.format(\"%d %ss\", whole, sizes[i]);", "+        sb.append(whole);", "+        sb.append(' ');", "+        sb.append(sizes[i]);", "+        sb.append('s');", "-      pw.format(\"%.2f %ss\", d, sizes[i]);", "+      // two decimal digits", "+      DecimalFormat df = new DecimalFormat(\"#.00\");", "+      sb.append(df.format(d));", "+      sb.append(' ');", "+      sb.append(sizes[i]);", "+      sb.append('s');", "-    return sw.toString();", "+    return sb.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fb571169b8b47a9b6e9a060ee77c52d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "b86859aaefb86c79b1343c533fc1a98460d5733a", "commitAfterChange": "c95281d4127bdbd843c86748b646c5941d6c6e28", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r   public FindResultsPanel(MainFrame frame, RegionManager<MovingDocumentRegion> regionManager, MovingDocumentRegion region, String title, \r                           String searchString, boolean searchAll, boolean searchSelectionOnly, boolean matchCase, boolean wholeWord, \r                           boolean noComments, boolean noTestCases, WeakReference<OpenDefinitionsDocument> doc, \r                           FindReplacePanel findReplace)", "signatureAfterChange": "\r   public FindResultsPanel(MainFrame frame, RegionManager<MovingDocumentRegion> regionManager, MovingDocumentRegion region, String title, \r                           String searchString, boolean searchAll, boolean searchSelectionOnly, boolean matchCase, boolean wholeWord, \r                           boolean noComments, boolean noTestCases, WeakReference<OpenDefinitionsDocument> doc, \r                           FindReplacePanel findReplace)", "diff": ["+    // set \"Find Again\" button tooltip\r", "+    StringBuilder sb = new StringBuilder();\r", "+    sb.append(\"<html>Find '\").append(title);\r", "+    if (!title.equals(_searchString)) sb.append(\"...\");\r", "+    sb.append(\"'\");\r", "+    if (_searchAll) sb.append(\" in all files\");\r", "+    else if (_searchSelectionOnly) sb.append(\" only in original selection.\");\r", "+    sb.append(\".\");\r", "+    if (_matchCase) sb.append(\"<br>Case must match.\");\r", "+    if (_wholeWord) sb.append(\"<br>Whole words only.\");\r", "+    if (_noComments) sb.append(\"<br>No comments or strings.\");\r", "+    if (_noTestCases) sb.append(\"<br>No test cases.\");\r", "+    sb.append(\"</html>\");\r", "+    _findAgainButton.setToolTipText(sb.toString());\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b211faca847740808047befcb8763dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaErrorWindow.java", "commitBeforeChange": "7933cc364884763a44a085994870596faa04b316", "commitAfterChange": "b978cac1d85997e83464382e4a499c19d736223c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private void updateErrorInfo()", "signatureAfterChange": "   private void updateErrorInfo()", "diff": ["-      StringBuilder b = new StringBuilder();", "+      final StringBuilder b = new StringBuilder();", "-        for(StackTraceElement ste: _error.getStackTrace()) {", "+        for (StackTraceElement ste: _error.getStackTrace()) {", "-      b = new StringBuilder();", "-      b.append(HEADER_HTML);", "-      b.append(_errorCount);", "-      b.append(\" error\");", "-      b.append(((_errorCount>1)?\"s\":\"\"));", "-      b.append(\" occured!<br>\");", "-      b.append(ERRORS_FOOTER_HTML);", "-      _errorInfo = new JEditorPane(\"text/html\", b.toString());", "+      final StringBuilder b2 = new StringBuilder();", "+      b2.append(HEADER_HTML);", "+      b2.append(_errorCount);", "+      b2.append(\" error\");", "+      b2.append(((_errorCount>1)?\"s\":\"\"));", "+      b2.append(\" occured!<br>\");", "+      b2.append(ERRORS_FOOTER_HTML);", "+      _errorInfo = new JEditorPane(\"text/html\", b2.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7508893daf56cb502bcb672f99585cfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "b4cb953a15f76465c4fdfdd0a3efe47737f78efc", "commitAfterChange": "da8b20243b85298aada190df10fa721e07aae787", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 153, "signatureBeforeChange": "              public void forWildcard(Wildcard t)", "signatureAfterChange": "          public void forWildcard(Wildcard t)", "diff": ["+    ", "+    public void forWildcard(Wildcard t) {", "+      _result.append(\"?\");", "+      if (!isEqual(t.symbol().upperBound(), OBJECT)) {", "+        _result.append(\" extends \");", "+        run(t.symbol().upperBound());", "+      }", "+      if (!isEqual(t.symbol().lowerBound(), NULL)) {", "+        _result.append(\" super \");", "+        run(t.symbol().lowerBound());", "+      }", "+    }", "-      ", "-      public void forWildcard(Wildcard t) {", "-        result.append(\"?\");", "-        if (!isEqual(t.symbol().upperBound(), OBJECT)) {", "-          result.append(\" extends \");", "-          run(t.symbol().upperBound());", "-        }", "-        if (!isEqual(t.symbol().lowerBound(), NULL)) {", "-          result.append(\" super \");", "-          run(t.symbol().lowerBound());", "-        }", "-      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c3753087724661938b728f271e94fb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "commitAfterChange": "f938008597ce54d16e4a865d30f8ef062ea55d2f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public static String escapeSpacesWith1bHex(String s)", "signatureAfterChange": "   public static String escapeFileName(String s)", "diff": ["-  public static String escapeSpacesWith1bHex(String s) {", "+  public static String escapeFileName(String s) {", "+      else if (s.charAt(i)==java.io.File.pathSeparatorChar) {", "+        sb.append('\\u001b');", "+        sb.append(java.io.File.pathSeparatorChar);", "+      }", "+      else if (s.charAt(i)==ProcessChain.PROCESS_SEPARATOR_CHAR) {", "+        sb.append('\\u001b');", "+        sb.append(ProcessChain.PROCESS_SEPARATOR_CHAR);", "+      }", "+      else if (s.charAt(i)==ProcessChain.PIPE_SEPARATOR_CHAR) {", "+        sb.append('\\u001b');", "+        sb.append(ProcessChain.PIPE_SEPARATOR_CHAR);", "+      }", "-        sb.append(\"\"+s.charAt(i));", "+        sb.append(String.valueOf(s.charAt(i)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9541de5ba8877e47abf6af7df8748f4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/FontOption.java", "commitBeforeChange": "45f11437d24a95250c66e3a94437d7de4d6682c1", "commitAfterChange": "97bb3c70440590a053a3f2aff064ff2a0f94447e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public String format(Font f)", "signatureAfterChange": "    public String format(Font f)", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      StringBuffer str = new StringBuffer(f.getName());", "-      str.append(\"-\");", "-      if (f.isBold()) {", "-        str.append(\"BOLD\");", "-      }", "-      if (f.isItalic()) {", "-        str.append(\"ITALIC\");", "-      }", "-      if (f.isPlain()) {", "-        str.append(\"PLAIN\");", "-      }", "-      str.append(\"-\");", "-      str.append(f.getSize());", "-      ", "-      return str.toString();", "+    StringBuffer str = new StringBuffer(f.getName());", "+    str.append(\"-\");", "+    if (f.isBold()) {", "+      str.append(\"BOLD\");", "-    else return null;", "+    if (f.isItalic()) {", "+      str.append(\"ITALIC\");", "+    }", "+    if (f.isPlain()) {", "+      str.append(\"PLAIN\");", "+    }", "+    str.append(\"-\");", "+    str.append(f.getSize());", "+    ", "+    return str.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5125cf239db1f7125b9b086c72c53d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "commitAfterChange": "f938008597ce54d16e4a865d30f8ef062ea55d2f", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public static String unescapeSpacesWith1bHex(String s)", "signatureAfterChange": "   public static String unescapeFileName(String s)", "diff": ["-  public static String unescapeSpacesWith1bHex(String s) {", "+  public static String unescapeFileName(String s) {", "-          else { throw new IllegalArgumentException(\"1b hex followed by neither space nor another 1b hex\"); }", "+          else if (next==java.io.File.pathSeparatorChar) { sb.append(java.io.File.pathSeparatorChar); ++i; }", "+          else if (next==ProcessChain.PROCESS_SEPARATOR_CHAR) { sb.append(ProcessChain.PROCESS_SEPARATOR_CHAR); ++i; }", "+          else if (next==ProcessChain.PIPE_SEPARATOR_CHAR) { sb.append(ProcessChain.PIPE_SEPARATOR_CHAR); ++i; }", "+          else { throw new IllegalArgumentException(\"1b hex followed by character other than space, \"+", "+                                                    \"path separator, process separator, pipe or 1b hex\"); }", "-        else { throw new IllegalArgumentException(\"1b hex followed by neither space nor another 1b hex\"); }", "+        else { throw new IllegalArgumentException(\"1b hex followed by character other than space, \"+", "+                                                    \"path separator, process separator, pipe or 1b hex\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d422545b981db8c1f484b0fe000847", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaSurveyPopup.java", "commitBeforeChange": "0227dadcd7f6e95f59e8356ce934b30f2f99834b", "commitAfterChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "    protected void yesAction()", "signatureAfterChange": "    protected void yesAction()", "diff": ["-    final String DRJAVA_SURVEY_PAGE = \"http://drjava.concutest.org/cgi-bin/os-and-java-info.pl\";", "+    final String DRJAVA_SURVEY_PAGE = \"http://www.drjava.org/submit-usage.php?\";", "-    sb.append('?');", "-    sb.append(\"date=\");", "-    SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMdd\");", "-    sdf.setTimeZone(TimeZone.getTimeZone(\"GMT\"));", "-    sb.append(sdf.format(new Date()));", "+//    sb.append(\"date=\");", "+//    SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMdd\");", "+//    sdf.setTimeZone(TimeZone.getTimeZone(\"GMT\"));", "+//    sb.append(sdf.format(new Date()));", "+    boolean first = true;", "-      sb.append('&');", "+      if (first) { first = false; } else { sb.append('&'); }"]}], "num": 5111}