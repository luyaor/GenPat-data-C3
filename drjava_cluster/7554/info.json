{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3393d27d9a00d8af64b3d6732d04240", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4319f30a73e0457e16db5ebbd21e4447", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DocumentDebugAction.java", "commitBeforeChange": "530cb3b64455d081e962324602750973729aa1fb", "commitAfterChange": "edb6c56f8ad5495255b4157f1e495f302271cd2d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public boolean createRequest(ReferenceType rt) throws DebugException", "signatureAfterChange": "   public boolean createRequests(Vector<ReferenceType> refTypes)      throws DebugException", "diff": ["-  public boolean createRequest(ReferenceType rt) throws DebugException {", "-    if (!rt.isPrepared()) {", "-      // Can't create a request if class not prepared", "-      return false;", "-    }", "-    ", "-    _createRequest(rt);", "-    if (_request != null) {", "-      _prepareRequest(_request);", "+  public boolean createRequests(Vector<ReferenceType> refTypes) ", "+    throws DebugException", "+  {", "+    _createRequests(refTypes);", "+    if (_requests.size() > 0) {", "+      _prepareRequests(_requests);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d35a81ba83982591de0c59bcacf30d4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "7100bfae3584eff8b8b1993fd999385d8f88ea13", "commitAfterChange": "6bcdef7d4202e06be1c5717fc181a0fdfcc7756a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      public void testGranularUndo() throws BadLocationException", "signatureAfterChange": "      public void testGranularUndo() throws BadLocationException", "diff": ["-    final KeyStroke ks = DrJava.getConfig().getSetting(OptionConstants.KEY_UNDO);", "-    final Action a = KeyBindingManager.ONLY.get(ks);", "+    final Vector<KeyStroke> ks = DrJava.getConfig().getSetting(OptionConstants.KEY_UNDO);", "+    final Action a = KeyBindingManager.ONLY.get(ks.get(0));", "-    final KeyEvent e = new KeyEvent(defPane, PRESSED, 0, ks.getModifiers(), ks.getKeyCode(), UNDEFINED);", "+    final KeyEvent e = new KeyEvent(defPane, PRESSED, 0, ks.get(0).getModifiers(), ks.get(0).getKeyCode(), UNDEFINED);", "-         SwingUtilities.notifyAction(a, ks, e, e.getSource(), e.getModifiers());", "+         SwingUtilities.notifyAction(a, ks.get(0), e, e.getSource(), e.getModifiers());"]}], "num": 7554}