{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b436a05fb166b5664910a168d6c5918", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2deb04cc0afdff065096b84924b7c4d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Void forConstructorDef(ConstructorDef that)", "signatureAfterChange": "   public Void forConstructorDef(ConstructorDef that)", "diff": ["-    if (_isIntermediateFile()) { //if this is an Intermediate level file, want to check and see if the constructor has", "-    //   modifiers.  If not, make it public by default", "-      String[] modifiers = that.getMav().getModifiers();", "-      boolean hasVisibilityModifier = false;", "-      for (int i = 0; i<modifiers.length; i++) {", "-        if ((modifiers[i].equals(\"private\")) || (modifiers[i].equals(\"public\")) || (modifiers[i].equals(\"protected\"))) {", "-          hasVisibilityModifier = true;", "-          break;", "-        }", "-      }", "-      ", "-      if (! hasVisibilityModifier) _writeToFileOut(\"public \");", "-    }", "+    // Check and see if the constructor has modifiers.  If not, make it public by default", "+    String[] modifiers = that.getMav().getModifiers();", "+    if (! Utilities.hasVisibilityModifier(modifiers)) _writeToFileOut(\"public \");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1bada159dd2047401a6b47497e13ec5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public Void forMethodDef(MethodDef that)", "signatureAfterChange": "   public Void forMethodDef(MethodDef that)", "diff": ["-    ", "-    if (_isElementaryFile()) _writeToFileOut(\"public \");", "-    ", "-    if (_isIntermediateFile()) { ", "-      /* Check if the method has explicit modifiers.  Unfortunately, the information in that.getMav().getModifiers() ", "-       * is not reliable regarding what modifiers EXPLICITLY appear in a .dj1 file, so we have to do additional work. */", "-      String[] modifiers = that.getMav().getModifiers();", "-      String visibilityModifier = null;", "-      for (int i = 0; i < modifiers.length; i++) {", "-        if (modifiers[i].equals(\"private\") || modifiers[i].equals(\"public\") || modifiers[i].equals(\"protected\")) {", "-          visibilityModifier = modifiers[i];", "-          break;", "-        }", "-      }", "-      ", "-      if (visibilityModifier == null) {", "-        _writeToFileOut(\"public \");", "-      }", "-        ", "-    }", "+    if (! Utilities.hasVisibilityModifier(that.getMav().getModifiers())) _writeToFileOut(\"public \");"]}], "num": 15829}