{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2255cdcfc1352e98120dbba889dc12bb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13aef361dec934d81d03984f3663e5ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "17590567cb9f06269b33249dad955c39164a9028", "commitAfterChange": "6222fd84e3aa6c7b8b3da9d73ccf7a9a3370487b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private void _setupNotificationsPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupNotificationsPanel(ConfigPanel panel)", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      panel.addComponent(new BooleanOptionComponent(OptionConstants.ALWAYS_SAVE_BEFORE_RUN, \"Automatically Save and Compile Before Running Main Method\", this,", "-                                                    \"<html>Whether DrJava should automatically save and compile before running<br>\" +", "-                                                    \"a document's main method, or instead should ask the user each time.</html>\"));", "-    }", "+//    if (CodeStatus.DEVELOPMENT) {", "+//      panel.addComponent(new BooleanOptionComponent(OptionConstants.ALWAYS_SAVE_BEFORE_RUN, \"Automatically Save and Compile Before Running Main Method\", this,", "+//                                                    \"<html>Whether DrJava should automatically save and compile before running<br>\" +", "+//                                                    \"a document's main method, or instead should ask the user each time.</html>\"));", "+//    }", "-    panel.addComponent(new BooleanOptionComponent(OptionConstants.ALWAYS_SAVE_BEFORE_JUNIT, \"Automatically Save and Compile Before Testing\", this,", "-                                                  \"<html>Whether DrJava should automatically save and compile before<br>\" +", "-                                                  \"testing with JUnit, or instead should ask the user each time</html>\"));", "+//    panel.addComponent(new BooleanOptionComponent(OptionConstants.ALWAYS_SAVE_BEFORE_JUNIT, \"Automatically Save and Compile Before Testing\", this,", "+//                                                  \"<html>Whether DrJava should automatically save and compile before<br>\" +", "+//                                                  \"testing with JUnit, or instead should ask the user each time</html>\"));", "-                                                  \"Javadoc, or instead should ask the user each time</html>\"));", "-    panel.addComponent(new BooleanOptionComponent(OptionConstants.ALWAYS_SAVE_BEFORE_DEBUG, \"Automatically Save and Compile Before Debugging\", this,", "-                                                  \"<html>Whether DrJava should automatically save and compile before<br>\" +", "-                                                  \"debugging, or instead should ask the user each time</html>\"));", "+                                                  \"Javadoc, or instead should ask the user each time.</html>\"));", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.JAVADOC_PROMPT_FOR_DESTINATION,", "+                                                  \"Always Prompt for Javadoc Destination\", this,", "+                                                  \"Whether Javadoc should always prompt the user for the destination directory.\"));", "+//    panel.addComponent(new BooleanOptionComponent(OptionConstants.ALWAYS_SAVE_BEFORE_DEBUG, \"Automatically Save and Compile Before Debugging\", this,", "+//                                                  \"<html>Whether DrJava should automatically save and compile before<br>\" +", "+//                                                  \"debugging, or instead should ask the user each time</html>\"));", "-                                                  \"is out of sync before setting a breakpoint in that file</html>.\"));", "+                                                  \"is out of sync before setting a breakpoint in that file.</html>\"));", "-    if (CodeStatus.DEVELOPMENT) {", "-      panel.addComponent(new BooleanOptionComponent(OptionConstants.WARN_CHANGE_LAF, \"Warn to Restart to Change Look and Feel\", this,", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.WARN_CHANGE_LAF, \"Warn to Restart in order to Change Look and Feel\", this,", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "187a1d3e0bf2cbd8130385a526e153d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1c3947ce9682f305287b6afe6b5c5d87597bae6f", "commitAfterChange": "0acb22a1f5b2329a270795e5839a4690952252ed", "methodNumberBeforeChange": 685, "methodNumberAfterChange": 686, "signatureBeforeChange": "          public void openProject(File projectFile, FileOpenSelector files)", "signatureAfterChange": "     public void openProject(File projectFile, FileOpenSelector files)", "diff": ["+    /* Opens project from command line. */", "-      _compileButton = _updateToolbarButton(_compileButton, _compileProjectAction);", "-      _junitButton = _updateToolbarButton(_junitButton, _junitProjectAction);", "-      _recentProjectManager.updateOpenFiles(projectFile);", "+      _setUpProjectButtons(projectFile);", "-      _model.getDocumentNavigator().asContainer().addKeyListener(_historyListener);", "-      _model.getDocumentNavigator().asContainer().addFocusListener(_focusListenerForRecentDocs);", "-      _model.getDocumentNavigator().asContainer().addMouseListener(_resetFindReplaceListener);", "-      _model.refreshActiveDocument();"]}], "num": 9582}