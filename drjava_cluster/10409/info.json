{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e247c1e4c17d2726c20a1310def5676", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "013eea3520b3f0ea0537b305f22b65bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EmptyStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public EmptyStatement(String fn, int line, int col)", "signatureAfterChange": "   public EmptyStatement(SourceInfo si)", "diff": ["-  public EmptyStatement(String fn, int line, int col) {", "-    super(fn, line, col, line, col);", "+  public EmptyStatement(SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05e40813c019224f2020048ac1984aa7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MultiplyAssignExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public MultiplyAssignExpression(Expression lexp, Expression rexp,                                   String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public MultiplyAssignExpression(Expression lexp, Expression rexp,                                   SourceInfo si)", "diff": ["-                                  String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                                  SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "061501f916af354943227c413d165b7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/BlockStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public BlockStatement(List<Node> stmts, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public BlockStatement(List<Node> stmts, SourceInfo si)", "diff": ["-  public BlockStatement(List<Node> stmts, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  public BlockStatement(List<Node> stmts, SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06157fccb95d9dd1054a49a98cd7ba9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InterfaceDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public InterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,                               String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public InterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,                               SourceInfo si)", "diff": ["-                              String fn, int bl, int bc, int el, int ec) {", "-    super(flags, name, impl, body, fn, bl, bc, el, ec);", "+                              SourceInfo si) {", "+    super(flags, name, impl, body, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "066a6c659e21b5cc55f2f8210db7b99e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/WhileStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public WhileStatement(Expression cond, Node body,                         String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public WhileStatement(Expression cond, Node body,                         SourceInfo si)", "diff": ["-                        String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                        SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "071a5fbdbbcd081cd754ed46c222dba4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/StaticFieldAccess.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public StaticFieldAccess(ReferenceTypeName typ, String fln,                            String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public StaticFieldAccess(ReferenceTypeName typ, String fln,                            SourceInfo si)", "diff": ["-                           String fn, int bl, int bc, int el, int ec) {", "-    super(fln, fn, bl, bc, el, ec);", "+                           SourceInfo si) {", "+    super(fln, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08f812053450f60698b4e42e3f45e2ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/VariableDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public VariableDeclaration(boolean fin, TypeName type, String name, Expression init,                              String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public VariableDeclaration(boolean fin, TypeName type, String name, Expression init,                              SourceInfo si)", "diff": ["-                             String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                             SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a27d81fbefddfe81605289d50f2f6e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/IntegerLiteral.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public IntegerLiteral(String rep, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public IntegerLiteral(String rep, SourceInfo si)", "diff": ["-  public IntegerLiteral(String rep, String fn, int bl, int bc, int el, int ec) {", "+  public IntegerLiteral(String rep, SourceInfo si) {", "-          fn, bl, bc, el, ec);", "+          si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c63fe0679095e8b984461f62e894368", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ExclusiveOrExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ExclusiveOrExpression(Expression lexp, Expression rexp,                                String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ExclusiveOrExpression(Expression lexp, Expression rexp,                                SourceInfo si)", "diff": ["-                               String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                               SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e4a1745fe90bd1e86cd22a9c9168629", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/PackageDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public PackageDeclaration(String nm, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PackageDeclaration(String nm, SourceInfo si)", "diff": ["-  public PackageDeclaration(String nm, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  public PackageDeclaration(String nm, SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1198b8c54031b5263927c1c252b42ca3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicAnonymousInnerAllocation.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicAnonymousInnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs,                                              List<? extends Expression> args, List<Node> memb,                                               List<TypeName> targs,                                              String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicAnonymousInnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs,                                              List<? extends Expression> args, List<Node> memb,                                               List<TypeName> targs,                                              SourceInfo si)", "diff": ["-                                             String fn, int bl, int bc, int el, int ec) {", "-    super(exp, cn, ctargs, args, memb, fn, bl, bc, el, ec);", "+                                             SourceInfo si) {", "+    super(exp, cn, ctargs, args, memb, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12905611a3008a50fcb9677b56ca6af6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ComplementExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ComplementExpression(Expression exp,                               String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ComplementExpression(Expression exp,                               SourceInfo si)", "diff": ["-                              String fn, int bl, int bc, int el, int ec) {", "-    super(exp, fn, bl, bc, el, ec);", "+                              SourceInfo si) {", "+    super(exp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1508b7f6fb9f1a5b9558ea55c869c365", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/AnonymousInnerAllocation.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public AnonymousInnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs,                                    List<? extends Expression> args, List<Node> memb,                                   String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public AnonymousInnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs,                                    List<? extends Expression> args, List<Node> memb,                                   SourceInfo si)", "diff": ["-                                  String fn, int bl, int bc, int el, int ec) {", "-    super(exp, cn, ctargs, args, fn, bl, bc, el, ec);", "+                                  SourceInfo si) {", "+    super(exp, cn, ctargs, args, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "157d177e2f46eebd59fff1ca6485fb04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/BitAndAssignExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public BitAndAssignExpression(Expression lexp, Expression rexp,                                 String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public BitAndAssignExpression(Expression lexp, Expression rexp,                                 SourceInfo si)", "diff": ["-                                String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                                SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17b3f45d6b2ce8eaf42aff9824c04f4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicStaticMethodCall.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicStaticMethodCall(TypeName typ, String mn, List<? extends Expression> args, List<TypeName> targs,                          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicStaticMethodCall(TypeName typ, String mn, List<? extends Expression> args, List<TypeName> targs,                          SourceInfo si)", "diff": ["-                         String fn, int bl, int bc, int el, int ec) {", "-    super(typ, mn, args, fn, bl, bc, el, ec);", "+                         SourceInfo si) {", "+    super(typ, mn, args, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19554ea745853ec5c775d0ad7765554b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/FormalParameter.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public FormalParameter(boolean f, TypeName t, String n,                          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public FormalParameter(boolean f, TypeName t, String n,                          SourceInfo si)", "diff": ["-                         String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                         SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ae15c7c48df6dc0b19b1cf1025b9267", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ReferenceTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public ReferenceTypeName(List<? extends IdentifierToken> ids, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ReferenceTypeName(List<? extends IdentifierToken> ids, SourceInfo si)", "diff": ["-  public ReferenceTypeName(List<? extends IdentifierToken> ids, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  public ReferenceTypeName(List<? extends IdentifierToken> ids, SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bef3c759b297ca614dccdacd2ed7943", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/UnsignedShiftRightExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public UnsignedShiftRightExpression(Expression lexp, Expression rexp,                                       String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public UnsignedShiftRightExpression(Expression lexp, Expression rexp,                                       SourceInfo si)", "diff": ["-                                      String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                                      SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c9e649ebbca82993a6720d355f88497", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/LabeledStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public LabeledStatement(String label, Node stat,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public LabeledStatement(String label, Node stat,                           SourceInfo si)", "diff": ["-                          String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                          SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d0dc5199b4d10a9cd544af37b0e3c40", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/AssertStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public AssertStatement(Expression cond, Expression falseString, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public AssertStatement(Expression cond, Expression falseString, SourceInfo si)", "diff": ["-  public AssertStatement(Expression cond, Expression falseString, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  public AssertStatement(Expression cond, Expression falseString, SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d7f8e86d8c633944cb8c6723005d29d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/DoubleTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DoubleTypeName(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     public DoubleTypeName(SourceInfo si)", "diff": ["-    public DoubleTypeName(String fn, int bl, int bc, int el, int ec) {", "- super(double.class, fn, bl, bc, el, ec);", "+    public DoubleTypeName(SourceInfo si) {", "+ super(double.class, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dd1f1dceaa79399d6e19fb2a989025a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SwitchBlock.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SwitchBlock(Expression exp, List<Node> stmts,                      String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public SwitchBlock(Expression exp, List<Node> stmts,                      SourceInfo si)", "diff": ["-                     String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                     SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20e2f9967a810ad66c57bff9b1385ef9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/TypeExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public TypeExpression(TypeName t, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public TypeExpression(TypeName t, SourceInfo si)", "diff": ["-  public TypeExpression(TypeName t, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  public TypeExpression(TypeName t, SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "215bd3433c2a2214dd9b4bf01bf4d985", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/DoStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DoStatement(Expression cond, Node body,                      String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public DoStatement(Expression cond, Node body,                      SourceInfo si)", "diff": ["-                     String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                     SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217cf57bd0136a6c006741c51f9dbe7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/Literal.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected Literal(String rep, Object val, Class<?> typ,                     String fn, int bl, int bc, int el,int ec)", "signatureAfterChange": "   protected Literal(String rep, Object val, Class<?> typ, SourceInfo si)", "diff": ["-  protected Literal(String rep, Object val, Class<?> typ,", "-                    String fn, int bl, int bc, int el,int ec) {", "-    super(fn, bl, bc, el, ec);", "+  protected Literal(String rep, Object val, Class<?> typ, SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "218960e0d88e52b50899a63cb05c31d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/PrimitiveTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected PrimitiveTypeName(Class<?> val, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   protected PrimitiveTypeName(Class<?> val, SourceInfo si)", "diff": ["-  protected PrimitiveTypeName(Class<?> val, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  protected PrimitiveTypeName(Class<?> val, SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24d524ff962b2077eb12365fb5986ff2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/AndExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public AndExpression(Expression lexp, Expression rexp,                        String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public AndExpression(Expression lexp, Expression rexp, SourceInfo si)", "diff": ["-  public AndExpression(Expression lexp, Expression rexp,", "-                       String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+  public AndExpression(Expression lexp, Expression rexp, SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "276adc01c035624adc05eb36ee2454a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/LongLiteral.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public LongLiteral(String rep, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public LongLiteral(String rep, SourceInfo si)", "diff": ["-  public LongLiteral(String rep, String fn, int bl, int bc, int el, int ec) {", "+  public LongLiteral(String rep, SourceInfo si) {", "-          fn, bl, bc, el, ec);", "+          si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27d27960cb1557e0accefc882d32184f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/AnonymousAllocation.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public AnonymousAllocation(ReferenceTypeName tp, List<? extends Expression> args, List<Node> memb,                              String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public AnonymousAllocation(ReferenceTypeName tp, List<? extends Expression> args, List<Node> memb, SourceInfo si)", "diff": ["-  public AnonymousAllocation(ReferenceTypeName tp, List<? extends Expression> args, List<Node> memb,", "-                             String fn, int bl, int bc, int el, int ec) {", "-    super(tp, args, fn, bl, bc, el, ec);", "+  public AnonymousAllocation(ReferenceTypeName tp, List<? extends Expression> args, List<Node> memb, SourceInfo si) {", "+    super(tp, args, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28bae73bc1a3630ee726a0168ac65882", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/LongTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public LongTypeName(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     public LongTypeName(SourceInfo si)", "diff": ["-    public LongTypeName(String fn, int bl, int bc, int el, int ec) {", "- super(long.class, fn, bl, bc, el, ec);", "+    public LongTypeName(SourceInfo si) {", "+ super(long.class, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cbca0e64ba42065fd70183fd1e1661d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/LessOrEqualExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public LessOrEqualExpression(Expression lexp, Expression rexp,                                String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public LessOrEqualExpression(Expression lexp, Expression rexp,                                SourceInfo si)", "diff": ["-                               String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                               SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d93ceb880ae5018d8f190a920169e6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ImportDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public ImportDeclaration(String nm, boolean pkg, boolean sttc,                            String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ImportDeclaration(String nm, boolean pkg, boolean sttc,                            SourceInfo si)", "diff": ["-                           String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                           SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3120b710b55c1e2a92a0ba62b4fb4ea2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ThrowStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ThrowStatement(Expression exp,                         String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ThrowStatement(Expression exp,                         SourceInfo si)", "diff": ["-                        String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                        SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3348bfaf9e2738b4007473a3c02086d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/AssignExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected AssignExpression(Expression lexp, Expression rexp,        String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     protected AssignExpression(Expression lexp, Expression rexp,        SourceInfo si)", "diff": ["-       String fn, int bl, int bc, int el, int ec) {", "- super(lexp, rexp, fn, bl, bc, el, ec);", "+       SourceInfo si) {", "+ super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34f31f3786dfb423e39fcf827179d874", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SuperFieldAccess.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SuperFieldAccess(String fln, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public SuperFieldAccess(String fln, SourceInfo si)", "diff": ["-  public SuperFieldAccess(String fln, String fn, int bl, int bc, int el, int ec) {", "-    super(fln, fn, bl, bc, el, ec);", "+  public SuperFieldAccess(String fln, SourceInfo si) {", "+    super(fln, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "356a61bd9e327e55812828f36e12508e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/VoidTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public VoidTypeName(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     public VoidTypeName(SourceInfo si)", "diff": ["-    public VoidTypeName(String fn, int bl, int bc, int el, int ec) {", "- super(void.class, fn, bl, bc, el, ec);", "+    public VoidTypeName(SourceInfo si) {", "+ super(void.class, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3955e3b8aca549c0a3be08eb03980380", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/UnsignedShiftRightAssignExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public UnsignedShiftRightAssignExpression(Expression lexp, Expression rexp,                                             String fn,int bl, int bc, int el, int ec)", "signatureAfterChange": "   public UnsignedShiftRightAssignExpression(Expression lexp, Expression rexp, SourceInfo si)", "diff": ["-  public UnsignedShiftRightAssignExpression(Expression lexp, Expression rexp,", "-                                            String fn,int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+  public UnsignedShiftRightAssignExpression(Expression lexp, Expression rexp, SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a19d1ee3a0ac4c35b9102f5a3c670d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ClassDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ClassDeclaration(int flags, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ClassDeclaration(int flags, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body,                           SourceInfo si)", "diff": ["-                          String fn, int bl, int bc, int el, int ec) {", "-    super(flags, name, impl, body, fn, bl, bc, el, ec);", "+                          SourceInfo si) {", "+    super(flags, name, impl, body, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a26bd4ad7a02ad23c6f7d3ab0d26b37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/PrimaryExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected PrimaryExpression(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     protected PrimaryExpression(SourceInfo si)", "diff": ["-    protected PrimaryExpression(String fn, int bl, int bc, int el, int ec) {", "-\tsuper(fn, bl, bc, el, ec);", "+    protected PrimaryExpression(SourceInfo si) {", "+\tsuper(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c079bad0781378671f7c953e58e0d7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InnerAllocation.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public InnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs, List<? extends Expression> args,                          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public InnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs, List<? extends Expression> args,                          SourceInfo si)", "diff": ["-                         String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                         SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d0b559e9ab09a4e4632ab31843e8578", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/BooleanTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public BooleanTypeName(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public BooleanTypeName(SourceInfo si)", "diff": ["-  public BooleanTypeName(String fn, int bl, int bc, int el, int ec) {", "-    super(boolean.class, fn, bl, bc, el, ec);", "+  public BooleanTypeName(SourceInfo si) {", "+    super(boolean.class, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e679d71702bf419562a468c3ead52be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/BitOrAssignExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public BitOrAssignExpression(Expression lexp, Expression rexp,      String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     public BitOrAssignExpression(Expression lexp, Expression rexp,      SourceInfo si)", "diff": ["-     String fn, int bl, int bc, int el, int ec) {", "- super(lexp, rexp, fn, bl, bc, el, ec);", "+     SourceInfo si) {", "+ super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f51889a3b0dc2f52747dc0b8c9669d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/StaticMethodCall.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public StaticMethodCall(TypeName typ, String mn, List<? extends Expression> args,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public StaticMethodCall(TypeName typ, String mn, List<? extends Expression> args,                           SourceInfo si)", "diff": ["-                          String fn, int bl, int bc, int el, int ec) {", "-    super(mn, args, fn, bl, bc, el, ec);", "+                          SourceInfo si) {", "+    super(mn, args, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43d3cf83afe3d39d5757fa97671a70de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/DivideAssignExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DivideAssignExpression(Expression lexp, Expression rexp,                                 String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public DivideAssignExpression(Expression lexp, Expression rexp,                                 SourceInfo si)", "diff": ["-                                String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                                SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4477ecc308d18fe606a91e830cf7c347", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ByteTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ByteTypeName(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ByteTypeName(SourceInfo si)", "diff": ["-  public ByteTypeName(String fn, int bl, int bc, int el, int ec) {", "-    super(byte.class, fn, bl, bc, el, ec);", "+  public ByteTypeName(SourceInfo si) {", "+    super(byte.class, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "456fc56e15953aa5e1cf0468eb21ac09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/Initializer.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected Initializer(BlockStatement block, \t\t\t  String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     protected Initializer(BlockStatement block, \t\t\t  SourceInfo si)", "diff": ["-\t\t\t  String fn, int bl, int bc, int el, int ec) {", "-\tsuper(fn, bl, bc, el, ec);", "+\t\t\t  SourceInfo si) {", "+\tsuper(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4925a2c2daf7d93660d6f9ee1264ed35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SimpleMethodCall.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public SimpleMethodCall(String mn, List<Expression> args,                       String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public SimpleMethodCall(String mn, List<Expression> args,                       SourceInfo si)", "diff": ["-                      String fn, int bl, int bc, int el, int ec) {", "-    super(mn, args, fn, bl, bc, el, ec);", "+                      SourceInfo si) {", "+    super(mn, args, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b369b208797b8600dad5ff069dc8c5c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/IntTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public IntTypeName(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     public IntTypeName(SourceInfo si)", "diff": ["-    public IntTypeName(String fn, int bl, int bc, int el, int ec) {", "- super(int.class, fn, bl, bc, el, ec);", "+    public IntTypeName(SourceInfo si) {", "+ super(int.class, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d13dd703048f7348ec185f6a468dac0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicSuperMethodCall.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicSuperMethodCall(String mn, List<? extends Expression> args, List<TypeName> targs,                          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicSuperMethodCall(String mn, List<? extends Expression> args, List<TypeName> targs,                                     SourceInfo si)", "diff": ["-                         String fn, int bl, int bc, int el, int ec) {", "-    super(mn, args, fn, bl, bc, el, ec);", "+                                    SourceInfo si) {", "+    super(mn, args, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e1ed70d94ba0247ffa944641afc2073", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ForSlashEachStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      protected ForSlashEachStatement(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "      protected ForSlashEachStatement(SourceInfo si)", "diff": ["-    protected ForSlashEachStatement(String fn, int bl, int bc, int el, int ec) {", "-      super(fn, bl, bc, el, ec);", "+    protected ForSlashEachStatement(SourceInfo si) {", "+      super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5307a6602c854530ff1f5096ce0d6b72", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/GenericReferenceTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public GenericReferenceTypeName(List<IdentifierToken> ids, List<List<? extends TypeName>> typeArgs, String fn,  int bl, int bc, int el, int ec)", "signatureAfterChange": "   public GenericReferenceTypeName(List<IdentifierToken> ids, List<List<? extends TypeName>> typeArgs,                                   SourceInfo si)", "diff": ["-  public GenericReferenceTypeName(List<IdentifierToken> ids, List<List<? extends TypeName>> typeArgs, String fn,  int bl, int bc, int el, int ec) {", "-    super(ids, fn, bl, bc, el, ec);", "+  public GenericReferenceTypeName(List<IdentifierToken> ids, List<List<? extends TypeName>> typeArgs,", "+                                  SourceInfo si) {", "+    super(ids, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "592808cade91714923e6aac1502d3b97", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/TryStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public TryStatement(Node tryB, List<CatchStatement> catchL, Node fin,                       String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public TryStatement(Node tryB, List<CatchStatement> catchL, Node fin,                       SourceInfo si)", "diff": ["-                      String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                      SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bd4f1352c853382cf072c0a81b69e13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/LessExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public LessExpression(Expression lexp, Expression rexp,                         String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public LessExpression(Expression lexp, Expression rexp,                         SourceInfo si)", "diff": ["-                        String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                        SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d8ed6dca317d44a4ca5a7c17b9639ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ConstructorDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ConstructorDeclaration(int flags, String name,                                 List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                 ConstructorCall eci, List<Node> stmts,                                 String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ConstructorDeclaration(int flags, String name,                                 List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                 ConstructorCall eci, List<Node> stmts,                                 SourceInfo si)", "diff": ["-                                String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                                SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e63615cf32518c30b71ceec2531e5dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/GreaterOrEqualExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public GreaterOrEqualExpression(Expression lexp, Expression rexp,                                   String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public GreaterOrEqualExpression(Expression lexp, Expression rexp,                                   SourceInfo si)", "diff": ["-                                  String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                                  SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "614621fad238c8c9029b33adf68ba340", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SimpleAssignExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SimpleAssignExpression(Expression lexp, Expression rexp,                                 String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public SimpleAssignExpression(Expression lexp, Expression rexp,                                 SourceInfo si)", "diff": ["-                                String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                                SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a0cf47879fc9eedbf0b0045d1e3ad7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicAnonymousAllocation.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicAnonymousAllocation(ReferenceTypeName tp, List<? extends Expression> args,                                          List<Node> memb, List<TypeName> targs,                                         String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicAnonymousAllocation(ReferenceTypeName tp, List<? extends Expression> args,                                          List<Node> memb, List<TypeName> targs,                                         SourceInfo si)", "diff": ["-                                        String fn, int bl, int bc, int el, int ec) {", "-    super(tp, args, memb, fn, bl, bc, el, ec);", "+                                        SourceInfo si) {", "+    super(tp, args, memb, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "630f6af03b1d7aa88a51e5327f6dada9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/PostDecrement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PostDecrement(Expression exp, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PostDecrement(Expression exp, SourceInfo si)", "diff": ["-  public PostDecrement(Expression exp, String fn, int bl, int bc, int el, int ec) {", "-    super(exp, fn, bl, bc, el, ec);", "+  public PostDecrement(Expression exp, SourceInfo si) {", "+    super(exp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64699ff26b7d73fc7c5fa8efd50b4646", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/AddExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public AddExpression(Expression lexp, Expression rexp,                        String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public AddExpression(Expression lexp, Expression rexp, SourceInfo si)", "diff": ["-  public AddExpression(Expression lexp, Expression rexp,", "-                       String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+  public AddExpression(Expression lexp, Expression rexp, SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "673b6c5d8f30d16f6f2384b5b18ae72b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/AddAssignExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public AddAssignExpression(Expression lexp, Expression rexp,                              String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public AddAssignExpression(Expression lexp, Expression rexp, SourceInfo si)", "diff": ["-  public AddAssignExpression(Expression lexp, Expression rexp,", "-                             String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+  public AddAssignExpression(Expression lexp, Expression rexp, SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "692c6be54042e10c2389148096b032cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EnumDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public EnumDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, EnumBody body,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public EnumDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, EnumBody body,                           SourceInfo si)", "diff": ["-                          String fn, int bl, int bc, int el, int ec) {", "+                          SourceInfo si) {", "-      fn, bl, bc, el, ec);", "+      si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e67742d2a338dea303ced29bf6c5ee8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/NotEqualExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public NotEqualExpression(Expression lexp, Expression rexp,                             String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public NotEqualExpression(Expression lexp, Expression rexp,                             SourceInfo si)", "diff": ["-                            String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                            SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e845d7ea28b7f7617323ea7ec885236", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SuperMethodCall.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SuperMethodCall(String mn, List<? extends Expression> args,                          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public SuperMethodCall(String mn, List<? extends Expression> args,                          SourceInfo si)", "diff": ["-                         String fn, int bl, int bc, int el, int ec) {", "-    super(mn, args, fn, bl, bc, el, ec);", "+                         SourceInfo si) {", "+    super(mn, args, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e9d106b80ddb8662bb1e339c1802e5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SubtractAssignExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SubtractAssignExpression(Expression lexp, Expression rexp,                                   String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public SubtractAssignExpression(Expression lexp, Expression rexp,                                   SourceInfo si)", "diff": ["-                                  String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                                  SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ff3fd6a85d9073d6a81e768ded16eb7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/TypeDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected TypeDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,                             String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   protected TypeDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,                             SourceInfo si)", "diff": ["-                            String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                            SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7110c11abcc4f45e8ef27f52c961da5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/PreIncrement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PreIncrement(Expression exp, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PreIncrement(Expression exp, SourceInfo si)", "diff": ["-  public PreIncrement(Expression exp, String fn, int bl, int bc, int el, int ec) {", "-    super(exp, fn, bl, bc, el, ec);", "+  public PreIncrement(Expression exp, SourceInfo si) {", "+    super(exp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "711d43183c7ccad56a231b9e5f61687e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SwitchStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public SwitchStatement(Expression sel, List<SwitchBlock> cases,                          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public SwitchStatement(Expression sel, List<SwitchBlock> cases,                          SourceInfo si)", "diff": ["-                         String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                         SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7146e40f8369249c6a06169bd07a03d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/PlusExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PlusExpression(Expression exp, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PlusExpression(Expression exp, SourceInfo si)", "diff": ["-  public PlusExpression(Expression exp, String fn, int bl, int bc, int el, int ec) {", "-    super(exp, fn, bl, bc, el, ec);", "+  public PlusExpression(Expression exp, SourceInfo si) {", "+    super(exp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "745ec1b2ddafb022f6a264ca4d0e9f96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/IfThenElseStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public IfThenElseStatement(Expression cond, Node tstmt, Node estmt,                              String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public IfThenElseStatement(Expression cond, Node tstmt, Node estmt,                              SourceInfo si)", "diff": ["-                             String fn, int bl, int bc, int el, int ec) {", "-    super(cond, tstmt, fn, bl, bc, el, ec);", "+                             SourceInfo si) {", "+    super(cond, tstmt, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74966282bd87ed16040f46d340851f89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/StringLiteral.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public StringLiteral(String rep,                         String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public StringLiteral(String rep,                         SourceInfo si)", "diff": ["-                       String fn, int bl, int bc, int el, int ec) {", "+                       SourceInfo si) {", "-          fn, bl, bc, el, ec);", "+          si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74fb6ded2b439633700baad00cf9280c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ShortTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public ShortTypeName(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     public ShortTypeName(SourceInfo si)", "diff": ["-    public ShortTypeName(String fn, int bl, int bc, int el, int ec) {", "- super(short.class, fn, bl, bc, el, ec);", "+    public ShortTypeName(SourceInfo si) {", "+ super(short.class, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "755a8d2d5f28391e7dac7d49b7375232", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MethodCall.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected MethodCall(String mn, List<? extends Expression> args,                        String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   protected MethodCall(String mn, List<? extends Expression> args,                        SourceInfo si)", "diff": ["-                       String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                       SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7995bca516b68e2abcf1a648ecec855e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/UnaryExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected UnaryExpression(Expression exp,          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     protected UnaryExpression(Expression exp,          SourceInfo si)", "diff": ["-         String fn, int bl, int bc, int el, int ec) {", "- super(fn, bl, bc, el, ec);", "+         SourceInfo si) {", "+ super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5fb0f1b84a7deae77b34c4a475c5a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/CharacterLiteral.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public CharacterLiteral(String rep,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public CharacterLiteral(String rep,                           SourceInfo si)", "diff": ["-                          String fn, int bl, int bc, int el, int ec) {", "+                          SourceInfo si) {", "-          fn, bl, bc, el, ec);", "+          si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c4dcf2a3bf53f6663d890f456f6aa41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/DoubleLiteral.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DoubleLiteral(String rep, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     public DoubleLiteral(String rep, SourceInfo si)", "diff": ["-    public DoubleLiteral(String rep, String fn, int bl, int bc, int el, int ec) {", "+    public DoubleLiteral(String rep, SourceInfo si) {", "-       fn, bl, bc, el, ec);", "+       si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8263859c12ae6d0fd89d7ed78b1453ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/PackageDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PackageDeclaration(List<IdentifierToken> ident, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PackageDeclaration(List<IdentifierToken> ident, SourceInfo si)", "diff": ["-  public PackageDeclaration(List<IdentifierToken> ident, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  public PackageDeclaration(List<IdentifierToken> ident, SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "829b63b0570202da4c07c69bbc4f3a30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ConditionalExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ConditionalExpression(Expression cexp, Expression texp, Expression fexp,                                String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ConditionalExpression(Expression cexp, Expression texp, Expression fexp,                                SourceInfo si)", "diff": ["-                               String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                               SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82f3f2584529038c8f497ef229dadcb5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SimpleFieldAccess.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SimpleFieldAccess(String fln, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public SimpleFieldAccess(String fln, SourceInfo si)", "diff": ["-  public SimpleFieldAccess(String fln, String fn, int bl, int bc, int el, int ec) {", "-    super(fln, fn, bl, bc, el, ec);", "+  public SimpleFieldAccess(String fln, SourceInfo si) {", "+    super(fln, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8493fbf459cd77b385bb1e563fb67bb3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MinusExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public MinusExpression(Expression exp, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public MinusExpression(Expression exp, SourceInfo si)", "diff": ["-  public MinusExpression(Expression exp, String fn, int bl, int bc, int el, int ec) {", "-    super(exp, fn, bl, bc, el, ec);", "+  public MinusExpression(Expression exp, SourceInfo si) {", "+    super(exp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "907810af8a143cefce09c506a56f72e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ExclusiveOrAssignExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ExclusiveOrAssignExpression(Expression lexp, Expression rexp,                                      String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ExclusiveOrAssignExpression(Expression lexp, Expression rexp,                                      SourceInfo si)", "diff": ["-                                     String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                                     SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90dca661a023b451beba35637bf17271", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/CatchStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CatchStatement(FormalParameter fp, Node blk,                         String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public CatchStatement(FormalParameter fp, Node blk,                         SourceInfo si)", "diff": ["-                        String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                        SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "932dba07445c5130bcfdced6581ffd45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ConstructorCall.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ConstructorCall(Expression exp, List<? extends Expression> args, boolean sup,                                String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ConstructorCall(Expression exp, List<? extends Expression> args, boolean sup,                                SourceInfo si)", "diff": ["-                               String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                               SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "959c55a869ade0d4266d78bb2446bacd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ArrayAccess.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ArrayAccess(Expression exp, Expression cell,                      String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ArrayAccess(Expression exp, Expression cell,                      SourceInfo si)", "diff": ["-                     String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                     SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95bc0e9ecb8317d5f2178843cef65b28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/FieldDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public FieldDeclaration(int flags, TypeName type, String name, Expression init,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public FieldDeclaration(int flags, TypeName type, String name, Expression init,                           SourceInfo si)", "diff": ["-                          String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                          SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97b6d4cbcafaff46ffd42fc3599470bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ReturnStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ReturnStatement(Expression exp,                          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ReturnStatement(Expression exp,                          SourceInfo si)", "diff": ["-                         String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                         SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "981bbfbffa7dbe7ee306b01f54c7c7f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/BooleanLiteral.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public BooleanLiteral(boolean val, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public BooleanLiteral(boolean val, SourceInfo si)", "diff": ["-  public BooleanLiteral(boolean val, String fn, int bl, int bc, int el, int ec) {", "+  public BooleanLiteral(boolean val, SourceInfo si) {", "-          fn, bl, bc, el, ec);", "+          si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9915ae2cedeec2a8f946151d76984dde", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/VariableAccess.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public VariableAccess(String varName, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public VariableAccess(String varName, SourceInfo si)", "diff": ["-  public VariableAccess(String varName, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  public VariableAccess(String varName, SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9afa6f7359ae1288587171a7d88e79fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/FloatLiteral.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public FloatLiteral(String rep, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     public FloatLiteral(String rep, SourceInfo si)", "diff": ["-    public FloatLiteral(String rep, String fn, int bl, int bc, int el, int ec) {", "+    public FloatLiteral(String rep, SourceInfo si) {", "-       fn, bl, bc, el, ec);", "+       si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cd939f28131b1745db4fa0a3a161ba2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/PostIncrement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PostIncrement(Expression exp, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PostIncrement(Expression exp, SourceInfo si)", "diff": ["-  public PostIncrement(Expression exp, String fn, int bl, int bc, int el, int ec) {", "-    super(exp, fn, bl, bc, el, ec);", "+  public PostIncrement(Expression exp, SourceInfo si) {", "+    super(exp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e43edfae0af37b6c52441266bab7de1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ObjectMethodCall.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args,                           SourceInfo si)", "diff": ["-                          String fn, int bl, int bc, int el, int ec) {", "-    super(mn, args, fn, bl, bc, el, ec);", "+                          SourceInfo si) {", "+    super(mn, args, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f82722d8ef15c5e91e3b4ab4575fee0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MultiplyExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public MultiplyExpression(Expression lexp, Expression rexp,                             String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public MultiplyExpression(Expression lexp, Expression rexp,                             SourceInfo si)", "diff": ["-                            String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                            SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0a54f68887620644b5cae567b89d023", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/OrExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public OrExpression(Expression lexp, Expression rexp,                       String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public OrExpression(Expression lexp, Expression rexp,                       SourceInfo si)", "diff": ["-                      String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                      SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1272d09152c882ae1ac22128e8acb77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ShiftRightAssignExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ShiftRightAssignExpression(Expression lexp, Expression rexp,                                     String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ShiftRightAssignExpression(Expression lexp, Expression rexp,                                     SourceInfo si)", "diff": ["-                                    String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                                    SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1ec957e74d05f25cce9f1bb05100fad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/NullLiteral.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public NullLiteral(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     public NullLiteral(SourceInfo si)", "diff": ["-    public NullLiteral(String fn, int bl, int bc, int el, int ec) {", "- super(\"null\", null, null, fn, bl, bc, el, ec);", "+    public NullLiteral(SourceInfo si) {", "+ super(\"null\", null, null, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5de92ce5ba50e4280d902025916333c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ObjectFieldAccess.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ObjectFieldAccess(Expression exp, String fln,                             String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ObjectFieldAccess(Expression exp, String fln,                             SourceInfo si)", "diff": ["-                           String fn, int bl, int bc, int el, int ec) {", "-    super(fln, fn, bl, bc, el, ec);", "+                           SourceInfo si) {", "+    super(fln, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a65d2d531c7ebcbea01b096ec279ac70", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ExpressionStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ExpressionStatement(Expression exp, boolean hasSemi, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ExpressionStatement(Expression exp, boolean hasSemi, SourceInfo si)", "diff": ["-  public ExpressionStatement(Expression exp, boolean hasSemi, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  public ExpressionStatement(Expression exp, boolean hasSemi, SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a992803212ecd712fb74cb72cbfac163", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/GreaterExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public GreaterExpression(Expression lexp, Expression rexp,                            String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public GreaterExpression(Expression lexp, Expression rexp,                            SourceInfo si)", "diff": ["-                           String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                           SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abcb4acdbb96a0fd8bb5f337320067fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MethodDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public MethodDeclaration(int flags, TypeName type, String name,                            List<FormalParameter> params, List<? extends ReferenceTypeName> excepts, BlockStatement body,                            String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public MethodDeclaration(int flags, TypeName type, String name,                            List<FormalParameter> params, List<? extends ReferenceTypeName> excepts, BlockStatement body,                            SourceInfo si)", "diff": ["-                           String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                           SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1fe15c963e6cc0841a7251a1056cbba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InstanceInitializer.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public InstanceInitializer(BlockStatement block,                              String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public InstanceInitializer(BlockStatement block,                              SourceInfo si)", "diff": ["-                             String fn, int bl, int bc, int el, int ec) {", "-    super(block, fn, bl, bc, el, ec);", "+                             SourceInfo si) {", "+    super(block, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b374baba6d9c7a9d0139640b355122eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ClassInitializer.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ClassInitializer(BlockStatement block,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ClassInitializer(BlockStatement block,                           SourceInfo si)", "diff": ["-                          String fn, int bl, int bc, int el, int ec) {", "-    super(block, fn, bl, bc, el, ec);", "+                          SourceInfo si) {", "+    super(block, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b398bc8bf423e73a450a8714cf06d996", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/BinaryExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected BinaryExpression(Expression lexp, Expression rexp,                              String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   protected BinaryExpression(Expression lexp, Expression rexp,                              SourceInfo si)", "diff": ["-                             String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                             SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb63303a0d3ba92953f6043ac5dd08b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ArrayInitializer.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ArrayInitializer(List<? extends Expression> cells,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ArrayInitializer(List<? extends Expression> cells,                           SourceInfo si)", "diff": ["-                          String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                          SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc4cfdcb94ccf72042499b8b4ea212bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ForEachStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ForEachStatement(FormalParameter para, Expression coll, Node body,                       String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ForEachStatement(FormalParameter para, Expression coll, Node body,                       SourceInfo si)", "diff": ["-                      String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                      SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c101d4f3c57ad5c9e7f29979c21a4b7b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/CharTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public CharTypeName(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public CharTypeName(SourceInfo si)", "diff": ["-  public CharTypeName(String fn, int bl, int bc, int el, int ec) {", "-    super(char.class, fn, bl, bc, el, ec);", "+  public CharTypeName(SourceInfo si) {", "+    super(char.class, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c11653325c0cdfbed08d2831a6f75cca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicInnerAllocation.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicInnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs,                                     List<? extends Expression> args, List<TypeName> targs,                                     String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicInnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs,                                     List<? extends Expression> args, List<TypeName> targs,                                     SourceInfo si)", "diff": ["-                                    String fn, int bl, int bc, int el, int ec) {", "-    super(exp, cn, ctargs, args, fn, bl, bc, el, ec);", "+                                    SourceInfo si) {", "+    super(exp, cn, ctargs, args, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1aee09d78db1bab25c83aa74face542", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ArrayTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ArrayTypeName(TypeName et, int dim, boolean varg, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ArrayTypeName(TypeName et, int dim, boolean varg, SourceInfo si)", "diff": ["-  public ArrayTypeName(TypeName et, int dim, boolean varg, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  public ArrayTypeName(TypeName et, int dim, boolean varg, SourceInfo si) {", "+    super(si);", "-    elementType = (dim > 1) ? new ArrayTypeName(et, dim - 1, false, fn, bl, bc, el, ec) : et;", "+    elementType = (dim > 1) ? new ArrayTypeName(et, dim - 1, false, si) : et;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c25ade3bb3e4bd72e3964d08abac4955", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ForStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ForStatement(List<Node> init, Expression cond, List<Node> updt, Node body,                       String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ForStatement(List<Node> init, Expression cond, List<Node> updt, Node body,                       SourceInfo si)", "diff": ["-                      String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                      SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c59517e81ccd99e79f524a5ebd579eef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/NotExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public NotExpression(Expression exp, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public NotExpression(Expression exp, SourceInfo si)", "diff": ["-  public NotExpression(Expression exp, String fn, int bl, int bc, int el, int ec) {", "-    super(exp, fn, bl, bc, el, ec);", "+  public NotExpression(Expression exp, SourceInfo si) {", "+    super(exp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c61daa85071ba1de5ce441dca4bf695e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/BitAndExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public BitAndExpression(Expression lexp, Expression rexp,        String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     public BitAndExpression(Expression lexp, Expression rexp,        SourceInfo si)", "diff": ["-       String fn, int bl, int bc, int el, int ec) {", "- super(lexp, rexp, fn, bl, bc, el, ec);", "+       SourceInfo si) {", "+ super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6588d83e94356015f64e36ba0935632", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/CastExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public CastExpression(TypeName tt, Expression exp,                         String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public CastExpression(TypeName tt, Expression exp,                         SourceInfo si)", "diff": ["-                        String fn, int bl, int bc, int el, int ec) {", "-    super(exp, fn, bl, bc, el, ec);", "+                        SourceInfo si) {", "+    super(exp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c895c3338a081c8e7ae993983b3998ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SimpleAllocation.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args,                           SourceInfo si)", "diff": ["-                          String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                          SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c91a44d9e4d5090734067d0c9b9e545d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ShiftLeftExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ShiftLeftExpression(Expression lexp, Expression rexp,                              String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ShiftLeftExpression(Expression lexp, Expression rexp,                              SourceInfo si)", "diff": ["-                             String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                             SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfc274761470762eb88733160e6faacd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/PreDecrement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PreDecrement(Expression exp, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PreDecrement(Expression exp, SourceInfo si)", "diff": ["-  public PreDecrement(Expression exp, String fn, int bl, int bc, int el, int ec) {", "-    super(exp, fn, bl, bc, el, ec);", "+  public PreDecrement(Expression exp, SourceInfo si) {", "+    super(exp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d003223842e8f48e5cf380561d1b8e52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicSimpleAllocation.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicSimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args,                                       List<TypeName> targs,                                      String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicSimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args,                                       List<TypeName> targs, SourceInfo si)", "diff": ["-                                     List<TypeName> targs,", "-                                     String fn, int bl, int bc, int el, int ec) {", "-    super(tp, args, fn, bl, bc, el, ec);", "+                                     List<TypeName> targs, SourceInfo si) {", "+    super(tp, args, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d093ea376f09e4734d4f4c8ca4c045e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ArrayAllocation.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ArrayAllocation(TypeName tp, TypeDescriptor td,                          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ArrayAllocation(TypeName tp, TypeDescriptor td,                          SourceInfo si)", "diff": ["-                         String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                         SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d16c73c917cf6a4a8c6a2cd5fa0aa08d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/BitOrExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public BitOrExpression(Expression lexp, Expression rexp,       String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     public BitOrExpression(Expression lexp, Expression rexp,       SourceInfo si)", "diff": ["-      String fn, int bl, int bc, int el, int ec) {", "- super(lexp, rexp, fn, bl, bc, el, ec);", "+      SourceInfo si) {", "+ super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d243da28291a12d215fe021b29d64d32", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/AmbiguousName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public AmbiguousName(List<IdentifierToken> ids, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public AmbiguousName(List<IdentifierToken> ids, SourceInfo si)", "diff": ["-  public AmbiguousName(List<IdentifierToken> ids, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  public AmbiguousName(List<IdentifierToken> ids, SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d29f73bcb40520166a2ffa22b95eabd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ThisExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ThisExpression(List<IdentifierToken> ids, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ThisExpression(List<IdentifierToken> ids, SourceInfo si)", "diff": ["-  public ThisExpression(List<IdentifierToken> ids, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  public ThisExpression(List<IdentifierToken> ids, SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2f0b6a8e323166064460c01f44b8bca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ContinueStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ContinueStatement(String label,                            String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ContinueStatement(String label,                            SourceInfo si)", "diff": ["-                           String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                           SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6554db7f2a04d1ccfb0de090e6e080d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ImportDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ImportDeclaration(List<IdentifierToken> ident, boolean pkg, boolean sttc,                            String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ImportDeclaration(List<IdentifierToken> ident, boolean pkg, boolean sttc,                            SourceInfo si)", "diff": ["-                           String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                           SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7178997a218fc89959890aef2c36ca0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicObjectMethodCall.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public PolymorphicObjectMethodCall(Expression exp, String mn, List<? extends Expression> args, List<TypeName> targs,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicObjectMethodCall(Expression exp, String mn, List<? extends Expression> args, List<TypeName> targs,                           SourceInfo si)", "diff": ["-                          String fn, int bl, int bc, int el, int ec) {", "-    super(exp, mn, args, fn, bl, bc, el, ec);", "+                          SourceInfo si) {", "+    super(exp, mn, args, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d98671252247932bbb3a842f381f312b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/RemainderExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public RemainderExpression(Expression lexp, Expression rexp,                              String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public RemainderExpression(Expression lexp, Expression rexp,                              SourceInfo si)", "diff": ["-                             String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                             SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db41d65ee7349b40a037990c1c2ef09b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/HookTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public HookTypeName(Option<TypeName> up, Option<TypeName> low,                       String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public HookTypeName(Option<TypeName> up, Option<TypeName> low,                       SourceInfo si)", "diff": ["-                      String fn, int bl, int bc, int el, int ec) {", "+                      SourceInfo si) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6fe206229959a99f519361ebfd49429", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/FieldAccess.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected FieldAccess(String fln, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   protected FieldAccess(String fln, SourceInfo si)", "diff": ["-  protected FieldAccess(String fln, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  protected FieldAccess(String fln, SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e794fef8a0408a823af6cbb54fa88580", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ShiftLeftAssignExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ShiftLeftAssignExpression(Expression lexp, Expression rexp,                                    String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ShiftLeftAssignExpression(Expression lexp, Expression rexp,                                    SourceInfo si)", "diff": ["-                                   String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                                   SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8e7be32b90cf78c0e6b7aae15c9066c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/IfThenStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public IfThenStatement(Expression cond, Node tstmt,                          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public IfThenStatement(Expression cond, Node tstmt,                          SourceInfo si)", "diff": ["-                         String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                         SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea521d21e8f52f1cd69848c5a347d916", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EqualExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public EqualExpression(Expression lexp, Expression rexp,                          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public EqualExpression(Expression lexp, Expression rexp,                          SourceInfo si)", "diff": ["-                         String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                         SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec37721cf47cc7e47f2ed889b9a7214f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/TypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected TypeName(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   protected TypeName(SourceInfo si)", "diff": ["-  protected TypeName(String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  protected TypeName(SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee44f2f59749afcb8e0b0ddb94a35acd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/DivideExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DivideExpression(Expression lexp, Expression rexp,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public DivideExpression(Expression lexp, Expression rexp,                           SourceInfo si)", "diff": ["-                          String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                          SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0026330567a77d337e4fc64fd06e3d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SynchronizedStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public SynchronizedStatement(Expression lock, Node body,                                String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public SynchronizedStatement(Expression lock, Node body,                                SourceInfo si)", "diff": ["-                               String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                               SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0570d3275bcb11da4372d0548761e63", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SubtractExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SubtractExpression(Expression lexp, Expression rexp,                             String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public SubtractExpression(Expression lexp, Expression rexp,                             SourceInfo si)", "diff": ["-                            String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                            SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3e16898194c245f10776077e4dc9e72", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/Expression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected Expression(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   protected Expression(SourceInfo si)", "diff": ["-  protected Expression(String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+  protected Expression(SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f67201faea2c7905397b0207ad057e79", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ShiftRightExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ShiftRightExpression(Expression lexp, Expression rexp,                               String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ShiftRightExpression(Expression lexp, Expression rexp,                               SourceInfo si)", "diff": ["-                              String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                              SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f82e228ac9ca0b01fcd1234523a335cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/RemainderAssignExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public RemainderAssignExpression(Expression lexp, Expression rexp,                                    String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public RemainderAssignExpression(Expression lexp, Expression rexp,                                    SourceInfo si)", "diff": ["-                                   String fn, int bl, int bc, int el, int ec) {", "-    super(lexp, rexp, fn, bl, bc, el, ec);", "+                                   SourceInfo si) {", "+    super(lexp, rexp, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f869d36c55c0344cb7f7570b913b85f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InstanceOfExpression.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public InstanceOfExpression(Expression exp, TypeName t,                               String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public InstanceOfExpression(Expression exp, TypeName t,                               SourceInfo si)", "diff": ["-                              String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                              SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8b58b1013fe5348d81353e18839c543", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/BreakStatement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public BreakStatement(String label,                         String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public BreakStatement(String label,                         SourceInfo si)", "diff": ["-                        String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "+                        SourceInfo si) {", "+    super(si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fba5a07ba99fb8be42fb714d6f18a634", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/FloatTypeName.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public FloatTypeName(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     public FloatTypeName(SourceInfo si)", "diff": ["-    public FloatTypeName(String fn, int bl, int bc, int el, int ec) {", "- super(float.class, fn, bl, bc, el, ec);", "+    public FloatTypeName(SourceInfo si) {", "+ super(float.class, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffb0d516bbc2696524459a4cd3ca8fa8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/Statement.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected Statement(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "     protected Statement(SourceInfo si)", "diff": ["-    protected Statement(String fn, int bl, int bc, int el, int ec) {", "-\tsuper(fn, bl, bc, el, ec);", "+    protected Statement(SourceInfo si) {", "+\tsuper(si);"]}], "num": 10409}