{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c88bb163ea5702f7e31f774519378ea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9798aed0923c5dcf36f5d7d7f820922e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 171, "methodNumberAfterChange": 172, "signatureBeforeChange": "   public void quit()", "signatureAfterChange": "   public void quit(boolean force)", "diff": ["-  /** Exits the program.  Quits regardless of whether all documents are successfully closed. */", "-  public void quit() {", "+   *  This functionality is not available via the user interface, but it should be. */", "+  public void quit(boolean force) {", "-      if (!closeAllFilesOnQuit()) return;", "+      if (!force && !closeAllFilesOnQuit()) return;", "-      disposeExternalResources();  // kills the interpreter", "+//      disposeExternalResources();  // kills the interpreter", "+      dispose(); // in instances of DefaultGlobalModel, kills the interpreter", "-      // [ 1478796 ] DrJava Does Not Shut Down With Project Open", "-      // On HP tc1100 and Toshiba Portege tablet PCs, there appears to be a problem in a", "-      // shutdown hook, presumably the RMI shutdown hook.", "-      // Shutdown hooks get executed in Runtime.exit (to which System.exit delegates), and", "-      // if a shutdown hook does not complete, the VM does not shut down.", "-      // The difference between Runtime.halt and Runtime.exit is that Runtime.exit runs", "-      // the shutdown hooks and the finalizers (if Runtime.runFinalizersOnExit(true)", "-      // has been called); then it calls Runtime.halt.", "-      // By using Runtime.halt, we do not execute any finalizers or shutdown hooks;", "-      // however it does not seem like we need them.      ", "-//      System.exit(0);", "-      Runtime.getRuntime().halt(0);", "+      /* [ 1478796 ] DrJava Does Not Shut Down With Project Open. On HP tc1100 and Toshiba Portege tablet PCs, there", "+       * appears to be a problem in a shutdown hook, presumably the RMI shutdown hook. Shutdown hooks get executed in ", "+       * Runtime.exit (to which System.exit delegates), and if a shutdown hook does not complete, the VM does not shut", "+       * down.  The difference between Runtime.halt and Runtime.exit is that Runtime.exit runs the shutdown hooks and", "+       * the finalizers (if Runtime.runFinalizersOnExit(true) has been called); then it calls Runtime.halt.  The RMI ", "+       * hooks are potentially important in running unit test that repeatedly start and stop DrJava, so we only invoke", "+       * Runtime.halt if our attempt to exit times out.", "+       */", "+      ", "+      shutdown();", "-    catch(Throwable t) { System.exit(0); /* exit anyway */ }", "+    catch(Throwable t) { shutdown(); /* force exit anyway */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bcb051984dba655fcdb252ccd4c16f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "    public synchronized void killInterpreter()", "signatureAfterChange": "   public void killInterpreter(boolean shouldRestart)", "diff": ["-", "-  public synchronized void killInterpreter() {", "-    if ((_interpreterProcess != null) && (_interpreterJVM != null)) {", "-      try {", "-        //DrJava.consoleOut().println(\"killing jvm! \" + i);", "-        _interpreterJVM.exitJVM();", "-      }", "-      catch (RemoteException re) {", "-        // couldn't ask it to quit nicely. be mean and kill", "-        _interpreterProcess.destroy();", "-      }", "-      ", "-      _interpreterProcess = null;", "-      _interpreterJVM = null;", "-    }", "-  }", "+   */", "+  public void killInterpreter(boolean shouldRestart) {", "+    try {", "+      _enabled = shouldRestart;", "+      if (shouldRestart) {", "+        _cleanlyRestarting = true;", "+      }", "+      quitSlave();", "+    }", "+    catch (RemoteException re) {", "+      _threwException(re);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3e61bdba8dd4d720c99d9fc33fa47d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/PreviewFrame.java", "commitBeforeChange": "5eee0c89bee0b23fafd1958419240f8dd5f380ee", "commitAfterChange": "0c95fc4366bd5654ddd2a4c942b1634c96be89c8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void fastZoom(int percent)", "signatureAfterChange": "   public void setZoom(int percent, boolean fast)", "diff": ["-  public void fastZoom(int percent){", "+  public void setZoom(int percent, boolean fast){", "-    _pagePreview.updateScaledFast(PREVIEW_PAGE_WIDTH + w, PREVIEW_PAGE_HEIGHT + h);", "+    _pagePreview.updateScaled(w, h, fast);", "+    if (!fast) {", "+      refreshScreen();", "+    }"]}], "num": 1795}