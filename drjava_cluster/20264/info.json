{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c1c883838ff0a59685a56cfe66cc2c1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00ceba42a01ba49a6a076f8af8865c47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocumentAdapterTest.java", "commitBeforeChange": "dd27d69f437c114ad258abba00f7d581b096ce79", "commitAfterChange": "1e852b550a8b69787c9e44248d928487d0bf9f6e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testStylesListContentAndReset() throws DocumentAdapterException", "signatureAfterChange": "   public void testStylesListContentAndReset() throws DocumentAdapterException", "diff": ["-    // Reset should clear", "-    _model.setWaitingForFirstInterpreter(false);", "-    //this adds the \"Resetting Interactions\" ", "-    _model.resetInterpreter();", "-    _model.interpreterResetting();", "-    ", "-    assertEquals(\"StylesList after reset should contain 1 pair\",1, _adapter.getStylesList().size());", "-    //Resetting Interactions piece", "-    assertEquals(\"The only element of the StylesList after reset should be\",", "-                 \"((48, 74), error)\", _adapter.getStylesList().get(0).toString());", "+    synchronized(_model){", "+      // Reset should clear", "+      _model.setWaitingForFirstInterpreter(false);", "+      //this adds the \"Resetting Interactions\" ", "+      _model.resetInterpreter();", "+      _model.interpreterResetting();", "+    }", "+    synchronized(_model){", "+      assertEquals(\"StylesList after reset should contain 1 pair\",1, _adapter.getStylesList().size());", "+      //Resetting Interactions piece", "+      assertEquals(\"The only element of the StylesList after reset should be\",", "+                   \"((48, 74), error)\", _adapter.getStylesList().get(0).toString());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33739bb7befbffeb2e360bdf100417cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "43b808b9e05f3378c0faae83fe4225562adc4c6e", "commitAfterChange": "723910d837b2fcdd9f4127559df4832f71fb62e8", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "     public void runMain()       throws ClassNameNotFoundException, IOException", "signatureAfterChange": "     public void runMain()       throws ClassNameNotFoundException, IOException", "diff": ["-        this.startCompile();", "+        // compile only if class file out of sync", "+        if (!checkIfClassFileInSync()) {", "+          startCompile();", "+        }", "-          ", "-          // Then clear the current interaction and replace it with a \"java X\" line.", "-          InteractionsDocument iDoc = _interactionsModel.getDocument();", "+        }", "+        // Then clear the current interaction and replace it with a \"java X\" line.", "+        InteractionsDocument iDoc = _interactionsModel.getDocument();", "+//        if (iDoc.inProgress()) {", "+//          addListener(_notifyListener);", "+//          _shouldRun = true;", "+//          synchronized(_notifyListener) {", "+//            try {", "+//              _notifyListener.wait();", "+//            }", "+//            catch(InterruptedException ie) {", "+//            }", "+//          }", "+//          removeListener(_notifyListener);", "+//          if (!_shouldRun) {", "+//            // The interactions pane was reset during another interaction.", "+//            //  Don't run the main method.", "+//            return;", "+//          }", "+//        }", "+        synchronized (_interpreterControl) {", "-          ", "+        ", "-          ", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d8e82badf6637d9e1512eb8f1f027c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "ff2e70871791df593185a62b1085ea613a30f1d1", "commitAfterChange": "aef1425a6103fe62ee23d162065d6ac1d8b40238", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void updatelru(OpenDefinitionsDocument odd, Pair<DefinitionsDocument,DDReconstructor> pair)", "signatureAfterChange": "   private void updatelru(OpenDefinitionsDocument odd, Pair<DefinitionsDocument,DDReconstructor> pair)", "diff": ["-    if(!lru.isEmpty() && lru.getFirst() == odd){", "-      //System.out.println(\"updatelru: \" + odd + \" is first in list\");", "-      return;", "+    synchronized(lru) {", "+      if(!lru.isEmpty() && lru.getFirst() == odd){", "+        //System.out.println(\"updatelru: \" + odd + \" is first in list\");", "+        return;", "+      }", "+      lru.remove(odd);", "-    lru.remove(odd);", "-      lru.addFirst(odd);", "+      synchronized(lru) {", "+        lru.addFirst(odd);", "+      }", "-    ", "+", "-      odd = lru.removeLast();", "+      synchronized(lru) {", "+        odd = lru.removeLast();", "+      }", "-      }else{", "+      } else {", "-        update(odd, removedPair.getSecond());", "+          update(odd, removedPair.getSecond());"]}], "num": 20264}