{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c2d690d597dcdcc59c438bf2b56e7a3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c8311fb743edccb771a3dbd76f8d2dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "576713321d388945af9795f8f5bacbafa14cd87f", "commitAfterChange": "b814c7e145dc4411f1437e59c56bc53ee860800f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public static void configureAndLoadDrJavaRoot(String[] args)", "signatureAfterChange": "      public static void configureAndLoadDrJavaRoot(String[] args)", "diff": ["-        checkForCompilersAndDebugger(args);", "+        boolean restart = !checkForCompilersAndDebugger(args);", "-        // Start the DrJava master JVM", "-        String pathSep = System.getProperty(\"path.separator\");", "-        String classPath = edu.rice.cs.util.FileOps.convertToAbsolutePathEntries(System.getProperty(\"java.class.path\"));", "-        ", "-        // Include both the javac location stored in .drjava prefences and the path proposed by ToolsJarClassLoader ", "-        File toolsFromConfig = getConfig().getSetting(JAVAC_LOCATION);", "-        classPath += pathSep + ToolsJarClassLoader.getToolsJarClassPath(toolsFromConfig);", "-        ", "-        File workDir = new File(System.getProperty(\"user.home\"));", "+        // Restart if there are custom JVM args", "+        restart |= getConfig().getSetting(MASTER_JVM_ARGS).length() > 0;", "-        // need to make the paths absolute since the working directory might change", "-        for(String fn: _filesToOpen) {", "-            classArgsList.add(new File(fn).getAbsolutePath());", "-        }", "+        classArgsList.addAll(_filesToOpen);", "-        if (_showDebugConsole) classArgsList.add(0,\"-debugConsole\");", "+        if (_showDebugConsole) { classArgsList.addFirst(\"-debugConsole\"); }", "-        String[] jvmArgs = _jvmArgs.toArray(new String[0]);", "-          classArgsList.add(0,\"-config\");", "-          // need to make the paths absolute since the working directory might change", "-          classArgsList.add(1,_propertiesFile.getAbsolutePath());", "+          // Placed in reversed order to get \"-config filename\"", "+          classArgsList.addFirst(_propertiesFile.getAbsolutePath());", "+          classArgsList.addFirst(\"-config\");", "+", "-        // Run a new copy of DrJava and exit", "-        try {", "+        if (restart) {", "+          // Determine classpath", "+          String pathSep = System.getProperty(\"path.separator\");", "+          String classPath = FileOps.convertToAbsolutePathEntries(System.getProperty(\"java.class.path\"));", "+          ", "+          // Include both the javac location stored in .drjava prefences and the path proposed by ToolsJarClassLoader ", "+          File toolsFromConfig = getConfig().getSetting(JAVAC_LOCATION);", "+          classPath += pathSep + ToolsJarClassLoader.getToolsJarClassPath(toolsFromConfig);", "+        ", "+          // Run a new copy of DrJava and exit", "+          try {", "-//                             \"; jvmArgs = \" + Arrays.toString(jvmArgs) + \"; workDir = \" + workDir);", "-          ExecJVM.runJVM(\"edu.rice.cs.drjava.DrJavaRoot\", classArgs, classPath, jvmArgs, workDir);", "+//                             \"; jvmArgs = \" + _jvmArgs + \"; workDir = \" + workDir);", "+            ExecJVM.runJVM(\"edu.rice.cs.drjava.DrJavaRoot\", classArgs, classPath, _jvmArgs.toArray(new String[0]), null);", "+          }", "+          catch (IOException ioe) {", "+            // Display error", "+            final String[] text = {", "+              \"DrJava was unable to load its compiler and debugger.  Would you \",", "+              \"like to start DrJava without a compiler and debugger?\", \"\\nReason: \" + ioe.toString()", "+            };", "+            int result = JOptionPane.showConfirmDialog(null, text, \"Could Not Load Compiler and Debugger\",", "+                                                       JOptionPane.YES_NO_OPTION);", "+            if (result != JOptionPane.YES_OPTION) { System.exit(0); }", "+          }", "-        catch (IOException ioe) {", "-          // Display error", "-          final String[] text = {", "-            \"DrJava was unable to load its compiler and debugger.  Would you \",", "-            \"like to start DrJava without a compiler and debugger?\", \"\\nReason: \" + ioe.toString()", "-          };", "-          int result = JOptionPane.showConfirmDialog(null, text, \"Could Not Load Compiler and Debugger\",", "-                                                     JOptionPane.YES_NO_OPTION);", "-          if (result != JOptionPane.YES_OPTION) { System.exit(0); }", "+        ", "+        else {", "+          // No restart -- just invoke DrJavaRoot.main.", "+          DrJavaRoot.main(classArgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a309d855d479922b2f7b246d1fe5b9de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "34ce8483136d91f9eff46f1971dc8a612f363868", "commitAfterChange": "cfd4689ec89c3908ea0306a11510c85ea5436de0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public static void configureAndLoadDrJavaRoot(String[] args)", "signatureAfterChange": "      public static void configureAndLoadDrJavaRoot(String[] args)", "diff": ["-      // handleCommandLineArgs will return true if DrJava should be loaded", "-      if (handleCommandLineArgs(args)) {", "-        ", "-        // Restart if there are custom JVM args", "-        boolean restart = getConfig().getSetting(MASTER_JVM_ARGS).length() > 0;", "-        ", "-        LinkedList<String> classArgsList = new LinkedList<String>();", "-        classArgsList.addAll(_filesToOpen);", "-", "-        // Add the parameters \"-debugConsole\" to classArgsList if _showDebugConsole is true", "-        if (_showDebugConsole) { classArgsList.addFirst(\"-debugConsole\"); }", "-        ", "-        if (!_propertiesFile.equals(DEFAULT_PROPERTIES_FILE)) {", "-          // Placed in reversed order to get \"-config filename\"", "-          classArgsList.addFirst(_propertiesFile.getAbsolutePath());", "-          classArgsList.addFirst(\"-config\");", "+      // if there were files passed on the command line,", "+      // try to open them in an existing instance", "+      if (!_forceNewInstance &&", "+          DrJava.getConfig().getSetting(edu.rice.cs.drjava.config.OptionConstants.REMOTE_CONTROL_ENABLED) &&", "+          (_filesToOpen.size()>0)) {", "+        try {", "+          boolean ret = RemoteControlClient.openFile(null);", "+          if (RemoteControlClient.isServerRunning()) {", "+            // existing instance is running and responding", "+            for (int i=0; i<_filesToOpen.size(); ++i) {", "+              RemoteControlClient.openFile(new File(_filesToOpen.get(i)));", "+            }", "+            // files opened in existing instance, quit", "+            System.exit(0);", "+          }", "-", "-        String[] classArgs = classArgsList.toArray(new String[0]);", "+        catch(IOException ioe) {", "+          ioe.printStackTrace();", "+        }      ", "+      }", "+      ", "+      // Restart if there are custom JVM args", "+      boolean restart = getConfig().getSetting(MASTER_JVM_ARGS).length() > 0;", "+      ", "+      LinkedList<String> classArgsList = new LinkedList<String>();", "+      classArgsList.addAll(_filesToOpen);", "+      ", "+      // Add the parameters \"-debugConsole\" to classArgsList if _showDebugConsole is true", "+      if (_showDebugConsole) { classArgsList.addFirst(\"-debugConsole\"); }", "+      ", "+      if (!_propertiesFile.equals(DEFAULT_PROPERTIES_FILE)) {", "+        // Placed in reversed order to get \"-config filename\"", "+        classArgsList.addFirst(_propertiesFile.getAbsolutePath());", "+        classArgsList.addFirst(\"-config\");", "+      }", "+      ", "+      String[] classArgs = classArgsList.toArray(new String[0]);", "+      ", "+      if (restart) {", "+        String classPath = System.getProperty(\"java.class.path\");", "-        if (restart) {", "-          String classPath = System.getProperty(\"java.class.path\");", "-          ", "-          // Run a new copy of DrJava and exit", "-          try {", "+        // Run a new copy of DrJava and exit", "+        try {", "-            ExecJVM.runJVM(\"edu.rice.cs.drjava.DrJavaRoot\", classArgs, classPath, _jvmArgs.toArray(new String[0]), null);", "-          }", "-          catch (IOException ioe) {", "-            // Display error", "-            final String[] text = {", "-              \"DrJava was unable to load its compiler and debugger.  Would you \",", "-              \"like to start DrJava without a compiler and debugger?\", \"\\nReason: \" + ioe.toString()", "-            };", "-            int result = JOptionPane.showConfirmDialog(null, text, \"Could Not Load Compiler and Debugger\",", "-                                                       JOptionPane.YES_NO_OPTION);", "-            if (result != JOptionPane.YES_OPTION) { System.exit(0); }", "-          }", "+          ExecJVM.runJVM(\"edu.rice.cs.drjava.DrJavaRoot\", classArgs, classPath, _jvmArgs.toArray(new String[0]), null);", "-        ", "-        else {", "-          // No restart -- just invoke DrJavaRoot.main.", "-          DrJavaRoot.main(classArgs);", "+        catch (IOException ioe) {", "+          // Display error", "+          final String[] text = {", "+            \"DrJava was unable to load its compiler and debugger.  Would you \",", "+            \"like to start DrJava without a compiler and debugger?\", \"\\nReason: \" + ioe.toString()", "+          };", "+          int result = JOptionPane.showConfirmDialog(null, text, \"Could Not Load Compiler and Debugger\",", "+                                                     JOptionPane.YES_NO_OPTION);", "+          if (result != JOptionPane.YES_OPTION) { System.exit(0); }", "+      }", "+      ", "+      else {", "+        // No restart -- just invoke DrJavaRoot.main.", "+        DrJavaRoot.main(classArgs);"]}], "num": 18029}