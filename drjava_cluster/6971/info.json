{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ee43abb1db7b5cd2a5c78fe872213e6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c430d0a865da587e8c7755aa28a4240", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JarOptionsDialog.java", "commitBeforeChange": "6f37af6087e88b55d504fabdb6eee22be7ba1948", "commitAfterChange": "7fcdc5820c7f1c50a17a282e38bc904783e87e7f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 43, "signatureBeforeChange": "   private boolean _saveSettings()", "signatureAfterChange": "   private boolean _saveSettings()", "diff": ["-   */", "+  /** Save the settings for this dialog. */", "-    // TODO: We want to save these settings in the project", "+    _lastState = new FrameState(this);", "+    if (!_model.getCreateJarFile().getName().equals(_jarFileSelector.getFileFromField().getName())) {", "+      _model.setCreateJarFile(_jarFileSelector.getFileFromField());", "+    }", "+    int f = 0;", "+    if (_jarClasses.isSelected()) f |= JAR_CLASSES;", "+    if (_jarSources.isSelected()) f |= JAR_SOURCES;", "+    if (_makeExecutable.isSelected()) f |= MAKE_EXECUTABLE;", "+    if (f!=_model.getCreateJarFlags()) {", "+      _model.setCreateJarFlags(f);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad0424b4f75695f963b50ec1fab1fb47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/AbstractLog.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   protected String formatLocation(StackTraceElement location)", "signatureAfterChange": "   protected String formatLocation(StackTraceElement location)", "diff": ["-    return location.toString();", "+    StringBuilder result = new StringBuilder();", "+    result.append(location.getClassName());", "+    result.append(\".\");", "+    result.append(location.getMethodName());", "+    result.append(\"(\");", "+    int line = location.getLineNumber();", "+    if (line >= 0) { result.append(line); }", "+    else if (location.isNativeMethod()) { result.append(\"native\"); }", "+    else { result.append(\"unknown\"); }", "+    result.append(\")\");", "+    return result.toString();"]}], "num": 6971}