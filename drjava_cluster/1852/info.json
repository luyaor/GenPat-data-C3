{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "163e4757a95bde927ff7bc2dc684ff50", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "379bb8119ecd91626bff9620ce3760c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "6bfab9f5cad6f12d0935dd59b83d99bfc86909eb", "commitAfterChange": "5aacfadc90765b33349d6f9aff91d50fefd76986", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testMixed() throws BadLocationException", "signatureAfterChange": "   public void testMixed() throws BadLocationException", "diff": ["-    list[0] = f2_name;", "+    list[0] = f4_name;", "-    list[3] = f3_name;", "-    list[4] = f1_name;", "+    list[3] = f5_name;", "+    list[4] = f6_name;", "-    assertEquals(\"Correct length of file 1?\", f2_contents.length(), doc1.getLength());", "-    assertEquals(\"Do the contents of file 1 match?\", f2_contents, doc1.getText(0,f2_contents.length()));", "+    assertEquals(\"Correct length of file 1?\", f4_contents.length(), doc1.getLength());", "+    assertEquals(\"Do the contents of file 1 match?\", f4_contents, doc1.getText(0,f4_contents.length()));", "-    assertEquals(\"Correct length of file 2?\", f3_contents.length(), doc2.getLength());", "-    assertEquals(\"Do the contents of file 2 match?\", f3_contents, doc2.getText(0,f3_contents.length()));", "+    assertEquals(\"Correct length of file 2?\", f5_contents.length(), doc2.getLength());", "+    assertEquals(\"Do the contents of file 2 match?\", f5_contents, doc2.getText(0,f5_contents.length()));", "-    assertEquals(\"Correct length of file 3?\", f1_contents.length(), doc3.getLength());", "-    assertEquals(\"Do the contents of file 3 match?\", f1_contents, doc3.getText(0,f1_contents.length()));", "+    assertEquals(\"Correct length of file 3?\", f6_contents.length(), doc3.getLength());", "+    assertEquals(\"Do the contents of file 3 match?\", f6_contents, doc3.getText(0,f6_contents.length()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd835493076824303a1a2d2f3f19c056", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "6bfab9f5cad6f12d0935dd59b83d99bfc86909eb", "commitAfterChange": "5aacfadc90765b33349d6f9aff91d50fefd76986", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testDups() throws BadLocationException", "signatureAfterChange": "   public void testDups() throws BadLocationException", "diff": ["-    list[0] = f1_name;", "-    list[1] = nof1_name;", "-    list[2] = nof2_name;", "-    list[3] = f2_name;", "-    list[4] = f2_name;", "-    list[5] = f1_name;", "+    list[0] = f7_name;", "+    list[1] = nof4_name;", "+    list[2] = nof5_name;", "+    list[3] = f8_name;", "+    list[4] = f8_name;", "+    list[5] = f7_name;", "-    assertEquals(\"Correct length of file 1?\", f1_contents.length(), doc1.getLength());", "-    assertEquals(\"Do the contents of file 1 match?\", f1_contents, doc1.getText(0,f1_contents.length()));", "+    assertEquals(\"Correct length of file 1?\", f7_contents.length(), doc1.getLength());", "+    assertEquals(\"Do the contents of file 1 match?\", f7_contents, doc1.getText(0,f7_contents.length()));", "-    assertEquals(\"Correct length of file 2?\", f2_contents.length(), doc2.getLength());", "-    assertEquals(\"Do the contents of file 2 match?\", f2_contents, doc2.getText(0,f2_contents.length()));", "+    assertEquals(\"Correct length of file 2?\", f8_contents.length(), doc2.getLength());", "+    assertEquals(\"Do the contents of file 2 match?\", f8_contents, doc2.getText(0,f8_contents.length()));"]}], "num": 1852}