{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66bdb7ca46da99d3349ec1b6af77f6eb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12bb9f7b75fc7dcd8936b25e657c2d26", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public String getVariableToString(String var)", "signatureAfterChange": "   public Option<String> getVariableToString(String var)", "diff": ["+   */", "+  public Option<String> getVariableToString(String var) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return Option.none(); }", "+    try { return Option.some(remote.getVariableToString(var)); }", "+    catch (RemoteException e) { _handleRemoteException(e); return Option.none(); }", "+  }", "-  public String getVariableToString(String var) {", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (! _restart) return null;", "-    ", "-    InterpreterJVMRemoteI interpreter = ensureInterpreterConnected();", "-    try { return interpreter.getVariableToString(var); }", "-    catch (RemoteException e) { _threwException(e); return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c09691312f39c68d0cf694c706f9bcc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public String getVariableType(String var)", "signatureAfterChange": "   public Option<String> getVariableType(String var)", "diff": ["+   */", "+  public Option<String> getVariableType(String var) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return Option.none(); }", "+    try { return Option.some(remote.getVariableType(var)); }", "+    catch (RemoteException e) { _handleRemoteException(e); return Option.none(); }", "+  }", "-    */", "-  public String getVariableType(String var) {", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (! _restart) return null;", "-    ", "-    InterpreterJVMRemoteI interpreter = ensureInterpreterConnected();", "-    try { return interpreter.getVariableType(var); }", "-    catch (RemoteException e) { _threwException(e); return null; }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69022eedee519863c9d1bc91adda6b05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void setPrivateAccessible(boolean allow)", "signatureAfterChange": "   public boolean setPrivateAccessible(boolean allow)", "diff": ["+   */", "+  public boolean setPrivateAccessible(boolean allow) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.setPrivateAccessible(allow); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "-    * is connected. */", "-  public void setPrivateAccessible(boolean allow) { // TODO: synchronize?", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (!_restart) return;", "-    ", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    try { slave.setPrivateAccessible(allow); }", "-    catch (RemoteException re) { _threwException(re); }", "-  }"]}], "num": 20121}