{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1e48f28ea0335e5ee307b3e8274d053", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54915c975d42dca59cd307ef1458955d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "7f0431102d802f25498e6ad5a22057f937b25cb6", "commitAfterChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public Vector<HighlightStatus> getHighlightStatus(final int start,                                                     final int length)", "signatureAfterChange": "   public Vector<HighlightStatus> getHighlightStatus(final int start,                                                     final int length)", "diff": ["-    curLocation = start; //+ rmc._offset;", "+    curLocation = start;", "+    // Make sure this token length doesn't extend past start+length.", "+    // This is because we guarantee that the returned vector only refers", "+    // to chars on [start, start+length).", "+    int requestEnd = start + length;", "+    if ((curLocation + curLength) > requestEnd) {", "+      curLength = requestEnd - curLocation;", "+    }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62c2bc4e72ffdce03fdad3a5f470445b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelControl.java", "commitBeforeChange": "7f0431102d802f25498e6ad5a22057f937b25cb6", "commitAfterChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public Vector<HighlightStatus> getHighlightStatus(final int start,                                                     final int length)", "signatureAfterChange": "   public Vector<HighlightStatus> getHighlightStatus(final int start,                                                     final int length)", "diff": ["-    curLocation = start; //+ rmc._offset;", "+    curLocation = start;", "+    // Make sure this token length doesn't extend past start+length.", "+    // This is because we guarantee that the returned vector only refers", "+    // to chars on [start, start+length).", "+    int requestEnd = start + length;", "+    if ((curLocation + curLength) > requestEnd) {", "+      curLength = requestEnd - curLocation;", "+    }", "+"]}], "num": 27501}