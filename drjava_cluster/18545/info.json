{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0517e0205f51410f62037b0b46336502", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01cd530638b5e2c27ea3279cc27b5a92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVMTest.java", "commitBeforeChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "commitAfterChange": "6fa1e9e0526601b88fed849b111530adacda855f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void setUp()", "signatureAfterChange": "      public void setUp()", "diff": ["-    _debugInterpreters = InterpreterJVM.ONLY.getDebugInterpreters();", "+    _debugInterpreters = InterpreterJVM.ONLY.getInterpreters();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3887d9b9dc7c54e4dd4f9f6834482ff1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ConstructorDeclaration.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public String toStringHelper()", "signatureAfterChange": "      public String toStringHelper()", "diff": ["-    return java.lang.reflect.Modifier.toString(getAccessFlags())+\" \"+getName()+\" \"+getParameters()+\" \"+getExceptions()+\" \"+getConstructorInvocation()+\" \"+getStatements();", "+    return java.lang.reflect.Modifier.toString(getAccessFlags())+\" \"+getName()+\" \"+getParameters()+\" \"+getExceptions()+\" \"+getConstructorCall()+\" \"+getStatements();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d7e90c19ec0fad395f95d6958fe0828", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "73d8f0963e3941f0992013e94dd38c610fad8320", "commitAfterChange": "79f5d66e5d12491f568b49d5064798e6d989d102", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     @Override public Type visit(AnonymousAllocation node)", "signatureAfterChange": "     @Override public Type visit(AnonymousAllocation node)", "diff": ["-      new ClassMemberChecker(new ClassContext(context, c), opt).checkMembers(node.getMembers());", "+      new ClassMemberChecker(new ClassContext(context, c), opt).checkClassMembers(node.getMembers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2ccc07d0d677bbe7c93342db883d8c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "73d8f0963e3941f0992013e94dd38c610fad8320", "commitAfterChange": "79f5d66e5d12491f568b49d5064798e6d989d102", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     @Override public Type visit(AnonymousInnerAllocation node)", "signatureAfterChange": "     @Override public Type visit(AnonymousInnerAllocation node)", "diff": ["-      new ClassMemberChecker(new ClassContext(context, c), opt).checkMembers(node.getMembers());", "+      new ClassMemberChecker(new ClassContext(context, c), opt).checkClassMembers(node.getMembers());"]}], "num": 18545}