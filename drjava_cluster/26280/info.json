{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1a1c381bed8e03af49fed63c0bdaf42", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5be4f7393be42d8af37a0b9cc808615", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartingNewStmtTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testStartOfStmtIgnoreWhiteSpaceAndCommentsInBetween() throws BadLocationException", "signatureAfterChange": "   public void testStartOfStmtIgnoreWhiteSpaceAndCommentsInBetween() throws BadLocationException", "diff": ["-        rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "+        rule.testApplyRule(_doc, Indenter.IndentReason.OTHER));", "-        rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "+        rule.testApplyRule(_doc, Indenter.IndentReason.OTHER));", "-        rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "+        rule.testApplyRule(_doc, Indenter.IndentReason.OTHER));", "-        rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "+        rule.testApplyRule(_doc, Indenter.IndentReason.OTHER));", "-        rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "+        rule.testApplyRule(_doc, Indenter.IndentReason.OTHER));", "-        rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "+        rule.testApplyRule(_doc, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2f370ad43bc1b3ebe0b741b4e243f11", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartingNewStmtTest.java", "commitBeforeChange": "5d2701667cf27d44a069ea945e7b8afcad461e22", "commitAfterChange": "0dc9a35e122071847260a9f3f7c5a7bac3c46105", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testStartOfStmtIgnoreWhiteSpaceAndCommentsInBetween() throws BadLocationException", "signatureAfterChange": "   public void testStartOfStmtIgnoreWhiteSpaceAndCommentsInBetween() throws BadLocationException", "diff": ["-        rule.applyRule(_doc, Indenter.OTHER));", "+        rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "-        rule.applyRule(_doc, Indenter.OTHER));", "+        rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "-        rule.applyRule(_doc, Indenter.OTHER));", "+        rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "-        rule.applyRule(_doc, Indenter.OTHER));", "+        rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "-        rule.applyRule(_doc, Indenter.OTHER));", "+        rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "-        rule.applyRule(_doc, Indenter.OTHER));", "+        rule.applyRule(_doc, Indenter.IndentReason.OTHER));"]}], "num": 26280}