{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ed742827e4f6927b9be83e623eb9817", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3838071702788d82044e15226b9c8684", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsEditorKit.java", "commitBeforeChange": "83bfa3db7cd314c7293a9c4dbfac25d41d093c45", "commitAfterChange": "b05d6101d72721dc72e1089de24af7a09f520884", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DefinitionsEditorKit(GlobalEventNotifier notifier)", "signatureAfterChange": "   public DefinitionsEditorKit(GlobalEventNotifier notifier)", "diff": ["-  public DefinitionsEditorKit(GlobalEventNotifier notifier) { _notifier = notifier; }", "+  public DefinitionsEditorKit(GlobalEventNotifier notifier) {", "+    _notifier = notifier;", "+    Action[] supActions = super.getActions();", "+    _actions = new Action[supActions.length];", "+    LOG.log(\"DefinitionsEditorKit ctor\");", "+    for(int i=0; i<_actions.length; ++i) {", "+      Action a = supActions[i];", "+      Object name = a.getValue(\"Name\");", "+      LOG.log(name.toString());", "+      if (name.equals(beginWordAction)) {", "+        _actions[i] = new BeginWordAction(beginWordAction, false);", "+        LOG.log(\"\\treplacing\");", "+      }", "+      else if (name.equals(endWordAction)) {", "+        _actions[i] = new EndWordAction(endWordAction, false);", "+        LOG.log(\"\\treplacing\");", "+      }", "+      else if (name.equals(nextWordAction)){", "+        _actions[i] = new NextWordAction(nextWordAction, false);", "+        LOG.log(\"\\treplacing\");", "+      }", "+      else if (name.equals(previousWordAction)) {", "+        _actions[i] = new PreviousWordAction(previousWordAction, false);", "+        LOG.log(\"\\treplacing\");", "+      }", "+      else if (name.equals(selectWordAction)) {", "+        _actions[i] = new SelectWordAction();", "+        LOG.log(\"\\treplacing\");", "+      }", "+      else _actions[i] = a;", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f5bc89b9219d820e6d526b72c9fdaa5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/ConfigProperty.java", "commitBeforeChange": "807926b925dfb352a7bbfb2667234847dc65f45d", "commitAfterChange": "e753017eccbd872714e58c93831cb488b5045d2a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void update()", "signatureAfterChange": "   public void update()", "diff": ["-      if (_name.equals(\"config.\"+key)) { _value = value; return; }", "+      if (_name.equals(\"config.\"+key)) {", "+        if (op instanceof VectorOption) {", "+          @SuppressWarnings(\"unchecked\")", "+          Vector<?> vec = ((VectorOption)op).parse(value);", "+          StringBuilder sb = new StringBuilder();", "+          for(Object o: vec) {", "+            sb.append(_attributes.get(\"sep\"));", "+            sb.append(o.toString());", "+          }", "+          _value = sb.toString();", "+          if (_value.startsWith(_attributes.get(\"sep\"))) {", "+            _value= _value.substring(_attributes.get(\"sep\").length());", "+          }", "+        }", "+        else if (_name.equals(\"config.debug.step.exclude\")) {", "+          java.util.StringTokenizer tok = new java.util.StringTokenizer(value);", "+          StringBuilder sb = new StringBuilder();", "+          while(tok.hasMoreTokens()) {", "+            sb.append(_attributes.get(\"sep\"));", "+            sb.append(tok.nextToken());", "+          }", "+          _value = sb.toString();", "+          if (_value.startsWith(_attributes.get(\"sep\"))) {", "+            _value= _value.substring(_attributes.get(\"sep\").length());", "+          }", "+        }", "+        else {", "+          _value = value;", "+        }", "+        return;", "+      }"]}], "num": 565}