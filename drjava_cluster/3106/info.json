{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dec4fa6cda4a302f9d4c01bfc33bdba5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03c132e6b5613168d367d47368a82eaa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f0e93e8f70d74090c83524f565ab98d73710c2e7", "commitAfterChange": "cea95770b041dbb7494d9ea4d762c8077631d283", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": "   public void openFolder(DirectorySelector openSelector)", "signatureAfterChange": "   public void openFolder(DirectorySelector openSelector)", "diff": ["+      }catch(IllegalStateException e){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a05e5a630d4c6e4ce6669380d56f072", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fb8ddcbfd71bd75d2b307b4e83f7a834ec364082", "commitAfterChange": "be84679bc73e85f88d6958fbfdf8b35be73855ab", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "   void debuggerStep(int flag)", "signatureAfterChange": "   void debuggerStep(int flag)", "diff": ["+      catch (IllegalStateException ise) {", "+        // This may happen if the user if stepping very frequently,", "+        // and is even more likely if they are using both hotkeys", "+        // and UI buttons. Ignore it in this case. ", "+        // Hopefully, there are no other situations where", "+        // the user can be trying to step while there are no", "+        // suspended threads.", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64705a8e0ffd6bbcf7e7bc2d59967dbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   static void openCommandLineFiles(MainFrame mf, String[] filesToOpen)", "signatureAfterChange": "   static void openCommandLineFiles(MainFrame mf, String[] filesToOpen)", "diff": ["+      catch (FileMovedException aoe) {", "+        // This explicitly does nothing to ignore duplicate files.", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7add951d24904807f6aed7de85ebdfe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "commitAfterChange": "5491f825d209840377d660c81134a657fe7ce675", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public static File getCanonicalFile(File f)", "signatureAfterChange": "   public static File getCanonicalFile(File f)", "diff": ["-   *  exception when the file path syntax is incorrect.  It returns the absolute File intead. */", "+   *  other reason).  It returns the absolute File intead. */", "-    catch(IOException e) { /* fall through */ }", "+    catch (IOException e) { /* fall through */ }", "+    catch (SecurityException e) { /* fall through */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f45bb0b840b3e45ec82d3cb2cca4dde7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/ConfigurationTool.java", "commitBeforeChange": "6321c6a506dc33e42eaf8a2fcb096efc58a17cfa", "commitAfterChange": "3ab388200c9c1c0450b2c8e9399bd85a6a67bf11", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "             public FileConfiguration evaluate()", "signatureAfterChange": "             public FileConfiguration evaluate()", "diff": ["-                } ", "+                }", "+                catch (Exception e) {", "+                  // problem parsing the config file. Just use defaults", "+                }"]}], "num": 3106}