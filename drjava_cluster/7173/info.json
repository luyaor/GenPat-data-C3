{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ab5201ab35908fa74998696d6116213", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "428e6f01026c13262b415b89dce1c54c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platforms/src-jdk16/edu/rice/cs/drjava/model/compiler/Javac160Compiler.java", "commitBeforeChange": "67e7b92991e4e8f9e841666ccb236411356e233e", "commitAfterChange": "6ac69c3693d2354a6dc85f7c3cd5e1082ee678fa", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private Context createContext(File[] sourceRoots)", "signatureAfterChange": "      private Context createContext(File[] sourceRoots)", "diff": ["-    options.putAll(CompilerOptions.getOptions(_warningsEnabled));", "+    // options.putAll(CompilerOptions.getOptions(_warningsEnabled));  // No putAll(String, String) method in Options!", "+    for (Map.Entry<String, String> e: CompilerOptions.getOptions(_warningsEnabled).entrySet()) ", "+      options.put(e.getKey(), e.getValue());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abd0f40a58223e4f98aea7f8d1462593", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "bd2e852d4b09497531ae79af49475815d01d70b1", "commitAfterChange": "85b72c50d3f809a70141774d731cbef2c25b2f7f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   protected void generateDirTree()", "signatureAfterChange": "   protected void generateDirTree()", "diff": ["-    _expansionListener = new TreeExpansionListener() {", "-      public void  treeCollapsed(TreeExpansionEvent event) {", "-        // do nothing for now", "-      }", "-      public void  treeExpanded(TreeExpansionEvent event) {", "-        TreePath path = event.getPath();", "-        DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();", "-        ensureHasChildren(node);", "-      }", "-    };", "-    ", "+    // add any external file listeners to the tree", "+    for (TreeSelectionListener tsl : _fileSelectionListeners.values()) {", "+      _tree.addTreeSelectionListener(tsl);", "+    }", "+    ", "+    _expansionListener = new TreeExpansionListener() {", "+      public void  treeCollapsed(TreeExpansionEvent event) {", "+        // do nothing for now", "+      }", "+      public void  treeExpanded(TreeExpansionEvent event) {", "+        TreePath path = event.getPath();", "+        DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();", "+        ensureHasChildren(node);", "+      }", "+    };", "-    CustomTreeCellRenderer _cellRenderer = new CustomTreeCellRenderer();", "-    _tree.setCellRenderer(_cellRenderer);", "-    ", "-    // This should be optional.", "-    FileTextField textField = new FileTextField();", "-    CustomCellEditor cce =  new CustomCellEditor(textField);", "-    DefaultTreeCellEditor _cellEditor = new CustomTreeCellEditor(_tree, _cellRenderer,cce);", "-    ", "-    cce.addCellEditorListener(_cellEditorListener);", "-    _tree.setCellEditor(_cellEditor);", "-    _tree.setEditable(_isEditable);", "-    ", "-    if (_allowMultiple) {", "-      _tree.getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION);", "-    }", "-    else {", "-      _tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION); ", "-    }", "+    ", "+    CustomTreeCellRenderer _cellRenderer = new CustomTreeCellRenderer();", "+    _tree.setCellRenderer(_cellRenderer);", "+    ", "+    // This should be optional.", "+    FileTextField textField = new FileTextField();", "+    CustomCellEditor cce =  new CustomCellEditor(textField);", "+    DefaultTreeCellEditor _cellEditor = new CustomTreeCellEditor(_tree, _cellRenderer,cce);", "+    ", "+    cce.addCellEditorListener(_cellEditorListener);", "+    _tree.setCellEditor(_cellEditor);", "+    _tree.setEditable(_isEditable);", "+    ", "+    if (_allowMultiple) {", "+      _tree.getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION);", "+    }", "+    else {", "+      _tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION); ", "+    }", "+    _treeIsGenerated = true;", "+    _forceTreeGenerate = false;", "+    updateTreeSelectionPath();"]}], "num": 7173}