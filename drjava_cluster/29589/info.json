{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4052c76b75999fd40f456ed44744fa28", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b600e866b4b04e9828ddf6d389261139", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "364d0b19a9e3896eddcd174b6cb5aa4a53e74f1f", "commitAfterChange": "65d59a6eb5c83a25b9e6bfdf698fd61ca6d2f695", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ConfigFrame ()", "signatureAfterChange": "   public ConfigFrame ()", "diff": ["-    ", "-    ", "-    ", "-    //cp.add(_mainPanel, BorderLayout.CENTER);", "+    // Select the first panel by default", "-      //_mainPanel.add( firstChild.getPanel(), BorderLayout.CENTER);", "-       ", "-    JScrollPane treeScroll = new JScrollPane(_tree);", "-    //cp.add(treeScroll, BorderLayout.WEST);", "-    ", "+    JScrollPane treeScroll = new JScrollPane(_tree);    ", "-    ", "-        boolean successful = apply();", "+        // Always apply and save settings", "+        boolean successful = saveSettings();", "-        apply();", "+        // Always save settings", "+        saveSettings();", "+    /* Now always saves settings...", "+    */", "+    // Add buttons", "-    bottom.add(_saveSettingsButton);", "-    bottom.add(Box.createHorizontalGlue());", "+    //bottom.add(_saveSettingsButton);", "+    //bottom.add(Box.createHorizontalGlue());", "-    System.out.println(\"width: \" + getWidth());", "-    System.out.println(\"width for divider: \" + width);", "+    //System.out.println(\"width: \" + getWidth());", "+    //System.out.println(\"width for divider: \" + width);", "-    _mainPanel.setPreferredSize(new Dimension(getWidth() - width, _splitPane.getHeight()));", "+    _mainPanel.setPreferredSize(new Dimension(getWidth() - width,", "+                                              _splitPane.getHeight()));", "-        cancel();}", "+        cancel();", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6ce3f4f8efaf41e38345d8e87199013", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private void createPopupMenu()", "signatureAfterChange": "   private void createPopupMenu()", "diff": ["-          _mainFrame.toggleBreakpoint();", "+          _mainFrame.debuggerToggleBreakpoint();", "-      // Watchpoint", "-      JMenuItem watchpointItem = new JMenuItem(\"Add Watchpoint\");", "-      watchpointItem.addActionListener( new AbstractAction() {", "+      // Watch", "+      /*", "+      JMenuItem watchItem = new JMenuItem(\"Add Watch\");", "+      watchItem.addActionListener( new AbstractAction() {", "-          //Make sure that the watchpoint is set on the *clicked* line, if within a selection block.", "+          //Make sure that the watch is set on the *clicked* line, if within a selection block.", "-          _mainFrame.addWatchpoint();", "+          _mainFrame.debuggerAddWatch();", "-      _addWatchpointMenuItem = _popMenu.add(watchpointItem);", "-      _addWatchpointMenuItem.setEnabled(false);", "+      _addWatchMenuItem = _popMenu.add(watchItem);", "+      _addWatchMenuItem.setEnabled(false);", "+      */"]}], "num": 29589}