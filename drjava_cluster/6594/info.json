{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8d619497d73a747700fc98fd997ed4a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7be7609fe9b82fad70334232363a0cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "     public Node visit(ClassDeclaration node)", "signatureAfterChange": "     public Object visit(ClassDeclaration node)", "diff": ["-    public Node visit(ClassDeclaration node) {", "-      LinkedList<Node> members = new LinkedList<Node>(); // Add parameterization <Node>.", "-      Iterator<Node> it = node.getMembers().iterator();", "+    public Object visit(ClassDeclaration node) {", "+      LinkedList members = new LinkedList(); // Add parameterization <Node>.", "+      Iterator it = node.getMembers().iterator();", "-        members.add(it.next().acceptVisitor(this));", "+        members.add((Node)((Node)it.next()).acceptVisitor(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dae694bce6411d965ca9b48a5862b71d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Node visit(SwitchBlock node)", "signatureAfterChange": "   public Object visit(SwitchBlock node)", "diff": ["-  public Node visit(SwitchBlock node) {", "+  public Object visit(SwitchBlock node) {", "-      e = (Expression) node.getExpression().acceptVisitor(this);", "+      e = (Expression)node.getExpression().acceptVisitor(this);", "-    LinkedList<Node> statements = null; // Add parameterization <Node>.", "+    LinkedList statements = null; // Add parameterization <Node>.", "-      statements = new LinkedList<Node>(); // Add parameterization <Node>.", "-      Iterator<Node> it = node.getStatements().iterator();", "+      statements = new LinkedList(); // Add parameterization <Node>.", "+      Iterator it = node.getStatements().iterator();", "-        statements.add(it.next().acceptVisitor(this));", "+        statements.add((Node)((Node)it.next()).acceptVisitor(this));"]}], "num": 6594}