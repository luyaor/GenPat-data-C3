{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "928b556f7db8cc4267fbadcb0d452352", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00287c6f4cdf97f3637daf64a0edbdba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "065b1e3954d46e1086ba2f867744163daf14462d", "commitAfterChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public static void deleteDirectoryOnExit(final File dir)", "signatureAfterChange": "   public static void deleteDirectoryOnExit(final File dir)", "diff": ["-      for (File f: childFiles) { deleteDirectoryOnExit(f); }", "+      if (childFiles!=null) { // listFiles may return null if there's an IO error", "+        for (File f: childFiles) { deleteDirectoryOnExit(f); }", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10ffd6f78741206284899bff61562f65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "6207c0d4b83ee23d6d4624c513f270e47c43cc83", "commitAfterChange": "f4c8eb851d98f4da2479f32fb767dac4b3a40e1c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void setFrameState(String s)", "signatureAfterChange": "   public void setFrameState(String s)", "diff": ["-      setLocationRelativeTo(_owner);", "+      if (_owner!=null) { setLocationRelativeTo(_owner); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c7487a6d165d2c5ca9482aee086fffd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "8dbb3967ef585255b4d1ff989654250a57b1af90", "commitAfterChange": "b7d4cb04f4bb848380a14b3825abe047db8dc58f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public static JarJDKToolsLibrary makeFromFile(File f, GlobalModel model, JDKDescriptor desc,                                                 List<File> additionalBootClassPath)", "signatureAfterChange": "   public static JarJDKToolsLibrary makeFromFile(File f, GlobalModel model, JDKDescriptor desc,                                                 List<File> additionalBootClassPath)", "diff": ["-        bootClassPath.addAll(additionalBootClassPath);", "+        if (additionalBootClassPath!=null) { bootClassPath.addAll(additionalBootClassPath); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f442cb6ab46d1b2fd07e7fabf5ef38b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/OutputView.java", "commitBeforeChange": "42453ef03053968f9ca85cc1f502a43bd9378c76", "commitAfterChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void insertUpdate(DocumentEvent e)", "signatureAfterChange": "     public void insertUpdate(DocumentEvent e)", "diff": ["-        scrollRectToVisible(endPos);", "+", "+        // If the window is not on the screen, this will be null", "+        // In that case, don't try to scroll!", "+        if (endPos != null) {", "+          scrollRectToVisible(endPos);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6788d863bad8a2eee7da44c08781df34", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "065b1e3954d46e1086ba2f867744163daf14462d", "commitAfterChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public static boolean deleteDirectory(final File dir)", "signatureAfterChange": "   public static boolean deleteDirectory(final File dir)", "diff": ["-    for (File f: childFiles) { ret = ret && deleteDirectory(f); }", "+    if (childFiles!=null) { // listFiles may return null if there's an IO error", "+      for (File f: childFiles) { ret = ret && deleteDirectory(f); }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a413379fe765e739973516cfbea30cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaTestCase.java", "commitBeforeChange": "64485acb22f7b04ee86b39b46487ccbab2253387", "commitAfterChange": "523677d0df6002dfcfacc873e04ce1802e7033d3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void setUp() throws Exception", "signatureAfterChange": "   protected void setUp() throws Exception", "diff": ["-//    _log.log(\"newName = \" + newName);", "-//    if (newName != null) {", "-//      Utilities.show(\"Setting '\" + newName + \"' as DrJava configuration file\");", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() {", "-        DrJava.setPropertiesFile(newName);  // spawns change updates which should run in event thread", "-//        Utilities.clearEventQueue();", "-        DrJava._initConfig();               // spawns change updates which should run in event thread", "-      }", "-    });", "+", "+    if (newName != null) {  // in deployed code, assertion checking may be turned off", "+      Utilities.invokeAndWait(new Runnable() {", "+        public void run() {", "+          DrJava.setPropertiesFile(newName);  // spawns change updates which should run in event thread", "+//          Utilities.clearEventQueue();", "+          DrJava._initConfig();               // spawns change updates which should run in event thread", "+        }", "+      });", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7de725028b485bc0c46c9fa608e69b7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/OutputPane.java", "commitBeforeChange": "42453ef03053968f9ca85cc1f502a43bd9378c76", "commitAfterChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void insertUpdate(DocumentEvent e)", "signatureAfterChange": "     public void insertUpdate(DocumentEvent e)", "diff": ["-        scrollRectToVisible(endPos);", "+", "+        // If the window is not on the screen, this will be null", "+        // In that case, don't try to scroll!", "+        if (endPos != null) {", "+          scrollRectToVisible(endPos);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8efebad0b447e68f41dcdb972c0cc524", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "065b1e3954d46e1086ba2f867744163daf14462d", "commitAfterChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 66, "signatureBeforeChange": "          private void getClassFilesHelper(File f, LinkedList<File> acc)", "signatureAfterChange": "          private void getClassFilesHelper(File f, LinkedList<File> acc)", "diff": ["-        for (File kid: fs) { getClassFilesHelper(kid, acc); }", "+        if (fs!=null) { // listFiles may return null if there's an IO error", "+          for (File kid: fs) { getClassFilesHelper(kid, acc); }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98edb5643266f928d317ff7a878380d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "065b1e3954d46e1086ba2f867744163daf14462d", "commitAfterChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   private void _javadocAllWorker(File destDirFile, FileSaveSelector saver, String classPath)", "signatureAfterChange": "   private void _javadocAllWorker(File destDirFile, FileSaveSelector saver, String classPath)", "diff": ["-            for (File f: javaFiles) { docUnits.add(f.getAbsolutePath());}", "+            if (javaFiles!=null) { // listFiles may return null if there's an IO error", "+              for (File f: javaFiles) { docUnits.add(f.getAbsolutePath());}", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9af457e4993ceb061c523d620ed8121b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "   private void _copyBack(ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,      IncompatibleThreadStateException, AbsentInformationException,      InvocationException, DebugException", "signatureAfterChange": "   private void _copyBack(ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,      IncompatibleThreadStateException, AbsentInformationException,      InvocationException, DebugException", "diff": ["-      v = _convertToActualType(threadRef, localVar, v);", "+      if (v != null) {", "+        v = _convertToActualType(threadRef, localVar, v);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f346c6cd4a4cabfc4ed255d1d6ee76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "27c256ec9281e0464172656b15ccb73506c1cbc1", "commitAfterChange": "efe2cdfa860877c37343dbc5d29e380b33344492", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 125, "signatureBeforeChange": "   private void _storePositionInfo()", "signatureAfterChange": "   private void _storePositionInfo()", "diff": ["-    config.setSetting(DEBUG_PANEL_HEIGHT, new Integer(_debugPanel.getHeight()));", "+    if (_debugPanel != null) {", "+      config.setSetting(DEBUG_PANEL_HEIGHT, new Integer(_debugPanel.getHeight()));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c99f32fd39db04a407ceae6a33e3426b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "6207c0d4b83ee23d6d4624c513f270e47c43cc83", "commitAfterChange": "f4c8eb851d98f4da2479f32fb767dac4b3a40e1c", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void setVisible(boolean vis)", "signatureAfterChange": "   public void setVisible(boolean vis)", "diff": ["-      _owner.toFront();", "+      if (_owner!=null) { _owner.toFront(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2355d61d6df0cf1bca0a30420e6f491", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/OutputPane.java", "commitBeforeChange": "42453ef03053968f9ca85cc1f502a43bd9378c76", "commitAfterChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void insertUpdate(DocumentEvent e)", "signatureAfterChange": "     public void insertUpdate(DocumentEvent e)", "diff": ["-        scrollRectToVisible(endPos);", "+", "+        // If the window is not on the screen, this will be null", "+        // In that case, don't try to scroll!", "+        if (endPos != null) {", "+          scrollRectToVisible(endPos);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4967302225928bc4ddc677c209f741c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9ad31ce5c50424f20d538138cfaace1a45e714b6", "commitAfterChange": "24d1fc2e62558397f7b15dfbae39d44f571b9483", "methodNumberBeforeChange": 453, "methodNumberAfterChange": 453, "signatureBeforeChange": "   private void _repaintLineNums()", "signatureAfterChange": "   private void _repaintLineNums()", "diff": ["-        view.repaint();", "+        if (view != null) {", "+          view.repaint();", "+        }"]}], "num": 2224}