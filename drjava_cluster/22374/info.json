{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91124cdf272239ae8cf539d5423a69b8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b1328520641aa35cf2c32e8f2a0e0ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "6bdcaa1031d63e5f58edf8d0e2313eac60ac2bdc", "commitAfterChange": "c6ab4cad3515b44035f93fe56438ef0ad4e6d24d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testRelativePath() throws IOException, InvalidPackageException", "signatureAfterChange": "   public void testRelativePath() throws IOException, InvalidPackageException", "diff": ["-   */", "-  public void testRelativePath() throws IOException, InvalidPackageException {", "-    String funnyName = \"DrJava_automatically_deletes_this_1\";", "-    final File newDirectory = mkTempDir(funnyName);", "-//    Utilities.showDebug(newDirectory.getPath() + \" created\");", "-    File relativeFile = new File(newDirectory, \"X.java\");", "-", "-    assertFalse(relativeFile + \" is absolute?\", relativeFile.isAbsolute());", "-", "-    try { checkFile(relativeFile, funnyName); }", "-    catch (Exception e) { fail(\"Exception thrown: \" + StringOps.getStackTrace(e)); }", "-    FileOps.deleteDirectoryOnExit(newDirectory);", "-//    Logger.log(\"testRelativePath complete\");", "-  }", "+   */", "+  public void testRelativePath() throws IOException, InvalidPackageException {", "+    String funnyName = \"DrJava_automatically_deletes_this\";", "+    File newDirectory = mkTempDir(funnyName);", "+    File relativeFile = new File(newDirectory, \"X.java\");", "+", "+    assertEquals(relativeFile + \" is absolute?\", false, relativeFile.isAbsolute());", "+", "+    try { checkFile(relativeFile, funnyName); }", "+    catch (Exception e) { fail(\"Exception thrown: \" + StringOps.getStackTrace(e)); }", "+    finally { FileOps.deleteDirectory(newDirectory); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e4e7e985b878eda9e542991c73d1edf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "56a5d7ef4f332df9b45adf95f71d664c61575e1a", "commitAfterChange": "010ae297b5b09284b0dfa287aa524a83e41fa50d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testRelativePath() throws IOException, InvalidPackageException", "signatureAfterChange": "   public void testRelativePath() throws IOException, InvalidPackageException", "diff": ["+   */", "+  public void testRelativePath() throws IOException, InvalidPackageException {", "+    String funnyName = \"DrJava_automatically_deletes_this_1\";", "+    final File newDirectory = mkTempDir(funnyName);", "+//    Utilities.showDebug(newDirectory.getPath() + \" created\");", "+    File relativeFile = new File(newDirectory, \"X.java\");", "+", "+    assertFalse(relativeFile + \" is absolute?\", relativeFile.isAbsolute());", "+", "+    try { checkFile(relativeFile, funnyName); }", "+    catch (Exception e) { fail(\"Exception thrown: \" + StringOps.getStackTrace(e)); }", "+    FileOps.deleteDirectoryOnExit(newDirectory);", "+//    Logger.log(\"testRelativePath complete\");", "+  }", "-   */", "-  public void testRelativePath() throws IOException, InvalidPackageException {", "-    String funnyName = \"DrJava_automatically_deletes_this\";", "-    File newDirectory = mkTempDir(funnyName);", "-    File relativeFile = new File(newDirectory, \"X.java\");", "-", "-    assertEquals(relativeFile + \" is absolute?\", false, relativeFile.isAbsolute());", "-", "-    try { checkFile(relativeFile, funnyName); }", "-    catch (Exception e) { fail(\"Exception thrown: \" + StringOps.getStackTrace(e)); }", "-    finally { FileOps.deleteDirectory(newDirectory); }", "-  }"]}], "num": 22374}