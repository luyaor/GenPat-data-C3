{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02770f427c06577b1d28e16a83fe5e7d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c90918a8e854977f123e599665a68f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "2fc4395eb72dbc8caeb586fbd5d1fef990083e71", "commitAfterChange": "a2262b2230c42b5cda2b42cb16829b87b361f597", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public Object visit(SuperMethodCall node)", "signatureAfterChange": "   public Object visit(SuperMethodCall node)", "diff": ["+    Class[] typs = m.getParameterTypes();", "+    ", "-      args        = new Object[larg.size()];", "-      while (it.hasNext()) {", "+      args        = new Object[typs.length];", "+      while (i < typs.length-1) {", "+      }", "+      if(typs.length > 0){", "+        if(!m.isVarArgs()){", "+          args[i] = it.next().acceptVisitor(this);", "+          i++;", "+        } else {", "+          args[i] = buildArrayOfRemainingArgs(typs, larg.size(), it);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4abf6daac589e3b87f388dc639e6c86", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "2fc4395eb72dbc8caeb586fbd5d1fef990083e71", "commitAfterChange": "a2262b2230c42b5cda2b42cb16829b87b361f597", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public Object visit(StaticMethodCall node)", "signatureAfterChange": "   public Object visit(StaticMethodCall node)", "diff": ["+    Class[] typs = m.getParameterTypes();", "+    ", "-      args = new Object[larg.size()];", "+      args = new Object[typs.length];", "-      while (it.hasNext()) {", "+      while (i < typs.length-1) {", "+      }", "+      if(typs.length > 0){", "+        if(!m.isVarArgs()){", "+          args[i] = it.next().acceptVisitor(this);", "+          i++;", "+        } else {", "+          args[i] = buildArrayOfRemainingArgs(typs, larg.size(), it);", "+        }"]}], "num": 4110}