{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55b50b23e47237a5ba997fd0abe5cbe9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "201e6da71cc567f956197dffb149feee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "          public void test_NotAllowed()", "signatureAfterChange": "          public void test_NotAllowed()", "diff": ["-      SourceInfo noInfo = SourceInfo.NO_INFO;", "-      Word w = new Word(SourceInfo.NO_INFO, \"word\");", "+      SourceInfo noInfo = SourceInfo.NONE;", "+      Word w = new Word(SourceInfo.NONE, \"word\");", "-      BracedBody emptyBody = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]);", "-      UnbracedBody emptyUnbracedBody = new UnbracedBody(SourceInfo.NO_INFO, new BodyItemI[0]);", "-      ClassOrInterfaceType superClass = new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]);", "+      BracedBody emptyBody = new BracedBody(SourceInfo.NONE, new BodyItemI[0]);", "+      UnbracedBody emptyUnbracedBody = new UnbracedBody(SourceInfo.NONE, new BodyItemI[0]);", "+      ClassOrInterfaceType superClass = new ClassOrInterfaceType(SourceInfo.NONE, \"java.lang.Object\", new Type[0]);", "-      SwitchCase defaultSc = new DefaultCase(SourceInfo.NO_INFO, emptyUnbracedBody);", "+      SwitchCase defaultSc = new DefaultCase(SourceInfo.NONE, emptyUnbracedBody);", "-        new SwitchStatement(noInfo, new IntegerLiteral(SourceInfo.NO_INFO, 5), new SwitchCase[]{defaultSc, defaultSc});", "+        new SwitchStatement(noInfo, new IntegerLiteral(SourceInfo.NONE, 5), new SwitchCase[]{defaultSc, defaultSc});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb334f2e8f683596fc09811e4e9e4468", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": "          public void testForNumericAssignmentExpression()", "signatureAfterChange": "          public void testForNumericAssignmentExpression()", "diff": ["-      ComplexNameReference nf = new ComplexNameReference(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"Ned\")), new Word(SourceInfo.NO_INFO, \"Flanders\"));", "-      NumericAssignmentExpression na = new MinusAssignmentExpression(SourceInfo.NO_INFO, nf, new IntegerLiteral(SourceInfo.NO_INFO, 5));", "+      ComplexNameReference nf = ", "+        new ComplexNameReference(SourceInfo.NONE, ", "+                                 new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"Ned\")), ", "+                                 new Word(SourceInfo.NONE, \"Flanders\"));", "+      NumericAssignmentExpression na = ", "+        new MinusAssignmentExpression(SourceInfo.NONE, nf, new IntegerLiteral(SourceInfo.NONE, 5));", "-      NumericAssignmentExpression na2 = new ModAssignmentExpression(SourceInfo.NO_INFO, nf, nf);", "+      NumericAssignmentExpression na2 = new ModAssignmentExpression(SourceInfo.NONE, nf, nf);"]}], "num": 14300}