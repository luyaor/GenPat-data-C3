{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7bd0672951fcaebde94cf467dde8f2ce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "023c763b92c247e3790fdf9f4f137c95", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/Indenter.java", "commitBeforeChange": "c056ab71f347d40179703642e25ff83ac78c70e0", "commitAfterChange": "6e6dc20e393a893a5d9ad55d0b971c8d23c8c73e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void buildTree(int indentLevel)", "signatureAfterChange": "   public void buildTree(int indentLevel)", "diff": ["-      rule23 = rule36,", "-      rule22 = new QuestionHasCharPrecedingOpenBrace(new char[] {'=',',','{'},rule23,rule24),  // Is this line an element of an array initializer?", "-      rule21 = rule36,", "-      rule20 = new QuestionStartAfterOpenBrace(rule21, rule22),  // does the preceding line end with an open brace?", "+      rule22 = new QuestionHasCharPrecedingOpenBrace(new char[] {'=',',','{'}, rule36, rule24),  // Is this line an element of an array initializer?", "+      rule20 = new QuestionStartAfterOpenBrace(rule36, rule22),  // does the preceding line end with an open curly brace?", "-      rule38 = new QuestionCurrLineStartsWith(\")\", rule30, rule15), // does current line start with ')'?", "-      rule14 = new QuestionNewParenPhrase(rule38, rule16),         // is current line new phrase after open paren?", "-      rule13 = new QuestionBraceIsParenOrBracket(rule14, rule17),  // toot of non-comment indent tree: is brace enclosing start of this line in { '(', '['}?  ", "+      // root of non-comment indent tree: is brace enclosing start of this line in { '(', '['}?  ", "+      rule38 = new ActionBracePlus(\"\"),", "+      rule14 = new QuestionNewParenPhrase(rule15, rule16),  // is current non ) line a new phrase after open paren?", "+      rule23 = new QuestionNewParenPhrase(rule30, rule38),  // is current ) line a new phrase after open paren?", "+      rule21 = new QuestionCurrLineStartsWith(\")\", rule23, rule14), // does current line start with ')'?", "+      rule13 = new QuestionBraceIsParenOrBracket(rule21, rule17),   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f2928517dfbc0611e8bf97a28a14d92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/Indenter.java", "commitBeforeChange": "7b4296c095d59b57f25b910a8bdce57816e7621f", "commitAfterChange": "f3b30de075946ab18141ef0ec7abdb9f0f10037b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void buildTree(int indentLevel)", "signatureAfterChange": "   public void buildTree(int indentLevel)", "diff": ["-    String oneLevel = new String(indent);", "+    final String oneLevel = new String(indent);", "-    boolean autoCloseComments = DrJava.getConfig().", "-      getSetting(OptionConstants.AUTO_CLOSE_COMMENTS).booleanValue();", "+    boolean autoCloseComments = DrJava.getConfig().getSetting(OptionConstants.AUTO_CLOSE_COMMENTS).booleanValue();", "-      rule25 = new QuestionStartingNewStmt(rule26, rule31),", "+      rule25 = new QuestionStartingNewStmt(rule26, rule31),  // no preceding open brace", "-      rule18 = new QuestionCurrLineStartsWithSkipComments(\"}\", rule19, rule20),", "-      rule17 = new QuestionBraceIsCurly(rule18, rule25),", "+      rule18 = new QuestionCurrLineStartsWithSkipComments(\"}\", rule19, rule20),  // ANONYMOUS inner class formatting breaks here", "+      rule17 = new QuestionBraceIsCurly(rule18, rule25),  // enclosing block/expr-list opens with '{'?", "-      rule38 = new QuestionCurrLineStartsWith(\")\", rule30, rule15),  //BROKEN", "-      rule14 = new QuestionNewParenPhrase(rule38, rule16), //rule15->rule38", "-      rule13 = new QuestionBraceIsParenOrBracket(rule14, rule17),  // last block/expression list opens with \"(\" or \"[\"?", "+      rule38 = new QuestionCurrLineStartsWith(\")\", rule30, rule15), // does current line start with ')'?", "+      rule14 = new QuestionNewParenPhrase(rule38, rule16),         // is current line new phrase after open paren?", "+      rule13 = new QuestionBraceIsParenOrBracket(rule14, rule17),  // enclosing block/expr-list opens with \"(\" or \"[\"?"]}], "num": 14810}