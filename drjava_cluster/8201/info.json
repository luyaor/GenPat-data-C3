{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "537c26fbc039f9ddf39dd84f95eab35b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02ba8b67dd7605e71e68643dc664aac5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testLongMaxValue() throws ParseException", "signatureAfterChange": "   public void testLongMaxValue() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4afbdd2c28b249c8e52a9d201d66e01f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testBiggestLongValue() throws ParseException", "signatureAfterChange": "   public void testBiggestLongValue() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b7379e80aa49ace5f6af307084b70b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testBiggestIntValue() throws ParseException", "signatureAfterChange": "   public void testBiggestIntValue() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bdb3b096a23c65e790cb5c5008ffa35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testLongMinValue() throws ParseException", "signatureAfterChange": "   public void testLongMinValue() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "525ff25517e5b4c8cfc5a7d83cabf2c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testIntMaxValue() throws ParseException", "signatureAfterChange": "   public void testIntMaxValue() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7955e4d004e845895d3b9880d6cd0f04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private List<FormalParameter> getFormalParameterList(String paramString, boolean isVarArgs) throws ParseException", "signatureAfterChange": "      private List<FormalParameter> getFormalParameterList(String paramString, boolean isVarArgs) throws ParseException", "diff": ["-    assertEquals(\"Type of node\", MethodDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of node\", MethodDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a94fdbcf3d1dfd806a642d6160ba266c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testSmallestLong() throws ParseException", "signatureAfterChange": "   public void testSmallestLong() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f38c66d91ede603fbb348a0992e851c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testSmallestInt() throws ParseException", "signatureAfterChange": "   public void testSmallestInt() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f467aadd65f3b9d3bf60e09bea4d3c8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testIntMinValue() throws ParseException", "signatureAfterChange": "   public void testIntMinValue() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}], "num": 8201}