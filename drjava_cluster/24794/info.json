{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0ef274a95ae3ebf09505db82c466b5a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "011db3bf2725d82ac2f6fb472b54007f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ArrayTypeName.java", "commitBeforeChange": "e7fa83968a0076b95166203c3ff9a5bddde8dfee", "commitAfterChange": "b2bccf49a3d470addd7a5aec1fd2eaf00accbe3b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ArrayTypeName(TypeName et, int dim, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ArrayTypeName(TypeName et, int dim, boolean varg, String fn, int bl, int bc, int el, int ec)", "diff": ["-  public ArrayTypeName(TypeName et, int dim, String fn, int bl, int bc, int el, int ec) {", "+  public ArrayTypeName(TypeName et, int dim, boolean varg, String fn, int bl, int bc, int el, int ec) {", "-    elementType = (dim > 1) ? new ArrayTypeName(et, dim - 1, fn, bl, bc, el, ec) : et;", "+    elementType = (dim > 1) ? new ArrayTypeName(et, dim - 1, false, fn, bl, bc, el, ec) : et;", "+    vararg = varg;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "210dcd39ca03f1ec2b73732c01e76b4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InterfaceDeclaration.java", "commitBeforeChange": "6ad9127874cbac183cc931058195a0b05ba94ef2", "commitAfterChange": "4a55e89b466afb7d4762f8aeeb31366fe3ccc862", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public InterfaceDeclaration(ModifierSet mods, String name, Option<List<TypeParameter>> tparams,                                List<? extends ReferenceTypeName> impl, List<Node> body, SourceInfo si)", "signatureAfterChange": "   public InterfaceDeclaration(ModifierSet mods, boolean ann, String name, Option<List<TypeParameter>> tparams,                                List<? extends ReferenceTypeName> impl, List<Node> body, SourceInfo si)", "diff": ["-  public InterfaceDeclaration(ModifierSet mods, String name, Option<List<TypeParameter>> tparams,", "+  public InterfaceDeclaration(ModifierSet mods, boolean ann, String name, Option<List<TypeParameter>> tparams,", "+    annotation = ann;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2119f26c4db8b9f1e236dfe3ddaeb2c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "e7660fffdb51451a3d4a61981945f6529addb874", "commitAfterChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public FindResultsPanel(MainFrame frame, RegionManager<MovingDocumentRegion> rm, String title,                           String searchString, boolean searchAll, final boolean matchCase,                           final boolean wholeWord, final boolean noComments,                           WeakReference<OpenDefinitionsDocument> doc, FindReplacePanel findReplace)", "signatureAfterChange": "   public FindResultsPanel(MainFrame frame, RegionManager<MovingDocumentRegion> rm, String title,                           String searchString, boolean searchAll, final boolean matchCase,                           final boolean wholeWord, final boolean noComments, final boolean noTestCases,                           WeakReference<OpenDefinitionsDocument> doc, FindReplacePanel findReplace)", "diff": ["-                          final boolean wholeWord, final boolean noComments,", "+                          final boolean wholeWord, final boolean noComments, final boolean noTestCases,", "+    _noTestCases = noTestCases;"]}], "num": 24794}