{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f2f35bc1010e3584d892f87cc12d44b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08a7c4923bcab4b7f38d24037b8a9a61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testCorrectFilesAfterIncorrectChanges() throws Exception", "signatureAfterChange": "   public void testCorrectFilesAfterIncorrectChanges() throws Exception", "diff": ["-    if (printMessages) System.out.println(\"-----testCorrectFilesAfterIncorrectChanges-----\");", "+//    _log.log(\"Starting testCorrectFilesAfterIncorrectChanges\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "+    saveFile(doc, new FileSelector(file));", "+    _model.addListener(listener);", "+   ", "+    listener.compile(doc);", "+    listener.checkCompileOccurred();", "+    _model.removeListener(listener);", "+    // What is the preceding code segment supposed to test; it has already been done!", "+    ", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "+    saveFile(doc, new FileSelector(file));", "+    ", "+    listener = new JUnitNonTestListener(true);", "+    listener.compile(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecdc4c84890389ec35e0c353333cb2ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testCorrectFilesAfterIncorrectChanges() throws Exception", "signatureAfterChange": "   public void testCorrectFilesAfterIncorrectChanges() throws Exception", "diff": ["-    if (printMessages) System.out.println(\"-----testCorrectFilesAfterIncorrectChanges-----\");", "+//    _log.log(\"Starting testCorrectFilesAfterIncorrectChanges\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "+    saveFile(doc, new FileSelector(file));", "+    _model.addListener(listener);", "+   ", "+    listener.compile(doc);", "+    listener.checkCompileOccurred();", "+    _model.removeListener(listener);", "+    // What is the preceding code segment supposed to test; it has already been done!", "+    ", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "+    saveFile(doc, new FileSelector(file));", "+    ", "+    listener = new JUnitNonTestListener(true);", "+    listener.compile(doc);"]}], "num": 10591}