{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b81dcf918aa4cc4f97742cf893fdc86", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b3e98b6e53db7ae3dfb5daf23b2600b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testStaticFieldsConsistent()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testStaticFieldsConsistent() throws Exception", "diff": ["-  public void testStaticFieldsConsistent()", "-    throws DebugException, BadLocationException, DocumentAdapterException,", "-    IOException, InterruptedException", "-  {", "+  public void testStaticFieldsConsistent() throws Exception {", "-    ", "-    // Compile the class", "-    File file = new File(_tempDir, \"DrJavaDebugStaticField.java\");", "-    OpenDefinitionsDocument doc = doCompile(CLASS_WITH_STATIC_FIELD, file);", "-    ", "-    // Start debugger", "-    synchronized(_notifierLock) {", "-      _debugger.startup();", "-      _waitForNotifies(1);  // startup", "-      _notifierLock.wait();", "-    }", "-    debugListener.assertDebuggerStartedCount(1);", "+    // Start up", "+    OpenDefinitionsDocument doc = _startupDebugger(\"DrJavaDebugStaticField.java\",", "+                                                   CLASS_WITH_STATIC_FIELD);", "+    // Set a breakpoint", "-    // Run the foo() method, hitting breakpoint", "+    // Run the main method, hitting breakpoint", "-    // Close doc and make sure breakpoints are removed", "-    _model.closeFile(doc);", "-    debugListener.assertBreakpointRemovedCount(1);  //fires (no waiting)", "-    ", "-    // Shutdown the debugger", "-    if (printMessages) {", "-      System.out.println(\"Shutting down...\");", "-    }", "-    InterpretListener interpretListener = new InterpretListener() {", "-       public void interpreterChanged(boolean inProgress) {", "-         // Don't notify: happens in the same thread", "-        interpreterChangedCount++;", "-       }", "-     };", "-    _model.addListener(interpretListener);", "-    synchronized(_notifierLock) {", "-      _debugger.shutdown();", "-      _waitForNotifies(2);  // interactionEnded, shutdown", "-      _notifierLock.wait();", "-    }", "-    interpretListener.assertInteractionEndCount(1);", "-    _model.removeListener(interpretListener);", "-    ", "-    debugListener.assertDebuggerShutdownCount(1);  //fires", "-    if (printMessages) {", "-      System.out.println(\"Shut down.\");", "-    }", "+    // Shut down", "+    _shutdownAndWaitForInteractionEnded();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5d71d33f756fab9e72773d2b80fad6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testNonStaticWatches()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testNonStaticWatches() throws Exception", "diff": ["-  public void testNonStaticWatches()", "-    throws DebugException, BadLocationException, DocumentAdapterException,", "-    IOException, InterruptedException", "-  {", "+  public void testNonStaticWatches() throws Exception {", "-    ", "-    // Compile the class", "-    File file = new File(_tempDir, \"Monkey.java\");", "-    OpenDefinitionsDocument doc = doCompile(MONKEY_WITH_INNER_CLASS, file);", "-    ", "-    // Start debugger", "-    synchronized(_notifierLock) {", "-      _debugger.startup();", "-      _waitForNotifies(1);  // startup", "-      _notifierLock.wait();", "-    }", "-    debugListener.assertDebuggerStartedCount(1);", "+    // Start up", "+    OpenDefinitionsDocument doc = _startupDebugger(\"Monkey.java\",", "+                                                   MONKEY_WITH_INNER_CLASS);", "+    // Set a breakpoint", "-    // Run the foo() method, hitting breakpoint", "+    // Run an inner method, hitting breakpoint", "-    // Step to line 10", "+    // Step to line 11", "-    // Step to line 11", "+    // Step to line 12", "-    // Step to line 12", "+    // Step to line 13", "-    // Step to line 13", "+    // Step to line 14", "-    // Step to line 14", "+    // Step to line 15", "-    // Step into static method (line 15)", "+    // Step into static method", "-    // Close doc and make sure breakpoints are removed", "-    _model.closeFile(doc);", "-    debugListener.assertBreakpointRemovedCount(1);  //fires (no waiting)", "-    ", "-    // Shutdown the debugger", "-    if (printMessages) {", "-      System.out.println(\"Shutting down...\");", "-    }", "-    InterpretListener interpretListener = new InterpretListener() {", "-       public void interpreterChanged(boolean inProgress) {", "-         // Don't notify: happens in the same thread", "-        interpreterChangedCount++;", "-       }", "-     };", "-    _model.addListener(interpretListener);", "-    synchronized(_notifierLock) {", "-      _debugger.shutdown();", "-      _waitForNotifies(2);  // interactionEnded, shutdown", "-      _notifierLock.wait();", "-    }", "-    interpretListener.assertInteractionEndCount(1);", "-    _model.removeListener(interpretListener);", "-    ", "-    debugListener.assertDebuggerShutdownCount(1);  //fires", "-    if (printMessages) {", "-      System.out.println(\"Shut down.\");", "-    }", "+    // Shut down", "+    _shutdownAndWaitForInteractionEnded();"]}], "num": 11076}