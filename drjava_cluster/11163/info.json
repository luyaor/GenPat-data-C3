{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2bb56232f99b6146a504d1599b870dd1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0db324f56b1688008573622f84afc6e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void testInsertBraceInsideGap()", "signatureAfterChange": " \tpublic void testInsertBraceInsideGap()", "diff": ["+\t//**************", "-\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.move(-4);", "-\t\t\tassertEquals(\"#0.0\", 3, model1.getBlockOffset());", "-\t\t\tassertEquals(\"#0.1\", 7, model1.getCursor().current().getSize());", "+\t\t\tassertEquals(\"#0.0\", 3, model1.absOffset());", "+\t\t\tassertEquals(\"#0.1\", 7, model1.currentToken().getSize());", "-\t\t\tassertEquals(\"#1.0\", 0, model1.getBlockOffset());", "-\t\t\tassertEquals(\"#1.1\", 4, model1.getCursor().current().getSize());", "-\t\t\tassertTrue(\"#1.2\", model1.getCursor().current().isGap());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertEquals(\"#2.0\", 1, model1.getCursor().current().getSize());", "-\t\t\tassertEquals(\"#2.1\", \"{\", model1.getCursor().current().getType());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertEquals(\"#3.0\", 0, model1.getBlockOffset());", "-\t\t\tassertEquals(\"#3.1\", 3, model1.getCursor().current().getSize());", "-\t\t\tassertTrue(\"#3.2\", model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#1.0\", 4, model1.absOffset());", "+\t\t\tassertEquals(\"#1.1\", 4, model1.currentToken().getSize());", "+\t\t\tassertTrue(\"#1.2\", model1.currentToken().isGap());", "+\t\t\tmodel1.move(-1);", "+\t\t\tassertEquals(\"#2.0\", 1, model1.currentToken().getSize());", "+\t\t\tassertEquals(\"#2.1\", \"{\", model1.currentToken().getType());", "+\t\t\tmodel1.move(-3);", "+\t\t\tassertEquals(\"#3.0\", 0, model1.absOffset());", "+\t\t\tassertEquals(\"#3.1\", 3, model1.currentToken().getSize());", "+\t\t\tassertTrue(\"#3.2\", model1.currentToken().isGap());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3512910b25a6d7721f390a045f7388b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void testInsertBraceInsideGap()", "signatureAfterChange": " \tpublic void testInsertBraceInsideGap()", "diff": ["+\t//**************", "-\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.move(-4);", "-\t\t\tassertEquals(\"#0.0\", 3, model1.getBlockOffset());", "-\t\t\tassertEquals(\"#0.1\", 7, model1.getCursor().current().getSize());", "+\t\t\tassertEquals(\"#0.0\", 3, model1.absOffset());", "+\t\t\tassertEquals(\"#0.1\", 7, model1.currentToken().getSize());", "-\t\t\tassertEquals(\"#1.0\", 0, model1.getBlockOffset());", "-\t\t\tassertEquals(\"#1.1\", 4, model1.getCursor().current().getSize());", "-\t\t\tassertTrue(\"#1.2\", model1.getCursor().current().isGap());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertEquals(\"#2.0\", 1, model1.getCursor().current().getSize());", "-\t\t\tassertEquals(\"#2.1\", \"{\", model1.getCursor().current().getType());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertEquals(\"#3.0\", 0, model1.getBlockOffset());", "-\t\t\tassertEquals(\"#3.1\", 3, model1.getCursor().current().getSize());", "-\t\t\tassertTrue(\"#3.2\", model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#1.0\", 4, model1.absOffset());", "+\t\t\tassertEquals(\"#1.1\", 4, model1.currentToken().getSize());", "+\t\t\tassertTrue(\"#1.2\", model1.currentToken().isGap());", "+\t\t\tmodel1.move(-1);", "+\t\t\tassertEquals(\"#2.0\", 1, model1.currentToken().getSize());", "+\t\t\tassertEquals(\"#2.1\", \"{\", model1.currentToken().getType());", "+\t\t\tmodel1.move(-3);", "+\t\t\tassertEquals(\"#3.0\", 0, model1.absOffset());", "+\t\t\tassertEquals(\"#3.1\", 3, model1.currentToken().getSize());", "+\t\t\tassertTrue(\"#3.2\", model1.currentToken().isGap());"]}], "num": 11163}