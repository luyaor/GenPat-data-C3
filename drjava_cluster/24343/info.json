{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d00520c8e2a4a19cecb9e0f752d8e16", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "241bb98933c52fd17ca2758cb7270d26", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 210, "signatureBeforeChange": "   public static <T1, T2, T3, R> Lambda<T1, Lambda<T2, Lambda<T3, R>>>      curry(final Lambda3<? super T1, ? super T2, ? super T3, ? extends R> lambda)", "signatureAfterChange": "   public static <T1, T2, T3, R>     Lambda<T1, Lambda<T2, Lambda<T3, R>>> curry(Lambda3<? super T1, ? super T2, ? super T3, ? extends R> lambda)", "diff": ["-  public static <T1, T2, T3, R> Lambda<T1, Lambda<T2, Lambda<T3, R>>> ", "-    curry(final Lambda3<? super T1, ? super T2, ? super T3, ? extends R> lambda) {", "-    final Lambda<T1, Lambda2<T2, T3, R>> partial = curryFirst(lambda);", "-    return new Lambda<T1, Lambda<T2, Lambda<T3, R>>>() {", "-      public Lambda<T2, Lambda<T3, R>> value(T1 arg1) {", "-        return curry(partial.value(arg1));", "-      }", "-    };", "+  public static <T1, T2, T3, R>", "+    Lambda<T1, Lambda<T2, Lambda<T3, R>>> curry(Lambda3<? super T1, ? super T2, ? super T3, ? extends R> lambda) {", "+    return new CurriedLambda3<T1, T2, T3, R>(lambda);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f58c6f1c45964ab74d1dd941f7168620", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 213, "signatureBeforeChange": "   public static <T1, T2, T3, T4, R> Lambda<T1, Lambda<T2, Lambda<T3, Lambda<T4, R>>>>      curry(final Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda)", "signatureAfterChange": "   public static <T1, T2, T3, T4, R> Lambda<T1, Lambda<T2, Lambda<T3, Lambda<T4, R>>>>     curry(Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda)", "diff": ["-   */", "-  public static <T1, T2, T3, T4, R> Lambda<T1, Lambda<T2, Lambda<T3, Lambda<T4, R>>>> ", "-    curry(final Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda) {", "-    final Lambda<T1, Lambda3<T2, T3, T4, R>> partial = curryFirst(lambda);", "-    return new Lambda<T1, Lambda<T2, Lambda<T3, Lambda<T4, R>>>>() {", "-      public Lambda<T2, Lambda<T3, Lambda<T4, R>>> value(T1 arg1) {", "-        return curry(partial.value(arg1));", "-      }", "-    };", "+  public static <T1, T2, T3, T4, R> Lambda<T1, Lambda<T2, Lambda<T3, Lambda<T4, R>>>>", "+    curry(Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda) {", "+    return new CurriedLambda4<T1, T2, T3, T4, R>(lambda);"]}], "num": 24343}