{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce1acd2b60d1701a2311a561680b4bb1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a065303ffdc04dc87d9564eda297c31", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/print/DrJavaBookTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void xtestGetPrintable()", "signatureAfterChange": "      public void testGetPrintable()", "diff": ["-  public void xtestGetPrintable(){ // FAILS for some reason // moez & eliot", "+  public void testGetPrintable() { ", "-    try{", "+    try { ", "-    catch(Exception e){", "-      fail(\"testGetPrintable: Unexpected exception!\\n\" + e);", "-    }", "+    catch(Exception e){ fail(\"testGetPrintable: Unexpected exception!\\n\" + e); }", "-    p = book.getPrintable(99);", "-    ", "-    try{", "-      assertEquals(\"testGetPrintable:\", new Integer(Printable.NO_SUCH_PAGE), ", "-                   new Integer(p.print(g, new PageFormat(), 99)));", "+    try {", "+      p = book.getPrintable(99);", "+      fail(\"previous operation should throw an IndexOutOfBoundsException\");", "-    catch(Exception e)", "-    {", "-      fail(\"testGetPrintable: Unexpected exception!\\n\" + e);", "+    catch(IndexOutOfBoundsException e) {", "+      /* test succeeded */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0abf80f8ccbe21d4f31e1bdc051f45c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ReflectUtilTest.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testLoadObject() throws Exception", "signatureAfterChange": "         public void testLoadObject() throws Exception", "diff": ["-  }", "+", "+    try { loadObject(\"fishing.boats\"); fail(\"expected exception\"); }", "+    try { loadObject(\"edu.rice.cs.plt.reflect.ReflectUtilTest\", 23); fail(\"expected exception\"); }", "+    try { loadObject(\"java.lang.Comparable\"); fail(\"expected exception\"); }", "+    try {", "+      loadObject(\"edu.rice.cs.plt.lambda.LazyThunk\", LambdaUtil.nullLambda());", "+      fail(\"expected exception\");", "+    }", "+    try { loadObject(\"java.lang.String\", new char[]{'a', 'b'}, -1, 23); fail(\"expected exception\"); }", "+    try {", "+      loadObject(\"edu.rice.cs.plt.reflect.ReflectUtilTest\", new Class[0], 23);", "+      fail(\"expected exception\");", "+    }", "+    try {", "+      loadObject(\"edu.rice.cs.plt.lambda.LazyThunk\", new Class<?>[]{Thunk.class}, \"I'm not a thunk\");", "+      fail(\"expected exception\");", "+    }", "+      fail(\"expected exception\");"]}], "num": 3301}