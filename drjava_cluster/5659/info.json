{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7ceebbd82c9afd7db2b0aebba708d81", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a656d2227e0619f6efce5222dd4aa2d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate void _checkPreviousInsertStar(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcopyCursor)", "signatureAfterChange": "   private void _checkPreviousInsertStar(ModelList<ReducedToken>.Iterator                                         copyCursor)", "diff": ["-\t */", "-\tprivate void _checkPreviousInsertStar(ModelList<ReducedToken>.Iterator", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcopyCursor)", "-\t\t{", "-\t\t\tif ( !copyCursor.atStart()\t&& !copyCursor.atFirstItem())", "-\t\t\t\t{", "-\t\t\t\t\tif (copyCursor.prevItem().getType().equals(\"/\") &&", "-\t\t\t\t\t\t\t(copyCursor.prevItem().getState() == ReducedToken.FREE))", "-\t\t\t\t\t\t{", "-\t\t\t\t\t\t\tcopyCursor.prevItem().setType(\"/*\");", "-\t\t\t\t\t\t\t_updateBasedOnCurrentState();", "-\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t// if we're after a star, ", "-\t\t\t\t}", "-\t\t\t", "-\t\t\t_insertNewBrace(\"*\",copyCursor); //leaving us after the brace.", "-\t\t\tcopyCursor.prev();", "-\t\t\t_updateBasedOnCurrentState();", "-\t\t\tif (copyCursor.current().getSize() == 2)", "-\t\t\t\t_offset = 1;", "-\t\t\telse", "-\t\t\t\tcopyCursor.next();\t\t\t", "-\t\t}", "+  */", "+  private void _checkPreviousInsertStar(ModelList<ReducedToken>.Iterator", "+                                        copyCursor)", "+  {", "+    if ( !copyCursor.atStart()  && !copyCursor.atFirstItem()) {", "+      if (copyCursor.prevItem().getType().equals(\"/\") &&", "+          (copyCursor.prevItem().getState() == ReducedToken.FREE)) ", "+      {", "+            copyCursor.prevItem().setType(\"/*\");", "+            _updateBasedOnCurrentState();", "+            return;", "+      }", "+      // if we're after a star, ", "+    }", "+    ", "+    _insertNewBrace(\"*\",copyCursor); //leaving us after the brace.", "+    copyCursor.prev();", "+    _updateBasedOnCurrentState();", "+    if (copyCursor.current().getSize() == 2) {", "+      _offset = 1;", "+    }", "+    else {", "+      copyCursor.next();", "+    }      ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a712bfe18a69ac4fe93203f02c3fa9d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate void _checkPreviousInsertStar(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcopyCursor)", "signatureAfterChange": "   private void _checkPreviousInsertStar(ModelList<ReducedToken>.Iterator                                         copyCursor)", "diff": ["-\t */", "-\tprivate void _checkPreviousInsertStar(ModelList<ReducedToken>.Iterator", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcopyCursor)", "-\t\t{", "-\t\t\tif ( !copyCursor.atStart()\t&& !copyCursor.atFirstItem())", "-\t\t\t\t{", "-\t\t\t\t\tif (copyCursor.prevItem().getType().equals(\"/\") &&", "-\t\t\t\t\t\t\t(copyCursor.prevItem().getState() == ReducedToken.FREE))", "-\t\t\t\t\t\t{", "-\t\t\t\t\t\t\tcopyCursor.prevItem().setType(\"/*\");", "-\t\t\t\t\t\t\t_updateBasedOnCurrentState();", "-\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t// if we're after a star, ", "-\t\t\t\t}", "-\t\t\t", "-\t\t\t_insertNewBrace(\"*\",copyCursor); //leaving us after the brace.", "-\t\t\tcopyCursor.prev();", "-\t\t\t_updateBasedOnCurrentState();", "-\t\t\tif (copyCursor.current().getSize() == 2)", "-\t\t\t\t_offset = 1;", "-\t\t\telse", "-\t\t\t\tcopyCursor.next();\t\t\t", "-\t\t}", "+  */", "+  private void _checkPreviousInsertStar(ModelList<ReducedToken>.Iterator", "+                                        copyCursor)", "+  {", "+    if ( !copyCursor.atStart()  && !copyCursor.atFirstItem()) {", "+      if (copyCursor.prevItem().getType().equals(\"/\") &&", "+          (copyCursor.prevItem().getState() == ReducedToken.FREE)) ", "+      {", "+            copyCursor.prevItem().setType(\"/*\");", "+            _updateBasedOnCurrentState();", "+            return;", "+      }", "+      // if we're after a star, ", "+    }", "+    ", "+    _insertNewBrace(\"*\",copyCursor); //leaving us after the brace.", "+    copyCursor.prev();", "+    _updateBasedOnCurrentState();", "+    if (copyCursor.current().getSize() == 2) {", "+      _offset = 1;", "+    }", "+    else {", "+      copyCursor.next();", "+    }      ", "+  }"]}], "num": 5659}