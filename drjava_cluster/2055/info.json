{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d258199a5f57a50681f5a94dd9031788", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09763e389090182146ff6a12063d8f01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "a7b492b5dc0c5b51f07f6d1e45c42a6f55e8cb91", "commitAfterChange": "5096aaab648cea3686054749f4edbb0813185db1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private void junitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "signatureAfterChange": "   private void junitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "diff": ["-            /* In projects, ignore class names that do not end in \"Test\") */", "-            String noExtName = name.substring(0, name.length() - 6);  // remove \".class\" from name", "-            int indexOfLastDot = noExtName.lastIndexOf('.');", "-            String simpleClassName = noExtName.substring(indexOfLastDot + 1);", "+            /* In projects, ignore class names that do not end in \"Test\" if FORCE_TEST_SUFFIX option is set */", "+            if (_forceTestSuffix) {", "+              String noExtName = name.substring(0, name.length() - 6);  // remove \".class\" from name", "+              int indexOfLastDot = noExtName.lastIndexOf('.');", "+              String simpleClassName = noExtName.substring(indexOfLastDot + 1);", "-            if (isProject && ! simpleClassName.endsWith(\"Test\")) continue;", "+              if (isProject && ! simpleClassName.endsWith(\"Test\")) continue;", "+            }", "-//            System.err.println(\"Found test class: \" + simpleClassName);", "+//            System.err.println(\"Found test class: \" + noExtName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a122cf98938ff55f63daa25cb578701f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "commitAfterChange": "d11247645bb07934951554afdf566907fa77ed82", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public String getEnclosingClassName(int pos, boolean qual) throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public String getEnclosingClassName(int pos, boolean qual) throws BadLocationException, ClassNameNotFoundException", "diff": ["-      if ((text.charAt(curPos)!='{') && (text.charAt(curPos)!='}')) { ++curPos; }", "-", "-//      if (oldLog) System.out.println(\"curPos=\" + curPos + \" `\" +", "-//        text.substring(Math.max(0,curPos-10), Math.min(text.length(), curPos+1)) + \"`\");", "+        if ((text.charAt(curPos)!='{') || (text.charAt(curPos)!='}')) { ++curPos; }", "+        ", "+//        if (oldLog) System.out.println(\"curPos=\" + curPos + \" `\" +", "+//                                       text.substring(Math.max(0,curPos-10), Math.min(text.length(), curPos+1)) + \"`\");", "+        ", "-//        if (oldLog) System.out.println(\"\\tclass=\"+classPos+\", inter=\"+interPos+\", other=\"+otherPos+\" `\" +", "+//        if (oldLog) System.out.println(\"\\tclass=\"+classPos+\", inter=\"+interPos+\", other=\"+otherPos+\", new=\"+newPos+\" `\" +", "+            if ((text.charAt(otherPos)!='{') || (text.charAt(otherPos)!='}')) { ++otherPos; }", "-            if (!Character.isJavaIdentifierPart(text.charAt(nameEnd))) {", "+            if ((!Character.isJavaIdentifierPart(text.charAt(nameEnd))) && (text.charAt(nameEnd)!='.')) {"]}], "num": 2055}