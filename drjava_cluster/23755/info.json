{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "473500e8f279f93989efb186f3814353", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d5c404d66cafd2dea26ed5f73454de4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestRunner.java", "commitBeforeChange": "fb61bb542bf295f9ff563d4fe1831b256b325388", "commitAfterChange": "6a5c20e1ee845b9752ac481574f6a7bee8c034e1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "   private void synchUI()", "signatureAfterChange": "   public synchronized void endTest(Test test)", "diff": ["-  private void synchUI() {", "-    try {", "-      SwingUtilities.invokeAndWait(new Runnable() {", "-        public void run() {}", "-      });", "+  public synchronized void endTest(Test test) {", "+    boolean error = false;", "+    boolean failure = false;", "+    if (_result.errorCount() > _errorCount) {", "+      error = true;", "+      _errorCount++;", "-    catch (Exception e) {", "+    if (_result.failureCount() > _failureCount) {", "+      failure = true;", "+      _failureCount++;", "+    boolean success = !(failure || error);", "+    _jvm.testEnded(test.toString(), success, failure);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8827a8b7f702307b1ba7dc267802dfc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": "     protected DefinitionsDocument getDocument()", "signatureAfterChange": "     protected DefinitionsDocument getDocument()", "diff": ["-          try {", "-            Utilities.invokeAndWait(new Runnable() {", "-              public void run() { _documentNavigator.refreshDocument(ConcreteOpenDefDoc.this, path); }", "-            });", "-            return _cacheAdapter.getDocument(); ", "-          }", "-          catch(InterruptedException e) { throw new UnexpectedException(e); }", "+          Utilities.invokeAndWait(new Runnable() {", "+            public void run() { _documentNavigator.refreshDocument(ConcreteOpenDefDoc.this, path); }", "+          });", "+          return _cacheAdapter.getDocument(); "]}], "num": 23755}