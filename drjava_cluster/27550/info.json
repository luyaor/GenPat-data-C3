{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b05a9d645e4e92adc8bccfc6be6a16a2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "571c1abae3e04c4178671fb1736f5e2d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk16/edu/rice/cs/drjava/model/compiler/Javac160Compiler.java", "commitBeforeChange": "0fe874dd6d2f82ba868df35578fd530c5227b9f2", "commitAfterChange": "12b972c6351f6122675c003ccbc59ef481c89cda", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public Javac160Compiler(JavaVersion.FullVersion version, String location, List<? extends File> defaultBootClassPath)", "signatureAfterChange": "      public Javac160Compiler(JavaVersion.FullVersion version, String location, List<? extends File> defaultBootClassPath)", "diff": ["+    if (_filterExe) {", "+      // if we need to filter out exe files from the classpath, we also need to", "+      // extract junit.jar and create a temporary file", "+      try {", "+\t// edu.rice.cs.util.Log LOG = new edu.rice.cs.util.Log(\"jdk160.txt\",true);", "+        // LOG.log(\"Filtering exe files from classpath.\");", "+        InputStream is = Javac160Compiler.class.getResourceAsStream(\"/junit.jar\");", "+\tif (is!=null) {", "+\t  // LOG.log(\"\\tjunit.jar found\");", "+\t  _tempJUnit = edu.rice.cs.plt.io.IOUtil.createAndMarkTempFile(PREFIX,SUFFIX);", "+\t  FileOutputStream fos = new FileOutputStream(_tempJUnit);", "+\t  int size = edu.rice.cs.plt.io.IOUtil.copyInputStream(is,fos);", "+\t  // LOG.log(\"\\t\"+size+\" bytes written to \"+_tempJUnit.getAbsolutePath());", "+\t}", "+\telse {", "+\t  // LOG.log(\"\\tjunit.jar not found\");", "+\t  if (_tempJUnit!=null) {", "+\t    _tempJUnit.delete();", "+\t    _tempJUnit = null;", "+\t    }", "+\t  }", "+      }", "+      catch(IOException ioe) {", "+\tif (_tempJUnit!=null) {", "+\t    _tempJUnit.delete();", "+\t    _tempJUnit = null;", "+\t}", "+      }", "+      // sometimes this file may be left behind, so create a shutdown hook", "+      // that deletes temporary files matching our pattern", "+      Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {", "+        public void run() {", "+\t  try {", "+\t    File temp = edu.rice.cs.plt.io.IOUtil.createAndMarkTempFile(PREFIX,SUFFIX);;", "+  \t    File[] toDelete = temp.getParentFile().listFiles(new FilenameFilter() {", "+\t      public boolean accept(File dir, String name) {", "+\t        if ((!name.startsWith(PREFIX)) || (!name.endsWith(SUFFIX))) return false;", "+\t        String rest = name.substring(PREFIX.length(), name.length()-SUFFIX.length());", "+\t        try {", "+\t          Integer i = new Integer(rest);", "+\t\t  // we could create an integer from the rest, this is one of our temporary files", "+\t\t  return true;", "+\t        }", "+\t        catch(NumberFormatException e) { /* couldn't convert, ignore this file */ }", "+\t        return false;", "+\t      }", "+\t    });", "+\t    for(File f: toDelete) {", "+\t      f.delete();", "+\t    }", "+\t  }", "+\t  catch(IOException ioe) { /* could not delete temporary files, ignore */ }", "+\t}", "+      }));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffffe025a9185becf2569139b2fd65f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk6/edu/rice/cs/drjava/model/compiler/Javac160Compiler.java", "commitBeforeChange": "fdceac19a315aa89dd2730a793dce89c488bf5c8", "commitAfterChange": "616a73b61604c7af8836357cef2e57a77aa96d3b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public Javac160Compiler(JavaVersion.FullVersion version, String location, List<? extends File> defaultBootClassPath)", "signatureAfterChange": "      public Javac160Compiler(JavaVersion.FullVersion version, String location, List<? extends File> defaultBootClassPath)", "diff": ["-  ", "+", "+    _filterExe = version.compareTo(JavaVersion.parseFullVersion(\"1.6.0_04\")) >= 0;", "+    if (_filterExe) {", "+      // if we need to filter out exe files from the classpath, we also need to", "+      // extract junit.jar and create a temporary file", "+      try {", "+        // edu.rice.cs.util.Log LOG = new edu.rice.cs.util.Log(\"jdk160.txt\",true);", "+        // LOG.log(\"Filtering exe files from classpath.\");", "+        InputStream is = Javac160Compiler.class.getResourceAsStream(\"/junit.jar\");", "+        if (is!=null) {", "+          // LOG.log(\"\\tjunit.jar found\");", "+          _tempJUnit = edu.rice.cs.plt.io.IOUtil.createAndMarkTempFile(PREFIX,SUFFIX);", "+          FileOutputStream fos = new FileOutputStream(_tempJUnit);", "+          int size = edu.rice.cs.plt.io.IOUtil.copyInputStream(is,fos);", "+          // LOG.log(\"\\t\"+size+\" bytes written to \"+_tempJUnit.getAbsolutePath());", "+        }", "+        else {", "+          // LOG.log(\"\\tjunit.jar not found\");", "+          if (_tempJUnit!=null) {", "+            _tempJUnit.delete();", "+            _tempJUnit = null;", "+          }", "+        }", "+      }", "+      catch(IOException ioe) {", "+        if (_tempJUnit!=null) {", "+          _tempJUnit.delete();", "+          _tempJUnit = null;", "+        }", "+      }", "+      // sometimes this file may be left behind, so create a shutdown hook", "+      // that deletes temporary files matching our pattern", "+      Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {", "+        public void run() {", "+          try {", "+            File temp = edu.rice.cs.plt.io.IOUtil.createAndMarkTempFile(PREFIX,SUFFIX);;", "+            File[] toDelete = temp.getParentFile().listFiles(new FilenameFilter() {", "+              public boolean accept(File dir, String name) {", "+                if ((!name.startsWith(PREFIX)) || (!name.endsWith(SUFFIX))) return false;", "+                String rest = name.substring(PREFIX.length(), name.length()-SUFFIX.length());", "+                try {", "+                  Integer i = new Integer(rest);", "+                  // we could create an integer from the rest, this is one of our temporary files", "+                  return true;", "+                }", "+                catch(NumberFormatException e) { /* couldn't convert, ignore this file */ }", "+                return false;", "+              }", "+            });", "+            for(File f: toDelete) {", "+              f.delete();", "+            }", "+          }", "+          catch(IOException ioe) { /* could not delete temporary files, ignore */ }", "+        }", "+      })); ", "+    }"]}], "num": 27550}