{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47d9a5904ceb4d6eadc1822cb6c38357", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69169a0350430afa48a3434cad7bcd60", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException, AbsentInformationException", "signatureAfterChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException, AbsentInformationException", "diff": ["-      List vars = frame.visibleVariables();", "-      Iterator varsIterator = vars.iterator();", "+      List<LocalVariable> vars = frame.visibleVariables();  // JDK 1.5 will eliminate this warning", "+      Iterator<LocalVariable> varsIterator = vars.iterator();", "-        LocalVariable localVar = (LocalVariable)varsIterator.next();", "+        LocalVariable localVar = varsIterator.next();", "-            List classes = _vm.classesByName(localVar.typeName());", "+            List<Type> classes = _vm.classesByName(localVar.typeName());  //JDK 1.5 will eliminate this warning", "-              type = (Type)classes.get(0);", "+              type = classes.get(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85e7d0ffdf3f00804578ec328e0c9899", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException, AbsentInformationException", "signatureAfterChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException, AbsentInformationException", "diff": ["-      List vars = frame.visibleVariables();", "-      Iterator varsIterator = vars.iterator();", "+      List<LocalVariable> vars = frame.visibleVariables();  // JDK 1.5 will eliminate this warning", "+      Iterator<LocalVariable> varsIterator = vars.iterator();", "-        LocalVariable localVar = (LocalVariable)varsIterator.next();", "+        LocalVariable localVar = varsIterator.next();", "-            List classes = _vm.classesByName(localVar.typeName());", "+            List<Type> classes = _vm.classesByName(localVar.typeName());  //JDK 1.5 will eliminate this warning", "-              type = (Type)classes.get(0);", "+              type = classes.get(0);"]}], "num": 2725}