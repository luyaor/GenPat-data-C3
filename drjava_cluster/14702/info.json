{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "392f1c1c042db2cc199f766fff7b3a0f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cb7d3a5bd6d457c1b3b9a9686c01099", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "05119755030686fe0259af07d396f4b16572da81", "commitAfterChange": "8be1a45287b369c45bb64fa4e7c7c7267ccb13e2", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tprivate int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor, int offset)", "signatureAfterChange": " \tprivate int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor, int offset)", "diff": ["-\t\t\t\t\t\t (!copyCursor.current().getType().equals(\"\\n\"))){", "+\t\t\t\t\t\t (!(copyCursor.current().getType().equals(\"\\n\") &&", "+\t\t\t\t\t\t\t\tcopyCursor.current().getState() == ReducedToken.FREE))){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2c78a92b98e338e5003dbfc32e6fb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "05119755030686fe0259af07d396f4b16572da81", "commitAfterChange": "8be1a45287b369c45bb64fa4e7c7c7267ccb13e2", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tprivate int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor, int offset)", "signatureAfterChange": " \tprivate int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor, int offset)", "diff": ["-\t\t\t\t\t\t (!copyCursor.current().getType().equals(\"\\n\"))){", "+\t\t\t\t\t\t (!(copyCursor.current().getType().equals(\"\\n\") &&", "+\t\t\t\t\t\t\t\tcopyCursor.current().getState() == ReducedToken.FREE))){"]}], "num": 14702}