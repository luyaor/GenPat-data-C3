{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55d649f8522081689b3a398227b5739e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "499332270814bd449663d3f92df83224", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 85, "signatureBeforeChange": "    public static boolean arrayEquals(Object[] array1, Object[] array2)", "signatureAfterChange": "    public static boolean arrayEquals(Object[] array1, Object[] array2)", "diff": ["-  public static boolean arrayEquals(Object[] array1, Object[] array2) {", "-    if (array1 == null && array2 == null) { return true; }", "-    if (array1 == null || array2 == null) { return false; }", "-    if (array1.length != array2.length) { return false; }", "-    for (int i = 0; i < array1.length; i++) {", "-      if (!array1[i].equals(array2[i])) { return false;}", "-    }", "-    return true;", "-  }", "+  public static boolean arrayEquals(Object[] array1, Object[] array2) { return Arrays.equals(array1, array2); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84fec1bf8e9e18542ffe7c5d7f15199b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 91, "signatureBeforeChange": "    public static boolean arrayEquals(Object[] array1, Object[] array2)", "signatureAfterChange": "    public static boolean arrayEquals(Object[] array1, Object[] array2)", "diff": ["-  public static boolean arrayEquals(Object[] array1, Object[] array2) { return Arrays.equals(array1, array2); }", "+  public static boolean arrayEquals(Object[] array1, Object[] array2) {", "+//    return Arrays.equals(array1, array2); ", "+    int n = array1.length;", "+    if (n != array2.length) return false;", "+    for (int i = 0; i < n; i++) {", "+      Object o1 = array1[i];", "+      Object o2 = array2[i];", "+      if (o1 == null && o2 != null) return false;", "+      if (! o1.equals(o2)) return false;", "+    };", "+    return true;", "+  }"]}], "num": 8075}