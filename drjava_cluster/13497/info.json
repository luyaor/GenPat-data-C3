{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3567a6bb99d5d6602632c77aaf36a5f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "238e7118eae59f0c0cfe4e628993e6c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "5402d816f4ee865f7ec73de4093cafaa0c215bb0", "commitAfterChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "   public void testConsoleInput() throws DocumentAdapterException", "signatureAfterChange": "   public void testConsoleInput() throws DocumentAdapterException", "diff": ["+      int n = 0;", "+        n++;", "+        if (n > 1) {", "+          throw new IllegalStateException(\"Input should only be requested once!\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a54dd1c4bc6c05f9208a5c427783e8a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ObjectMethodCall.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setExpression(Expression e)", "signatureAfterChange": "   public void setExpression(Expression e)", "diff": ["+    if (e == null) { throw new IllegalArgumentException(\"e == null\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbb8d69922db11ac7c9e9d3b560f7bf7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TypeParameter.java", "commitBeforeChange": "a24082414064ecb42431a2e612770e1ab3e9fefa", "commitAfterChange": "b2a145d8d3ea1ad947e0937f542b0780baf31d45", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public TypeParameter(List<IdentifierToken> ids, ReferenceTypeName in_bound,                        List<ReferenceTypeName> in_interfaceBounds, SourceInfo in_sourceInfo)", "signatureAfterChange": "   public TypeParameter(List<IdentifierToken> ids, ReferenceTypeName in_bound,                        List<ReferenceTypeName> in_interfaceBounds, SourceInfo in_sourceInfo)", "diff": ["+    if (in_interfaceBounds == null) {", "+      throw new IllegalArgumentException(\"Parameter 'interfaceBounds' to the TypeParameter constructor was null.\");", "+    }"]}], "num": 13497}