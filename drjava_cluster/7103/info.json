{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a32fd4ab6e5177799a913902979058f1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1708fd0c9687b74519fa47c79e87de35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 164, "signatureBeforeChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "diff": ["-    // remove breakpoints for this file", "-    Debugger dbg = getDebugger();", "-    if (dbg.isAvailable()) {", "-      Vector<Breakpoint> bps = new Vector<Breakpoint>(doc.getBreakpoints());", "-      for (int i = 0; i < bps.size(); i++) {", "-        Breakpoint bp = bps.get(i);", "-        try { dbg.removeBreakpoint(bp); }", "-        catch(DebugException de) { /* ignore */ }", "-      }", "-    }", "+    // remove breakpoints and bookmarks for this file", "+    doc.getBreakpointManager().clearRegions();", "+    doc.getBookmarkManager().clearRegions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d72b4baa119ad042fd611496be181e3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 226, "methodNumberAfterChange": 230, "signatureBeforeChange": "     public Breakpoint getBreakpointAt( int offset)", "signatureAfterChange": "     public Breakpoint getBreakpointAt(int offset)", "diff": ["-    public Breakpoint getBreakpointAt( int offset) {", "+    public Breakpoint getBreakpointAt(int offset) {", "-      for (int i =0; i<_breakpoints.size(); i++) {", "+      for (int i = 0; i < _breakpoints.size(); i++) {", "-        if (offset >= bp.getStartOffset() && offset <= bp.getEndOffset()) {", "-          return bp;", "-        }", "+        if (offset >= bp.getStartOffset() && offset <= bp.getEndOffset()) return bp;"]}], "num": 7103}