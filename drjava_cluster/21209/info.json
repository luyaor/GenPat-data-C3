{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d5a97c06af2f62c6e24442af59678cc", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24a877fdf5a78c188e594a132b3ae823", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public int getDebugPort() throws IOException", "signatureAfterChange": "   public int getDebugPort() throws IOException", "diff": ["-      try {", "-        ServerSocket socket = new ServerSocket(0);", "-        _debugPort = socket.getLocalPort();", "-        socket.close();", "-      }", "-      catch (java.net.SocketException se) {", "-        // something wrong with sockets, can't use for debugger", "-        _debugPort = -1;", "-      }", "-      _debugPortSet = true;", "-      if (CodeStatus.DEVELOPMENT) {", "-        System.setProperty(\"drjava.debug.port\", String.valueOf(_debugPort));", "-      }", "+      _createNewDebugPort();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e5f9258287226da1308fd9b6689fe2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "   protected int getDebugPort()", "signatureAfterChange": "   protected int getDebugPort()", "diff": ["-   */", "-  protected int getDebugPort() {", "-    int port = -1;", "-    try {", "-      port = _model.getDebugPort();", "-    }", "-    catch (IOException ioe) {", "-      // Can't find port; don't use debugger", "-    }", "-    return port;", "-  }", "+   */", "+  protected int getDebugPort() {", "+    int port = -1;", "+    try {", "+      if (_model != null) {", "+        port = _model.getDebugPort();", "+      }", "+    }", "+    catch (IOException ioe) {", "+      // Can't find port; don't use debugger", "+    }", "+    return port;", "+  }"]}], "num": 21209}