{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5498250d720668e9f06ace854641e8de", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "085336e50d3ddeb68bd3be6e77ac27b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "37dab6b79fc3d4e6f7b2b5f0aa53a4ea9b7f7476", "commitAfterChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public synchronized void toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean enabled)      throws DebugException", "signatureAfterChange": "   public synchronized void toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean enabled)      throws DebugException", "diff": ["-    if (breakpoint == null)  setBreakpoint(new Breakpoint (doc, offset, lineNum, enabled, this));", "+    if (breakpoint == null) {", "+      if (doc.getLineStartPos(offset) == doc.getLineEndPos(offset)) {", "+        printMessage(\"Cannot set a breakpoint on an empty line.\");", "+      }", "+      else {", "+        try {", "+          setBreakpoint(new Breakpoint (doc, offset, lineNum, enabled, this));", "+        }", "+        catch(LineNotExecutableException lnee) {", "+          printMessage(lnee.getMessage());", "+        }", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c4198493beabd42bd89f1d238eef04f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4cdb9838755e53512e5d72bc594953caa513c0c0", "commitAfterChange": "46bed49fcf3d9c586e517d4177d242598f271a4d", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": "     public Icon getIcon(File f)", "signatureAfterChange": "     public Icon getIcon(File f)", "diff": ["-      if (ret == null)", "-        return super.getIcon(f);", "-      else", "-        return ret;", "+      if (ret == null) {", "+        ret = super.getIcon(f);", "+        if (ret.getIconHeight() < _java.getIconHeight()) {", "+          ret = new CenteredIcon(ret, _java.getIconWidth(), _java.getIconHeight());", "+        }", "+      }", "+      return ret;"]}], "num": 4643}