{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20e765175c84b6267325931f3c62059d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f707b679d3669f5997728325e10ce35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "66d5a0ef7cdf245b6f0ac2e2d61fee1073799420", "commitAfterChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void autoImport()", "signatureAfterChange": "   public void autoImport()", "diff": ["-    if (!edu.rice.cs.drjava.DrJava.getConfig().getSetting(edu.rice.cs.drjava.config.OptionConstants.DEBUG_AUTO_IMPORT).booleanValue()) return;", "-    if (_autoImportSet.size()==0) return;", "-", "+    String classes = DrJava.getConfig().getSetting(OptionConstants.INTERACTIONS_AUTO_IMPORT_CLASS_STRING);", "+    String []import_classes = classes.split(\",\");", "-    for(String s: _autoImportSet) {", "-      sb.append(\"import \");", "-      sb.append(s);", "-      sb.append(\"; \");", "+    ", "+    for(String s: import_classes) {", "+      String name = s.trim();", "+      if (s.length()>0) {", "+        sb.append(\"import \");", "+        sb.append(s.trim());", "+        sb.append(\"; \");", "+      }", "+    }    ", "+    if (DrJava.getConfig().getSetting(OptionConstants.DEBUG_AUTO_IMPORT).booleanValue()) {", "+      for(String s: _autoImportSet) {", "+        sb.append(\"import \");", "+        sb.append(s);", "+        sb.append(\"; \");", "+      }", "-    _document.insertBeforeLastPrompt(\"Auto-import: \"+sb.toString() + \"\\n\", InteractionsDocument.DEBUGGER_STYLE);", "-    new Thread(new Runnable() { ", "-      public void run() { ", "-        try { interpret(sb.toString()); } ", "-        catch(Throwable t) { DrJavaErrorHandler.record(t); }", "-      } ", "-    }).start(); ", "+", "+    if (sb.length()>0) {", "+      interpret(sb.toString());", "+      _document.insertBeforeLastPrompt(\"Auto-import after debug: \"+sb.toString() + \"\\n\", InteractionsDocument.DEBUGGER_STYLE);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c681a984e5b53c33622bc46584f7ac1d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "327ee73f54692c57df3bde83527bbbd711a5efb8", "commitAfterChange": "4ddd7404761b70fbc7f3b729484fc360047df6c1", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "\r \r     public String toString()", "diff": ["-", "-    public String toString() {", "-      final String textFont = DrJava.getConfig().getSetting(OptionConstants.FONT_MAIN).toString();", "-      final String numFont = DrJava.getConfig().getSetting(OptionConstants.FONT_LINE_NUMBERS).toString();", "-      final StringBuilder sb = new StringBuilder(120);", "-//      sb.append(\"<html><pre><font face=\\\"sanserif\\\">\");", "-      sb.append(lineNumber());", "-      sb.append(\": \");", "-      String text = _region.getString();", "-      sb.append(text);", "-//      sb.append(StringOps.getBlankString(120 - text.length()));", "-//      sb.append(\"</pre></html>\");", "-      return sb.toString();", "-    }", "+\r", "+    public String toString() {\r", "+      final String textFont = DrJava.getConfig().getSetting(OptionConstants.FONT_MAIN).toString();\r", "+      final String numFont = DrJava.getConfig().getSetting(OptionConstants.FONT_LINE_NUMBERS).toString();\r", "+      final StringBuilder sb = new StringBuilder(120);\r", "+      sb.append(\"<html>\");\r", "+      sb.append(lineNumber());\r", "+      sb.append(\": \");\r", "+      String text = _region.getString();\r", "+      sb.append(text);\r", "+      sb.append(StringOps.getBlankString(120 - text.length()));\r", "+      sb.append(\"</html>\");\r", "+      return sb.toString();\r", "+    }\r"]}], "num": 27124}