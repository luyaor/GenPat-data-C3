{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "422a87cd0b3581f6261a129abce436b0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "167b5d40a89d458f4c3fc71ad02a4d67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "db64d6218289f5b8c2c9777bfd38b4160001ceaa", "commitAfterChange": "8f81b4833cb462795daefaccef203de9c66140be", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private JUnitError _makeJUnitError ( TestFailure tF, String theclass, boolean isError, String fileName)", "signatureAfterChange": "   private JUnitError _makeJUnitError(TestFailure failure, String className, boolean isError, String fileName)", "diff": ["-  private JUnitError _makeJUnitError ( TestFailure tF, String theclass, boolean isError, String fileName) {", "+  private JUnitError _makeJUnitError(TestFailure failure, String className, boolean isError, String fileName) {", "-    TestFailure tFail = tF;", "-    TestCase tcFail = (TestCase) tFail.failedTest();", "+    Test failedTest = failure.failedTest();", "+    String testName = failedTest.getClass().getName();", "+    if (failedTest instanceof TestCase) {", "+      testName = ((TestCase)failedTest).getName();", "+    }", "-    StringWriter swFail = new StringWriter();", "-    PrintWriter pwFail  = new PrintWriter(swFail);", "+    StringWriter sWriter = new StringWriter();", "+    PrintWriter pWriter  = new PrintWriter(sWriter);", "-    tFail.thrownException().printStackTrace(pwFail);", "+    failure.thrownException().printStackTrace(pWriter);", "-    String classnameFail = theclass + \".\" + tcFail.getName();", "+    String classNameAndTest = className + \".\" + testName;", "-    int lineNum = _lineNumber( swFail.toString(), classnameFail);", "+    int lineNum = _lineNumber( sWriter.toString(), classNameAndTest);", "-  /*  try {", "-      _file = _document.getFile();", "-    }", "-    catch (FileMovedException fme) {", "-      // Recover, even though file was deleted", "-      _file = fme.getFile();", "-    }*/", "-    ", "-      tFail.thrownException().toString(): ", "-      tFail.thrownException().getMessage();", "+      failure.thrownException().toString(): ", "+      failure.thrownException().getMessage();", "-                            ! (tFail.thrownException() instanceof AssertionFailedError),", "-                            tcFail.getName(),", "-                            swFail.toString());", "+                            ! (failure.thrownException() instanceof AssertionFailedError),", "+                            testName,", "+                            sWriter.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "377c2eef219aa19275b471edfefe6535", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private JUnitError _makeJUnitError(TestFailure failure, List<String> classNames,                                      boolean isError, List<File> files)", "signatureAfterChange": "   private JUnitError _makeJUnitError(TestFailure failure, List<String> classNames,                                      boolean isError, List<File> files)", "diff": ["-    if (failedTest instanceof TestCase) {", "-      testName = ((TestCase)failedTest).getName();", "-    }", "-    else{", "-      testName = failedTest.getClass().getName();", "-    }", "+    if (failedTest instanceof TestCase) testName = ((TestCase)failedTest).getName();", "+    else testName = failedTest.getClass().getName();", "-    if(firstIndex == secondIndex){", "-      className = className2;", "-    }else{", "-      className = className1;", "-    }", "+    if(firstIndex == secondIndex) className = className2;", "+    else className = className1;", "+    ", "-    if(stackTrace.indexOf(className) == -1){", "+    if (stackTrace.indexOf(className) == -1){", "-      while(trace.indexOf(\"junit.framework.Assert\") != -1 &&", "-            trace.indexOf(\"junit.framework.Assert\") < trace.indexOf(\"(\")){", "+      while (trace.indexOf(\"junit.framework.Assert\") != -1 &&", "+            trace.indexOf(\"junit.framework.Assert\") < trace.indexOf(\"(\")) {", "-        trace = trace.substring(trace.indexOf('\\n')+1);", "+        trace = trace.substring(trace.indexOf('\\n') + 1);", "-    String exception =  (isError) ?", "-      failure.thrownException().toString():", "-      failure.thrownException().getMessage();", "+    String exception =  (isError) ? failure.thrownException().toString(): ", "+                                    failure.thrownException().getMessage();", "-//    }catch(IOException e){", "+//    } catch(IOException e){", "-    if (indexOfClass != -1) {", "-      file = files.get(indexOfClass);", "-    }", "-    else {", "-      file = _jmc.getFileForClassName(className);", "-    }", "+    if (indexOfClass != -1) file = files.get(indexOfClass);", "+    else file = _jmc.getFileForClassName(className);", "-    if(file == null){", "+    if (file == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0530f65a56d70699dbbf2bde3019b9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/NewVersionPopup.java", "commitBeforeChange": "7cbabe0b7b5f77b58eac69afdca15c16ef2f6a9b", "commitAfterChange": "e56c3e65e7bcf825d7bbbc53538aa94699792774", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @SuppressWarnings(\"fallthrough\")   protected String[] getMessage(MutableReference<Boolean> availableRef)", "signatureAfterChange": "      @SuppressWarnings(\"fallthrough\")   protected String[] getMessage(Box<Boolean> availableRef)", "diff": ["-  protected String[] getMessage(MutableReference<Boolean> availableRef) {", "-    MutableReference<String> stableString = new MutableReference<String>(\"\");", "-    MutableReference<String> betaString = new MutableReference<String>(\"\");", "-    MutableReference<String> devString = new MutableReference<String>(\"\");", "-    MutableReference<Date> stableTime = new MutableReference<Date>(new Date(0));", "-    MutableReference<Date> betaTime = new MutableReference<Date>(new Date(0));", "-    MutableReference<Date> devTime = new MutableReference<Date>(new Date(0));", "+  protected String[] getMessage(Box<Boolean> availableRef) {", "+    Box<String> stableString = new SimpleBox<String>(\"\");", "+    Box<String> betaString = new SimpleBox<String>(\"\");", "+    Box<String> devString = new SimpleBox<String>(\"\");", "+    Box<Date> stableTime = new SimpleBox<Date>(new Date(0));", "+    Box<Date> betaTime = new SimpleBox<Date>(new Date(0));", "+    Box<Date> devTime = new SimpleBox<Date>(new Date(0));", "-          if (stableTime.get().after(betaTime.get())) {", "+          if (stableTime.value().after(betaTime.value())) {", "-            if (stableTime.get().after(devTime.get())) {", "+            if (stableTime.value().after(devTime.value())) {", "-              _newestVersionString = stableString.get();", "+              _newestVersionString = stableString.value();", "-              _newestVersionString = devString.get();", "+              _newestVersionString = devString.value();", "-            if (betaTime.get().after(devTime.get())) {", "+            if (betaTime.value().after(devTime.value())) {", "-              _newestVersionString = betaString.get();", "+              _newestVersionString = betaString.value();", "-              _newestVersionString = devString.get();", "+              _newestVersionString = devString.value();"]}], "num": 11976}