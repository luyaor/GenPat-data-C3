{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9e33b09cedaee9e7252fe5a96d58ce9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c8424071976200248647406ac234ab9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public File[] getClassPaths()", "signatureAfterChange": "   public Iterable<File> getClassPaths()", "diff": ["-  public File[] getClassPaths() { return _classPathFiles.toArray(new File[_classPathFiles.size()]); }", "+  public Iterable<File> getClassPaths() { return _classPathFiles; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95e3290abeb9ca8fd3690c495ff0be8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 218, "methodNumberAfterChange": 218, "signatureBeforeChange": "   public File[] getSourceRootSet()", "signatureAfterChange": "   public Iterable<File> getSourceRootSet()", "diff": ["-   */", "-  public File[] getSourceRootSet() {", "-    HashSet<File> roots = new HashSet<File>();", "+  /** Gets an array of all sourceRoots for the open definitions documents, without duplicates. */", "+  public Iterable<File> getSourceRootSet() {", "+    Set<File> roots = new LinkedHashSet<File>();", "-          File root = doc.getSourceRoot ();", "-          if (root != null) roots.add(root); // Can't create duplicate entries in a HashSet", "+          File root = doc.getSourceRoot();", "+          if (root != null) roots.add(root); // Can't create duplicate entries in a Set", "-    return roots.toArray(new File[roots.size()]);", "+    return roots;"]}], "num": 6900}