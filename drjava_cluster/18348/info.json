{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45a828d1c0ddab2d3d4f1bfd5f43c22c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f1d8b0429f856cc1331d34a75e0d7b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "467e5b5cdd1dcb74e3af8270c3f2ac9d390a6395", "commitAfterChange": "a30a5503c4bed745d3bf75a4b449d026f5c00795", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "   private void _updateWatches()", "signatureAfterChange": "   private void _updateWatches()", "diff": ["-      ArrayList<Integer> arr_index = new ArrayList<Integer>();", "-      ", "-      if(name.indexOf(\"[\") != -1 && name.indexOf(\"]\") != -1) {", "-        name = name.substring(0, name.indexOf(\"[\"));", "-        arr_index.add(Integer.parseInt(w.getName().substring(w.getName().indexOf(\"[\")+1, w.getName().indexOf(\"]\"))));      ", "-        if(w.getName().indexOf(\"]\")<(w.getName().length()-1)) {", "-          String iter = w.getName().substring(w.getName().indexOf(\"]\")+1, w.getName().length());", "-          while(iter.indexOf(\"[\") != -1 && iter.indexOf(\"]\") != -1) {", "-            arr_index.add(Integer.parseInt(iter.substring(iter.indexOf(\"[\")+1, iter.indexOf(\"]\"))));      ", "-            if(iter.indexOf(\"]\")<(iter.length()-1))", "-              iter = iter.substring(iter.indexOf(\"]\")+1, iter.length());", "-            else ", "-              iter = \"\";", "-          }", "-        }", "-      }", "-     ", "-      int [] indices = new int[arr_index.size()];", "-      for (int i = 0; i < arr_index.size(); i++) {", "-        indices[i] = arr_index.get(i);", "-      }", "-      val = _model.getInteractionsModel().getVariableToString(name, indices);", "-      type = _model.getInteractionsModel().getVariableType(name, indices);", "+//      ArrayList<Integer> arr_index = new ArrayList<Integer>();", "+//      ", "+//      if(name.indexOf(\"[\") != -1 && name.indexOf(\"]\") != -1) {", "+//        name = name.substring(0, name.indexOf(\"[\"));", "+//        arr_index.add(Integer.parseInt(w.getName().substring(w.getName().indexOf(\"[\")+1, w.getName().indexOf(\"]\"))));      ", "+//        if(w.getName().indexOf(\"]\")<(w.getName().length()-1)) {", "+//          String iter = w.getName().substring(w.getName().indexOf(\"]\")+1, w.getName().length());", "+//          while(iter.indexOf(\"[\") != -1 && iter.indexOf(\"]\") != -1) {", "+//            arr_index.add(Integer.parseInt(iter.substring(iter.indexOf(\"[\")+1, iter.indexOf(\"]\"))));      ", "+//            if(iter.indexOf(\"]\")<(iter.length()-1))", "+//              iter = iter.substring(iter.indexOf(\"]\")+1, iter.length());", "+//            else ", "+//              iter = \"\";", "+//          }", "+//        }", "+//      }", "+//     ", "+//      int [] indices = new int[arr_index.size()];", "+//      for (int i = 0; i < arr_index.size(); i++) {", "+//        indices[i] = arr_index.get(i);", "+//      }", "+      val = _model.getInteractionsModel().getVariableToString(name);", "+      type = _model.getInteractionsModel().getVariableType(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edb922a53e4639763c024e1ba719a3d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "3c45024cce34a3ee10682b132490494920e9d45a", "commitAfterChange": "66e5a8936ddc9a6a54b90689df97ecc4178fb4cc", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   private void _updateWatches()", "signatureAfterChange": "   private void _updateWatches()", "diff": ["-      String val = _model.getInteractionsModel().getVariableToString(w.getName());", "+      String name = w.getName();", "+      String val = \"\";", "+      String type = \"\";", "+      ArrayList <Integer>arr_index = new ArrayList<Integer>();", "+      ", "+      if(name.indexOf(\"[\")!=-1 && name.indexOf(\"]\")!=-1) {", "+        name = name.substring(0, name.indexOf(\"[\"));", "+        arr_index.add(Integer.parseInt(w.getName().substring(w.getName().indexOf(\"[\")+1, w.getName().indexOf(\"]\"))));      ", "+        if(w.getName().indexOf(\"]\")<(w.getName().length()-1)) {", "+          String iter = w.getName().substring(w.getName().indexOf(\"]\")+1, w.getName().length());", "+          while(iter.indexOf(\"[\")!=-1 && iter.indexOf(\"]\")!=-1) {", "+            arr_index.add(Integer.parseInt(iter.substring(iter.indexOf(\"[\")+1, iter.indexOf(\"]\"))));      ", "+            if(iter.indexOf(\"]\")<(iter.length()-1))", "+              iter = iter.substring(iter.indexOf(\"]\")+1, iter.length());", "+            else ", "+              iter = \"\";", "+          }", "+        }", "+      }", "+     ", "+      if(!arr_index.isEmpty())  {", "+        int [] indices = new int[arr_index.size()];", "+        for (int i = 0; i < arr_index.size(); i++) {", "+          indices[i] = (Integer)arr_index.get(i);", "+        }", "+        val = _model.getInteractionsModel().getVariableToString(name, indices);", "+        type = _model.getInteractionsModel().getVariableType(name, indices);", "+      }", "+      else {", "+        val = _model.getInteractionsModel().getVariableToString(name);", "+        type = _model.getInteractionsModel().getVariableType(name);", "+      }", "+      ", "-      String type = _model.getInteractionsModel().getVariableType(w.getName());"]}], "num": 18348}