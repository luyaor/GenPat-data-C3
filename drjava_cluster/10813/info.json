{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7835fc9597ddfaadcc28e262940b4aad", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14112fce97a02ca0b176d30e79776964", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public Type visit(ArrayAccess node)", "signatureAfterChange": "   public Class<?> visit(ArrayAccess node)", "diff": ["-  public Type visit(ArrayAccess node) {", "+  public Class<?> visit(ArrayAccess node) {", "-    Type c1 = node.getExpression().acceptVisitor(this);", "-    Class<?> c = (Class<?>)c1;", "+    Class<?> c = node.getExpression().acceptVisitor(this);", "+", "-    ", "+", "-    Type result = c.getComponentType();", "+    Class<?> result = c.getComponentType();", "-    ", "+", "-    Type c2 = node.getCellNumber().acceptVisitor(this);", "-    c = (Class<?>)c2;", "-    ", "+    c = node.getCellNumber().acceptVisitor(this);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c7823cd10f2e74b4887dc48b2a2bc78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public Type visit(ArrayAllocation node)", "signatureAfterChange": "   public Class<?> visit(ArrayAllocation node)", "diff": ["-  public Type visit(ArrayAllocation node) {", "+  public Class<?> visit(ArrayAllocation node) {", "-      Type c1 = exp.acceptVisitor(this);", "-      Class<?> c = (Class<?>)c1;", "+      Class<?> c = exp.acceptVisitor(this);", "-    ", "+", "-    Type c1 = node.getCreationType().acceptVisitor(this);", "-    Class<?> c = (Class<?>)c1;", "+    Class<?> c = node.getCreationType().acceptVisitor(this);", "+", "-    ", "+", "-    Type ac = Array.newInstance(c, new int[node.getDimension()]).getClass();", "+    Class<?> ac = Array.newInstance(c, new int[node.getDimension()]).getClass();"]}], "num": 10813}