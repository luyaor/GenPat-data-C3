{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a1c1a68ad6909e1cdcab15584cfa245", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6beda617b811265045be02869706f5f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "37449cba11f74bdf3921e2b515b5228eef23235b", "commitAfterChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected static Map<FullVersion, Iterable<JarJDKToolsLibrary>>     getCompletedCompoundResults(GlobalModel model,                                 Iterable<JarJDKToolsLibrary> collapsed,                                 Iterable<JarJDKToolsLibrary> compoundCollapsed)", "signatureAfterChange": "   protected static Map<FullVersion, Iterable<JarJDKToolsLibrary>>     getCompletedCompoundResults(GlobalModel model, Iterable<JarJDKToolsLibrary> collapsed,                                 Iterable<JarJDKToolsLibrary> compoundCollapsed)", "diff": ["-    getCompletedCompoundResults(GlobalModel model,", "-                                Iterable<JarJDKToolsLibrary> collapsed,", "+    getCompletedCompoundResults(GlobalModel model, Iterable<JarJDKToolsLibrary> collapsed,", "-      JDKToolsLibrary.msg(\"compoundLib: \"+compoundLib);", "-      JDKToolsLibrary.msg(\"    \"+compoundLib.location());", "+      JDKToolsLibrary.msg(\"compoundLib: \" + compoundLib);", "+      JDKToolsLibrary.msg(\"    \" + compoundLib.location());", "-        if (!javaLib.jdkDescriptor().isBaseForCompound()) continue; // javaLib not suitable as base", "-        JDKToolsLibrary.msg(\"    exact? \"+javaLib);", "+        if (! javaLib.jdkDescriptor().isBaseForCompound()) continue; // javaLib not suitable as base", "+        JDKToolsLibrary.msg(\"    exact? \" + javaLib);  // Is exact comparison necessary?  It never seems to match.", "-            (javaVersion.maintenance()==compoundVersion.maintenance()) &&", "-            (javaVersion.update()==compoundVersion.update()) &&", "-            (javaVersion.release()==compoundVersion.release()) &&", "+            (javaVersion.maintenance() == compoundVersion.maintenance()) &&", "+            (javaVersion.update() == compoundVersion.update()) &&", "+            (javaVersion.release() == compoundVersion.release()) &&", "-      if (found==null) {", "+      if (found == null) {", "-          if (!javaLib.jdkDescriptor().isBaseForCompound()) continue; // javaLib not suitable as base", "-          JDKToolsLibrary.msg(\"    major? \"+javaLib);", "+          if (! javaLib.jdkDescriptor().isBaseForCompound()) continue; // javaLib not suitable as base", "+          JDKToolsLibrary.msg(\"    major? \" + javaLib);", "-      if (found!=null) {", "+      if (found != null) {", "-          JDKToolsLibrary.msg(\"    ==> \"+lib.version());", "+          JDKToolsLibrary.msg(\"    based on version \" + lib.version());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2ffe3cb40209cbbf8079c9afc82ec5d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TopLevelTest.java", "commitBeforeChange": "b31c48044c8b7287b269feadafb16ad6cb2f72cb", "commitAfterChange": "43f44f4c8f4836b9b47858083bf7fd620a01ca0f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static Test suite() throws IOException", "signatureAfterChange": "      public static Test suite() throws IOException", "diff": ["-    ZipFile jlbenchJar = new ZipFile(\"lib/buildlib/jlbench-base-14.jar\");", "+    ZipFile jlbenchJar = new ZipFile(\"lib/buildlib/jlbench-base.jar\");"]}], "num": 28236}