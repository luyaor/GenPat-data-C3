{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a441fc98924e569b9c582e480b195a0b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e6b35d1ec5618d72034bb07bdc450b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/TernaryOpProperty.java", "commitBeforeChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "commitAfterChange": "f938008597ce54d16e4a865d30f8ef062ea55d2f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void update()", "signatureAfterChange": "\r   public void update(PropertyMaps pm)", "diff": ["-  /** Update the property so the value is current. */", "-  public void update() {", "-    O op1;", "-    if (_attributes.get(_op1Name)==null) {", "-      _value = \"(\"+_name+\" Error...)\";", "-      return;", "-    }", "-    else {", "-      try {", "-        op1 = _parse1.apply(_attributes.get(_op1Name));", "-      }", "-      catch(Exception e) {", "-        _value = \"(\"+_name+\" Error...)\";", "-        return;", "-      }", "-    }", "-    P op2;", "-    if (_attributes.get(_op2Name)==null) {", "-      _value = \"(\"+_name+\" Error...)\";", "-      return;", "-    }", "-    else {", "-      try {", "-        op2 = _parse2.apply(_attributes.get(_op2Name));", "-      }", "-      catch(Exception e) {", "-        _value = \"(\"+_name+\" Error...)\";", "-        return;", "-      }", "-    }", "-    Q op3;", "-    if (_attributes.get(_op3Name)==null) {", "-      _value = \"(\"+_name+\" Error...)\";", "-      return;", "-    }", "-    else {", "-      try {", "-        op3 = _parse3.apply(_attributes.get(_op3Name));", "-      }", "-      catch(Exception ee) {", "-        _value = \"(\"+_name+\" Error...)\";", "-        return;", "-      }", "-    }", "-    _value = _format.apply(_op.value(op1,op2,op3));", "-  }", "+    * @param pm PropertyMaps used for substitution when replacing variables */\r", "+  public void update(PropertyMaps pm) {\r", "+    O op1;\r", "+    if (_attributes.get(_op1Name)==null) {\r", "+      _value = \"(\"+_name+\" Error...)\";\r", "+      return;\r", "+    }\r", "+    else {\r", "+      try {\r", "+        op1 = _parse1.apply(_attributes.get(_op1Name));\r", "+      }\r", "+      catch(Exception e) {\r", "+        _value = \"(\"+_name+\" Error...)\";\r", "+        return;\r", "+      }\r", "+    }\r", "+    P op2;\r", "+    if (_attributes.get(_op2Name)==null) {\r", "+      _value = \"(\"+_name+\" Error...)\";\r", "+      return;\r", "+    }\r", "+    else {\r", "+      try {\r", "+        op2 = _parse2.apply(_attributes.get(_op2Name));\r", "+      }\r", "+      catch(Exception e) {\r", "+        _value = \"(\"+_name+\" Error...)\";\r", "+        return;\r", "+      }\r", "+    }\r", "+    Q op3;\r", "+    if (_attributes.get(_op3Name)==null) {\r", "+      _value = \"(\"+_name+\" Error...)\";\r", "+      return;\r", "+    }\r", "+    else {\r", "+      try {\r", "+        op3 = _parse3.apply(_attributes.get(_op3Name));\r", "+      }\r", "+      catch(Exception ee) {\r", "+        _value = \"(\"+_name+\" Error...)\";\r", "+        return;\r", "+      }\r", "+    }\r", "+    _value = _format.apply(_op.value(op1,op2,op3));\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f643370cfd13a3303656b4ad6c4ffce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/FileProperty.java", "commitBeforeChange": "1a21d93c6026fc975d9f1a1bda2fbd55942a0154", "commitAfterChange": "7cbabe0b7b5f77b58eac69afdca15c16ef2f6a9b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r   public void update(PropertyMaps pm)", "signatureAfterChange": "   public void update(PropertyMaps pm)", "diff": ["-    * @param pm PropertyMaps used for substitution */\r", "-  public void update(PropertyMaps pm) {\r", "-    try {\r", "-      File f;\r", "-      if (_getFile == null || (f = _getFile.apply(null)) == null) {\r", "-        _value = \"\";\r", "-        return;\r", "-      }\r", "-      if (_attributes.get(\"rel\").equals(\"/\")) {\r", "-        f = f.getAbsoluteFile();\r", "-        try { f = f.getCanonicalFile(); }\r", "-        catch(IOException ioe) { }\r", "-        _value = edu.rice.cs.util.StringOps.escapeFileName(f.toString());\r", "-      }\r", "-      else {\r", "-        File rf = new File(StringOps.unescapeFileName(StringOps.replaceVariables(_attributes.get(\"rel\"), \r", "-                                                                                        pm,\r", "-                                                                                        PropertyMaps.GET_CURRENT)));\r", "-        String s = FileOps.stringMakeRelativeTo(f,rf);                                     \r", "-        _value = edu.rice.cs.util.StringOps.escapeFileName(s);\r", "-      }\r", "-    }\r", "-    catch(IOException e) { _value = \"(Error...)\"; }\r", "-    catch(SecurityException e) { _value = \"(Error...)\"; }\r", "-  }    \r", "+    * @param pm PropertyMaps used for substitution */", "+  public void update(PropertyMaps pm) {", "+    try {", "+      File f;", "+      if (_getFile == null || (f = _getFile.value()) == null) {", "+        _value = \"\";", "+        return;", "+      }", "+      if (_attributes.get(\"rel\").equals(\"/\")) {", "+        f = f.getAbsoluteFile();", "+        try { f = f.getCanonicalFile(); }", "+        catch(IOException ioe) { }", "+        _value = edu.rice.cs.util.StringOps.escapeFileName(f.toString());", "+      }", "+      else {", "+        File rf = new File(StringOps.unescapeFileName(StringOps.replaceVariables(_attributes.get(\"rel\"), ", "+                                                                                        pm,", "+                                                                                        PropertyMaps.GET_CURRENT)));", "+        String s = FileOps.stringMakeRelativeTo(f,rf);                                     ", "+        _value = edu.rice.cs.util.StringOps.escapeFileName(s);", "+      }", "+    }", "+    catch(IOException e) { _value = \"(Error...)\"; }", "+    catch(SecurityException e) { _value = \"(Error...)\"; }", "+  }    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a13a256a7a612bd0abc829a90cd68b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/TernaryOpProperty.java", "commitBeforeChange": "1a21d93c6026fc975d9f1a1bda2fbd55942a0154", "commitAfterChange": "7cbabe0b7b5f77b58eac69afdca15c16ef2f6a9b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r   public void update(PropertyMaps pm)", "signatureAfterChange": "   public void update(PropertyMaps pm)", "diff": ["-    * @param pm PropertyMaps used for substitution when replacing variables */\r", "-  public void update(PropertyMaps pm) {\r", "-    O op1;\r", "-    if (_attributes.get(_op1Name)==null) {\r", "-      _value = \"(\"+_name+\" Error...)\";\r", "-      return;\r", "-    }\r", "-    else {\r", "-      try {\r", "-        op1 = _parse1.apply(_attributes.get(_op1Name));\r", "-      }\r", "-      catch(Exception e) {\r", "-        _value = \"(\"+_name+\" Error...)\";\r", "-        return;\r", "-      }\r", "-    }\r", "-    P op2;\r", "-    if (_attributes.get(_op2Name)==null) {\r", "-      _value = \"(\"+_name+\" Error...)\";\r", "-      return;\r", "-    }\r", "-    else {\r", "-      try {\r", "-        op2 = _parse2.apply(_attributes.get(_op2Name));\r", "-      }\r", "-      catch(Exception e) {\r", "-        _value = \"(\"+_name+\" Error...)\";\r", "-        return;\r", "-      }\r", "-    }\r", "-    Q op3;\r", "-    if (_attributes.get(_op3Name)==null) {\r", "-      _value = \"(\"+_name+\" Error...)\";\r", "-      return;\r", "-    }\r", "-    else {\r", "-      try {\r", "-        op3 = _parse3.apply(_attributes.get(_op3Name));\r", "-      }\r", "-      catch(Exception ee) {\r", "-        _value = \"(\"+_name+\" Error...)\";\r", "-        return;\r", "-      }\r", "-    }\r", "-    _value = _format.apply(_op.value(op1,op2,op3));\r", "-  }\r", "+    * @param pm PropertyMaps used for substitution when replacing variables */", "+  public void update(PropertyMaps pm) {", "+    O op1;", "+    if (_attributes.get(_op1Name)==null) {", "+      _value = \"(\"+_name+\" Error...)\";", "+      return;", "+    }", "+    else {", "+      try {", "+        op1 = _parse1.value(_attributes.get(_op1Name));", "+      }", "+      catch(Exception e) {", "+        _value = \"(\"+_name+\" Error...)\";", "+        return;", "+      }", "+    }", "+    P op2;", "+    if (_attributes.get(_op2Name)==null) {", "+      _value = \"(\"+_name+\" Error...)\";", "+      return;", "+    }", "+    else {", "+      try {", "+        op2 = _parse2.value(_attributes.get(_op2Name));", "+      }", "+      catch(Exception e) {", "+        _value = \"(\"+_name+\" Error...)\";", "+        return;", "+      }", "+    }", "+    Q op3;", "+    if (_attributes.get(_op3Name)==null) {", "+      _value = \"(\"+_name+\" Error...)\";", "+      return;", "+    }", "+    else {", "+      try {", "+        op3 = _parse3.value(_attributes.get(_op3Name));", "+      }", "+      catch(Exception ee) {", "+        _value = \"(\"+_name+\" Error...)\";", "+        return;", "+      }", "+    }", "+    _value = _format.value(_op.value(op1,op2,op3));", "+  }"]}], "num": 10690}