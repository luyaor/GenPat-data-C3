{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6cdad07436f55ce0089152e1d9ac33e7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "432b2163308177f6a985bce8773973e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   protected SymbolData defineAnonymousSymbolData(final AnonymousClassInstantiation anonInst,                                                   final String qualifiedAnonName,                                                  final String superName)", "signatureAfterChange": "   protected SymbolData defineAnonymousSymbolData(final AnonymousClassInstantiation anonInst,                                                   final String qualifiedAnonName,                                                  final String superName)", "diff": ["-    System.err.println(\"defineAnonymousSymbolData called for \" + qualifiedAnonName + \" extending \" + superName);", "+//    System.err.println(\"defineAnonymousSymbolData called for \" + qualifiedAnonName + \" extending \" + superName);", "-      if (enclosingSD == null) {", "-        System.err.println(\"***ALARM*** Class \" + _enclosingClassName + \" has been defined but is not found in symbolTable\");", "-        assert false;", "-      }", "+      assert (enclosingSD != null); ", "-      if (enclosingSD.getName().equals(\"HasAnonymousInnerClass\")) ", "-        System.err.println(\"****** The SymbolData for \" + sd + \" added to the inner classes of \" + enclosingSD);", "+//      if (enclosingSD.getName().equals(\"HasAnonymousInnerClass\")) ", "+//        System.err.println(\"****** The SymbolData for \" + sd + \" added to the inner classes of \" + enclosingSD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6075d94d61f9cdd1a3c1f9b2c9ff02d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   protected SymbolData defineSymbolData(final TypeDefBase typeDefBase, final String qualifiedTypeName,                                         final String enclosingClassName)", "signatureAfterChange": "   protected SymbolData defineSymbolData(final TypeDefBase typeDefBase, final String qualifiedTypeName,                                         final String enclosingClassName)", "diff": ["-    System.err.println(\"In defineSymbolData call for \" + qualifiedTypeName + \", contSd = \" + contSd);", "+//    System.err.println(\"In defineSymbolData call for \" + qualifiedTypeName + \", contSd = \" + contSd);", "-      if (superSD == null && rt.getName().equals(\"Object\"))  {", "-        System.err.println(\"ALARM: _lookupTypeFromWithinClass for 'Object' returned null\");", "-      }", "+//      if (superSD == null && rt.getName().equals(\"Object\"))  {", "+//        System.err.println(\"ALARM: _lookupTypeFromWithinClass for 'Object' returned null\");", "+//      }", "-            System.err.println(\"***** In a FIXUP, looking up type \" + rt + \" from within \" + enclosingClassName);", "+//            System.err.println(\"***** In a FIXUP, looking up type \" + rt + \" from within \" + enclosingClassName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69809f4c4ce79a24218969d9f78c3c92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   protected SymbolData defineInnerSymbolData(TypeDefBase typeDefBase, String relName, String qualifiedTypeName,                                               Data enclosing)", "signatureAfterChange": "   protected SymbolData defineInnerSymbolData(TypeDefBase typeDefBase, String relName, String qualifiedTypeName,                                               Data enclosing)", "diff": ["-    System.err.println(\"*** defineInnerSymbolData called for '\" + relName + \" with full name \" + qualifiedTypeName + ", "-                       \"' in '\" + enclosing + \"'\");", "+//    System.err.println(\"*** defineInnerSymbolData called for '\" + relName + \" with full name \" + qualifiedTypeName + ", "+//                       \"' in '\" + enclosing + \"'\");", "-    if (sd == null) System.err.println(\"defineSymbolData failed for \" + qualifiedTypeName);", "+//    if (sd == null) System.err.println(\"defineSymbolData failed for \" + qualifiedTypeName);", "-        System.err.println(\"***** In defineInnerSymbolData, enclosing = \" + enclosing ", "-                             + \" but _enclosingClassName = \" + _enclosingClassName);", "+//        System.err.println(\"***** In defineInnerSymbolData, enclosing = \" + enclosing ", "+//                             + \" but _enclosingClassName = \" + _enclosingClassName);"]}], "num": 21864}