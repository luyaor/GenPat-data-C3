{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "508eab360d51af59f0d45a40f5f30256", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0473fbce65bb368845cf1ff74370ffb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private int _delete(int count, TokenList.Iterator copyCursor)", "signatureAfterChange": "     private int _delete(int count, TokenList.Iterator copyCursor)", "diff": ["-    */", "-    private int _delete(int count, TokenList.Iterator copyCursor)", "-    {", "-", "+     */", "+    private int _delete(int count, TokenList.Iterator copyCursor) {", "-      if (count >0) {", "-        try {", "+      try {", "+        if (count > 0) {", "-        catch (Exception e) {", "-          throw new IllegalArgumentException(\"Trying to delete\" +", "-                                             \" past end of file.\");", "-        }", "-      }", "-      else { // count < 0", "-        try {", "+        else { // count <= 0", "-        catch (Exception e) {", "-          throw new IllegalArgumentException(\"Trying to delete\" +", "-                                             \" past end of file.\");", "-        }", "+        return deleteRight(copyCursor);", "-      return this.deleteRight(copyCursor);", "+      catch (Exception e) {", "+        throw new IllegalArgumentException(\"Trying to delete past end of file.\");", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5558f6c2104bf39c056646ce3bcbb912", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void ensureInterpreterConnected()", "signatureAfterChange": "   public void ensureInterpreterConnected()", "diff": ["-   */", "-  public void ensureInterpreterConnected() {", "-    try {", "-      synchronized(this) {", "-        while (_interpreterJVM == null) {", "-          wait();", "-        }", "-      }", "-    }", "-    catch (InterruptedException ie) {", "-      throw new edu.rice.cs.util.UnexpectedException(ie);", "-    }", "-  }", "+   */", "+  public void ensureInterpreterConnected() {", "+    try {", "+      synchronized(this) {", "+        // Now we silently fail if interpreter is disabled instead of", "+        // throwing an exception. This situation occurs only in test cases", "+        // and when DrJava is about to quit.", "+        //if (! _enabled) {", "+          //throw new IllegalStateException(\"Interpreter is disabled\");", "+        //}", "+", "+        while (_interpreterJVM() == null) {", "+          wait();", "+        }", "+      }", "+    }", "+    catch (InterruptedException ie) {", "+      throw new edu.rice.cs.util.UnexpectedException(ie);", "+    }", "+  }"]}], "num": 22396}