{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2ba3e76715c0c22822b828658399a0d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0716a5f2221010473a2ec95fc6d8a444", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDABreakpoint.java", "commitBeforeChange": "a6ad77fef884f528ddfb31a18f08f168fcd5e3f2", "commitAfterChange": "20e19df5b6c16c841aeff102df396402e35bacf3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, boolean isEnabled, JPDADebugger manager)     throws DebugException", "signatureAfterChange": "   public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, boolean isEnabled, JPDADebugger manager)     throws DebugException", "diff": ["-      Vector<ReferenceType> refTypes = _manager.getReferenceTypes(_className, _lineNumber);", "+      Vector<ReferenceType> refTypes = _manager.getReferenceTypes(_className, _manager.LLBreakpointLineNum(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11ae741ed075a259adb3fbeca6fc89cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "608d05e2a10d21cbc190b09334cd60b3c39fbc37", "commitAfterChange": "e2abbf01d6f3b23be51f493f663daa5ce8abf706", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private void compileAnonymousInnerConstructor(AnonymousInnerAllocation ast)", "signatureAfterChange": "      private void compileAnonymousInnerConstructor(AnonymousInnerAllocation ast)", "diff": ["-    DJConstructor superTarget = NodeProperties.getConstructor(ast);", "+    DJConstructor superTarget = NodeProperties.getConstructor(ast).declaredSignature();", "-                                                superTarget.declaredParameters()) + \"V\";", "+                                                superTarget.parameters()) + \"V\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f3dd74628870358a3e789a0924154c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "cf1b07a5f122d4faa57c9cb7ed7def1489ba2183", "commitAfterChange": "cf133e63dac33b490f37f86f2c16723ac73d3ddb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "         protected void junitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "signatureAfterChange": "         protected void junitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "diff": ["-      String cpString = _jvm.getClasspathString();", "+      String cpString = _jvm.getClasspath().toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d8476e0e348058f2ee05b4847977074", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ef93e6cc3a79f29ed28debb1108f1338b9a974ad", "commitAfterChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": "            public File[] getFilesInFolder(File dir, boolean rec) throws IOException, OperationCanceledException,      AlreadyOpenException", "signatureAfterChange": "            public File[] getFilesInFolder(File dir, boolean rec) throws IOException, OperationCanceledException,      AlreadyOpenException", "diff": ["-    String extension = DrJavaRoot.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)];", "+    String extension = OptionConstants.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)]", "+      .substring(1); // do not include the dot (\"java\", not \".java\")"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9534e0ebad50ee6189ae8be3b5d32995", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DrJavaTestSuiteLoader.java", "commitBeforeChange": "cf1b07a5f122d4faa57c9cb7ed7def1489ba2183", "commitAfterChange": "cf133e63dac33b490f37f86f2c16723ac73d3ddb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public DrJavaTestSuiteLoader(JUnitModelCallback jmc)", "signatureAfterChange": "      public DrJavaTestSuiteLoader(JUnitModelCallback jmc)", "diff": ["-    String classpath = _jmc.getClasspathString();", "+    String classpath = _jmc.getClasspath().toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991a903c603378bcbd478026b44b4a57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private void compileConstructor(ConstructorDeclaration ast, Type extendsT)", "signatureAfterChange": "      private void compileConstructor(ConstructorDeclaration ast, Type extendsT)", "diff": ["-    int access = defaultToProtectedAccess(ast.getAccessFlags());", "+    int access = defaultToProtectedAccess(ast.getModifiers().getBitVector());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9477b19b4b04961877e2fd6be60f2cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDABreakpoint.java", "commitBeforeChange": "a6ad77fef884f528ddfb31a18f08f168fcd5e3f2", "commitAfterChange": "20e19df5b6c16c841aeff102df396402e35bacf3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _createRequests(Vector<ReferenceType> refTypes) throws DebugException", "signatureAfterChange": "   protected void _createRequests(Vector<ReferenceType> refTypes) throws DebugException", "diff": ["-        List<Location> lines = rt.locationsOfLine(_lineNumber);", "+        List<Location> lines = rt.locationsOfLine(_manager.LLBreakpointLineNum(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdb0d8239f3831b65dbb5021cb23135c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "cf1b07a5f122d4faa57c9cb7ed7def1489ba2183", "commitAfterChange": "cf133e63dac33b490f37f86f2c16723ac73d3ddb", "methodNumberBeforeChange": 205, "methodNumberAfterChange": 206, "signatureBeforeChange": "     public void generateJavadoc(FileSaveSelector saver) throws IOException", "signatureAfterChange": "     public void generateJavadoc(FileSaveSelector saver) throws IOException", "diff": ["-      _javadocModel.javadocDocument(this, saver, getClasspathString());", "+      _javadocModel.javadocDocument(this, saver, getClasspath().toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee2730dea1e14b4d68c225b3c625da85", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "608d05e2a10d21cbc190b09334cd60b3c39fbc37", "commitAfterChange": "e2abbf01d6f3b23be51f493f663daa5ce8abf706", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void compileAnonymousConstructor(AnonymousAllocation ast)", "signatureAfterChange": "      private void compileAnonymousConstructor(AnonymousAllocation ast)", "diff": ["-      DJConstructor superTarget = NodeProperties.getConstructor(ast);", "+      DJConstructor superTarget = NodeProperties.getConstructor(ast).declaredSignature();", "-                         paramListDescriptor(extraArg, superTarget.declaredParameters()) + \"V\");", "+                         paramListDescriptor(extraArg, superTarget.parameters()) + \"V\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeb5fd26d33a8b522e81b531b4e960e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "608d05e2a10d21cbc190b09334cd60b3c39fbc37", "commitAfterChange": "e2abbf01d6f3b23be51f493f663daa5ce8abf706", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private void compileConstructor(ConstructorDeclaration ast, Type extendsT)", "signatureAfterChange": "      private void compileConstructor(ConstructorDeclaration ast, Type extendsT)", "diff": ["-      DJConstructor callTarget = NodeProperties.getConstructor(call);", "+      DJConstructor callTarget = NodeProperties.getConstructor(call).declaredSignature();", "-           IterUtil.zip(callTarget.declaredParameters(), call.getArguments())) {", "+           IterUtil.zip(callTarget.parameters(), call.getArguments())) {", "-                         paramListDescriptor(extraArg, callTarget.declaredParameters()) + \"V\");", "+                         paramListDescriptor(extraArg, callTarget.parameters()) + \"V\");"]}], "num": 1225}