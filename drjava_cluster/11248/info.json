{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d8e14538efb298bc34f24ecd1b9ce95", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ccd617c68eb8afdf828c80fb71c466", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/TypeDeclaration.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected TypeDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, List<Node> body,                             SourceInfo si)", "signatureAfterChange": "   protected TypeDeclaration(ModifierSet mods, String name, Option<List<TypeParameter>> tparams,                              List<? extends ReferenceTypeName> impl, List<Node> body,                              SourceInfo si)", "diff": ["-  protected TypeDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, List<Node> body,", "-                            SourceInfo si) {", "+  protected TypeDeclaration(ModifierSet mods, String name, Option<List<TypeParameter>> tparams,", "+                             List<? extends ReferenceTypeName> impl, List<Node> body,", "+                             SourceInfo si) {", "-    if (name == null) throw new IllegalArgumentException(\"name == null\");", "-    if (body == null) throw new IllegalArgumentException(\"body == null\");", "+    if (name == null || tparams == null || body == null) throw new IllegalArgumentException();", "+    typeParams = tparams;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af60fe37fcb585afc3fd59c833c15c77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MethodCall.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected MethodCall(String mn, List<? extends Expression> args,                        SourceInfo si)", "signatureAfterChange": "   protected MethodCall(Option<List<TypeName>> targs, String mn, List<? extends Expression> args,                        SourceInfo si)", "diff": ["-  protected MethodCall(String mn, List<? extends Expression> args,", "+  protected MethodCall(Option<List<TypeName>> targs, String mn, List<? extends Expression> args,", "-    ", "-", "-    if (mn == null) throw new IllegalArgumentException(\"mn == null\");", "-    ", "+    if (mn == null || targs == null) throw new IllegalArgumentException();", "+    typeArgs = targs;"]}], "num": 11248}