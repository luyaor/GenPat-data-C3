{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57a7ce25fd70795ae892375c20f11bd7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44aafef5fce51f3f4561822b6534e047", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 366, "methodNumberAfterChange": 366, "signatureBeforeChange": "\r \r   public void forCompoundWord(CompoundWord that)", "signatureAfterChange": "    public void forCompoundWord(CompoundWord that)", "diff": ["-\r", "-  public void forCompoundWord(CompoundWord that) {\r", "-    forCompoundWordDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    for (int i = 0; i < that.getWords().length; i++) that.getWords()[i].visit(this);\r", "-    forCompoundWordOnly(that);\r", "-  }\r", "+", "+  public void forCompoundWord(CompoundWord that) {", "+    forCompoundWordDoFirst(that);", "+    if (prune(that)) return;", "+    for (int i = 0; i < that.getWords().length; i++) that.getWords()[i].visit(this);", "+    forCompoundWordOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aeb1bcfcc12cb3c9807492885444ef3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 365, "methodNumberAfterChange": 365, "signatureBeforeChange": "\r \r   public void forModifiersAndVisibility(ModifiersAndVisibility that)", "signatureAfterChange": "    public void forModifiersAndVisibility(ModifiersAndVisibility that)", "diff": ["-\r", "-  public void forModifiersAndVisibility(ModifiersAndVisibility that) {\r", "-    forModifiersAndVisibilityDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forModifiersAndVisibilityOnly(that);\r", "-  }\r", "+", "+  public void forModifiersAndVisibility(ModifiersAndVisibility that) {", "+    forModifiersAndVisibilityDoFirst(that);", "+    if (prune(that)) return;", "+    forModifiersAndVisibilityOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab9514fed4c5c2b63099b50d3b0dc880", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void complexAnonymousClassInstantiationHelper(ComplexAnonymousClassInstantiation that, Data data)", "signatureAfterChange": "   public void complexAnonymousClassInstantiationHelper(ComplexAnonymousClassInstantiation that, Data data)", "diff": ["-   */", "+    */", "-    if (prune(that)) {return;}", "+    if (prune(that)) return;", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edc588e7e9410ff601ab7a827bc03d37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 364, "methodNumberAfterChange": 364, "signatureBeforeChange": "\r   public void forSourceFile(SourceFile that)", "signatureAfterChange": "   public void forSourceFile(SourceFile that)", "diff": ["-  /* Implementation of JExpressionIFVisitor_void methods to implement depth-first traversal. */\r", "-  public void forSourceFile(SourceFile that) {\r", "-    forSourceFileDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    for (int i = 0; i < that.getPackageStatements().length; i++) that.getPackageStatements()[i].visit(this);\r", "-    for (int i = 0; i < that.getImportStatements().length; i++) that.getImportStatements()[i].visit(this);\r", "-    for (int i = 0; i < that.getTypes().length; i++) that.getTypes()[i].visit(this);\r", "-    forSourceFileOnly(that);\r", "-  }\r", "+  /* Implementation of JExpressionIFVisitor_void methods to implement depth-first traversal. */", "+  public void forSourceFile(SourceFile that) {", "+    forSourceFileDoFirst(that);", "+    if (prune(that)) return;", "+    for (int i = 0; i < that.getPackageStatements().length; i++) that.getPackageStatements()[i].visit(this);", "+    for (int i = 0; i < that.getImportStatements().length; i++) that.getImportStatements()[i].visit(this);", "+    for (int i = 0; i < that.getTypes().length; i++) that.getTypes()[i].visit(this);", "+    forSourceFileOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f0f2f6693126ab84457f33c6a8b5ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void simpleAnonymousClassInstantiationHelper(SimpleAnonymousClassInstantiation that, Data data)", "signatureAfterChange": "   public void simpleAnonymousClassInstantiationHelper(SimpleAnonymousClassInstantiation that, Data data)", "diff": ["-   */", "+    */", "-    if (prune(that)) { return; }", "+    if (prune(that)) return;"]}], "num": 11655}