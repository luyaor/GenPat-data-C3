{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8cea6fd3222ab9a90dee2b3b7393ee5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3922948bd07153505c5f41345af52b27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public static File getCanonicalFile(File f)", "signatureAfterChange": "   public static File getCanonicalFile(File f)", "diff": ["-   *  exception when the file path syntax is incorrect. */", "+   *  exception when the file path syntax is incorrect.  It returns the absolute File intead. */", "-    try { ", "-      if (f.exists()) return f.getCanonicalFile();", "-      else return f.getAbsoluteFile();", "-    }", "-    catch(IOException e) { return f.getAbsoluteFile(); }", "+    if (f == null) return f;", "+    try { if (f.exists()) return f.getCanonicalFile(); }", "+    catch(IOException e) { /* fall through */ }", "+    return f.getAbsoluteFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5413b91ff636e4d824ae7a908382006", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected void _close()", "signatureAfterChange": "   protected void _close()", "diff": ["-    _model.getActiveDocument().setJUnitErrorModel(new JUnitErrorModel());", "+    if (_docBeingTested != null) {", "+      _docBeingTested.setJUnitErrorModel(new JUnitErrorModel());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8ef7cd9331300c0820a0ebcccd55af5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "8871133812a093ff5b818f6e8694af02431a4702", "commitAfterChange": "970aff2c65ce8acdc73c3d665aaa7b267b4d2747", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void setOuterData(Data outerData)", "signatureAfterChange": "   public void setOuterData(Data outerData)", "diff": ["+    if (outerData == null) return;  // Throwing an exception is another option but why abort this translation?", "-      throw new RuntimeException(\"Internal Program Error: Trying to reset an outer data to \" + outerData.getName() +  \" for \" + this.getName() + \" that has already been set.  Please report this bug.\");", "+      throw new RuntimeException(\"Internal Program Error: Trying to reset an outer data to \" + outerData.getName() +  ", "+                                 \" for \" + getName() + \" that has already been set.  Please report this bug.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e13ff9ab581d3b44856699be76ccad6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void reset()", "signatureAfterChange": "   public void reset()", "diff": ["-    JUnitErrorModel juem = _model.getActiveDocument().getJUnitErrorModel();", "-    boolean testsHaveRun = false;", "-    if (juem != null) {", "-      _numErrors = juem.getErrorsWithoutPositions().length + juem.getErrorsWithPositions().length;", "-      testsHaveRun = juem.haveTestsRun();", "-    } else {", "-      _numErrors = 0;", "+    if (_docBeingTested != null) {", "+      JUnitErrorModel juem = _docBeingTested.getJUnitErrorModel();", "+      boolean testsHaveRun = false;", "+      if (juem != null) {", "+        _numErrors = juem.getErrorsWithoutPositions().length + juem.getErrorsWithPositions().length;", "+        testsHaveRun = juem.haveTestsRun();", "+      } else {", "+        _numErrors = 0;", "+      }", "+      _errorListPane.updateListPane(testsHaveRun);", "-    _errorListPane.updateListPane(testsHaveRun);"]}], "num": 12014}