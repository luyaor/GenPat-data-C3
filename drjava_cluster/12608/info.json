{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95218430d18b0b861c21805f776bde9d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4b0293a955e24e168b76c35f45069cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public synchronized void testMultiThreadedBreakpointsAndStep()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testMultiThreadedBreakpointsAndStep()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-      _debugger.resume();", "+      _asynchResume();", "+    if( printMessages ) System.out.println(\"Testing stepping...\");", "-      _debugger.step(Debugger.STEP_INTO);", "+     _asynchStep(Debugger.STEP_INTO);", "-       _debugger.resume();", "-       _waitForNotifies(2);  // interactionEnded, currThreadDied", "+       _asynchResume();", "+       _waitForNotifies(3);  // interactionEnded, currThreadDied, interpreterChanged"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf83b4b2de6907c82a9c062802b55bca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ProcessSequence.java", "commitBeforeChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "commitAfterChange": "fdb0eba529d65804f971cdb52c673713ef0d4616", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ProcessSequence(ProcessCreator[] pcs)", "signatureAfterChange": "   public ProcessSequence(ProcessCreator[] pcs)", "diff": ["-              DrJavaErrorHandler.record(e);", "+              // TODO: find a way to record the error in the ExternalProcessPanel", "+//              DrJavaErrorHandler.record(e);", "+              _processes[_index] = DUMMY_PROCESS;", "+            GeneralProcessCreator.LOG.log(\"Closing StdOut and StdErr streams.\");", "+              stopAllRedirectors();", "-      // could not start the process, abort", "-      _aborted = true;", "-      destroy();", "-      return;", "+      // could not start the process, record error but continue", "+      // TODO: find a way to record the error in the ExternalProcessPanel", "+      _processes[_index] = DUMMY_PROCESS;", "+//      DrJavaErrorHandler.record(e);"]}], "num": 12608}