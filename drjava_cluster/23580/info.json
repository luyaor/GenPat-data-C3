{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68c82a03656bf74c4af5a2975b9f6145", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "912ef97f7eaa85d386cc6eebadd6f212", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "de413eda4232899a577fad80816630301e25a4de", "commitAfterChange": "1510cae783655f3e20fbad13671dbf97008c3ec2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void removeRegion(final R region)", "signatureAfterChange": "   public void removeRegion(final R region)", "diff": ["-    // if we're removing the current region, select a more recent region, if available", "-    // if a more recent region is not available, select a less recent region, if available", "-    // if a less recent region is not available either, set to null", "-    final R current = _current; // so we can verify if _current got changed", "+//    System.err.println(\"ODD for region \" + region + \" = \" + doc);", "+    System.err.println(\"doc regions for \" + doc + \" = \" + docRegions);", "-    ", "-    // only notify if the region was actually added", "+", "+    // only notify if the region was actually removed"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97129b52451bf0b2a6c6c5d8911746e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void junitClasses(List<String> qualifiedClassnames, List<File> files)", "signatureAfterChange": "   public void junitClasses(List<String> qualifiedClassnames, List<File> files)", "diff": ["-//    Utilities.showDebug(\"junitClasses(\" + qualifiedClassnames + \", \" + files);", "-    synchronized(_compilerModel.getSlaveJVMLock()) {", "- ", "-       // test and set _testInProgress ", "-      synchronized(_testLock) {", "-        if (_testInProgress) return;", "-        _testInProgress = true;", "-      }", "+    Utilities.showDebug(\"junitClasses(\" + qualifiedClassnames + \", \" + files);", "+    synchronized(_compilerModel.getCompilerLock()) {", "+      ", "+      // Check _testInProgress ", "+      if (_testInProgress) return;", "+      "]}], "num": 23580}