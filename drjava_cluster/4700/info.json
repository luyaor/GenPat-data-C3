{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a4f15d30cd8e99ae34f9388fc10f4af", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8e61e36fc7abcf87e61152c78b56ee7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void _doCompile(List<OpenDefinitionsDocument> docs) throws IOException", "signatureAfterChange": "   private void _doCompile(List<OpenDefinitionsDocument> docs) throws IOException", "diff": ["-        if (f != null) { filesToCompile.add(f); }", "-        doc.setCachedClassFile(null); // clear cached class file", "+        if (f != null && f != FileOps.NULL_FILE) { filesToCompile.add(f); }", "+        doc.setCachedClassFile(FileOps.NULL_FILE); // clear cached class file", "-          if ((buildDir != null) && !buildDir.exists() && !buildDir.mkdirs()) {", "+          if (buildDir != null && buildDir != FileOps.NULL_FILE && ! buildDir.exists() && ! buildDir.mkdirs()) {", "-          File workDir = _model.getWorkingDirectory(); ", "-          if ((workDir != null) && ! workDir.exists() && ! workDir.mkdirs()) {", "-            throw new IOException(\"Could not create working directory: \"+workDir);", "-          }", "+//          File workDir = _model.getWorkingDirectory();", "+//          if (workDir == FileOps.NULL_FILE) workDir = null;", "+//          if (workDir != null && ! workDir.exists() && ! workDir.mkdirs()) {", "+//            throw new IOException(\"Could not create working directory: \"+workDir);", "+//          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5c99a58deb84c2e46447d7850d36102", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "signatureAfterChange": "   public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "diff": ["-    int i = _docs.indexOf(doc);", "-    if( i == -1 ) {", "-      throw new IllegalArgumentException(\"Document \" + doc + \" not found in Document Navigator\");", "-    }", "-    else {", "-      INavigatorItem tbr = _docs.remove(i);", "-      _docs.add(doc);", "-      this.setListData(_docs);", "+    synchronized (_model) {", "+      removeDocument(doc);", "+      addDocument(doc);"]}], "num": 4700}