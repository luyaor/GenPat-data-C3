{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "894d2659ff8af0a45fe474ae08d32fb6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cfdb2a3aac55a79246b6493767fa444", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryVisitor.java", "commitBeforeChange": "4cc63aff8a22c85ad1d78de9f4e0b9395e7d4e72", "commitAfterChange": "e330f3abbead97d3e3ac8751976bab81936096c2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r   public ElementaryVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors, Symboltable symbolTable, \r                            Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>> continuations, \r                            LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles, \r                            Hashtable<SymbolData, LanguageLevelVisitor> newSDs, JavaVersion targetVersion)", "signatureAfterChange": "   public ElementaryVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors, Symboltable symbolTable,                             Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>> continuations,                             LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles,                             Hashtable<SymbolData, LanguageLevelVisitor> newSDs)", "diff": ["-   */\r", "-  public ElementaryVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors, Symboltable symbolTable, \r", "-                           Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>> continuations, \r", "-                           LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles, \r", "-                           Hashtable<SymbolData, LanguageLevelVisitor> newSDs, JavaVersion targetVersion) {\r", "-    super(file, \"\", new LinkedList<String>(), new LinkedList<String>(), new LinkedList<String>(), continuations);\r", "-    this.targetVersion = targetVersion;\r", "-    this.errors = errors;\r", "-    this.symbolTable = symbolTable;\r", "-    this.visitedFiles= visitedFiles;//new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>();\r", "-    this._newSDs = newSDs;\r", "-    _hierarchy = new Hashtable<String, TypeDefBase>();//hierarchy;\r", "-    _classesToBeParsed = new Hashtable<String, Pair<TypeDefBase, LanguageLevelVisitor>>();    \r", "-  }\r", "+   */", "+  public ElementaryVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors, Symboltable symbolTable, ", "+                           Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>> continuations, ", "+                           LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles, ", "+                           Hashtable<SymbolData, LanguageLevelVisitor> newSDs) {", "+    super(file, \"\", new LinkedList<String>(), new LinkedList<String>(), new LinkedList<String>(), continuations);", "+    this.errors = errors;", "+    this.symbolTable = symbolTable;", "+    this.visitedFiles= visitedFiles;//new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>();", "+    this._newSDs = newSDs;", "+    _hierarchy = new Hashtable<String, TypeDefBase>();//hierarchy;", "+    _classesToBeParsed = new Hashtable<String, Pair<TypeDefBase, LanguageLevelVisitor>>();    ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d038be8e645d406f2ccf7d2e545e47e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedVisitor.java", "commitBeforeChange": "4cc63aff8a22c85ad1d78de9f4e0b9395e7d4e72", "commitAfterChange": "e330f3abbead97d3e3ac8751976bab81936096c2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r   public AdvancedVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors, Symboltable symbolTable, Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>> continuations, LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles, Hashtable<SymbolData, LanguageLevelVisitor> newSDs, JavaVersion targetVersion)", "signatureAfterChange": "   public AdvancedVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors, Symboltable symbolTable,                          Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>> continuations,                          LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles,                          Hashtable<SymbolData, LanguageLevelVisitor> newSDs)", "diff": ["-   */\r", "-  public AdvancedVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors, Symboltable symbolTable, Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>> continuations, LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles, Hashtable<SymbolData, LanguageLevelVisitor> newSDs, JavaVersion targetVersion) {\r", "-    super(file, \"\", new LinkedList<String>(), new LinkedList<String>(), new LinkedList<String>(), continuations);\r", "-    this.targetVersion = targetVersion;\r", "-    this.errors = errors;\r", "-    this.symbolTable = symbolTable;\r", "-    this.visitedFiles= visitedFiles;//new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>();\r", "-    this._newSDs = newSDs;\r", "-    _hierarchy = new Hashtable<String, TypeDefBase>();//hierarchy;\r", "-    _classesToBeParsed = new Hashtable<String, Pair<TypeDefBase, LanguageLevelVisitor>>();\r", "-  }\r", "+   */", "+  public AdvancedVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors, Symboltable symbolTable,", "+                         Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>> continuations,", "+                         LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles,", "+                         Hashtable<SymbolData, LanguageLevelVisitor> newSDs) {", "+    super(file, \"\", new LinkedList<String>(), new LinkedList<String>(), new LinkedList<String>(), continuations);", "+    this.errors = errors;", "+    this.symbolTable = symbolTable;", "+    this.visitedFiles= visitedFiles;//new LinkedList<Pair<LanguageLevelVisitor, SourceFile>>();", "+    this._newSDs = newSDs;", "+    _hierarchy = new Hashtable<String, TypeDefBase>();//hierarchy;", "+    _classesToBeParsed = new Hashtable<String, Pair<TypeDefBase, LanguageLevelVisitor>>();", "+  }"]}], "num": 20114}