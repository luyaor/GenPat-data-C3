{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "985106ba65a4f5979c24652dfdfb848e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "095bb6d6897caa17a3e33809e41cdcc7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public synchronized void startup() throws DebugException", "signatureAfterChange": "   public synchronized void startup() throws DebugException", "diff": ["+   */", "+  public synchronized void startup() throws DebugException {", "+    if (!isReady()) {", "+      //DrJava.consoleOut().println(\"Starting up...\");", "+      _attachToVM();", "+      //DrJava.consoleOut().println(\"Attached. VM = \" +_vm);", "+      EventHandler eventHandler = new EventHandler(this, _vm);", "+      eventHandler.start();", "+      //DrJava.consoleOut().println(\"EventHandler started...\");", "+      ThreadDeathRequest tdr = _eventManager.createThreadDeathRequest();", "+      tdr.setSuspendPolicy(EventRequest.SUSPEND_EVENT_THREAD);", "+      tdr.enable();", "+    }", "-  public synchronized void startup() throws DebugException {", "-    if (!isReady()) {", "-      DrJava.consoleOut().println(\"Starting up...\");", "-      _attachToVM();", "-      DrJava.consoleOut().println(\"Attached. VM = \" +_vm);", "-      EventHandler eventHandler = new EventHandler(this, _vm);", "-      eventHandler.start();", "-      DrJava.consoleOut().println(\"EventHandler started...\");", "-      ThreadDeathRequest tdr = _eventManager.createThreadDeathRequest();", "-      tdr.setSuspendPolicy(EventRequest.SUSPEND_EVENT_THREAD);", "-      tdr.enable();", "-      ", "-      //_vm.setDebugTraceMode(0);", "-      //String[] excludes = {\"java.*\", \"javax.*\", \"sun.*\", \"com.sun.*\", \"koala.*\"};", "-      //EventThread eventThread = new EventThread(_vm, excludes, ", "-      //                                          new PrintWriter(DrJava.consoleOut())); ", "-      //eventThread.setEventRequests(false);", "-      //eventThread.start();", "-    }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db16a3f27ae48bee6a817a1860c5f57a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "commitAfterChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public synchronized void step(int flag) throws DebugException", "signatureAfterChange": "   public synchronized void step(int flag) throws DebugException", "diff": ["-      System.out.println(\"Current thread is null\");", "+      //System.out.println(\"Current thread is null\");", "+    //if (!_thread.isSuspended()) ", "+      //DrJava.consoleOut().println(\"Current thread is not suspended while trying to create a step request!\");    ", "+    // don't allow the creation of a new StepRequest if there's already one on", "+    // the current thread", "+    List steps = _eventManager.stepRequests();", "+    for (int i = 0; i < steps.size(); i++) {", "+      //DrJava.consoleOut().println(\"creating a new step: event thread: \" + ", "+      //                            ((StepRequest)steps.get(i)).thread() + ", "+      //                            \" current thread: \" +", "+      //                            _thread);", "+      if (((StepRequest)steps.get(i)).thread().equals(_thread)) {", "+        //DrJava.consoleOut().println(\"There's already a StepRequest on the current thread\");", "+        //DrJava.consoleOut().println(\"suspendCount: \" + _thread.suspendCount());", "+        /*try {", "+          DrJava.consoleOut().println(\"frames: \" + _thread.frames());", "+        }", "+        catch(IncompatibleThreadStateException itse) {", "+          DrJava.consoleOut().println(\"Can't print frames, thread is not suspended!\");", "+        }*/", "+        _thread.resume();", "+        return;", "+      }", "+    }", "+        ", "-    System.out.println(\"_thread resumed\");", "+    //System.out.println(\"_thread resumed\");"]}], "num": 5296}