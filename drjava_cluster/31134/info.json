{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "990b2a670ad32cd90a76f65c8206992d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48691d2696f15a9b522dc5075b3295e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void setCacheSize(int size)", "signatureAfterChange": "   public synchronized void setCacheSize(int size)", "diff": ["-  ", "-  public void setCacheSize(int size) {", "-    if (size < 0) {", "-      throw new IllegalArgumentException(\"Cannot set the cache size less than 0\");", "-    }", "+  public synchronized void setCacheSize(int size) {", "+    if (_lru.size() >= CACHE_SIZE) {", "+      ListIterator<DocManager> it = _lru.listIterator();", "+      int i = 0;", "+      while (it.hasNext()) {", "+        it.next();", "+        if (i >= CACHE_SIZE) {", "+          it.remove();", "+        }", "+        i++;", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87c1a30396d4febbb6a1fc9fe277a793", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "fbaecba32a4936f7aab208313b312f73181698a7", "commitAfterChange": "6bd1f449c6b6476464bf38d05b5455668d0d2ac5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public synchronized void setCacheSize(int size)", "signatureAfterChange": "   public synchronized void setCacheSize(int size)", "diff": ["+    if(size <= 0)", "+    {", "+      throw new IllegalArgumentException(\"Cannot set the cache size to zero or less.\");", "+    }", "-    if (_lru.size() >= CACHE_SIZE) {", "+    DocManager current;", "+    if (_lru.size() > CACHE_SIZE) {", "-      int i = 0;", "+      int i = 1;", "-        it.next();", "-        if (i >= CACHE_SIZE) {", "+        current = it.next();", "+        if (i > CACHE_SIZE) {", "+          current.kickOut();"]}], "num": 31134}