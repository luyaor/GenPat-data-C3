{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c18b70da0543ef53c917fef885f8db12", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ac453bae8ed3d15a83f0f92a3a8da07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CompilerErrorPanel.java", "commitBeforeChange": "42453ef03053968f9ca85cc1f502a43bd9378c76", "commitAfterChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private void _updateWithErrors() throws BadLocationException", "signatureAfterChange": "      private void _updateWithErrors() throws BadLocationException", "diff": ["-      /*", "-      doc.insertString(0,", "-                       \"Last compilation returned the following errors:\\n\",", "-                       null);", "-      */", "-      for (int i = 0; i < _errors.length; i++) {", "+      // Show errors without source locations", "+      int errorNum = 0;", "+      for (int i = 0; i < _errorsWithoutPositions.length; i++, errorNum++) {", "-        _insertErrorText(i, doc);", "-        _errorListPositions[i] = doc.createPosition(startPos);", "+        _insertErrorText(_errorsWithoutPositions, i, doc);", "+", "+        // Note to user that there is no source info for this error", "+        doc.insertString(doc.getLength(),", "+                         \" (no source location)\",", "+                         NORMAL_ATTRIBUTES);", "+        doc.insertString(doc.getLength(), \"\\n\", NORMAL_ATTRIBUTES);", "+", "+        _errorListPositions[errorNum] = doc.createPosition(startPos);", "+      }", "+", "+      // Show errors with source locations", "+      for (int i = 0; i < _errors.length; i++, errorNum++) {", "+        int startPos = doc.getLength();", "+        _insertErrorText(_errors, i, doc);", "+        doc.insertString(doc.getLength(), \"\\n\", NORMAL_ATTRIBUTES);", "+        _errorListPositions[errorNum] = doc.createPosition(startPos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0cff67091a8027804715ea45895f0b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "42453ef03053968f9ca85cc1f502a43bd9378c76", "commitAfterChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private void _updateWithErrors() throws BadLocationException", "signatureAfterChange": "      private void _updateWithErrors() throws BadLocationException", "diff": ["-      /*", "-      doc.insertString(0,", "-                       \"Last compilation returned the following errors:\\n\",", "-                       null);", "-      */", "-      for (int i = 0; i < _errors.length; i++) {", "+      // Show errors without source locations", "+      int errorNum = 0;", "+      for (int i = 0; i < _errorsWithoutPositions.length; i++, errorNum++) {", "-        _insertErrorText(i, doc);", "-        _errorListPositions[i] = doc.createPosition(startPos);", "+        _insertErrorText(_errorsWithoutPositions, i, doc);", "+", "+        // Note to user that there is no source info for this error", "+        doc.insertString(doc.getLength(),", "+                         \" (no source location)\",", "+                         NORMAL_ATTRIBUTES);", "+        doc.insertString(doc.getLength(), \"\\n\", NORMAL_ATTRIBUTES);", "+", "+        _errorListPositions[errorNum] = doc.createPosition(startPos);", "+      }", "+", "+      // Show errors with source locations", "+      for (int i = 0; i < _errors.length; i++, errorNum++) {", "+        int startPos = doc.getLength();", "+        _insertErrorText(_errors, i, doc);", "+        doc.insertString(doc.getLength(), \"\\n\", NORMAL_ATTRIBUTES);", "+        _errorListPositions[errorNum] = doc.createPosition(startPos);"]}], "num": 26959}