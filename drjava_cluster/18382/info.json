{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ff94b7d2d694c911e1b5aaa2e3e79db", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7512bec349680f82ffdf4c910b1bcad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TypeNameChecker.java", "commitBeforeChange": "a24082414064ecb42431a2e612770e1ab3e9fefa", "commitAfterChange": "b2a145d8d3ea1ad947e0937f542b0780baf31d45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Type check(TypeName t)", "signatureAfterChange": "   public Type check(TypeName t)", "diff": ["+  /** Get the type corresponding to {@code t}; verify that it is well-formed. */", "+    Type result = t.acceptVisitor(visitor);", "+    ensureWellFormed(t);", "+    return result;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb35d0b96cfc1a79bf1fe9e27de8f2a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TypeNameChecker.java", "commitBeforeChange": "a24082414064ecb42431a2e612770e1ab3e9fefa", "commitAfterChange": "b2a145d8d3ea1ad947e0937f542b0780baf31d45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Iterable<Type> checkList(Iterable<? extends TypeName> l)", "signatureAfterChange": "   public Iterable<Type> checkList(Iterable<? extends TypeName> l)", "diff": ["+  /** Invoke {@link #check} on each element of a list. */", "-    return IterUtil.mapSnapshot(l, visitor);", "+    Iterable<Type> result = IterUtil.mapSnapshot(l, visitor);", "+    ensureWellFormedList(l);", "+    return result;"]}], "num": 18382}