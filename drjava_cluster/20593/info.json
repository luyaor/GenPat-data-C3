{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6371d3d79d18cd2de78d12e18a45bb7e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bc0d330e552170041f7e708de34976a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/SplashScreen.java", "commitBeforeChange": "dd4842ca8ba89600798d5ff08666825edfadfb74", "commitAfterChange": "3e6dcdfe0dc2a3a2b00da441b478134258a2740f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public SplashScreen()", "signatureAfterChange": "   public SplashScreen()", "diff": ["-    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();", "+    //for multi-monitor support", "+    //Question: do we want it to popup on the first monitor always?", "+    GraphicsDevice[] dev = GraphicsEnvironment.getLocalGraphicsEnvironment().getScreenDevices();", "+    Rectangle rec = dev[0].getDefaultConfiguration().getBounds();", "+    Point ownerLoc = rec.getLocation();", "+    Dimension ownerSize = rec.getSize();", "-    setLocation((screenSize.width - frameSize.width) / 2,", "-                (screenSize.height - frameSize.height) / 2);", "+    setLocation(ownerLoc.x + (ownerSize.width - frameSize.width) / 2,", "+                ownerLoc.y + (ownerSize.height - frameSize.height) / 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "914e6472452339cf7dc1dc6f8cde1135", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/PreviewFrame.java", "commitBeforeChange": "5eee0c89bee0b23fafd1958419240f8dd5f380ee", "commitAfterChange": "0c95fc4366bd5654ddd2a4c942b1634c96be89c8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void refreshScreen()", "signatureAfterChange": "      public void refreshScreen()", "diff": ["-  }", "-    cycle = 1 - cycle;", "-    if(cycle == 0)", "-      setSize(screenSize.width + cycle, screenSize.height + cycle);", "-    else", "-      setSize(screenSize.width - cycle, screenSize.height - cycle);", "+    int previewWidth = _pagePreview.getPreferredSize().width + (2 * PAGE_BORDER);", "+    int previewHeight = _pagePreview.getPreferredSize().height + (2 * PAGE_BORDER) + TOOLBAR_HEIGHT;", "+    if (previewWidth > _screenSize.width - TOOLBAR_HEIGHT) previewWidth = _screenSize.width - TOOLBAR_HEIGHT; ", "+    if (previewHeight > _screenSize.height - TOOLBAR_HEIGHT) previewHeight = _screenSize.height - TOOLBAR_HEIGHT; ", "+    setSize(previewWidth, previewHeight);"]}], "num": 20593}