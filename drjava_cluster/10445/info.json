{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bcce64545155b56b870679d41b044802", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ba2d14829a65727499a7cbfd96df50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/BrowserHistoryManager.java", "commitBeforeChange": "7abad9d4d237e1759bd098868c3fc80eb6e4365f", "commitAfterChange": "dcd05db97717868f3a1bba07cb5b1b9106d93c65", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "   private BrowserDocumentRegion next(BrowserDocumentRegion r)", "signatureAfterChange": "        public void run()", "diff": ["+    Utilities.invokeLater(new Runnable() { ", "+      public void run() {", "+        _lock.startRead();", "+        try { for (RegionManagerListener<BrowserDocumentRegion> l: _listeners) { l.regionRemoved(r); } } ", "+        finally { _lock.endRead(); }", "+      } ", "-  /** @return the region immediately higher than r and last (highest) if no higher region exists). */", "-  private BrowserDocumentRegion next(BrowserDocumentRegion r) {", "-    BrowserDocumentRegion next = _higher(_regions, r);", "-    if (next == null && ! _regions.isEmpty()) next = _regions.last();", "-    return next;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f78e5988f48471260abe75b735c3dfc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void removeRegion(final R region)", "signatureAfterChange": "   public void removeRegion(final R region)", "diff": ["-    if (wasRemoved) {", "-      // notify", "-      Utilities.invokeLater(new Runnable() { public void run() {", "-        _lock.startRead();", "-        try { for (RegionManagerListener<R> l: _listeners) { l.regionRemoved(region); } } ", "-        finally { _lock.endRead(); }", "-      } });", "-    }", "+    if (wasRemoved) _notifyRegionRemoved(region);", "+//      // notify", "+//      Utilities.invokeLater(new Runnable() { public void run() {", "+//        _lock.startRead();", "+//        try { for (RegionManagerListener<R> l: _listeners) { l.regionRemoved(region); } } ", "+//        finally { _lock.endRead(); }", "+//      } });", "+//    }", "+  }"]}], "num": 10445}