{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78bbbf84632eeae9e5a7180041f91a2b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2faae6de1d3ab179b8cb538e6e9c10a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 65, "signatureBeforeChange": "   public int getWhiteSpace()", "signatureAfterChange": "   private int getWhiteSpace()", "diff": ["+    */", "+  private int getWhiteSpace() {", "+    acquireReadLock();", "+    String text = \"\";", "+    try {", "+      synchronized (_reduced) {", "+        text = getText(_currentLocation, getLength() - _currentLocation); ", "+      }", "-    */", "-  public int getWhiteSpace() {", "-    try { return  getWhiteSpaceBetween(0, getLength() - _currentLocation); } ", "-    catch (BadLocationException e) { e.printStackTrace(); }", "-    return  -1;", "-  }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "+    finally { releaseReadLock(); }", "+    ", "+    while (i < text.length() && text.charAt(i) == ' ' ) i++;", "+    return i;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ea83074dff6be6880305e1dfaa567ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 76, "signatureBeforeChange": "   private int getWhiteSpace()", "signatureAfterChange": "   private int _getWhiteSpace() throws BadLocationException", "diff": ["-    */", "-  private int getWhiteSpace() {", "-    acquireReadLock();", "-    String text = \"\";", "-    try {", "-      synchronized (_reduced) {", "-        text = getText(_currentLocation, getLength() - _currentLocation); ", "-      }", "-    }", "-    catch (BadLocationException e) { throw new UnexpectedException(e); }", "-    finally { releaseReadLock(); }", "-    ", "-    int i = 0;", "-    while (i < text.length() && text.charAt(i) == ' ' ) i++;", "-    return i;", "+    */", "+  private int _getWhiteSpace() throws BadLocationException {", "+        ", "+    assert isReadLocked();", "+    ", "+    String text = \"\";", "+    int lineEnd = _getLineEndPos(_currentLocation);  // index of next '\\n' char or end of document", "+    int lineLen = lineEnd - _currentLocation;", "+    String line = getText(_currentLocation, lineLen);", "+    int i;", "+    for (i = 0; i < lineLen && line.charAt(i) == ' '; i++) ;", "+    return i;"]}], "num": 7110}