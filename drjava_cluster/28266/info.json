{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "067b23a9966b381152d33c6b4c9ad392", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d2af934609c82f2afa2c7c0d355ffb3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeInterpreter.java", "commitBeforeChange": "43bd3e08ba052e97e1d0271e7f1e324beac2ba86", "commitAfterChange": "c1d8815fb3e924ec7fa72ebc3952fb83e44bb272", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   protected Object[] interpretArguments(Class c,                                         ConstructorParametersDescriptor cpd,                                         Object[] args)", "signatureAfterChange": "   protected Object[] interpretArguments(Class c,                                         ConstructorParametersDescriptor cpd,                                         Object[] args)", "diff": ["-      TypeChecker tc = new TypeChecker(ctx);", "+      AbstractTypeChecker tc = AbstractTypeChecker.makeTypeChecker(ctx);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3606f19313764cf423cff2f613fdc217", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "43bd3e08ba052e97e1d0271e7f1e324beac2ba86", "commitAfterChange": "c1d8815fb3e924ec7fa72ebc3952fb83e44bb272", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "   public Object visit(FunctionCall node)", "signatureAfterChange": "   public Object visit(FunctionCall node)", "diff": ["-      TypeChecker tc = new TypeChecker(ctx);", "+      AbstractTypeChecker tc = AbstractTypeChecker.makeTypeChecker(ctx);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44542959de77874abccc4475279adc61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeInterpreter.java", "commitBeforeChange": "43bd3e08ba052e97e1d0271e7f1e324beac2ba86", "commitAfterChange": "c1d8815fb3e924ec7fa72ebc3952fb83e44bb272", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public Object interpret(Node AST) throws InterpreterException", "signatureAfterChange": "   public Object interpret(Node AST) throws InterpreterException", "diff": ["-    TypeChecker tc = new TypeChecker(checkVisitorContext);", "+    AbstractTypeChecker tc = AbstractTypeChecker.makeTypeChecker(checkVisitorContext);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f9e03e2de37af87c6cc906c23e5887", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeInterpreter.java", "commitBeforeChange": "43bd3e08ba052e97e1d0271e7f1e324beac2ba86", "commitAfterChange": "c1d8815fb3e924ec7fa72ebc3952fb83e44bb272", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public List<Node> buildStatementList (Reader r, String fname) throws InterpreterException", "signatureAfterChange": "   public List<Node> buildStatementList (Reader r, String fname) throws InterpreterException", "diff": ["-        TypeChecker tc = new TypeChecker(checkVisitorContext);", "+        AbstractTypeChecker tc = AbstractTypeChecker.makeTypeChecker(checkVisitorContext);"]}], "num": 28266}