{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2978f1d6d1c88fe420d352e7e8e494f3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfe15cd3d91c745747f9de532cb8faaa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 26, "signatureBeforeChange": "   protected void quitFailed(Throwable th)", "signatureAfterChange": "   protected void quitFailed(Throwable th)", "diff": ["-  /** This method is called if the interpreterJVM cannot be exited (likely because of a modified security manager*/", "-  protected void quitFailed(Throwable th) {", "+  /** This method is called if the interpreterJVM cannot be exited (likely because of a modified security manager. */", "+  protected void quitFailed(Throwable th) {  // NOT synchronized", "-      _log.logTime(\"quitFailed: \" + re.toString());", "+      _log.log(\"quitFailed: \" + re.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2257fb38f5e107283f54cff887d3f4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "11468bc4ad25791b96b22dc517ca86e31b87894e", "commitAfterChange": "53d061333fe3393f6569c1f553912f1a449482ad", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 176, "signatureBeforeChange": "   public void quit(boolean force)", "signatureAfterChange": "   private void quit(boolean force)", "diff": ["-   *  This functionality is not available via the user interface, but it should be. */", "-  public void quit(boolean force) {", "+  /** Exits the program.  If force is true, quits regardless of whether all documents are successfully closed. */", "+  private void quit(boolean force) {", "-      shutdown();", "+      shutdown(force);", "-    catch(Throwable t) { shutdown(); /* force exit anyway */ }", "+    catch(Throwable t) { shutdown(true); /* force exit anyway */ }"]}], "num": 7116}