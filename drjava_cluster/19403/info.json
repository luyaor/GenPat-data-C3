{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44bba6a9ca31b7ced753d8fc28173dfe", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "942059ba7aa73e98903f0d6517d2fe40", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void clearRegions()", "signatureAfterChange": "   public void clearRegions()", "diff": ["-    final ArrayList<R> regions = getRegions();", "-//    System.err.println(\"ConcreteRegionManager.clearRegions() called with regions = \" + regions);", "-    // Notify all listeners for this manager that all regions are being removed; listener access _regions and _documents", "-    _notifyRegionsRemoved(regions);  // fails to close the associated panel because _documents not yet cleared.", "-    // Remove all regions in this manager", "-    _regions.clear();", "-    _documents.clear();", "+    for (R r: getRegions()) removeRegion(r);", "+//    final ArrayList<R> regions = getRegions();", "+////    System.err.println(\"ConcreteRegionManager.clearRegions() called with regions = \" + regions);", "+//    // Notify all listeners for this manager that all regions are being removed; listener access _regions and _documents", "+//    _notifyRegionsRemoved(regions);  // fails to close the associated panel because _documents not yet cleared.", "+//    // Remove all regions in this manager", "+//    _regions.clear();", "+//    _documents.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcbd1f27c9cdaeeaacda2cdfda5fa1a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/Step.java", "commitBeforeChange": "bfbbbb34f309b13ef404f393392d7ea8745940cd", "commitAfterChange": "9d671cad5f849049059b2e199aea7279dd398525", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void _createRequests() throws DebugException", "signatureAfterChange": "   protected void _createRequests() throws DebugException", "diff": ["-    String exclude = DrJava.getConfig().getSetting(DEBUG_STEP_EXCLUDE);", "-    StringTokenizer st = new StringTokenizer(exclude, \",\");", "-    while (st.hasMoreTokens()) {", "-      request.addClassExclusionFilter(st.nextToken().trim());", "+    for(String s: DrJava.getConfig().getSetting(DEBUG_STEP_EXCLUDE)) {", "+      request.addClassExclusionFilter(s.trim());", "-"]}], "num": 19403}