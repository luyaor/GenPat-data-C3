{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf300d4ddadb9365727961e87bb3ecd6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13c04eb01d17f9de0bdb3be405c47607", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "6bdcaa1031d63e5f58edf8d0e2313eac60ac2bdc", "commitAfterChange": "c6ab4cad3515b44035f93fe56438ef0ad4e6d24d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testDotPaths() throws IOException", "signatureAfterChange": "   public void testDotPaths()", "diff": ["-   */", "-  public void testDotPaths() throws IOException {", "-    String funnyName = \"DrJava_automatically_deletes_this_2\";", "-    final File newDirectory = mkTempDir(funnyName);", "-", "-    assertTrue(\"child directory created OK\", new File(newDirectory, \"childDir\").mkdir());", "-", "-    File relativeFile = new File(newDirectory, \"./X.java\");", "-    File relativeFile2 = new File(newDirectory, \".\\\\Y.java\");", "-    File relativeFile3 = new File(newDirectory, \"childDir/../Z.java\");", "-", "-    try {", "-      checkFile(relativeFile, funnyName);", "-      checkFile(relativeFile2, funnyName);", "-      checkFile(relativeFile3, funnyName);", "-    }", "-    catch (Exception e) { fail(\"Exception thrown: \" + StringOps.getStackTrace(e)); }", "-    finally { FileOps.deleteDirectoryOnExit(newDirectory);}", "-//    Logger.log(\"testDotPaths complete\");", "+   */", "+  public void testDotPaths() {", "+    String funnyName = \"DrJava_automatically_deletes_this\";", "+    File newDirectory = mkTempDir(funnyName);", "+", "+    assertTrue(\"child directory created OK\", new File(newDirectory, \"childDir\").mkdir());", "+", "+    File relativeFile = new File(newDirectory, \"./X.java\");", "+    File relativeFile2 = new File(newDirectory, \".\\\\Y.java\");", "+    File relativeFile3 = new File(newDirectory, \"childDir/../Z.java\");", "+", "+    try {", "+      checkFile(relativeFile, funnyName);", "+      checkFile(relativeFile2, funnyName);", "+      checkFile(relativeFile3, funnyName);", "+    }", "+    catch (Exception e) { fail(\"Exception thrown: \" + StringOps.getStackTrace(e)); }", "+    finally { FileOps.deleteDirectory(newDirectory); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5efb9150ca609645412f9165fe46c343", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "56a5d7ef4f332df9b45adf95f71d664c61575e1a", "commitAfterChange": "010ae297b5b09284b0dfa287aa524a83e41fa50d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testDotPaths()", "signatureAfterChange": "   public void testDotPaths() throws IOException", "diff": ["+   */", "+  public void testDotPaths() throws IOException {", "+    String funnyName = \"DrJava_automatically_deletes_this_2\";", "+    final File newDirectory = mkTempDir(funnyName);", "+", "+    assertTrue(\"child directory created OK\", new File(newDirectory, \"childDir\").mkdir());", "+", "+    File relativeFile = new File(newDirectory, \"./X.java\");", "+    File relativeFile2 = new File(newDirectory, \".\\\\Y.java\");", "+    File relativeFile3 = new File(newDirectory, \"childDir/../Z.java\");", "+", "+    try {", "+      checkFile(relativeFile, funnyName);", "+      checkFile(relativeFile2, funnyName);", "+      checkFile(relativeFile3, funnyName);", "+    }", "+    catch (Exception e) { fail(\"Exception thrown: \" + StringOps.getStackTrace(e)); }", "+    finally { FileOps.deleteDirectoryOnExit(newDirectory);}", "+//    Logger.log(\"testDotPaths complete\");", "-   */", "-  public void testDotPaths() {", "-    String funnyName = \"DrJava_automatically_deletes_this\";", "-    File newDirectory = mkTempDir(funnyName);", "-", "-    assertTrue(\"child directory created OK\", new File(newDirectory, \"childDir\").mkdir());", "-", "-    File relativeFile = new File(newDirectory, \"./X.java\");", "-    File relativeFile2 = new File(newDirectory, \".\\\\Y.java\");", "-    File relativeFile3 = new File(newDirectory, \"childDir/../Z.java\");", "-", "-    try {", "-      checkFile(relativeFile, funnyName);", "-      checkFile(relativeFile2, funnyName);", "-      checkFile(relativeFile3, funnyName);", "-    }", "-    catch (Exception e) { fail(\"Exception thrown: \" + StringOps.getStackTrace(e)); }", "-    finally { FileOps.deleteDirectory(newDirectory); }", "-  }"]}], "num": 14205}