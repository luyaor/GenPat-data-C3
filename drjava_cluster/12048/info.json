{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d041efd78a5f010ac83e236c56b41fef", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab87b2a4a38fd83a4228d14169f20c02", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "97a825e752ef3da28458a0080f0990b0f0659788", "commitAfterChange": "3f50a00dbfaba534529de5a114a9d7c30612e9a7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testTypeEnterNotInCode() throws BadLocationException, InterruptedException, InvocationTargetException", "signatureAfterChange": "   public void testTypeEnterNotInCode() throws BadLocationException, InterruptedException, InvocationTargetException", "diff": ["-    _frame.setVisible(true);", "-    OpenDefinitionsDocument doc = defPane.getOpenDefDocument();", "+//    _frame.setVisible(true);", "+    final OpenDefinitionsDocument doc = defPane.getOpenDefDocument();", "-    doc.insertString(0, \"/**\", null);", "-    ", "-    defPane.setCaretPosition(3);", "-    // The following is the sequence of key events for Enter", "-    SwingUtilities.invokeAndWait(new Runnable() {", "+    Utilities.invokeAndWait(new Runnable() {", "-        int enter = KeyEvent.VK_ENTER;", "-        defPane.dispatchEvent(new KeyEvent(defPane, KeyEvent.KEY_PRESSED, (new Date()).getTime(), 0, enter, KeyEvent.CHAR_UNDEFINED));", "-        defPane.dispatchEvent(new KeyEvent(defPane, KeyEvent.KEY_RELEASED, (new Date()).getTime(), 0, enter, KeyEvent.CHAR_UNDEFINED));", "+        try { ", "+          doc.insertString(0, \"/**\", null);", "+          defPane.setCaretPosition(3);", "+          // The following is the sequence of key events for Enter", "+          int enter = KeyEvent.VK_ENTER;", "+          defPane.processKeyEvent(new KeyEvent(defPane, PRESSED, (new Date()).getTime(), 0, enter, UNDEFINED));", "+          defPane.processKeyEvent(new KeyEvent(defPane, RELEASED, (new Date()).getTime(), 0, enter, UNDEFINED));", "+          _frame.validate();", "+        }", "+        catch(Throwable t) { listenerFail(t.getMessage()); }", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6d23fcdc0ff37012e266fa37e518f3b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "97a825e752ef3da28458a0080f0990b0f0659788", "commitAfterChange": "3f50a00dbfaba534529de5a114a9d7c30612e9a7", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void testBackspace()", "signatureAfterChange": "   public void testBackspace()", "diff": ["-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_PRESSED, (new Date()).getTime(), 0, ", "-                                                 backspaceCode, KeyEvent.CHAR_UNDEFINED));", "-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_RELEASED, (new Date()).getTime(), 0,", "-                                                 backspaceCode, KeyEvent.CHAR_UNDEFINED));", "-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_TYPED, (new Date()).getTime(), 0,", "-                                                 KeyEvent.VK_UNDEFINED, '\\b'));", "+        defPane.processKeyEvent(new KeyEvent(defPane, PRESSED, (new Date()).getTime(), 0, ", "+                                                 backspaceCode, UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, RELEASED, (new Date()).getTime(), 0,", "+                                                 backspaceCode, UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, TYPED, (new Date()).getTime(), 0,", "+                                                 VK_UNDEF, '\\b'));", "+        _frame.validate();", "+    Utilities.clearEventQueue();"]}], "num": 12048}