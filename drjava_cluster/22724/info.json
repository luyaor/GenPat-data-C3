{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb6f88236775504c4ff33dca0e6c33d0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bf3366c7862a246e1b24549b09a711c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecursionStack3.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public RecursionStack3()", "signatureAfterChange": "   public RecursionStack3(Lambda3<? super T1, ? super T2, ? super T3,                                   ? extends Triple<T1, T2, T3>> tripleFactory)", "diff": ["-  /** Create an empty recursion stack */", "-  public RecursionStack3() {", "-    _previous = new HashMultiset<IdentityTriple<T1, T2, T3>>();", "-    _stack = new LinkedList<IdentityTriple<T1, T2, T3>>();", "+   */", "+  public RecursionStack3(Lambda3<? super T1, ? super T2, ? super T3, ", "+                                 ? extends Triple<T1, T2, T3>> tripleFactory) {", "+    _tripleFactory = tripleFactory;", "+    _previous = new HashMultiset<Triple<T1, T2, T3>>();", "+    _stack = new LinkedList<Triple<T1, T2, T3>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbef285839de7525fd089a8d67605d24", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/PrecomputedRecursionStack3.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PrecomputedRecursionStack3()", "signatureAfterChange": "   public PrecomputedRecursionStack3(Lambda3<? super T1, ? super T2, ? super T3,                                              ? extends Triple<T1, T2, T3>> tripleFactory)", "diff": ["-  /** Create an empty recursion stack */", "-  public PrecomputedRecursionStack3() {", "-    _previous = new HashMap<IdentityTriple<T1, T2, T3>, ", "-                            Lambda3<? super T1, ? super T2, ? super T3, ? extends R>>();", "-    _stack = new LinkedList<IdentityTriple<T1, T2, T3>>();", "+   */", "+  public PrecomputedRecursionStack3(Lambda3<? super T1, ? super T2, ? super T3, ", "+                                            ? extends Triple<T1, T2, T3>> tripleFactory) {", "+    _tripleFactory = tripleFactory;", "+    _previous = new HashMap<Triple<T1, T2, T3>, Lambda3<? super T1, ? super T2, ? super T3, ? extends R>>();", "+    _stack = new LinkedList<Triple<T1, T2, T3>>();"]}], "num": 22724}