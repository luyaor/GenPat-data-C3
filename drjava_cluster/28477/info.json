{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec864a1115fd01f6f5612512d1641d75", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8937f116dbdf563689ef436ab36b96f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "065b1e3954d46e1086ba2f867744163daf14462d", "commitAfterChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 151, "signatureBeforeChange": "   public void closeAllFilesOnQuit()", "signatureAfterChange": "   public boolean closeAllFilesOnQuit()", "diff": ["-  public void closeAllFilesOnQuit() {", "+  public boolean closeAllFilesOnQuit() {", "-    OpenDefinitionsDocument[] docs;", "-    synchronized(_documentsRepos) { docs = _documentsRepos.toArray(new OpenDefinitionsDocument[0]); }", "+    List<OpenDefinitionsDocument> docList;", "+    synchronized(_documentsRepos) { docList = new ArrayList<OpenDefinitionsDocument> (_documentsRepos); }", "-    for (OpenDefinitionsDocument doc : docs) {", "-      closeFileOnQuitHelper(doc);  // modifies _documentsRepos", "+    // first see if the user wants to cancel on any of them", "+    boolean canClose = true;", "+    for (OpenDefinitionsDocument doc : docList) {", "+      if (!doc.canAbandonFile()) { canClose = false; break; }", "+    ", "+    if  (!canClose) { return false; } // the user did want to cancel", "+    ", "+    // user did not want to cancel, close all of them", "+    // All files are being closed, create a new file before starting in order to have ", "+    // a potentially active file that is not in the list of closing files.", "+    newFile();", "+    ", "+    // Set the active document to the document just after the last document or the document just before the ", "+    // first document in docList.  A new file does not appear in docList.", "+    _ensureNotActive(docList);", "+        ", "+    // Close the files in docList. ", "+    for (OpenDefinitionsDocument doc : docList) { closeFileWithoutPrompt(doc); }  ", "+    ", "+    return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c107499f52661994b5870e84cee2478b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "c0487ade35919fa6d08b7c39361898d3c5751c04", "commitAfterChange": "7b4296c095d59b57f25b910a8bdce57816e7621f", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 166, "signatureBeforeChange": "   public boolean closeFiles(List<OpenDefinitionsDocument> docList)", "signatureAfterChange": "   public boolean closeFiles(List<OpenDefinitionsDocument> docList)", "diff": ["-    for (OpenDefinitionsDocument doc : docList) { if (!(doc.getFileName().compareTo(\"(Untitled)\") == 0 && doc.getLength() == 0) && !doc.canAbandonFile()) return false; }", "+    for (OpenDefinitionsDocument doc : docList) { ", "+      if (! doc.canAbandonFile()) return false; }", "-    // If all files are being closed, create a new file before starTing in order to have", "-    // a potentially active file that is not in the list of closing files.", "+    /* If all files are being closed, create a new file before starting in order to have a potentially active file", "+     * that is not in the list of closing files. */", "-    // Set the active document to the document just after the last document or the document just before the", "-    // first document in docList.  A new file does not appear in docList.", "+    /* Set the active document to the document just after the last document or the document just before the first ", "+     * document in docList.  The new file created above (if necessary) does not appear in docList. */"]}], "num": 28477}