{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efdadf3b9ceb33ad148872fe7a70f85f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8adbd3469aac19297aca3591aeca326a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "7d708b4318d2a7ffa9f01174e54dfcf52e139a3d", "commitAfterChange": "31c24a84c42340de320b817c6a38b98e08dac42c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     @Override public Type visit(SimpleFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(SimpleFieldAccess node)", "diff": ["+        Option<Object> val = ref.field().constantValue();", "+        if (val.isSome()) { setValue(node, val.unwrap()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5fb423e031c0528b3d3a5ab20c2d6a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "7d708b4318d2a7ffa9f01174e54dfcf52e139a3d", "commitAfterChange": "31c24a84c42340de320b817c6a38b98e08dac42c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     @Override public Type visit(StaticFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(StaticFieldAccess node)", "diff": ["+        Option<Object> val = ref.field().constantValue();", "+        if (val.isSome()) { setValue(node, val.unwrap()); }"]}], "num": 12078}