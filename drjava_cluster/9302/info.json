{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d5683322e9092e541907b4be5bec17c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adaa67da1c9a77fb420f7fdb7fafe9ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MethodDeclaration.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public MethodDeclaration(int flags, Type type, String name,                            List<FormalParameter> params, List<List<IdentifierToken>> excepts, BlockStatement body,                            String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public MethodDeclaration(int flags, Type type, String name,                            List<FormalParameter> params, List<? extends ReferenceType> excepts, BlockStatement body,                            String fn, int bl, int bc, int el, int ec)", "diff": ["-                           List<FormalParameter> params, List<List<IdentifierToken>> excepts, BlockStatement body,", "+                           List<FormalParameter> params, List<? extends ReferenceType> excepts, BlockStatement body,", "-    ListIterator<List<IdentifierToken>> it = excepts.listIterator();", "+    ListIterator<? extends ReferenceType> it = excepts.listIterator();", "-      exceptions.add(TreeUtilities.listToName(it.next()));", "+      exceptions.add(it.next().getRepresentation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e68af97c7e067f0cc3b526fd829bdf43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ConstructorDeclaration.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ConstructorDeclaration(int flags, String name,                                 List<FormalParameter> params, List<List<IdentifierToken>> excepts,                                 ConstructorInvocation eci, List<Node> stmts,                                 String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ConstructorDeclaration(int flags, String name,                                 List<FormalParameter> params, List<? extends ReferenceType> excepts,                                 ConstructorInvocation eci, List<Node> stmts,                                 String fn, int bl, int bc, int el, int ec)", "diff": ["-                                List<FormalParameter> params, List<List<IdentifierToken>> excepts,", "+                                List<FormalParameter> params, List<? extends ReferenceType> excepts,", "-    ", "+", "-    ", "+", "-    ", "-    ListIterator<List<IdentifierToken>> it = excepts.listIterator();", "+", "+    ListIterator<? extends ReferenceType> it = excepts.listIterator();", "-      exceptions.add(TreeUtilities.listToName(it.next()));", "+      exceptions.add(it.next().getRepresentation());"]}], "num": 9302}