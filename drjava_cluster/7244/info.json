{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b78a63a4a01030aef37ecebe9dec0bc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "231ea26348139611b09109e4914db342", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhraseTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testParenDelimsNoText() throws BadLocationException", "signatureAfterChange": "   public void testParenDelimsNoText() throws BadLocationException", "diff": ["-    assertTrue(\"line after paren\", rule.applyRule(_doc, 2));", "-    assertTrue(\"line after comma\", rule.applyRule(_doc, 4));", "-    assertTrue(\"line after semicolon\", rule.applyRule(_doc, 6));", "-    assertTrue(\"line after bracket\", rule.applyRule(_doc, 8));", "-    assertTrue(\"line after text\", !rule.applyRule(_doc, 12));", "+    assertTrue(\"line after paren\", rule.applyRule(_doc, 2, Indenter.OTHER));", "+    assertTrue(\"line after comma\", rule.applyRule(_doc, 4, Indenter.OTHER));", "+    assertTrue(\"line after semicolon\", rule.applyRule(_doc, 6, Indenter.OTHER));", "+    assertTrue(\"line after bracket\", rule.applyRule(_doc, 8, Indenter.OTHER));", "+    assertTrue(\"line after text\", !rule.applyRule(_doc, 12, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e325ba2c92f30643d7295b642201df5d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhraseTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testParenDelimsWithText() throws BadLocationException", "signatureAfterChange": "   public void testParenDelimsWithText() throws BadLocationException", "diff": ["-    assertTrue(\"line after paren\", rule.applyRule(_doc, 9));", "-    assertTrue(\"line after comma\", rule.applyRule(_doc, 12));", "-    assertTrue(\"line after semicolon\", rule.applyRule(_doc, 15));", "-    assertTrue(\"line after bracket\", rule.applyRule(_doc, 18));", "-    assertTrue(\"line after close paren\", !rule.applyRule(_doc, 24));", "+    assertTrue(\"line after paren\", rule.applyRule(_doc, 9, Indenter.OTHER));", "+    assertTrue(\"line after comma\", rule.applyRule(_doc, 12, Indenter.OTHER));", "+    assertTrue(\"line after semicolon\", rule.applyRule(_doc, 15, Indenter.OTHER));", "+    assertTrue(\"line after bracket\", rule.applyRule(_doc, 18, Indenter.OTHER));", "+    assertTrue(\"line after close paren\", !rule.applyRule(_doc, 24, Indenter.OTHER));"]}], "num": 7244}