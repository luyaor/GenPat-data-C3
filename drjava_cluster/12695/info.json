{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c9c010d30588ea1fc9a372fcf2be58e", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "554f1cf4653f1770d283f006b202c882", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassChecker.java", "commitBeforeChange": "eef32107e75e031eb7210130ce310e1714e51b91", "commitAfterChange": "7c0f2c9147393f8cef6c7d3001b98a8817827537", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "          @Override public Void visit(ClassInitializer node)", "signatureAfterChange": "          @Override public Void visit(ClassInitializer node)", "diff": ["-      // TODO: static context", "-      node.getBlock().acceptVisitor(new StatementChecker(_bodyContext, _opt));", "+      TypeContext c = new InitializerContext(_bodyContext, true, _c);", "+      node.getBlock().acceptVisitor(new StatementChecker(c, _opt));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ae3f67a874eff0647da3636a0ab8920", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassChecker.java", "commitBeforeChange": "eef32107e75e031eb7210130ce310e1714e51b91", "commitAfterChange": "7c0f2c9147393f8cef6c7d3001b98a8817827537", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "          @Override public Void visit(InstanceInitializer node)", "signatureAfterChange": "          @Override public Void visit(InstanceInitializer node)", "diff": ["-      node.getBlock().acceptVisitor(new StatementChecker(_bodyContext, _opt));", "+      TypeContext c = new InitializerContext(_bodyContext, false, _c);", "+      node.getBlock().acceptVisitor(new StatementChecker(c, _opt));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a37f8195834a90c9e1f45c08cf9b0e96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassChecker.java", "commitBeforeChange": "eef32107e75e031eb7210130ce310e1714e51b91", "commitAfterChange": "7c0f2c9147393f8cef6c7d3001b98a8817827537", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "          @Override public Void visit(FieldDeclaration node)", "signatureAfterChange": "          @Override public Void visit(FieldDeclaration node)", "diff": ["-      // TODO: static context", "+        TypeContext c = new InitializerContext(_bodyContext, getField(node).isStatic(), _c);", "-        Type initT = new ExpressionChecker(_bodyContext, _opt).check(init, expectedT);", "+        Type initT = new ExpressionChecker(c, _opt).check(init, expectedT);"]}], "num": 12695}