{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a000f03f7f2458e7988e75fd3b0930d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "634f06f76762fc3e91c3344c0af4f613", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JarOptionsDialog.java", "commitBeforeChange": "f6810ad68cbb0aaa0d9f5ff0052437da87098ab7", "commitAfterChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private JPanel _makeMainClassSelectorPanel()", "signatureAfterChange": "   private JPanel _makeMainClassSelectorPanel()", "diff": ["-    _mainClassField = new FileSelectorStringComponent(this, null, 20, 12f) {", "-        public File convertStringToFile(String s) { ", "-          s = s.trim().replace('.', java.io.File.separatorChar) + \".class\";", "-          if (s.equals(\"\")) return null;", "-          else return new File(_rootFile, s);", "-        }", "-        ", "-        public String convertFileToString(File f) {", "-          if (f == null)  return \"\";", "-          else {", "-            try {", "-              String s = edu.rice.cs.util.FileOps.makeRelativeTo(f, _rootFile).toString();", "-              s = s.substring(0, s.lastIndexOf(\".class\"));", "-              s = s.replace(java.io.File.separatorChar, '.').replace('$', '.');", "-              int pos = 0;", "-              boolean ok = true;", "-              while((pos = s.indexOf('.', pos)) >= 0) {", "-                if ((s.length() <= pos + 1) || (Character.isDigit(s.charAt(pos + 1)))) {", "-                  ok = false;", "-                  break;", "-                }", "-                ++pos;", "+    ", "+    FileChooser chooser = new FileChooser(_rootFile);", "+    chooser.setDialogTitle(\"Select Main Class\");", "+//      chooser.setTopMessage(\"Select the main class for the executable jar file:\");", "+    chooser.setApproveButtonText(\"Select\");", "+    FileFilter filter = new FileFilter() {", "+      public boolean accept(File f) {", "+        String name = f.getName();", "+        return  !f.isDirectory() && name.endsWith(\".class\");", "+      }", "+      public String getDescription() { return \"Class Files (*.class)\"; }", "+    };", "+    chooser.addChoosableFileFilter(filter);", "+    ", "+    _mainClassField = new FileSelectorStringComponent(this, chooser, 20, 12f) {", "+      public File convertStringToFile(String s) { ", "+        s = s.trim().replace('.', java.io.File.separatorChar) + \".class\";", "+        if (s.equals(\"\")) return null;", "+        else return new File(_rootFile, s);", "+      }", "+      ", "+      public String convertFileToString(File f) {", "+        if (f == null)  return \"\";", "+        else {", "+          try {", "+            String s = edu.rice.cs.util.FileOps.makeRelativeTo(f, _rootFile).toString();", "+            s = s.substring(0, s.lastIndexOf(\".class\"));", "+            s = s.replace(java.io.File.separatorChar, '.').replace('$', '.');", "+            int pos = 0;", "+            boolean ok = true;", "+            while((pos = s.indexOf('.', pos)) >= 0) {", "+              if ((s.length() <= pos + 1) || (Character.isDigit(s.charAt(pos + 1)))) {", "+                ok = false;", "+                break;", "-              if (ok) return s;", "-              return \"\";", "+              ++pos;", "-            catch(Exception e) { return \"\"; }", "+            if (ok) return s;", "+            return \"\";", "+          catch(Exception e) { return \"\"; }", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e699d9abd372ad3200981e1567f7697d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JarOptionsDialog.java", "commitBeforeChange": "6f37af6087e88b55d504fabdb6eee22be7ba1948", "commitAfterChange": "7fcdc5820c7f1c50a17a282e38bc904783e87e7f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private JTextField _mainFileSelector()", "signatureAfterChange": "   private JPanel _makeMainClassSelectorPanel()", "diff": ["-  private JTextField _mainFileSelector() {", "-    // JTextFields aren't resized so I add the width", "-    _mainClassField = new JTextField(18);", "-    _mainClassField.setToolTipText(\"The fully qualified class name of the main document to be run\");", "-    return _mainClassField;", "+  private JPanel _makeMainClassSelectorPanel() {", "+    _mainClassField = new DirectorySelectorStringComponent(this,null,20,12f) {", "+        public File convertStringToFile(String s) {", "+          s = s.trim().replace('.', java.io.File.separatorChar) + \".class\";", "+          if (s.equals(\"\")) {", "+            return null;", "+          }", "+          else {", "+            return new File(_rootFile, s);", "+          }", "+        }", "+        public String convertFileToString(File f) {", "+          if (f==null) {", "+            return \"\";", "+          }", "+          else {", "+            try {", "+              String s = edu.rice.cs.util.FileOps.makeRelativeTo(f, _rootFile).toString();", "+              s = s.substring(0, s.lastIndexOf(\".class\"));", "+              s = s.replace(java.io.File.separatorChar, '.').replace('$', '.');", "+              int pos = 0;", "+              boolean ok = true;", "+              while((pos=s.indexOf('.', pos)) >= 0) {", "+                if ((s.length()<=pos+1) || (Character.isDigit(s.charAt(pos+1)))) {", "+                  ok = false;", "+                  break;", "+                }", "+                ++pos;", "+              }", "+              if (ok) {", "+                return s;", "+              }", "+              else {", "+                return \"\";", "+              }", "+            }", "+            catch(Exception e) {", "+              return \"\";", "+            }", "+          }", "+        }", "+    };", "+    _mainClassField.getTextField().getDocument().addDocumentListener(new DocumentListener() {", "+      public void insertUpdate(DocumentEvent e) {", "+        _okButton.setEnabled(true);", "+      }", "+      public void removeUpdate(DocumentEvent e) {", "+        _okButton.setEnabled(true);", "+      }", "+      public void changedUpdate(DocumentEvent e) {", "+        _okButton.setEnabled(true);", "+      }", "+    });", "+    JPanel p = new JPanel();", "+    p.setLayout(new BorderLayout());", "+    _mainClassLabel = new JLabel(\"Main class:  \");", "+    _mainClassLabel.setLabelFor(_mainClassField);", "+    p.add(_mainClassLabel, BorderLayout.WEST);", "+    p.add(_mainClassField, BorderLayout.CENTER);", "+    return p;"]}], "num": 29348}