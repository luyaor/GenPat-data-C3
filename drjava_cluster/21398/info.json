{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9093dab21e1026013103f7552f4d510", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0050ae6830ee1724f6da9675153821ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public static <T> Lambda<Object, T> nullLambda()", "signatureAfterChange": "   @SuppressWarnings(\"unchecked\") public static <T> GeneralLambda<T> nullLambda()", "diff": ["-  /** @return  A {@link Lambda} whose result is always {@code null} */", "-  public static <T> Lambda<Object, T> nullLambda() {", "-    return new Lambda<Object, T>() { public T value(Object arg) { return null; } };", "+  /** Create a lambda whose result is always {@code null}. */", "+  @SuppressWarnings(\"unchecked\") public static <T> GeneralLambda<T> nullLambda() {", "+    return (GeneralLambda<T>) NullLambda.INSTANCE;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dac5ed9bb1ca83cce8ddab149e63ead6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public static <T> Lambda<Object, T> valueLambda(final T val)", "signatureAfterChange": "   public static <T> GeneralLambda<T> valueLambda(T val)", "diff": ["-  /** @return  A {@link Lambda} whose result is always {@code val} */", "-  public static <T> Lambda<Object, T> valueLambda(final T val) {", "-    return new Lambda<Object, T>() { public T value(Object arg) { return val; } };", "+  /** Create a lambda whose result is always {@code val}. */", "+  public static <T> GeneralLambda<T> valueLambda(T val) { return new ValueLambda<T>(val); }"]}], "num": 21398}