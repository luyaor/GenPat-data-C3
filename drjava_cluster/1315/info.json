{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "70ecc6e991c95b4434a954903e89d065", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "841ba98fc887f3dfdc6d2eab31a16645", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 371, "methodNumberAfterChange": 371, "signatureBeforeChange": "\r \r   public void forInnerInterfaceDef(InnerInterfaceDef that)", "signatureAfterChange": "    public void forInnerInterfaceDef(InnerInterfaceDef that)", "diff": ["-\r", "-  public void forInnerInterfaceDef(InnerInterfaceDef that) {\r", "-    forInnerInterfaceDefDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getMav().visit(this);\r", "-    for (int i = 0; i < that.getTypeParameters().length; i++) that.getTypeParameters()[i].visit(this);\r", "-    for (int i = 0; i < that.getInterfaces().length; i++) that.getInterfaces()[i].visit(this);\r", "-    that.getBody().visit(this);\r", "-    forInnerInterfaceDefOnly(that);\r", "-  }\r", "+", "+  public void forInnerInterfaceDef(InnerInterfaceDef that) {", "+    forInnerInterfaceDefDoFirst(that);", "+    if (prune(that)) return;", "+    that.getMav().visit(this);", "+    for (int i = 0; i < that.getTypeParameters().length; i++) that.getTypeParameters()[i].visit(this);", "+    for (int i = 0; i < that.getInterfaces().length; i++) that.getInterfaces()[i].visit(this);", "+    that.getBody().visit(this);", "+    forInnerInterfaceDefOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd198fd01ae2fc255ccc7a57038ab724", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 370, "methodNumberAfterChange": 370, "signatureBeforeChange": "\r   public void forInterfaceDef(InterfaceDef that)", "signatureAfterChange": "   public void forInterfaceDef(InterfaceDef that)", "diff": ["-  }\r", "-  public void forInterfaceDef(InterfaceDef that) {\r", "-    forInterfaceDefDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getMav().visit(this);\r", "-    for (int i = 0; i < that.getTypeParameters().length; i++) that.getTypeParameters()[i].visit(this);\r", "-    for (int i = 0; i < that.getInterfaces().length; i++) that.getInterfaces()[i].visit(this);\r", "-    that.getBody().visit(this);\r", "-    forInterfaceDefOnly(that);\r", "-  }\r", "+  }", "+  public void forInterfaceDef(InterfaceDef that) {", "+    forInterfaceDefDoFirst(that);", "+    if (prune(that)) return;", "+    that.getMav().visit(this);", "+    for (int i = 0; i < that.getTypeParameters().length; i++) that.getTypeParameters()[i].visit(this);", "+    for (int i = 0; i < that.getInterfaces().length; i++) that.getInterfaces()[i].visit(this);", "+    that.getBody().visit(this);", "+    forInterfaceDefOnly(that);", "+  }"]}], "num": 1315}