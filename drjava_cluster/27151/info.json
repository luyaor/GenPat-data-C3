{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a68c4ad047f5f6fd41ca31520bd1582", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "800ab00ac8ff55fc178d71d3163e5e91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "   private synchronized void _updateWatches() throws DebugException", "signatureAfterChange": "   private synchronized void _updateWatches() throws DebugException", "diff": ["-      List frames = null;", "+      List<StackFrame> frames = null;", "-      frames = thread.frames();", "-      currFrame = (StackFrame) frames.get(0);", "+      frames = thread.frames(); // JDK 1.5 will eliminate this warning", "+      currFrame = frames.get(0);", "-            List fields = outerRt.allFields();", "-            Iterator iter = fields.iterator();", "+            List<Field> fields = outerRt.allFields();  // This type warning will go away in JDK 1.5", "+            Iterator<Field> iter = fields.iterator();", "-              Field f = (Field)iter.next();", "+              Field f = iter.next();", "-            List l = _vm.classesByName(rtClassName);", "+            List<ReferenceType> l = _vm.classesByName(rtClassName); // JDK 1.5 will eliminate this warning", "-            outerRt = (ReferenceType)l.get(0);", "+            outerRt = l.get(0);", "-            List classes = _vm.classesByName(field.typeName());", "+            List<Type> classes = _vm.classesByName(field.typeName());  // JDK 1.5 will eliminate this warning", "-              currWatch.setType(((Type)classes.get(0)).name());", "+              currWatch.setType(classes.get(0).name());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c38d4760161535a7fc5dd2c1e8a2e56f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "   private synchronized void _updateWatches() throws DebugException", "signatureAfterChange": "   private synchronized void _updateWatches() throws DebugException", "diff": ["-      List frames = null;", "+      List<StackFrame> frames = null;", "-      frames = thread.frames();", "-      currFrame = (StackFrame) frames.get(0);", "+      frames = thread.frames(); // JDK 1.5 will eliminate this warning", "+      currFrame = frames.get(0);", "-            List fields = outerRt.allFields();", "-            Iterator iter = fields.iterator();", "+            List<Field> fields = outerRt.allFields();  // This type warning will go away in JDK 1.5", "+            Iterator<Field> iter = fields.iterator();", "-              Field f = (Field)iter.next();", "+              Field f = iter.next();", "-            List l = _vm.classesByName(rtClassName);", "+            List<ReferenceType> l = _vm.classesByName(rtClassName); // JDK 1.5 will eliminate this warning", "-            outerRt = (ReferenceType)l.get(0);", "+            outerRt = l.get(0);", "-            List classes = _vm.classesByName(field.typeName());", "+            List<Type> classes = _vm.classesByName(field.typeName());  // JDK 1.5 will eliminate this warning", "-              currWatch.setType(((Type)classes.get(0)).name());", "+              currWatch.setType(classes.get(0).name());"]}], "num": 27151}