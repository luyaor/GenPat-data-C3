{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90af31e5edda0c1fa1cd5a735253cfa5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b899cb65ee18d25746991c3befc1717", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "b2d820b253c15b02ecb50e43e9a336a56dadd45e", "commitAfterChange": "a80c6de11e537b6579c447ea812ef2f4f98b5f2f", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public void scrollToSource(DebugStackData stackData) throws DebugException", "signatureAfterChange": "   public void scrollToSource(DebugStackData stackData) throws DebugException", "diff": ["+    // System.out.println(\"scrollToSource DebugStackData: \"+stackData.getLine());", "+", "+    final List<File> files = new ArrayList<File>();", "+    for(OpenDefinitionsDocument odd: _model.getLLOpenDefinitionsDocuments()){ files.add(odd.getRawFile()); }", "+    // map Java to LL line numbers using LanguageLevelStackTraceMapper", "+", "+      Location lll = getLLLocation(frame.location(), files);", "-      if (frame.location().lineNumber() == stackData.getLine() &&", "+      if (lll.lineNumber() == stackData.getLine() &&", "-                                       frame.location().method().name()))", "-      {", "-        scrollToSource(frame.location(), false);", "+                                       frame.location().method().name())) {", "+        scrollToSource(lll, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8b3114b056bb1fb8a6479d20e757fc6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "cc814c34f96bfde67f8ae465727b510fa3ed34c9", "commitAfterChange": "8cb3141a044af3c7f18d018980f5a22b0b342ea8", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public OpenDefinitionsDocument preloadDocument(Location location)", "signatureAfterChange": "   public Pair<Location, OpenDefinitionsDocument> preloadDocument(Location location)", "diff": ["-    */", "-  public OpenDefinitionsDocument preloadDocument(Location location) {", "+    * thread and synchronization has been elided. */", "+  public Pair<Location, OpenDefinitionsDocument> preloadDocument(Location location) {", "+    Location lll = null;  /* Location in source file; adjusted for LL file if necessary. */", "-      for(OpenDefinitionsDocument odd: _model.getLLOpenDefinitionsDocuments()) { files.add(odd.getRawFile()); }", "-      Location lll = getLLLocation(location, files);", "+      for (OpenDefinitionsDocument odd: _model.getLLOpenDefinitionsDocuments()) { files.add(odd.getRawFile()); }", "+      lll = getLLLocation(location, files);", "+      ", "-        catch (IOException ioe) {", "-          doc = null;", "-        }", "+        catch (IOException ioe) { doc = null; }", "-", "-          if (fileName!=null) { break; }", "+          if (fileName != null) { break; }", "-    ", "-    return doc;", "+    if (lll == null) lll = location;", "+    return Pair.make(lll, doc);"]}], "num": 15974}