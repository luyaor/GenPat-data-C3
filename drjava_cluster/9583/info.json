{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cccf561014920d4d2755411851277f2b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d3966f42d9c55a6df757a18c25201b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "7d708b4318d2a7ffa9f01174e54dfcf52e139a3d", "commitAfterChange": "31c24a84c42340de320b817c6a38b98e08dac42c", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": "   public Pair<Expression, Expression> mergeConditional(final Expression e1, final Expression e2)      throws UnsupportedConversionException", "signatureAfterChange": "   public Pair<Expression, Expression> mergeConditional(final Expression e1, final Expression e2)      throws UnsupportedConversionException", "diff": ["-      private boolean isBooleanReference(Type t) { return !_opt.prohibitBoxing() && isSubtype(t, BOOLEAN_CLASS); }", "+      private boolean isBooleanReference(Type t) {", "+        return !_opt.prohibitBoxing() && isSubtype(t, BOOLEAN_CLASS) && !isSubtype(t, NULL);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed8ea5499e3fe1268d91e9789105404c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "69a380647f3d586f130ea02ad1e8381a390045e3", "commitAfterChange": "739371db1261b11c3be5fd70233012a49b45b7ca", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": "   public Pair<Expression, Expression> mergeConditional(final Expression e1, final Expression e2)      throws UnsupportedConversionException", "signatureAfterChange": "   public Pair<Expression, Expression> mergeConditional(final Expression e1, final Expression e2)      throws UnsupportedConversionException", "diff": ["-        return !_opt.prohibitBoxing() &&", "+        return !_opt.prohibitBoxing() && !isSubtype(t, NULL) &&", "-        catch (UnsupportedConversionException e) { throw new IllegalArgumentException(); }", "+        catch (UnsupportedConversionException e) { throw new IllegalArgumentException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1118774f49915744f3b24d3255832d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "e7fa83968a0076b95166203c3ff9a5bddde8dfee", "commitAfterChange": "b2bccf49a3d470addd7a5aec1fd2eaf00accbe3b", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "      public boolean isPrimitiveConvertible(Type t)", "signatureAfterChange": "      public boolean isPrimitiveConvertible(Type t)", "diff": ["-      isSubtype(t, BOOLEAN_CLASS) || ", "-      isSubtype(t, CHARACTER_CLASS) ||", "-      isSubtype(t, BYTE_CLASS) ||", "-      isSubtype(t, SHORT_CLASS) ||", "-      isSubtype(t, INTEGER_CLASS) ||", "-      isSubtype(t, LONG_CLASS) ||", "-      isSubtype(t, FLOAT_CLASS) ||", "-      isSubtype(t, DOUBLE_CLASS);", "+      (!isSubtype(t, NULL) &&", "+       (isSubtype(t, BOOLEAN_CLASS) || ", "+        isSubtype(t, CHARACTER_CLASS) ||", "+        isSubtype(t, BYTE_CLASS) ||", "+        isSubtype(t, SHORT_CLASS) ||", "+        isSubtype(t, INTEGER_CLASS) ||", "+        isSubtype(t, LONG_CLASS) ||", "+        isSubtype(t, FLOAT_CLASS) ||", "+        isSubtype(t, DOUBLE_CLASS)));"]}], "num": 9583}