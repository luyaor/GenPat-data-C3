{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e86645d59bebae4d92d4425897c2130c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60ce988519d38d374bc43d820b596376", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 59, "signatureBeforeChange": "   private ObjectReference getDebugInterpreter(String interpreterName)      throws InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, InvocationException", "signatureAfterChange": "   private ObjectReference _getDebugInterpreter(String interpreterName)      throws InvalidTypeException, ClassNotLoadedException,      IncompatibleThreadStateException, InvocationException, DebugException", "diff": ["-  private ObjectReference getDebugInterpreter(String interpreterName) ", "-    throws InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, InvocationException{", "+  private ObjectReference _getDebugInterpreter(String interpreterName) ", "+    throws InvalidTypeException, ClassNotLoadedException, ", "+    IncompatibleThreadStateException, InvocationException, DebugException", "+  {", "-    return getDebugInterpreter(interpreterName, threadRef);", "+    return _getDebugInterpreter(interpreterName, threadRef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6e1b3786dc2e620719fd824088c0e92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 71, "signatureBeforeChange": "   private void _copyBack(ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, AbsentInformationException, InvocationException", "signatureAfterChange": "   private void _copyBack(ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,      IncompatibleThreadStateException, AbsentInformationException,      InvocationException, DebugException", "diff": ["-    throws InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, AbsentInformationException, InvocationException{", "+    throws InvalidTypeException, ClassNotLoadedException, ", "+    IncompatibleThreadStateException, AbsentInformationException, ", "+    InvocationException, DebugException", "+  {", "-    ObjectReference interpreter = getDebugInterpreter(_getUniqueThreadName(threadRef), threadRef);", "+    ObjectReference interpreter = _getDebugInterpreter(_getUniqueThreadName(threadRef), threadRef);", "-    while(varsIterator.hasNext()){", "+    // Get each variable from the stack frame", "+    while(varsIterator.hasNext()) {"]}], "num": 28880}