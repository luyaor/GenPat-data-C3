{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a03b0c8db59571e38565412173609e99", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dc98020995cdf6e7cf35bfe5b5de2ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ConstructorCall.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ConstructorCall(Expression exp, List<? extends Expression> args, boolean sup,                                SourceInfo si)", "signatureAfterChange": "   public ConstructorCall(Expression exp, List<? extends Expression> args, boolean sup,                                SourceInfo si)", "diff": ["-    arguments  = (args == null) ? null : new ArrayList<Expression>(args);", "+    arguments  = (args == null) ? new ArrayList<Expression>(0) : new ArrayList<Expression>(args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d22c3a4e8954adbd8c956af2a79f024", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MethodCall.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected MethodCall(String mn, List<? extends Expression> args,                        SourceInfo si)", "signatureAfterChange": "   protected MethodCall(String mn, List<? extends Expression> args,                        SourceInfo si)", "diff": ["-    arguments  = (args == null) ? null : new ArrayList<Expression>(args);", "+    arguments  = (args == null) ? new ArrayList<Expression>(0) : new ArrayList<Expression>(args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aecef1e0189fa698338f927639067c9e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MethodCall.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void setArguments(List<? extends Expression> l)", "signatureAfterChange": "   public void setArguments(List<? extends Expression> l)", "diff": ["-                       arguments = (l == null) ? null : new ArrayList<Expression>(l));", "+                       arguments = (l == null) ? new ArrayList<Expression>(0) : new ArrayList<Expression>(l));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3169460b870af50d7a39dc5be72ac6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ConstructorCall.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void setArguments(List<? extends Expression> l)", "signatureAfterChange": "   public void setArguments(List<? extends Expression> l)", "diff": ["-                       arguments = (l == null) ? null : new ArrayList<Expression>(l));", "+                       arguments = (l == null) ? new ArrayList<Expression>(0) : new ArrayList<Expression>(l));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e333befe2516e7aecb2782b0afb15698", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SimpleAllocation.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args,                           SourceInfo si)", "signatureAfterChange": "   public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args,                           SourceInfo si)", "diff": ["-    arguments = (args == null) ? null : new ArrayList<Expression>(args);", "+    arguments = (args == null) ? new ArrayList<Expression>(0) : new ArrayList<Expression>(args);"]}], "num": 8259}