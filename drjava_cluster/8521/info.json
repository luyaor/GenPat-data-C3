{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc094e17bbf69241580881b43c071a4c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57889e8f04568ec50ba091b17f562144", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   static synchronized void initConfig() throws IllegalStateException", "signatureAfterChange": "   static FileConfiguration _initConfig() throws IllegalStateException", "diff": ["-  static synchronized void initConfig() throws IllegalStateException {", "-    // Make sure someone doesn't try to change the config object.", "-    if (_config != null) throw new IllegalStateException(\"Can only call initConfig once!\");", "+  static FileConfiguration _initConfig() throws IllegalStateException {", "+//    // Make sure someone doesn't try to change the config object.", "+//    if (_config != null) throw new IllegalStateException(\"Can only call initConfig once!\");", "+    ", "+    FileConfiguration config;", "-    _config = new FileConfiguration(_propertiesFile);", "-    try { _config.loadConfiguration(); }", "+    config = new FileConfiguration(_propertiesFile);", "+    try { config.loadConfiguration(); }", "-      _config.resetToDefaults();", "-      _config.storeStartupException(e);", "+      config.resetToDefaults();", "+//      Utilities.showDebug(\"Config Exception is: \" + e.toString());", "+      config.storeStartupException(e);", "+    _config = config; // required to support calls on DrJava._initConfig() in unit tests", "+    return config;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c45c03cd43d5fdae4f4fb047ba8f18e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "f5f9e35c2a806ad9979915d514415944af196bab", "commitAfterChange": "720d6a91901cb3699fb981b0c6b71471d6bbb848", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static Test suite()", "signatureAfterChange": "   protected void tearDown() throws IOException", "diff": ["-  public static Test suite() {", "-    return  new TestSuite(GlobalModelTestCase.class);", "+  protected void tearDown() throws IOException {", "+    boolean ret = FileOps.deleteDirectory(_tempDir);", "+    assertTrue(\"delete temp directory \" + _tempDir, ret);"]}], "num": 8521}