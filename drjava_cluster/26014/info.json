{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "134d835c4bf45c70a45ec5d65441c970", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03ec857ddc456b91012d5a2201d5c87f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionInsideComment.java", "commitBeforeChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "commitAfterChange": "07e4da5973e0c6fb136b88bb51b79becbac0e22f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc, BraceReduction reducedModel, int pos)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-  boolean applyRule(DefinitionsDocument doc, BraceReduction reducedModel, int pos) {", "+  boolean applyRule(DefinitionsDocument doc) {", "-    int distToStart = here - doc.getLineStartPos(here);", "-    reducedModel.resetLocation();  // Gaaah!", "-    state = reducedModel.stateAtRelLocation(-distToStart);", "+    int distToStart = here - doc.getLineStartPos();          // no more int argument!", "+    //reducedModel.resetLocation();  // Gaaah!               // no more reduced model directly!", "+    //state = reducedModel.stateAtRelLocation(-distToStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9981154ad7a51cf01f28742f3c9a53ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public IntermediateVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors, Symboltable symbolTable,                              Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>> continuations,                              LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles,                              Hashtable<SymbolData, LanguageLevelVisitor> newSDs)", "signatureAfterChange": "   public IntermediateVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors,                              Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>> continuations,                              LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles)", "diff": ["-  public IntermediateVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors, Symboltable symbolTable,", "+  public IntermediateVisitor(File file, LinkedList<Pair<String, JExpressionIF>> errors,", "-                             LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles,", "-                             Hashtable<SymbolData, LanguageLevelVisitor> newSDs) {", "+                             LinkedList<Pair<LanguageLevelVisitor, SourceFile>> visitedFiles) {", "-    this.symbolTable = symbolTable;", "+//    this.symbolTable = symbolTable;", "-    this._newSDs = newSDs;", "-    _hierarchy = new Hashtable<String, TypeDefBase>();//hierarchy;", "+    _hierarchy = new Hashtable<String, TypeDefBase>(); //hierarchy;"]}], "num": 26014}