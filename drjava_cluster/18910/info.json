{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ca5cf3dafa31a594b9ac2433b65a706", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12474f6372f67e526a2757d9e1110c88", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "   public void forVariableDeclaration(VariableDeclaration that)", "signatureAfterChange": "   public void forVariableDeclaration(VariableDeclaration that)", "diff": ["-    if (prune(that)) { return; }", "+    if (prune(that)) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f2ef88f04f4c7cb96dd096924644fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 492, "methodNumberAfterChange": 492, "signatureBeforeChange": "\r \r   public void forParenthesizedExpressionList(ParenthesizedExpressionList that)", "signatureAfterChange": "    public void forParenthesizedExpressionList(ParenthesizedExpressionList that)", "diff": ["-\r", "-  public void forParenthesizedExpressionList(ParenthesizedExpressionList that) {\r", "-    forParenthesizedExpressionListDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    for (int i = 0; i < that.getExpressions().length; i++) that.getExpressions()[i].visit(this);\r", "-    forParenthesizedExpressionListOnly(that);\r", "-  }\r", "+", "+  public void forParenthesizedExpressionList(ParenthesizedExpressionList that) {", "+    forParenthesizedExpressionListDoFirst(that);", "+    if (prune(that)) return;", "+    for (int i = 0; i < that.getExpressions().length; i++) that.getExpressions()[i].visit(this);", "+    forParenthesizedExpressionListOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f37721a8654bfc460c6de40a905cc229", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": "   private SymbolData _getSymbolData_FromCurrFile(String qualifiedClassName, SourceInfo si, boolean resolve)", "signatureAfterChange": "   private SymbolData _getSymbolData_FromCurrFile(String qualifiedClassName, SourceInfo si, boolean resolve)", "diff": ["-   */", "+    */", "-    else {", "-      return sd;", "-    }", "+    else return sd;"]}], "num": 18910}