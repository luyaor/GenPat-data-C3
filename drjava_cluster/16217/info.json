{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36f414828695ca3a6fb5231c915bf3d6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b9fc032c6f352a882131aff964db816", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "8fa41241e2ac3011c3058f056c6e4c222dae479c", "commitAfterChange": "75615d6339345db6e253403db9b318fe78732c66", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void _insertGap(int length)", "signatureAfterChange": "   public void _insertGap(int length)", "diff": ["-    //0 - a", "-    //0 - b", "-    ", "-    //5", "-    //char comments", "-    else if (_cursor.current().isMultipleCharBrace() && (_offset > 0)) {", "-      if (_offset > 1) {", "-        throw new IllegalArgumentException(\"OFFSET TOO BIG:  \" +", "-                                           _offset);", "-      }", "-      _breakComment(_cursor);", "-      _insertNewGap(length);  //inserts gap and goes to next item", "+    //char comments  ", "+    else if (_cursor.current().isMultipleCharBrace() && (_offset > 0)) {    ", "+      if (_offset > 1) {      ", "+        throw new IllegalArgumentException(\"OFFSET TOO BIG:  \" + _offset);  ", "+      }    ", "+      _splitCurrentIfCommentBlock(true, true, _cursor);      ", "+      _cursor.next();", "+      _insertNewGap(length);  //inserts gap and goes to next item  ", "+      // we have to go back two tokens; we don't want to use move because it could", "+      // throw us past start if there was only one character before us and we went", "+      // the usual 2 spaces before.  There would have to be a check and a branch", "+      // depending on conditions that way.", "+      _cursor.prev();", "+      _cursor.prev();", "+      _updateBasedOnCurrentState();   ", "+      // restore cursor state", "+      _cursor.next();", "+      _cursor.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e402f3c0373f7702f2e39cc18bf0859", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "8fa41241e2ac3011c3058f056c6e4c222dae479c", "commitAfterChange": "75615d6339345db6e253403db9b318fe78732c66", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void _insertGap(int length)", "signatureAfterChange": "   public void _insertGap(int length)", "diff": ["-    //0 - a", "-    //0 - b", "-    ", "-    //5", "-    //char comments", "-    else if (_cursor.current().isMultipleCharBrace() && (_offset > 0)) {", "-      if (_offset > 1) {", "-        throw new IllegalArgumentException(\"OFFSET TOO BIG:  \" +", "-                                           _offset);", "-      }", "-      _breakComment(_cursor);", "-      _insertNewGap(length);  //inserts gap and goes to next item", "+    //char comments  ", "+    else if (_cursor.current().isMultipleCharBrace() && (_offset > 0)) {    ", "+      if (_offset > 1) {      ", "+        throw new IllegalArgumentException(\"OFFSET TOO BIG:  \" + _offset);  ", "+      }    ", "+      _splitCurrentIfCommentBlock(true, true, _cursor);      ", "+      _cursor.next();", "+      _insertNewGap(length);  //inserts gap and goes to next item  ", "+      // we have to go back two tokens; we don't want to use move because it could", "+      // throw us past start if there was only one character before us and we went", "+      // the usual 2 spaces before.  There would have to be a check and a branch", "+      // depending on conditions that way.", "+      _cursor.prev();", "+      _cursor.prev();", "+      _updateBasedOnCurrentState();   ", "+      // restore cursor state", "+      _cursor.next();", "+      _cursor.next();"]}], "num": 16217}