{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ead8fb6bb528ee23256c2da8cd48c745", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02723198e4fe6b4b719a484a955da737", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "b400b9a6647834c824c840f4cbeb6ad51c113120", "commitAfterChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void testQuotesWithGap()", "signatureAfterChange": "  \tpublic void testQuotesWithGap()", "diff": ["-\t\t\tmodel1._cursor.prev();", "-\t\t\tassertEquals(\"#0.0\", \"\\\"\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#0.1\", \"\\\"\", model1._cursor.prevItem().getType());", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tassertEquals(\"#0.0\", \"\\\"\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#0.1\", \"\\\"\", model1.getCursor().prevItem().getType());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#1.1\", true, model1._cursor.prevItem().isGap());", "+\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#1.1\", true, model1.getCursor().prevItem().isGap());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tmodel1._cursor.prev();", "-\t\t\tmodel1._offset = 2;", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.setBlockOffset(2);", "-\t\t\tmodel1._offset = 0;", "-\t\t\tassertEquals(\"#2.0\", true, model1._cursor.current().isGap());", "-\t\t\tassertEquals(\"#2.1\", \"/\", model1._cursor.prevItem().getType());", "-\t\t\tassertEquals(\"#2.2\", \"\\\"\", model1._cursor.nextItem().getType());", "+\t\t\tmodel1.setBlockOffset(0);", "+\t\t\tassertEquals(\"#2.0\", true, model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#2.1\", \"/\", model1.getCursor().prevItem().getType());", "+\t\t\tassertEquals(\"#2.2\", \"\\\"\", model1.getCursor().nextItem().getType());", "-\t\t\t\t\t\t\t\t\t model1._cursor.nextItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tassertEquals(\"#3.0\", true, model1._cursor.current().isGap());", "-\t\t\tassertEquals(\"#3.1\", \"\\\"\", model1._cursor.prevItem().getType());", "-\t\t\tassertEquals(\"#3.2\", \"\\\"\", model1._cursor.nextItem().getType());", "+\t\t\tassertEquals(\"#3.0\", true, model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#3.1\", \"\\\"\", model1.getCursor().prevItem().getType());", "+\t\t\tassertEquals(\"#3.2\", \"\\\"\", model1.getCursor().nextItem().getType());", "-\t\t\t\t\t\t\t\t\t model1._cursor.nextItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tmodel1._cursor.prev();", "-\t\t\tmodel1._cursor.prev();", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertEquals(\"#4.0\", \"/\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#4.1\", true, model1._cursor.prevItem().isGap());", "-\t\t\tassertEquals(\"#4.2\", \"\\\"\", model1._cursor.nextItem().getType());", "+\t\t\tassertEquals(\"#4.0\", \"/\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#4.1\", true, model1.getCursor().prevItem().isGap());", "+\t\t\tassertEquals(\"#4.2\", \"\\\"\", model1.getCursor().nextItem().getType());", "-\t\t\t\t\t\t\t\t\t model1._cursor.nextItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.nextItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "-\t\t\tmodel1._cursor.prev();", "-\t\t\tmodel1._cursor.prev();", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.getCursor().prev();", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "-\t\t\tassertEquals(\"#4.6\",true,model1._cursor.current().isGap());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "+\t\t\tassertEquals(\"#4.6\",true,model1.getCursor().current().isGap());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd5a20fecf96b687740d6722daccc471", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "b400b9a6647834c824c840f4cbeb6ad51c113120", "commitAfterChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void testQuotesWithGap()", "signatureAfterChange": "  \tpublic void testQuotesWithGap()", "diff": ["-\t\t\tmodel1._cursor.prev();", "-\t\t\tassertEquals(\"#0.0\", \"\\\"\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#0.1\", \"\\\"\", model1._cursor.prevItem().getType());", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tassertEquals(\"#0.0\", \"\\\"\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#0.1\", \"\\\"\", model1.getCursor().prevItem().getType());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#1.1\", true, model1._cursor.prevItem().isGap());", "+\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#1.1\", true, model1.getCursor().prevItem().isGap());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tmodel1._cursor.prev();", "-\t\t\tmodel1._offset = 2;", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.setBlockOffset(2);", "-\t\t\tmodel1._offset = 0;", "-\t\t\tassertEquals(\"#2.0\", true, model1._cursor.current().isGap());", "-\t\t\tassertEquals(\"#2.1\", \"/\", model1._cursor.prevItem().getType());", "-\t\t\tassertEquals(\"#2.2\", \"\\\"\", model1._cursor.nextItem().getType());", "+\t\t\tmodel1.setBlockOffset(0);", "+\t\t\tassertEquals(\"#2.0\", true, model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#2.1\", \"/\", model1.getCursor().prevItem().getType());", "+\t\t\tassertEquals(\"#2.2\", \"\\\"\", model1.getCursor().nextItem().getType());", "-\t\t\t\t\t\t\t\t\t model1._cursor.nextItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tassertEquals(\"#3.0\", true, model1._cursor.current().isGap());", "-\t\t\tassertEquals(\"#3.1\", \"\\\"\", model1._cursor.prevItem().getType());", "-\t\t\tassertEquals(\"#3.2\", \"\\\"\", model1._cursor.nextItem().getType());", "+\t\t\tassertEquals(\"#3.0\", true, model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#3.1\", \"\\\"\", model1.getCursor().prevItem().getType());", "+\t\t\tassertEquals(\"#3.2\", \"\\\"\", model1.getCursor().nextItem().getType());", "-\t\t\t\t\t\t\t\t\t model1._cursor.nextItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tmodel1._cursor.prev();", "-\t\t\tmodel1._cursor.prev();", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertEquals(\"#4.0\", \"/\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#4.1\", true, model1._cursor.prevItem().isGap());", "-\t\t\tassertEquals(\"#4.2\", \"\\\"\", model1._cursor.nextItem().getType());", "+\t\t\tassertEquals(\"#4.0\", \"/\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#4.1\", true, model1.getCursor().prevItem().isGap());", "+\t\t\tassertEquals(\"#4.2\", \"\\\"\", model1.getCursor().nextItem().getType());", "-\t\t\t\t\t\t\t\t\t model1._cursor.nextItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.nextItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "-\t\t\tmodel1._cursor.prev();", "-\t\t\tmodel1._cursor.prev();", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.getCursor().prev();", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "-\t\t\tassertEquals(\"#4.6\",true,model1._cursor.current().isGap());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "+\t\t\tassertEquals(\"#4.6\",true,model1.getCursor().current().isGap());"]}], "num": 20106}