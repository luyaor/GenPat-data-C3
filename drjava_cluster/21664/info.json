{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "369c2c42e3178cae226d00b8682b739b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ad1d19ecb3871c660e071f1fe685d41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceOnPrevLineTest.java", "commitBeforeChange": "33157731339c994882aa1f63ed4a691707c328ca", "commitAfterChange": "fa574fcc12a57f48a5de7be234043f4f78711418", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testOnlyCurly() throws BadLocationException", "signatureAfterChange": "      public void testOnlyCurly() throws BadLocationException", "diff": ["-\t/*", "-\t/* (1)* /", "+\t/* (1) */", "-\t    \"{ /* block1* / }\\n\" +", "-\t    \"{ /* block2* / }\\n\" +", "-\t    \"{ /* block3* / }\";", "+\t    \"{ /* block1 */ }\\n\" +", "+\t    \"{ /* block2 */ }\\n\" +", "+\t    \"{ /* block3 */ }\";", "-\tassertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0));\t    ", "-\tassertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 7));\t    ", "-\tassertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 28));\t    ", "-\tassertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 30));\t    ", "-\tassertTrue(\"START has no brace.\", !_rule.applyRule(_doc, _text.length() - 1));\t    ", "+        try { _rule.applyRule(_doc, 0); fail(\"START has no brace.\"); }", "+\tcatch (UnexpectedException e) {}", "+        try { _rule.applyRule(_doc, 7); fail(\"START has no brace.\"); }", "+\tcatch (UnexpectedException e) {}", "+        try { _rule.applyRule(_doc, 28); fail(\"START has no brace.\"); }", "+\tcatch (UnexpectedException e) {}", "+        try { _rule.applyRule(_doc, 30); fail(\"START has no brace.\"); }", "+\tcatch (UnexpectedException e) {}", "+        try { _rule.applyRule(_doc, _text.length()-1); fail(\"START has no brace.\"); }", "+\tcatch (UnexpectedException e) {}", "-\t/* (2)* /", "+\t/* (2) */", "-\tassertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0));\t    ", "-\t*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fcfad502164ec352f06b9d12baf0dfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsParenOrBracketTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testBracket() throws BadLocationException", "signatureAfterChange": "      public void testBracket() throws BadLocationException", "diff": ["-        assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, i));", "+        assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, i, Indenter.OTHER));", "-        assertTrue(\"START's brace is an open bracket.\", _rule.applyRule(_doc, i));     ", "+        assertTrue(\"START's brace is an open bracket.\", _rule.applyRule(_doc, i, Indenter.OTHER));", "-        assertTrue(\"START's brace is an open paren.\", _rule.applyRule(_doc, i));     ", "+        assertTrue(\"START's brace is an open paren.\", _rule.applyRule(_doc, i, Indenter.OTHER));", "-        assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, i));", "+        assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, i, Indenter.OTHER));", "-      assertTrue(\"START's paren is an open bracket.\", _rule.applyRule(_doc, 8));", "-      assertTrue(\"START's paren is an open bracket.\", _rule.applyRule(_doc, 22));", "-      assertTrue(\"START's paren is an open bracket.\", _rule.applyRule(_doc, 23));", "+      assertTrue(\"START's paren is an open bracket.\", _rule.applyRule(_doc, 8, Indenter.OTHER));", "+      assertTrue(\"START's paren is an open bracket.\", _rule.applyRule(_doc, 22, Indenter.OTHER));", "+      assertTrue(\"START's paren is an open bracket.\", _rule.applyRule(_doc, 23, Indenter.OTHER));"]}], "num": 21664}