{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be3ab1cef904fc5e9e364f27f98bfbba", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40bd858940985b09116e2f3314af05ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "diff": ["-", "+    ", "-", "+    ", "-        ", "+    ", "-    _auxiliaryFiles.clear();", "-    for(File file: auxFiles){", "-      _auxiliaryFiles.add(file);", "+    synchronized (_auxiliaryFiles) {", "+      _auxiliaryFiles.clear();", "+      for(File file: auxFiles) { _auxiliaryFiles.add(file); }", "-", "+    ", "-    ", "-    ", "-    for(DocFile f: srcFiles){", "+    for (DocFile f: srcFiles) {", "-      if(f.lastModified() > f.getSavedModDate()){", "-        file = new File(f.getPath());", "-      }", "-      if (f.isActive() && active == null) {", "-        active = file;", "-      }", "-      else {", "-        al.add(file);", "-      }", "+      if (f.lastModified() > f.getSavedModDate()) file = new File(f.getPath());", "+      if (f.isActive() && active == null) active = file;", "+      else al.add(file);", "-    for(DocFile f: auxFiles){", "+    for (DocFile f: auxFiles) {", "-      if(f.lastModified() > f.getSavedModDate()){", "-        file = new File(f.getPath());", "-      }", "-      if (f.isActive() && active == null) {", "-        active = file;", "-      }", "-      else {", "-        al.add(file);", "-      }", "+      if (f.lastModified() > f.getSavedModDate()) file = new File(f.getPath());", "+      if (f.isActive() && active == null) active = file;", "+      else al.add(file);", "-    ", "-     ", "+    ", "-    for(OpenDefinitionsDocument d: projDocs){", "-      if(d.isProjectFile()){", "-        closeFile(d);", "-      }else{", "+    for (OpenDefinitionsDocument d: projDocs) {", "+      if (d.isProjectFile()) closeFile(d);", "+      else", "-          INavigatorItem idoc = getIDocGivenODD(d);", "-          String path = fixPathForNavigator(d.getFile().getCanonicalPath());", "-          _documentNavigator.refreshDocument(idoc, path);", "-        }catch(IOException e){", "-          // noop", "-        }", "+        INavigatorItem idoc = getIDocGivenODD(d);", "+        String path = fixPathForNavigator(d.getFile().getCanonicalPath());", "+        _documentNavigator.refreshDocument(idoc, path);", "+      catch(IOException e) { /* do nothing */ }", "-      public File[] getFiles() {", "-        return filesToOpen;", "-      }", "+      public File[] getFiles() { return filesToOpen; }", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "869adc5376d85de1982b104c0cc2a0b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "1551840e0590a4d224d98cf5aeb081d54054aafb", "commitAfterChange": "fe644290d76f63ed4693cfbe935eaacd56666243", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public T getErrorAtOffset(OpenDefinitionsDocument odd, int offset)", "signatureAfterChange": "   public T getErrorAtOffset(OpenDefinitionsDocument odd, int offset)", "diff": ["-    try {", "-      file = odd.getFile();", "-    }", "-    catch (IllegalStateException e) {", "-      return null;", "-    }", "-    catch (FileMovedException e) {", "-      file = e.getFile();", "-    }", "+    try { file = odd.getFile(); }", "+    catch (IllegalStateException e) { return null; }", "+    catch (FileMovedException e) { file = e.getFile(); }", "-    try {", "-      file = file.getCanonicalFile();", "-    }", "+    try { file = file.getCanonicalFile(); }", "-    if (saei == null) {", "-      return null;", "-    }", "+    if (saei == null) return null;", "-    if (start == end) {", "-      return null;", "-    }", "+    if (start == end) return null;", "-      if (_positions[errorAfter].getOffset() >=offset) {", "-        break;", "-      }", "+      if (_positions[errorAfter].getOffset() >=offset) break;", "-", "-        if (betweenDotAndErr.indexOf('\\n') == -1) {", "-          shouldSelect = errorBefore;", "-        }", "+        if (betweenDotAndErr.indexOf('\\n') == -1) shouldSelect = errorBefore;", "-      catch (BadLocationException willNeverHappen) {", "-        throw new UnexpectedException(willNeverHappen);", "-      }", "+      catch (BadLocationException willNeverHappen) { throw new UnexpectedException(willNeverHappen); }", "-", "-        if (betweenDotAndErr.indexOf('\\n') == -1) {", "-          shouldSelect = errorAfter;", "-        }", "+        if (betweenDotAndErr.indexOf('\\n') == -1) shouldSelect = errorAfter;", "-      catch (BadLocationException willNeverHappen) {", "-        throw new UnexpectedException(willNeverHappen);", "-      }", "+      catch (BadLocationException e) { throw new UnexpectedException(e); }", "-    if (shouldSelect == -1) {", "-      return null;", "-    } else {", "-      return _errors[shouldSelect];", "-    }", "+    if (shouldSelect == -1) return null;", "+    return _errors[shouldSelect];"]}], "num": 15038}