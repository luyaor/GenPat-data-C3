{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f35ddb6185e98719ae5df6a08c1b1e16", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b899cb65ee18d25746991c3befc1717", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "b2d820b253c15b02ecb50e43e9a336a56dadd45e", "commitAfterChange": "a80c6de11e537b6579c447ea812ef2f4f98b5f2f", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public void scrollToSource(DebugStackData stackData) throws DebugException", "signatureAfterChange": "   public void scrollToSource(DebugStackData stackData) throws DebugException", "diff": ["+    // System.out.println(\"scrollToSource DebugStackData: \"+stackData.getLine());", "+", "+    final List<File> files = new ArrayList<File>();", "+    for(OpenDefinitionsDocument odd: _model.getLLOpenDefinitionsDocuments()){ files.add(odd.getRawFile()); }", "+    // map Java to LL line numbers using LanguageLevelStackTraceMapper", "+", "+      Location lll = getLLLocation(frame.location(), files);", "-      if (frame.location().lineNumber() == stackData.getLine() &&", "+      if (lll.lineNumber() == stackData.getLine() &&", "-                                       frame.location().method().name()))", "-      {", "-        scrollToSource(frame.location(), false);", "+                                       frame.location().method().name())) {", "+        scrollToSource(lll, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d704f3f4357e2bb6f93a3799b81e58c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "b2d820b253c15b02ecb50e43e9a336a56dadd45e", "commitAfterChange": "a80c6de11e537b6579c447ea812ef2f4f98b5f2f", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 80, "signatureBeforeChange": "   private void _switchToSuspendedThread(BreakpointRequest request, boolean updateWatches) throws DebugException", "signatureAfterChange": "   private void _switchToSuspendedThread(BreakpointRequest request, boolean updateWatches) throws DebugException", "diff": ["-    if (!usedBreakpointLine ) {", "+    if (!usedBreakpointLine) {", "-        if (currThread.frameCount() > 0) scrollToSource(currThread.frame(0).location());", "+        if (currThread.frameCount() > 0) {", "+          final List<File> files = new ArrayList<File>();", "+          for(OpenDefinitionsDocument odd: _model.getLLOpenDefinitionsDocuments()){ files.add(odd.getRawFile()); }", "+          scrollToSource(getLLLocation(currThread.frame(0).location(), files));", "+        }"]}], "num": 15077}