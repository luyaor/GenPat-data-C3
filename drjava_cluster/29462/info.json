{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "063eebec9760f7a414fccfd516ddbc3c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97594cd35f5a4d4584c382a739c46572", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected void setUp()", "signatureAfterChange": "   protected void setUp()", "diff": ["-    doc = new PlainDocument();", "-    docPrev = new PlainDocument();", "-    docNext = new PlainDocument();", "-    frm = new FindReplaceMachine(new DocumentIterator() {", "+    _doc = new PlainDocument();", "+    _docPrev = new PlainDocument();", "+    _docNext = new PlainDocument();", "+    _frm = new FindReplaceMachine(new DocumentIterator() {", "-        if (d == doc) {", "-          return docPrev;", "+        if (d == _doc) {", "+          return _docPrev;", "-        else if (d == docPrev) {", "-          return docNext;", "+        else if (d == _docPrev) {", "+          return _docNext;", "-          return doc;", "+          return _doc;", "+", "-        if (d == doc) {", "-          return docNext;", "+        if (d == _doc) {", "+          return _docNext;", "-        else if (d == docPrev) {", "-          return doc;", "+        else if (d == _docPrev) {", "+          return _doc;", "-          return docPrev;", "+          return _docPrev;", "-    frm.setDocument(doc);", "+    _frm.setDocument(_doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f121db5a5398db25133ca669bda3621d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testSearchesDoNotRepeatWhenChangingDirection() throws BadLocationException", "signatureAfterChange": "   public void testSearchesDoNotRepeatWhenChangingDirection() throws BadLocationException", "diff": ["-    doc.insertString(0, \"int int int\", null);", "+    _doc.insertString(0, \"int int int\", null);", "-    frm.setFindWord(\"int\");", "-    frm.setMatchCase(false);", "-    frm.setSearchBackwards(false);", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 3);", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 7);", "-    ", "-    frm.setLastFindWord();", "-    frm.setSearchBackwards(true);", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 0);", "-    ", "-    frm.setLastFindWord();", "-    frm.setSearchBackwards(false);", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 7);", "-    ", "-    frm.setLastFindWord();", "-    frm.positionChanged();", "-    frm.setSearchBackwards(true);", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 4);", "-    ", "+    _frm.setFindWord(\"int\");", "+    _frm.setMatchCase(false);", "+    _frm.setSearchBackwards(false);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 3);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 7);", "+", "+    _frm.setLastFindWord();", "+    _frm.setSearchBackwards(true);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 0);", "+", "+    _frm.setLastFindWord();", "+    _frm.setSearchBackwards(false);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 7);", "+", "+    _frm.setLastFindWord();", "+    _frm.positionChanged();", "+    _frm.setSearchBackwards(true);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 4);", "+"]}], "num": 29462}