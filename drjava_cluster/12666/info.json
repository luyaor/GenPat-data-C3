{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e96cb21c6142d038f11dae06be2c191f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26d1e983608653ca7c54e5c873322876", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk15/edu/rice/cs/drjava/model/compiler/Javac150Compiler.java", "commitBeforeChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "commitAfterChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected String getSourceRootString(File[] sourceRoots)", "signatureAfterChange": "    protected static String _pathToString(List<? extends File> path)", "diff": ["-   */", "-  protected String getSourceRootString(File[] sourceRoots) {", "-    StringBuffer roots = new StringBuffer();", "-    for (int i = 0; i < sourceRoots.length; i++) {", "-      roots.append(sourceRoots[i].getAbsolutePath());", "-      if (i < sourceRoots.length - 1) {", "-        roots.append(File.pathSeparator);", "-      }", "+  protected static String _pathToString(List<? extends File> path) {", "+    StringBuffer result = new StringBuffer();", "+    boolean first = true;", "+    for (File f : path) {", "+      if (!first) { result.append(File.pathSeparatorChar); }", "+      first = false;", "+      result.append(f.getPath());", "-    return roots.toString();", "+    return result.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cb203128d6d57f5426390b128111552", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static File makeRelativeTo(File abs, File base) throws IOException, SecurityException", "signatureAfterChange": "   public static File makeRelativeTo(File abs, File base) throws IOException, SecurityException", "diff": ["-    if (!base.isDirectory()) {", "-      base = base.getParentFile();", "-    }", "+    if (!base.isDirectory()) base = base.getParentFile();", "-    String result = \"\";", "+    StringBuffer result = new StringBuffer();", "-      if (different) {", "-        result += \"..\" + File.separator;", "-      }", "+      if (different) result.append(\"..\").append(File.separator);", "-    if (diffIndex < 0) {", "-      diffIndex = basParts.length;", "-    }", "+    if (diffIndex < 0) diffIndex = basParts.length;", "-      result += absParts[i] + File.separator;", "+      result.append(absParts[i]).append(File.separator);", "-    result += last;", "-    return new File(result);", "+    result.append(last);", "+    return new File(result.toString());"]}], "num": 12666}