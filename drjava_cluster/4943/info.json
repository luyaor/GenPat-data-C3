{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f29878c34be67c4a5bfdb60cebdc0e31", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d4d3cc502d36977f24b5040a28d8044", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list)", "signatureAfterChange": "     public ConsList<? extends T> forNonempty(T first, ConsList<? extends T> rest)", "diff": ["-    public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list) {", "-      return list.rest();", "+    public ConsList<? extends T> forNonempty(T first, ConsList<? extends T> rest) {", "+      return rest;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "360def5d7a5e01855302714b2f5b3b54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list)", "signatureAfterChange": "     public ConsList<? extends T> forNonempty(T first, ConsList<? extends T> rest)", "diff": ["-    public ConsList<? extends T> forEmpty(ConsList.Empty<? extends T> list) { return _rest; }", "-    public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list) {", "-      return ConsList.cons(list.first(), list.rest().apply(this));", "+    public ConsList<? extends T> forEmpty() { return _toAppend; }", "+    public ConsList<? extends T> forNonempty(T first, ConsList<? extends T> rest) {", "+      return ConsList.cons(first, rest.apply(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51812626c7ed37421bebbf95c0ededbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list)", "signatureAfterChange": "     public ConsList<T> forNonempty(T first, ConsList<? extends T> rest)", "diff": ["-    public ConsList<? extends T> forEmpty(ConsList.Empty<? extends T> list) { return list; }", "-    public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list) {", "-      if (_pred.value(list.first())) { return ConsList.cons(list.first(), list.rest().apply(this)); }", "-      else { return list.rest().apply(this); }", "+    public ConsList<T> forEmpty() { return ConsList.empty(); }", "+    public ConsList<T> forNonempty(T first, ConsList<? extends T> rest) {", "+      if (_pred.contains(first)) { return ConsList.cons(first, rest.apply(this)); }", "+      else { return rest.apply(this); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a6f5196b1bb378d43fd6c43bd815353", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public T forNonempty(ConsList.Nonempty<? extends T> list)", "signatureAfterChange": "     public T forNonempty(T first, ConsList<? extends T> rest)", "diff": ["-    public T forNonempty(ConsList.Nonempty<? extends T> list) {", "-      return list.first();", "+    public T forNonempty(T first, ConsList<? extends T> rest) {", "+      return first;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b15e9a1c27fed1a35a07c7585ac0ac6e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 14, "signatureBeforeChange": "          public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list)", "signatureAfterChange": "          public ConsList<? extends T> forNonempty(T first, ConsList<? extends T> rest)", "diff": ["-    public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list) {", "-      return list.rest().apply(new ReverseHelper<T>(ConsList.cons(list.first(), _toAppend)));", "+    public ConsList<? extends T> forNonempty(T first, ConsList<? extends T> rest) {", "+      return rest.apply(new ReverseHelper<T>(ConsList.cons(first, _toAppend)));"]}], "num": 4943}