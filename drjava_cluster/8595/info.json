{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "678d17d9af21d51695fb3a1f8fcd5102", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ac780df88b3b47fb8f266652a6f5244", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4b6c56880670c4bb0f37de6a58c9d30d501c274a", "commitAfterChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   private void _switchPaneFocus(boolean next)", "signatureAfterChange": "   private synchronized void _switchPaneFocus(boolean next)", "diff": ["-  private void _switchPaneFocus(boolean next) {", "+  private synchronized void _switchPaneFocus(boolean next) {", "+    int numTabs = _tabbedPane.getTabCount();", "+    int selectedIndex = _tabbedPane.getSelectedIndex();", "-//      if (_currentDefPane.hasFocus()) {", "-        _switchToPane(_interactionsPane);", "-//      }     ", "-//      else if (_interactionsPane.hasFocus()) {", "-//        _switchToPane(_consolePane);", "-//      }", "-//      else if (_consolePane.hasFocus()) {", "-//        _switchToPane(_currentDefPane);", "-//      }", "+      if (_currentDefPane.hasFocus()) {", "+        // switch to the first tab if there is one", "+        if (numTabs > 0) {          ", "+          _switchToPane(_tabbedPane.getComponentAt(0));", "+        }", "+      }     ", "+      else if (numTabs == selectedIndex + 1) {", "+        // we're at the last tab, switch to the current def pane", "+        _switchToPane(_currentDefPane);", "+      }", "+      else {", "+        // switch to the next tab pane", "+        _switchToPane(_tabbedPane.getComponentAt(selectedIndex + 1));", "+      }", "-//      if (_interactionsPane.hasFocus()) {", "+      if (_currentDefPane.hasFocus()) {", "+        // switch to the last tab if there is one", "+        if (numTabs > 0) {          ", "+          _switchToPane(_tabbedPane.getComponentAt(numTabs - 1));", "+        }", "+      }     ", "+      else if (selectedIndex == 0) {", "+        // we're at the first tab, switch to the current def pane", "-//      }", "-//      else if (_currentDefPane.hasFocus()) {", "-//        _switchToPane(_consolePane);", "-//      }", "-//      else if (_consolePane.hasFocus()) {", "-//        _switchToPane(_interactionsPane);", "-//      }", "+      }", "+      else {", "+        // switch to the previous tab pane", "+        _switchToPane(_tabbedPane.getComponentAt(selectedIndex - 1));", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c969da9f0988f4b24be53bf8042f8903", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "e783b76611d7e152e89196e486dc2b772b1c80a9", "commitAfterChange": "b796c376864058d232f1be02ccfb0bd7548b3f89", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   private synchronized void _updateWatches() throws DebugException", "signatureAfterChange": "   private synchronized void _updateWatches() throws DebugException", "diff": ["-", "-          // If we don't find it here, loop through any enclosing classes", "-          //  Start at this$N, where N is the number of dollar signs in", "-          //  the reference type's name, minus one.", "-          int outerIndex = numDollars - 1;", "-          Field outerThis = outerRt.fieldByName(\"this$\" + outerIndex);", "-          while ((field == null) && (outerThis != null)) {", "-            outer = (ObjectReference) outer.getValue(outerThis);", "-            outerRt = outer.referenceType();", "-            field = outerRt.fieldByName(currName);", "+          ", "+          if (obj != null) {", "+            // We're not in a static context", "-            if (field == null) {", "-              // Enter the loop again with the next outer enclosing class", "-              outerIndex--;", "-              outerThis = outerRt.fieldByName(\"this$\" + outerIndex);", "+            // If we don't find it in this class, loop through any enclosing ", "+            // classes. Start at this$N, where N is the number of dollar signs in", "+            // the reference type's name, minus one.", "+            int outerIndex = numDollars - 1;", "+            Field outerThis = outerRt.fieldByName(\"this$\" + outerIndex);", "+            while ((field == null) && (outerThis != null)) {", "+              outer = (ObjectReference) outer.getValue(outerThis);", "+              outerRt = outer.referenceType();", "+              field = outerRt.fieldByName(currName);", "+              ", "+              if (field == null) {", "+                // Enter the loop again with the next outer enclosing class", "+                outerIndex--;", "+                outerThis = outerRt.fieldByName(\"this$\" + outerIndex);", "+              }", "+            }", "+          }", "+          else {", "+            // We're in a static context", "+            ", "+            // If we don't find it in this class, loop through any enclosing", "+            // classes. Do this by loading any outer classes by invoking the ", "+            // method on the class loader that loaded this class and passing", "+            // it the class name with the last class removed each time.", "+            String rtClassName = outerRt.name();", "+            int index = rtClassName.lastIndexOf(\"$\");", "+            while ((field == null) && (index != -1)) {", "+              rtClassName = rtClassName.substring(0, index);", "+              List l = _vm.classesByName(rtClassName);", "+              if (l.isEmpty()) {", "+                // field is null, we will end up setting", "+                // the value to no value", "+                break;", "+              }", "+              outerRt = (ReferenceType)l.get(0);", "+              field = outerRt.fieldByName(currName);", "+              ", "+              if (field == null) {", "+                // Enter the loop again with the next outer enclosing class", "+                index = rtClassName.lastIndexOf(\"$\");", "+              }"]}], "num": 8595}