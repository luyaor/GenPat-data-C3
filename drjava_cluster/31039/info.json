{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7b5bbdaa19727f604862fb71605ce86", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2881295fe7b64d494d7592bb1487cbcf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "1313de8815d48e0a1c60eb5bee6900b6b7af3993", "commitAfterChange": "802c4acbf71daa5d149dbcd67d1f360241574951", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public JUnitErrorListPane()", "signatureAfterChange": "     public JUnitErrorListPane()", "diff": ["-      super();", "-      this.removeMouseListener(defaultMouseListener);", "-      this.addMouseListener(_popupAdapter);", "+      removeMouseListener(defaultMouseListener);", "+      _popMenu = new JPopupMenu();", "+      _popMenu.add(new AbstractAction(\"Show Stack Trace\") {", "+        public void actionPerformed(ActionEvent ae) {", "+          if (_error != null) {", "+            _displayStackTrace(_error);", "+          }", "+        }", "+      });", "+      _error = null;", "+      _setupStackTraceFrame();", "+      addMouseListener(new PopupAdapter());", "+      _runningTestName = null;", "+      _runningTestNamePositions = new HashMap<String, Position>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "700ff6953a0126a6dd1186c5a6f5c731", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "295fa1cba44642fedd75887ecbe0d948c2375de0", "commitAfterChange": "9cb55009db1cb8bd2aab8df62ce303060f475c4b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private void createPopupMenu()", "signatureAfterChange": "   private void createPopupMenu()", "diff": ["+      ", "+      // Breakpoint", "+      ", "+      // Watchpoint", "+      JMenuItem watchpointItem = new JMenuItem(\"Add Watchpoint\");", "+      watchpointItem.addActionListener( new AbstractAction() {", "+        public void actionPerformed( ActionEvent ae ) {", "+          //Make sure that the watchpoint is set on the *clicked* line, if within a selection block.", "+          setCaretPosition(viewToModel(_popupMenuMA.getLastMouseClick().getPoint()));", "+          _mainFrame.addWatchpoint();", "+        }", "+      });", "+      _addWatchpointMenuItem = _popMenu.add(watchpointItem);", "+      _addWatchpointMenuItem.setEnabled(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8b3f8640ff7e5023e6633ba6c10b608", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelConverter.java", "commitBeforeChange": "a2ecf7f1dd3c4baa5e86a7675beca418200c8154", "commitAfterChange": "aedcb983e991914df596045d19b04323f01312ad", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>   convert(File[] files, Options options)", "signatureAfterChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>   convert(File[] files, Options options, Map<File,List<String>> sourceToTopLevelClassMap)", "diff": ["+    *        an empty map should be passed in; it will be filled out by this method */", "+  public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>", "+  convert(File[] files, Options options, Map<File,List<String>> sourceToTopLevelClassMap) {", "+            final List<String> topLevelClasses = new ArrayList<String>();", "+            for (TypeDefBase t: sf.getTypes()) {", "+              t.visit(new JExpressionIFAbstractVisitor_void() {", "+                public void forClassDef(ClassDef that) {", "+                  topLevelClasses.add(that.getName().getText());", "+                }", "+              });", "+            }", "+            sourceToTopLevelClassMap.put(f,topLevelClasses);"]}], "num": 31039}