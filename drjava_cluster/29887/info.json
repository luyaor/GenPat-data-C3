{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98bffbf658d79ad9e79d64babde968e8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d3e129e27b6aeca57a2a0bae08da737", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "b18f1653904355c80d15c949af97466afd1bb285", "commitAfterChange": "3f3a8c8fcf83f21f81d279554b4af7fbd0689bb1", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "      public void testIndentingCorrectLine() throws BadLocationException", "signatureAfterChange": "      public void testIndentingCorrectLine() throws BadLocationException", "diff": ["-//    System.out.println(\"test1 = \\n\" + test1 + \"\\n length = \" + test1.length());", "-//    System.out.println(\"test1 = \\n\" + doc.getText() + \"\\n length = \" + doc.getLength());", "+    System.out.println(\"test1 = \\n\" + test1 + \"\\n length = \" + test1.length());", "+    System.out.println(\"test1Correct = \\n\" + test1Correct + \" \\n length = \" + test1Correct.length());", "+    System.out.println(\"doc = \\n\" + doc.getText() + \"\\n length = \" + doc.getLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7678def01d2732d9da6b283942e2288c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "d8a9b1581cb442d4a3822bc3181eb17c4d09e8c8", "commitAfterChange": "7a303c2457f60ceae3b286a0d52733d97d66ab81", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   private static String _readThroughIndex(int line, int column)", "signatureAfterChange": "   private static String _readThroughIndex(int line, int column)", "diff": ["-", "+    System.out.println(\"_readThroughIndex line=\"+line+\", column=\"+column);", "-        result.append(l).append(newLine);", "+        result.append(l);", "+        if (l.length()>0) result.append(' ');", "+        result.append(\"//[\").append(_fileInLine).append(']').append(newLine);", "-      ", "+      System.out.println(\"\\tnow line=\"+line+\", column=\"+column);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac7b237d5c6addf2a4a34887372bbce8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "cf618408a33a48d8d67593ba48f6bc428f2c9962", "commitAfterChange": "7a442b5cfa9a0f4e9a55263f6573cffccef795af", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   private void insertFolderSortedInto(InnerNode child, InnerNode parent)", "signatureAfterChange": "   private void insertFolderSortedInto(InnerNode child, InnerNode parent)", "diff": ["+    System.out.println(\"inserting \" + child + \" into \" + parent);", "-        oldName = ((InnerNode)parentsKid).getData().toString();", "+        oldName = ((InnerNode)parentsKid).toString();", "+        System.out.println(\"comparing \" + newName + \" with \" + oldName + \" = \" + (newName.toUpperCase().compareTo(oldName.toUpperCase())));", "+          System.out.println(\" found! at \" + i);", "-    ", "+    System.out.println(\" at \" + i);"]}], "num": 29887}