{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccb23dec185856f3eddf1d24dfa18e7d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c710dd837209b32b9213294740f9632", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "          public void testForCastExpression()", "signatureAfterChange": "          public void testForCastExpression()", "diff": ["-      CastExpression ce = new CastExpression(SourceInfo.NO_INFO, ", "-                                             new PrimitiveType(SourceInfo.NO_INFO, \"dan\"), ", "-                                             new NullLiteral(SourceInfo.NO_INFO));", "+      CastExpression ce = new CastExpression(SourceInfo.NONE, new PrimitiveType(SourceInfo.NONE, \"dan\"), NULL_LITERAL);", "-        new CastExpression(SourceInfo.NO_INFO,", "-                           new PrimitiveType(SourceInfo.NO_INFO, \"int\"),", "-                           new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"notReal\")));", "+        new CastExpression(SourceInfo.NONE,", "+                           new PrimitiveType(SourceInfo.NONE, \"int\"),", "+                           new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"notReal\")));", "-      CastExpression ce3 = new CastExpression(SourceInfo.NO_INFO,", "-                                              new PrimitiveType(SourceInfo.NO_INFO, \"int\"),", "-                                              new DoubleLiteral(SourceInfo.NO_INFO, 5));", "+      CastExpression ce3 = new CastExpression(SourceInfo.NONE,", "+                                              new PrimitiveType(SourceInfo.NONE, \"int\"),", "+                                              new DoubleLiteral(SourceInfo.NONE, 5));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1639d8ff075fd71d8dbe9df4c8772481", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "           public void testForCastExpression()", "signatureAfterChange": "           public void testForCastExpression()", "diff": ["-      CastExpression ce = new CastExpression(JExprParser.NO_SOURCE_INFO, ", "-                                             new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"dan\"), ", "-                                             new NullLiteral(JExprParser.NO_SOURCE_INFO));", "+      CastExpression ce = new CastExpression(SourceInfo.NO_INFO, ", "+                                             new PrimitiveType(SourceInfo.NO_INFO, \"dan\"), ", "+                                             new NullLiteral(SourceInfo.NO_INFO));", "-      CastExpression ce2 = new CastExpression(JExprParser.NO_SOURCE_INFO,", "-                                             new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"),", "-                                             new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"notReal\")));", "+      CastExpression ce2 = new CastExpression(SourceInfo.NO_INFO,", "+                                             new PrimitiveType(SourceInfo.NO_INFO, \"int\"),", "+                                             new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"notReal\")));", "-      CastExpression ce3 = new CastExpression(JExprParser.NO_SOURCE_INFO,", "-                                             new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"),", "-                                             new DoubleLiteral(JExprParser.NO_SOURCE_INFO, 5));", "+      CastExpression ce3 = new CastExpression(SourceInfo.NO_INFO,", "+                                             new PrimitiveType(SourceInfo.NO_INFO, \"int\"),", "+                                             new DoubleLiteral(SourceInfo.NO_INFO, 5));"]}], "num": 31210}