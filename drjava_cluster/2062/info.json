{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8258c00ec9ce0603e29caac72f9bbb37", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2690e13c1c83ff7f5a96c369599fe1f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public synchronized ClassPathVector getAugmentedClassPath()", "signatureAfterChange": "      public Iterable<File> getAugmentedClassPath()", "diff": ["-   */", "-  public synchronized ClassPathVector getAugmentedClassPath() {", "-    ClassPathVector ret = new ClassPathVector();", "-", "-    for (ClassPathEntry e: _classPathManager.getProjectCP())  ret.add(e.getEntry().toString());", "-", "-    for (ClassPathEntry e: _classPathManager.getBuildDirectoryCP()) ", "-      ret.add(e.getEntry().toString());", "-    ", "-    for (ClassPathEntry e: _classPathManager.getProjectFilesCP())", "-      ret.add(e.getEntry().toString());", "-", "-    for (ClassPathEntry e: _classPathManager.getExternalFilesCP())", "-      ret.add(e.getEntry().toString());", "-", "-    for (ClassPathEntry e: _classPathManager.getExtraCP())", "-      ret.add(e.getEntry().toString());", "-", "-    return ret;", "+  public Iterable<File> getAugmentedClassPath() { return getClassPath(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5051942afc39a1b4f523f8af4fddafd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "d6e5a814c07284651f7c529a85f464592512b19a", "commitAfterChange": "7068b1b7376b1c3813644f4d8ea2780684ca5f7c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "signatureAfterChange": "\r   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "diff": ["-      msg(\"root: \"+root);\r", "-        msg(\"\\tsubdir: \"+subdir);\r", "-    for(JarJDKToolsLibrary javaLib: collapsed) {\r", "-      msg(\"JDK: \"+javaLib.version());\r", "-    }\r", "-    for(JarJDKToolsLibrary mintLib: mintCollapsed) {\r", "-      msg(\"Mint: \"+mintLib.version());\r", "-    }\r", "-    \r", "-      msg(\"Mint version \"+mintVersion.majorVersion()+\": \"+mintVersion);\r", "-        msg(\"\\tlooking for exact version: Java version \"+javaVersion.majorVersion()+\": \"+javaVersion);\r", "-          msg(\"\\tlooking for major version Java version \"+javaVersion.majorVersion()+\": \"+javaVersion);\r", "-        msg(\"\\t#### picked \"+found.version());\r", "-    Iterable<JarJDKToolsLibrary> composed =\r", "-      IterUtil.compose(collapsed,IterUtil.reverse(IterUtil.collapse(javaMintResults.values())));\r", "-\r", "-    for(JarJDKToolsLibrary composedLib: composed) {\r", "-      msg(\"Composed: \"+composedLib.version());\r", "-    }\r", "-    return composed;\r", "+    return IterUtil.compose(collapsed,IterUtil.reverse(IterUtil.collapse(javaMintResults.values())));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d2d387c3a5fe4231d441da19e3abb82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/History.java", "commitBeforeChange": "772d55948f939a494c28e52313a1162cba5534b8", "commitAfterChange": "444cb9c318707ca2f9a6eaa5854ba2be0fcd383e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void writeToFile(FileSaveSelector selector, String editedVersion) throws IOException", "signatureAfterChange": "   public void writeToFile(FileSaveSelector selector) throws IOException", "diff": ["+   */", "+  public void writeToFile(FileSaveSelector selector) throws IOException {", "+    writeToFile(selector, getHistoryAsStringWithSemicolons());", "+  }", "-  public void writeToFile(FileSaveSelector selector, String editedVersion) throws IOException {", "-      if (c.getName().indexOf('.') == -1) {", "-        c = new File(c.getAbsolutePath() + \".\" +", "-                     InteractionsHistoryFilter.HIST_EXTENSION);", "-      FileOutputStream fos = new FileOutputStream(c);", "-      OutputStreamWriter osw = new OutputStreamWriter(fos);", "-      BufferedWriter bw = new BufferedWriter(osw);", "-      if (editedVersion == null) {", "-        editedVersion = getHistoryAsStringWithSemicolons();", "-      }", "-      bw.write(HISTORY_FORMAT_VERSION_2 + editedVersion, 0, HISTORY_FORMAT_VERSION_2.length() + editedVersion.length());", "-      bw.close();"]}], "num": 2062}