{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b959c2cdf22d18c83185ea46e3b137b2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65c4bab183f7ff42398ec9d5d9896263", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "93bb4da1a23773a035879ef207e07af07446c39f", "commitAfterChange": "0a7bf024d048ea8c858680b0ac23e24e5ae6fe7d", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": "   public void generateJavaAPISet()", "signatureAfterChange": "   public void generateJavaAPISet()", "diff": ["-      Set<JavaAPIListEntry> junitAPIList = _generateJavaAPISet(DrJava.getConfig().getSetting(JUNIT_LINK) + \"/\",", "-                                                               \"\", // relative links", "-                                                               \"/allclasses-junit4.4.html\");", "-      _javaAPISet.addAll(junitAPIList);", "+      try {", "+        Set<JavaAPIListEntry> junitAPIList = _generateJavaAPISet(DrJava.getConfig().getSetting(JUNIT_LINK) + \"/\",", "+                                                                 \"\", // relative links", "+                                                                 new URL(DrJava.getConfig().getSetting(JUNIT_LINK)+", "+                                                                             \"/allclasses-frame.html\"));", "+        _javaAPISet.addAll(junitAPIList);", "+      }", "+      catch(MalformedURLException mue) { /* ignore, we'll just not put this class in the list */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe91094b1ca4503544969329a9c56c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "1018be24b33ba74b1be6da8d72dc97e6545e20b1", "commitAfterChange": "c0c2e54a62410a429f0ffcedb26fd38c6f82937b", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "diff": ["-        assertEquals(\"saved file name\", file, f);", "-        saveCount++;", "+        try {", "+          assertEquals(\"saved file\", file.getCanonicalFile(),", "+                       f.getCanonicalFile());", "+          saveCount++;", "+        }", "+        catch (IOException ioe) {", "+          fail(\"could not get canonical file\");", "+        }", "-    assertEquals(\"no backup was made\", false, backup.exists());", "+    assertFalse(\"no backup was made\", backup.exists());"]}], "num": 18622}