{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa19ab7d1a3670c7a1fe376ef6eb6227", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3915af39b4ac8ed8d42b9f757f1f1fa4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public Node visit(VariableDeclaration node)", "signatureAfterChange": "   public Node visit(AssertStatement node)", "diff": ["+   */", "+  public Node visit(AssertStatement node) {", "+    //Visits the components of this node", "+    Node n = node.getCondition();", "+    Node o = n.acceptVisitor(this);", "+    if(o != null) {", "+      rejectReferenceType(o,n);", "+      node.setCondition((Expression)o);", "+    }", "+    ", "+    n = node.getFailString();", "+    if(n != null) {", "+      o = n.acceptVisitor(this);", "+      if(o != null) {", "+        node.setFailString((Expression)o);", "+      }", "+    }", "+    return null;    ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c63da71baa50c11d319ea0581c66077c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public Object visit(BlockStatement node)", "signatureAfterChange": "   public Object visit(AssertStatement node)", "diff": ["+   */", "+  public Object visit(AssertStatement node) {", "+    if (! (((Boolean)node.getCondition().acceptVisitor(this)).booleanValue())) {", "+      String toThrow = \"\";", "+      Expression n = node.getFailString();", "+      if(n != null) {", "+        toThrow = n.acceptVisitor(this).toString();", "+      }", "+      throw new AssertionError(toThrow);", "+    }", "+    return null;", "+  }"]}], "num": 9184}