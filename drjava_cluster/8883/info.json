{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be98e834b4cd921d5150b6a58a8eb95d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15fd40aa51318d52ae3820550a4323d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "04d5f67f3ab0801dcf0753d1c84455182368f783", "commitAfterChange": "dd27d69f437c114ad258abba00f7d581b096ce79", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void junitAll()", "signatureAfterChange": "   public void junitAll()", "diff": ["-    synchronized (_compilerModel) {", "-      //reset the JUnitErrorModel, fixes bug #907211 \"Test Failures Not Cleared Properly\".", "-      _junitErrorModel = new JUnitErrorModel(new JUnitError[0], null, false);", "-      Iterator<OpenDefinitionsDocument> it =", "-        _getter.getDefinitionsDocuments().iterator();", "-      HashMap<String,OpenDefinitionsDocument> classNamesToODDs =", "-        new HashMap<String,OpenDefinitionsDocument>();", "-      ArrayList<String> classNames = new ArrayList<String>();", "-      ArrayList<File> files = new ArrayList<File>();", "-      while (it.hasNext()) {", "-        try {", "-          OpenDefinitionsDocument doc = it.next();", "-          if (!doc.isUntitled()) {", "-            String cn = doc.getQualifiedClassName();", "-            classNames.add(cn);", "-            File f;", "-            try {", "-              f = doc.getFile();", "-            }", "-            catch (FileMovedException fme) {", "-              f = fme.getFile();", "-            }", "-            files.add(f);", "-            classNamesToODDs.put(cn, doc);", "-          }", "-        }", "-        ", "-        catch (ClassNameNotFoundException cnnfe) {", "-          // don't add it to the test suite", "-        }", "-      }", "-      List<String> tests = _jvm.runTestSuite(classNames, files, true);", "-      ArrayList<OpenDefinitionsDocument> odds =", "-        new ArrayList<OpenDefinitionsDocument>();", "-      Iterator<String> it2 = tests.iterator();", "-      while (it2.hasNext()) {", "-        odds.add(classNamesToODDs.get(it2.next()));", "-      }", "-      _notifier.junitStarted(odds);", "-      _isTestInProgress = true;", "-    }", "+        junitDocs(_getter.getDefinitionsDocuments());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c9a3f00a304d39fb8f926d64349df0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "eeab4bd745c9b7c513ba67239c4619739d7387ef", "commitAfterChange": "cfea3e13a321911fb98c8bdb6bf527cebe9e8065", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "       public void junitDocs(List<OpenDefinitionsDocument> lod)", "signatureAfterChange": "       public void junitDocs(List<OpenDefinitionsDocument> lod)", "diff": ["-    synchronized (_compilerModel) {", "-      //reset the JUnitErrorModel, fixes bug #907211 \"Test Failures Not Cleared Properly\".", "-      _junitErrorModel = new JUnitErrorModel(new JUnitError[0], null, false);", "-      ", "-      Iterator<OpenDefinitionsDocument> it = lod.iterator();", "-//        _getter.getDefinitionsDocuments().iterator();", "-      HashMap<String,OpenDefinitionsDocument> classNamesToODDs =", "-        new HashMap<String,OpenDefinitionsDocument>();", "-      ArrayList<String> classNames = new ArrayList<String>();", "-      ArrayList<File> files = new ArrayList<File>();", "-      while (it.hasNext()) {", "-        try {", "-          OpenDefinitionsDocument doc = it.next();", "-          String cn = doc.getQualifiedClassName();", "-          classNames.add(cn);", "-          File f;", "-          try {", "-            f = doc.getFile();", "-          }", "-          catch (FileMovedException fme) {", "-            f = fme.getFile();", "-          }", "-          files.add(f);", "-          classNamesToODDs.put(cn, doc);", "-        }", "-        catch (ClassNameNotFoundException cnnfe) {", "-          // don't add it to the test suite", "-        }", "-      }", "-      List<String> tests = _jvm.runTestSuite(classNames, files, true);", "-      ArrayList<OpenDefinitionsDocument> odds =", "-        new ArrayList<OpenDefinitionsDocument>();", "-      Iterator<String> it2 = tests.iterator();", "-      while (it2.hasNext()) {", "-        odds.add(classNamesToODDs.get(it2.next()));", "-      }", "-      _notifier.junitStarted(odds);", "-      _isTestInProgress = true;", "-    }", "+    junitOpenDefDocs(lod, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd153ea91849ae4ee75dd7dedce6b295", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "df9cbdf4ec8cbcbc3942b966a48a15d33dcac7ed", "commitAfterChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private void junitOpenDefDocs(final List<OpenDefinitionsDocument> lod, final boolean allTests)", "signatureAfterChange": "   private void junitOpenDefDocs(final List<OpenDefinitionsDocument> lod, final boolean allTests)", "diff": ["-    //reset the JUnitErrorModel, fixes bug #907211 \"Test Failures Not Cleared Properly\".", "+    // Reset the JUnitErrorModel, fixes bug #907211 \"Test Failures Not Cleared Properly\".", "-", "-    // Gets system classpaths from the main JVM so that junit tests can find every class file.", "-    // Given as one long String, this separates the paths into a list of strings. 3/12/05", "-", "-//    LinkedList<String> classpaths = separateClasspath(IOUtil.pathToString(getClasspath()));", "-    // new ScrollableDialog(null, \"classpaths assembled in junitOpenDefDocs: \" + classpaths, \"\", \"\").show();", "-    ", "-    if (_model.hasOutOfSyncDocuments() || _model.hasModifiedDocuments()) {", "-      /* hasOutOfSyncDocments() can return false when some documents have not been successfully compiled; the granularity", "-         of time-stamping and the presence of multiple classes in a file (some of which compile successfully) can produce ", "-         \\false reports.  */", "+    if (_model.hasOutOfSyncDocuments(lod) || _model.hasModifiedDocuments(lod)) {", "+      /* hasOutOfSyncDocments(lod) can return false when some documents have not been successfully compiled; the ", "+       * granularity of time-stamping and the presence of multiple classes in a file (some of which compile ", "+       * successfully) can produce false reports.  */", "-              if (_model.hasOutOfSyncDocuments() || _model.getNumCompErrors() > 0) {", "+              if (_model.hasOutOfSyncDocuments(lod) || _model.getNumCompErrors() > 0) {"]}], "num": 8883}