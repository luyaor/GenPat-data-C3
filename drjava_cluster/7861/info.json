{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "813f5ea04ecda390fbd77d9c6484729b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06b3ba68a117cb6823407aa63448f0e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "b1ab5639c12e11d9d4773b42d5fad59d564680b4", "commitAfterChange": "c11d4ce83dfacd1ad010305b8bbd51b80abac1bf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void junitAll(List<String> qualifiedClassnames, List<File> files)", "signatureAfterChange": "   public void junitAll(List<String> qualifiedClassnames, List<File> files)", "diff": ["-      try { _jvm.runTestSuite(); }", "-      catch(IOException e) { ", "+      try { _jvm.runTestSuite(); } ", "+      catch(Throwable t) {", "-       throw new UnexpectedException(e); ", "+       throw new UnexpectedException(t); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "234b3c98e64f10bafb77630ac21594aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "b1ab5639c12e11d9d4773b42d5fad59d564680b4", "commitAfterChange": "c11d4ce83dfacd1ad010305b8bbd51b80abac1bf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void junitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "signatureAfterChange": "      private void junitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "diff": ["-            if (!classDirs.contains(temp)) classDirs.addLast(temp);", "+            if (! classDirs.contains(temp)) classDirs.addLast(temp);", "-      catch(IOException e) {", "+      catch(Throwable t) {", "-        throw new UnexpectedException(e);", "+        throw new UnexpectedException(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53d54ed5b3437c0222b9fab98b56f2b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "9bce8671af84f7e65989f2592fb3cf5b37102c42", "commitAfterChange": "93444d1043407c3464f823ecb9abe56a129f07a8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public String getText(int offset, int len)", "signatureAfterChange": "     public String getText(int offset, int len)", "diff": ["-      try {", "-        return text.substring(offset, offset + len);", "-      }", "-      catch(Exception e) { ", "-        _log.log(\"getText(...) threw the exception: \" + e); ", "-        throw new UnexpectedException(e);", "-      }", "+      ", "+      return text.substring(offset, offset + len);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67069f910f006b09cecbc44fa2f1267b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "43f41a369ae2fab400ffccc265d57e86cf8989d7", "commitAfterChange": "e0e957550963e046bdbb3a11cc062ff5ce5c9c2b", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "   private void _copyBack(ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,      IncompatibleThreadStateException, AbsentInformationException,      InvocationException, DebugException", "signatureAfterChange": "   private void _copyBack(ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,      IncompatibleThreadStateException, AbsentInformationException,      InvocationException, DebugException", "diff": ["-          break;", "+          break;          ", "+        catch (InvalidTypeException ite) {", "+          printMessage(\"Could not update the value of '\" + localVar.name() + \"' (invalid type exception)\");", "+          break;          ", "+        }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7408082498e4657eadb1debbab44bf60", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/SlaveJVMRunner.java", "commitBeforeChange": "4ff3b419fc61aa60e60ddc360a0c79269d4527c2", "commitAfterChange": "b05444f0049567ef7fdf6f83b0e6e8f8afaaa2b7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static void main(String[] args)", "signatureAfterChange": "   public static void main(String[] args)", "diff": ["-                ", "+        ", "-      catch (Exception e) {", "-        System.err.println(\"Exception while instantiation slave \" + args[1]);", "+      catch (Throwable e) {", "+        System.err.println(\"Exception while instantiating slave \" + args[1]);", "-    catch (Exception e) {", "+    catch (Throwable e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a91fc42ae558cb7beea4480f3958858b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void move(int count)", "signatureAfterChange": "   public void move(int count)", "diff": ["-  */", "+   */", "-    rmb.move(count);", "-    rmc.move(count);", "+    try {", "+      rmb.move(count);", "+      rmc.move(count);", "+    }", "+    catch(IllegalArgumentException e) { ", "+      resetLocation();", "+      throw new UnexpectedException(e);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b71637fd64c21de087f25f7307d4e947", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void interpret(final String s)", "signatureAfterChange": "   public void interpret(final String s)", "diff": ["-      Throwable cause = ume.getCause();", "+", "+      if (Utilities.TEST_MODE) { ", "+//        Utilities.show(\"Unmarshalling exception found!\");", "+//        System.err.println(\"Exception is: \" + ume);", "+//        ume.printStackTrace();", "+        throw new UnexpectedException(ume);", "+      }", "+        ", "+      Throwable cause = ume.getCause(); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92336be20d34ceff6c5077466663703", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    private static void createAndShowGUI(final String[] args)", "signatureAfterChange": "    private static void createAndShowGUI(final String[] args)", "diff": ["-                ", "-        try { initConfig(); }", "-        catch (IllegalStateException ise) {", "-          // Shouldn't happen: _config shouldn't be assigned yet", "-          throw new UnexpectedException(ise);", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e12768473d7854c279b7abbe81d172a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "f8733505f202fffe732820ec266645b66b5ecb1b", "commitAfterChange": "f858bdc4a8556fa2d602de70e64361813405ec96", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void junitClasses(List<String> qualifiedClassnames, List<File> files)", "signatureAfterChange": "   public void junitClasses(List<String> qualifiedClassnames, List<File> files)", "diff": ["-      catch(Throwable t) {", "-//        System.err.println(\"Threw exception \" + t);", "+      catch(Exception e) {", "+//        System.err.println(\"Threw exception \" + e);", "-        throw new UnexpectedException(t); ", "+        throw new UnexpectedException(e); "]}], "num": 7861}