{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a66fc7a13a21e01d6673ee62addf9765", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4955e4e6f25ae4f0fb99664e74e00168", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/InteractionsDocument.java", "commitBeforeChange": "42453ef03053968f9ca85cc1f502a43bd9378c76", "commitAfterChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public void eval()", "signatureAfterChange": "    public void eval()", "diff": ["-\t\t\tif(result != JavaInterpreter.NO_RESULT)", "+      String resultStr;", "+", "+      try {", "+        resultStr = String.valueOf(result);", "+      }", "+      catch (Throwable t) {", "+        // Very weird. toString() on result must have thrown this exception!", "+        // Let's act like DynamicJava would have if this exception were thrown", "+        // and rethrow as RuntimeException", "+        throw new RuntimeException(t.toString());", "+      }", "+", "+\t\t\tif(result != JavaInterpreter.NO_RESULT) {", "-\t\t\telse", "+      }", "+\t\t\telse {", "+      }", "-    catch (Exception e) {", "+    catch (Throwable e) {", "+      String message = e.getMessage();", "+      // Don't let message be null. Java sadly makes getMessage() return", "+      // null if you construct an exception without a message.", "+      if (message == null) {", "+        message = e.toString();", "+        e.printStackTrace();", "+      }", "+", "-\t\t\t\tif (e.getMessage().startsWith(\"koala.dynamicjava.interpreter.InterpreterException: Encountered\"))", "+\t\t\t\tif (message.startsWith(\"koala.dynamicjava.interpreter.InterpreterException: Encountered\"))", "-          int end = e.toString().indexOf('\\n');", "-          super.insertString(getLength(), \"\\nError in evaluation: \" +", "-              \"Invalid syntax\\n\", null);", "+          super.insertString(getLength(),", "+                             \"\\nError in evaluation: \" +", "+                             \"Invalid syntax\\n\", null);", "-          super.insertString(getLength(), \"\\nError in evaluation: \" + e.getMessage() + \"\\n\", null);", "+          super.insertString(getLength(),", "+                             \"\\nError in evaluation: \" + message + \"\\n\",", "+                             null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6774ebfb0c4e9a5f0918051cc951757a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "42453ef03053968f9ca85cc1f502a43bd9378c76", "commitAfterChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public void eval()", "signatureAfterChange": "    public void eval()", "diff": ["-\t\t\tif(result != JavaInterpreter.NO_RESULT)", "+      String resultStr;", "+", "+      try {", "+        resultStr = String.valueOf(result);", "+      }", "+      catch (Throwable t) {", "+        // Very weird. toString() on result must have thrown this exception!", "+        // Let's act like DynamicJava would have if this exception were thrown", "+        // and rethrow as RuntimeException", "+        throw new RuntimeException(t.toString());", "+      }", "+", "+\t\t\tif(result != JavaInterpreter.NO_RESULT) {", "-\t\t\telse", "+      }", "+\t\t\telse {", "+      }", "-    catch (Exception e) {", "+    catch (Throwable e) {", "+      String message = e.getMessage();", "+      // Don't let message be null. Java sadly makes getMessage() return", "+      // null if you construct an exception without a message.", "+      if (message == null) {", "+        message = e.toString();", "+        e.printStackTrace();", "+      }", "+", "-\t\t\t\tif (e.getMessage().startsWith(\"koala.dynamicjava.interpreter.InterpreterException: Encountered\"))", "+\t\t\t\tif (message.startsWith(\"koala.dynamicjava.interpreter.InterpreterException: Encountered\"))", "-          int end = e.toString().indexOf('\\n');", "-          super.insertString(getLength(), \"\\nError in evaluation: \" +", "-              \"Invalid syntax\\n\", null);", "+          super.insertString(getLength(),", "+                             \"\\nError in evaluation: \" +", "+                             \"Invalid syntax\\n\", null);", "-          super.insertString(getLength(), \"\\nError in evaluation: \" + e.getMessage() + \"\\n\", null);", "+          super.insertString(getLength(),", "+                             \"\\nError in evaluation: \" + message + \"\\n\",", "+                             null);"]}], "num": 29546}