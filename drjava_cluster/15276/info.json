{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a2e566c3a25ffd2bf76df07dde72958", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "969c052c267e450b5f8f106fe9c694a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocumentTest.java", "commitBeforeChange": "7ddee5dc15678210d67bde01004f3a1d7919cf7b", "commitAfterChange": "1a6fd1a0e7e181e52da6f98c6b2f1cab31c48798", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected void setUp() throws Exception", "signatureAfterChange": "   protected void setUp() throws Exception", "diff": ["-    mf = new MainFrame();", "-    GlobalModel gm = mf.getModel();", "-    _model = gm.getInteractionsModel();", "-    _adapter = gm.getSwingInteractionsDocument();", "-    _doc = gm.getInteractionsDocument();", "-    assert _model._pane != null;  // MainFrame creates an interactions controller which creates the pane.", "-    Utilities.clearEventQueue();", "+    // MainFrame creation must run in event thread because event thread is already running", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        mf = new MainFrame();", "+        GlobalModel gm = mf.getModel();", "+        _model = gm.getInteractionsModel();", "+        _adapter = gm.getSwingInteractionsDocument();", "+        _doc = gm.getInteractionsDocument();", "+        assert _model._pane != null;  // MainFrame creates an interactions controller which creates the pane.", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc35de7c69367bf70413a80680c987f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      public void testPromptListClearedOnReset() throws Exception", "signatureAfterChange": "      public void testPromptListClearedOnReset() throws Exception", "diff": ["-    MainFrame mf = new MainFrame();", "-    ", "+    final MainFrame _mf = new MainFrame();", "-    GlobalModel gm = mf.getModel();", "-    _controller = mf.getInteractionsController();", "+    GlobalModel gm = _mf.getModel();", "+    _controller = _mf.getInteractionsController();", "-    _pane = mf.getInteractionsPane();", "+    _pane = _mf.getInteractionsPane();", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() { _pane.resetPrompts(); }", "-    });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { _pane.resetPrompts(); } });", "-    ", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() { _pane.setCaretPosition(_doc.getLength()); }", "-    });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { _pane.setCaretPosition(_doc.getLength()); } });"]}], "num": 15276}