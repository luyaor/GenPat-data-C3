{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8005747bee07fcc12c6f3b60903fc4f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46411f02ad5c7a5d9edd0d2e4a7034a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void interpret(String s, String interpreterName)", "signatureAfterChange": "   public InterpretResult interpret(String s, String interpreterName)", "diff": ["-   */", "-  public void interpret(String s, String interpreterName) { interpret(s, getInterpreter(interpreterName));  }", "+   */", "+  public InterpretResult interpret(String s, String interpreterName) {", "+    Interpreter i = _interpreters.get(interpreterName);", "+    if (i == null) {", "+      throw new IllegalArgumentException(\"Interpreter '\" + interpreterName + \"' does not exist.\");", "+    }", "+    return interpret(s, i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "497bc4b7a4ec111391259971cf9cef58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public void ensureInterpreterConnected()", "signatureAfterChange": "   public InterpreterJVMRemoteI ensureInterpreterConnected()", "diff": ["-  public void ensureInterpreterConnected() {", "+  public InterpreterJVMRemoteI ensureInterpreterConnected() {", "-        while (_interpreterJVM() == null) {", "+        InterpreterJVMRemoteI slave = _interpreterJVM();", "+        while (slave == null) {", "+          slave = _interpreterJVM();", "-//        _log.log(\"interpreter registered in Main JVM; moving on\");", "+        ", "+//        _log.log(\"interpreter \" + interp + \" registered in Main JVM\");", "+        return slave;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdcaf47a92350e3711b18f8d72f42aea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "68fac9302e6b2358c3b67dbd6346f2e01189b049", "commitAfterChange": "844c5b5a76f593d88002386f7e1c5749ae206027", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public InterpretResult interpret(String s, String interpreterName)", "signatureAfterChange": "   public InterpretResult interpret(String s, String name)", "diff": ["-  public InterpretResult interpret(String s, String interpreterName) {", "-    Interpreter i = _interpreters.get(interpreterName);", "+  public InterpretResult interpret(String s, String name) {", "+    Interpreter i = getInterpreter(name);", "-      throw new IllegalArgumentException(\"Interpreter '\" + interpreterName + \"' does not exist.\");", "+      throw new IllegalArgumentException(\"Interpreter '\" + name + \"' does not exist.\");"]}], "num": 17443}