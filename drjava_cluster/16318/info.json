{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6a2bb3490a79fae8d68a7f29771d5ef", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6784e8d6f09bc6f7c2db1da22c941856", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "55ffd5d461fa009444744f2527631191c6f9decc", "commitAfterChange": "0fed03351fa05790a48229380b62c5e4589b0332", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 85, "signatureBeforeChange": "         protected void resortNode(DefaultMutableTreeNode node)", "signatureAfterChange": "   protected void resortNode(DefaultMutableTreeNode node)", "diff": ["-  ", "+   */", "-    DefaultMutableTreeNode parent = (DefaultMutableTreeNode)node.getParent();", "-    node.removeFromParent();", "-    ", "+    if (node == _root) {", "+      getModel().setRoot(node);", "+    }", "+    else {", "+      DefaultMutableTreeNode parent = (DefaultMutableTreeNode)node.getParent();", "+      getModel().removeNodeFromParent(node);", "+      insertSortedInto(parent, node);", "+    }", "+  }", "-      if (node.toString().compareTo(child.toString()) < 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7383d68b2c1e83b1c8daf749ded29f7c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "2b371f46cbe5fba581bc2ddd38ce1509ce9a6d65", "commitAfterChange": "44c6b68dcb4045b67b8248b43a9b998505409543", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": "   protected void updatePanel()", "signatureAfterChange": "   protected void updatePanel()", "diff": ["-    Enumeration docNodes = _rootNode.children();", "-    while (docNodes.hasMoreElements()) {", "-      DefaultMutableTreeNode docNode = (DefaultMutableTreeNode) docNodes.nextElement();          ", "-      // Find the correct start offset node for this region", "-      Enumeration regionNodes = docNode.children();", "-      while (regionNodes.hasMoreElements()) {", "-        DefaultMutableTreeNode regionNode = (DefaultMutableTreeNode) regionNodes.nextElement();", "-        _regTreeModel.nodeChanged(regionNode);", "-      }", "-      _regTreeModel.nodeChanged(docNode);  // file name may have changed", "-      _lastUpdateTime = System.currentTimeMillis();", "-      _frame._changed = false;", "-    }", "+//    Enumeration docNodes = _rootNode.children();", "+//    while (docNodes.hasMoreElements()) {", "+//      DefaultMutableTreeNode docNode = (DefaultMutableTreeNode) docNodes.nextElement();          ", "+//      // Find the correct start offset node for this region", "+//      Enumeration regionNodes = docNode.children();", "+//      while (regionNodes.hasMoreElements()) {", "+//        DefaultMutableTreeNode regionNode = (DefaultMutableTreeNode) regionNodes.nextElement();", "+//        _regTreeModel.nodeChanged(regionNode);", "+//      }", "+    revalidate();", "+    repaint();", "+//      _regTreeModel.nodeChanged(docNode);  // file name may have changed", "+    _lastUpdateTime = System.currentTimeMillis();", "+    _frame.resetChanged();", "+//    }"]}], "num": 16318}