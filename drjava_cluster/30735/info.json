{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad613dc5aaeb58b6bf75ae26e25ef717", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d00aee20555bbec2aabdc7731e36ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 61, "signatureBeforeChange": "   synchronized void openAndScroll(final OpenDefinitionsDocument doc, final int line,                                   String className, final boolean shouldHighlight)", "signatureAfterChange": "   synchronized void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className, final boolean shouldHighlight)", "diff": ["-  synchronized void openAndScroll(final OpenDefinitionsDocument doc, final int line,", "-                                  String className, final boolean shouldHighlight) {", "+  synchronized void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className, final boolean shouldHighlight) {", "-    if (doc != null) {", "+    if (doc != null) { ", "-      _notifier.threadLocationUpdated(doc, line, shouldHighlight);", "+      Utilities.invokeLater(new Runnable() { public void run() { _notifier.threadLocationUpdated(doc, line, shouldHighlight); } });", "-    else {", "-      printMessage(\"  (Source for \" + className + \" not found.)\");", "-    }", "+    else printMessage(\"  (Source for \" + className + \" not found.)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbf19b3cf07c8782f8c9889ad6b4d83d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/javadoc/DefaultJavadocModel.java", "commitBeforeChange": "4827c31f832b0b658b5049b701f441bcd4cd2853", "commitAfterChange": "c9a582a01c4727c2040c438bfb469bb6c612160b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 36, "signatureBeforeChange": "   private void _runJavadoc(Iterable<String> files, File destDir, Iterable<String> extraArgs, boolean allDocs)", "signatureAfterChange": "   private void _runJavadoc(Iterable<String> files, final File destDir, Iterable<String> extraArgs, final boolean allDocs)", "diff": ["-  private void _runJavadoc(Iterable<String> files, File destDir, Iterable<String> extraArgs, boolean allDocs) {", "+  private void _runJavadoc(Iterable<String> files, final File destDir, Iterable<String> extraArgs, final boolean allDocs) {    ", "-    boolean success = _javadocErrorModel.hasOnlyWarnings();", "+    final boolean success = _javadocErrorModel.hasOnlyWarnings();", "-    _notifier.javadocEnded(success, destDir, allDocs);", "+    // Use EventQueue.invokeLater so that notification is deferred when running in the event thread.", "+    EventQueue.invokeLater(new Runnable() { public void run() { _notifier.javadocEnded(success, destDir, allDocs); } });"]}], "num": 30735}