{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dceea37f4b436c190cd15a8a1f564d3c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80f50f24b9fc9d405d3cc876505f9f51", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "5944dd2b12a74ebad6e3549d813d2dd557403c7e", "commitAfterChange": "53735c967d2add6a16ab5776bac9111426f41996", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CompilerErrorModel(T[] errors, IGetDocuments model)", "signatureAfterChange": "   public CompilerErrorModel()", "diff": ["+   */", "+  public CompilerErrorModel() {", "+    _model = new IGetDocuments() {", "+      public OpenDefinitionsDocument getDocumentForFile(File file) {", "+        throw new IllegalStateException(\"No documents to get!\");", "+      }", "+      public boolean isAlreadyOpen(File file) {", "+        return false;", "+      }", "+      public List<OpenDefinitionsDocument> getDefinitionsDocuments() {", "+        return new LinkedList<OpenDefinitionsDocument>();", "+      }", "+      public boolean hasModifiedDocuments() {", "+        return false;", "+      }", "+    };", "+    _errors = new T[0];", "+    _numErrors = 0;", "+    _positions = new Position[0];", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd6957335bd278980c1d78b88bfafb34", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/io/IOUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 136, "signatureBeforeChange": "   public static FileFilter extensionFileFilter(String extension, FileFilter also)", "signatureAfterChange": "     public boolean accept(File f)", "diff": ["-  public static FileFilter extensionFileFilter(String extension, FileFilter also) {", "-    return asFileFilter(extensionFilePredicate(extension, asPredicate(also)));", "+    public SamePathFilePredicate(File f) { _f = canonicalCase(f); }", "+    public boolean accept(File f) {", "+      File candidate = canonicalCase(attemptAbsoluteFile(f));", "+      for (File compareTo = _f; compareTo != null; compareTo = compareTo.getParentFile()) {", "+        if (candidate == null || !compareTo.getName().equals(candidate.getName())) {", "+          return false;", "+        }", "+        candidate = candidate.getParentFile();", "+      }", "+      return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f54b44030bd218d2cd7ebc8dec55872b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public CompilerError[] getErrorsWithPositions()", "signatureAfterChange": "   public boolean hasErrorsWithPositions(OpenDefinitionsDocument odd)", "diff": ["-   */", "-  public CompilerError[] getErrorsWithPositions() {", "+   */", "+  public boolean hasErrorsWithPositions(OpenDefinitionsDocument odd){", "+    File file = null;", "+    try {", "+      file = odd.getFile();", "+    } catch (IllegalStateException ise) {", "+      //no associated file, do nothing", "+    } catch (FileMovedException fme) {", "+      file = fme.getFile();", "+    }", "+    if (file == null){", "+      return false;", "+    }", "+", "+    StartAndEndIndex saei = _filesToIndexes.get(file);", "+    if (saei == null){", "+      return false;", "+    }", "+    if (saei.getStartPos() == saei.getEndPos()){", "+      return false;", "+    }", "+    return true;", "+  }"]}], "num": 3687}