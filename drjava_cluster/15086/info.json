{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84f00aee15ff8567a64e58aaddcc50c6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7693f662a2632585a2bc8d383dfa4ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "7f62f2f9bc3bd568f4385528634c331480fbe08e", "commitAfterChange": "d55b82d942f5baa7bd5bf3a1d9f1f1f9dce04a39", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public boolean saveSettings() throws IOException", "signatureAfterChange": "   public boolean saveSettings() throws IOException", "diff": ["-                                      \"in your home directory.\\n\\n\" + ioe,", "+                                      \"in your home directory. Another process may be \\n\" +", "+                                      \"using the file.\\n\\n\" + ioe,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5dc78ef3b49502d37a4c7e1a32104d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public TypeData forIfThenElseStatementOnly(IfThenElseStatement that, TypeData testExpression_result, TypeData thenStatement_result, TypeData elseStatement_result)", "signatureAfterChange": "   public TypeData forIfThenElseStatementOnly(IfThenElseStatement that, TypeData testExpression_result,                                               TypeData thenStatement_result, TypeData elseStatement_result)", "diff": ["-   */", "-  public TypeData forIfThenElseStatementOnly(IfThenElseStatement that, TypeData testExpression_result, TypeData thenStatement_result, TypeData elseStatement_result) {", "+    */", "+  public TypeData forIfThenElseStatementOnly(IfThenElseStatement that, TypeData testExpression_result, ", "+                                             TypeData thenStatement_result, TypeData elseStatement_result) {", "-        _addError(\"This if-then-else statement's conditional expression must be a boolean value. Instead, it is a class or interface name\", that);", "+        _addError(\"This if-then-else statement's conditional expression must be a boolean value. Instead, it is a \" +", "+                  \"class or interface name\", ", "+                  that);", "-        _addError(\"This if-then-else statement's conditional expression must be a boolean value. Instead, its type is \" + testExpression_result.getName(), that.getTestExpression());", "+        _addError(\"This if-then-else statement's conditional expression must be a boolean value. Instead, its type is \"", "+                    + testExpression_result.getName(), that.getTestExpression());", "-    if (testExpression_result == null ||", "-        thenStatement_result == null || ", "-        elseStatement_result == null) { return null; }", "-", "+    if (testExpression_result == null || thenStatement_result == null || elseStatement_result == null) return null;", "-  }", "+  } "]}], "num": 15086}