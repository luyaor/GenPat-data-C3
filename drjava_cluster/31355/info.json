{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "169a9e0830e5968235869b098d29bf10", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "377c2eef219aa19275b471edfefe6535", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private JUnitError _makeJUnitError(TestFailure failure, List<String> classNames,                                      boolean isError, List<File> files)", "signatureAfterChange": "   private JUnitError _makeJUnitError(TestFailure failure, List<String> classNames,                                      boolean isError, List<File> files)", "diff": ["-    if (failedTest instanceof TestCase) {", "-      testName = ((TestCase)failedTest).getName();", "-    }", "-    else{", "-      testName = failedTest.getClass().getName();", "-    }", "+    if (failedTest instanceof TestCase) testName = ((TestCase)failedTest).getName();", "+    else testName = failedTest.getClass().getName();", "-    if(firstIndex == secondIndex){", "-      className = className2;", "-    }else{", "-      className = className1;", "-    }", "+    if(firstIndex == secondIndex) className = className2;", "+    else className = className1;", "+    ", "-    if(stackTrace.indexOf(className) == -1){", "+    if (stackTrace.indexOf(className) == -1){", "-      while(trace.indexOf(\"junit.framework.Assert\") != -1 &&", "-            trace.indexOf(\"junit.framework.Assert\") < trace.indexOf(\"(\")){", "+      while (trace.indexOf(\"junit.framework.Assert\") != -1 &&", "+            trace.indexOf(\"junit.framework.Assert\") < trace.indexOf(\"(\")) {", "-        trace = trace.substring(trace.indexOf('\\n')+1);", "+        trace = trace.substring(trace.indexOf('\\n') + 1);", "-    String exception =  (isError) ?", "-      failure.thrownException().toString():", "-      failure.thrownException().getMessage();", "+    String exception =  (isError) ? failure.thrownException().toString(): ", "+                                    failure.thrownException().getMessage();", "-//    }catch(IOException e){", "+//    } catch(IOException e){", "-    if (indexOfClass != -1) {", "-      file = files.get(indexOfClass);", "-    }", "-    else {", "-      file = _jmc.getFileForClassName(className);", "-    }", "+    if (indexOfClass != -1) file = files.get(indexOfClass);", "+    else file = _jmc.getFileForClassName(className);", "-    if(file == null){", "+    if (file == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "740837c1fbe9bea2a1af0a4c9d930bb6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileBuilder.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative, boolean hasDate) throws IOException", "signatureAfterChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative, boolean hasDate) throws IOException", "diff": ["-    if (relative) {", "-      path = makeRelative(df);", "-    }", "-    else {", "-      path = df.getCanonicalPath();", "-    }", "+    if (relative) path = makeRelative(df);", "+    else path = df.getCanonicalPath();", "+", "-    if (p1 != null || p2 != null || active) {", "-      ret += \"\\n\" + prefix + \"      \";", "-    }", "+    if (p1 != null || p2 != null || active)  ret += \"\\n\" + prefix + \"      \";", "+", "-    if (p1 != null) {", "-      ret += \"(select \" + p1.getFirst() + \" \" + p1.getSecond() + \")\";", "-    }", "-    if (p2 != null) {", "-      ret += \"(scroll \" + p2.getFirst() + \" \" + p2.getSecond() + \")\";", "-    }", "+    if (p1 != null) ret += \"(select \" + p1.getFirst() + \" \" + p1.getSecond() + \")\";", "+", "+    if (p2 != null) ret += \"(scroll \" + p2.getFirst() + \" \" + p2.getSecond() + \")\";", "+", "-    if (active) {", "-      ret += \"(active)\";", "-    }", "+    ", "+    if (active) ret += \"(active)\";", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93cfe528e85204fa12e59cb47e2471e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public ReducedModelState getStateAtCurrent()", "signatureAfterChange": "     public ReducedModelState getStateAtCurrent()", "diff": ["-      if (atFirstItem() || atStart() || TokenList.this.isEmpty()) {", "-        return FREE;", "-      }", "-      else if (prevItem().isLineComment() ||", "-               (prevItem().getState() == INSIDE_LINE_COMMENT)) {", "+      if (atFirstItem() || atStart() || TokenList.this.isEmpty())  return FREE;", "+      else if (prevItem().isLineComment() || (prevItem().getState() == INSIDE_LINE_COMMENT))", "-      }", "-      else if (prevItem().isBlockCommentStart() ||", "-               (prevItem().getState() == INSIDE_BLOCK_COMMENT)) {", "+      else if (prevItem().isBlockCommentStart() || (prevItem().getState() == INSIDE_BLOCK_COMMENT))", "-      }", "-      else if ((prevItem().isDoubleQuote() && prevItem().isOpen() &&", "-                (prevItem().getState() == FREE)) ||", "-               (prevItem().getState() == INSIDE_DOUBLE_QUOTE)) {", "+      else if ((prevItem().isDoubleQuote() && prevItem().isOpen() && (prevItem().getState() == FREE)) ||", "+               (prevItem().getState() == INSIDE_DOUBLE_QUOTE))", "-      }", "-      else if ((prevItem().isSingleQuote() && prevItem().isOpen() &&", "-                (prevItem().getState() == FREE)) ||", "-               (prevItem().getState() == INSIDE_SINGLE_QUOTE)) {", "+      else if ((prevItem().isSingleQuote() && prevItem().isOpen() && (prevItem().getState() == FREE)) ||", "+               (prevItem().getState() == INSIDE_SINGLE_QUOTE))", "-      }", "-      else {", "-        return FREE;", "-      }", "+      else return FREE;"]}], "num": 31355}