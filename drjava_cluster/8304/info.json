{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0341fbf70b267f30e8929444ccad3a3f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "125fb26ae3634891c3daab9462626938", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "7c2b459760724c8e0af7c91f77f7fa41e315edc6", "commitAfterChange": "c9b6668252c82575b56cf423d4fca817498241b6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testInteractionAbort() throws BadLocationException,       DocumentAdapterException, InterruptedException, IOException", "signatureAfterChange": "   public void testInteractionAbort() throws BadLocationException, DocumentAdapterException, InterruptedException,      IOException", "diff": ["-  public void testInteractionAbort() throws BadLocationException,", "-      DocumentAdapterException, InterruptedException, IOException", "-  {", "+  public void testInteractionAbort() throws BadLocationException, DocumentAdapterException, InterruptedException, ", "+    IOException {", "-        assertInteractionStartCount(2);", "+//        assertInteractionStartCount(2);", "-      public void interpreterExited(int status) {", "-        try {", "-          Thread.sleep(1000);", "-        } catch (InterruptedException e) {", "-        }", "-        assertInteractionStartCount(1);", "-        interpreterExitedCount++;", "-      }", "+//      public void interpreterExited(int status) {", "+//        try {", "+//          Thread.sleep(1000);", "+//        } catch (InterruptedException e) {", "+//        }", "+//        assertInteractionStartCount(1);", "+//        interpreterExitedCount++;", "+//      }", "-        assertInteractionStartCount(1);", "-        assertInterpreterExitedCount(0);", "-        assertInterpreterReadyCount(0);", "+//        assertInteractionStartCount(1);", "+//        assertInterpreterExitedCount(0);", "+//        assertInterpreterReadyCount(0);", "-        synchronized(this) {", "-          assertInteractionStartCount(1);", "-          assertInterpreterExitedCount(0);", "-          assertInterpreterResettingCount(1);", "+        synchronized(_resetDoneLock) {", "+//          assertInteractionStartCount(1);", "+//          assertInterpreterExitedCount(0);", "+//          assertInterpreterResettingCount(1);", "-          this.notify();", "+          _resetDone = true;", "+          _resetDoneLock.notify();", "-    synchronized(listener) {", "+    _resetDone = false;", "+    synchronized(_resetDoneLock) {", "-      listener.wait();", "+      _resetDoneLock.wait();", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18c4a9bb9ac9265154e54a0d82e11603", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "7c2b459760724c8e0af7c91f77f7fa41e315edc6", "commitAfterChange": "c9b6668252c82575b56cf423d4fca817498241b6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testExitInteractions() throws DocumentAdapterException, InterruptedException", "signatureAfterChange": "   public void testExitInteractions() throws DocumentAdapterException, InterruptedException", "diff": ["-   */", "+  /** Checks that System.exit is handled appropriately from interactions pane. */", "+//        Utilities.showDebug(\"GlobalModelOtherTest: interaction Started\");", "-        assertInteractionStartCount(1);", "-        assertInterpreterResettingCount(1);", "+//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterExited\");", "+//        assertInteractionStartCount(1);", "+//        assertInterpreterResettingCount(0);", "+//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterExitedCount = \" + interpreterExitedCount);", "-        assertInteractionStartCount(1);", "-        assertInterpreterExitedCount(0);", "-        assertInterpreterReadyCount(0);", "+//        assertInteractionStartCount(1);", "+//        assertInterpreterExitedCount(1);", "+//        assertInterpreterReadyCount(0);", "+//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterResetting\");", "-        synchronized(this) {", "-          assertInteractionStartCount(1);", "-          assertInterpreterExitedCount(1);", "-          assertInterpreterResettingCount(1);", "+//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterReady\");", "+        synchronized(_resetDoneLock) {", "+//          assertInteractionStartCount(1);", "+//          assertInterpreterExitedCount(1);", "+//          assertInterpreterResettingCount(1);", "-          this.notify();", "+//          Utilities.showDebug(\"GlobalModelOtherTest: notifying resetDone\");", "+          _resetDone = true;", "+          _resetDoneLock.notify();", "+      ", "+//      public void consoleReset() { consoleResetCount++; }", "-    synchronized(listener) {", "+    _resetDone = false;", "+    synchronized(_resetDoneLock) {", "+//      Utilities.showDebug(\"GlobalModelOtherTest: interpreting System.exit(23)\");", "-      listener.wait();", "+//      _model.resetInteractions();", "+//      Utilities.showDebug(\"GlobalModelOtherTest: waiting on resetDone\");", "+      while (! _resetDone) { _resetDoneLock.wait(); }", "-    listener.assertConsoleResetCount(0);", "+//    listener.assertConsoleResetCount(0);", "+//    Utilities.showDebug(\"GlobalModelOtherTest: exitInteractions finished\");"]}], "num": 8304}