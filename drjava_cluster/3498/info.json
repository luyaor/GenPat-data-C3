{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b10ac763b80e32f9a0fa3046d95e488", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da7025ae5f8720c8995a62b075080b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "a3b94da025d35ad7aeb4080660309a66820eaabc", "commitAfterChange": "c3686d18afe86d8459a6ef71e5f779589d915dd8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "signatureAfterChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "diff": ["+    if (!file.canWrite()) {", "+      throw new IOException(\"Permission denied\");", "+    }", "-      if (tempFileUsed && !renameFile(tempFile, fileSaver.getTargetFile())) {", "+      if (tempFileUsed && !renameFile(tempFile, file)) {", "-      /* Delete the temp file */", "-      tempFile.delete();", "-    } finally {", "+    } ", "+    finally {", "+      if (tempFileUsed) {", "+        /* Delete the temp file */", "+        tempFile.delete();", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cedfffd6d9db8d4dc54ca702d5a0eb33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 14, "signatureBeforeChange": "   synchronized boolean setCurrentThread(ThreadReference thread)", "signatureAfterChange": "   synchronized boolean setCurrentThread(ThreadReference thread)", "diff": ["+    if (!thread.isSuspended()) {", "+      throw new IllegalArgumentException(\"Thread must be suspended to set \" +", "+                                         \"as current.  Given: \" + thread);", "+    }", "+    ", "-      if ((_suspendedThreads.isEmpty() || !_suspendedThreads.contains(thread.uniqueID()))", "-            && (thread.isSuspended() && thread.frameCount() > 0)) {", "+      if ((_suspendedThreads.isEmpty() || ", "+           !_suspendedThreads.contains(thread.uniqueID()))", "+            && (thread.frameCount() > 0)) {"]}], "num": 3498}