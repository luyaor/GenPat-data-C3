{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7418de92aec6c6fa8d1be05bb631b9a0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f2d0ae0734c8b19a71fe7ae53aa3592", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testCompileClasspathOKDefaultPackage()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileClasspathOKDefaultPackage()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-    //synchronized(listener) {   ", "-      doc1.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener.wait();", "-    //}", "+    doc1.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "+", "-    //synchronized(listener2) {", "-      doc2.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener2.wait();", "-    //}", "+    doc2.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "332e1dacf6f6ba3fcd16d77ac2ab9661", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testCompileClasspathOKDifferentPackages()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileClasspathOKDifferentPackages()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-    //synchronized(listener) {", "-      doc1.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener.wait();", "-    //}", "+    doc1.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    //synchronized(listener2) {", "-      doc2.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener2.wait();", "-    //}", "+    doc2.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4340d93cac76fca0f2a5eea32abf7048", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void testCompileReferenceToNonPublicClass() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileReferenceToNonPublicClass() throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-    //synchronized(listener) {", "-      doc.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener.wait();", "-    //}", "+    doc.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    //synchronized(listener2) {", "-      doc2.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener2.wait();", "-    //}", "+    doc2.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    ", "-    _model.setResetAfterCompile(true);"]}], "num": 14302}