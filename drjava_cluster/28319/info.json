{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86f6a27dc8225e41cb43c3f347b2908f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "025308da5815ee9bc96f2dda986f777d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JDKToolsLibrary.java", "commitBeforeChange": "b121ed20db87231f3836df8854d99256d5781f05", "commitAfterChange": "5e4fadedf6da2c2718ee8846afe69f5d1e599662", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public static Iterable<JDKToolsLibrary> makeFromRuntime(GlobalModel model)", "signatureAfterChange": "   public static Iterable<JDKToolsLibrary> makeFromRuntime(GlobalModel model)", "diff": ["-      list.add(new JDKToolsLibrary(version, compiler, debugger, javadoc));", "+      list.add(new JDKToolsLibrary(version, null, compiler, debugger, javadoc));", "-        list.add(new JDKToolsLibrary(eclipseVersion, compiler, debugger, javadoc));", "+        list.add(new JDKToolsLibrary(eclipseVersion, null, compiler, debugger, javadoc));", "-      list.add(new JDKToolsLibrary(version, NoCompilerAvailable.ONLY, debugger, javadoc));", "+      list.add(new JDKToolsLibrary(version, null, NoCompilerAvailable.ONLY, debugger, javadoc));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "314f679d66b9e2fd0047fbe83854271a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JDKToolsLibrary.java", "commitBeforeChange": "f1daacb1f9c546b2b765d3fc6cc41bd412931a0f", "commitAfterChange": "591ec87995880046281596623701cb5a561fc66e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public static JDKToolsLibrary makeFromRuntime(GlobalModel model)", "signatureAfterChange": "      public static JDKToolsLibrary makeFromRuntime(GlobalModel model)", "diff": ["-    return new JDKToolsLibrary(version, compiler, debugger);", "+    JavadocModel javadoc = new NoJavadocAvailable(model);", "+    try {", "+      Class.forName(\"com.sun.tools.javadoc.Main\");", "+      javadoc = new DefaultJavadocModel(model, null, GlobalModel.RUNTIME_CLASS_PATH);", "+    }", "+    catch (ClassNotFoundException e) { /* can't load */ }", "+    catch (LinkageError e) { /* can't load (probably not necessary, but might as well catch it) */ }", "+    ", "+    return new JDKToolsLibrary(version, compiler, debugger, javadoc);"]}], "num": 28319}