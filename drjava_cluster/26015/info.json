{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f76280a7a082e0ca3b8e4df11906b7ea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43f79e3d2a197f24fa9e81fa82d7d6ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "481944e3395dcc7a19e81902c59977be65ba633a", "commitAfterChange": "c682fca099b13e765e0e1f201629222d04fb1339", "methodNumberBeforeChange": 333, "methodNumberAfterChange": 337, "signatureBeforeChange": "   private void addDocToNavigator(OpenDefinitionsDocument doc) throws IOException", "signatureAfterChange": "   private void addDocToNavigator(final OpenDefinitionsDocument doc)", "diff": ["-  private void addDocToNavigator(OpenDefinitionsDocument doc) throws IOException{", "-    // INavigatorItem idoc = makeIDocFromODD(doc);", "+  private void addDocToNavigator(final OpenDefinitionsDocument doc) {", "+    try {", "+      Utilities.invokeAndWait(new Runnable() {", "+        public void run() {", "+          try {", "+            if (doc.isUntitled()) _documentNavigator.addDocument(doc);", "+            else {", "+              String path = doc.getFile().getCanonicalPath();", "+              _documentNavigator.addDocument(doc, fixPathForNavigator(path)); ", "+            }", "+          }", "+          catch(IOException e) { _documentNavigator.addDocument(doc); }", "+        }});", "+    }", "+    catch(InterruptedException e) { throw new UnexpectedException(e); }", "-    String path = doc.getFile().getCanonicalPath();", "-    _documentNavigator.addDocument(doc, fixPathForNavigator(path));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabb8aa81d1d3fd416cc00ec0305c650", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "0cc8b968630d99117b745ff6fd42d808622c322f", "commitAfterChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "   protected synchronized final void invokeSlave() throws IOException, RemoteException", "signatureAfterChange": "   protected synchronized final void invokeSlave(String[] jvmArgs)     throws IOException, RemoteException", "diff": ["-  protected synchronized final void invokeSlave() throws IOException, RemoteException", "+   */", "+  protected synchronized final void invokeSlave(String[] jvmArgs)", "+    throws IOException, RemoteException", "-    _stub = UnicastRemoteObject.exportObject(this);", "+    Thread t = new Thread() {", "+      public void run() {", "+        synchronized(AbstractMasterJVM.this) {", "+          try {", "+            _stub = UnicastRemoteObject.exportObject(AbstractMasterJVM.this);", "+          }", "+          catch (RemoteException re) {", "+            throw new edu.rice.cs.util.UnexpectedException(re);", "+          }", "+          AbstractMasterJVM.this.notify();", "+        }", "+      }", "+    };", "+", "+    t.start();", "+    while (_stub == null) {", "+      try {", "+        wait();", "+      }", "+      catch (InterruptedException ie) {", "+        throw new edu.rice.cs.util.UnexpectedException(ie);", "+      }", "+    }", "+", "-    final Process process = ExecJVM.runJVMPropogateClassPath(RUNNER, args);", "+    final Process process = ", "+      ExecJVM.runJVMPropogateClassPath(RUNNER, args, jvmArgs);"]}], "num": 26015}