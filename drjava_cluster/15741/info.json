{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88154b8eb4510b4f34c4948a512dcb99", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47e2b00eabe77fe211d10e39e12c32e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/Indenter.java", "commitBeforeChange": "8a04e8e94a35e432777ebd444cf5fc70868fe9e4", "commitAfterChange": "56669aca13abcf0654eb7fc0918a869a3dc6fdaa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void buildTree()", "signatureAfterChange": "   public void buildTree()", "diff": ["-      //rule26 = new ActionStartPrevStmtPlus(\"\"),", "+      rule26 = new ActionStartPrevStmtPlus(\"\"),", "-      //rule24 = rule26,", "-      //rule23 = new QuestionExistsCharInStmt('?', ':', rule24, rule25),", "-      //rule22 = new QuestionLineContains(':', rule23, rule24),", "+      rule24 = rule26,", "+      rule23 = new QuestionExistsCharInStmt('?', ':', rule24, rule25),", "+      rule22 = new QuestionLineContains(':', rule23, rule24),", "-      rule20 = new QuestionCurrLineStartsWithSkipComments(\"}\", rule21, /**rule22*/ rule25),", "+      rule20 = new QuestionCurrLineStartsWithSkipComments(\"}\", rule21, rule22),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4294378931545f7b675dc3fba27e605", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/Indenter.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void buildTree()", "signatureAfterChange": "   public void buildTree()", "diff": ["-      rule20 = new QuestionCurrLineStartsWithSkipComments(\"}\", rule21, rule22),", "-      rule19 = new QuestionStartingNewStmt(rule20, rule27),", "+      rule19 = new QuestionStartingNewStmt(rule22, rule27),", "-      rule16 = new QuestionBraceOnPrevLine(rule17, rule18),", "-      rule15 = new QuestionBraceIsCurly(rule16, rule19),", "+      //rule16 = new QuestionBraceOnPrevLine(rule17, rule18),", "+      rule16 = new QuestionStartAfterOpenBrace(rule17, rule18),", "+      rule20 = new QuestionCurrLineStartsWithSkipComments(\"}\", rule21, rule16),", "+      rule15 = new QuestionBraceIsCurly(rule20, rule19),"]}], "num": 15741}