{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54acf63b8d1b3879cdd2f2b3476d94db", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06046976f1e49234dc53b1742fe56e4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/PrecomputedRecursionStack.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PrecomputedRecursionStack()", "signatureAfterChange": "   public PrecomputedRecursionStack(Lambda<? super T, ? extends Wrapper<T>> wrapperFactory)", "diff": ["-  /** Create an empty recursion stack */", "-  public PrecomputedRecursionStack() {", "-    _previous = new HashMap<IdentityWrapper<T>, Lambda<? super T, ? extends R>>();", "-    _stack = new LinkedList<IdentityWrapper<T>>();", "+   */", "+  public PrecomputedRecursionStack(Lambda<? super T, ? extends Wrapper<T>> wrapperFactory) {", "+    _wrapperFactory = wrapperFactory;", "+    _previous = new HashMap<Wrapper<T>, Lambda<? super T, ? extends R>>();", "+    _stack = new LinkedList<Wrapper<T>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fafe2979d56cc38b0cc4dfd9b5a3e4d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/PrecomputedRecursionStack2.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PrecomputedRecursionStack2()", "signatureAfterChange": "   public PrecomputedRecursionStack2(Lambda2<? super T1, ? super T2, ? extends Pair<T1, T2>> pairFactory)", "diff": ["-  /** Create an empty recursion stack */", "-  public PrecomputedRecursionStack2() {", "-    _previous = new HashMap<IdentityPair<T1, T2>, Lambda2<? super T1, ? super T2, ? extends R>>();", "-    _stack = new LinkedList<IdentityPair<T1, T2>>();", "+   */", "+  public PrecomputedRecursionStack2(Lambda2<? super T1, ? super T2, ? extends Pair<T1, T2>> pairFactory) {", "+    _pairFactory = pairFactory;", "+    _previous = new HashMap<Pair<T1, T2>, Lambda2<? super T1, ? super T2, ? extends R>>();", "+    _stack = new LinkedList<Pair<T1, T2>>();"]}], "num": 11330}