{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ac55db95ca2735946fcd52311ac7936", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78bd9ec94fc72649bf807a3c791f3e9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SymbolData.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 92, "signatureBeforeChange": "   public void addMethod(MethodData method, boolean isAugmentedCode, boolean fromClassFile)", "signatureAfterChange": "   public void addMethod(MethodData method, boolean isAugmentedCode, boolean fromClassFile)", "diff": ["-    // Detect if a method was user-defined that matches the signature of an auto-generated method.", "-    MethodData md = repeatedSignature(_methods, method, fromClassFile);", "-    if (md != null) {", "-      LanguageLevelVisitor.errors.addLast(new Pair<String, JExpressionIF>(_createErrorMessage(method), md.getJExpression()));", "-    }", "-    else {", "+  // This checking cannot be performed until symbolTable is complete  ", "+//    // Detect if a method was user-defined that matches the signature of an auto-generated method.", "+//    MethodData md = repeatedSignature(_methods, method, fromClassFile);", "+//    if (md != null) {", "+//      LanguageLevelVisitor.errors.", "+//        addLast(new Pair<String, JExpressionIF>(_createErrorMessage(method), md.getJExpression()));", "+//    }", "+//    else {", "-    }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe0c78a7fb36649f6226a8e797d88e41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 213, "signatureBeforeChange": "     public boolean isModifiedSinceSave()", "signatureAfterChange": "     public boolean isModifiedSinceSave()", "diff": ["-      /* if the document is not in the cache, then we know that it's not modified, so", "-       * only check if the DDoc is in the cache */", "-      if (_cacheAdapter.isReady()) return getDocument().isModifiedSinceSave();", "+      /* If the document has not been registered or it is virtualized (only stored on disk), then we know that", "+       * it is not modified. This method can be called by debugging code (via getName() on a ", "+       * ConcreteOpenDefDoc) before the document has been registered (_cacheAdapter == null). */", "+      if (_cacheAdapter != null && _cacheAdapter.isReady()) return getDocument().isModifiedSinceSave();"]}], "num": 30373}