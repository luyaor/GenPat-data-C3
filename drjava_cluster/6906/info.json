{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc97eef0563f7f1965ae73f21bab58d9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bacf3aac7614bcfcb53a943c0a3ea925", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 102, "signatureBeforeChange": "               public void testGetSymbolDataHelper()", "signatureAfterChange": "               public void testGetSymbolDataHelper()", "diff": ["-      _llv._classesToBeParsed.put(\"fully.qualified.Qwerty\", new Pair<TypeDefBase, LanguageLevelVisitor>(cd, bv));", "+      bv._classesToBeParsed.put(\"fully.qualified.Qwerty\", new Pair<TypeDefBase, LanguageLevelVisitor>(cd, bv));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf052058822929ce06723c62effa84d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 105, "signatureBeforeChange": "          public void testGetSymbolData_FromFileSystem()", "signatureAfterChange": "          public void testGetSymbolDataFromFileSystem2()", "diff": ["-    public void testGetSymbolData_FromFileSystem() {", "+    public void testGetSymbolDataFromFileSystem2() {", "-        testLLVisitor._getSymbolData_FromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, false, true);", "+        testLLVisitor._getSymbolDataFromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, false, true);", "-//      result = _llv._getSymbolData_FromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, false, true);", "+//      result = _llv._getSymbolDataFromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, false, true);", "-//      result = _llv._getSymbolData_FromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, true, true);", "+//      result = _llv._getSymbolDataFromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, true, true);", "-      result = testLLVisitor._getSymbolData_FromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, false, true);", "+      result = testLLVisitor._getSymbolDataFromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, false, true);", "-//      result = _llv._getSymbolData_FromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, true, true);", "+//      result = _llv._getSymbolDataFromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, true, true);", "-      SymbolData obj = testLLVisitor._getSymbolData_FromFileSystem(\"java.lang.Object\", SourceInfo.NO_INFO, true, true);", "+      SymbolData obj = testLLVisitor._getSymbolDataFromFileSystem(\"java.lang.Object\", SourceInfo.NO_INFO, true, true);", "-      result = testLLVisitor._getSymbolData_FromFileSystem(\"Wow\", SourceInfo.NO_INFO, false, true);", "+      result = testLLVisitor._getSymbolDataFromFileSystem(\"Wow\", SourceInfo.NO_INFO, false, true);", "-      result = testLLVisitor._getSymbolData_FromFileSystem(\"Wow\", SourceInfo.NO_INFO, true, true);", "+      result = testLLVisitor._getSymbolDataFromFileSystem(\"Wow\", SourceInfo.NO_INFO, true, true);", "-      result = testLLVisitor._getSymbolData_FromFileSystem(\"Wow\", SourceInfo.NO_INFO, true, true);", "+      result = testLLVisitor._getSymbolDataFromFileSystem(\"Wow\", SourceInfo.NO_INFO, true, true);", "-      result = testLLVisitor._getSymbolData_FromFileSystem(\"James\", SourceInfo.NO_INFO, true, true);", "+      result = testLLVisitor._getSymbolDataFromFileSystem(\"James\", SourceInfo.NO_INFO, true, true);", "-                   testLLVisitor._getSymbolData_FromFileSystem(\"WrongPackage.className\", ", "+                   testLLVisitor._getSymbolDataFromFileSystem(\"WrongPackage.className\", ", "-      result = testLLVisitor._getSymbolData_FromFileSystem(\"Doh\", SourceInfo.NO_INFO, true, true);", "-      vds.addLast(new VariableData(\"i\", _packageMav, SymbolData.INT_TYPE, true, result));", "-      vds.addLast(new VariableData(\"o\", _packageMav, obj, true, result));", "+      result = testLLVisitor._getSymbolDataFromFileSystem(\"Doh\", SourceInfo.NO_INFO, true, true);", "+      vds.addLast(new VariableData(\"i\", PACKAGE_MAV, SymbolData.INT_TYPE, true, result));", "+      vds.addLast(new VariableData(\"o\", PACKAGE_MAV, obj, true, result));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c304991be757f818c7bcbcb5fb84ace2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testNonStaticWatches() throws Exception", "signatureAfterChange": "   public void testNonStaticWatches() throws Exception", "diff": ["-    debugListener.assertBreakpointSetCount(2);", "+    debugListener.assertRegionAddedCount(2);", "-    debugListener.assertBreakpointRemovedCount(2);  //fires (no waiting)", "+    debugListener.assertRegionRemovedCount(2);  //fires (no waiting)"]}], "num": 6906}