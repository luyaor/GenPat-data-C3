{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7dbbbd4e03f354036ba912d637c6d4d9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13743ef378b14bb693e998cc3ae380ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void testWriteFile() throws IOException, MalformedProjectFileException", "signatureAfterChange": "    public void testWriteFile() throws IOException, MalformedProjectFileException", "diff": ["-    File pf = _fillTempFile(\"test2.pjt\",\"\");", "+    File pf = _fillTempFile(\"test2.pjt\", \"\");", "-    fb.addSourceFile(makeGetter(0,0,0,0,  \"dir1/testfile1.java\",\"dir1\",false,false,pf));", "-    fb.addSourceFile(makeGetter(1,1,0,0,  \"dir1/testfile2.java\",\"dir1\",false,false,pf));", "-    fb.addSourceFile(makeGetter(20,22,0,0,\"dir2/testfile3.java\",\"dir2\",false,false,pf));", "-    fb.addSourceFile(makeGetter(1,1,0,0,  \"dir2/testfile4.java\",\"dir2\",true, false,pf));", "-    fb.addSourceFile(makeGetter(0,0,0,0,  \"dir3/testfile5.java\",\"\",false,false,pf));", "-    fb.addAuxiliaryFile(makeGetter(1,1,0,0, absp+\"test/testfile6.java\",\"/home/javaplt\",false, false,null));", "-    fb.addAuxiliaryFile(makeGetter(1,1,0,0, absp+\"test/testfile7.java\",\"/home/javaplt\",false, false,null));", "+    fb.addSourceFile(makeGetter(0, 0, 0, 0,  \"dir1/testfile1.java\", \"dir1\", false, false, pf));", "+    fb.addSourceFile(makeGetter(1, 1, 0, 0,  \"dir1/testfile2.java\", \"dir1\", false, false, pf));", "+    fb.addSourceFile(makeGetter(20, 22, 0, 0, \"dir2/testfile3.java\", \"dir2\", false, false, pf));", "+    fb.addSourceFile(makeGetter(1, 1, 0, 0,  \"dir2/testfile4.java\", \"dir2\", true, false, pf));", "+    fb.addSourceFile(makeGetter(0, 0, 0, 0,  \"dir3/testfile5.java\", \"\", false, false, pf));", "+    fb.addAuxiliaryFile(makeGetter(1, 1, 0, 0, absp + \"test/testfile6.java\", \"/home/javaplt\", false, false, null));", "+    fb.addAuxiliaryFile(makeGetter(1, 1, 0, 0, absp + \"test/testfile7.java\", \"/home/javaplt\", false, false, null));", "-    fb.addClasspathFile(new File(absp,\"drjava/lib\"));", "-    fb.setBuildDirectory(new File(absp,\"drjava/built\"));", "+    fb.addClassPathFile(new File(absp, \"drjava/lib\"));", "+    fb.setBuildDirectory(new File(absp, \"drjava/built\"));", "+    fb.setWorkingDirectory(new File(absp, \"drjava/src\"));", "-    assertEquals(\"number of classpaths\", 1, pfir.getClasspaths().length);", "+    assertEquals(\"number of classpaths\", 1, pfir.getClassPaths().length);", "-    assertEquals(\"classpath name\", new File(absp,\"drjava/lib\").getPath(), pfir.getClasspaths()[0].getCanonicalPath());", "+    assertEquals(\"work-dir name\", new File(absp,\"drjava/src\").getPath(), pfir.getWorkingDirectory().getCanonicalPath());", "+    assertEquals(\"classpath name\", new File(absp,\"drjava/lib\").getPath(), pfir.getClassPaths()[0].getCanonicalPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e60ce743713ec5916bba9d6166b35a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "dd27d69f437c114ad258abba00f7d581b096ce79", "commitAfterChange": "1e852b550a8b69787c9e44248d928487d0bf9f6e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testParseProject() throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "diff": ["-  public void testParseProject() throws IOException, MalformedProjectFileException {", "+  public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException {", "-      \"   (file (name \\\"sexp/Atom.java\\\")(select 32 32))\\n\" +", "-      \"   (file (name \\\"sexp/BoolAtom.java\\\")(select 0 0))\\n\" +", "-      \"   (file (name \\\"sexp/Cons.java\\\")(select 0 0))\\n\" +", "-      \"   (file (name \\\"sexp/Empty.java\\\")(select 24 28)(active))\\n\" +", "-      \"   (file (name \\\"sexp/Lexer.java\\\")(select 0 0))\\n\" +", "-      \"   (file (name \\\"sexp/NumberAtom.java\\\")(select 12 12))\\n\" +", "-      \"   (file (name \\\"sexp/SEList.java\\\")(select 0 0)))\\n\" +", "+      \"   (file (name \\\"sexp/Atom.java\\\")(select 32 32)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/BoolAtom.java\\\")(select 0 0)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/Cons.java\\\")(select 0 0)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/Empty.java\\\")(select 24 28)(mod-date \\\"16-Jul-2004 03:45:23\\\")(active))\\n\" +", "+      \"   (file (name \\\"sexp/Lexer.java\\\")(select 0 0)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/NumberAtom.java\\\")(select 12 12)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/SEList.java\\\")(select 0 0)))\\n\" + // doesn't have mod date", "-      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"junk/sexp/Tokens.java\").getCanonicalPath()) +\")(select 32 32))\\n\" +", "-      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"jdk1.5.0/JScrollPane.java\").getCanonicalPath()) +\")(select 9086 8516)))\\n\" +", "+      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"junk/sexp/Tokens.java\").getCanonicalPath()) +\")(select 32 32)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"jdk1.5.0/JScrollPane.java\").getCanonicalPath()) +\")(select 9086 8516)(mod-date \\\"16-Jul-2004 03:45:23\\\")))\\n\" +", "+    assertEquals(\"mod-date value\", ", "+                 new SimpleDateFormat(\"dd-MMM-yyyy HH:mm:ss\").parse(\"16-Jul-2004 03:45:23\").getTime(),", "+                 pfir.getSourceFiles()[0].getSavedModDate());"]}], "num": 10461}