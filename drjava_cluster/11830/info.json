{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eab08bcf8ecef6034352392526e870ef", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a600de6ebb910dc3fb3ecf9acad2758", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DrJavaPropertySetup.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static void setup()", "signatureAfterChange": "   public static void setup()", "diff": ["-        for(String fs: s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "-        for(String fs: s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "-        for(String fs: s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "-        File b = new File(s);", "-        for(String fs: s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "-        for(String fs: s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "-        for(String fs: s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "-        for(String fs: s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "-        return ((double)s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(sep)).length);", "+        return ((double)s.split(TextUtil.regexEscape(sep)).length);", "-        String[] els = s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(sep));", "+        String[] els = s.split(TextUtil.regexEscape(sep));", "-        for(String el: s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(oldSep))) {", "+        for(String el: s.split(TextUtil.regexEscape(oldSep))) {", "-        return s.replaceAll(edu.rice.cs.plt.text.TextUtil.regexEscape(oldStr), newStr);", "+        return s.replaceAll(TextUtil.regexEscape(oldStr), newStr);", "-          String[] els = list.split(edu.rice.cs.plt.text.TextUtil.regexEscape(sep));", "+          String[] els = list.split(TextUtil.regexEscape(sep));", "-    String[] cps = System.getProperty(\"java.class.path\").split(edu.rice.cs.plt.text.TextUtil.regexEscape(File.pathSeparator));", "+    String[] cps = System.getProperty(\"java.class.path\").split(TextUtil.regexEscape(File.pathSeparator));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d72abe736d1ed651b4911bcafa8fdd15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DrJavaPropertySetup.java", "commitBeforeChange": "c0097a428fe48a719763cd02e3388b731264c468", "commitAfterChange": "bd115d85e858b9ca09ebbbacbcf2bcab93ec2746", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static void setup()", "signatureAfterChange": "   public static void setup()", "diff": ["-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(edu.rice.cs.plt.text.TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator))) {", "+        for(String fs: s.split(TextUtil.regexEscape(File.pathSeparator),-1)) {", "-    ", "-    PropertyMaps.TEMPLATE.setProperty(\"Misc\", new DrJavaProperty(\"not\",", "-                                                                 \"If the value is true, returns false; if the \"+", "-                                                                 \"value is false, returns true.\\n\"+", "-                                                                 \"Required attribute:\\n\"+", "-                                                                 \"\\tvalue=\\\"<string evaluating to true of false>\\\"\") {", "-      public void update(PropertyMaps pm) {", "-        if (_attributes.get(\"value\")==null) {", "-          _value = \"(not Error...)\";", "-          return;", "-        }", "-        if (_attributes.get(\"value\").toLowerCase().equals(\"true\")) {", "-          _value = \"false\";", "-        }", "-        else if (_attributes.get(\"value\").toLowerCase().equals(\"false\")) {", "-          _value = \"true\";", "-        }", "-        else {", "-          _value = \"(not Error...)\";", "-          return;", "-        }", "-      }", "-      public String getCurrent(PropertyMaps pm) {", "-        invalidate();", "-        return super.getCurrent(pm);", "-      }", "-      public String getLazy(PropertyMaps pm) { return getCurrent(pm); }", "-      public void resetAttributes() {", "-        _attributes.clear();", "-        _attributes.put(\"value\", null);", "-      }", "-    });", "-    ", "+", "-                                                        \"\\tlist=\\\"<string>\\\"\",", "+                                                        \"\\top=\\\"<string>\\\"\",", "-                                                        \"list\",", "-                                                        null,", "-        return ((double)s.split(TextUtil.regexEscape(sep)).length);", "+        return ((double)s.split(TextUtil.regexEscape(sep),-1).length);", "-        String[] els = s.split(TextUtil.regexEscape(sep));", "+        String[] els = s.split(TextUtil.regexEscape(sep),-1);", "-        for(String el: s.split(TextUtil.regexEscape(oldSep))) {", "+        for(String el: s.split(TextUtil.regexEscape(oldSep),-1)) {", "-          String[] els = list.split(TextUtil.regexEscape(sep));", "+          String[] els = list.split(TextUtil.regexEscape(sep),-1);", "-    String[] cps = System.getProperty(\"java.class.path\").split(TextUtil.regexEscape(File.pathSeparator));", "+    String[] cps = System.getProperty(\"java.class.path\").split(TextUtil.regexEscape(File.pathSeparator),-1);"]}], "num": 11830}