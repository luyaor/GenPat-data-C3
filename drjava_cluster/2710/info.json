{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1086af7f910c75295b49d4e48898e9dc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8af122d420efb7b4f9e59a74c76ba7cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "e4966eebfccbb573b6679624160fc9ffb723a509", "commitAfterChange": "632cdc2196d6c4bf9f5c64cd463fe20db7ac52b4", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "      public void centerViewOnOffset(int offset)", "signatureAfterChange": "      public void centerViewOnOffset(int offset)", "diff": ["-      int startRectX = (int)startRect.getX();", "-      int startRectY = (int)startRect.getY();", "-      startRect.setLocation(startRectX-(int)(viewWidth/2), ", "-                            startRectY-(int)(viewHeight/2));", "-      Point endPoint = new Point(startRectX+(int)(viewWidth/2), ", "-                                 startRectY+(int)(viewHeight/2 + ", "-                                                  metrics.getHeight()/2));", "+      if (startRect != null) {", "+        int startRectX = (int)startRect.getX();", "+        int startRectY = (int)startRect.getY();", "+        startRect.setLocation(startRectX-(int)(viewWidth/2), ", "+                              startRectY-(int)(viewHeight/2));", "+        Point endPoint = new Point(startRectX+(int)(viewWidth/2), ", "+                                   startRectY+(int)(viewHeight/2 + ", "+                                                    metrics.getHeight()/2));", "+        ", "+        // Add the end rect onto the start rect to make a rectangle", "+        // that encompasses the entire selection", "+        startRect.add(endPoint);     ", "-      // Add the end rect onto the start rect to make a rectangle", "-      // that encompasses the entire selection", "-      startRect.add(endPoint);     ", "-      ", "-      this.scrollRectToVisible(startRect);", "+        this.scrollRectToVisible(startRect);", "+      }", "-      ", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecc42e66b0c5fcb223048b3bba3b7477", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2fa0f9ce97ae10d7a34a292e091ab0ac600c58ce", "commitAfterChange": "facb31d52d0108009578d6a1708ac1dfc68b98b8", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "   private void _gotoLine()", "signatureAfterChange": "   private void _gotoLine()", "diff": ["-        _currentDefPane.setPositionAndScroll(pos);", "+        _currentDefPane.setCaretPosition(pos);", "+", "+        // this code was taken from FindReplaceDialog's ", "+        // _selectFoundItem method", "+        JScrollPane defScroll = (JScrollPane)", "+          _defScrollPanes.get(_model.getActiveDocument());", "+        int viewHeight = (int)defScroll.getViewport().getSize().getHeight();", "+        // Scroll to make sure this item is visible", "+        // Centers the selection in the viewport", "+        Rectangle startRect = _currentDefPane.modelToView(pos);", "+        int startRectY = (int)startRect.getY();", "+        startRect.setLocation(0, startRectY-viewHeight/2);", "+        //Rectangle endRect = _defPane.modelToView(to - 1);", "+        Point endPoint = new Point(0, startRectY+viewHeight/2-1);", "+        startRect.add(endPoint);      ", "+      ", "+        _currentDefPane.scrollRectToVisible(startRect);", "+", "+        //Commented out this call because it would be impossible to", "+        //center the viewport on pos without passing in the viewport.", "+        //Perhaps setPositionAndScroll can be changed in the future to", "+        //allow this.", "+        //_currentDefPane.setPositionAndScroll(pos);", "-    } catch (NumberFormatException nfe) {", "+    } ", "+    catch (NumberFormatException nfe) {", "+    catch (BadLocationException ble) {}"]}], "num": 2710}