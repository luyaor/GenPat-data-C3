{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83315185b2c47b9426af298083b3ccbb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d7ceea26bdf61cea31ff95892260036", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "f21f60b12bbd978bd39980f3ff0792b181091994", "commitAfterChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testSetFromNode() throws Exception", "signatureAfterChange": "\r   public void testSetFromNode() throws Exception", "diff": ["-  }", "-  public void testSetFromNode() throws Exception {", "-    XMLConfig xc = new XMLConfig();", "-    Node n = xc.set(\"foo/bar\", \"abc\", false);", "-    ", "-    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar>abc</bar>\"+NL+\"</foo>\"+NL, xc.toString());", "-    assertEquals(\"abc\", xc.get(\"foo/bar\"));", "-    ", "-    xc.set(\".fuz\", \"def\", n, false);", "-    ", "-    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"</foo>\"+NL, xc.toString());", "-    assertEquals(\"abc\", xc.get(\"foo/bar\"));", "-    ", "-    n = xc.set(\"fum\", \"\", n.getParentNode(), false);", "-    ", "-    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"  <fum></fum>\"+NL+\"</foo>\"+NL, xc.toString());", "-    assertEquals(\"\", xc.get(\"foo/fum\"));", "-    ", "-    xc.set(\"file\", \"test1.txt\", n, false);", "-    xc.set(\"file\", \"test2.txt\", n, false);", "-    ", "-    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL", "-                   + \"  <fum><file>test1.txt</file>\"+NL+\"    <file>test2.txt</file>\"+NL+\"  </fum>\"+NL+\"</foo>\"+NL, xc.toString());", "-    List<String> r = xc.getMultiple(\"foo/fum/file\");", "-    assertEquals(2, r.size());", "-    assertEquals(\"test1.txt\", r.get(0));", "-    assertEquals(\"test2.txt\", r.get(1));", "-  }", "+  }\r", "+  public void testSetFromNode() throws Exception {\r", "+    XMLConfig xc = new XMLConfig();\r", "+    Node n = xc.set(\"foo/bar\", \"abc\", false);\r", "+    \r", "+    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar>abc</bar>\"+NL+\"</foo>\"+NL, xc.toString());\r", "+    assertEquals(\"abc\", xc.get(\"foo/bar\"));\r", "+    \r", "+    xc.set(\".fuz\", \"def\", n, false);\r", "+    \r", "+    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"</foo>\"+NL, xc.toString());\r", "+    assertEquals(\"abc\", xc.get(\"foo/bar\"));\r", "+    \r", "+    n = xc.set(\"fum\", \"\", n.getParentNode(), false);\r", "+    \r", "+    if (System.getProperty(\"java.version\").startsWith(\"1.5\")) {\r", "+      assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"  <fum></fum>\"+NL+\"</foo>\"+NL,\r", "+                   xc.toString());\r", "+    }\r", "+    else {\r", "+      assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"  <fum/>\"+NL+\"</foo>\"+NL,\r", "+                   xc.toString());\r", "+    }\r", "+    assertEquals(\"\", xc.get(\"foo/fum\"));\r", "+    \r", "+    xc.set(\"file\", \"test1.txt\", n, false);\r", "+    xc.set(\"file\", \"test2.txt\", n, false);\r", "+    \r", "+    if (System.getProperty(\"java.version\").startsWith(\"1.5\")) {\r", "+      assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL\r", "+                     + \"  <fum><file>test1.txt</file>\"+NL+\"    <file>test2.txt</file>\"+NL+\"  </fum>\"+NL+\"</foo>\"+NL,\r", "+                   xc.toString());\r", "+    }\r", "+    else {\r", "+      assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL\r", "+                     + \"  <fum>\"+NL+\"    <file>test1.txt</file>\"+NL+\"    <file>test2.txt</file>\"+NL+\"  </fum>\"+NL+\"</foo>\"+NL,\r", "+                   xc.toString());\r", "+    }\r", "+    List<String> r = xc.getMultiple(\"foo/fum/file\");\r", "+    assertEquals(2, r.size());\r", "+    assertEquals(\"test1.txt\", r.get(0));\r", "+    assertEquals(\"test2.txt\", r.get(1));\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64161109aa7875f6871ef5d327d38aba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r   public void testSetFromNode() throws Exception", "signatureAfterChange": "   public void testSetFromNode() throws Exception", "diff": ["-  }\r", "-  public void testSetFromNode() throws Exception {\r", "-    XMLConfig xc = new XMLConfig();\r", "-    Node n = xc.set(\"foo/bar\", \"abc\", false);\r", "-    \r", "-    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar>abc</bar>\"+NL+\"</foo>\"+NL, xc.toString());\r", "-    assertEquals(\"abc\", xc.get(\"foo/bar\"));\r", "-    \r", "-    xc.set(\".fuz\", \"def\", n, false);\r", "-    \r", "-    assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"</foo>\"+NL, xc.toString());\r", "-    assertEquals(\"abc\", xc.get(\"foo/bar\"));\r", "-    \r", "-    n = xc.set(\"fum\", \"\", n.getParentNode(), false);\r", "-    \r", "-    if (System.getProperty(\"java.version\").startsWith(\"1.5\")) {\r", "-      assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"  <fum></fum>\"+NL+\"</foo>\"+NL,\r", "-                   xc.toString());\r", "-    }\r", "-    else {\r", "-      assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"  <fum/>\"+NL+\"</foo>\"+NL,\r", "-                   xc.toString());\r", "-    }\r", "-    assertEquals(\"\", xc.get(\"foo/fum\"));\r", "-    \r", "-    xc.set(\"file\", \"test1.txt\", n, false);\r", "-    xc.set(\"file\", \"test2.txt\", n, false);\r", "-    \r", "-    if (System.getProperty(\"java.version\").startsWith(\"1.5\")) {\r", "-      assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL\r", "-                     + \"  <fum><file>test1.txt</file>\"+NL+\"    <file>test2.txt</file>\"+NL+\"  </fum>\"+NL+\"</foo>\"+NL,\r", "-                   xc.toString());\r", "-    }\r", "-    else {\r", "-      assertEquals(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL\r", "-                     + \"  <fum>\"+NL+\"    <file>test1.txt</file>\"+NL+\"    <file>test2.txt</file>\"+NL+\"  </fum>\"+NL+\"</foo>\"+NL,\r", "-                   xc.toString());\r", "-    }\r", "-    List<String> r = xc.getMultiple(\"foo/fum/file\");\r", "-    assertEquals(2, r.size());\r", "-    assertEquals(\"test1.txt\", r.get(0));\r", "-    assertEquals(\"test2.txt\", r.get(1));\r", "-  }\r", "+  }", "+  public void testSetFromNode() throws Exception {", "+    XMLConfig xc = new XMLConfig();", "+    Node n = xc.set(\"foo/bar\", \"abc\", false);", "+    ", "+    assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar>abc</bar>\"+NL+\"</foo>\"+NL), xc.toString());", "+    assertEquals(\"abc\", xc.get(\"foo/bar\"));", "+    ", "+    xc.set(\".fuz\", \"def\", n, false);", "+    ", "+    assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"</foo>\"+NL), xc.toString());", "+    assertEquals(\"abc\", xc.get(\"foo/bar\"));", "+    ", "+    n = xc.set(\"fum\", \"\", n.getParentNode(), false);", "+    ", "+    if (System.getProperty(\"java.version\").startsWith(\"1.5\")) {", "+      assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"  <fum></fum>\"+NL+\"</foo>\"+NL),", "+                   xc.toString());", "+    }", "+    else {", "+      assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL+\"  <fum/>\"+NL+\"</foo>\"+NL),", "+                   xc.toString());", "+    }", "+    assertEquals(\"\", xc.get(\"foo/fum\"));", "+    ", "+    xc.set(\"file\", \"test1.txt\", n, false);", "+    xc.set(\"file\", \"test2.txt\", n, false);", "+    ", "+    if (System.getProperty(\"java.version\").startsWith(\"1.5\")) {", "+      assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL", "+                                 + \"  <fum><file>test1.txt</file>\"+NL+\"    <file>test2.txt</file>\"+NL+\"  </fum>\"+NL+\"</foo>\"+NL),", "+                   xc.toString());", "+    }", "+    else {", "+      assertEquals(remove16XML(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\"+NL+\"<foo>\"+NL+\"  <bar fuz=\\\"def\\\">abc</bar>\"+NL", "+                                 + \"  <fum>\"+NL+\"    <file>test1.txt</file>\"+NL+\"    <file>test2.txt</file>\"+NL+\"  </fum>\"+NL+\"</foo>\"+NL),", "+                   xc.toString());", "+    }", "+    List<String> r = xc.getMultiple(\"foo/fum/file\");", "+    assertEquals(2, r.size());", "+    assertEquals(\"test1.txt\", r.get(0));", "+    assertEquals(\"test2.txt\", r.get(1));", "+  }"]}], "num": 11857}