{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f29175bf2bacc0ce687cc5d38874cc1c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10d54bdaecd6768ef5a72888220db150", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "1902ca9428bb3bc3eae3550e478cc24cc107999e", "commitAfterChange": "c171c7d908dc3eacd710969c309add95e9a47bb0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 25, "signatureBeforeChange": "        public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list)", "signatureAfterChange": "     public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list)", "diff": ["-", "-      public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list) {", "-        if (pred.value(list.first())) { return ConsList.cons(list.first(), list.rest().apply(this)); }", "-        else { return list.rest().apply(this); }", "-      }", "+    public ConsList<? extends T> forEmpty(ConsList.Empty<? extends T> list) { return list; }", "+    public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list) {", "+      if (_pred.value(list.first())) { return ConsList.cons(list.first(), list.rest().apply(this)); }", "+      else { return list.rest().apply(this); }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51812626c7ed37421bebbf95c0ededbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list)", "signatureAfterChange": "     public ConsList<T> forNonempty(T first, ConsList<? extends T> rest)", "diff": ["-    public ConsList<? extends T> forEmpty(ConsList.Empty<? extends T> list) { return list; }", "-    public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list) {", "-      if (_pred.value(list.first())) { return ConsList.cons(list.first(), list.rest().apply(this)); }", "-      else { return list.rest().apply(this); }", "+    public ConsList<T> forEmpty() { return ConsList.empty(); }", "+    public ConsList<T> forNonempty(T first, ConsList<? extends T> rest) {", "+      if (_pred.contains(first)) { return ConsList.cons(first, rest.apply(this)); }", "+      else { return rest.apply(this); }"]}], "num": 729}