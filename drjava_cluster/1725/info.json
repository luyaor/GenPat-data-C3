{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a20413d0cb9bc213a062eedb23cdc7a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "172f841479b1c8dbf592257d0c9a35bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 421, "methodNumberAfterChange": 421, "signatureBeforeChange": "\r \r   public void forLeftShiftAssignmentExpression(LeftShiftAssignmentExpression that)", "signatureAfterChange": "    public void forLeftShiftAssignmentExpression(LeftShiftAssignmentExpression that)", "diff": ["-\r", "-  public void forLeftShiftAssignmentExpression(LeftShiftAssignmentExpression that) {\r", "-    forLeftShiftAssignmentExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getName().visit(this);\r", "-    that.getValue().visit(this);\r", "-    forLeftShiftAssignmentExpressionOnly(that);\r", "-  }\r", "+", "+  public void forLeftShiftAssignmentExpression(LeftShiftAssignmentExpression that) {", "+    forLeftShiftAssignmentExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getName().visit(this);", "+    that.getValue().visit(this);", "+    forLeftShiftAssignmentExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5149c17d3b4e297417463ee286f1711e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 424, "methodNumberAfterChange": 424, "signatureBeforeChange": "\r \r   public void forBitwiseAndAssignmentExpression(BitwiseAndAssignmentExpression that)", "signatureAfterChange": "    public void forBitwiseAndAssignmentExpression(BitwiseAndAssignmentExpression that)", "diff": ["-\r", "-  public void forBitwiseAndAssignmentExpression(BitwiseAndAssignmentExpression that) {\r", "-    forBitwiseAndAssignmentExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getName().visit(this);\r", "-    that.getValue().visit(this);\r", "-    forBitwiseAndAssignmentExpressionOnly(that);\r", "-  }\r", "+", "+  public void forBitwiseAndAssignmentExpression(BitwiseAndAssignmentExpression that) {", "+    forBitwiseAndAssignmentExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getName().visit(this);", "+    that.getValue().visit(this);", "+    forBitwiseAndAssignmentExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6538e628c6fda44bb1d709b7c1a4e8bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 422, "methodNumberAfterChange": 422, "signatureBeforeChange": "\r \r   public void forRightSignedShiftAssignmentExpression(RightSignedShiftAssignmentExpression that)", "signatureAfterChange": "    public void forRightSignedShiftAssignmentExpression(RightSignedShiftAssignmentExpression that)", "diff": ["-\r", "-  public void forRightSignedShiftAssignmentExpression(RightSignedShiftAssignmentExpression that) {\r", "-    forRightSignedShiftAssignmentExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getName().visit(this);\r", "-    that.getValue().visit(this);\r", "-    forRightSignedShiftAssignmentExpressionOnly(that);\r", "-  }\r", "+", "+  public void forRightSignedShiftAssignmentExpression(RightSignedShiftAssignmentExpression that) {", "+    forRightSignedShiftAssignmentExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getName().visit(this);", "+    that.getValue().visit(this);", "+    forRightSignedShiftAssignmentExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4e2b4453f170d251c142edac1b4c58f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 423, "methodNumberAfterChange": 423, "signatureBeforeChange": "\r \r   public void forRightUnsignedShiftAssignmentExpression(RightUnsignedShiftAssignmentExpression that)", "signatureAfterChange": "    public void forRightUnsignedShiftAssignmentExpression(RightUnsignedShiftAssignmentExpression that)", "diff": ["-\r", "-  public void forRightUnsignedShiftAssignmentExpression(RightUnsignedShiftAssignmentExpression that) {\r", "-    forRightUnsignedShiftAssignmentExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getName().visit(this);\r", "-    that.getValue().visit(this);\r", "-    forRightUnsignedShiftAssignmentExpressionOnly(that);\r", "-  }\r", "+", "+  public void forRightUnsignedShiftAssignmentExpression(RightUnsignedShiftAssignmentExpression that) {", "+    forRightUnsignedShiftAssignmentExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getName().visit(this);", "+    that.getValue().visit(this);", "+    forRightUnsignedShiftAssignmentExpressionOnly(that);", "+  }"]}], "num": 1725}