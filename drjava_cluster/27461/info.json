{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2867d19c2338f4595a9589b3f779aea8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6955603182966b9949982cf6c9aae54d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public Expression createExpression(Expression prefix, Iterator<ExpressionSuffix> it)", "signatureAfterChange": "     public Expression createExpression(Expression prefix, Iterator<ExpressionSuffix> it)", "diff": ["-          return new ObjectMethodCall", "+          if(typeArgs != null && typeArgs.size() > 0)", "+            return new PolymorphicObjectMethodCall", "+            (exp, dis.identifier.image, arguments, typeArgs,", "+             filename,", "+             exp.getBeginLine(), exp.getBeginColumn(),", "+             endLine, endColumn);", "+          else", "+            return new ObjectMethodCall", "-             endLine,            endColumn);", "+             endLine, endColumn);", "-          return new ObjectMethodCall(exp, t.image, arguments,", "+          if(typeArgs != null && typeArgs.size() > 0)", "+            return new PolymorphicObjectMethodCall(exp, t.image, arguments, typeArgs,", "+                                      filename,", "+                                      f.beginLine, f.beginColumn,", "+                                      endLine,   endColumn);", "+          else", "+            return new ObjectMethodCall(exp, t.image, arguments,", "-          return new SuperMethodCall(se.identifier, arguments,", "+          if(typeArgs != null && typeArgs.size() > 0)", "+            return new PolymorphicSuperMethodCall(se.identifier, arguments, typeArgs,", "+                                     filename,", "+                                     se.getBeginLine(), se.getBeginColumn(),", "+                                     endLine,           endColumn);", "+          else", "+            return new SuperMethodCall(se.identifier, arguments,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b06c3c18421b36ed963af7d4cfa0dff8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "dd2df9abefe60137729d1e2ed7d31fad6497b670", "commitAfterChange": "3760804957abbe0af3717133dfe937eb34080d28", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": "   final public Allocation simpleAllocationExpression() throws ParseException", "signatureAfterChange": "   final public Allocation simpleAllocationExpression() throws ParseException", "diff": ["+        if(typeArgs.size() > 0)", "+          {if (true) return new PolymorphicSimpleAllocation(rt,", "+                                                 as.arguments,", "+                                                 typeArgs,", "+                                                 filename,", "+                                                 t.beginLine, t.beginColumn,", "+                                                 as.endLine, as.endColumn);}", "+        if(typeArgs.size() > 0)", "+          {if (true) return new PolymorphicClassAllocation(rt,", "+                                                as.arguments,", "+                                                cb.list,", "+                                                typeArgs,", "+                                                filename,", "+                                                t.beginLine, t.beginColumn,", "+                                                as.endLine, as.endColumn);}"]}], "num": 27461}