{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "970e83d05c667df1502d90a2dfd2667f", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "817f8de633bf1fb5d613283253550de9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public void addProjectFilesClassPath(File f)", "signatureAfterChange": "   public boolean addProjectFilesClassPath(File f)", "diff": ["+   */", "+  public boolean addProjectFilesClassPath(File f) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.addProjectFilesClassPath(f); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "+  }", "-  /** Blocks until the interpreter is connected. */", "-  public void addProjectFilesClassPath(File f) {", "-    if (! _restart) return;", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.addProjectFilesClassPath(f); }", "-    catch(RemoteException re) { _threwException(re); }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bddebe5e3d8e5d9ec15efdcf36f0568b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void addProjectClassPath(File f)", "signatureAfterChange": "   public boolean addProjectClassPath(File f)", "diff": ["+   */", "+  public boolean addProjectClassPath(File f) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.addProjectClassPath(f); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "+  }", "-  /** Blocks until the interpreter is connected. */", "-  public void addProjectClassPath(File f) {", "-    if (! _restart) return;", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.addProjectClassPath(f); }", "-    catch(RemoteException re) { _threwException(re); }", "-  }"]}], "num": 9351}