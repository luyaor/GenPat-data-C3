{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c1e31320efeef354d910f0378717417", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a407c3905e87b908e42bc35d6adaa6ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public synchronized String getNameOfSelectedTopLevelGroup() throws GroupNotSelectedException", "signatureAfterChange": "   public String getNameOfSelectedTopLevelGroup() throws GroupNotSelectedException", "diff": ["-  public synchronized String getNameOfSelectedTopLevelGroup() throws GroupNotSelectedException{", "-    TreePath p = getSelectionPath();", "-    TreeNode n = (TreeNode) p.getLastPathComponent();", "-    ", "-    if(n == _model.getRoot())", "-      throw new GroupNotSelectedException(\"there is no top level group for the root of the tree\");", "-    ", "-    while(!_roots.contains(n)) { n = n.getParent(); }", "-    ", "-    return ((GroupNode)n).getData();", "+  public String getNameOfSelectedTopLevelGroup() throws GroupNotSelectedException {", "+    synchronized (_model) {", "+      TreePath p = getSelectionPath();", "+      TreeNode n = (TreeNode) p.getLastPathComponent();", "+      ", "+      if (n == _model.getRoot())", "+        throw new GroupNotSelectedException(\"there is no top level group for the root of the tree\");", "+      ", "+      while(!_roots.contains(n)) { n = n.getParent(); }", "+      ", "+      return ((GroupNode)n).getData();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7673e10cf41460666517d95242e646e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public synchronized boolean isSelectedInGroup(INavigatorItem i)", "signatureAfterChange": "   public boolean isSelectedInGroup(INavigatorItem i)", "diff": ["-   */", "-  public synchronized boolean isSelectedInGroup(INavigatorItem i){", "-    TreePath p = getSelectionPath();", "-    TreeNode n = (TreeNode) p.getLastPathComponent();", "-    TreeNode l = _doc2node.get(i);", "-    ", "-    if (n == _model.getRoot()) return true;", "-    ", "-    while (l.getParent() != _model.getRoot()) {", "-      if(l.getParent() == n) return true;", "-      l = l.getParent();", "+  /** @return true if the INavigatorItem is in the selected group. */", "+  public boolean isSelectedInGroup(INavigatorItem i) {", "+    synchronized (_model) {", "+      TreePath p = getSelectionPath();", "+      TreeNode n = (TreeNode) p.getLastPathComponent();", "+      TreeNode l = _doc2node.get(i);", "+      ", "+      if (n == _model.getRoot()) return true;", "+      ", "+      while (l.getParent() != _model.getRoot()) {", "+        if(l.getParent() == n) return true;", "+        l = l.getParent();", "+      }", "+      ", "+      return false;", "-    ", "-    return false;"]}], "num": 31194}