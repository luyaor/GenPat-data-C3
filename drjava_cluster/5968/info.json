{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3604c08fc218cfd7c221704fc560619c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b695e72490ad511443999456e62fc7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public Object visit(SuperMethodCall node)", "signatureAfterChange": "     public Node visit(SuperMethodCall node)", "diff": ["-    public Object visit(SuperMethodCall node) {", "-      LinkedList arguments = null; // Add parameterization <Node>.", "+    public Node visit(SuperMethodCall node) {", "+      LinkedList<Expression> arguments = null; // Add parameterization <Node>.", "-        arguments = new LinkedList(); // Add parameterization <Node>.", "-        Iterator it = node.getArguments().iterator();", "+        arguments = new LinkedList<Expression>(); // Add parameterization <Node>.", "+        Iterator<Expression> it = node.getArguments().iterator();", "-          arguments.add((Expression)((Expression)it.next()).acceptVisitor(this));", "+          arguments.add((Expression)it.next().acceptVisitor(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6eb24ed082ea887870814fa937e65e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public Object visit(SuperMethodCall node)", "signatureAfterChange": "     public Node visit(SuperMethodCall node)", "diff": ["-    public Object visit(SuperMethodCall node) {", "-      LinkedList arguments = null; // Add parameterization <Node>.", "+    public Node visit(SuperMethodCall node) {", "+      LinkedList<Expression> arguments = null; // Add parameterization <Node>.", "-        arguments = new LinkedList(); // Add parameterization <Node>.", "-        Iterator it = node.getArguments().iterator();", "+        arguments = new LinkedList<Expression>(); // Add parameterization <Node>.", "+        Iterator<Expression> it = node.getArguments().iterator();", "-          arguments.add((Expression)((Expression)it.next()).acceptVisitor(this));", "+          arguments.add((Expression)it.next().acceptVisitor(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7b31587e57620a90cdb951d218a13ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     public Object visit(InnerAllocation node)", "signatureAfterChange": "     public Node visit(InnerAllocation node)", "diff": ["-    public Object visit(InnerAllocation node) {", "+    public Node visit(InnerAllocation node) {", "-      LinkedList arguments = null; // Add parameterization <Expression>.", "+      LinkedList<Expression> arguments = null; // Add parameterization <Expression>.", "-        arguments = new LinkedList(); // Add parameterization <Expression>.", "-        Iterator it = node.getArguments().iterator();", "+        arguments = new LinkedList<Expression>(); // Add parameterization <Expression>.", "+        Iterator<Expression> it = node.getArguments().iterator();", "-          arguments.add((Expression)((Expression)it.next()).acceptVisitor(this));", "+          arguments.add((Expression)it.next().acceptVisitor(this));"]}], "num": 5968}