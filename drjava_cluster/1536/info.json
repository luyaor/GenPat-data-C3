{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e501613dfb61e7bc22af8fc7b8ab75f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3535cdad67d82fe77eed798c047cdb2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "2ec67558fcc2be0c684677fea7ee9feb674b02bc", "commitAfterChange": "a937ccbbfe3e2271b14c781e19a341556df45efe", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void saveFile(WriterCommand com)", "signatureAfterChange": "   public void saveFileAs(FileSaveSelector com) throws IOException", "diff": ["-  public void saveFile(WriterCommand com) {", "-    boolean success = false;", "+  public void saveFileAs(FileSaveSelector com) throws IOException {", "-      _editorKit.write(com.getWriter(), _definitionsDoc, 0, _definitionsDoc.getLength());", "-      success = true;", "-    }", "-    catch (IOException writeFailed) {", "-    }", "-    catch (BadLocationException docFailed) {", "-    }", "-    if (success) {", "-      final String _fileName = com.getName();", "-      // Note that we are not yet saving the document to", "-      // disk! But this call alone passes existing tests;", "-      // I'm late and must commit before leaving...", "+      final File file = com.getFile();", "+      _editorKit.write(new FileWriter(file), _definitionsDoc, 0, _definitionsDoc.getLength());", "-      ", "+      _definitionsDoc.setFile(file);", "-        public void notify(GlobalModelListener l) {", "-          l.fileSaved(_fileName);", "+        public void notifyListener(GlobalModelListener l) {", "+          l.fileSaved(file);", "+    }", "+    catch (OperationCanceledException oce) {", "+      // OK, do nothing as the user wishes.", "+    }", "+    catch (BadLocationException docFailed) {", "+      throw new UnexpectedException(docFailed);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "822a0b7886cf2b25a6af5beb68823d1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/GlobalModel.java", "commitBeforeChange": "2ec67558fcc2be0c684677fea7ee9feb674b02bc", "commitAfterChange": "a937ccbbfe3e2271b14c781e19a341556df45efe", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void saveFile(WriterCommand com)", "signatureAfterChange": "   public void saveFileAs(FileSaveSelector com) throws IOException", "diff": ["-  public void saveFile(WriterCommand com) {", "-    boolean success = false;", "+  public void saveFileAs(FileSaveSelector com) throws IOException {", "-      _editorKit.write(com.getWriter(), _definitionsDoc, 0, _definitionsDoc.getLength());", "-      success = true;", "-    }", "-    catch (IOException writeFailed) {", "-    }", "-    catch (BadLocationException docFailed) {", "-    }", "-    if (success) {", "-      final String _fileName = com.getName();", "-      // Note that we are not yet saving the document to", "-      // disk! But this call alone passes existing tests;", "-      // I'm late and must commit before leaving...", "+      final File file = com.getFile();", "+      _editorKit.write(new FileWriter(file), _definitionsDoc, 0, _definitionsDoc.getLength());", "-      ", "+      _definitionsDoc.setFile(file);", "-        public void notify(GlobalModelListener l) {", "-          l.fileSaved(_fileName);", "+        public void notifyListener(GlobalModelListener l) {", "+          l.fileSaved(file);", "+    }", "+    catch (OperationCanceledException oce) {", "+      // OK, do nothing as the user wishes.", "+    }", "+    catch (BadLocationException docFailed) {", "+      throw new UnexpectedException(docFailed);"]}], "num": 1536}