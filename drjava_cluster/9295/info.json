{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36aa2878684f9172b07ea2ab01d02515", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "963fee0c785f77b6f3be7e7336e9320a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeInterpreter.java", "commitBeforeChange": "479832fd2e5bbcc4ec38bbb0c5316b777fe17d06", "commitAfterChange": "07cad71ff62bbb5634e8d7ae8242cd8910df92f8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Object interpret(Reader r, String fname) throws InterpreterException", "signatureAfterChange": "   public Object interpret(Reader r, String fname) throws InterpreterException", "diff": ["-        ", "-        NameVisitor nv = new NameVisitor(nameVisitorContext);", "-        Node o = n.acceptVisitor(nv);", "-        if (o != null) n = o;", "-        ", "-        TypeChecker tc = new TypeChecker(checkVisitorContext);", "-        n.acceptVisitor(tc);", "-        ", "-        evalVisitorContext.defineVariables", "-          (checkVisitorContext.getCurrentScopeVariables());", "-        ", "-        EvaluationVisitor ev = new EvaluationVisitor(evalVisitorContext);", "-        result = n.acceptVisitor(ev);", "+        result = interpret(n);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6d516de235a77873be8723d9ee62f29", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "f36b72faed8290534c0d76809ee0a1b473552163", "commitAfterChange": "481944e3395dcc7a19e81902c59977be65ba633a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void addDocument(INavigatorItem doc)", "signatureAfterChange": "   public void addDocument(INavigatorItem doc)", "diff": ["-    GroupNode _root = null;", "-    synchronized(_model) {", "-      for (GroupNode r: _roots) {", "-        if (r.getFilter().accept(doc)) {", "-          _root = r;", "-          break;", "-        }", "-      }", "-      if (_root == null) return;", "-      ", "-      LeafNode node = new LeafNode(doc);", "-      //_root.add(node);", "-      insertNodeSortedInto(node, _root);", "-      this.expandPath(new TreePath(_root.getPath()));", "-      _doc2node.put(doc, node);", "-      _hasNonProjFilesOpen = true;", "-      //    this.setActiveDoc(doc);", "-    }", "+    addDocument(doc, \"\");", "+//    GroupNode _root = null;", "+//    synchronized(_model) {", "+//      for (GroupNode r: _roots) {", "+//        if (r.getFilter().accept(doc)) {", "+//          _root = r;", "+//          break;", "+//        }", "+//      }", "+//      if (_root == null) return;", "+//      ", "+//      LeafNode node = new LeafNode(doc);", "+//      //_root.add(node);", "+//      insertNodeSortedInto(node, _root);", "+//      this.expandPath(new TreePath(_root.getPath()));", "+//      _doc2node.put(doc, node);", "+//      _hasNonProjFilesOpen = true;", "+//    }"]}], "num": 9295}