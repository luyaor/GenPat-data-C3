{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ad8ea79b348682f3732551755e02559", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1713353f1a39bd60dc55f902d7839676", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void testReconstructor() throws IOException", "signatureAfterChange": "      public void testReconstructor() throws IOException", "diff": ["-        return null;", "+        return _saved;", "-    assertTrue(\"The document should start out in the cache\", _cache.isDDocInCache(doc1));", "-    _cache.update(doc1, d);", "-    assertFalse(\"The document should not be in the cache after an update\", _cache.isDDocInCache(doc1)); // force save", "-", "+    assertFalse(\"The document should not be in the cache\", _adapterTable.get(doc1).isReady());", "+    _saved = _adapterTable.get(doc1).getDocument();", "+    assertTrue(\"The document should be in the cache\", _adapterTable.get(doc1).isReady());", "-    _cache.get(doc1); // force the cache to reconstruct the document.", "+    _adapterTable.get(doc1).setReconstructor(d);", "+    assertFalse(\"The document should not be in the cache after an update\", _adapterTable.get(doc1).isReady());", "+    ", "+    _adapterTable.get(doc1).getDocument(); // force the cache to reconstruct the document.", "-    assertEquals(\"The make in the reconstructor was called once\", 1, _doc_made);", "-    assertEquals(\"The save in the reconstructor was called once\", 1, _doc_saved);", "+    assertEquals(\"The make in the reconstructor was called 1nce\", 1, _doc_made);", "+    assertEquals(\"The save in the reconstructor was not called\", 0, _doc_saved);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b274c0d8ff1991872744696f49bfa3ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "e69ba1eec2cb635c70a9fe0a1398fd66d2a7ddb9", "commitAfterChange": "521b5a6ad4ead519c4e7d942bbf2dde99a3dae4b", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public void testMatchBraceText()", "signatureAfterChange": "   public void testMatchBraceText()", "diff": ["-    final String fileName = doc.getCompletePath();", "-    assertEquals(\"Should display the document path\", fileName, _result);", "+    final String taggedFileName = \"Editing \" + doc.getCompletePath();", "+    assertEquals(\"Should display the document path\", taggedFileName, _result);", "-    assertEquals(\"Should display the line matched\", \"Matches:      new Object() {\", _result);", "+    assertEquals(\"Should display the line matched\", \"Bracket matches:      new Object() {\", _result);", "-    assertEquals(\"Should display the document matched\", fileName, _result);", "+    assertEquals(\"Should display the document matched\", taggedFileName, _result);", "-    assertEquals(\"Should display the line matched\", \"Matches:   private void _method()...{\", _result);", "+    assertEquals(\"Should display the line matched\", \"Bracket matches:   private void _method()...{\", _result);", "-    assertEquals(\"Should display the line matched\", \"Matches: public class Foo {\", _frame.getFileNameField());", "+    assertEquals(\"Should display the line matched\", \"Bracket matches: public class Foo {\", _frame.getFileNameField());", "-                 \"Matches: {\", _result);", "+                 \"Bracket matches: {\", _result);"]}], "num": 24700}