{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47ccd1a2bb1d55b718ef8683fad30693", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67c6dd2517d8f09d7b7a770d89a18ba7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "commitAfterChange": "fd372db787cedeccdc43d382b7e2999ff5184943", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      public void testGranularUndo() throws BadLocationException", "signatureAfterChange": "      public void testGranularUndo() throws BadLocationException", "diff": ["-        defPane.setCaretPosition(doc.getLength());", "+//        defPane.setCaretPosition(doc.getLength());", "+        assertEquals(\"caret at line end\", doc.getLength(), defPane.getCaretPosition());", "-        defPane.setCaretPosition(doc.getLength());", "+//        defPane.setCaretPosition(doc.getLength());", "+        assertEquals(\"caret at line end\", doc.getLength(), defPane.getCaretPosition());", "-        defPane.setCaretPosition(doc.getLength());", "+//        defPane.setCaretPosition(doc.getLength());", "+        assertEquals(\"caret at line end\", doc.getLength(), defPane.getCaretPosition());", "-        defPane.setCaretPosition(doc.getLength());", "+//        defPane.setCaretPosition(doc.getLength());", "+        assertEquals(\"caret at line end\", doc.getLength(), defPane.getCaretPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73a555a3714fdb97e581983de0ac2bc0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "a42a1005ad3faca50638e0131df3bc7c45ba82de", "commitAfterChange": "0b0e9049d382a4fa995a6c0df7ce197dd950d3eb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testAccessStaticFieldsOfOuterClass()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "signatureAfterChange": "   public void testAccessStaticFieldsAndMethodsOfOuterClass()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "diff": ["-  public void testAccessStaticFieldsOfOuterClass()", "+  public void testAccessStaticFieldsAndMethodsOfOuterClass()", "-                 interpret(\"MonkeyTwoDeep.twoDeepFoo\"));", "+                 interpret(\"MonkeyInner.MonkeyTwoDeep.twoDeepFoo\"));", "+    ", "+    assertEquals(\"should be able to call method of outer class\",", "+                 \"-2\",", "+                 interpret(\"getNegativeTwo()\"));", "+    assertEquals(\"should be able to call method of outer class\",", "+                 \"-2\",", "+                 interpret(\"MonkeyTwoDeep.getNegativeTwo()\"));", "+    assertEquals(\"should be able to call method of outer class\",", "+                 \"-2\",", "+                 interpret(\"MonkeyInner.MonkeyTwoDeep.getNegativeTwo()\"));", "+    assertEquals(\"should be able to call method of outer class\",", "+                 \"-2\",", "+                 interpret(\"MonkeyStaticStuff.MonkeyInner.MonkeyTwoDeep.getNegativeTwo()\"));"]}], "num": 25873}