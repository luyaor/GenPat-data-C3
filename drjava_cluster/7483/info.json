{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17873b7691e4768e3c62702c39b93f8d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33187b3196861be600f39957069b57f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/src-jsr14v2_0/edu/rice/cs/drjava/model/compiler/JSR14v20Compiler.java", "commitBeforeChange": "9d63ece51633bd296b8befa41ebe70b7a9eca3aa", "commitAfterChange": "cdbdaad69e25ffd684a4d524756e2244b0d16690", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected void _addSourceAndTargetOptions(Options options)", "signatureAfterChange": "   protected void _addSourceAndTargetOptions(Options options)", "diff": ["-    if (_isJSR14v2_4) {", "+    if (System.getProperty(\"java.specification.version\").equals(\"1.5\")) {", "+      options.put(\"-target\", \"1.5\");", "+    }", "+    else if (_isJSR14v2_4) {", "-//    options.put(\"-target\", \"1.5\");", "-    if(! _builtPath.equals(\"\"))", "-      options.put(\"-d\",_builtPath);", "+", "+    if (!_builtPath.equals(\"\")) {", "+      options.put(\"-d\", _builtPath);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7faf69db5afffc39ff93fab8c837d9bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/SavableConfiguration.java", "commitBeforeChange": "364d0b19a9e3896eddcd174b6cb5aa4a53e74f1f", "commitAfterChange": "65d59a6eb5c83a25b9e6bfdf698fd61ca6d2f695", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void saveConfiguration(OutputStream os, String header) throws IOException", "signatureAfterChange": "   public void saveConfiguration(OutputStream os, String header) throws IOException", "diff": ["+    ", "+    // Write the header", "-    while(keys.hasMoreElements()) {", "+    ", "+    // Write each option", "+    while (keys.hasMoreElements()) {", "-      tmpString = key.getName();", "-      osw.write(tmpString, 0, tmpString.length());", "-      tmpString = \" = \";", "-      osw.write(tmpString, 0, 3);", "-      tmpString = map.getString(key);", "-      // This replaces all backslashes with two backslashes for windows", "-      int index = 0;", "-      int pos;", "-      while (index < tmpString.length() && ", "-             ((pos = tmpString.indexOf('\\\\', index)) >= 0)) {", "-        buff = new StringBuffer(tmpString);", "-        buff.insert(pos, '\\\\');", "-        index = pos + 2;", "-        tmpString = buff.toString();", "+      ", "+      if (!key.getDefault().equals(map.getOption(key))) {", "+      ", "+        // Write name", "+        tmpString = key.getName();", "+        osw.write(tmpString, 0, tmpString.length());", "+        ", "+        // Write equals sign", "+        tmpString = \" = \";", "+        osw.write(tmpString, 0, 3);", "+        ", "+        // Write value", "+        tmpString = map.getString(key);", "+        // This replaces all backslashes with two backslashes for windows", "+        int index = 0;", "+        int pos;", "+        while (index < tmpString.length() && ", "+               ((pos = tmpString.indexOf('\\\\', index)) >= 0)) {", "+          buff = new StringBuffer(tmpString);", "+          buff.insert(pos, '\\\\');", "+          index = pos + 2;", "+          tmpString = buff.toString();", "+        }", "+        osw.write(tmpString, 0, tmpString.length());", "+        osw.write((int)'\\n');", "+        ", "+        // p.setProperty(key.getName(),map.getString(key));", "-      osw.write(tmpString, 0, tmpString.length());", "-      osw.write((int)'\\n');", "-     // p.setProperty(key.getName(),map.getString(key));", "-    "]}], "num": 7483}