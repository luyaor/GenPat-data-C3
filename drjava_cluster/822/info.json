{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54a84055f99d8a1927bcfb746ae4451f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a85d80044c2621cbfdc1df728137784", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   private FindResult findNext(boolean searchAll)", "signatureAfterChange": "   private FindResult findNext(boolean searchAll)", "diff": ["+    assert EventQueue.isDispatchThread();", "+    ", "-    _doc.acquireReadLock();", "-    try {", "-      // If the user just found a match and toggled the \"Search Backwards\" option, we should skip the matched text.", "-      if (_skipText) {  // adjust position (offset)", "+    // If the user just found a match and toggled the \"Search Backwards\" option, we should skip the matched text.", "+    if (_skipText) {  // adjust position (offset)", "-        int wordLen = _lastFindWord.length();", "-        if (_isForward) setPosition(getCurrentOffset() + wordLen);", "-        else setPosition(getCurrentOffset() - wordLen);", "-        positionChanged();", "-      }", "-      ", "+      int wordLen = _lastFindWord.length();", "+      if (_isForward) setPosition(getCurrentOffset() + wordLen);", "+      else setPosition(getCurrentOffset() - wordLen);", "+      positionChanged();", "+    }", "+    ", "-      ", "-      int offset = getCurrentOffset();", "+    ", "+    int offset = getCurrentOffset();", "-      if (_isForward) { ", "-        start = offset; ", "-        len = _doc.getLength() - offset; ", "-      }", "-      else { ", "-        start = 0; ", "-        len = offset; ", "-      }", "-      fr = _findNextInDoc(_doc, start, len, searchAll);", "+    if (_isForward) { ", "+      start = offset; ", "+      len = _doc.getLength() - offset; ", "-    finally { _doc.releaseReadLock(); }", "+    else { ", "+      start = 0; ", "+      len = offset; ", "+    }", "+    fr = _findNextInDoc(_doc, start, len, searchAll);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dea0a616c05d4adfe7ca9c65bde4efe6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "14164b6a15fd606e897810fd89f2e7edec0280c4", "commitAfterChange": "52c187d5d51895f0b58a56680e35117f80ff45ef", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   private FindResult findNext(boolean searchAll)", "signatureAfterChange": "   private FindResult findNext(boolean searchAll)", "diff": ["-  private FindResult findNext(boolean searchAll) {  ", "- ", "-    // If the user just found a match and toggled the \"Search Backwards\" option, we should skip the matched text.", "-    if (_skipText) {  // adjust position (offset)", "+  private FindResult findNext(boolean searchAll) {", "+    ", "+    // Find next match, if any, in _doc. ", "+    _doc.readLock();", "+    FindResult fr;", "+    int start;", "+    int len;", "+    try {", "+      ", "+      // If the user just found a match and toggled the \"Search Backwards\" option, we should skip the matched text.", "+      if (_skipText) {  // adjust position (offset)", "-      int wordLen = _lastFindWord.length();", "-      if (_isForward) setPosition(getCurrentOffset() + wordLen);", "-      else setPosition(getCurrentOffset() - wordLen);", "-      positionChanged();", "-    }", "-    ", "+        int wordLen = _lastFindWord.length();", "+        if (_isForward) setPosition(getCurrentOffset() + wordLen);", "+        else setPosition(getCurrentOffset() - wordLen);", "+        positionChanged();", "+      }", "+      ", "-    ", "-    int offset = getCurrentOffset();", "+      ", "+      int offset = getCurrentOffset();", "-    if (_isForward) return _findNext(_doc, offset, _doc.getLength() - offset, searchAll);", "-    return _findNext(_doc, 0, offset, searchAll);", "-  } ", "+      if (_isForward) { ", "+        start = offset; ", "+        len = _doc.getLength() - offset; ", "+      }", "+      else { ", "+        start = 0; ", "+        len = offset; ", "+      }", "+      fr = _findNextInDoc(_doc, start, len, searchAll);", "+    }", "+    finally { _doc.readUnlock(); }", "+    if ((fr.getFoundOffset() >= 0) || ! searchAll) return fr;  // match found in _doc", "+    // find match in other docs", "+    return _findNextInOtherDocs(_doc, start, len);"]}], "num": 822}