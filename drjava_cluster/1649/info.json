{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e0cb38161b463074dbdef88b40a7861", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46c14d688b265d718df0d239bf327e67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ConfigFrame(MainFrame frame)", "signatureAfterChange": "   public ConfigFrame(MainFrame frame)", "diff": ["+    ", "+    Action applyAction = new AbstractAction(\"Apply\") {", "+      public void actionPerformed(ActionEvent e) {", "+        // Always save settings", "+        try {", "+//          _mainFrame.enableResetInteractions();", "+          saveSettings(); ", "+          _applyButton.setEnabled(false); ", "+          ", "+        }", "+        catch (IOException ioe) {", "+        }", "+      }", "+    };", "+", "+    _applyButton = new JButton(applyAction);", "+    _applyButton.setEnabled(false);", "+    ", "+    Action okAction = new AbstractAction(\"OK\") {", "+      public void actionPerformed(ActionEvent e) {", "+        // Always apply and save settings", "+        boolean successful = true;", "+        try {", "+//          _mainFrame.enableResetInteractions();", "+          successful = saveSettings();", "+        }", "+        catch (IOException ioe) {", "+          // oh well...", "+        }", "+        if (successful) _applyButton.setEnabled(false);", "+        ConfigFrame.this.setVisible(false);", "+      }", "+    };", "+    _okButton = new JButton(okAction);", "+", "+", "+    Action cancelAction = new AbstractAction(\"Cancel\") {", "+      public void actionPerformed(ActionEvent e) {", "+        cancel();", "+      }", "+    };", "+    _cancelButton = new JButton(cancelAction);", "+", "-    _fileOptionChooser.setDialogTitle(\"Select\");", "-    _fileOptionChooser.setApproveButtonText(\"Select\");", "-    _fileOptionChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);", "-    _fileOptionChooser.setFileFilter(ClassPathFilter.ONLY);", "-    _browserChooser.setDialogTitle(\"Select Web Browser\");", "-    _browserChooser.setApproveButtonText(\"Select\");", "-    _browserChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);", "+    ", "-    _dirChooser.setSelectedFile(_getWorkDir());", "-    _dirChooser.setDialogTitle(\"Select\");", "-    _dirChooser.setApproveButtonText(\"Select\");", "-    _dirChooser.setMultiSelectionEnabled(false);", "+  ", "-    _createTree();", "+    /* Create tree and initialize tree. */", "+    _rootNode = new PanelTreeNode(\"Preferences\");", "+    _treeModel = new DefaultTreeModel(_rootNode);", "+    _tree = new JTree(_treeModel);", "+    ", "+    _initTree();", "+    ", "+    /* Create Panels. */", "-    /*", "-    _splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT,", "-                                treeScroll,", "-                                _mainPanel);", "-    cp.add(_splitPane, BorderLayout.CENTER);", "-    */", "-", "-    Action okAction = new AbstractAction(\"OK\") {", "-      public void actionPerformed(ActionEvent e) {", "-        // Always apply and save settings", "-        boolean successful = true;", "-        try {", "-//          _mainFrame.enableResetInteractions();", "-          successful = saveSettings();", "-        }", "-        catch (IOException ioe) {", "-          // oh well...", "-        }", "-        if (successful) {", "-          _applyButton.setEnabled(false);", "-        }", "-        ConfigFrame.this.setVisible(false);", "-      }", "-    };", "-    _okButton = new JButton(okAction);", "-", "-    Action applyAction = new AbstractAction(\"Apply\") {", "-      public void actionPerformed(ActionEvent e) {", "-        // Always save settings", "-        try {", "-//          _mainFrame.enableResetInteractions();", "-          saveSettings(); ", "-          _applyButton.setEnabled(false); ", "-  ", "-        }", "-        catch (IOException ioe) {", "-        }", "-      }", "-    };", "-    _applyButton = new JButton(applyAction);", "-    _applyButton.setEnabled(false);", "-", "-    Action cancelAction = new AbstractAction(\"Cancel\") {", "-      public void actionPerformed(ActionEvent e) {", "-        cancel();", "-      }", "-    };", "-    _cancelButton = new JButton(cancelAction);", "-", "-    /* Now always saves settings...", "-    _saveSettingsButton = new JButton(\"Save Settings\");", "-    _saveSettingsButton.setToolTipText(\"Save all settings to disk for future sessions.\");", "-    _saveSettingsButton.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        saveSettings();", "-      }", "-    });", "-    */", "-//    int width = getWidth() / 4;", "-//    System.out.println(\"width: \" + getWidth());", "-//    System.out.println(\"width for divider: \" + width);", "-//    _splitPane.setDividerLocation(width);", "-//    _mainPanel.setPreferredSize(new Dimension(getWidth() - width,", "-//                                              _splitPane.getHeight()));", "+", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6640243fd4b719fbbb186b6197c5db7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "527b327a81252940ede7723bc28a80b1911fdddb", "commitAfterChange": "60cd84614ab1a6d35590df8d34b30b47cae7364d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": "   private void init(boolean info)", "signatureAfterChange": "   private void init(boolean info)", "diff": ["-    _buttonPressed = JOptionPane.CANCEL_OPTION;", "+    _buttonPressed = null;", "-        cancelButtonPressed();", "+        buttonPressed(_actions.get(_actions.size()-1));", "-    _okButton.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) { okButtonPressed(); }", "-    });", "+    int i = 0;", "+    for (final CloseAction<T> a: _actions) {", "+      _buttons[i] = new JButton(a.getName());", "+      _buttons[i].addActionListener(new ActionListener() {", "+        public void actionPerformed(ActionEvent e) { buttonPressed(a); }", "+      });", "+      ++i;", "+    }", "-    getRootPane().setDefaultButton(_okButton);", "+    getRootPane().setDefaultButton(_buttons[0]);", "-    final JButton cancelButton = new JButton(\"Cancel\");", "-    cancelButton.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        cancelButtonPressed();", "-      }", "-    });", "-    ", "-        if ((e.getOppositeComponent() != _textField) && ", "-            (e.getOppositeComponent() != _okButton) && ", "-            (e.getOppositeComponent() != cancelButton)) {", "+        boolean bf = false;", "+        for (JButton b: _buttons) { if (e.getOppositeComponent() == b) { bf = true; break; } }", "+        if ((e.getOppositeComponent() != _textField) && (!bf)) {", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), new AbstractAction() {", "-      public void actionPerformed(ActionEvent e) {", "-//        System.out.println(\"esc!\");", "-        cancelButtonPressed();", "+    for (final CloseAction<T> a: _actions) {", "+      KeyStroke ks = a.getKeyStroke();", "+      if (ks!=null) {", "+        ourMap.addActionForKeyStroke(ks, new AbstractAction() {", "+          public void actionPerformed(ActionEvent e) {", "+            buttonPressed(a);", "+          }", "+        });", "-    });", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), new AbstractAction() {", "-      public void actionPerformed(ActionEvent e) {", "-//        System.out.println(\"enter!\");", "-        okButtonPressed();", "-      }", "-    });", "+    }", "-    ", "-//    _textField.addKeyListener(new KeyAdapter() {", "-//      public void keyTyped(KeyEvent e) {", "-//        char c = e.getKeyChar();", "-//        if ((c != KeyEvent.VK_DELETE) && (c != KeyEvent.VK_BACK_SPACE) && (c >= 32)) {", "-//          String oldMask = _pim.getMask();", "-//          String newMask = oldMask.substring(0, _textField.getCaretPosition()) + c + ", "-//            oldMask.substring(_textField.getCaretPosition());", "-//          _pim.setMask(newMask);", "-//          if (_force && (_pim.getMatchingItems().size()==0)) {", "-//            Toolkit.getDefaultToolkit().beep();", "-//            e.consume();", "-//          }", "-//          _pim.setMask(oldMask);", "-//        }", "-//      }", "-//    });", "-        if ((e.getOppositeComponent() != _strategyBox) && ", "-            (e.getOppositeComponent() != _okButton) && ", "-            (e.getOppositeComponent() != cancelButton)) {", "+        boolean bf = false;", "+        for (JButton b: _buttons) { if (e.getOppositeComponent() == b) { bf = true; break; } }", "+        if ((e.getOppositeComponent() != _strategyBox) && (!bf)) {", "-    c.anchor = GridBagConstraints.SOUTH;", "+    c.anchor = GridBagConstraints.SOUTHWEST;", "+    c.weightx = 1.0;", "+    c.weighty = 0.0;", "+    c.gridwidth = GridBagConstraints.REMAINDER; // end row", "+    c.insets.top = 2;", "+    c.insets.left = 2;", "+    c.insets.bottom = 2;", "+    c.insets.right = 2;", "-    buttonPanel.add(_okButton, bc);", "-    buttonPanel.add(cancelButton, bc);", "+    for(JButton b: _buttons) { buttonPanel.add(b, bc); }", "-    Dimension parentDim = (_owner !=null) ? _owner.getSize() : getToolkit().getScreenSize();", "-    int xs = (int)parentDim.getWidth()/3;", "-    int ys = (int)parentDim.getHeight()/4;", "-    setSize(Math.max(xs,400), Math.max(ys, 300));", "+    // Dimension parentDim = (_owner !=null) ? _owner.getSize() : getToolkit().getScreenSize();", "+    // int xs = (int)parentDim.getWidth()/3;", "+    // int ys = (int)parentDim.getHeight()/4;", "+    // setSize(Math.max(xs,400), Math.max(ys, 300));", "+    pack();"]}], "num": 1649}