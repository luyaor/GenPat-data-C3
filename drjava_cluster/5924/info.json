{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98db84b9ad09c584612d5c2aaaf3af32", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af947748d150bb2f0f70066ab7da8d21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tprivate void _clipRight(int offset, ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\tcopyCursor)", "signatureAfterChange": "   private void _clipRight(int offset, ModelList<ReducedToken>.Iterator                           copyCursor)", "diff": ["+  */", "+  private void _clipRight(int offset, ModelList<ReducedToken>.Iterator", "+                          copyCursor)", "+  {", "+    if (copyCursor.atEnd()) {", "+      return;", "+    }", "+    else if (offset == 0) {", "+      return;", "+    }", "+    else if (offset == copyCursor.current().getSize()) {", "+      copyCursor.remove();", "+    }", "+    else if (copyCursor.current().isGap()) {", "+      copyCursor.current().shrink(offset);", "+    }", "+    else if (copyCursor.current().isMultipleCharBrace()) {", "+      if (offset != 1) {", "+        throw new IllegalArgumentException(\"Offset incorrect\");", "+      }", "+      else {", "+        String type = copyCursor.current().getType();", "+        String second = type.substring(1,2);", "+        copyCursor.current().setType(second);", "+      }", "+    }", "+    else {", "+      throw new IllegalArgumentException(\"Cannot clip left.\");", "+    }", "+  }", "-   */", "-\tprivate void _clipRight(int offset, ModelList<ReducedToken>.Iterator", "-\t\t\t\t\t\t\t\t\t\t\t\t\tcopyCursor)", "-\t\t{", "-\t\t\tif (copyCursor.atEnd()){", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\telse if (offset == 0) {", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\telse if (offset == copyCursor.current().getSize()){", "-\t\t\t\tcopyCursor.remove();", "-\t\t\t}", "-\t\t\telse if (copyCursor.current().isGap()){", "-\t\t\t\tcopyCursor.current().shrink(offset);", "-\t\t\t}", "-\t\t\telse if (copyCursor.current().isMultipleCharBrace()){", "-\t\t\t\tif (offset != 1)", "-\t\t\t\t\tthrow new IllegalArgumentException(\"Offset incorrect\");", "-\t\t\t\telse{", "-\t\t\t\t\tString type = copyCursor.current().getType();", "-\t\t\t\t\tString second = type.substring(1,2);", "-\t\t\t\t\tcopyCursor.current().setType(second);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\tthrow new IllegalArgumentException(\"Cannot clip left.\");", "-\t\t\t}", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7b17b0067cd7cd27b6d6c2183206d3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tprivate void _clipRight(int offset, ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\tcopyCursor)", "signatureAfterChange": "   private void _clipRight(int offset, ModelList<ReducedToken>.Iterator                           copyCursor)", "diff": ["+  */", "+  private void _clipRight(int offset, ModelList<ReducedToken>.Iterator", "+                          copyCursor)", "+  {", "+    if (copyCursor.atEnd()) {", "+      return;", "+    }", "+    else if (offset == 0) {", "+      return;", "+    }", "+    else if (offset == copyCursor.current().getSize()) {", "+      copyCursor.remove();", "+    }", "+    else if (copyCursor.current().isGap()) {", "+      copyCursor.current().shrink(offset);", "+    }", "+    else if (copyCursor.current().isMultipleCharBrace()) {", "+      if (offset != 1) {", "+        throw new IllegalArgumentException(\"Offset incorrect\");", "+      }", "+      else {", "+        String type = copyCursor.current().getType();", "+        String second = type.substring(1,2);", "+        copyCursor.current().setType(second);", "+      }", "+    }", "+    else {", "+      throw new IllegalArgumentException(\"Cannot clip left.\");", "+    }", "+  }", "-   */", "-\tprivate void _clipRight(int offset, ModelList<ReducedToken>.Iterator", "-\t\t\t\t\t\t\t\t\t\t\t\t\tcopyCursor)", "-\t\t{", "-\t\t\tif (copyCursor.atEnd()){", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\telse if (offset == 0) {", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\telse if (offset == copyCursor.current().getSize()){", "-\t\t\t\tcopyCursor.remove();", "-\t\t\t}", "-\t\t\telse if (copyCursor.current().isGap()){", "-\t\t\t\tcopyCursor.current().shrink(offset);", "-\t\t\t}", "-\t\t\telse if (copyCursor.current().isMultipleCharBrace()){", "-\t\t\t\tif (offset != 1)", "-\t\t\t\t\tthrow new IllegalArgumentException(\"Offset incorrect\");", "-\t\t\t\telse{", "-\t\t\t\t\tString type = copyCursor.current().getType();", "-\t\t\t\t\tString second = type.substring(1,2);", "-\t\t\t\t\tcopyCursor.current().setType(second);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\tthrow new IllegalArgumentException(\"Cannot clip left.\");", "-\t\t\t}", "-\t\t}"]}], "num": 5924}