{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd56dec660f9f003a1e00b8b6bb81d72", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38e53fc36a852563d7caa2423307d38b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 32, "signatureBeforeChange": "       private void _testFindNextFails(FindReplaceMachine frm, ContinueCommand cont, int start, int current)", "signatureAfterChange": "      private void _testFindNextFails(final FindReplaceMachine frm, int start, int current)", "diff": ["-  private void _testFindNextFails(FindReplaceMachine frm, ContinueCommand cont, int start, int current) {", "-    try {", "-    int findOffset = frm.findNext().getFoundOffset();", "-    assertEquals(\"findNext return value\", -1, findOffset);", "+  private void _testFindNextFails(final FindReplaceMachine frm, int start, int current) {", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        try { _offset = frm.findNext().getFoundOffset(); }", "+        catch(Exception e) { throw new UnexpectedException(e); }", "+      }", "+    });", "+    assertEquals(\"findNext return value\", -1, _offset);", "-    }", "-    catch(Exception e) { fail(\"Threw exception: \" + e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9b4e16af3de06fa11d5301fc6a8df3d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": "    private void _testFindNextSucceeds(FindReplaceMachine frm, ContinueCommand cont, int start, int found)", "signatureAfterChange": "     private void _testFindNextSucceeds(final FindReplaceMachine frm, int start, int found)", "diff": ["-  private void _testFindNextSucceeds(FindReplaceMachine frm, ContinueCommand cont, int start, int found) {", "-    try {", "-    int findOffset = frm.findNext().getFoundOffset();", "-    assertEquals(\"findNext return value\", found, findOffset);", "-    }", "-    catch(Exception e) { fail(\"Threw exception: \" + e); }", "-  }", "+  private void _testFindNextSucceeds(final FindReplaceMachine frm, int start, int found) {", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        try { _offset = frm.findNext().getFoundOffset(); }", "+        catch(Exception e) { throw new UnexpectedException(e); }", "+      }", "+    });", "+    assertEquals(\"findNext return value\", found, _offset);", "+    _assertOffsets(frm, start, found);", "+    assertTrue(\"on find text\", frm.onMatch());", "+  }"]}], "num": 30546}