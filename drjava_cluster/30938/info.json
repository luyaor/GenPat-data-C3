{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "425fcae806811b97ee251c0432d5dea3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c09366b12f2583b0a12fb07bce514ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "commitAfterChange": "ead43466202abb204c90f7ee2c316fec230d4415", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 67, "signatureBeforeChange": "          private void compare(String context, Node left, Node right)", "signatureAfterChange": "          private void compare(String context, Node left, Node right)", "diff": ["-        if (left instanceof Statement || left instanceof VariableDeclaration || left instanceof Expression) {", "-          if (hasNestedError(left) || hasNestedError(right)) {", "-            _log.statementWithError(context, left, right);", "+        if ((left instanceof Statement && !(left instanceof BlockStatement)) ||", "+             left instanceof VariableDeclaration ||", "+             left instanceof FieldDeclaration ||", "+             left instanceof Expression) {", "+          if (hasNestedError(left)) {", "+            if (hasNestedError(right)) { _log.commonErrorStatement(context, left, right); }", "+            else { _log.leftErrorStatement(context, left, right); }", "+            return;", "+          }", "+          else if (hasNestedError(right)) {", "+            _log.rightErrorStatement(context, left, right);", "+          }", "+          else if (left instanceof MethodDeclaration && !IterUtil.isEmpty(m.typeParameters())) {", "+            _log.polymorphicDeclaration(context, left, right);", "+            if (left instanceof ConstructorDeclaration) { _log.polymorphicDeclaration(context, left, right); }", "+        }", "+        if (left instanceof HookTypeName) {", "+          HookTypeName t = (HookTypeName) left;", "+          _log.wildcard(context, left, right, t.getUpperBound().isSome(), t.getLowerBound().isSome());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1b24bdef116bca179a53f509e624a57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandlerThread.java", "commitBeforeChange": "6bfab9f5cad6f12d0935dd59b83d99bfc86909eb", "commitAfterChange": "5aacfadc90765b33349d6f9aff91d50fefd76986", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void handleEvent(Event e) throws DebugException", "signatureAfterChange": "   public void handleEvent(Event e) throws DebugException", "diff": ["-    if (e instanceof BreakpointEvent) {", "-      _handleBreakpointEvent((BreakpointEvent) e);", "-    }", "-    else if (e instanceof StepEvent) {", "-      _handleStepEvent((StepEvent) e);", "-    }", "+    if (e instanceof BreakpointEvent) _handleBreakpointEvent((BreakpointEvent) e);", "+    else if (e instanceof StepEvent) _handleStepEvent((StepEvent) e);", "-    else if (e instanceof ClassPrepareEvent) {", "-      _handleClassPrepareEvent((ClassPrepareEvent) e);", "-    }", "-    else if (e instanceof ThreadStartEvent) {", "-      _handleThreadStartEvent((ThreadStartEvent) e);", "-    }", "-    else if (e instanceof ThreadDeathEvent) {", "-      _handleThreadDeathEvent((ThreadDeathEvent) e);", "-    }", "-    else if (e instanceof VMDeathEvent) {", "-      _handleVMDeathEvent((VMDeathEvent) e);", "-    }", "-    else if (e instanceof VMDisconnectEvent) {", "-      _handleVMDisconnectEvent((VMDisconnectEvent) e);", "-    }", "-    else {", "+    else if (e instanceof ClassPrepareEvent) _handleClassPrepareEvent((ClassPrepareEvent) e);", "+    else if (e instanceof ThreadStartEvent) _handleThreadStartEvent((ThreadStartEvent) e);", "+    else if (e instanceof ThreadDeathEvent) _handleThreadDeathEvent((ThreadDeathEvent) e);", "+    else if (e instanceof VMDeathEvent) _handleVMDeathEvent((VMDeathEvent) e);", "+    else if (e instanceof VMDisconnectEvent) _handleVMDisconnectEvent((VMDisconnectEvent) e);", "+    else", "-    }"]}], "num": 30938}