{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "baeda937c463a82a0e8fdb06f7b6c8a1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a70bd20dfc41bb1c51410182a8e1a8d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/SystemOutLog.java", "commitBeforeChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "commitAfterChange": "1635ebcc866330c5b8ab6470e164e0d8b3584d8f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public SystemOutLog()", "signatureAfterChange": "   public SystemOutLog()", "diff": ["-  /** Create a log to {@code System.out} without filtering */", "-  public SystemOutLog() { super(); }", "+  /** Create a log to {@code System.out} without filtering, using the platform's default charset. */", "+  public SystemOutLog() {", "+    // binding to System.out is delayed to be thread safe (using \"System.out\" both in the super call", "+    // and the field initialization raises the possibility that its value changes in between the two refs)", "+    super(VoidOutputStream.INSTANCE);", "+    _currentOutput = VoidOutputStream.INSTANCE;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7be4e1712a38c05ba4528d05ef2b9b40", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/SystemErrLog.java", "commitBeforeChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "commitAfterChange": "1635ebcc866330c5b8ab6470e164e0d8b3584d8f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public SystemErrLog()", "signatureAfterChange": "   public SystemErrLog()", "diff": ["-  /** Create a log to {@code System.err} without filtering */", "-  public SystemErrLog() { super(); }", "+  /** Create a log to {@code System.err} without filtering, using the platform's default charset. */", "+  public SystemErrLog() {", "+    // binding to System.err is delayed to be thread safe (using \"System.err\" both in the super call", "+    // and the field initialization raises the possibility that its value changes in between the two refs)", "+    super(VoidOutputStream.INSTANCE);", "+    _currentOutput = VoidOutputStream.INSTANCE;", "+  }"]}], "num": 22613}