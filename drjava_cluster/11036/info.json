{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0327e29e386ded7f4166d619bdd4226f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "349e54fcd58eadcec6f4bb8d4f2588cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectMenuTest.java", "commitBeforeChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "commitAfterChange": "6d55d86705248616cac5b324a7c528485ceb6104", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testSetBuildDirectory() throws MalformedProjectFileException, IOException", "signatureAfterChange": "      public void testSetBuildDirectory() throws MalformedProjectFileException, IOException", "diff": ["-    _model.openProject(_projFile);", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        try { _model.openProject(_projFile); }", "+        catch(Exception e) { throw new UnexpectedException(e); }", "+      } ", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6baeffec8344061311e35f8e31cc170", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "72303a17e4a44248ba3fe5d5f9c3d69081ba78b5", "commitAfterChange": "1a00210ae1e41be9246fee06894f37a248cf99ce", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 81, "signatureBeforeChange": "   public void testGotoFileUnderCursorShowDialog() throws IOException", "signatureAfterChange": "   public void testGotoFileUnderCursorShowDialog() throws IOException", "diff": ["-    String goto1_string = \"GotoFileUnderCursor\";", "+    final String goto1_string = \"GotoFileUnderCursor\";", "-    SingleDisplayModel model = _frame.getModel();", "-    model.setActiveDocument(model.getDocumentForFile(goto1_file));", "-    ", "-    assertEquals(\"Document contains the incorrect text\", goto1_string, model.getActiveDocument().getText());", "-    ", "+    Utilities.invokeAndWait(new Runnable() { public void run() {", "+      SingleDisplayModel model = _frame.getModel();", "+      try {", "+        model.setActiveDocument(model.getDocumentForFile(goto1_file));", "+        ", "+        assertEquals(\"Document contains the incorrect text\", goto1_string, model.getActiveDocument().getText());", "+      }", "+      catch(IOException ioe) { throw new UnexpectedException(ioe); }", "+    } });", "+"]}], "num": 11036}