{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44a1f223948502d59ac067cf4115fc48", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a7f97e7755c7c1c42ab9f49b6fc8c06", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void testAfterBlockComment4()", "signatureAfterChange": "    public void testAfterBlockComment4() throws BadLocationException", "diff": ["-\tpublic void testAfterBlockComment4()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n{\\n  hello;\\n /*\\n  hello\\n */ hello\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n{\\n  hello;\\n /*\\n  hello\\n  */ hello\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}", "+  public void testAfterBlockComment4() throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  hello;\\n /*\\n  hello\\n */ hello\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n{\\n  hello;\\n /*\\n  hello\\n  */ hello\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd91cba49263952790df132ff37caa9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void testAfterBlockComment4()", "signatureAfterChange": "    public void testAfterBlockComment4() throws BadLocationException", "diff": ["-\tpublic void testAfterBlockComment4()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n{\\n  hello;\\n /*\\n  hello\\n */ hello\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n{\\n  hello;\\n /*\\n  hello\\n  */ hello\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}", "+  public void testAfterBlockComment4() throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  hello;\\n /*\\n  hello\\n */ hello\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n{\\n  hello;\\n /*\\n  hello\\n  */ hello\", doc.getText(0, doc.getLength()));", "+  }"]}], "num": 11201}