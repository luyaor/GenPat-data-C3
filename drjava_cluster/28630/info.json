{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4df8f4b135d1af07a01c30a5998a184", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09beb0563459722780ba1e3eb9a354c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "591ec87995880046281596623701cb5a561fc66e", "commitAfterChange": "ce73fdb27a8e7aa886580e240ca54bfd98e64031", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": "     private void notifyOfCollapse(int leftPos, int rightPos, Node<T> rightPoint)", "signatureAfterChange": "     private void notifyOfCollapse(int leftPos, int rightPos, Node<T> rightPoint)", "diff": ["-     */", "+    /** Notifies the iterators in _listeners that a range of nodes has been collapsed. */", "-      for (Iterator listener : ModelList.this._listeners) {", "-        if ( listener._pos <= leftPos ) {", "-          // do nothing", "-        }", "-        else if (( listener._pos > leftPos ) && ( listener._pos <= rightPos )) {", "+      for (Iterator listener : _listeners) {", "+        int lisPos = listener._pos;", "+        if (lisPos <= leftPos) continue;", "+        if (lisPos < rightPos) {", "-        else { // next._pos > rightPos", "-          listener._pos -= (rightPos - leftPos - 1);", "+        else { // lisPos >+ rightPos", "+          listener._pos = lisPos - (rightPos - leftPos - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39d9dac93525a2881f37584025ed6be7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "591ec87995880046281596623701cb5a561fc66e", "commitAfterChange": "ce73fdb27a8e7aa886580e240ca54bfd98e64031", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void notifyOfInsert(int pos)", "signatureAfterChange": "     private void notifyOfInsert(int pos)", "diff": ["-     */", "+    /** Notifies the iterators in _listeners that a node has been inserted. */", "-      for (Iterator listener : ModelList.this._listeners) {", "-        if ( listener._pos < pos ) {", "-          // do nothing", "-        }", "-        else { // ( next._pos == pos ) || next._pos > pos", "-          listener._pos += 1;", "-        }", "+      for (Iterator listener : _listeners) {", "+        int lisPos = listener._pos;", "+        if (lisPos >= pos) listener._pos = lisPos + 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d79914c217774fceec860c597a363565", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "591ec87995880046281596623701cb5a561fc66e", "commitAfterChange": "ce73fdb27a8e7aa886580e240ca54bfd98e64031", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private void notifyOfRemove(int pos, Node<T> point)", "signatureAfterChange": "     private void notifyOfRemove(int pos, Node<T> point)", "diff": ["-     */", "+    /** Notifies the iterators in _listeners that a node has been removed. */", "-      for (Iterator listener : ModelList.this._listeners) {", "-        if ( listener._pos < pos ) {", "-          // do nothing", "-        }", "-        else if ( listener._pos == pos ) {", "-          listener._point = point;", "-        }", "-        else { // next._pos > pos", "-          listener._pos -= 1;", "-        }", "+      for (Iterator listener : _listeners) {", "+        int lisPos = listener._pos;", "+        if (lisPos == pos) listener._point = point;", "+        else if (lisPos > pos) listener._pos = lisPos - 1;"]}], "num": 28630}