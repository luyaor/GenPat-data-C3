{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ceab010971e0023276b834de47b29a0f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07e0cfdabe81343d55a699a98c224192", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListSortNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private int insertDoc(INavigatorItem doc)", "signatureAfterChange": "   private int insertDoc(INavigatorItem doc)", "diff": ["-  private int insertDoc(INavigatorItem doc){", "-    int i=0;", "-    while(i<_docs.size() && (_docs.get(i).getName().toUpperCase().compareTo(doc.getName().toUpperCase())) < 0){", "-      i++;", "+  private int insertDoc(INavigatorItem doc) {", "+    int i = 0;", "+    synchronized (_model) {", "+      while (i<_model.size() && ((INavigatorItem)(_model.get(i))).getName().toUpperCase().compareTo(doc.getName().toUpperCase()) < 0) {", "+        i++;", "+      }", "+      _model.add(i, doc);", "-    _docs.add(i, doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e6e440decaa9a365f9fd206f394ff97", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocumentAdapter.java", "commitBeforeChange": "fa78ee7a06602f123abf33b8aef0005c93bb3efa", "commitAfterChange": "f26f93ad5e4b158c960a6cefd64cf99f7137ecbc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public synchronized void setBoldFonts(int point, Graphics g)", "signatureAfterChange": "   public void setBoldFonts(int point, Graphics g)", "diff": ["-   */", "-  public synchronized void setBoldFonts(int point, Graphics g) {", "-    for(Pair<Pair<Integer,Integer>,String> p :  _stylesList) {", "-      Pair<Integer,Integer> loc = p.getFirst();", "-      if(loc.getFirst() <= point && loc.getSecond() >= point) {", "-        if(p.getSecond().equals(InteractionsDocument.ERROR_STYLE)) {", "-          g.setFont(g.getFont().deriveFont(Font.BOLD));", "-        }", "-        else if(p.getSecond().equals(InteractionsDocument.DEBUGGER_STYLE)) {", "-          g.setFont(g.getFont().deriveFont(Font.BOLD));", "-        }", "-        else {", "-          g.setFont(ColoringView.MAIN_FONT);", "-        }", "-        return;", "-      }", "+  /** Attempts to set the font on the graphics context based upon the styles held in the styles list. */", "+  public void setBoldFonts(int point, Graphics g) {", "+    synchronized (_stylesList) {", "+      for(Pair<Pair<Integer,Integer>,String> p :  _stylesList) {", "+        Pair<Integer,Integer> loc = p.getFirst();", "+        if(loc.getFirst() <= point && loc.getSecond() >= point) {", "+          if(p.getSecond().equals(InteractionsDocument.ERROR_STYLE))", "+            g.setFont(g.getFont().deriveFont(Font.BOLD));", "+          else if(p.getSecond().equals(InteractionsDocument.DEBUGGER_STYLE))", "+            g.setFont(g.getFont().deriveFont(Font.BOLD));", "+          else  g.setFont(MAIN_FONT);", "+          return;", "+        }", "+      }", "+    }", "+  }"]}], "num": 19284}