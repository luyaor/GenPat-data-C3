{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "297df4f06cca6837e2f56fd1d43441e5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46e4171f01136e6dc4770ecc88a6f226", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 377, "signatureBeforeChange": "\r \r   public void forPackageImportStatement(PackageImportStatement that)", "signatureAfterChange": "    public void forPackageImportStatement(PackageImportStatement that)", "diff": ["-\r", "-  public void forPackageImportStatement(PackageImportStatement that) {\r", "-    forPackageImportStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getCWord().visit(this);\r", "-    forPackageImportStatementOnly(that);\r", "-  }\r", "+", "+  public void forPackageImportStatement(PackageImportStatement that) {", "+    forPackageImportStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getCWord().visit(this);", "+    forPackageImportStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ef1ad9064f4df54ddecc7c9c2cd1d78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 375, "methodNumberAfterChange": 375, "signatureBeforeChange": "\r \r   public void forPackageStatement(PackageStatement that)", "signatureAfterChange": "    public void forPackageStatement(PackageStatement that)", "diff": ["-\r", "-  public void forPackageStatement(PackageStatement that) {\r", "-    forPackageStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getCWord().visit(this);\r", "-    forPackageStatementOnly(that);\r", "-  }\r", "+", "+  public void forPackageStatement(PackageStatement that) {", "+    forPackageStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getCWord().visit(this);", "+    forPackageStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb68e7d4903fa60c6b1b02c84a97140e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 376, "methodNumberAfterChange": 376, "signatureBeforeChange": "\r \r   public void forClassImportStatement(ClassImportStatement that)", "signatureAfterChange": "    public void forClassImportStatement(ClassImportStatement that)", "diff": ["-\r", "-  public void forClassImportStatement(ClassImportStatement that) {\r", "-    forClassImportStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getCWord().visit(this);\r", "-    forClassImportStatementOnly(that);\r", "-  }\r", "+", "+  public void forClassImportStatement(ClassImportStatement that) {", "+    forClassImportStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getCWord().visit(this);", "+    forClassImportStatementOnly(that);", "+  }"]}], "num": 17119}