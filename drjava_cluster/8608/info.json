{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9a78c1cdcb0c25e97d3415fc23e6a3d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "130445aff05c4aa66da00a665493cbdb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public Object visit(ObjectFieldAccess node)", "signatureAfterChange": "   public Node visit(ObjectFieldAccess node)", "diff": ["+   */", "+  public Node visit(ObjectFieldAccess node) {", "+    // Visit the expression", "+    Node o = node.getExpression().acceptVisitor(this);", "+    if (o != null) {", "+      if (o instanceof ReferenceType) {", "+        return new StaticFieldAccess((ReferenceType)o,", "+                                     node.getFieldName(),", "+                                     node.getFilename(),", "+                                     node.getBeginLine(),", "+                                     node.getBeginColumn(),", "+                                     node.getEndLine(),", "+                                     node.getEndColumn()", "+      );", "+      } else {", "+        node.setExpression((Expression)o);", "+      }", "+    }", "+    return null;", "+  }", "-     */", "-    public Object visit(ObjectFieldAccess node) {", "-        // Visit the expression", "-        Object o = node.getExpression().acceptVisitor(this);", "-        if (o != null) {", "-            if (o instanceof ReferenceType) {", "-                return new StaticFieldAccess((ReferenceType)o,", "-\t\t\t\t\t     node.getFieldName(),", "-\t\t\t\t\t     node.getFilename(),", "-\t\t\t\t\t     node.getBeginLine(),", "-\t\t\t\t\t     node.getBeginColumn(),", "-\t\t\t\t\t     node.getEndLine(),", "-\t\t\t\t\t     node.getEndColumn());", "-            } else {", "-                node.setExpression((Expression)o);", "-            }", "-        }", "-\treturn null;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39dc92755e2ef33231077a845745cfe2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 77, "signatureBeforeChange": "     private void visitBinaryExpression(BinaryExpression node)", "signatureAfterChange": "   private void visitBinaryExpression(BinaryExpression node)", "diff": ["+   */", "+  private void visitBinaryExpression(BinaryExpression node) {", "+    // Visit the left expression", "+    Node o = node.getLeftExpression().acceptVisitor(this);", "+    if (o != null) {", "+      rejectReferenceType(o,node);", "+      node.setLeftExpression((Expression)o);", "+      }", "+    ", "+    // Visit the right expression", "+    o = node.getRightExpression().acceptVisitor(this);", "+    if (o != null) {", "+      rejectReferenceType(o,node);", "+      node.setRightExpression((Expression)o);", "+    }", "+  }", "-     */", "-    private void visitBinaryExpression(BinaryExpression node) {", "-        // Visit the left expression", "-        Object o = node.getLeftExpression().acceptVisitor(this);", "-        if (o != null) {", "-            if (o instanceof Expression) {", "-                node.setLeftExpression((Expression)o);", "-            } else {", "-                throw new ExecutionError(\"left.operand\", node);", "-            }", "-        }", "-", "-        // Visit the right expression", "-        o = node.getRightExpression().acceptVisitor(this);", "-        if (o != null) {", "-            if (o instanceof Expression) {", "-                node.setRightExpression((Expression)o);", "-            } else {", "-                throw new ExecutionError(\"right.operand\", node);", "-            }", "-        }", "-    }"]}], "num": 8608}