{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68eed645aefaa28bca7f3776a43e41f9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e4d69195675153ee04a15697e5772fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "3a27fdcf5b864c5b5279a3c8d8f9dbb297967a71", "commitAfterChange": "69b3a1d533ce4a667d07ab3342b6d3841c2073dd", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void testCompileReferenceToNonPublicClass() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileReferenceToNonPublicClass() throws BadLocationException, IOException, InterruptedException", "diff": ["+    _model.setResetAfterCompile(false);", "+    ", "-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(false);", "-    synchronized(listener) {", "+    //synchronized(listener) {", "-      listener.wait();", "-    }", "+      //listener.wait();", "+    //}", "-    CompileShouldSucceedListener listener2 = new CompileShouldSucceedListener();", "+    CompileShouldSucceedListener listener2 = new CompileShouldSucceedListener(false);", "-    synchronized(listener2) {", "+    //synchronized(listener2) {", "-      listener2.wait();", "-    }", "+      //listener2.wait();", "+    //}", "+    ", "+    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f7f55959902a387e629148405064ba5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "3a27fdcf5b864c5b5279a3c8d8f9dbb297967a71", "commitAfterChange": "69b3a1d533ce4a667d07ab3342b6d3841c2073dd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testCompileClasspathOKDifferentPackages()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileClasspathOKDifferentPackages()     throws BadLocationException, IOException, InterruptedException", "diff": ["+    _model.setResetAfterCompile(false);", "+    ", "-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(false);", "-    synchronized(listener) {", "+    //synchronized(listener) {", "-      listener.wait();", "-    }", "+      //listener.wait();", "+    //}", "-    CompileShouldSucceedListener listener2 = new CompileShouldSucceedListener();", "+    CompileShouldSucceedListener listener2 = new CompileShouldSucceedListener(false);", "-    synchronized(listener2) {", "+    //synchronized(listener2) {", "-      listener2.wait();", "-    }", "+      //listener2.wait();", "+    //}", "+    ", "+    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2dd594dc4f8484885d49b7e402a7699", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "3a27fdcf5b864c5b5279a3c8d8f9dbb297967a71", "commitAfterChange": "69b3a1d533ce4a667d07ab3342b6d3841c2073dd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testCompileClasspathOKDefaultPackage()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileClasspathOKDefaultPackage()     throws BadLocationException, IOException, InterruptedException", "diff": ["+    _model.setResetAfterCompile(false);", "+    ", "-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(false);", "-    synchronized(listener) {   ", "+    //synchronized(listener) {   ", "-      listener.wait();", "-    }", "+      //listener.wait();", "+    //}", "-    CompileShouldSucceedListener listener2 = new CompileShouldSucceedListener();", "+    CompileShouldSucceedListener listener2 = new CompileShouldSucceedListener(false);", "-    synchronized(listener2) {", "+    //synchronized(listener2) {", "-      listener2.wait();", "-    }", "+      //listener2.wait();", "+    //}", "+    ", "+    _model.setResetAfterCompile(true);"]}], "num": 8436}