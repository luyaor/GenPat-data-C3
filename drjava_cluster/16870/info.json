{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4c35e09a03db44c6c418e70038cffa3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba4437862d0cc6bc14ed0c9a502a55d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testOpenFileDisallowAbandon()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCloseFileDisallowAbandon() throws BadLocationException", "diff": ["+  public void testCloseFileDisallowAbandon() throws BadLocationException {", "+    OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "+", "+    TestListener listener = new TestListener() {", "+      public boolean canAbandonFile(OpenDefinitionsDocument doc) {", "+        canAbandonCount++;", "+        return false; // no, don't abandon our document!!!", "+      }", "+", "+      public void fileClosed(OpenDefinitionsDocument doc) {", "+         closeCount++;", "+      }", "+    };", "+", "+    _model.addListener(listener);", "+    _model.closeFile(doc);", "+    listener.assertAbandonCount(1);", "+    listener.assertCloseCount(0);", "+  }", "-   */", "-  public void testOpenFileDisallowAbandon()", "-    throws BadLocationException, IOException", "-  {", "-    setupDocument(FOO_TEXT);", "-", "-    TestListener listener = new TestListener() {", "-      public boolean canAbandonFile(File file) {", "-        canAbandonCount++;", "-        return false; // no, don't abandon our document!!!", "-      }", "-    };", "-", "-    _model.addListener(listener);", "-    _model.openFile(new FileSelector(new File(\"junk-doesnt-exist\")));", "-    listener.assertAbandonCount(1);", "-    assertModified(true);", "-    assertContents(FOO_TEXT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cb4d5b94b58a58ea3718fabcf8034ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testNewFileDisallowAbandon() throws BadLocationException", "signatureAfterChange": "   public void testMultipleFiles() throws BadLocationException", "diff": ["+  public void testMultipleFiles() throws BadLocationException {", "+    assertNumOpenDocs(0);", "+    OpenDefinitionsDocument doc1 = setupDocument(FOO_TEXT);", "+    assertNumOpenDocs(1);", "+", "+    // Create a second, empty document", "+    OpenDefinitionsDocument doc2 = _model.newFile();", "+    assertNumOpenDocs(2);", "+    assertModified(true, doc1);", "+    assertModified(false, doc2);", "+    assertContents(FOO_TEXT, doc1);", "+    assertLength(0, doc2);", "+", "+    // Modify second document", "+    changeDocumentText(BAR_TEXT, doc2);", "+    assertModified(true, doc2);", "+    assertContents(FOO_TEXT, doc1);", "+    assertContents(BAR_TEXT, doc2);", "+  }", "-   */", "-  public void testNewFileDisallowAbandon() throws BadLocationException {", "-    setupDocument(FOO_TEXT);", "-", "-    TestListener listener = new TestListener() {", "-      public boolean canAbandonFile(File file) {", "-        canAbandonCount++;", "-        return false; // no, don't abandon our document!!!", "-    _model.newFile();", "-    listener.assertAbandonCount(1);", "-    assertModified(true);", "-    assertContents(FOO_TEXT);"]}], "num": 16870}