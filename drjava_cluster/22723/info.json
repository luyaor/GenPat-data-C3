{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "699401765e63c1fdac5bb0d74dce6093", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4617d0840873bb9b6b30439f5b4e75ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public synchronized void testBreakpoints()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testBreakpoints() throws Exception", "diff": ["-  public synchronized void testBreakpoints()", "-    throws DebugException, BadLocationException, DocumentAdapterException,", "-    IOException, InterruptedException", "-  {", "+  public synchronized void testBreakpoints() throws Exception {", "-    ", "-    // Compile the class", "-    OpenDefinitionsDocument doc = doCompile(DEBUG_CLASS, tempFile());", "-    // Start debugger", "-    synchronized(_notifierLock) {", "-      _debugger.startup();", "-      _waitForNotifies(1);", "-      _notifierLock.wait();", "-    }", "+    ", "+    // Start up", "+    OpenDefinitionsDocument doc = _startupDebugger(\"DrJavaDebugClass.java\",", "+                                                   DEBUG_CLASS);", "-    // Close doc and make sure breakpoints are removed", "-    _model.closeFile(doc);", "-    debugListener.assertBreakpointRemovedCount(2);  //fires twice (no waiting)", "-      ", "-    // Shutdown the debugger", "-    if (printMessages) System.out.println(\"Shutting down...\");", "-    synchronized(_notifierLock) {", "-      _debugger.shutdown();", "-      _waitForNotifies(1);  // shutdown", "-      _notifierLock.wait();", "-    }", "-    ", "-    debugListener.assertDebuggerShutdownCount(1);  //fires", "-    if (printMessages) System.out.println(\"Shut down.\");", "+    // Shut down", "+    _shutdownWithoutSuspendedInteraction();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53d3426ec0d70d87e93fb9ab74b9be8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "1333ad40debe120f6d8fd5fb5ff36c57ce6b1ccf", "commitAfterChange": "3907c0e8430f2d380a191d1ad8364cbfdd1d1b28", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 44, "signatureBeforeChange": "   protected synchronized OpenDefinitionsDocument _doCompile(String text, File file)     throws IOException, BadLocationException, InterruptedException", "signatureAfterChange": "     public void interactionEnded()", "diff": ["-   */", "-  protected synchronized OpenDefinitionsDocument _doCompile(String text, File file)", "-    throws IOException, BadLocationException, InterruptedException", "-  {", "-    OpenDefinitionsDocument doc = setupDocument(text);", "-    doc.saveFile(new FileSelector(file));", "-", "-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(true);", "-    _model.addListener(listener);", "-    synchronized(listener) {", "-      doc.startCompile();", "-      int numErrors = _model.getNumErrors();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "-      }", "-      listener.wait();", "-    }", "-    listener.checkCompileOccurred();", "-    _model.removeListener(listener);", "-    return doc;", "-  }", "+    }", "+    public void interactionEnded() {", "+      synchronized(_notifierLock) {", "+        interactionEndCount++;", "+        if (printEvents) System.out.println(\"interactionEnded \" + interactionEndCount);", "+        _notifyObject(_notifierLock);", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "727c2fd38e1c4bfe01fba19238425d37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public synchronized void testStepOverWithPackage()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testStepOverWithPackage() throws Exception", "diff": ["-  public synchronized void testStepOverWithPackage()", "-    throws DebugException, BadLocationException, DocumentAdapterException,", "-    IOException, InterruptedException", "-  {", "+  public synchronized void testStepOverWithPackage() throws Exception {", "+    _debugger.addListener(debugListener);", "-    // Compile the class", "+    // Create the file in an \"a\" sub-directory", "-    OpenDefinitionsDocument doc = doCompile(DEBUG_CLASS_WITH_PACKAGE, file);", "-    _debugger.addListener(debugListener);", "-    // Start debugger", "-    synchronized(_notifierLock) {", "-      _debugger.startup();", "-      _waitForNotifies(1);  // startup", "-      _notifierLock.wait();", "-    }", "+    // Start up", "+    OpenDefinitionsDocument doc = _startupDebugger(file, DEBUG_CLASS_WITH_PACKAGE);", "-    // Close doc and make sure breakpoints are removed", "-    _model.closeFile(doc);", "-    debugListener.assertBreakpointRemovedCount(1);  //fires (no waiting)", "-    ", "-    // Shutdown the debugger", "-    if (printMessages) System.out.println(\"Shutting down...\");", "-    synchronized(_notifierLock) {", "-      _debugger.shutdown();", "-      _waitForNotifies(1);  // shutdown", "-      _notifierLock.wait();", "-    }", "-    ", "-    debugListener.assertDebuggerShutdownCount(1);  //fires", "-    if (printMessages) System.out.println(\"Shut down.\");", "+    // Shut down", "+    _shutdownWithoutSuspendedInteraction();"]}], "num": 22723}