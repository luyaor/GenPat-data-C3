{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2980b5816ee32b2c098c4350aa6a5315", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "939cc03d80bd1fbe9d9978edb8b5731d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/EditExternalDialog.java", "commitBeforeChange": "807926b925dfb352a7bbfb2667234847dc65f45d", "commitAfterChange": "e753017eccbd872714e58c93831cb488b5045d2a", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void _export()", "signatureAfterChange": "   public void _export()", "diff": ["-    System.out.println(\"_export()\");", "+    //System.out.println(\"_export()\");", "+    _mainFrame.removeModalWindowAdapter(this);", "+    _mainFrame.installModalWindowAdapter(this, NO_OP, OK);", "-        System.out.println(\"\\tcancel/error, rc=\"+rc);", "+        //System.out.println(\"\\tcancel/error, rc=\"+rc);", "-        System.out.println(\"\\tapprove, rc=\"+rc);", "+        //System.out.println(\"\\tapprove, rc=\"+rc);", "-          System.out.println(\"\\tchosen=null\");", "+          //System.out.println(\"\\tchosen=null\");", "-        System.out.println(\"\\tchosen.length=\"+chosen.length);", "+        //System.out.println(\"\\tchosen.length=\"+chosen.length);", "-          System.out.println(\"\\tindex=\"+_list.getSelectedIndex()+\", file=\"+f);", "+          //System.out.println(\"\\tindex=\"+_list.getSelectedIndex()+\", file=\"+f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e76e028ed4d086b89b5a7bb3ef4c3b9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "488e3f877c7f7a8647e0d3f7fb5faea712ac20ce", "commitAfterChange": "35470e88ca153d8164d45d018c673900eac06ea2", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 52, "signatureBeforeChange": "          private void mismatch(String description, String leftData, SourceInfo.Wrapper left,                            String rightData, SourceInfo.Wrapper right)", "signatureAfterChange": "      public void mismatch(String description, String context, String leftData, SourceInfo.Wrapper left,                            String rightData, SourceInfo.Wrapper right)", "diff": ["+", "+    public void mismatch(String description, String context, String leftData, SourceInfo.Wrapper left,", "+                           String rightData, SourceInfo.Wrapper right) {", "+      System.out.println(\"*** \" + description + \" in \" + context);", "+      System.out.println(\"Left (\" + left.getSourceInfo() + \"): \" + leftData);", "+      System.out.println(\"Right (\" + right.getSourceInfo() + \"): \" + rightData);", "+    }", "-    private void mismatch(String description, String leftData, SourceInfo.Wrapper left,", "-                           String rightData, SourceInfo.Wrapper right) {", "-      System.out.println(\"*** \" + description);", "-      System.out.println(\"Left (\" + left.getSourceInfo() + \"): \" + leftData);", "-      System.out.println(\"Right (\" + right.getSourceInfo() + \"): \" + rightData);"]}], "num": 18854}