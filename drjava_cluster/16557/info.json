{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55a3019021d73d5c76fe941257137a12", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cc07ec210668d8b25fdf97ace41bcb5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CompilerErrorPanel.java", "commitBeforeChange": "077ea7d687567aea61da49d1d27cabc74c306eab", "commitAfterChange": "5f1b3bc3f3deca6d356567893a20298f4e5a94a7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public CompilerErrorPanel(DefinitionsView view)", "signatureAfterChange": "    public CompilerErrorPanel(DefinitionsView view)", "diff": ["-\t\tsetLayout(new BorderLayout());", "-\t\t\t\t", "-\t\t_listModel = new CompilerErrorListModel();", "+    setLayout(new BorderLayout());", "+        ", "-    // Make errors initially zero-length array so it's never null", "-    _errors = new CompilerError[0];", "-    _errorPositions = new Position[0];", "-    _selectedError = 0;", "-", "-    _errorList = new JList(_listModel);", "-\t\t_errorList.setCellRenderer(new myCellRenderer());", "-\t\t_errorList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);", "-    _errorList.addListSelectionListener(_listListener);", "-    ", "-          _gotoError(_selectedError + 1);", "+          _gotoError(_errorListPane.getSelectedIndex() + 1);", "-          _gotoError(_selectedError - 1);", "+          _gotoError(_errorListPane.getSelectedIndex() - 1);", "-\t\t", "-    _resetEnabledStatus();", "-\t\t//size stuff", "-\t\t_errorList.setVisibleRowCount(4);", "-\t\tJScrollPane scrollPane = new JScrollPane(_errorList);", "-\t\t//scrollPane.setPreferredSize(", "-\t\t//\t_errorList.getPreferredScrollableViewportSize());", "-    add(scrollPane, BorderLayout.CENTER);", "-    // Show all not yet implemented.", "-    // add(_showAllButton);", "-\t\tJPanel buttonPanel = new JPanel();", "-\t\tbuttonPanel.setLayout(new BoxLayout(buttonPanel, BoxLayout.X_AXIS));", "-\t\tbuttonPanel.add(_previousButton);", "+    ", "+    _errorListPane = new ErrorListPane();", "+    _errorListPane.setEditable(false);", "+", "+    // We make the vertical scrollbar always there.", "+    // If we don't, when it pops up it cuts away the right edge of the ", "+    // text. Very bad.", "+    JScrollPane scroller =", "+      new JScrollPane(_errorListPane,", "+                      JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "+                      JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);", "+", "+    resetErrors(new CompilerError[0]);", "+", "+    // Disable buttons. They don't totally work and who needs em.", "+    /*", "+    JPanel buttonPanel = new JPanel();", "+    buttonPanel.setLayout(new BoxLayout(buttonPanel, BoxLayout.Y_AXIS));", "+    buttonPanel.add(_previousButton);", "-\t\tadd(buttonPanel, BorderLayout.EAST);", "+    // Show all not yet implemented.", "+    // buttonPanel.add(_showAllButton);", "+    add(buttonPanel, BorderLayout.EAST);", "+    */", "+", "+    add(scroller, BorderLayout.CENTER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "840f623f89ff345bdbdcc95e72ef98ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "077ea7d687567aea61da49d1d27cabc74c306eab", "commitAfterChange": "5f1b3bc3f3deca6d356567893a20298f4e5a94a7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public CompilerErrorPanel(DefinitionsView view)", "signatureAfterChange": "    public CompilerErrorPanel(DefinitionsView view)", "diff": ["-\t\tsetLayout(new BorderLayout());", "-\t\t\t\t", "-\t\t_listModel = new CompilerErrorListModel();", "+    setLayout(new BorderLayout());", "+        ", "-    // Make errors initially zero-length array so it's never null", "-    _errors = new CompilerError[0];", "-    _errorPositions = new Position[0];", "-    _selectedError = 0;", "-", "-    _errorList = new JList(_listModel);", "-\t\t_errorList.setCellRenderer(new myCellRenderer());", "-\t\t_errorList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);", "-    _errorList.addListSelectionListener(_listListener);", "-    ", "-          _gotoError(_selectedError + 1);", "+          _gotoError(_errorListPane.getSelectedIndex() + 1);", "-          _gotoError(_selectedError - 1);", "+          _gotoError(_errorListPane.getSelectedIndex() - 1);", "-\t\t", "-    _resetEnabledStatus();", "-\t\t//size stuff", "-\t\t_errorList.setVisibleRowCount(4);", "-\t\tJScrollPane scrollPane = new JScrollPane(_errorList);", "-\t\t//scrollPane.setPreferredSize(", "-\t\t//\t_errorList.getPreferredScrollableViewportSize());", "-    add(scrollPane, BorderLayout.CENTER);", "-    // Show all not yet implemented.", "-    // add(_showAllButton);", "-\t\tJPanel buttonPanel = new JPanel();", "-\t\tbuttonPanel.setLayout(new BoxLayout(buttonPanel, BoxLayout.X_AXIS));", "-\t\tbuttonPanel.add(_previousButton);", "+    ", "+    _errorListPane = new ErrorListPane();", "+    _errorListPane.setEditable(false);", "+", "+    // We make the vertical scrollbar always there.", "+    // If we don't, when it pops up it cuts away the right edge of the ", "+    // text. Very bad.", "+    JScrollPane scroller =", "+      new JScrollPane(_errorListPane,", "+                      JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "+                      JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);", "+", "+    resetErrors(new CompilerError[0]);", "+", "+    // Disable buttons. They don't totally work and who needs em.", "+    /*", "+    JPanel buttonPanel = new JPanel();", "+    buttonPanel.setLayout(new BoxLayout(buttonPanel, BoxLayout.Y_AXIS));", "+    buttonPanel.add(_previousButton);", "-\t\tadd(buttonPanel, BorderLayout.EAST);", "+    // Show all not yet implemented.", "+    // buttonPanel.add(_showAllButton);", "+    add(buttonPanel, BorderLayout.EAST);", "+    */", "+", "+    add(scroller, BorderLayout.CENTER);"]}], "num": 16557}