{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a4e584b9741d4fcc3bb20582af20a42", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cba8a651e8fd73071f03060166e239a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "077ea7d687567aea61da49d1d27cabc74c306eab", "commitAfterChange": "5f1b3bc3f3deca6d356567893a20298f4e5a94a7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public Object getElementAt(int i)", "signatureAfterChange": "      private void _removeListHighlight()", "diff": ["-    // thus we need to subtract one to get the index into the real list of errs", "-    public Object getElementAt(int i) {", "-      if (i == 0) {", "-        return \"(no error on this line)\";", "-      } else {", "-        CompilerError curErr = _errors[i - 1];", "-        // We need to make each message unique due to a documented bug in", "-        // JComboBox. Otherwise navigation in the list gets messed.", "-        // So we put the error # in the message to make it unique.", "-        return i + \": \" + curErr.message();", "+", "+    private void _removeListHighlight() {", "+      if (_listHighlightTag != null) {", "+        getHighlighter().removeHighlight(_listHighlightTag);", "+        _listHighlightTag = null;", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1267c422ac1eceac30ffdfab3424fcb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CompilerErrorPanel.java", "commitBeforeChange": "077ea7d687567aea61da49d1d27cabc74c306eab", "commitAfterChange": "5f1b3bc3f3deca6d356567893a20298f4e5a94a7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public Object getElementAt(int i)", "signatureAfterChange": "      private void _removeListHighlight()", "diff": ["-    // thus we need to subtract one to get the index into the real list of errs", "-    public Object getElementAt(int i) {", "-      if (i == 0) {", "-        return \"(no error on this line)\";", "-      } else {", "-        CompilerError curErr = _errors[i - 1];", "-        // We need to make each message unique due to a documented bug in", "-        // JComboBox. Otherwise navigation in the list gets messed.", "-        // So we put the error # in the message to make it unique.", "-        return i + \": \" + curErr.message();", "+", "+    private void _removeListHighlight() {", "+      if (_listHighlightTag != null) {", "+        getHighlighter().removeHighlight(_listHighlightTag);", "+        _listHighlightTag = null;", "+      }", "+    }"]}], "num": 1635}