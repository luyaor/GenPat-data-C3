{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5607f70a5cb1f4bd21242a756f03e3ce", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "833fb005aafa57d784d7b9f49f49f542", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "b432c2a5363ca609f111d7dec3ae5ed814c173ea", "commitAfterChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Void visit(ImportDeclaration node)", "signatureAfterChange": "     public Void visit(ImportDeclaration node)", "diff": ["-      // Declare the package or class importation", "-      if (node.isPackage()) {", "-        context.declarePackageImport(node.getName());", "-      } else {", "+      if(node.isStatic()) {       ", "+        TigerUtilities.assertTigerEnabled(\"Static Import is not supported before Java 1.5\");", "-          context.declareClassImport(node.getName());", "+          if(node.isStaticImportClass()) ", "+            context.declareClassStaticImport(node.getName());", "+          else ", "+            context.declareMemberStaticImport(node.getName());", "+          // Declare the package or class importation", "-          throw new CatchedExceptionError(e, node);", "-        } catch (PseudoError e) {", "+          throw new RuntimeException(\"Uncaught Class Not Found Exception\");", "+        }", "+      }", "+      else {", "+        if (node.isPackage()) {", "+          context.declarePackageImport(node.getName());", "+        } else {", "+          try {", "+            context.declareClassImport(node.getName());", "+          } catch (ClassNotFoundException e) {", "+            throw new CatchedExceptionError(e, node);", "+          } catch (PseudoError e) {", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec7fad0e6aa00e49dd1a645c62205a5f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ImportationManager.java", "commitBeforeChange": "dbdd53c636f6618ffbae999ad0ee607bc3e2b6a3", "commitAfterChange": "689d9f23e5437e0982e3819c2bbd111dd456dac2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void declareMemberStaticImport(String member)", "signatureAfterChange": "     public void declareMemberStaticImport(String member)", "diff": ["+      Class c;", "-        Class.forName(member, true, classLoader);", "+        c = Class.forName(member, true, classLoader);", "-        findInnerClass(member);", "+        c = findInnerClass(member);", "-      declareClassImport(member);", "-      foundSomethingToImport = true;", "+      if(isPublicAndStatic(c.getModifiers())) {", "+        declareClassImport(member);", "+        foundSomethingToImport = true;", "+      }", "-      singleTypeImportStaticFieldClauses.remove(f);", "-      singleTypeImportStaticFieldClauses.add(0,f);", "-      foundSomethingToImport = true;", "+      if(isPublicAndStatic(f.getModifiers())) {", "+        singleTypeImportStaticFieldClauses.remove(f);", "+        singleTypeImportStaticFieldClauses.add(0,f);", "+        foundSomethingToImport = true;", "+      }", "-          singleTypeImportStaticMethodClauses.remove(m);", "-          singleTypeImportStaticMethodClauses.add(0,m);", "-          foundSomethingToImport = true;", "+          if(isPublicAndStatic(m.getModifiers())) {", "+            singleTypeImportStaticMethodClauses.remove(m);", "+            singleTypeImportStaticMethodClauses.add(0,m);", "+            foundSomethingToImport = true;", "+          }"]}], "num": 16491}