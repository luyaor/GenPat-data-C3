{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77fa90f542f63f9589a6260c9718ad42", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20f9af36e47ec14027e087183cc1ded0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "   private boolean onlyWhiteSpaceBeforeCurrent() throws BadLocationException", "signatureAfterChange": "   private boolean onlyWhiteSpaceBeforeCurrent() throws BadLocationException", "diff": ["-    String text = this.getText(0, _currentLocation);", "+    String text = getText(0, _currentLocation);", "-    text = text.substring(text.lastIndexOf(\"\\n\")+1);", "+    text = text.substring(text.lastIndexOf(\"\\n\") + 1);", "-    //check all positions in the new text to determine if there are any non-whitespace chars", "-    int index = text.length()-1;", "+    //check all positions in the new text to determine if there are any blank chars", "+    int pos = text.length() - 1;", "-    while(lastChar == ' ' && index >= 0){", "-      lastChar = text.charAt(index);", "-      index--;", "-    }", "-    ", "-    if (index < 0) return true;", "-    return false;", "+    while (pos >= 0 && text.charAt(pos) == ' ') pos--;", "+    return (pos < 0); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6eb544b28c75f7f4417ee97f583e02e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "signatureAfterChange": "   private void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "diff": ["-    ClasspathVector extraClasspath = new ClasspathVector();", "-    if (_model.getFileGroupingState().isProjectActive()) ", "-      extraClasspath.addAll(_model.getFileGroupingState().getExtraClasspath());", "+    ClassPathVector extraClassPath = new ClassPathVector();", "+    if (_model.isProjectActive()) ", "+      extraClassPath.addAll(_model.getExtraClassPath());", "-    for (File f : DrJava.getConfig().getSetting(OptionConstants.EXTRA_CLASSPATH)) extraClasspath.add(f);", "+    for (File f : DrJava.getConfig().getSetting(OptionConstants.EXTRA_CLASSPATH)) extraClassPath.add(f);", "-    compiler.setExtraClassPath(extraClasspath);", "+    compiler.setExtraClassPath(extraClassPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7e4efdbe76e47f63d0e2084cd2850b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalIndentTest.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testIndentDoesNothing()       throws BadLocationException, OperationCanceledException", "signatureAfterChange": "   public void testIndentDoesNothing()       throws BadLocationException, OperationCanceledException", "diff": ["-    Document doc = openDoc.getDocument();", "-    doc.insertString(0, FOO_EX_2 + FOO_EX_2, null);", "-    openDoc.syncCurrentLocationWithDefinitions(doc.getLength() - 1);", "+    openDoc.insertString(0, FOO_EX_2 + FOO_EX_2, null);", "+    openDoc.syncCurrentLocationWithDefinitions(openDoc.getLength() - 1);", "-    _assertContents(FOO_EX_2 + FOO_EX_2, doc);", "-    _assertLocation(doc.getLength() - 1, openDoc);", "+    _assertContents(FOO_EX_2 + FOO_EX_2, openDoc);", "+    _assertLocation(openDoc.getLength() - 1, openDoc);"]}], "num": 11316}