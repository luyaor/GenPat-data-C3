{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21e266192f9443f45fa868daf1436f70", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a445a5e092152fc20520aad0ce786a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhraseTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testDoesNotEndWithParenDelim() throws BadLocationException", "signatureAfterChange": "   public void testDoesNotEndWithParenDelim() throws BadLocationException", "diff": ["-    assertTrue(\"line after paren\", !rule.applyRule(_doc, 9, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after comma\", !rule.applyRule(_doc, 13, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after paren\", !rule.testApplyRule(_doc, 9, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after comma\", !rule.testApplyRule(_doc, 13, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e093e863a714a0dd27beb80a809fef98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhraseTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testOperatorDelim() throws BadLocationException", "signatureAfterChange": "   public void testOperatorDelim() throws BadLocationException", "diff": ["-    assertTrue(\"line after operator\", rule.applyRule(_doc, 8, Indenter.IndentReason.OTHER));", "-    assertTrue(\"line after comma\", !rule.applyRule(_doc, 10, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after operator\", rule.testApplyRule(_doc, 8, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after comma\", !rule.testApplyRule(_doc, 10, Indenter.IndentReason.OTHER));"]}], "num": 19989}