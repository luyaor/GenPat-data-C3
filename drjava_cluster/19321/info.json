{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18723448734c468bdbfd881be138e52c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ffcb22e38d48016add289ef8b6d29e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testMetaKeyPress() throws BadLocationException", "signatureAfterChange": "   public void testMetaKeyPress() throws BadLocationException", "diff": ["-    DefinitionsPane definitions = _frame.getCurrentDefPane();", "-    OpenDefinitionsDocument doc = definitions.getOpenDefDocument();", "+    final DefinitionsPane definitions = _frame.getCurrentDefPane();", "+    final OpenDefinitionsDocument doc = definitions.getOpenDefDocument();", "-    // The following is the sequence of key events that happen when the user presses Meta-a", "-    definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "-                                             InputEvent.META_MASK, KeyEvent.VK_META, KeyEvent.CHAR_UNDEFINED));", "+    ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        // The following is the sequence of key events that happen when the user presses Meta-a", "+        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "+                                                 InputEvent.META_MASK, KeyEvent.VK_META, KeyEvent.CHAR_UNDEFINED));", "+      }", "+    });", "+        ", "-    definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "-                                             InputEvent.META_MASK, KeyEvent.VK_W, KeyEvent.CHAR_UNDEFINED));", "+    ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "+                                                 InputEvent.META_MASK, KeyEvent.VK_W, KeyEvent.CHAR_UNDEFINED));", "+      }", "+    });", "+    ", "-    definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_TYPED, (new Date()).getTime(),", "-                                             InputEvent.META_MASK, KeyEvent.VK_UNDEFINED, 'w'));", "+        ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_TYPED, (new Date()).getTime(),", "+                                                 InputEvent.META_MASK, KeyEvent.VK_UNDEFINED, 'w'));", "+        ", "+      }", "+    });", "+    ", "-    definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "-                                             InputEvent.META_MASK, KeyEvent.VK_W, KeyEvent.CHAR_UNDEFINED));", "+    ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "+                                                 InputEvent.META_MASK, KeyEvent.VK_W, KeyEvent.CHAR_UNDEFINED));", "+        ", "+      }", "+    });", "+    ", "-    definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "-                                             0, KeyEvent.VK_META, KeyEvent.CHAR_UNDEFINED));", "+    ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "+                                                 0, KeyEvent.VK_META, KeyEvent.CHAR_UNDEFINED));", "+      }", "+    });", "+    ", "+    ", "+    _log.log(\"testMetaKeyPress completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c92a6ea10ce259412744c6c7d3048c84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void testFrenchKeyStrokes() throws IOException, InterruptedException", "signatureAfterChange": "   public void testFrenchKeyStrokes() throws IOException, InterruptedException", "diff": ["-    DefinitionsPane pane = _frame.getCurrentDefPane(); // pane is NOT null.     Document doc = _frame.getCurrentDefPane.getDJDocument()", "+    final DefinitionsPane pane = _frame.getCurrentDefPane(); // pane is NOT null.", "-    KeyEvent ke = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, 0, KeyEvent.VK_UNDEFINED, 'T'); ", "-    pane.processKeyEvent(ke);", "+    final KeyEvent ke1 = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, 0, KeyEvent.VK_UNDEFINED, 'T'); ", "+    ", "+    Utilities.invokeAndWait(new Runnable() { public void run() { pane.processKeyEvent(ke1); } });", "-    ke = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, InputEvent.ALT_MASK, KeyEvent.VK_UNDEFINED, '{'); ", "-    pane.processKeyEvent(ke);", "+    final KeyEvent ke2 = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, InputEvent.ALT_MASK, KeyEvent.VK_UNDEFINED, '{'); ", "+    Utilities.invokeAndWait(new Runnable() { public void run() { pane.processKeyEvent(ke2); } });", "-    ke = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, InputEvent.ALT_MASK, KeyEvent.VK_UNDEFINED, '}'); ", "-    pane.processKeyEvent(ke);", "+    final KeyEvent ke3 = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, InputEvent.ALT_MASK, KeyEvent.VK_UNDEFINED, '}'); ", "+    Utilities.invokeAndWait(new Runnable() { public void run() { pane.processKeyEvent(ke3); } });", "-    ke = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, InputEvent.ALT_MASK, KeyEvent.VK_UNDEFINED, '['); ", "-    pane.processKeyEvent(ke);", "+    final KeyEvent ke4 = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, InputEvent.ALT_MASK, KeyEvent.VK_UNDEFINED, '['); ", "+    Utilities.invokeAndWait(new Runnable() { public void run() { pane.processKeyEvent(ke4); } });", "-    ke = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, InputEvent.ALT_MASK, KeyEvent.VK_UNDEFINED, ']'); ", "-    pane.processKeyEvent(ke);", "+    final KeyEvent ke5 = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, InputEvent.ALT_MASK, KeyEvent.VK_UNDEFINED, ']'); ", "+    Utilities.invokeAndWait(new Runnable() { public void run() { pane.processKeyEvent(ke5);  } });", "+    ", "+    _log.log(\"testFrenchKeyStrokes completed\");"]}], "num": 19321}