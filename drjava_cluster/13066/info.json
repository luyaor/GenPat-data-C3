{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d97f4afa12a9488394fe8924540416a3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09da0f08236dc3ef4d0edbf8834226f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "97f966af08ae6bec968f68d8b2fce6c5531a12b8", "commitAfterChange": "d4f8b5e1e15fc2c34ba6969d4ef7bdb04cc8916b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "    public void killInterpreter()", "signatureAfterChange": "    public synchronized void killInterpreter()", "diff": ["-  public void killInterpreter() {", "-    synchronized(this) {", "-      if ((_interpreterProcess != null) && (_interpreterJVM != null)) {", "-        try {", "-          //DrJava.consoleOut().println(\"killing jvm! \" + i);", "-          _interpreterJVM.exitJVM();", "-        }", "-        catch (RemoteException re) {", "-          // couldn't ask it to quit nicely. be mean and kill", "-          _interpreterProcess.destroy();", "-        }", "-", "-        _interpreterProcess = null;", "-        _interpreterJVM = null;", "+  public synchronized void killInterpreter() {", "+    if ((_interpreterProcess != null) && (_interpreterJVM != null)) {", "+      try {", "+        //DrJava.consoleOut().println(\"killing jvm! \" + i);", "+        _interpreterJVM.exitJVM();", "+      catch (RemoteException re) {", "+        // couldn't ask it to quit nicely. be mean and kill", "+        _interpreterProcess.destroy();", "+      }", "+      ", "+      _interpreterProcess = null;", "+      _interpreterJVM = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a3b8b373acad67e1641874c1000f98a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "5fcb38a9e5144c9ef6a799230bac118e680b79fd", "commitAfterChange": "1d939764a7a48ee57c8c9b9e857d49b241cabd3e", "methodNumberBeforeChange": 268, "methodNumberAfterChange": 267, "signatureBeforeChange": "     public void resetModification()", "signatureAfterChange": "     public synchronized void resetModification()", "diff": ["-    public void resetModification() {", "-      synchronized(this) {", "-        getDocument().resetModification();", "-        File f = _file; ", "-        if (! AbstractGlobalModel.isUntitled(f)) _timestamp = f.lastModified();", "-      }", "+    public synchronized void resetModification() {", "+      getDocument().resetModification();", "+      File f = _file; ", "+      if (! AbstractGlobalModel.isUntitled(f)) _timestamp = f.lastModified();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "424a84d5562079c46ef2b4f6467cbce4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "5fcb38a9e5144c9ef6a799230bac118e680b79fd", "commitAfterChange": "1d939764a7a48ee57c8c9b9e857d49b241cabd3e", "methodNumberBeforeChange": 262, "methodNumberAfterChange": 261, "signatureBeforeChange": "     public void setFile(final File file)", "signatureAfterChange": "     public synchronized void setFile(final File file)", "diff": ["-    /** Sets the file for this openDefinitionsDocument. */", "-    public void setFile(final File file) {  ", "-      synchronized(this) { // ensures that _file and _timestamp are consistent", "-        _file = file;", "-        if (! AbstractGlobalModel.isUntitled(file)) _timestamp = file.lastModified();", "-        else _timestamp = 0L;", "-      }", "+    /** Sets the file for this openDefinitionsDocument.  Synch ensures that _file and _timestamp are consistent. */", "+    public synchronized void setFile(final File file) {", "+      _file = file;", "+      if (! AbstractGlobalModel.isUntitled(file)) _timestamp = file.lastModified();", "+      else _timestamp = 0L;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d17742e51f0d70f11bcbd5c1e7e2f96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "4402afa3c67a362593909f349f9fbb816e477bed", "commitAfterChange": "b88c168dd97b3e73bf1e2484f86af286c295bdde", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void setIsResetting(boolean b)", "signatureAfterChange": "   public synchronized void setIsResetting(boolean b)", "diff": ["-  public void setIsResetting(boolean b) { ", "-    synchronized(this) {", "-      _resetInProgress = b;", "-    }", "+  public synchronized void setIsResetting(boolean b) { ", "+    //DrJava.consoleOut().println(\"setIsResestting: resetInProgress: \" + b);", "+    _resetInProgress = b;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77b2d1827567224e6213ae1d9f8ded43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testEnded(final String testName, final boolean wasSuccessful,                         final boolean causedError)", "signatureAfterChange": "   public void testEnded(final String testName, final boolean wasSuccessful, final boolean causedError)", "diff": ["-  public void testEnded(final String testName, final boolean wasSuccessful,", "-                        final boolean causedError) {", "-    synchronized(this) { // so that it's not called until junitStarted is fired", "-      _notifier.junitTestEnded(testName, wasSuccessful, causedError);", "-    }", "+  public void testEnded(final String testName, final boolean wasSuccessful, final boolean causedError) {", "+     _notifier.junitTestEnded(testName, wasSuccessful, causedError);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dd9651e2c4a72cdb932bcfd5794b2c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "97f966af08ae6bec968f68d8b2fce6c5531a12b8", "commitAfterChange": "d4f8b5e1e15fc2c34ba6969d4ef7bdb04cc8916b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void registerInterpreterJVM(InterpreterJVMRemoteI remote)     throws RemoteException", "signatureAfterChange": "   public synchronized void registerInterpreterJVM(InterpreterJVMRemoteI remote)     throws RemoteException", "diff": ["-  public void registerInterpreterJVM(InterpreterJVMRemoteI remote)", "+  public synchronized void registerInterpreterJVM(InterpreterJVMRemoteI remote)", "-    synchronized(this) {", "-      if (_interpreterJVM != null) { ", "-        try {", "-          //DrJava.consoleOut().println(\"killing jvm! \" + i);", "-          remote.exitJVM();", "-        }", "-        catch (RemoteException re) {", "-        }", "-        return;", "+    if (_interpreterJVM != null) { ", "+      try {", "+        //DrJava.consoleOut().println(\"killing jvm! \" + i);", "+        remote.exitJVM();", "-      _timerThread.disable();", "-      _interpreterJVM = remote;", "-      // _model may be null if we're running a test on this", "-      if (_model != null) {", "-        _model.interactionsReady();", "+      catch (RemoteException re) {", "-      _startupInProgress = false;", "-      // wake up anyone waiting for an interpreter!", "-      notify();", "+      return;", "+    _timerThread.disable();", "+    _interpreterJVM = remote;", "+    // _model may be null if we're running a test on this", "+    if (_model != null) {", "+      _model.interactionsReady();", "+    }", "+    _startupInProgress = false;", "+    // wake up anyone waiting for an interpreter!", "+    notify();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9fecff97db84023f1b38f6aec542d57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "5fcb38a9e5144c9ef6a799230bac118e680b79fd", "commitAfterChange": "1d939764a7a48ee57c8c9b9e857d49b241cabd3e", "methodNumberBeforeChange": 270, "methodNumberAfterChange": 269, "signatureBeforeChange": "     public void setParentDirectory(File pd)", "signatureAfterChange": "     public synchronized void setParentDirectory(File pd)", "diff": ["-    public void setParentDirectory(File pd) {", "-      synchronized(this) {", "-        if (! AbstractGlobalModel.isUntitled(_file))", "-          throw new IllegalArgumentException(\"The parent directory can only be set for untitled documents\");", "-        _parentDir = pd;  ", "-      }", "+    public synchronized void setParentDirectory(File pd) {", "+      if (! AbstractGlobalModel.isUntitled(_file))", "+        throw new IllegalArgumentException(\"The parent directory can only be set for untitled documents\");", "+      _parentDir = pd;  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87b21bbfeca3fcf1dce2daa84910667", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void paint(Graphics g)", "signatureAfterChange": "      public synchronized void paint(Graphics g)", "diff": ["-  public void paint(Graphics g){", "-    /**", "-     * we don't want to paint if we're in the middle of some other", "-     * synchronized code, so we'll wait until we can aquire the lock", "-     * around ourself", "-     */", "-    synchronized(this){", "-      super.paint(g);", "-    }", "+  public synchronized void paint(Graphics g){", "+    ", "+    /* Synchronized so that \"this\" is in stable form when painted. */", "+    super.paint(g);"]}], "num": 13066}