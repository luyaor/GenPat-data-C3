{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8891655725ce5f76cf8e68a6ac32acf0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c1d36b9cee90f230264c4ef7d7f0440", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractSlaveJVM.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public final synchronized void quit()", "signatureAfterChange": "   public final synchronized void quit()", "diff": ["-    _log.log(this + \".quit() called\");", "+//    _log.log(this + \".quit() called\");", "+//    _master = null;", "+    ", "-              _log.log(\"Waiting for \" + AbstractSlaveJVM.this + \".quit() to exit\");", "+//              _log.log(\"Waiting for \" + AbstractSlaveJVM.this + \".quit() to exit\");", "-          Thread.sleep(100);  // This is kluge to allow the parent RMI calling thread to exit", "-    _log.log(this + \".quit() RMI call exited\");", "+//    _log.log(this + \".quit() RMI call exited\");", "-      _slaveJVMLock.notify();", "+      _slaveJVMLock.notify();  // There does not appear to be any constraint forcing this thread to exit before shutdown"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9edb17e7a5f42cd8ae602d8e7d457eae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "3b44f33ccb03f306f6bb68e6706f852bc9d4f122", "commitAfterChange": "e46a32975ae91e70bdf8060ed36ba4beb682ced4", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   protected SymbolData getSymbolData(String className, SourceInfo si, boolean resolve, boolean fromClassFile,                                       boolean addError, boolean checkImportedStuff)", "signatureAfterChange": "   protected SymbolData getSymbolData(String className, SourceInfo si, boolean resolve, boolean fromClassFile,                                       boolean addError, boolean checkImportedStuff)", "diff": ["-    _log.log(\"getSymbolData(\" + className + \", \" + si + \", \" + resolve + \", \" + fromClassFile + \", \" + addError +", "-             \", \" + checkImportedStuff);", "+    //_log.log(\"getSymbolData(\" + className + \", \" + si + \", \" + resolve + \", \" + fromClassFile + \", \" + addError +", "+    //         \", \" + checkImportedStuff);", "-      _log.log(\"Returning an Invalid class name for \" + className);", "+      // _log.log(\"Returning an Invalid class name for \" + className);"]}], "num": 13658}