{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e4a1f9c260138cce5763e35af173aa5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c0f4bb69972b92414c6a771c1bc5615", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 339, "methodNumberAfterChange": 339, "signatureBeforeChange": "   public StaticFieldReference lookupStaticField(Type t, final String name)     throws InvalidTargetException, UnmatchedLookupException", "signatureAfterChange": "   public StaticFieldReference lookupStaticField(Type t, final String name)     throws InvalidTargetException, UnmatchedLookupException", "diff": ["-//    System.out.println(\"\\nLooking up static field \" + name + \" in type \" + userRepresentation(t));", "+    debug.logStart(new String[]{\"t\", \"name\"}, wrap(t), name); try {", "+    ", "+    ", "+    } finally { debug.logEnd(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8382731e60013d886e65109406ae58c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 331, "methodNumberAfterChange": 331, "signatureBeforeChange": "   public ObjectFieldReference lookupField(final Expression object, final String name)     throws InvalidTargetException, UnmatchedLookupException", "signatureAfterChange": "   public ObjectFieldReference lookupField(final Expression object, final String name)     throws InvalidTargetException, UnmatchedLookupException", "diff": ["-//    System.out.println(\"\\nLooking up field \" + name + \" in type \" + ", "-//                       userRepresentation(NodeProperties.getType(object)));", "+    debug.logStart(new String[]{\"t\", \"name\"}, wrap(NodeProperties.getType(object)), name); try {", "+", "+    ", "+    } finally { debug.logEnd(); }"]}], "num": 27233}