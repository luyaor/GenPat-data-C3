{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9eb84dcbde470d9ca535ec5604fedd6c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eb22db049204b6796f02c80ddc62238", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "69b7f744a06a218546e1e05a5acb1e8cacf5750d", "commitAfterChange": "e10e7bd83f125e1856c739971a7fde05620d52b1", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "    private void _updateWatches()", "signatureAfterChange": "    private void _updateWatches()", "diff": ["-      frames = _suspendedThreads.peek().frames();", "+      ThreadReference thread = _suspendedThreads.peek();", "+      if (thread.frameCount() <= 0 ) {", "+        printMessage(\"Could not update watch values. The current thread had no stackframes.\");", "+        return;", "+      }", "+      frames = thread.frames();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bd8696cefe62672421f3ebfe8e8346a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "17590567cb9f06269b33249dad955c39164a9028", "commitAfterChange": "6222fd84e3aa6c7b8b3da9d73ccf7a9a3370487b", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "   private void _switchToSuspendedThread() throws DebugException", "signatureAfterChange": "   private void _switchToSuspendedThread() throws DebugException", "diff": ["+    final ThreadReference currThread = _suspendedThreads.peek();", "-        l.currThreadSet(new DebugThreadData(_suspendedThreads.peek()));", "+        l.currThreadSet(new DebugThreadData(currThread));", "-  ", "+    try {", "+      if (currThread.frameCount() > 0) {", "+        scrollToSource(currThread.frame(0).location());", "+      }", "+    }", "+    catch (IncompatibleThreadStateException itse) {", "+      throw new UnexpectedException(itse);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87eefa73eb4ba9a4adccd7687f46797b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "69b7f744a06a218546e1e05a5acb1e8cacf5750d", "commitAfterChange": "e10e7bd83f125e1856c739971a7fde05620d52b1", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   synchronized void currThreadDied()", "signatureAfterChange": "   synchronized void currThreadDied()", "diff": ["+      ThreadReference thread = _suspendedThreads.peek();", "+      ", "-        scrollToSource(_suspendedThreads.peek().frame(0).location());", "+        if (thread.frameCount() <= 0) {", "+          printMessage(\"Could not scroll to source for \" + thread.name() + \". It has no stackframes.\");", "+        }", "+        else {", "+          scrollToSource(thread.frame(0).location());", "+        }", "+    "]}], "num": 2879}