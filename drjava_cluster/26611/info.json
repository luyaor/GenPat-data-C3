{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4ecd34130d34dce50b6201b50c9974a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c9d026f4e8e1e761dcda3b357015102", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "f1cdd8ab40ec812de32945f859fe4268e830f213", "commitAfterChange": "03b2d2796342d42693cf58d323df575cbd1df053", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "          protected void _interpret(String toEval)", "signatureAfterChange": "   public void testInterpretJavaSingleQuotedArgs() throws DocumentAdapterException", "diff": ["+   */", "+  public void testInterpretJavaSingleQuotedArgs() throws DocumentAdapterException {", "+    // java Foo 'asdf'", "+    _assertProcessedContents(\"java Foo 'asdf'\",", "+                             \"Foo.main(new String[]{\\\"'asdf'\\\"});\");", "+    // java Foo 'a b c'", "+    _assertProcessedContents(\"java Foo 'a b c'\",", "+                             \"Foo.main(new String[]{\\\"'a\\\",\\\"b\\\",\\\"c'\\\"});\");", "+  }", "-      fail(\"cannot interpret in a test\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62a9347223e95a1ab0625107bb585417", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected SymbolData getSymbolData(String className, SourceInfo si, boolean resolve, boolean fromClassFile)", "signatureAfterChange": "   protected SymbolData getSymbolData(String className, SourceInfo si, boolean addError, boolean checkImports)", "diff": ["-    */  ", "-  protected SymbolData getSymbolData(String className, SourceInfo si, boolean resolve, boolean fromClassFile) {", "-    return getSymbolData(className, si, resolve, fromClassFile, true, true);", "-  }", "+  protected SymbolData getSymbolData(String className, SourceInfo si, boolean addError, boolean checkImports) {", "+    return getSymbolData(_file, _package, _importedFiles, _importedPackages, _enclosingClassName, ", "+                         className, si, addError, checkImports);", "+  }"]}], "num": 26611}