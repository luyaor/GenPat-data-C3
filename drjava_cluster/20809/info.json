{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "779a9b0fe7b9f49bb89b3bc95d7f9ddc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83752e5c2b3f0298055a0bda3bcfdbcf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public ErrorListPane()", "signatureAfterChange": "     public ErrorListPane()", "diff": ["-      _showHighlightsCheckBox = new JCheckBox( \"Highlight source\", true);", "-      _showHighlightsCheckBox.addChangeListener( new ChangeListener() {", "-        public void stateChanged (ChangeEvent ce) {", "-          DefinitionsPane lastDefPane = _frame.getCurrentDefPane();", "-", "-          if (_showHighlightsCheckBox.isSelected()) {", "-            lastDefPane.setCaretPosition( lastDefPane.getCaretPosition());", "-            getErrorListPane().switchToError(getSelectedIndex());", "-            lastDefPane.requestFocus();", "-            lastDefPane.getCaret().setVisible(true);", "-          }", "-          else {", "-            lastDefPane.removeErrorHighlight();", "-          }", "+    _showHighlightsCheckBox.addChangeListener( new ChangeListener() {", "+      public void stateChanged (ChangeEvent ce) {", "+        DefinitionsPane lastDefPane = _frame.getCurrentDefPane();", "+        ", "+        if (_showHighlightsCheckBox.isSelected()) {", "+          lastDefPane.setCaretPosition( lastDefPane.getCaretPosition());", "+          getErrorListPane().switchToError(getSelectedIndex());", "+          lastDefPane.requestFocus();", "+          lastDefPane.getCaret().setVisible(true);", "-      });", "-", "+        else {", "+          lastDefPane.removeErrorHighlight();", "+        }", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "904cfc1b51bca6a70db27e27a03134d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public ErrorListPane()", "signatureAfterChange": "     public ErrorListPane()", "diff": ["-      // If we set this pane to be of type text/rtf, it wraps based on words", "-      // as opposed to based on characters.", "+//      // If we set this pane to be of type text/rtf, it wraps based on words", "+//      // as opposed to based on characters.", "-      ", "+        ", "-      _showHighlightsCheckBox.addChangeListener( new ChangeListener() {", "-        public void stateChanged(ChangeEvent ce) {", "+      /* Item listener instead of change listener so that this code won't be called (twice) every time the mouse moves", "+       * over the _showHighlightsCheckBox (5/26/05)", "+       */", "+      _showHighlightsCheckBox.addItemListener(new ItemListener() {", "+        public void itemStateChanged(ItemEvent e) {", "-          if (_showHighlightsCheckBox.isSelected()) {", "+          if (e.getStateChange() == ItemEvent.DESELECTED) {", "+            lastDefPane.removeErrorHighlight();", "+          }", "+          ", "+          else if (e.getStateChange() == ItemEvent.SELECTED) {   ", "-//            DefinitionsPane curDefPane = _frame.getCurrentDefPane(); ", "-//            curDefPane.requestFocusInWindow();", "-//            curDefPane.getCaret().setVisible(true);", "+//          DefinitionsPane curDefPane = _frame.getCurrentDefPane(); ", "+//            lastDefPane.requestFocusInWindow();", "+//            lastDefPane.getCaret().setVisible(true);", "-          else  lastDefPane.removeErrorHighlight();", "-    }", "+    }     "]}], "num": 20809}