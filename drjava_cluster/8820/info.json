{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9dceab8cfcc25dbb5a904802a6c2643", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a337301e544b0a136da62e7ba4b434d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 30, "signatureBeforeChange": "   private void _gotoErrorSourceLocation(final int idx)", "signatureAfterChange": "     private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,                                           final int idx)", "diff": ["-   */", "-  private void _gotoErrorSourceLocation(final int idx) {", "-    if (idx < 0) return;", "-", "-    _highlightErrorInSource(idx);", "-", "-    int errPos = _errorPositions[idx].getOffset();", "-    // move caret to that position", "-    _definitionsPane.setCaretPosition(errPos);", "-    _definitionsPane.grabFocus();", "-  }", "+     */", "+    private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,", "+                                          final int idx) {", "+      CompilerErrorModel errorModel = doc.getCompilerErrorModel();", "+      Position[] positions = errorModel.getPositions();", "+", "+", "+      if ((idx < 0) || (idx >= positions.length)) return;", "+", "+      int errPos = positions[idx].getOffset();", "+", "+      // switch to correct def pane", "+      _model.setActiveDocument(doc);", "+", "+      // move caret to that position", "+      DefinitionsPane defPane = _frame.getCurrentDefPane();", "+      defPane.setCaretPosition(errPos);", "+      defPane.grabFocus();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3ef999715f029e1b3439ce37bfd2923", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionInsideComment.java", "commitBeforeChange": "558f3e76b0939d235eb8771fbc6a284d80a06f72", "commitAfterChange": "6930bf707dd308d41a2f9ece27f497b294b94f33", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc, int pos)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc, BraceReduction reducedModel, int pos)", "diff": ["-  //private IndentRule _noRule = new QuestionBraceIsParenOrBracket();", "-  boolean applyRule(DefinitionsDocument doc, int pos) {", "-    // Reduced model makes it easy!", "-    // return (stateAtRelLocation(dist. to START) == INSIDE_BLOCK_COMMENT)", "-    // [see classes in reducedmodel package:", "-    //  ReducedModelStates, AbstractReducedModel, InsideBlockComment]", "-    // I only wish we had stateAtAbsLocation.", "-    return true;", "+   */", "+  boolean applyRule(DefinitionsDocument doc, BraceReduction reducedModel, int pos) {", "+    int here = doc.getCurrentLocation();", "+    ReducedModelState state = null;", "+    int distToStart = here - doc.getLineStartPos(here);", "+    reducedModel.resetLocation();  // Gaaah!", "+    state = reducedModel.stateAtRelLocation(-distToStart);", "+    return (state.equals(ReducedModelStates.INSIDE_BLOCK_COMMENT));"]}], "num": 8820}