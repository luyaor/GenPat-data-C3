{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d780b476d90f23886d841389290cc3a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ea1aee61014dedf274d41dbb1349932", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/StaticContext.java", "commitBeforeChange": "4dc5ace86e9b2c575f2b09ebb783f4d8d9db5e9a", "commitAfterChange": "798fcd5fdec1efc6698cb1c49cd62bdab41daffc", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Class setProperties(ClassAllocation node, Class c, Class[] args, List<Node> memb)", "signatureAfterChange": "   public Class setProperties(ClassAllocation node, Class c, Class[] args, List<Node> memb)", "diff": ["-    params.add(new FormalParameter(false, MAP_TYPE, \"param$0\", false));", "+    params.add(new FormalParameter(false, MAP_TYPE, \"param$0\"));", "-                                     \"param$\" + (i + 1), false));", "+                                     \"param$\" + (i + 1)));", "-                                     stmts);", "+                                     stmts, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd21e63376b23e3e74dc2265c7e0997a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/GlobalContext.java", "commitBeforeChange": "4dc5ace86e9b2c575f2b09ebb783f4d8d9db5e9a", "commitAfterChange": "798fcd5fdec1efc6698cb1c49cd62bdab41daffc", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public Class setProperties(ClassAllocation node, Class c, Class[] args, List<Node> memb)", "signatureAfterChange": "   public Class setProperties(ClassAllocation node, Class c, Class[] args, List<Node> memb)", "diff": ["-    params.add(new FormalParameter(false, MAP_TYPE, \"param$0\", false));", "+    params.add(new FormalParameter(false, MAP_TYPE, \"param$0\"));", "-                                     \"param$\" + (i + 1), false));", "+                                     \"param$\" + (i + 1)));", "-                                     stmts);", "+                                     stmts, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c394fede63e4a56d43e3ffe8a86bdd43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/GenericTreeTest.java", "commitBeforeChange": "4dc5ace86e9b2c575f2b09ebb783f4d8d9db5e9a", "commitAfterChange": "798fcd5fdec1efc6698cb1c49cd62bdab41daffc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testHandParsedGenericClass()", "signatureAfterChange": "      public void testHandParsedGenericClass()", "diff": ["-    FormalParameter param = new FormalParameter(false, t, \"_n\", false);", "+    FormalParameter param = new FormalParameter(false, t, \"_n\");", "-    ConstructorDeclaration c = new ConstructorDeclaration(accessFlags, \"C\", cparams, new LinkedList<ReferenceType>(), null, cstmts);", "+    ConstructorDeclaration c = new ConstructorDeclaration(accessFlags, \"C\", cparams, new LinkedList<ReferenceType>(), null, cstmts, false);", "-    MethodDeclaration m = new MethodDeclaration(accessFlags, t, \"m\", mparams, mexcepts, new BlockStatement(mstmts));", "+    MethodDeclaration m = new MethodDeclaration(accessFlags, t, \"m\", mparams, mexcepts, new BlockStatement(mstmts), false);"]}], "num": 23911}