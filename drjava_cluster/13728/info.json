{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e8dc40fdd00d8412405b325ed152a2b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36600d530e23f3e6edb0300b54e35096", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "7c08a03fcf153ca2c9048dee25c86a55f361ac62", "commitAfterChange": "54139845b7b497599e6df6198987b23e58827d38", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "     void switchToError(DJError error)", "signatureAfterChange": "     void switchToError(DJError error)", "diff": ["+          java.util.List<OpenDefinitionsDocument> openDocs = model.getProjectDocuments();", "+          ", "+          boolean open = false;", "+          for(OpenDefinitionsDocument doc : openDocs)", "+            if(doc.getFile().equals(error.file()))", "+              open = true;", "+          ", "+          if(!open)", "+            throw new IOException(\"Tried to switch to file not open in project.\");", "+          "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c22821ea886ffa9c12bf617613b5d67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "202fe65b6d19b63d8f3941f6eff8e18c68fa7232", "commitAfterChange": "b7e7dc26985115a0b1d39562458d043f05ace9bb", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "   private void _replaceAll()", "signatureAfterChange": "   private void _replaceAll()", "diff": ["+    OpenDefinitionsDocument startDoc = _defPane.getOpenDefDocument();", "+    MovingDocumentRegion region = new MovingDocumentRegion(startDoc, ", "+                                                           _defPane.getSelectionStart(), ", "+                                                           _defPane.getSelectionEnd(), ", "+                                                           startDoc._getLineStartPos(_defPane.getSelectionStart()),", "+                                                           startDoc._getLineEndPos(_defPane.getSelectionEnd()));", "+    _machine.setSelection(region);", "-    int count = _machine.replaceAll(_defPane.getSelectionStart(), _defPane.getSelectionEnd());", "+    int count = _machine.replaceAll();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae3f973a7dd28d33ffe375a1293efb8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "47d5fc81163cac95e4e64b470a149e7ec540b233", "commitAfterChange": "d012414100e088dfd0a2ea6e642cc05f11fbf32b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void update()", "signatureAfterChange": "      public boolean update()", "diff": ["-    public void update() {", "-      _panel.update();", "+    public boolean update() {", "+      boolean isValidUpdate = _panel.update();", "+      //if this panel encountered an error while attempting to update, return false", "+      if (!isValidUpdate) {", "+        TreePath path = new TreePath(this.getPath());", "+        _tree.expandPath(path);", "+        _tree.setSelectionPath(path);", "+        return false;", "+      }", "-        ((PanelTreeNode)childNodes.nextElement()).update();", "+        boolean isValidUpdateChildren = ((PanelTreeNode)childNodes.nextElement()).update();", "+        //if any of the children nodes encountered an error, return false", "+        if (!isValidUpdateChildren) return false;", "+      ", "+      return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b73e8ce342e32a54f095580d4d2884d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "488e3f877c7f7a8647e0d3f7fb5faea712ac20ce", "commitAfterChange": "35470e88ca153d8164d45d018c673900eac06ea2", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "      public static void main(String... args)", "signatureAfterChange": "      public static void main(String... args)", "diff": ["+    argParser.supportOption(\"verbose\");", "+    boolean verbose = parsedArgs.hasOption(\"verbose\");", "-      NodeDiff diff = new NodeDiff();", "-        diff.compare(canonicalName, canonical, e.getKey(), e.getValue());", "+        NodeDiffLog log = new NodeDiffLog(canonicalName, _options.get(canonicalName).typeSystem(),", "+                                          e.getKey(), _options.get(e.getKey()).typeSystem(), verbose);", "+        new NodeDiff(log).compare(canonical, e.getValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e101592456e80c70c643d7e0c95453e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "52a1b40a342403f03cb2b7e4cdf8d8b28874a356", "commitAfterChange": "202fe65b6d19b63d8f3941f6eff8e18c68fa7232", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "   private void _findAll()", "signatureAfterChange": "   private void _findAll()", "diff": ["+    boolean searchSelectedText = _machine.getSearchSelectedText();", "+    MovingDocumentRegion region = new MovingDocumentRegion(startDoc, ", "+                                                           _defPane.getSelectionStart(), ", "+                                                           _defPane.getSelectionEnd(), ", "+                                                           startDoc._getLineStartPos(_defPane.getSelectionStart()),", "+                                                           startDoc._getLineEndPos(_defPane.getSelectionEnd()));", "-      _frame.createFindResultsPanel(rm, tabLabel, searchStr, searchAll, _machine.getMatchCase(), ", "+      _frame.createFindResultsPanel(rm, region, tabLabel, searchStr, searchAll, searchSelectedText, _machine.getMatchCase(), ", "-    findAll(searchStr, searchAll, _machine.getMatchCase(), _machine.getMatchWholeWord(),", "-            _machine.getIgnoreCommentsAndStrings(), _ignoreTestCases.isSelected(), startDoc, rm, panel);", "+    findAll(searchStr, searchAll, searchSelectedText, _machine.getMatchCase(), _machine.getMatchWholeWord(),", "+            _machine.getIgnoreCommentsAndStrings(), _ignoreTestCases.isSelected(), startDoc, rm, region, panel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8d8414b15f6befb8aae4140171ee65e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "e8f48651b4fb31b2a1907635fbd654b3f66a98b2", "commitAfterChange": "2499b0018a7f137bb1baaaf2d077c26486e3f12e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "   synchronized public void compileAll() throws IOException", "signatureAfterChange": "   synchronized public void compileAll() throws IOException", "diff": ["+      File f;", "+      String[] exts = getCompilableExtensions();", "+      boolean okToAdd;", "-          filesToCompile.add(doc.getFile());", "+          f = doc.getFile();", "+          okToAdd = false;", "+          for(String ext: exts){", "+            if(f.getName().endsWith(ext)){", "+              okToAdd = true;", "+            }", "+          }", "+          if(okToAdd){", "+            filesToCompile.add(f);", "+          }"]}], "num": 13728}