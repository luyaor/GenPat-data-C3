{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55edd15dabf5fcefb6ab2a36446ccb22", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bbbc9c4125608af694544973f86823a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "01c62517d281ffc6534fc475329bd814c0e2c112", "commitAfterChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public boolean setPrivateAccessible(boolean allow)", "signatureAfterChange": "   public boolean setEnforcePrivateAccess(boolean enforce)", "diff": ["-  public boolean setPrivateAccessible(boolean allow) {", "-    try { remote.setPrivateAccessible(allow); return true; }", "+   */", "+  public boolean setEnforcePrivateAccess(boolean enforce) {", "+    InterpreterJVMRemoteI remote = _state.value().interpreter(false);", "+    if (remote == null) { return false; }", "+    try { remote.setEnforcePrivateAccess(enforce); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82664149c9bc679648cd4e68a35dc3f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public boolean runTestSuite() throws RemoteException", "signatureAfterChange": "   public boolean runTestSuite()", "diff": ["-    */", "-  public boolean runTestSuite() throws RemoteException { ", "-//    System.err.println(\"Calling _interpreterJVM().runTestSuite()\");", "-    return _interpreterJVM().runTestSuite(); ", "+   */", "+  public boolean runTestSuite() { ", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { return remote.runTestSuite(); }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }"]}], "num": 11759}