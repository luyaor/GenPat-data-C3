{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a47918db05d4a1301c7a0820ede146fb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f318ece0d211525afcb04209ce470a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "b578b7b4c7a4a91c29761e9d3bf28b378645bfda", "commitAfterChange": "7d20b14faca1d500f599ed54f40d60f42cf8097e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public List<DocFile> forCons(Cons c)", "signatureAfterChange": "     public List<DocFile> forCons(Cons c)", "diff": ["-    }", "-    public List<DocFile> forCons(Cons c) {", "-      List<DocFile> list = c.getRest().accept(this);", "-      list.add(0,parseFile(c.getFirst()));", "-      return list;", "-    }", "+    }", "+    public List<DocFile> forCons(Cons c) {", "+      List<DocFile> list = c.getRest().accept(this);", "+      list.add(0, ProjectFileParser.ONLY.parseFile(c.getFirst(), _parentDir));", "+      return list;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c892204c488c4b476bbaa5d204d96979", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 223, "methodNumberAfterChange": 259, "signatureBeforeChange": "       public Type forParameterizedClassType(ParameterizedClassType t)", "signatureAfterChange": "     public boolean hasMatch(Type t)", "diff": ["-      public Type forRawClassType(RawClassType t) { return immediateSupertype(t); }", "-      public Type forParameterizedClassType(ParameterizedClassType t) { return immediateSupertype(t); }", "+    /** Test whether a search of the given type produces at least one result. */", "+    public boolean hasMatch(Type t) { return !IterUtil.isEmpty(findFirst(t)); }"]}], "num": 24261}