{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28f1a40ef9c973dd068b22376e0c736f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0220c89b1f211ba1b9f28abb6ed4b369", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "6bdcaa1031d63e5f58edf8d0e2313eac60ac2bdc", "commitAfterChange": "c6ab4cad3515b44035f93fe56438ef0ad4e6d24d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testDebugSourcepath() throws Exception", "signatureAfterChange": "   public void testDebugSourcepath() throws Exception", "diff": ["-//    synchronized(_debugger) {  // Why synchonize this access to the OptionConstants?", "+    synchronized(_debugger) {", "-//    }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64f122083ad72996f263344bac244fdc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandlerThread.java", "commitBeforeChange": "4b6c56880670c4bb0f37de6a58c9d30d501c274a", "commitAfterChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected void _handleThreadDeathEvent(ThreadDeathEvent e) throws DebugException", "signatureAfterChange": "   protected void _handleThreadDeathEvent(ThreadDeathEvent e) throws DebugException", "diff": ["-    ", "-    ThreadReference running = _debugger.getCurrentRunningThread();", "-    if (e.thread().equals(running)) {", "-      // Delete any step requests pending on this thread", "-      EventRequestManager erm = _vm.eventRequestManager();", "-      List steps = erm.stepRequests();", "-      for (int i = 0; i < steps.size(); i++) {", "-        StepRequest step = (StepRequest)steps.get(i);", "-        if (step.thread().equals(e.thread())) {", "-          erm.deleteEventRequest(step);", "-          ", "-          // There can only be one step request per thread,", "-          //  so we can stop looking", "-          break;", "+    synchronized(_debugger) {", "+      ThreadReference running = _debugger.getCurrentRunningThread();", "+      if (e.thread().equals(running)) {", "+        // Delete any step requests pending on this thread", "+        EventRequestManager erm = _vm.eventRequestManager();", "+        List steps = erm.stepRequests();", "+        for (int i = 0; i < steps.size(); i++) {", "+          StepRequest step = (StepRequest)steps.get(i);", "+          if (step.thread().equals(e.thread())) {", "+            erm.deleteEventRequest(step);", "+            ", "+            // There can only be one step request per thread,", "+            //  so we can stop looking", "+            break;", "+          }", "+        _debugger.currThreadDied();", "-      _debugger.currThreadDied();", "-    }", "-    else {", "-      _debugger.nonCurrThreadDied();", "+      else {", "+        _debugger.nonCurrThreadDied();", "+      }"]}], "num": 7293}