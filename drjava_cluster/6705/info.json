{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f602a9d3d0a191068f7a0f94e04abdb9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "263b7a3201bd39c1a2d4e7cfee41219c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 476, "methodNumberAfterChange": 476, "signatureBeforeChange": "\r \r   public void forSimpleThisReference(SimpleThisReference that)", "signatureAfterChange": "    public void forSimpleThisReference(SimpleThisReference that)", "diff": ["-\r", "-  public void forSimpleThisReference(SimpleThisReference that) {\r", "-    forSimpleThisReferenceDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forSimpleThisReferenceOnly(that);\r", "-  }\r", "+", "+  public void forSimpleThisReference(SimpleThisReference that) {", "+    forSimpleThisReferenceDoFirst(that);", "+    if (prune(that)) return;", "+    forSimpleThisReferenceOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a166314dd2f074040293e78b9124da6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 478, "methodNumberAfterChange": 478, "signatureBeforeChange": "\r \r   public void forSimpleSuperReference(SimpleSuperReference that)", "signatureAfterChange": "    public void forSimpleSuperReference(SimpleSuperReference that)", "diff": ["-\r", "-  public void forSimpleSuperReference(SimpleSuperReference that) {\r", "-    forSimpleSuperReferenceDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forSimpleSuperReferenceOnly(that);\r", "-  }\r", "+", "+  public void forSimpleSuperReference(SimpleSuperReference that) {", "+    forSimpleSuperReferenceDoFirst(that);", "+    if (prune(that)) return;", "+    forSimpleSuperReferenceOnly(that);", "+  }"]}], "num": 6705}