{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f0d6ec124815fa0fd85e964aced18fa", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c77770c2a85d7d5a66eceb6f13050c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "99e17181157667354a79af5fff7558664559fae9", "commitAfterChange": "0f014669daf60c46746e3e582159e95f94a3d43c", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException, AbsentInformationException", "signatureAfterChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException, AbsentInformationException", "diff": ["+      StackFrame frame = suspendedThreadRef.frame(0);", "+      Location l = frame.location();", "+      ReferenceType rt = l.declaringType();", "+      String className = rt.name();", "-      _model.getInteractionsModel().addDebugInterpreter(interpreterName);", "+      _model.getInteractionsModel().addDebugInterpreter(interpreterName, className);", "-      StackFrame frame = suspendedThreadRef.frame(0);", "+      frame = suspendedThreadRef.frame(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a42d80b589932f6bbf3fb8597c44fa89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ea2763ecde4185a8c33fdd0462c9d12c206c7378", "commitAfterChange": "1ccb0f21abc2aaa138e57bd5c1add5c018ff34ef", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void startInterpreterJVM()", "signatureAfterChange": "   public void startInterpreterJVM()", "diff": ["-    Vector<String> jvmArgs = new Vector<String>();", "+    ArrayList<String> jvmArgs = new ArrayList<String>();", "+    String optionArgString = DrJava.getConfig().getSetting(OptionConstants.JVM_ARGS);", "+    List<String> optionArgs = ArgumentTokenizer.tokenize(optionArgString);", "+    jvmArgs.addAll(optionArgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b83e139cdb07ed81a6e833862e4617a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsView.java", "commitBeforeChange": "09b2b8159aeebd112917594d3a29e014650ad394", "commitAfterChange": "9472e1123be5aa6b424c338aadb2f02068642635", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void createPartControl(Composite parent)", "signatureAfterChange": "   public void createPartControl(Composite parent)", "diff": ["+", "+    // Get menus", "+    IActionBars bars = getViewSite().getActionBars();", "+    _toolbarMenu = bars.getMenuManager();", "+    _contextMenu = new MenuManager(\"#PopupMenu\");", "+    Menu menu = _contextMenu.createContextMenu(_styledText);", "+    _styledText.setMenu(menu);", "-    ", "+"]}], "num": 23231}