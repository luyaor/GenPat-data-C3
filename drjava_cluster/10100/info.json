{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9758e5e9cee2806bbe65b4e49156c11e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "592697d5256b832ea80713dc7303ddb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "               public void testLiterals()", "signatureAfterChange": "               public void testLiterals()", "diff": ["-      StringLiteral sl = new StringLiteral(SourceInfo.NO_INFO, \"string literal!\");", "-      IntegerLiteral il = new IntegerLiteral(SourceInfo.NO_INFO, 4);", "-      LongLiteral ll = new LongLiteral(SourceInfo.NO_INFO, 5);", "-      FloatLiteral fl = new FloatLiteral(SourceInfo.NO_INFO, 1.2f);", "-      DoubleLiteral dl = new DoubleLiteral(SourceInfo.NO_INFO, 4.2);", "-      CharLiteral cl = new CharLiteral(SourceInfo.NO_INFO, 'c');", "-      BooleanLiteral bl = new BooleanLiteral(SourceInfo.NO_INFO, true);", "-      NullLiteral nl = new NullLiteral(SourceInfo.NO_INFO);", "-      ClassLiteral csl = new ClassLiteral(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"monkey\", new Type[0]));", "+      StringLiteral sl = new StringLiteral(SourceInfo.NONE, \"string literal!\");", "+      IntegerLiteral il = new IntegerLiteral(SourceInfo.NONE, 4);", "+      LongLiteral ll = new LongLiteral(SourceInfo.NONE, 5);", "+      FloatLiteral fl = new FloatLiteral(SourceInfo.NONE, 1.2f);", "+      DoubleLiteral dl = new DoubleLiteral(SourceInfo.NONE, 4.2);", "+      CharLiteral cl = new CharLiteral(SourceInfo.NONE, 'c');", "+      BooleanLiteral bl = new BooleanLiteral(SourceInfo.NONE, true);", "+      ClassLiteral csl = ", "+        new ClassLiteral(SourceInfo.NONE, new ClassOrInterfaceType(SourceInfo.NONE, \"monkey\", new Type[0]));", "-      assertEquals(\"Should return null type\", SymbolData.NULL_TYPE.getInstanceData(), nl.visit(_etc));", "-      ", "+      assertEquals(\"Should return null type\", SymbolData.NULL_TYPE.getInstanceData(), NULL_LITERAL.visit(_etc));", "-      ", "-      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d6b873562f9f05d32edcd26cc6af45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "               public void testLiterals()", "signatureAfterChange": "               public void testLiterals()", "diff": ["-      StringLiteral sl = new StringLiteral(JExprParser.NO_SOURCE_INFO, \"string literal!\");", "-      IntegerLiteral il = new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 4);", "-      LongLiteral ll = new LongLiteral(JExprParser.NO_SOURCE_INFO, 5);", "-      FloatLiteral fl = new FloatLiteral(JExprParser.NO_SOURCE_INFO, 1.2f);", "-      DoubleLiteral dl = new DoubleLiteral(JExprParser.NO_SOURCE_INFO, 4.2);", "-      CharLiteral cl = new CharLiteral(JExprParser.NO_SOURCE_INFO, 'c');", "-      BooleanLiteral bl = new BooleanLiteral(JExprParser.NO_SOURCE_INFO, true);", "-      NullLiteral nl = new NullLiteral(JExprParser.NO_SOURCE_INFO);", "-      ClassLiteral csl = new ClassLiteral(JExprParser.NO_SOURCE_INFO, new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"monkey\", new Type[0]));", "+      StringLiteral sl = new StringLiteral(SourceInfo.NO_INFO, \"string literal!\");", "+      IntegerLiteral il = new IntegerLiteral(SourceInfo.NO_INFO, 4);", "+      LongLiteral ll = new LongLiteral(SourceInfo.NO_INFO, 5);", "+      FloatLiteral fl = new FloatLiteral(SourceInfo.NO_INFO, 1.2f);", "+      DoubleLiteral dl = new DoubleLiteral(SourceInfo.NO_INFO, 4.2);", "+      CharLiteral cl = new CharLiteral(SourceInfo.NO_INFO, 'c');", "+      BooleanLiteral bl = new BooleanLiteral(SourceInfo.NO_INFO, true);", "+      NullLiteral nl = new NullLiteral(SourceInfo.NO_INFO);", "+      ClassLiteral csl = new ClassLiteral(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"monkey\", new Type[0]));"]}], "num": 10100}