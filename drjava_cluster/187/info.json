{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2979b5c8a645f224dc02e41c98dff70d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ad8064314c9a5a9305027aeb0e75487", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentAdapter.java", "commitBeforeChange": "a456c3c569290738778ef74445b985b166374279", "commitAfterChange": "96280514fb881d50943f0d3b8d04a28cff171d49", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void insertText(int offs, String str, String style)     throws DocumentAdapterException", "signatureAfterChange": "   public void insertText(int offs, String str, String style)     throws DocumentAdapterException", "diff": ["-    throws DocumentAdapterException", "-  {", "-    if (_condition.canInsertText(offs, str, style)) {", "-      forceInsertText(offs, str, style);", "+    throws DocumentAdapterException {", "+    writeLock();", "+    try {", "+      if (_condition.canInsertText(offs, str, style)) forceInsertText(offs, str, style);", "+    finally { writeUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8d3327955c39e087e155ce2563eaaf4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentAdapter.java", "commitBeforeChange": "a456c3c569290738778ef74445b985b166374279", "commitAfterChange": "96280514fb881d50943f0d3b8d04a28cff171d49", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void insertString(int offs, String str, AttributeSet set)     throws BadLocationException", "signatureAfterChange": "   public void insertString(int offs, String str, AttributeSet set)     throws BadLocationException", "diff": ["-    throws BadLocationException", "-  {", "-    if (_condition.canInsertText(offs, str, null)) {", "-      super.insertString(offs, str, set);", "+    throws BadLocationException {", "+    writeLock();  // locking is used to make the test and modification atomic", "+    try { ", "+      if (_condition.canInsertText(offs, str, null)) super.insertString(offs, str, set);", "+    finally { writeUnlock(); }"]}], "num": 187}