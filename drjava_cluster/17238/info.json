{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "950ec1ed667e34c5b9fe65af5fd10e34", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "314c6df4acffe1dcc752509958b50d85", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public void testUndoAndRedoAfterMultipleLineIndent() throws BadLocationException", "signatureAfterChange": "   public void testUndoAndRedoAfterMultipleLineIndent() throws BadLocationException", "diff": ["-    _defModel.addUndoableEditListener(_defModel.getUndoManager());", "+    _doc.addUndoableEditListener(_doc.getUndoManager());", "-    _defModel.insertString(0,text,null);", "-    assertEquals(\"insertion\",text, _defModel.getText()); ", "+    _doc.insertString(0,text,null);", "+    assertEquals(\"insertion\",text, _doc.getText()); ", "-    _defModel.getUndoManager().startCompoundEdit();", "-    _defModel.indentLines(0,_defModel.getLength());", "-    assertEquals(\"indenting\",indented, _defModel.getText());", "-    _defModel.getUndoManager().undo();", "-    assertEquals(\"undo\",text, _defModel.getText());", "-    _defModel.getUndoManager().redo();", "-    assertEquals(\"redo\",indented, _defModel.getText());", "+    _doc.getUndoManager().startCompoundEdit();", "+    indentLines(0,_doc.getLength());", "+    assertEquals(\"indenting\",indented, _doc.getText());", "+    _doc.getUndoManager().undo();", "+    assertEquals(\"undo\",text, _doc.getText());", "+    _doc.getUndoManager().redo();", "+    assertEquals(\"redo\",indented, _doc.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d653eb95ff077cf4186ca5237802d62f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public void testUndoAndRedoAfterMultipleLineCommentAndUncomment()     throws BadLocationException", "signatureAfterChange": "   public void testUndoAndRedoAfterMultipleLineCommentAndUncomment()     throws BadLocationException", "diff": ["-    assertEquals(\"insertion\",text, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"insertion\",text, _defModel.getText());", "-    assertEquals(\"commenting\",commented, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"commenting\",commented, _defModel.getText());", "-    assertEquals(\"undo commenting\",text, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"undo commenting\",text, _defModel.getText());", "-    assertEquals(\"redo commenting\",commented, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"redo commenting\",commented, _defModel.getText());", "-    assertEquals(\"uncommenting\",text, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"uncommenting\",text, _defModel.getText());", "-    assertEquals(\"undo uncommenting\",commented, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"undo uncommenting\",commented, _defModel.getText());", "-    assertEquals(\"redo uncommenting\",text, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"redo uncommenting\",text, _defModel.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fce7fb815ac5928898ccc861ed83d705", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   public void testUndoAndRedoAfterMultipleLineIndent() throws BadLocationException", "signatureAfterChange": "   public void testUndoAndRedoAfterMultipleLineIndent() throws BadLocationException", "diff": ["-    defModel.addUndoableEditListener(defModel.getUndoManager());", "+    _defModel.addUndoableEditListener(_defModel.getUndoManager());", "-    defModel.insertString(0,text,null);", "-    assertEquals(\"insertion\",text, defModel.getText(0,defModel.getLength()));", "-    defModel.indentLines(0,defModel.getLength());", "-    assertEquals(\"indenting\",indented, defModel.getText(0,defModel.getLength()));", "-    defModel.getUndoManager().undo();", "-    assertEquals(\"undo\",text, defModel.getText(0,defModel.getLength()));", "-    defModel.getUndoManager().redo();", "-    assertEquals(\"redo\",indented, defModel.getText(0,defModel.getLength()));", "+    _defModel.insertString(0,text,null);", "+    assertEquals(\"insertion\",text, _defModel.getText(0,_defModel.getLength()));", "+    _defModel.indentLines(0,_defModel.getLength());", "+    assertEquals(\"indenting\",indented, _defModel.getText(0,_defModel.getLength()));", "+    _defModel.getUndoManager().undo();", "+    assertEquals(\"undo\",text, _defModel.getText(0,_defModel.getLength()));", "+    _defModel.getUndoManager().redo();", "+    assertEquals(\"redo\",indented, _defModel.getText(0,_defModel.getLength()));"]}], "num": 17238}