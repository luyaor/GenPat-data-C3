{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73abf1f746321a6818e70bef20e035cd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47fa349964ebf6802d672b38e524e436", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "8279bc33117c74621df6401dedd10a0cae247a2c", "commitAfterChange": "ce3350f89c936debb5fbaa8f27f501d1524368cf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void registerInterpreterJVM(InterpreterJVMRemoteI remote)     throws RemoteException", "signatureAfterChange": "    private InterpreterJVMRemoteI _interpreterJVM()", "diff": ["+", "+  private InterpreterJVMRemoteI _interpreterJVM() {", "+    return (InterpreterJVMRemoteI) getSlave();", "-   */", "-  public void registerInterpreterJVM(InterpreterJVMRemoteI remote)", "-    throws RemoteException", "-  {", "-    synchronized(this) {", "-      //System.err.println(\"interpreter jvm registered: \" + remote);", "-      _interpreterJVM = remote;", "-      _startupInProgress = false;", "-      // wake up anyone waiting for an interpreter!", "-      notify();", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f06fcb657807f5c4a9c67933c645aec8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "1ecc95c0c60f2dabd3e5d52eee223ff564461e48", "commitAfterChange": "a7a03ce246432b4e0ab5d61753312842c1cd49c1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 9, "signatureBeforeChange": "    private InterpreterJVMRemoteI _interpreterJVM()", "signatureAfterChange": "   public void registerInterpreterJVM(InterpreterJVMRemoteI remote)     throws RemoteException", "diff": ["+   */", "+  public void registerInterpreterJVM(InterpreterJVMRemoteI remote)", "+    throws RemoteException", "+  {", "+    synchronized(this) {", "+      //System.err.println(\"interpreter jvm registered: \" + remote);", "+      _interpreterJVM = remote;", "+      _startupInProgress = false;", "+      // wake up anyone waiting for an interpreter!", "+      notify();", "+    }", "-  private InterpreterJVMRemoteI _interpreterJVM() {", "-    return (InterpreterJVMRemoteI) getSlave();"]}], "num": 17764}