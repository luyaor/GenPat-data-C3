{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7f28bfe1d72b154e2bf700df384b7cc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02adb06caa29866450482cc921a0f004", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlus.java", "commitBeforeChange": "f38b2c12f0327f42f8998c67d45ac2d3bcbed42a", "commitAfterChange": "536c00239bf186b1c81bb087b131d4cbb6302c23", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-          throw new UnexpectedException(\"No matching '{' or '(' preceding '\" + delim + \"' at offset \" + here + \" in \"", "-                                       + doc);", "+          // No matching '{' or '(' preceding this delimiter here", "+          // but throwing an unexpected exception is not right, because the", "+          // user may be trying to indent code that is not balanced!", "+          return supResult;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd63d2153f7a46d13f53837c740fbe50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/HistoryTest.java", "commitBeforeChange": "12aaa1ddc474cfa046da07f830508d72c218a8f6", "commitAfterChange": "47d5fc81163cac95e4e64b470a149e7ec540b233", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testLiveUpdateOfHistoryMaxSize()", "signatureAfterChange": "      public void testLiveUpdateOfHistoryMaxSize()", "diff": ["+      ", "+      CONFIG.setSetting(HISTORY_MAX_SIZE, new Integer(0));", "+      ", "+      assertEquals(\"History size should be 0\",", "+                   0,", "+                   _history.size());", "+      ", "+      CONFIG.setSetting(HISTORY_MAX_SIZE, new Integer(-1));", "+      ", "+      assertEquals(\"History size should still be 0\",", "+                   0,", "+                   _history.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbf9e9f3ba53014b2c2becf7e87305ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "commitAfterChange": "f631b97f7a46e37b22216cbc1b865ac25185f25a", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public Object interpret(Reader r, String fname) throws InterpreterException", "signatureAfterChange": "     public Object interpret(Reader r, String fname) throws InterpreterException", "diff": ["-        throw new InteractionsException(\"There was a syntax error in the \" +", "-                                        \"previous input.\");", "-        //throw new InterpreterException(e);", "+        //throw new InteractionsException(\"There was a syntax error in the \" +", "+        //                                \"previous input.\");", "+        throw new InterpreterException(e);"]}], "num": 1780}