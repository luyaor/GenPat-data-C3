{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "723c637522677afb5b848f78d97eda2b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22a062a915be0a09007c7c51d89157f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testDocumentPaneMemoryLeak()  throws InterruptedException, java.io.IOException", "signatureAfterChange": "   public void testDocumentPaneMemoryLeak()  throws InterruptedException, java.io.IOException", "diff": ["+        System.out.println(\"Finalizing: \" + e.getObject().hashCode());", "+    System.out.println(\"Created File: \" + _frame.getCurrentDefPane().hashCode());", "+    System.out.println(\"Created File: \" + _frame.getCurrentDefPane().hashCode());", "+    System.out.println(\"Created File: \" + _frame.getCurrentDefPane().hashCode());", "+    System.out.println(\"Created File: \" + _frame.getCurrentDefPane().hashCode());", "+    System.out.println(\"Created File: \" + _frame.getCurrentDefPane().hashCode());", "+    _model.newFile().addFinalizationListener(fldoc);", "+    _frame.getCurrentDefPane().addFinalizationListener(fl);", "+    System.out.println(\"Created File: \" + _frame.getCurrentDefPane().hashCode());", "-    assertEquals(\"all the panes have been garbage collected\", 5, _finalCount);", "-    assertEquals(\"all the defdocs have been garbage collected\", 5, _finalDocCount);", "+    System.out.println(\"Current: \" + _frame.getCurrentDefPane().hashCode());", "+    ", "+//    assertEquals(\"all the panes should have been garbage collected\", 6, _finalCount);", "+    assertEquals(\"all the defdocs should have been garbage collected\", 6, _finalDocCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ebe7f4a6c294ca28cf16c4ba33c5dfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "92062677ca813cb9ab44428a0d2d54f0c3309b04", "commitAfterChange": "274f7defc49003e66c942e814c9ce22958b3814c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      public void testDocumentPaneMemoryLeak()  throws InterruptedException, java.io.IOException", "signatureAfterChange": "      public void testDocumentPaneMemoryLeak()  throws InterruptedException, java.io.IOException", "diff": ["-    _finalCount = 0;", "-    _finalDocCount = 0;", "+    _finalPaneCt = 0;", "+    _finalDocCt = 0;", "-        _finalCount++;", "+        _finalPaneCt++;", "-        _finalDocCount++;", "+        _finalDocCt++;", "-    _ct = 0;", "-    do { _cleanup(); }", "-    while (_finalDocCount != 6 || _finalCount != 6);", "+    int ct = 0;", "+    do {  ", "+      // make sure that the event queue is empty", "+      Utilities.clearEventQueue();", "+      Utilities.clearEventQueue();", "+      ", "+      System.gc();", "+      System.runFinalization();", "+      System.gc();", "+      ct++; ", "+    }", "+    while(ct < 10 && (_finalDocCt != 6 || _finalPaneCt != 6));", "-    if (_ct > 1) System.out.println(\"testDocumentPaneMemoryLeak required \" + _ct + \" iterations\");", "+    if (ct == 10) fail(\"Failed to reclaim all documents; panes left = \" + (6-_finalPaneCt) + \"; docs left = \" + ", "+                       (6 - _finalDocCt));", "+    ", "+    if (ct > 1) System.out.println(\"testDocumentPaneMemoryLeak required \" + ct + \" iterations\");", "-    assertEquals(\"all the defdocs should have been garbage collected\", 6, _finalDocCount);", "-    assertEquals(\"all the panes should have been garbage collected\", 6, _finalCount);", "-//    System.err.println(\"_finalCount = \" + _finalCount);", "+    assertEquals(\"all the defdocs should have been garbage collected\", 6, _finalDocCt);", "+    assertEquals(\"all the panes should have been garbage collected\", 6, _finalPaneCt);", "+//    System.err.println(\"_finalPaneCt = \" + _finalPaneCt);", "-  }"]}], "num": 2464}