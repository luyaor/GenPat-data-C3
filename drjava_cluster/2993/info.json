{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73d84ea61afb75f23e2711e3ec16fe5a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ee2251cf217d4736a116faf2616e685", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/PreviewFrame.java", "commitBeforeChange": "8ffb3ce85dd256ff9cb8d7378cb82fb3debde2f9", "commitAfterChange": "0df41f295768b78613155bc47fcd824786200608", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public PreviewFrame(SingleDisplayModel model, MainFrame mainFrame, boolean interactions)      throws IllegalStateException", "signatureAfterChange": "   public PreviewFrame(SingleDisplayModel model, MainFrame mainFrame, boolean interactions)      throws IllegalStateException", "diff": ["+    //zooming modification", "+    cycle = 0;", "-    ", "-    PagePreviewContainer ppc = new PagePreviewContainer();", "-    ppc.add(_pagePreview);", "+    //zooming modification", "+    //PagePreviewContainer ppc = new PagePreviewContainer();", "+    //ppc.add(_pagePreview);", "+    JPanel previewHolder = new JPanel(new BorderLayout());", "+    //zooming modification", "+    _previewScroll = new JScrollPane(previewHolder);", "+    //_previewScroll = new JScrollPane(cp);", "+    _previewScroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);", "+    _previewScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);", "+    ", "+    //zooming modification", "+    previewHolder.add(_pagePreview, BorderLayout.CENTER);", "+    cp.add(_previewScroll);", "+    ", "+    //setContentPane(_previewScroll);", "+    //cp.add(_pagePreview, BorderLayout.CENTER);", "-    cp.add(ppc, BorderLayout.SOUTH);", "-    ", "+    //zooming modification", "+    //cp.add(ppc, BorderLayout.SOUTH);", "-    ", "-    setSize(PREVIEW_WIDTH, PREVIEW_HEIGHT);", "+    //zooming modification", "+    setExtendedState(Frame.MAXIMIZED_BOTH);", "+    //setSize(screenSize.width, screenSize.height);", "+    //setSize(PREVIEW_WIDTH, PREVIEW_HEIGHT);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c0023dc687a4628aa782722b68d3285", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "fb61bb542bf295f9ff563d4fe1831b256b325388", "commitAfterChange": "6a5c20e1ee845b9752ac481574f6a7bee8c034e1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public JUnitPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public JUnitPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["+    _testCount = 0;", "+    _testsSuccessful = true;", "-    JPanel buttonPane = new JPanel();", "-    buttonPane.setLayout(new BorderLayout());", "+    JPanel sidePanel = new JPanel(new BorderLayout());", "+    sidePanel.setBorder(new EmptyBorder(0,5,0,5)); // 5 pix padding on sides", "+    JPanel innerPanel = new JPanel(new BorderLayout());  // bar and checkbox", "+    innerPanel.setBorder(new EmptyBorder(5,0,0,0)); // 5 pix padding on top", "+    sidePanel.add(new JLabel(\"Test Progress\", SwingConstants.LEFT),", "+                      BorderLayout.NORTH);", "+       ", "+    sidePanel.add(innerPanel,BorderLayout.CENTER);", "+    _progressBar = new JUnitProgressBar();", "+    innerPanel.add(_progressBar, BorderLayout.NORTH);", "+    innerPanel.add(new JPanel(),BorderLayout.CENTER);", "+        ", "-          lastDefPane.removeErrorHighlight();", "+          lastDefPane.removeTestErrorHighlight();", "-    buttonPane.add(_showHighlightsCheckBox, BorderLayout.SOUTH);", "-    _mainPanel.add(buttonPane, BorderLayout.EAST);", "+    innerPanel.add(_showHighlightsCheckBox, BorderLayout.SOUTH);", "+    _mainPanel.add(sidePanel, BorderLayout.EAST);"]}], "num": 2993}