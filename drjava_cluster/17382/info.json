{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28147787042c72c1d26b044f93254bd2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13da197575b29408322674e588432978", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "5cd90afd0cb351ab7e2ea31fa6aad54cecb3b6a4", "commitAfterChange": "9fa6e47157b17e007bb3e10f8a50c6ba58925a8e", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": "   private OpenDefinitionsDocument[] _openFiles(File[] files)     throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   private OpenDefinitionsDocument[] _openFiles(File[] files)     throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["-    for (File f: filesNotFound) { _notifier.fileNotFound(f); }", "+    if (filesNotFound.size()>0)", "+      _notifier.filesNotFound( filesNotFound.toArray( new File[filesNotFound.size()] ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5084475fe91107b25cfe9c671f05ca0f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public R getRegionAt(OpenDefinitionsDocument odd, int offset)", "signatureAfterChange": "   public R getRegionAt(OpenDefinitionsDocument odd, int offset)", "diff": ["-    /* If tail contains a match, it must be the first non-degenerate region, since all regions in a document are ", "-     * disjoint. (Every degenerate region is disjoint from every other region because it is empty.) tail is sorted by ", "-     * [endOffset, startOffset]; tail may be empty.  We use a loop because the number of degenerate regions is ", "-     * unbounded. */", "+    /* If tail contains a match, it must be the first region, since all regions in a document are disjoint and no", "+     * degenerate region in tail can contain offset. (Every degenerate region is disjoint from every other region ", "+     * because it is empty.) tail is sorted by [endOffset, startOffset]; tail may be empty. */", "-    for (R r: tail) {", "-      int start = r.getStartOffset();", "-      int end = r.getEndOffset();", "-      if (start == end) continue;", "-      if (start <= offset) return r;", "-      else break;", "-    }", "-    return null;", "+    if (tail.size() == 0) return null;", "+    R r = tail.first();", "+    int start = r.getStartOffset();", "+    int end = r.getEndOffset();", "+    ", "+    if (start <= offset) return r;", "+    else return null;"]}], "num": 17382}