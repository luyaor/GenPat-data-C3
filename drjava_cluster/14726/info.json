{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67ed1897a77135c612c57ff6e8327662", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72aef74716ef5177920c10340cbc56da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/VectorOptionTest.java", "commitBeforeChange": "ef7dc3345b6835fe8ebb574f1a9119ee4c786794", "commitAfterChange": "21836dcccd81c2207652ee85b319b723ac9ff10b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testFormat()", "signatureAfterChange": "    public void testFormat()", "diff": ["-    Vector<Integer> iv = new Vector<Integer>();", "-    assertEquals(\"[]\", _ivo.format(iv));", "+    Vector<String> sv = new Vector<String>();", "+    assertEquals(\"\", _svo.format(sv));", "-    iv.add(new Integer(-33));", "-    assertEquals(\"[-33]\", _ivo.format(iv));", "+    sv.add(\"\");", "+    assertEquals(\"[]\", _svo.format(sv));", "-    iv.add(new Integer(2));", "-    assertEquals(\"[-33,2]\", _ivo.format(iv));", "+    sv.add(\"-33\");", "+    assertEquals(\"[,-33]\", _svo.format(sv));", "-    iv.add(new Integer(0));", "-    assertEquals(\"[-33,2,0]\", _ivo.format(iv));", "+    sv.add(\"2\");", "+    assertEquals(\"[,-33,2]\", _svo.format(sv));", "+", "+    sv.add(\"\");", "+    assertEquals(\"[,-33,2,]\", _svo.format(sv));", "+", "+    sv.add(\",\");", "+    assertEquals(\"[,-33,2,,\\\\,]\", _svo.format(sv));", "+", "+    sv.add(\"0\");", "+    assertEquals(\"[,-33,2,,\\\\,,0]\", _svo.format(sv));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9b8d6ed94a139769084c73139653c57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/VectorOptionTest.java", "commitBeforeChange": "e66e301ba3e7c9392b46f6d5762feacdcedbfdde", "commitAfterChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testParse()", "signatureAfterChange": "    public void testParse()", "diff": ["-    v = _svo.parse(\"[\\\\\\\\]\");", "+    v = _svo.parse(\"[||]\");", "-    assertEquals(\"\\\\\", v.get(0));", "+    assertEquals(\"|\", v.get(0));", "-    v = _svo.parse(\"[\\\\,]\");", "+    v = _svo.parse(\"[|,]\");", "-    v = _svo.parse(\"[\\\\,]\");", "-    assertEquals(1, v.size());", "+    v = _svo.parse(\"[|,,]\");", "+    assertEquals(2, v.size());", "+    assertEquals(\"\", v.get(1));", "-    try { _svo.parse(\"[\\\\x]\"); fail(\"Backslash not in front of another backslash or delimiter.\"); } ", "+    try { _svo.parse(\"[|x]\"); fail(\"Pipe not in front of another pipe or delimiter.\"); } ", "-    v = _svo.parse(\"[11,\\\\,,22]\");", "+    v = _svo.parse(\"[11,|,,22]\");", "-    v = _svo.parse(\"[11,abc\\\\,def,22]\");", "+    v = _svo.parse(\"[11,abc|,def,22]\");", "-    v = _svo.parse(\"[11,\\\\\\\\,22]\");", "+    v = _svo.parse(\"[11,||,22]\");", "-    assertEquals(\"\\\\\", v.get(1));", "+    assertEquals(\"|\", v.get(1));"]}], "num": 14726}