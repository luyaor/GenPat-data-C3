{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "655470c5c4f66cf5bf6b958261316d52", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79312dfc163a984542fce7ac6bf644e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/MatchWholeWordState.java", "commitBeforeChange": "82f2ed0c10073d0b45d405a9ea26c9aa3f37c661", "commitAfterChange": "6bfab9f5cad6f12d0935dd59b83d99bfc86909eb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    private int indexOf(String str, String findword, int fromIndex)", "signatureAfterChange": "     private int indexOf(String str, String findword, int fromIndex)", "diff": ["-  private int indexOf(String str, String findword, int fromIndex) {", "+   private int indexOf(String str, String findword, int fromIndex) {", "-      if (_matchCase) {", "-        return str.indexOf(findword, fromIndex);", "-      }", "-      else {", "-        String lowerstr = str.toLowerCase();", "-        String lowerfindword = findword.toLowerCase();", "-        return lowerstr.indexOf(lowerfindword, fromIndex);", "-      }", "+      if (_matchCase) return str.indexOf(findword, fromIndex);", "+      String lowerstr = str.toLowerCase();", "+      String lowerfindword = findword.toLowerCase();", "+      return lowerstr.indexOf(lowerfindword, fromIndex);", "-    else {", "-      if (_matchCase) {", "-        return str.lastIndexOf(findword, fromIndex);", "-      }", "-      else {", "-        String lowerstr = str.toLowerCase();", "-        String lowerfindword = findword.toLowerCase();", "-        return lowerstr.lastIndexOf(lowerfindword, fromIndex);", "-      }", "-    }", "+    if (_matchCase) return str.lastIndexOf(findword, fromIndex);", "+    String lowerstr = str.toLowerCase();", "+    String lowerfindword = findword.toLowerCase();", "+    return lowerstr.lastIndexOf(lowerfindword, fromIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff34c1da1e2a8f47324027b3698ce5fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/AbstractReducedModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void _insertGap( int length )", "signatureAfterChange": "   public void _insertGap( int length )", "diff": ["-      else {", "-        _insertNewGap(length);//inserts gap and goes to next item", "-      }", "+      else _insertNewGap(length);//inserts gap and goes to next item", "-      else {", "-        _insertNewGap(length); //inserts gap and moves to next item", "-      }", "+      else _insertNewGap(length); //inserts gap and moves to next item", "-    else if ((_cursor.getBlockOffset() > 0) && _cursor.current().isMultipleCharBrace()) {", "+    else if ((_cursor.getBlockOffset() > 0) && _cursor.current().isMultipleCharBrace())", "-    }", "-    else if (!_cursor.atFirstItem() && _cursor.prevItem().isGap()) {", "+    else if (!_cursor.atFirstItem() && _cursor.prevItem().isGap())", "-    }", "-    else { //between two braces", "+    else  //between two braces", "-    }"]}], "num": 18104}