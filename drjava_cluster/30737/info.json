{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd40ba7b1e21e0ed865bd0bc05cbec5b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53e962414d25bed8ea448ffb2b418af3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 480, "methodNumberAfterChange": 480, "signatureBeforeChange": "\r \r   public void forSimpleMethodInvocation(SimpleMethodInvocation that)", "signatureAfterChange": "    public void forSimpleMethodInvocation(SimpleMethodInvocation that)", "diff": ["-\r", "-  public void forSimpleMethodInvocation(SimpleMethodInvocation that) {\r", "-    forSimpleMethodInvocationDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getName().visit(this);\r", "-    that.getArguments().visit(this);\r", "-    forSimpleMethodInvocationOnly(that);\r", "-  }\r", "+", "+  public void forSimpleMethodInvocation(SimpleMethodInvocation that) {", "+    forSimpleMethodInvocationDoFirst(that);", "+    if (prune(that)) return;", "+    that.getName().visit(this);", "+    that.getArguments().visit(this);", "+    forSimpleMethodInvocationOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc42118e37f67d0f4c3bf0d668fea670", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 481, "methodNumberAfterChange": 481, "signatureBeforeChange": "\r \r   public void forComplexMethodInvocation(ComplexMethodInvocation that)", "signatureAfterChange": "    public void forComplexMethodInvocation(ComplexMethodInvocation that)", "diff": ["-\r", "-  public void forComplexMethodInvocation(ComplexMethodInvocation that) {\r", "-    forComplexMethodInvocationDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getEnclosing().visit(this);\r", "-    that.getName().visit(this);\r", "-    that.getArguments().visit(this);\r", "-    forComplexMethodInvocationOnly(that);\r", "-  }\r", "+", "+  public void forComplexMethodInvocation(ComplexMethodInvocation that) {", "+    forComplexMethodInvocationDoFirst(that);", "+    if (prune(that)) return;", "+    that.getEnclosing().visit(this);", "+    that.getName().visit(this);", "+    that.getArguments().visit(this);", "+    forComplexMethodInvocationOnly(that);", "+  }"]}], "num": 30737}