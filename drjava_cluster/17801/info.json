{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a69848ea38d4ca8f9d1c1326b7ef6e74", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0946c4a4f15d54163cb9232d96ad1e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "9ac042462ff2ccafde5facafd742598846cdb098", "commitAfterChange": "129e16928b37d25f1eb9e60e117e48de5dda4c3c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void _checkPreviousInsertSlash(ModelList<ReducedToken>.Iterator                                          copyCursor)", "signatureAfterChange": "   private void _checkPreviousInsertCommentChar(String special,                                                ModelList<ReducedToken>.Iterator                                                copyCursor)", "diff": ["-  private void _checkPreviousInsertSlash(ModelList<ReducedToken>.Iterator", "-                                         copyCursor)", "+  private void _checkPreviousInsertCommentChar(String special,", "+                                               ModelList<ReducedToken>.Iterator", "+                                               copyCursor)", "-      if (copyCursor.prevItem().getType().equals(\"/\") &&", "+      if ((copyCursor.prevItem().getType().equals(\"/\")) &&", "-      {", "-        copyCursor.prevItem().setType(\"//\");", "-        _updateBasedOnCurrentState();", "-        return;", "-      }", "+          {", "+            copyCursor.prevItem().setType(\"/\" + special);", "+            _updateBasedOnCurrentState();", "+            return;", "+          }", "-      else if ((getStateAtCurrent() == INSIDE_BLOCK_COMMENT)", "-               && copyCursor.prevItem().getType().equals(\"*\"))", "-                 ", "-      {", "-        copyCursor.prevItem().setType(\"*/\");", "-        copyCursor.prevItem().setState(FREE);", "-        _updateBasedOnCurrentState();", "-        return;", "-      }", "+      else if ((copyCursor.prevItem().getType().equals(\"*\")) &&", "+               (getStateAtCurrent() == INSIDE_BLOCK_COMMENT) &&", "+               special.equals(\"/\"))", "+        {", "+          copyCursor.prevItem().setType(\"*\" + special);", "+          copyCursor.prevItem().setState(FREE);", "+          _updateBasedOnCurrentState();", "+          return;", "+        }", "-    _insertNewBrace(\"/\",copyCursor); //leaving us after the brace.", "+    _insertNewBrace(special,copyCursor); //leaving us after the brace.", "-    else {", "+    else", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de02fe9f4fc3082f7e8b5edbc9665048", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "9ac042462ff2ccafde5facafd742598846cdb098", "commitAfterChange": "129e16928b37d25f1eb9e60e117e48de5dda4c3c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void _checkPreviousInsertSlash(ModelList<ReducedToken>.Iterator                                          copyCursor)", "signatureAfterChange": "   private void _checkPreviousInsertCommentChar(String special,                                                ModelList<ReducedToken>.Iterator                                                copyCursor)", "diff": ["-  private void _checkPreviousInsertSlash(ModelList<ReducedToken>.Iterator", "-                                         copyCursor)", "+  private void _checkPreviousInsertCommentChar(String special,", "+                                               ModelList<ReducedToken>.Iterator", "+                                               copyCursor)", "-      if (copyCursor.prevItem().getType().equals(\"/\") &&", "+      if ((copyCursor.prevItem().getType().equals(\"/\")) &&", "-      {", "-        copyCursor.prevItem().setType(\"//\");", "-        _updateBasedOnCurrentState();", "-        return;", "-      }", "+          {", "+            copyCursor.prevItem().setType(\"/\" + special);", "+            _updateBasedOnCurrentState();", "+            return;", "+          }", "-      else if ((getStateAtCurrent() == INSIDE_BLOCK_COMMENT)", "-               && copyCursor.prevItem().getType().equals(\"*\"))", "-                 ", "-      {", "-        copyCursor.prevItem().setType(\"*/\");", "-        copyCursor.prevItem().setState(FREE);", "-        _updateBasedOnCurrentState();", "-        return;", "-      }", "+      else if ((copyCursor.prevItem().getType().equals(\"*\")) &&", "+               (getStateAtCurrent() == INSIDE_BLOCK_COMMENT) &&", "+               special.equals(\"/\"))", "+        {", "+          copyCursor.prevItem().setType(\"*\" + special);", "+          copyCursor.prevItem().setState(FREE);", "+          _updateBasedOnCurrentState();", "+          return;", "+        }", "-    _insertNewBrace(\"/\",copyCursor); //leaving us after the brace.", "+    _insertNewBrace(special,copyCursor); //leaving us after the brace.", "-    else {", "+    else", "-    }"]}], "num": 17801}