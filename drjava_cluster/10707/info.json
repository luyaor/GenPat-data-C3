{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76844c0aafb111aa2b3019a436bf9d67", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48049e73a11b7598e127e8e3e453d410", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CompilerErrorModel(CompilerError[] errors, Document doc, File file)", "signatureAfterChange": "   public CompilerErrorModel(T[] errors, GlobalModel model)", "diff": ["-  public CompilerErrorModel(CompilerError[] errors, Document doc, File file) {", "-    _document = doc;", "-    _file = file;", "-    _groupErrors(errors);", "+  public CompilerErrorModel(T[] errors, GlobalModel model) {", "+    _model = model;", "+    _errors = errors;", "+    // Sort the errors by file and position", "+    Arrays.sort(_errors);", "+    _numErrors = errors.length;", "+    _calculatePositions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "542dd00d491af52bc3a2a57b198344ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "24e790b85d3a1a29de15955ca1ba9200a6865f83", "commitAfterChange": "4ceb386773fd5eb837ddcd34820c563b6c3c20cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CompilerErrorModel(T[] errors, GlobalModel model)", "signatureAfterChange": "   public CompilerErrorModel(T[] errors, IGetDocuments model)", "diff": ["-  public CompilerErrorModel(T[] errors, GlobalModel model) {", "+  public CompilerErrorModel(T[] errors, IGetDocuments model) {", "+    ", "+    // TODO: If we move to NextGen-style generics, ensure _errors is non-null.", "+    ", "+    // Next two lines are order-dependent!", "+    _numErrors = errors.length;", "+    _positions = new Position[_numErrors];", "+    ", "-    _numErrors = errors.length;", "+    ", "+    // Populates _positions."]}], "num": 10707}