{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75f59d57560d541bc1b1a52bb9dcd3ba", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39bbd7623d8cd447bb98c661bf473206", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "51e686ba41ead06ef0f1c4bec2b00eaf247dbe80", "commitAfterChange": "aa7731dd2e1401d2d7a2138058a2aae91b7b3cb6", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   private void _notifyNonTestCase(final boolean testAll)", "signatureAfterChange": "   private void _notifyNonTestCase(final boolean testAll, final boolean didCompileFail)", "diff": ["-  private void _notifyNonTestCase(final boolean testAll) { ", "-    Utilities.invokeLater(new Runnable() { public void run() { _notifier.nonTestCase(testAll); } });", "+  private void _notifyNonTestCase(final boolean testAll, final boolean didCompileFail) { ", "+    Utilities.invokeLater(new Runnable() { public void run() { _notifier.nonTestCase(testAll, didCompileFail); } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b52147c64dcdcc045c80e321cc6a7eb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "51e686ba41ead06ef0f1c4bec2b00eaf247dbe80", "commitAfterChange": "aa7731dd2e1401d2d7a2138058a2aae91b7b3cb6", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   private void _notifyCompileBeforeJUnit(final CompilerListener testAfterCompile)", "signatureAfterChange": "   private void _notifyCompileBeforeJUnit(final CompilerListener testAfterCompile, final List<OpenDefinitionsDocument> outOfSync)", "diff": ["-  private void _notifyCompileBeforeJUnit(final CompilerListener testAfterCompile) { ", "-    Utilities.invokeLater(new Runnable() { public void run() { _notifier.compileBeforeJUnit(testAfterCompile); } });", "+  private void _notifyCompileBeforeJUnit(final CompilerListener testAfterCompile, final List<OpenDefinitionsDocument> outOfSync) { ", "+    Utilities.invokeLater(new Runnable() { public void run() { _notifier.compileBeforeJUnit(testAfterCompile, outOfSync); } });"]}], "num": 4717}