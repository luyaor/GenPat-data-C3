{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6707714bcd1060140065518e8eaca1fc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "387d0f6ff4368e66aedf9d56e93c1201", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "d80369d9c3076ba83762fd67d26b865a3f105bab", "commitAfterChange": "bdd7aa6c0bcfa675b71488b11d63dfa5dd20cdb9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "signatureAfterChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "diff": ["-    List<String> compilerNames = new ArrayList<String>();", "-    ", "-    String dCompName = DrJava.getConfig().getSetting(OptionConstants.COMPILER_DEFAULT);", "+    ArrayList<String> compilerNames = new ArrayList<String>();", "-    if (_compilers.size() > 0) { ", "-      if(dCompName!=\"\" && compilerNames.contains(dCompName)) {", "+    ", "+    OptionConstants.COMPILER_PREFERENCE_CONTROL.setList(compilerNames); //populates the compiler list for preference panel", "+    ", "+    String dCompName = DrJava.getConfig().getSetting(OptionConstants.DEFAULT_COMPILER_PREFERENCE);", "+    ", "+    if (_compilers.size() > 0) {", "+      if(!dCompName.equals(OptionConstants.COMPILER_PREFERENCE_CONTROL.NO_PREFERENCE) && compilerNames.contains(dCompName))", "-      }", "-      else {", "+      else ", "-        DrJava.getConfig().setSetting(OptionConstants.COMPILER_DEFAULT, _active.getName());", "-      }", "-    else { ", "-      _active = NoCompilerAvailable.ONLY; ", "-    }", "+    else", "+      _active = NoCompilerAvailable.ONLY;", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b37692361e89415522cd79b90da76e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "cc814c34f96bfde67f8ae465727b510fa3ed34c9", "commitAfterChange": "8cb3141a044af3c7f18d018980f5a22b0b342ea8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "signatureAfterChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "diff": ["-    OptionConstants.COMPILER_PREFERENCE_CONTROL.setList(compilerNames); //populates the compiler list for preference panel", "+    OptionConstants.COMPILER_PREFERENCE_CONTROL.setList(compilerNames); // populates the compiler list for preference panel", "-      if (!dCompName.equals(OptionConstants.COMPILER_PREFERENCE_CONTROL.NO_PREFERENCE)) {", "-        // preference was set", "-        if (compilerNames.contains(dCompName)) {", "-          _active = _compilers.get(compilerNames.indexOf(dCompName));", "-        }", "-      }", "+      if (! dCompName.equals(OptionConstants.COMPILER_PREFERENCE_CONTROL.NO_PREFERENCE) &&", "+           compilerNames.contains(dCompName)) ", "+        _active = _compilers.get(compilerNames.indexOf(dCompName));", "-    ", "-    _LLSTM = new LanguageLevelStackTraceMapper(m);", "+    _LLSTM = new LanguageLevelStackTraceMapper(_model);"]}], "num": 574}