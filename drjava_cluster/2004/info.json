{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f059418ccd190200627f8c72ce537c6f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04aadb7a0e2d042b84b9131948b7a709", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public boolean isOnMatch()", "signatureAfterChange": "   public boolean isOnMatch()", "diff": ["-    int len, off;", "+    int wordLen, off;", "-    len = findWord.length();", "-    if (!_searchBackwards) off = _current.getOffset() - len;", "-    else off = _current.getOffset();", "+    wordLen = findWord.length();", "+    if (_isForward) off = getCurrentOffset() - wordLen;", "+    else off = getCurrentOffset();", "-    _doc.acquireReadLock();", "+    _doc.readLock();", "-      if (off + len > _doc.getLength()) return false;", "-      matchSpace = _doc.getText(off, len);", "+      if (off + wordLen > _doc.getLength()) return false;", "+      matchSpace = _doc.getText(off, wordLen);", "-    finally { _doc.releaseReadLock(); }", "+    finally { _doc.readUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "909440db5b4ada71e2ae156e30ad7496", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/AFindReplaceMachineState.java", "commitBeforeChange": "f26f93ad5e4b158c960a6cefd64cf99f7137ecbc", "commitAfterChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public boolean isOnMatch()", "signatureAfterChange": "   public boolean isOnMatch()", "diff": ["-    if (!_searchBackwards) {", "-      off = _current.getOffset() - len;", "-    }", "-    else {", "-      off = _current.getOffset();", "-    }", "+    if (!_searchBackwards) off = _current.getOffset() - len;", "+    else off = _current.getOffset();", "-    if (off < 0) {", "-      return false;", "-    }", "-    else if (off + len > _doc.getLength()) {", "-      return false;", "-    }", "+    if (off < 0) return false;", "+    if (off + len > _doc.getLength()) return false;", "-    catch (BadLocationException e) {", "-      throw new UnexpectedException(e);", "-    }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac96bcd2c5c47e0aa4329daff2bf3ec3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "973271a114877f62b3cb122ffc9ab5f28c91b43a", "commitAfterChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private int _moveRight(int count, int currentOffset)", "signatureAfterChange": "     private int _moveRight(int count, int currentOffset)", "diff": ["-      while (count >= current().getSize() - currentOffset) {", "-        count = count - current().getSize() + currentOffset;", "+      ", "+      // Initialize loop variables", "+      int size = current().getSize();", "+      count = count + currentOffset;", "+        ", "+      // Process tokens moving forward", "+      while (count >= size) { // advance one token", "+        count = count - size;", "-        currentOffset = 0;", "+        size = current().getSize();", "-      return count + currentOffset; //returns the offset", "+      return count; // returns the offset in the current token"]}], "num": 2004}