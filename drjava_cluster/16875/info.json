{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1427a401fe558a0382833258c2955dcf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "607a5af133288db38f5a4753dccb581c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "af1eb2bf0d9c9c21950a26d58b7d3250b6cf7431", "commitAfterChange": "ba7bb9791eb66188927c0d0910ec99f369dab883", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": "    private void _junit()", "signatureAfterChange": "    private void _junit()", "diff": ["-    try {", "-      _model.getActiveDocument().startJUnit();", "-    }", "-    catch (FileMovedException fme) {", "-      _showFileMovedError(fme);", "-    }", "-    catch (IOException ioe) {", "-      _showIOError(ioe);", "-    }", "-    catch (ClassNotFoundException cnfe) {", "-      _showClassNotFoundError(cnfe);", "-    }", "-    catch (NoClassDefFoundError ncde) {", "-      _showNoClassDefError(ncde);", "-    }", "-    catch (ExitingNotAllowedException enae) {", "-      JOptionPane.showMessageDialog(this,", "-                                    \"An exception occurred while running JUnit, which could\\n\" +", "-                                    \"not be caught be DrJava.  Details about the exception should\\n\" +", "-                                    \"have been printed to your console.\\n\\n\",", "-                                    \"Error Running JUnit\",", "-                                    JOptionPane.ERROR_MESSAGE);", "-    }", "+    final SwingWorker worker = new SwingWorker() {", "+      public Object construct() {", "+        try {", "+          _model.getActiveDocument().startJUnit();", "+        }", "+        catch (FileMovedException fme) {", "+          _showFileMovedError(fme);", "+        }", "+        catch (IOException ioe) {", "+          _showIOError(ioe);", "+        }", "+        catch (ClassNotFoundException cnfe) {", "+          _showClassNotFoundError(cnfe);", "+        }", "+        catch (NoClassDefFoundError ncde) {", "+          _showNoClassDefError(ncde);", "+        }", "+        catch (ExitingNotAllowedException enae) {", "+          JOptionPane.showMessageDialog(MainFrame.this,", "+                                        \"An exception occurred while running JUnit, which could\\n\" +", "+                                        \"not be caught be DrJava.  Details about the exception should\\n\" +", "+                                        \"have been printed to your console.\\n\\n\",", "+                                        \"Error Running JUnit\",", "+                                        JOptionPane.ERROR_MESSAGE);", "+        }", "+        return null;", "+      }", "+    };", "+    worker.start();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f216325a56b327e1d07a3f938c74eb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6310666c1b25e3b678fa3161d36dc614550bad4a", "commitAfterChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "methodNumberBeforeChange": 661, "methodNumberAfterChange": 661, "signatureBeforeChange": "   private void _executeExternalProcess()", "signatureAfterChange": "   private void _executeExternalProcess()", "diff": ["-    updateStatusField(\"Executing external process...\");", "-    // LOG.log(\"_executeExternalProcess\");", "-    String cmdline =  JOptionPane.showInputDialog(this, \"Command line:\");", "-    if (cmdline==null) { return; }", "-    // LOG.log(\"cmdline = \"+cmdline);", "-    StreamTokenizer tok = new StreamTokenizer(new StringReader(cmdline));", "-    tok.resetSyntax();", "-    tok.wordChars(0,255);", "-    tok.whitespaceChars(0,32);", "-    tok.quoteChar('\\'');", "-    tok.quoteChar('\"');", "-    tok.slashSlashComments(false);", "-    tok.slashStarComments(false);", "-    ArrayList<String> cmds = new ArrayList<String>();", "-    ", "-    int next;", "-    try {", "-      while(((next=tok.nextToken())!=StreamTokenizer.TT_EOF) &&", "-            (next!=StreamTokenizer.TT_EOL)) {", "-        // LOG.log(\"token=\"+next);", "-        switch(next) {", "-          case StreamTokenizer.TT_WORD:", "-            // LOG.log(\"\\tsval=\"+tok.sval);", "-            cmds.add(tok.sval);", "-            break;", "-          case StreamTokenizer.TT_NUMBER:", "-            // LOG.log(\"\\tnval=\"+tok.nval);", "-            cmds.add(\"\"+tok.nval);", "-            break;", "-          default:", "-            // LOG.log(\"\\tsomething weird\");", "-            JOptionPane.showMessageDialog(this,", "-                                          \"Unexpected part while separating command line into individual parts.\",", "-                                          \"Invalid Command Line\",", "-                                          JOptionPane.ERROR_MESSAGE);", "-            return;", "-        }", "-      }", "+    _executeExternalDialog.setVisible(true);", "+  }", "-    catch(IOException ioe) {", "-      JOptionPane.showMessageDialog(this,", "-                                    \"Could not separate command line into individual parts.\",", "-                                    \"Invalid Command Line\",", "-                                    JOptionPane.ERROR_MESSAGE);", "-      return;", "-    }", "-    ", "-    ProcessCreator pc = new ProcessCreator(cmds.toArray(new String[cmds.size()]));", "-    String name = \"External\";", "-    if (cmds.size()>0) { name += \": \"+cmds.get(0); }", "-    final ExternalProcessPanel panel = new ExternalProcessPanel(this, name, pc);", "-    _tabs.addLast(panel);", "-    panel.getMainPanel().addFocusListener(new FocusAdapter() {", "-      public void focusGained(FocusEvent e) { _lastFocusOwner = panel; }", "-    });", "-    panel.setVisible(true);", "-    showTab(panel);", "-    _tabbedPane.setSelectedComponent(panel);", "-    // Use SwingUtilties.invokeLater to ensure that focus is set AFTER the findResultsPanel has been selected", "-    EventQueue.invokeLater(new Runnable() { public void run() { panel.requestFocusInWindow(); } });"]}], "num": 16875}