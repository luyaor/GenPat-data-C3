{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed5fe3d664b9a70d8a801afaac5bc519", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50a8cdc14ed092210c88ce588417ecf9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testConstructOneDocWithoutLineNums()", "signatureAfterChange": "   public void testConstructOneDocWithoutLineNums()", "diff": ["-    errors = new CompilerError[] { ", "-      new CompilerError(files[0], \"Test error with File\", false),", "-      new CompilerError(files[0], \"Test warning with File\", true),", "-      new CompilerError(files[0], \"Test error with File\", false) ", "+    errors = new DJError[] { ", "+      new DJError(files[0], \"Test error with File\", false),", "+      new DJError(files[0], \"Test warning with File\", true),", "+      new DJError(files[0], \"Test error with File\", false) ", "-    CompilerError[] copy = new CompilerError[errors.length];", "+    DJError[] copy = new DJError[errors.length];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c15b98956c2dbd1e1dc58a12d3fe37c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testConstructDoclessErrors()", "signatureAfterChange": "   public void testConstructDoclessErrors()", "diff": ["-    errors = new CompilerError[] { ", "-      new CompilerError(\"Test error without File\", false),", "-      new CompilerError(\"Test warning without File\", true),", "-      new CompilerError(\"Test error without File\", false) ", "+    errors = new DJError[] { ", "+      new DJError(\"Test error without File\", false),", "+      new DJError(\"Test warning without File\", true),", "+      new DJError(\"Test error without File\", false) ", "-    CompilerError[] copy = new CompilerError[errors.length];", "+    DJError[] copy = new DJError[errors.length];"]}], "num": 19779}