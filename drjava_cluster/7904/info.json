{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "569bb8922c38002ac4273adb5226917e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e1694e9c3e02d2f13aea251a8d0483b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public synchronized void testBreakpoints()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testBreakpoints()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-    debugListener.assertDebuggerStartedCount(1);", "-    debugListener.assertDebuggerShutdownCount(0);", "-    assertTrue(\"Debug Manager should be ready\", _debugger.isReady());", "-      _asynchResume();", "+      _asyncResume();", "-      if( printMessages ) System.err.println(\">>>>>>>>>> Resuming <<<<<<<<<<\");", "-      _asynchResume();", "+      if( printMessages ) System.err.println(\"-------- Resuming --------\");", "+      _asyncResume();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb393af218be47449198836891d89829", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public synchronized void testMultiThreadedBreakpointsAndStep()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testMultiThreadedBreakpointsAndStep()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-     ", "+    ", "- ", "+    ", "-      _waitForNotifies(1);", "+      _waitForNotifies(1);  // startup", "-    debugListener.assertDebuggerStartedCount(1);", "-    debugListener.assertDebuggerShutdownCount(0);", "-    assertTrue(\"Debug Manager should be ready\", _debugger.isReady());", "-        ", "+    ", "+    // Set breakpoints", "-        ", "-     // Run the main() method, hitting breakpoints", "+    ", "+    // Run the main() method, hitting breakpoints", "-      _waitForNotifies(6);  // suspended, updated, breakpointReached", "+      _waitForNotifies(6);  // (suspended, updated, breakpointReached) x 2", "-     // Resumes the thread finishing it and hitting the next break point", "+    // Resumes one thread, finishing it and switching to the next break point", "-      _asynchResume();", "-      _waitForNotifies(3);  // suspended, updated, currThreadDied", "+      _asyncResume();", "+      _waitForNotifies(3);  // currThreadDied, suspended, updated", "-        ", "+    ", "-    assertTrue(\"testMultiThreadedBreakPoint thread references were equal \", !thread.getName().equals(thread2.getName()));", "-  ", "+    assertTrue(\"testMultiThreadedBreakPoint thread references should not be equal\",", "+               !thread.getName().equals(thread2.getName()));", "+    ", "-     _asynchStep(Debugger.STEP_INTO);", "+      _asyncStep(Debugger.STEP_INTO);", "-    assertTrue(\"testMultiThreadedBreakPoint thread references were not equal \", thread2.getName().equals(thread3.getName()));", "-     _debugger.addListener(debugListener);", "+    assertEquals(\"testMultiThreadedBreakPoint thread references should be equal\",", "+                 thread2.getName(), thread3.getName());", "+    ", "-     InterpretListener interpretListener = new InterpretListener();", "-     _model.addListener(interpretListener);", "-     synchronized(_notifierLock) {", "-       _asynchResume();", "-       _waitForNotifies(3);  // interactionEnded, currThreadDied, interpreterChanged", "-       _notifierLock.wait();", "-     }", "-     interpretListener.assertInteractionEndCount(1);", "-     _model.removeListener(interpretListener);", "-     ", "-    // Close doc and make sure breakpoints are removed", "+    _debugger.addListener(debugListener);", "+    InterpretListener interpretListener = new InterpretListener();", "+    _model.addListener(interpretListener);", "+    synchronized(_notifierLock) {", "+      _asyncResume();", "+      _waitForNotifies(3);  // interactionEnded, currThreadDied, interpreterChanged", "+      _notifierLock.wait();", "+    }", "+    interpretListener.assertInteractionEndCount(1);", "+    _model.removeListener(interpretListener);", "+    ", "+    // Close doc", "-", "+    ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c57ebe588cd5060e0cbfbae11886ff83", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "b81ae5f4bf2be2738e0e30bb4843dd8f256869d7", "commitAfterChange": "24e790b85d3a1a29de15955ca1ba9200a6865f83", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testSwitchActiveInterpreter() throws InterruptedException", "signatureAfterChange": "   public void testSwitchActiveInterpreter() throws InterruptedException", "diff": ["-    synchronized(_jvm) {", "-      _jvm.interpret(\"x+\");", "-      _jvm.wait();", "-      assertTrue(\"syntax error was reported\",", "-                 ! _jvm.syntaxErrorMsgBuf.equals(\"\") );", "-    }", "+    //  (temporarily disabled until bug 750605 fixed)", "+//     synchronized(_jvm) {", "+//       _jvm.interpret(\"x+\");", "+//       _jvm.wait();", "+//       assertTrue(\"syntax error was reported\",", "+//                  ! _jvm.syntaxErrorMsgBuf.equals(\"\") );", "+//     }"]}], "num": 7904}