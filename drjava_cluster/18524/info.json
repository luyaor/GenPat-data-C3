{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "419e321616ba10c16dbb36742ddfc949", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bfb15b9be286082547690406d8eb02a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentTest.java", "commitBeforeChange": "2c34025e391dacdd1583e970162f80f851d08a1d", "commitAfterChange": "cfcaff0f9d58c64a1efe5903c22285891a763f19", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testBasicDocOps() throws EditDocumentException", "signatureAfterChange": "   public void testBasicDocOps() throws EditDocumentException", "diff": ["-   */", "+  /** Tests basic interactions with a Swing Document. */", "-    assertEquals(\"first doc contents\", \"one\",", "-                 _doc.getDocText(0, _doc.getLength()));", "+    assertEquals(\"first doc contents\", \"one\", _doc.getText());", "-    assertEquals(\"second doc contents\", \"one three\",", "-                 _doc.getDocText(0, _doc.getLength()));", "+    assertEquals(\"second doc contents\", \"one three\", _doc.getText());", "-    _doc.append(\" four\", (AttributeSet) null);", "+    _doc.append(\" four\", (String) null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57643e61c8479d6582f946dc75835e07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/HistoryTest.java", "commitBeforeChange": "ae91856b53b869dea43c60b3424279a87db75fb5", "commitAfterChange": "a357e82c74cb27dc4ce8ef007203ad2bd5dfa25b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testReverseSearchTwice()", "signatureAfterChange": "   public void testReverseSearchTwice()", "diff": ["-   */", "+  /** Tests reverse searching twice. */", "-    assertEquals(\"Did not reset cursor correctly.\",", "-                 entry2,", "-                 _history.getCurrent());", "+    ", "+    Utilities.clearEventQueue();", "+    assertEquals(\"Did not reset cursor correctly.\", entry2, _history.getCurrent());", "-    assertEquals(\"Did not reset cursor correctly.\",", "-                 entry1,", "-                 _history.getCurrent());", "+    ", "+    Utilities.clearEventQueue();", "+    assertEquals(\"Did not reset cursor correctly.\", entry1, _history.getCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2f220a2abc1d763b881da8858794038", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/OrderedHashSetTest.java", "commitBeforeChange": "f3c66273d6e4a25b2baea2d938e0f8b9598313de", "commitAfterChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testSearch()", "signatureAfterChange": "      public void testSearch()", "diff": ["+    try {", "+      iTod.get(0);", "+      fail(\"Queue should be empty forcing an Exception to be thrown\");", "+    }", "+    catch(IndexOutOfBoundsException e) { /* silently succeed */ }        ", "+    assertEquals(\"Should find key using index\", int1, iTod.get(0));", "+    ", "+    assertEquals(\"get(1) test\", int2, iTod.get(1));  // we should rename int1, int2, int3 as int0, int1, int2", "+    assertEquals(\"get(2) test\", int3, iTod.get(2));", "-               ", "+           ", "-    iTod.clear();", "+    iTod.remove(0);", "+    assertTrue(\"iTod should be empty\", iTod.isEmpty());", "+    "]}], "num": 18524}