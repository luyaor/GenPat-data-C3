{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba17801b58a6891a323433c9ebf68fbe", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27134017130b43b1367948b58f233173", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "b069e2bfa2f8651c897cd701a15acb237a3766d7", "commitAfterChange": "bf2319a0fd4ff0da05d171cf995d395154267897", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public static String memSizeToString(long l)", "signatureAfterChange": "   public static String memSizeToString(long l)", "diff": ["-    StringWriter sw = new StringWriter();", "-    PrintWriter pw = new PrintWriter(sw);", "+    StringBuilder sb = new StringBuilder();", "-        pw.format(\"%d %s\", whole, sizes[i]);", "+        sb.append(whole);", "+        sb.append(' ');", "+        sb.append(sizes[i]);", "-        pw.format(\"%d %ss\", whole, sizes[i]);", "+        sb.append(whole);", "+        sb.append(' ');", "+        sb.append(sizes[i]);", "+        sb.append('s');", "-      pw.format(\"%.2f %ss\", d, sizes[i]);", "+      // two decimal digits", "+      DecimalFormat df = new DecimalFormat(\"#.00\");", "+      sb.append(df.format(d));", "+      sb.append(' ');", "+      sb.append(sizes[i]);", "+      sb.append('s');", "-    return sw.toString();", "+    return sb.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fb571169b8b47a9b6e9a060ee77c52d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "b86859aaefb86c79b1343c533fc1a98460d5733a", "commitAfterChange": "c95281d4127bdbd843c86748b646c5941d6c6e28", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r   public FindResultsPanel(MainFrame frame, RegionManager<MovingDocumentRegion> regionManager, MovingDocumentRegion region, String title, \r                           String searchString, boolean searchAll, boolean searchSelectionOnly, boolean matchCase, boolean wholeWord, \r                           boolean noComments, boolean noTestCases, WeakReference<OpenDefinitionsDocument> doc, \r                           FindReplacePanel findReplace)", "signatureAfterChange": "\r   public FindResultsPanel(MainFrame frame, RegionManager<MovingDocumentRegion> regionManager, MovingDocumentRegion region, String title, \r                           String searchString, boolean searchAll, boolean searchSelectionOnly, boolean matchCase, boolean wholeWord, \r                           boolean noComments, boolean noTestCases, WeakReference<OpenDefinitionsDocument> doc, \r                           FindReplacePanel findReplace)", "diff": ["+    // set \"Find Again\" button tooltip\r", "+    StringBuilder sb = new StringBuilder();\r", "+    sb.append(\"<html>Find '\").append(title);\r", "+    if (!title.equals(_searchString)) sb.append(\"...\");\r", "+    sb.append(\"'\");\r", "+    if (_searchAll) sb.append(\" in all files\");\r", "+    else if (_searchSelectionOnly) sb.append(\" only in original selection.\");\r", "+    sb.append(\".\");\r", "+    if (_matchCase) sb.append(\"<br>Case must match.\");\r", "+    if (_wholeWord) sb.append(\"<br>Whole words only.\");\r", "+    if (_noComments) sb.append(\"<br>No comments or strings.\");\r", "+    if (_noTestCases) sb.append(\"<br>No test cases.\");\r", "+    sb.append(\"</html>\");\r", "+    _findAgainButton.setToolTipText(sb.toString());\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b211faca847740808047befcb8763dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaErrorWindow.java", "commitBeforeChange": "7933cc364884763a44a085994870596faa04b316", "commitAfterChange": "b978cac1d85997e83464382e4a499c19d736223c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private void updateErrorInfo()", "signatureAfterChange": "   private void updateErrorInfo()", "diff": ["-      StringBuilder b = new StringBuilder();", "+      final StringBuilder b = new StringBuilder();", "-        for(StackTraceElement ste: _error.getStackTrace()) {", "+        for (StackTraceElement ste: _error.getStackTrace()) {", "-      b = new StringBuilder();", "-      b.append(HEADER_HTML);", "-      b.append(_errorCount);", "-      b.append(\" error\");", "-      b.append(((_errorCount>1)?\"s\":\"\"));", "-      b.append(\" occured!<br>\");", "-      b.append(ERRORS_FOOTER_HTML);", "-      _errorInfo = new JEditorPane(\"text/html\", b.toString());", "+      final StringBuilder b2 = new StringBuilder();", "+      b2.append(HEADER_HTML);", "+      b2.append(_errorCount);", "+      b2.append(\" error\");", "+      b2.append(((_errorCount>1)?\"s\":\"\"));", "+      b2.append(\" occured!<br>\");", "+      b2.append(ERRORS_FOOTER_HTML);", "+      _errorInfo = new JEditorPane(\"text/html\", b2.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d422545b981db8c1f484b0fe000847", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaSurveyPopup.java", "commitBeforeChange": "0227dadcd7f6e95f59e8356ce934b30f2f99834b", "commitAfterChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "    protected void yesAction()", "signatureAfterChange": "    protected void yesAction()", "diff": ["-    final String DRJAVA_SURVEY_PAGE = \"http://drjava.concutest.org/cgi-bin/os-and-java-info.pl\";", "+    final String DRJAVA_SURVEY_PAGE = \"http://www.drjava.org/submit-usage.php?\";", "-    sb.append('?');", "-    sb.append(\"date=\");", "-    SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMdd\");", "-    sdf.setTimeZone(TimeZone.getTimeZone(\"GMT\"));", "-    sb.append(sdf.format(new Date()));", "+//    sb.append(\"date=\");", "+//    SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMdd\");", "+//    sdf.setTimeZone(TimeZone.getTimeZone(\"GMT\"));", "+//    sb.append(sdf.format(new Date()));", "+    boolean first = true;", "-      sb.append('&');", "+      if (first) { first = false; } else { sb.append('&'); }"]}], "num": 16411}