{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "542d0d94ea0a768fbb8eab8618f8c339", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3729c88d0ccfcaaf735a9e3b8cb726b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "   public void debuggerToggle()", "signatureAfterChange": "   public void debuggerToggle()", "diff": ["-        try {", "-          debugger.startup();", "-          _updateDebugStatus();", "-        }", "-        catch (DebugException de) {", "-          _showError(de, \"Debugger Error\",", "-                     \"Could not start the debugger.\");", "-        }", "+        debugger.startup();", "+        _updateDebugStatus();", "+    }", "+    catch (DebugException de) {", "+      _showError(de, \"Debugger Error\",", "+                 \"Could not start the debugger.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "febe11e6abf5fe99db6dc7a0f553ec48", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "dba5d2158724820f410d4efff37289045b3aca4c", "commitAfterChange": "6db2338d4c58e83974c8e6232ba8e48286d65b5e", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public static void main(String... args)", "signatureAfterChange": "     public static void main(String... args)", "diff": ["+          IOUtil.replaceSystemOut(VoidOutputStream.INSTANCE);", "-            IOUtil.replaceSystemOut(VoidOutputStream.INSTANCE);", "+            ObjectInputStream objIn = new ObjectInputStream(System.in);", "-              ObjectInputStream objIn = new ObjectInputStream(System.in);", "-              try {", "-                Thunk<?> task = (Thunk<?>) objIn.readObject();", "-                try { result = task.value(); }", "-                catch (Throwable e) { exception = new InvocationTargetException(e); }", "-              }", "-              finally { objIn.close(); }", "+              Thunk<?> task = (Thunk<?>) objIn.readObject();", "+              try { result = task.value(); }", "+              catch (Throwable e) { exception = new InvocationTargetException(e); }", "-            catch (Exception e) { exception = e; } // problem with objIn", "+            finally { objIn.close(); }", "+          catch (Exception e) { exception = e; } // problem with objIn"]}], "num": 8489}