{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89584656cec83809ce259549564a19b2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8908c7d6f4a33d45344bf303dafe4d91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected String interpret(final String input) throws EditDocumentException", "signatureAfterChange": "   protected String interpret(String input) throws EditDocumentException", "diff": ["-  protected String interpret(final String input) throws EditDocumentException {", "+  protected String interpret(String input) throws EditDocumentException {", "-    final InteractionsDocument interactionsDoc = _model.getInteractionsDocument();", "+    InteractionsDocument interactionsDoc = _model.getInteractionsDocument();", "+    Utilities.clearEventQueue();", "+    ", "+    interactionsDoc.setInProgress(false);  // for some reason, the inProgress state can be true when interpret is invoked", "+    interactionsDoc.append(input, InteractionsDocument.DEFAULT_STYLE);", "+    ", "+    Utilities.clearEventQueue();", "-    InteractionListener listener = new InteractionListener();", "-    _model.addListener(listener);", "-    ", "-    // Set up the interaction", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() {", "-        interactionsDoc.setInProgress(false);  // for some reason, the inProgress state can be true when interpret is invoked", "-        interactionsDoc.append(input, InteractionsDocument.DEFAULT_STYLE);", "-      }", "-    });", "-    ", "-    // Record information about pending interaction", "-    ", "+    // skip the right length for the newline", "-//    Utilities.clearEventQueue();   ", "-    listener.logInteractionStart();", "-    ", "-    // Execute the interaction", "-    Utilities.invokeLater(new Runnable() { public void run() { _model.interpretCurrentInteraction(); } });", "-    ", "-    try { listener.waitInteractionDone(); }", "-    catch (InterruptedException ie) { throw new UnexpectedException(ie); }", "+    InteractionListener listener = new InteractionListener();", "+", "+    _model.addListener(listener);", "+    listener.logInteractionStart();", "+    try {", "+      _model.interpretCurrentInteraction();", "+      listener.waitInteractionDone();", "+    }", "+    catch (InterruptedException ie) { throw new UnexpectedException(ie); }", "-//    interactionsDoc.acquireReadLock();", "-//    try {", "-    final int resultsEndLocation = interactionsDoc.getLength() - newLineLen - interactionsDoc.getPrompt().length();", "-    ", "-    final int resultsLen = resultsEndLocation - resultsStartLocation;", "-    _log.log(\"resultsStartLoc = \" + resultsStartLocation + \" resultsEndLocation = \" + resultsEndLocation);", "-    _log.log(\"Contents = '\" + interactionsDoc.getDocText(0, resultsEndLocation+1) + \"'\");", "-    if (resultsLen <= 0) return \"\";", "-    return interactionsDoc.getDocText(resultsStartLocation, resultsLen);", "-//    }", "-//    finally { interactionsDoc.releaseReadLock(); }", "+    interactionsDoc.acquireReadLock();", "+    try {", "+      final int resultsEndLocation = interactionsDoc.getLength() - newLineLen - interactionsDoc.getPrompt().length();", "+      ", "+      final int resultsLen = resultsEndLocation - resultsStartLocation;", "+      _log.log(\"resultsStartLoc = \" + resultsStartLocation + \" resultsEndLocation = \" + resultsEndLocation);", "+      _log.log(\"Contents = '\" + interactionsDoc.getDocText(0, resultsEndLocation+1) + \"'\");", "+      if (resultsLen <= 0) return \"\";", "+      return interactionsDoc.getDocText(resultsStartLocation, resultsLen);", "+    }", "+    finally { interactionsDoc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89716ddd48a868c47af1f0184eec6b1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testInterpretCurrentInteraction() throws EditDocumentException", "signatureAfterChange": "   public void testInterpretCurrentInteraction() throws EditDocumentException", "diff": ["-    final TestInteractionsModel model = (TestInteractionsModel) _model;", "-    final String code = \"int x = 3;\";", "-    final InteractionsDocument doc = model.getDocument();", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() { ", "-        model.interpretCurrentInteraction();", "-        model.replReturnedVoid(); // pretend call completed", "-      } ", "-    });", "+    TestInteractionsModel model = (TestInteractionsModel) _model;", "+    String code = \"int x = 3;\";", "+    InteractionsDocument doc = model.getDocument();", "+    model.interpretCurrentInteraction();  // empty string is already sitting at prompt in the interactions pane", "+    Utilities.clearEventQueue();", "+    // pretend the call completed", "+    model.replReturnedVoid();", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() { ", "-        doc.append(code, InteractionsDocument.DEFAULT_STYLE); // spawns an event queue task", "-        model.interpretCurrentInteraction();", "-        model.replReturnedVoid(); ", "-      } ", "-    });", "+    doc.append(code, InteractionsDocument.DEFAULT_STYLE);  // spawns an event queue task", "+    Utilities.clearEventQueue();  // required because subsequent interpretCurrentInteraction is not run in event thread.", "+    Utilities.clearEventQueue();", "+    model.interpretCurrentInteraction();", "+    Utilities.clearEventQueue();", "+    // pretend the call completed", "+    model.replReturnedVoid();"]}], "num": 11692}