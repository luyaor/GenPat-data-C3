{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf08d8b57f419ee3f2a7c6ff54dd466b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3724d5ee1b53445c0389ce4d23e9a88e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "1f1e1c194ec79b5577db174af86a812206a9ebf6", "commitAfterChange": "8470bac42027a288eff50252d965c363d15d41dc", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testResultOfNonPublicTestCase() throws Exception", "signatureAfterChange": "   public void testResultOfNonPublicTestCase() throws Exception", "diff": ["-    final TestResult testResults = doc.startJUnit();", "+    TestResult testResults;", "+    synchronized(listener) {", "+      testResults = doc.startJUnit();", "+      listener.wait();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58b603b4cbdc8486b6f8492a96bee8e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   private void notifyRegistrationListeners(final OpenDefinitionsDocument odd, final DocManager man)", "signatureAfterChange": "   private void notifyRegistrationListeners(final OpenDefinitionsDocument odd, final DocManager man)", "diff": ["+  // Only used in DocumentCacheTest; must be synchronous for test to succeed.", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() { for (RegistrationListener list : _regListeners) { list.registered(odd, man); } }", "-    });", "+    synchronized(_regListeners) {", "+      if (_regListeners.isEmpty()) return; ", "+      Utilities.invokeAndWait(new Runnable() {", "+        public void run() { for (RegistrationListener list : _regListeners) { list.registered(odd, man); } }", "+      });", "+    }"]}], "num": 9415}