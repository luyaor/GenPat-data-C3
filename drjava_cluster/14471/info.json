{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6270fd1c263b851a62ce168374434f4f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6976f41ab7f07a8e5441c68592973763", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "68fac9302e6b2358c3b67dbd6346f2e01189b049", "commitAfterChange": "844c5b5a76f593d88002386f7e1c5749ae206027", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public synchronized Pair<Boolean, Boolean> setToDefaultInterpreter()", "signatureAfterChange": "   public Pair<Boolean, Boolean> setToDefaultInterpreter()", "diff": ["-  public synchronized Pair<Boolean, Boolean> setToDefaultInterpreter() {", "-    boolean changed = (_defaultInterpreter != _activeInterpreter.second());", "-    _activeInterpreter = Pair.make(\"\", _defaultInterpreter);", "-    return Pair.make(changed, _busyInterpreters.contains(_defaultInterpreter));", "+  public Pair<Boolean, Boolean> setToDefaultInterpreter() {", "+    synchronized(_stateLock) {", "+      boolean changed = (_defaultInterpreter != _activeInterpreter.second());", "+      _activeInterpreter = Pair.make(\"\", _defaultInterpreter);", "+      return Pair.make(changed, isBusyInterpreter(_defaultInterpreter));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "768d199798238e8bbca798eea94b03b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "68fac9302e6b2358c3b67dbd6346f2e01189b049", "commitAfterChange": "844c5b5a76f593d88002386f7e1c5749ae206027", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public synchronized Pair<Boolean, Boolean> setActiveInterpreter(String name)", "signatureAfterChange": "   public Pair<Boolean, Boolean> setActiveInterpreter(String name)", "diff": ["-  public synchronized Pair<Boolean, Boolean> setActiveInterpreter(String name) {", "-    Interpreter i = _interpreters.get(name);", "-    if (i == null) { throw new IllegalArgumentException(\"Interpreter '\" + name + \"' does not exist.\"); }", "-    boolean changed = (i != _activeInterpreter.second());", "-    _activeInterpreter = Pair.make(name, i);", "-    return Pair.make(changed, _busyInterpreters.contains(i));", "+  public Pair<Boolean, Boolean> setActiveInterpreter(String name) {", "+    synchronized(_stateLock) {", "+      Interpreter i = getInterpreter(name);", "+      if (i == null) { throw new IllegalArgumentException(\"Interpreter '\" + name + \"' does not exist.\"); }", "+      boolean changed = (i != _activeInterpreter.second());", "+      _activeInterpreter = Pair.make(name, i);", "+      return Pair.make(changed, isBusyInterpreter(i));", "+    }"]}], "num": 14471}