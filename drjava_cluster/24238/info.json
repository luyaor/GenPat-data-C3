{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80751e6b2f0397392d7d704b888364e9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b45ef329921e4f39af717e85dab8657", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 76, "signatureBeforeChange": "     private void visitExpressionContainer(ExpressionContainer node)", "signatureAfterChange": "   private void visitExpressionContainer(ExpressionContainer node)", "diff": ["+   */", "+  private void visitExpressionContainer(ExpressionContainer node) {", "+    Expression exp = node.getExpression();", "+    Node o = exp.acceptVisitor(this);", "+    if (o != null) {", "+      rejectReferenceType(o,exp);", "+      node.setExpression((Expression)o);", "+    }", "+  }", "-     */", "-    private void visitExpressionContainer(ExpressionContainer node) {", "-\tExpression exp = node.getExpression();", "-\tObject o = exp.acceptVisitor(this);", "-\tif (o != null) {", "-\t    if (o instanceof ReferenceType) {", "-\t\tthrow new ExecutionError(\"malformed.expression\", exp);", "-\t    }", "-\t    node.setExpression((Expression)o);", "-\t}", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80a9ed6c854b78f880f6bb78d05b875d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "98f0c27d2704f53c27c12dba8736793eeeac44cf", "commitAfterChange": "807926b925dfb352a7bbfb2667234847dc65f45d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setChanging(boolean b)", "signatureAfterChange": "   public void startChanging()", "diff": ["+    * this state should be set to postpone some actions until the changes are finished. */", "+  public void startChanging() {", "+    _changeState.switchStateTo(CHANGING_STATE);", "+  }", "-    * @param b new state of the \"is changing\" flag */", "-  public void setChanging(boolean b) {", "-    _isChanging = b;", "-    if (!b) {", "-      updateButtons();", "-      if (_lastAdded!=null) {", "-        TreePath pathToNewRegion = new TreePath(_lastAdded.getPath());", "-        _regTree.scrollPathToVisible(pathToNewRegion);", "-      }", "-      expandAll();", "-      _regTree.revalidate();", "-    }"]}], "num": 24238}