{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80f91ac74968e324bf19ccb97f5cf570", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6db827feeae1ecc1b751c1703d92fc4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 240, "methodNumberAfterChange": 59, "signatureBeforeChange": "     public T value(Quad<?, ?, ? extends T, ?> arg)", "signatureAfterChange": "   public static <T> FiniteSequenceIterable<T> finiteSequence(T initial, Lambda<? super T, ? extends T> successor,                                                               int size)", "diff": ["+  /** Create a finite sequence of the given size defined by an initial value and a successor function. */", "+  public static <T> FiniteSequenceIterable<T> finiteSequence(T initial, Lambda<? super T, ? extends T> successor, ", "+                                                             int size) {", "+    return new FiniteSequenceIterable<T>(initial, successor, size);", "+  }", "-    private QuadThird() {}", "-    public T value(Quad<?, ?, ? extends T, ?> arg) { return arg.third(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba028de02ac128d32a7c52732ea774f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 243, "methodNumberAfterChange": 58, "signatureBeforeChange": "     public T value(Quad<?, ?, ?, ? extends T> arg)", "signatureAfterChange": "   public static <T> SequenceIterable<T> infiniteSequence(T initial, Lambda<? super T, ? extends T> successor)", "diff": ["+  /** Create an infinite sequence defined by an initial value and a successor function. */", "+  public static <T> SequenceIterable<T> infiniteSequence(T initial, Lambda<? super T, ? extends T> successor) {", "+    return new SequenceIterable<T>(initial, successor);", "+  }", "-    private QuadFourth() {}", "-    public T value(Quad<?, ?, ?, ? extends T> arg) { return arg.fourth(); }"]}], "num": 29173}