{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b18536a91e9d657c1a8df678fde3d3d2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00b5d7728d29a8bddf09abfd1f3f50a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/RMIInteractionsModel.java", "commitBeforeChange": "01c62517d281ffc6534fc475329bd814c0e2c112", "commitAfterChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void setPrivateAccessible(boolean allow)", "signatureAfterChange": "   public void setEnforcePrivateAccess(boolean enforce)", "diff": ["-  /** Sets whether or not the interpreter should allow access to private members. */", "-  public void setPrivateAccessible(boolean allow) { _jvm.setPrivateAccessible(allow); }", "+  /** Sets whether or not the interpreter should enforce access to private members. */", "+  public void setEnforcePrivateAccess(boolean enforce) { _jvm.setEnforcePrivateAccess(enforce); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bbbc9c4125608af694544973f86823a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "01c62517d281ffc6534fc475329bd814c0e2c112", "commitAfterChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public boolean setPrivateAccessible(boolean allow)", "signatureAfterChange": "   public boolean setEnforcePrivateAccess(boolean enforce)", "diff": ["-  public boolean setPrivateAccessible(boolean allow) {", "-    try { remote.setPrivateAccessible(allow); return true; }", "+   */", "+  public boolean setEnforcePrivateAccess(boolean enforce) {", "+    InterpreterJVMRemoteI remote = _state.value().interpreter(false);", "+    if (remote == null) { return false; }", "+    try { remote.setEnforcePrivateAccess(enforce); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }", "+  }"]}], "num": 10116}