{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f43f6679173fcda80f48c406d095ee75", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08cdd782c3f231546e3f8ce6d4fbcb9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void registerSlave(SlaveRemote slave) throws RemoteException", "signatureAfterChange": "   private static void attemptQuit(SlaveRemote slave)", "diff": ["+  /** Make a best attempt to invoke {@code slave.quit()}.  Log an error if it fails. */", "+  private static void attemptQuit(SlaveRemote slave) {", "+    try { slave.quit(); }", "+    catch (RemoteException e) { error.log(\"Unable to complete slave.quit()\", e); }", "-  /* Records the identity and status of the Slave JVM in the Master JVM */", "-  public void registerSlave(SlaveRemote slave) throws RemoteException {", "-    _log.log(this + \" registering Slave \" + slave);", "-    ", "-    boolean quitSlavePending;  // flag used to move quitSlave() call out of synchronized block", "-    ", "-    synchronized(_masterJVMLock) {", "-      _slave = slave;", "-      _startupInProgress = false;", "-      ", "-      _log.log(this + \" calling handleSlaveConnected()\");", "-      ", "-      handleSlaveConnected();", "-      ", "-      quitSlavePending = _quitOnStartup;", "-      if (_quitOnStartup) {", "-        // quitSlave was called before the slave registered, so we now act on the deferred quit request.", "-        _quitOnStartup = false;", "-      }", "-    }", "-    if (quitSlavePending) {", "-      _log.log(this + \" Executing deferred quitSlave() that was called during startUp\");", "-      quitSlave();  // not synchronized; _slave may be null when this code executes", "-    }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0409492b61c8ab242f86e1efa0e35f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "af0fc1431a7909c247b6b6799db5232d12cbecb2", "commitAfterChange": "1ca22d8d9e892abbe72cd6aa5627cc7ce0e56b03", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "    public synchronized void registerSlave(SlaveRemote slave)     throws RemoteException", "signatureAfterChange": "    public void registerSlave(SlaveRemote slave) throws RemoteException", "diff": ["-  public synchronized void registerSlave(SlaveRemote slave)", "-    throws RemoteException {", "-    _slave = slave;", "-    _startupInProgress = false;", "-    _stubFile.delete();", "-    _stub = null;", "-    _classLoaderStub = null;", "-    _classLoaderStubFile.delete();", "-    ", "-    handleSlaveConnected();", "-", "-    if (_quitOnStartup) {", "-      // quitSlave was called before the slave registered, so we now act on", "-      // the deferred quit request.", "-      _quitOnStartup = false;", "-      quitSlave();", "+  public void registerSlave(SlaveRemote slave) throws RemoteException {", "+    synchronized(_masterJVMLock) {", "+      _slave = slave;", "+      _startupInProgress = false;", "+      _stubFile.delete();", "+      _stub = null;", "+      _classLoaderStub = null;", "+      _classLoaderStubFile.delete();", "+      ", "+      handleSlaveConnected();", "+      ", "+      if (_quitOnStartup) {", "+        // quitSlave was called before the slave registered, so we now act on", "+        // the deferred quit request.", "+        _quitOnStartup = false;", "+        quitSlave();", "+      }"]}], "num": 10679}