{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe45c87ceddcb9e8fef98b664eb668ef", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba4437862d0cc6bc14ed0c9a502a55d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testOpenFileDisallowAbandon()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCloseFileDisallowAbandon() throws BadLocationException", "diff": ["+  public void testCloseFileDisallowAbandon() throws BadLocationException {", "+    OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "+", "+    TestListener listener = new TestListener() {", "+      public boolean canAbandonFile(OpenDefinitionsDocument doc) {", "+        canAbandonCount++;", "+        return false; // no, don't abandon our document!!!", "+      }", "+", "+      public void fileClosed(OpenDefinitionsDocument doc) {", "+         closeCount++;", "+      }", "+    };", "+", "+    _model.addListener(listener);", "+    _model.closeFile(doc);", "+    listener.assertAbandonCount(1);", "+    listener.assertCloseCount(0);", "+  }", "-   */", "-  public void testOpenFileDisallowAbandon()", "-    throws BadLocationException, IOException", "-  {", "-    setupDocument(FOO_TEXT);", "-", "-    TestListener listener = new TestListener() {", "-      public boolean canAbandonFile(File file) {", "-        canAbandonCount++;", "-        return false; // no, don't abandon our document!!!", "-      }", "-    };", "-", "-    _model.addListener(listener);", "-    _model.openFile(new FileSelector(new File(\"junk-doesnt-exist\")));", "-    listener.assertAbandonCount(1);", "-    assertModified(true);", "-    assertContents(FOO_TEXT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b50f223c2e29b376905e7d2ff051670d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testNewFileAllowAbandon() throws BadLocationException", "signatureAfterChange": "   public void testCloseFileAllowAbandon() throws BadLocationException", "diff": ["-  public void testNewFileAllowAbandon() throws BadLocationException {", "-    setupDocument(FOO_TEXT);", "-    // Now try to \"new\" again and check for proper events", "+   */", "+  public void testCloseFileAllowAbandon() throws BadLocationException {", "+    OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "+", "+    // Try to close and check for proper events", "-      public void newFileCreated() {", "-        assertAbandonCount(1);", "-        newCount++;", "-      }", "-", "-      public boolean canAbandonFile(File file) {", "+      public boolean canAbandonFile(OpenDefinitionsDocument doc) {", "-    };", "-    _model.addListener(listener);", "-    _model.newFile();", "-    listener.assertNewCount(1);", "-    assertModified(false);", "-    assertLength(0);", "-  }", "+      public void fileClosed(OpenDefinitionsDocument doc) {", "+        assertAbandonCount(1);", "+        closeCount++;", "+    _model.closeFile(doc);", "+    listener.assertCloseCount(1);"]}], "num": 10686}