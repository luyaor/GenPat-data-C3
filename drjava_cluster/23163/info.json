{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b8db2cf63b1d8c8e3bf3d32f1388549", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a50113f03e7fd64ba3f6fee11b633fe2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void set(String name, Object value)", "signatureAfterChange": "   public void set(String name, V value)", "diff": ["-  public void set(String name, Object value) {", "-    for (Link l = scopes; l != null; l = l.next) {", "+  public void set(String name, V value) {", "+    for (Link<V> l = scopes; l != null; l = l.next) {", "-        l.scope.put(name, value);", "-        return;", "+        try { ", "+          l.scope.put(name, value);", "+          return;", "+        }", "+        catch(NoSuchKeyException e) { /* unreachable because name is a key */ }", "-    throw new IllegalStateException(name);", "+    throw new IllegalStateException(name);  // name not found"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bafe74811bb848cb4463ac273360ff37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void set(String name, V value)", "signatureAfterChange": "   public void set(String name, Object value)", "diff": ["-  public void set(String name, V value) {", "-    for (Link<V> l = scopes; l != null; l = l.next) {", "+  public void set(String name, Object value) {", "+    for (Link l = scopes; l != null; l = l.next) {", "-        try { ", "-          l.scope.put(name, value);", "-          return;", "-        }", "-        catch(NoSuchKeyException e) { /* unreachable because name is a key */ }", "+        l.scope.put(name, value);", "+        return;", "-    throw new IllegalStateException(name);  // name not found", "+    throw new IllegalStateException(name);"]}], "num": 23163}