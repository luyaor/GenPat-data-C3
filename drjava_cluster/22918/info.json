{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad6bbb193a693b7e7eb0721bf82da398", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1877980be85ee907e5a4174a73126812", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/src-jsr14v1_2/edu/rice/cs/drjava/model/compiler/Javac141Compiler.java", "commitBeforeChange": "015d995aaac9945bf19ce48723d9a6dd74ca0c24", "commitAfterChange": "3e31dad6a289d5a146929ce28de9c5a45f322c9f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      protected Context createContext(File[] sourceRoots)", "signatureAfterChange": "      protected Context createContext(File[] sourceRoots)", "diff": ["-    options.put(\"-gj\", \"\");", "+    _addGenericsOption(options);", "-    // Set output classfile version to 1.1", "-    options.put(\"-target\", \"1.1\");", "+    // Set output target version", "+    _addSourceAndTargetOptions(options);", "+    ", "-", "-    // Allow assertions in 1.4 if configured and in Java >= 1.4", "-    String version = System.getProperty(\"java.version\");", "-    if ((_allowAssertions) && (version != null) &&", "-        (\"1.4.0\".compareTo(version) <= 0)) {", "-      options.put(\"-source\", \"1.4\");", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "974e2ce67204451df779b9437c0a8b13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "488e3f877c7f7a8647e0d3f7fb5faea712ac20ce", "commitAfterChange": "35470e88ca153d8164d45d018c673900eac06ea2", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 58, "signatureBeforeChange": "          public void compare(String leftName, Iterable<CompilationUnit> left,                           String rightName, Iterable<CompilationUnit> right)", "signatureAfterChange": "          public void compare(Iterable<CompilationUnit> left, Iterable<CompilationUnit> right)", "diff": ["-    public void compare(String leftName, Iterable<CompilationUnit> left,", "-                          String rightName, Iterable<CompilationUnit> right) {", "-      System.out.println(\"Comparing \" + leftName + \" with \" + rightName);", "-      if (IterUtil.sizeOf(left) != IterUtil.sizeOf(right)) {", "-        System.out.println(\"Can't compare results: mismatched CompilationUnit lists\");", "-      else {", "-        for (Pair<CompilationUnit, CompilationUnit> p : IterUtil.zip(left, right)) {", "-          compare(p.first(), p.second());", "-        }", "+    ", "+    public void compare(Iterable<CompilationUnit> left, Iterable<CompilationUnit> right) {", "+      _log.start();", "+      if (IterUtil.sizeOf(left) != IterUtil.sizeOf(right)) {", "+        _log.mismatchedCompilationUnits();", "+      }", "+      else {", "+        for (Pair<CompilationUnit, CompilationUnit> p : IterUtil.zip(left, right)) {", "+          compare(\"Compilation unit\", p.first(), p.second());", "+        }", "+      }", "+      _log.end();", "+    }"]}], "num": 22918}