{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "662563331ca817ab7e5fe8bd343fbee9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73ed25c7c33ac3dbacdd75180e703703", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/GenericTreeTest.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public void testGenericClass()", "signatureAfterChange": "      public void testGenericClass()", "diff": ["-", "+  ", "-", "+    ", "-", "+    ", "-", "+    ", "-    ConstructorDeclaration c = new ConstructorDeclaration(accessFlags, \"C\", cparams, new LinkedList<List<IdentifierToken>>(), null, cstmts);", "+    ConstructorDeclaration c = new ConstructorDeclaration(accessFlags, \"C\", cparams, new LinkedList<ReferenceType>(), null, cstmts);", "-    List<List<IdentifierToken>> mexcepts = new LinkedList<List<IdentifierToken>>();", "+    List<ReferenceType> mexcepts = new LinkedList<ReferenceType>();", "-", "-    interpreter.interpret(cls); // set the context for the following method call", "-", "-", "-", "+    ", "+    astInterpreter.interpret(cls); // set the context for the following method call", "+    ", "+    ", "+    ", "-", "+    ", "-", "+    ", "-", "+    ", "-", "-    Object result = interpreter.interpret(mc);", "+    ", "+    Object result = astInterpreter.interpret(mc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c394fede63e4a56d43e3ffe8a86bdd43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/GenericTreeTest.java", "commitBeforeChange": "4dc5ace86e9b2c575f2b09ebb783f4d8d9db5e9a", "commitAfterChange": "798fcd5fdec1efc6698cb1c49cd62bdab41daffc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testHandParsedGenericClass()", "signatureAfterChange": "      public void testHandParsedGenericClass()", "diff": ["-    FormalParameter param = new FormalParameter(false, t, \"_n\", false);", "+    FormalParameter param = new FormalParameter(false, t, \"_n\");", "-    ConstructorDeclaration c = new ConstructorDeclaration(accessFlags, \"C\", cparams, new LinkedList<ReferenceType>(), null, cstmts);", "+    ConstructorDeclaration c = new ConstructorDeclaration(accessFlags, \"C\", cparams, new LinkedList<ReferenceType>(), null, cstmts, false);", "-    MethodDeclaration m = new MethodDeclaration(accessFlags, t, \"m\", mparams, mexcepts, new BlockStatement(mstmts));", "+    MethodDeclaration m = new MethodDeclaration(accessFlags, t, \"m\", mparams, mexcepts, new BlockStatement(mstmts), false);"]}], "num": 8225}