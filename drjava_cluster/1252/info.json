{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6eca2f708d232a2def02ce0f0067234", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cb58105c6d9fbfa1b9e857ee97cd1a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public synchronized void step(int flag) throws DebugException", "signatureAfterChange": "   public synchronized void step(int flag) throws DebugException", "diff": ["+    if (!isReady()) return;", "+    ", "-    //if (!_thread.isSuspended()) ", "-      //DrJava.consoleOut().println(\"Current thread is not suspended while trying to create a step request!\");    ", "+", "-      //DrJava.consoleOut().println(\"creating a new step: event thread: \" + ", "-      //                            ((StepRequest)steps.get(i)).thread() + ", "-      //                            \" current thread: \" +", "-      //                            _thread);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36c22b950a70dbffe3ac36a19105f257", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandler.java", "commitBeforeChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "commitAfterChange": "84d383e8fea49389da19c11522947d451646ef3e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void _handleThreadDeathEvent(ThreadDeathEvent e)", "signatureAfterChange": "      private void _handleThreadDeathEvent(ThreadDeathEvent e)", "diff": ["-    if (e.thread().equals(_manager.getCurrentThread())) {", "+    /** no need to check if there are suspended threads on the stack", "+     * because all that logic should be in the debugger", "+     */", "+    if(e.thread().equals(_manager.getCurrentRunningThread())) {", "+      EventRequestManager erm = _vm.eventRequestManager();", "+      List steps = erm.stepRequests();", "+      for (int i = 0; i < steps.size(); i++) {", "+        StepRequest step = (StepRequest)steps.get(i);", "+        if (step.thread().equals(e.thread())) {", "+          erm.deleteEventRequest(step);", "+          break;", "+        }", "+      }", "-      _manager.setCurrentThread(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88ecbd0cb52aa1282972f6fb2085f361", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandler.java", "commitBeforeChange": "f1f97edd57f558d6d34abcd1fe039afc22f7a202", "commitAfterChange": "fc098bf0e8c385557d32ed3c183745582612add6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void _handleClassPrepareEvent(ClassPrepareEvent e)", "signatureAfterChange": "      private void _handleClassPrepareEvent(ClassPrepareEvent e)", "diff": ["-    System.out.println(\"ClassPrepareEvent occured\");", "+    DrJava.consoleOut().println(\"ClassPrepareEvent occured\");", "+    DrJava.consoleOut().println(\"In \" + e.referenceType().name());", "+    try {", "+      DrJava.consoleOut().println(\"sourcename \" + e.referenceType().sourceName());", "+    }", "+    catch(AbsentInformationException aie) {", "+      DrJava.consoleOut().println(\"no info\");", "+    }", "+    try {", "+      _debugManager.getPendingRequestManager().classPrepared(e);", "+    }", "+    catch(DebugException de) {", "+      System.err.println(\"Error preparing action: \" + de);", "+    }", "+    // resumes this thread which was suspended because its ", "+    // suspend policy was SUSPEND_EVENT_THREAD", "+    e.thread().resume();", "+    DrJava.consoleOut().println(\"resumed thread\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92734c8e3c3c8ba4f7f5008f7eedd4ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "55616341e09a5f807767173122a231f2db20106c", "commitAfterChange": "ddcbad2909e9c9411b7283368e21d7790422a21d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public synchronized void step(int flag) throws DebugException", "signatureAfterChange": "   public synchronized void step(int flag) throws DebugException", "diff": ["-    if (!isReady()) return;", "-    ", "-    if (_thread == null) {", "-      throw new DebugException(\"Must have a thread to step.\");", "-    }", "+    if (!isReady() || (_thread == null)) return;", "-        DrJava.consoleOut().println(\"There's already a StepRequest on the current thread\");", "-        DrJava.consoleOut().println(\"suspendCount: \" + _thread.suspendCount());", "+        //DrJava.consoleOut().println(\"There's already a StepRequest on the current thread\");", "+        //DrJava.consoleOut().println(\"suspendCount: \" + _thread.suspendCount());", "+    notifyStepRequested();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b15afa97a4152ffd9144bae9ac5882eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "9cb55009db1cb8bd2aab8df62ce303060f475c4b", "commitAfterChange": "5212beeea100a9dddc0602b719065f41bdf8e3cc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public synchronized void step(int flag) throws DebugException", "signatureAfterChange": "   public synchronized void step(int flag) throws DebugException", "diff": ["-      //System.out.println(\"Current thread is null\");", "-      return;", "+      throw new DebugException(\"Must have a thread to step.\");", "-    List steps = _eventManager.stepRequests();", "+    List steps = _eventManager.stepRequests();    ", "-        //DrJava.consoleOut().println(\"There's already a StepRequest on the current thread\");", "-        //DrJava.consoleOut().println(\"suspendCount: \" + _thread.suspendCount());", "-        /*try {", "-          DrJava.consoleOut().println(\"frames: \" + _thread.frames());", "-        }", "-        catch(IncompatibleThreadStateException itse) {", "-          DrJava.consoleOut().println(\"Can't print frames, thread is not suspended!\");", "-        }*/", "-        _thread.resume();", "+        DrJava.consoleOut().println(\"There's already a StepRequest on the current thread\");", "+        DrJava.consoleOut().println(\"suspendCount: \" + _thread.suspendCount());", "-    _thread.resume();", "+    resume();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5036d267efd4bc6eafba3d1719f4659", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "commitAfterChange": "84d383e8fea49389da19c11522947d451646ef3e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public synchronized void step(int flag) throws DebugException", "signatureAfterChange": "   public synchronized void step(int flag) throws DebugException", "diff": ["-    if (!isReady() || (_thread == null)) return;", "-", "+    if (!isReady() || (_suspendedThreads.size() <= 0)) return;", "+    ", "+    ThreadReference thread = _suspendedThreads.peek();", "-    List steps = _eventManager.stepRequests();    ", "+    List steps = _eventManager.stepRequests();", "-      if (step.thread().equals(_thread)) {", "-        if (!_thread.isSuspended())", "-          return;", "-        else {", "-          _eventManager.deleteEventRequest(step);", "-          break;", "-        }", "+      if (step.thread().equals(thread)) {", "+        _eventManager.deleteEventRequest(step);", "+        break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db16a3f27ae48bee6a817a1860c5f57a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "commitAfterChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public synchronized void step(int flag) throws DebugException", "signatureAfterChange": "   public synchronized void step(int flag) throws DebugException", "diff": ["-      System.out.println(\"Current thread is null\");", "+      //System.out.println(\"Current thread is null\");", "+    //if (!_thread.isSuspended()) ", "+      //DrJava.consoleOut().println(\"Current thread is not suspended while trying to create a step request!\");    ", "+    // don't allow the creation of a new StepRequest if there's already one on", "+    // the current thread", "+    List steps = _eventManager.stepRequests();", "+    for (int i = 0; i < steps.size(); i++) {", "+      //DrJava.consoleOut().println(\"creating a new step: event thread: \" + ", "+      //                            ((StepRequest)steps.get(i)).thread() + ", "+      //                            \" current thread: \" +", "+      //                            _thread);", "+      if (((StepRequest)steps.get(i)).thread().equals(_thread)) {", "+        //DrJava.consoleOut().println(\"There's already a StepRequest on the current thread\");", "+        //DrJava.consoleOut().println(\"suspendCount: \" + _thread.suspendCount());", "+        /*try {", "+          DrJava.consoleOut().println(\"frames: \" + _thread.frames());", "+        }", "+        catch(IncompatibleThreadStateException itse) {", "+          DrJava.consoleOut().println(\"Can't print frames, thread is not suspended!\");", "+        }*/", "+        _thread.resume();", "+        return;", "+      }", "+    }", "+        ", "-    System.out.println(\"_thread resumed\");", "+    //System.out.println(\"_thread resumed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ded3a7bc8b6f2fec941bc628f38090f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandler.java", "commitBeforeChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "commitAfterChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void _handleThreadDeathEvent(ThreadDeathEvent e)", "signatureAfterChange": "      private void _handleThreadDeathEvent(ThreadDeathEvent e)", "diff": ["-    //System.out.println(\"**Thread \" + e.thread() + \" died**\");", "+    //System.out.println(\"**Thread \" + e.thread() + \" died**\"); ", "+      //DrJava.consoleOut().println(\"in handle thread death: event thread: \" + e.thread() + \" current thread: \" +", "+      //                            _manager.getCurrentThread());", "+      _manager.currThreadDied();", "-    }", "+    }      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0b6b10952e78033ab386d2da482abee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "commitAfterChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "   synchronized void scrollToSource(LocatableEvent e)", "signatureAfterChange": "   synchronized void scrollToSource(LocatableEvent e)", "diff": ["-        DrJava.consoleOut().println(\"Trying to find \" + currRoot + ps + className + ", "-                                    \".java\");", "+        //DrJava.consoleOut().println(\"Trying to find \" + currRoot + ps + className + ", "+        //                            \".java\");", "-        DrJava.consoleOut().println(\"found file: \" + f.getAbsolutePath());", "+        //DrJava.consoleOut().println(\"found file: \" + f.getAbsolutePath());", "+          //doc = _model.getDocumentForFile(f, location.lineNumber());", "-      DrJava.consoleOut().println(\"Will scroll to line: \" + location.lineNumber());", "+      //DrJava.consoleOut().println(\"Will scroll to line: \" + location.lineNumber());", "-                                     locationF.lineNumber());", "+                                 locationF.lineNumber());", "-      DrJava.consoleOut().println(\"couldn't open file to scroll to\");", "+      //DrJava.consoleOut().println(\"couldn't open file to scroll to\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e889a324df01193465685a2d7aed6a35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "commitAfterChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public synchronized void step(int flag) throws DebugException", "signatureAfterChange": "   public synchronized void step(int flag) throws DebugException", "diff": ["-      if (((StepRequest)steps.get(i)).thread().equals(_thread)) {", "-        //DrJava.consoleOut().println(\"There's already a StepRequest on the current thread\");", "-        //DrJava.consoleOut().println(\"suspendCount: \" + _thread.suspendCount());", "-        return;", "+      StepRequest step = (StepRequest)steps.get(i);", "+      if (step.thread().equals(_thread)) {", "+        if (!_thread.isSuspended())", "+          return;", "+        else {", "+          _eventManager.deleteEventRequest(step);", "+          break;", "+        }", "-    //System.out.println(\"_thread resumed\");"]}], "num": 1252}