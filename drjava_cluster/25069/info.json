{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81254606c6290bc2b6b25ae6176435a3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02fc7b107a7620b2b1b055f28e736e3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   synchronized boolean setCurrentThread(ThreadReference thread)", "signatureAfterChange": "   synchronized boolean setCurrentThread(ThreadReference thread)", "diff": ["-    if (!thread.isSuspended()) {", "-      throw new IllegalArgumentException(\"Thread must be suspended to set \" +", "-                                         \"as current.  Given: \" + thread);", "+    if (! thread.isSuspended()) {", "+      throw new IllegalArgumentException(\"Thread must be suspended to set as current.  Given: \" + thread);", "-      if ((_suspendedThreads.isEmpty() || ", "-           !_suspendedThreads.contains(thread.uniqueID())) && (thread.frameCount() > 0)) {", "+      if ((_suspendedThreads.isEmpty() || !_suspendedThreads.contains(thread.uniqueID())) &&", "+          (thread.frameCount() > 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cedfffd6d9db8d4dc54ca702d5a0eb33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 14, "signatureBeforeChange": "   synchronized boolean setCurrentThread(ThreadReference thread)", "signatureAfterChange": "   synchronized boolean setCurrentThread(ThreadReference thread)", "diff": ["+    if (!thread.isSuspended()) {", "+      throw new IllegalArgumentException(\"Thread must be suspended to set \" +", "+                                         \"as current.  Given: \" + thread);", "+    }", "+    ", "-      if ((_suspendedThreads.isEmpty() || !_suspendedThreads.contains(thread.uniqueID()))", "-            && (thread.isSuspended() && thread.frameCount() > 0)) {", "+      if ((_suspendedThreads.isEmpty() || ", "+           !_suspendedThreads.contains(thread.uniqueID()))", "+            && (thread.frameCount() > 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dde9fedfcd12e96bbe2db63ba5683546", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "17590567cb9f06269b33249dad955c39164a9028", "commitAfterChange": "6222fd84e3aa6c7b8b3da9d73ccf7a9a3370487b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public synchronized void setCurrentThread(DebugThreadData threadData)     throws DebugException", "signatureAfterChange": "   public synchronized void setCurrentThread(DebugThreadData threadData)     throws DebugException", "diff": ["-    ", "-    // Disabled because we want to scrollToSource even if this thread is the", "-    // current thread.", "+", "+    // Currently disabled, so we will always scroll to source, even if the", "+    // thread is already selected.", "-    ", "+", "-    if ( _suspendedThreads.contains(threadRef.uniqueID()) ) {", "+    if (_suspendedThreads.contains(threadRef.uniqueID())) {", "-    if ( !threadRef.isSuspended() ) {", "+    if (!threadRef.isSuspended()) {", "-      if ( threadRef.frameCount() > 0 ) {", "-        scrollToSource(threadRef.frame(0).location());", "-      }", "-      else {", "+      if (threadRef.frameCount() <= 0) {"]}], "num": 25069}