{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4c54800490623589b068d83dc83c331", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47fa349964ebf6802d672b38e524e436", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "8279bc33117c74621df6401dedd10a0cae247a2c", "commitAfterChange": "ce3350f89c936debb5fbaa8f27f501d1524368cf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void registerInterpreterJVM(InterpreterJVMRemoteI remote)     throws RemoteException", "signatureAfterChange": "    private InterpreterJVMRemoteI _interpreterJVM()", "diff": ["+", "+  private InterpreterJVMRemoteI _interpreterJVM() {", "+    return (InterpreterJVMRemoteI) getSlave();", "-   */", "-  public void registerInterpreterJVM(InterpreterJVMRemoteI remote)", "-    throws RemoteException", "-  {", "-    synchronized(this) {", "-      //System.err.println(\"interpreter jvm registered: \" + remote);", "-      _interpreterJVM = remote;", "-      _startupInProgress = false;", "-      // wake up anyone waiting for an interpreter!", "-      notify();", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6290a2585c993acdb7b7fc2293036c94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 18, "signatureBeforeChange": "      protected void handleSlaveQuit(int status)", "signatureAfterChange": "      public boolean voidReturnFlag()", "diff": ["-    protected void handleSlaveQuit(int status) {", "-      synchronized(_testLock) {", "-        _testLock.notify();", "-        super.handleSlaveQuit(status);", "+", "+    public boolean voidReturnFlag() {", "+      assertTrue(_done.attemptEnsureSignaled(WAIT_TIMEOUT));", "+      return _voidReturnFlag;", "+    }"]}], "num": 23105}