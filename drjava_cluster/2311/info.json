{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48d276d5e79ed6c5fc64b43a6494e423", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ed53797f9bf0e2650d5aae832e1cc4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/PrecomputedRecursionStack4.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void pop(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "signatureAfterChange": "   public void pop(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "diff": ["-    IdentityQuad<T1, T2, T3, T4> wrapped = new IdentityQuad<T1, T2, T3, T4>(arg1, arg2, arg3, arg4);", "+    Quad<T1, T2, T3, T4> wrapped = _quadFactory.value(arg1, arg2, arg3, arg4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f5735236b9e779c711266e0e8d4744d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/PrecomputedRecursionStack4.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void push(T1 arg1, T2 arg2, T3 arg3, T4 arg4,                     Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> value)", "signatureAfterChange": "   public void push(T1 arg1, T2 arg2, T3 arg3, T4 arg4,                     Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> value)", "diff": ["-    IdentityQuad<T1, T2, T3, T4> wrapped = new IdentityQuad<T1, T2, T3, T4>(arg1, arg2, arg3, arg4);", "+    Quad<T1, T2, T3, T4> wrapped = _quadFactory.value(arg1, arg2, arg3, arg4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3551598ea9e9d8657bd513a258275247", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecursionStack4.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void push(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "signatureAfterChange": "   public void push(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "diff": ["-    IdentityQuad<T1, T2, T3, T4> wrapped = new IdentityQuad<T1, T2, T3, T4>(arg1, arg2, arg3, arg4);", "+    Quad<T1, T2, T3, T4> wrapped = _quadFactory.value(arg1, arg2, arg3, arg4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36bed3f6cdc2c06afd504322ced1c0f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/DictionaryMap.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public Set<Map.Entry<K, V>> entrySet()", "signatureAfterChange": "       @Override public boolean isEmpty()", "diff": ["+      @Override public int size(int b) { int s = _d.size(); return (s < b) ? s : b; }", "+      @Override public boolean isEmpty() { return _d.isEmpty(); }", "-  ", "-  public Set<Map.Entry<K, V>> entrySet() { return new KeyDrivenEntrySet<K, V>(this); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cc26f0a680f94dd2d416b49c1b1cff7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecursionStack4.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void pop(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "signatureAfterChange": "   public void pop(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "diff": ["-    IdentityQuad<T1, T2, T3, T4> wrapped = new IdentityQuad<T1, T2, T3, T4>(arg1, arg2, arg3, arg4);", "+    Quad<T1, T2, T3, T4> wrapped = _quadFactory.value(arg1, arg2, arg3, arg4);"]}], "num": 2311}