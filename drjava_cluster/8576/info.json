{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14d903d5365ab91a4a9345456e6efc44", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b8edae17d05cdb08a217e23a0c9babc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlus.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    try { prevDelimiterPos = doc._findPrevDelimiter(lineStart, delims); }  // find pos of delimiter preceding line start", "+    try { prevDelimiterPos = doc.findPrevDelimiter(lineStart, delims); }  // find pos of delimiter preceding line start", "-        doc._setCurrentLocation(prevDelimiterPos + 1);   // move cursor to right of '}' or ')' delim", "+        doc.setCurrentLocation(prevDelimiterPos + 1);   // move cursor to right of '}' or ')' delim", "-        doc._setCurrentLocation(here);", "+        doc.setCurrentLocation(here);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca22fee3cdbebdb891fb9b987dbd0ddd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "   private int _commentBlock(final int start, final int end)", "signatureAfterChange": "   private int commentBlock(final int start, final int end)", "diff": ["-  private int _commentBlock(final int start, final int end) {", "+  private int commentBlock(final int start, final int end) {", "-      int walker = getLineStartPos(start);", "+      int walker = _getLineStartPos(start);", "-          setCurrentLocation(walker);  // Update cursor", "+          _setCurrentLocation(walker);  // Update cursor", "-          setCurrentLocation(walker);  // reset currentLocation to position past newline", "+          _setCurrentLocation(walker);  // reset currentLocation to position past newline"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3cde252884156a84560f7eadd4707a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "   private int _uncommentBlock(final int start, final int end)", "signatureAfterChange": "   private int uncommentBlock(final int start, final int end)", "diff": ["-  private int _uncommentBlock(final int start, final int end) {", "+  private int uncommentBlock(final int start, final int end) {", "-      int walker = getLineStartPos(start);", "+      int walker = _getLineStartPos(start);", "-        setCurrentLocation(walker);           // Move cursor to walker position", "+        _setCurrentLocation(walker);           // Move cursor to walker position", "-        walker = getLineEndPos(walker) + 1;   // Update walker pos to point to beginning of next line", "+        walker = _getLineEndPos(walker) + 1;   // Update walker pos to point to beginning of next line"]}], "num": 8576}