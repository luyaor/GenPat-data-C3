{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "190d205bd8a2b95812b3191b7eb0c5a9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7705e8847b91035dd5d7cdc8839b004c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": "               public void testForComplexMethodInvocation()", "signatureAfterChange": "               public void testForComplexMethodInvocation()", "diff": ["-        new ComplexMethodInvocation(SourceInfo.NO_INFO, ", "-                                    new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"giraffe\")),", "-                                    new Word(SourceInfo.NO_INFO, \"myName\"), ", "-                                    new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]));", "+        new ComplexMethodInvocation(SourceInfo.NONE, ", "+                                    new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"giraffe\")),", "+                                    new Word(SourceInfo.NONE, \"myName\"), ", "+                                    new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0]));", "-        new ComplexMethodInvocation(SourceInfo.NO_INFO, ", "-                                    new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"g\")), ", "-                                    new Word(SourceInfo.NO_INFO, \"myName\"), ", "-                                    new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]));", "+        new ComplexMethodInvocation(SourceInfo.NONE, ", "+                                    new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"g\")), ", "+                                    new Word(SourceInfo.NONE, \"myName\"), ", "+                                    new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0]));", "-        new ComplexMethodInvocation(SourceInfo.NO_INFO, ", "-                                    new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"g\")), ", "-                                    new Word(SourceInfo.NO_INFO, \"myName\"), ", "-                                    new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[] { ", "-        new IntegerLiteral(SourceInfo.NO_INFO, 5)}));", "+        new ComplexMethodInvocation(SourceInfo.NONE, ", "+                                    new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"g\")), ", "+                                    new Word(SourceInfo.NONE, \"myName\"), ", "+                                    new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[] { ", "+        new IntegerLiteral(SourceInfo.NONE, 5)}));", "-        new ComplexMethodInvocation(SourceInfo.NO_INFO, ", "-                                    new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"giraffe\")),", "-                                    new Word(SourceInfo.NO_INFO, \"myName\"), ", "-                                    new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[] {", "-        new DoubleLiteral(SourceInfo.NO_INFO, 4.2)}));", "+        new ComplexMethodInvocation(SourceInfo.NONE, ", "+                                    new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"giraffe\")),", "+                                    new Word(SourceInfo.NONE, \"myName\"), ", "+                                    new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[] {", "+        new DoubleLiteral(SourceInfo.NONE, 4.2)}));", "-        new ComplexMethodInvocation(SourceInfo.NO_INFO, ", "-                                    new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"g\")), ", "-                                    new Word(SourceInfo.NO_INFO, \"myName\"), ", "-                                    new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[] {", "-        new DoubleLiteral(SourceInfo.NO_INFO, 4.2)}));", "+        new ComplexMethodInvocation(SourceInfo.NONE, ", "+                                    new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"g\")), ", "+                                    new Word(SourceInfo.NONE, \"myName\"), ", "+                                    new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[] {", "+        new DoubleLiteral(SourceInfo.NONE, 4.2)}));", "-      ", "-      assertEquals(\"Error message should be correct\", \"No method found in class giraffe with signature: myName().\", errors.getLast().getFirst());", "+      assertEquals(\"Error message should be correct\", \"No method found in class giraffe with signature: myName().\", ", "+                   errors.getLast().getFirst());", "-      MethodData noArgsM = new MethodData(\"myName\", _publicMav, new TypeParameter[0], SymbolData.BOOLEAN_TYPE, new VariableData[0], new String[0], g, new NullLiteral(SourceInfo.NO_INFO));", "+      MethodData noArgsM = new MethodData(\"myName\", _publicMav, new TypeParameter[0], SymbolData.BOOLEAN_TYPE, ", "+                                          new VariableData[0], new String[0], g, NULL_LITERAL);", "-                       new String[0], g, new NullLiteral(SourceInfo.NO_INFO));", "+                       new String[0], g, NULL_LITERAL);", "-                       new String[0], g, new NullLiteral(SourceInfo.NO_INFO));", "+                       new String[0], g, NULL_LITERAL);", "-//      assertEquals(\"Error message should be correct\", \"Cannot access the non-static method myName from a static context\", errors.getLast().getFirst());", "+//      assertEquals(\"Error message should be correct\", \"Cannot access the non-static method myName from a static context\", ", "+//      errors.getLast().getFirst());", "-      assertEquals(\"Error message should be correct\", \"The class or interface giraffe is private and cannot be accessed from i.like.monkey\", errors.getLast().getFirst());", "+      assertEquals(\"Error message should be correct\", ", "+                   \"The class or interface giraffe in giraffe is private and cannot be accessed from i.like.monkey\", ", "+                   errors.getLast().getFirst());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83ba80f6b2f55096955d5b10f1d858e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "commitAfterChange": "17285283461a98a54216b38ffd842a9ade691a61", "methodNumberBeforeChange": 171, "methodNumberAfterChange": 171, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["-    final JPopupMenu docPanePopupMenu = new JPopupMenu();", "-    docPanePopupMenu.add(_saveAction);", "-    docPanePopupMenu.add(_saveAsAction);", "-    docPanePopupMenu.add(_revertAction);", "-    docPanePopupMenu.addSeparator();", "-    docPanePopupMenu.add(_closeAction);", "-    docPanePopupMenu.addSeparator();", "-    docPanePopupMenu.add(_printAction);", "-    docPanePopupMenu.add(_printPreviewAction);", "-    docPanePopupMenu.addSeparator();", "-    docPanePopupMenu.add(_compileAction);", "+    _docPanePopupMenu = new JPopupMenu();", "+    _docPanePopupMenu.add(_saveAction);", "+    _docPanePopupMenu.add(_saveAsAction);", "+    _docPanePopupMenu.add(_revertAction);", "+    _docPanePopupMenu.addSeparator();", "+    _docPanePopupMenu.add(_closeAction);", "+    _docPanePopupMenu.addSeparator();", "+    _docPanePopupMenu.add(_printAction);", "+    _docPanePopupMenu.add(_printPreviewAction);", "+    _docPanePopupMenu.addSeparator();", "+    _docPanePopupMenu.add(_compileAction);", "-      docPanePopupMenu.add(_runAction);", "+      _docPanePopupMenu.add(_runAction);", "-    docPanePopupMenu.add(_junitAction);", "+    _docPanePopupMenu.add(_junitAction);", "-        docPanePopupMenu.show(e.getComponent(), e.getX(), e.getY());", "+        _docPanePopupMenu.show(e.getComponent(), e.getX(), e.getY());", "-    final JPopupMenu interactionsPanePopupMenu = new JPopupMenu();", "-    interactionsPanePopupMenu.add(cutAction);", "-    interactionsPanePopupMenu.add(copyAction);", "-    interactionsPanePopupMenu.add(pasteAction);", "-    interactionsPanePopupMenu.addSeparator();", "-    interactionsPanePopupMenu.add(_loadHistoryAction);", "-    interactionsPanePopupMenu.add(_saveHistoryAction);", "-    interactionsPanePopupMenu.add(_clearHistoryAction);", "-    interactionsPanePopupMenu.addSeparator();", "-    interactionsPanePopupMenu.add(_resetInteractionsAction);", "-    interactionsPanePopupMenu.add(_viewInteractionsClasspathAction);", "-    interactionsPanePopupMenu.add(_copyInteractionToDefinitionsAction);", "+    _interactionsPanePopupMenu = new JPopupMenu();", "+    _interactionsPanePopupMenu.add(cutAction);", "+    _interactionsPanePopupMenu.add(copyAction);", "+    _interactionsPanePopupMenu.add(pasteAction);", "+    _interactionsPanePopupMenu.addSeparator();", "+    _interactionsPanePopupMenu.add(_loadHistoryAction);", "+    _interactionsPanePopupMenu.add(_saveHistoryAction);", "+    _interactionsPanePopupMenu.add(_clearHistoryAction);", "+    _interactionsPanePopupMenu.addSeparator();", "+    _interactionsPanePopupMenu.add(_resetInteractionsAction);", "+    _interactionsPanePopupMenu.add(_viewInteractionsClasspathAction);", "+    _interactionsPanePopupMenu.add(_copyInteractionToDefinitionsAction);", "-        interactionsPanePopupMenu.show(e.getComponent(), e.getX(), e.getY());", "+        _interactionsPanePopupMenu.show(e.getComponent(), e.getX(), e.getY());", "-    final JPopupMenu consolePanePopupMenu = new JPopupMenu();", "-    consolePanePopupMenu.add(_clearConsoleAction);", "+    _consolePanePopupMenu = new JPopupMenu();", "+    _consolePanePopupMenu.add(_clearConsoleAction);", "-        consolePanePopupMenu.show(e.getComponent(), e.getX(), e.getY());", "+        _consolePanePopupMenu.show(e.getComponent(), e.getX(), e.getY());"]}], "num": 13583}