{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "378e2a9fa71bda7faa1935f233306992", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01ea787e9eb442e57cc85cac3f12cc5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "commitAfterChange": "eb9337b4d6e2d2de4c1774413f08dfb947ae389c", "methodNumberBeforeChange": 299, "methodNumberAfterChange": 299, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["-   */", "+  /** Sets up the context menu to show in the document pane. */", "-    ", "-    ", "-    ", "-          ", "-          if (_model.getDocumentNavigator().isGroupSelected()) {", "+          if (_model.getDocumentNavigator().isGroupSelected())", "-          }", "-          else{", "-            try{", "+ ", "+          else {", "+            try {", "-              if(groupName == _model.getSourceBinTitle()){", "+              if(groupName == _model.getSourceBinTitle())", "-              }else if(groupName == _model.getExternalBinTitle()){", "+              else if (groupName == _model.getExternalBinTitle()) {", "-              }else if(groupName == _model.getAuxiliaryBinTitle()){", "+              }", "+              else if (groupName == _model.getAuxiliaryBinTitle())", "-              }", "-            catch(GroupNotSelectedException ex){", "+            catch(GroupNotSelectedException ex) {", "-              if(_model.isProjectActive()){", "+              if (_model.isProjectActive())", "-              }", "-              else { _navPanePopupMenu.show(e.getComponent(), e.getX(), e.getY()); }", "+              else  _navPanePopupMenu.show(e.getComponent(), e.getX(), e.getY());", "-          ", "-//          _navPaneFolderPopupMenu.show(e.getComponent(), e.getX(), e.getY());", "-          "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20bffbcf5760578b197c65c9254a35fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "eclipse/src/edu/rice/cs/util/text/SWTDocumentAdapterTest.java", "commitBeforeChange": "bd3609d73f910b773bb009bd9fec801547e38ce7", "commitAfterChange": "ee77a4b190fe991345758d9ffc949583a7709b61", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testEditCondition()      throws DocumentAdapterException", "signatureAfterChange": "   public void testEditCondition()      throws DocumentAdapterException", "diff": ["-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5891120d67e5cc777f7fcbc6bafc96ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "55ffd5d461fa009444744f2527631191c6f9decc", "commitAfterChange": "0fed03351fa05790a48229380b62c5e4589b0332", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 63, "signatureBeforeChange": "   private File refreshNode(DefaultMutableTreeNode node)", "signatureAfterChange": "   private File refreshNode(DefaultMutableTreeNode node)", "diff": ["+    ", "-    if (!f.exists()) return null; ", "+    if (!f.exists()) {", "+      if (node == _root) {", "+        File parentFile = f.getParentFile();", "+        if (parentFile != null) {", "+          parentFile = formatFile(parentFile);", "+          while (!parentFile.exists()) {", "+            parentFile = parentFile.getParentFile();", "+          }", "+          setRootFile(null);", "+          setSelectedDirectory(parentFile);", "+        }", "+      }", "+      else {", "+        getModel().removeNodeFromParent(node);", "+      }", "+      return null; ", "+    }", "-        return f; // children are not generated yet", "+        return f; // children are not generated yet & thus do not need refreshing", "-      DefaultMutableTreeNode n = (DefaultMutableTreeNode) e.nextElement();", "-      if (nodeShouldBeRemoved(n)) ", "-        nodesToRemove.add(n); ", "-      else", "-        set.add(refreshNode(n));", "-    }", "-    for(DefaultMutableTreeNode n : nodesToRemove) {", "-      getModel().removeNodeFromParent(n);", "+      DefaultMutableTreeNode child = (DefaultMutableTreeNode) e.nextElement();", "+      File childFile = refreshNode(child);", "+      if (childFile != null) set.add(refreshNode(child));", "+    if (node == _root) { // make sure the root node is always expanded", "+      _tree.expandPath(new TreePath(node.getPath()));      ", "+    }", "-  }  ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f2f3ada3f2a9c8358854be558c6a466", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public void testCompoundUndoManager() throws BadLocationException", "signatureAfterChange": "   public void testCompoundUndoManager() throws BadLocationException", "diff": ["-                 _defModel.getText(0, _defModel.getLength()));", "+                 _defModel.getText());", "-                 _defModel.getText(0, _defModel.getLength()));", "+                 _defModel.getText());", "-                 _defModel.getText(0, _defModel.getLength()));", "+                 _defModel.getText());", "-                 _defModel.getText(0, _defModel.getLength()));", "+                 _defModel.getText());", "-                 _defModel.getText(0, _defModel.getLength()));", "+                 _defModel.getText());", "-                 _defModel.getText(0, _defModel.getLength()));", "+                 _defModel.getText());", "-                 _defModel.getText(0, _defModel.getLength()));", "+                 _defModel.getText());", "-                 _defModel.getText(0, _defModel.getLength()));", "+                 _defModel.getText());", "-                 _defModel.getText(0, _defModel.getLength()));", "+                 _defModel.getText());", "-                 _defModel.getText(0, _defModel.getLength()));", "+                 _defModel.getText());", "-                 _defModel.getText(0, _defModel.getLength()));", "+                 _defModel.getText());", "-                 _defModel.getText(0, _defModel.getLength()));", "+                 _defModel.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cce2877fcdd6790f971f3dc59aec9bbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentTest.java", "commitBeforeChange": "8419e1669ab708db7794d94c63980b50f479093f", "commitAfterChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testEditCondition() throws DocumentAdapterException, BadLocationException", "signatureAfterChange": "   public void testEditCondition() throws DocumentAdapterException, BadLocationException", "diff": ["-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));", "-                 _doc.getDocText(0, _doc.getDocLength()));", "+                 _doc.getDocText(0, _doc.getLength()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2b966a83b6480e83666a9f8012d1f46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "202fe65b6d19b63d8f3941f6eff8e18c68fa7232", "commitAfterChange": "b7e7dc26985115a0b1d39562458d043f05ace9bb", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void findAll(String searchStr, final boolean searchAll, final boolean searchSelectedText, final boolean matchCase,                       final boolean wholeWord, final boolean noComments, final boolean noTestCases,                       final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm, MovingDocumentRegion region,                       final FindResultsPanel panel)", "signatureAfterChange": "   public void findAll(String searchStr, final boolean searchAll, final boolean searchSelectedText, final boolean matchCase,                       final boolean wholeWord, final boolean noComments, final boolean noTestCases,                       final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm, final MovingDocumentRegion region,                       final FindResultsPanel panel)", "diff": ["-                      final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm, MovingDocumentRegion region,", "+                      final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm, final MovingDocumentRegion region,", "-      }, region.getStartOffset(), region.getEndOffset());", "+      }, region);", "-          if (count > 0) _frame.showFindResultsPanel(panel);", "-          else { ", "-            Toolkit.getDefaultToolkit().beep();", "-            panel.freeResources(); ", "-          }", "-          _frame.setStatusMessage(\"Found \" + count + \" occurrence\" + ((count == 1) ? \"\" : \"s\") + \".\");", "+      if (count > 0) _frame.showFindResultsPanel(panel);", "+      else { ", "+        Toolkit.getDefaultToolkit().beep();", "+        panel.freeResources(); ", "+      }", "+      _frame.setStatusMessage(\"Found \" + count + \" occurrence\" + ((count == 1) ? \"\" : \"s\") + \".\");", "+          ", "+      if (searchSelectedText) {", "+        EventQueue.invokeLater(new Runnable() { public void run() { ", "+          if (_defPane!=null) {", "+            _defPane.requestFocusInWindow();", "+            _defPane.setSelectionStart(region.getStartOffset());", "+            _defPane.setSelectionEnd(region.getEndOffset());", "+          }", "+        } });", "+      }          "]}], "num": 1660}