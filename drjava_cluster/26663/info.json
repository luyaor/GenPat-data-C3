{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8cadc9e5c8bd79f9d2b69d77c223189", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1713353f1a39bd60dc55f902d7839676", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void testReconstructor() throws IOException", "signatureAfterChange": "      public void testReconstructor() throws IOException", "diff": ["-        return null;", "+        return _saved;", "-    assertTrue(\"The document should start out in the cache\", _cache.isDDocInCache(doc1));", "-    _cache.update(doc1, d);", "-    assertFalse(\"The document should not be in the cache after an update\", _cache.isDDocInCache(doc1)); // force save", "-", "+    assertFalse(\"The document should not be in the cache\", _adapterTable.get(doc1).isReady());", "+    _saved = _adapterTable.get(doc1).getDocument();", "+    assertTrue(\"The document should be in the cache\", _adapterTable.get(doc1).isReady());", "-    _cache.get(doc1); // force the cache to reconstruct the document.", "+    _adapterTable.get(doc1).setReconstructor(d);", "+    assertFalse(\"The document should not be in the cache after an update\", _adapterTable.get(doc1).isReady());", "+    ", "+    _adapterTable.get(doc1).getDocument(); // force the cache to reconstruct the document.", "-    assertEquals(\"The make in the reconstructor was called once\", 1, _doc_made);", "-    assertEquals(\"The save in the reconstructor was called once\", 1, _doc_saved);", "+    assertEquals(\"The make in the reconstructor was called 1nce\", 1, _doc_made);", "+    assertEquals(\"The save in the reconstructor was not called\", 0, _doc_saved);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd4872450301b73715b35ce190b9e8d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testGetDDocFromCache() throws BadLocationException, IOException, OperationCanceledException", "signatureAfterChange": "      public void testGetDDocFromCache() throws BadLocationException, IOException, OperationCanceledException", "diff": ["-    assertTrue(\"The document should not start out in the cache\", _cache.isDDocInCache(doc1));", "+    assertTrue(\"The document should not start out in the cache\", _adapterTable.get(doc1).isReady());", "-    assertTrue(\"The document should not start out in the cache\", _cache.isDDocInCache(doc2));", "+    assertTrue(\"The document should not start out in the cache\", _adapterTable.get(doc2).isReady());", "-    assertTrue(\"The document should not start out in the cache\", _cache.isDDocInCache(doc3));", "+    assertTrue(\"The document should not start out in the cache\", _adapterTable.get(doc3).isReady());", "-    assertTrue(\"The document should not start out in the cache\", _cache.isDDocInCache(doc4));", "+    assertTrue(\"The document should not start out in the cache\", _adapterTable.get(doc4).isReady());", "-    assertTrue(\"The document should not start out in the cache\", _cache.isDDocInCache(doc5));", "-    assertFalse(\"The document should not start out in the cache\", _cache.isDDocInCache(doc1));", "+    assertTrue(\"The document should not start out in the cache\", _adapterTable.get(doc5).isReady());", "+    assertFalse(\"The document should not start out in the cache\", _adapterTable.get(doc1).isReady());", "-    assertTrue(\"The document should not start out in the cache\", _cache.isDDocInCache(doc6));", "-    assertFalse(\"The document should not start out in the cache\", _cache.isDDocInCache(doc2));", "+    assertTrue(\"The document should not start out in the cache\", _adapterTable.get(doc6).isReady());", "+    assertFalse(\"The document should not start out in the cache\", _adapterTable.get(doc2).isReady());"]}], "num": 26663}