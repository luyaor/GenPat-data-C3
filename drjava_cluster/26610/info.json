{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "668a1cb5431be56413d3249f81c3d762", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b46a923958d0da361a40a90feff620d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "68fac9302e6b2358c3b67dbd6346f2e01189b049", "commitAfterChange": "844c5b5a76f593d88002386f7e1c5749ae206027", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void addInterpreter(String name)", "signatureAfterChange": "   public void addInterpreter(String name)", "diff": ["-    if (_interpreters.containsKey(name)) {", "-      throw new IllegalArgumentException(\"'\" + name + \"' is not a unique interpreter name\");", "+    synchronized(_stateLock) {", "+      if (isInterpreterName(name)) {", "+        throw new IllegalArgumentException(\"'\" + name + \"' is not a unique interpreter name\");", "+      }", "+      Interpreter i = new Interpreter(_interpreterOptions, _interpreterLoader);", "+      putInterpreter(name, i);", "-    Interpreter i = new Interpreter(_interpreterOptions, _interpreterLoader);", "-    _interpreters.put(name, i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "768d199798238e8bbca798eea94b03b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "68fac9302e6b2358c3b67dbd6346f2e01189b049", "commitAfterChange": "844c5b5a76f593d88002386f7e1c5749ae206027", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public synchronized Pair<Boolean, Boolean> setActiveInterpreter(String name)", "signatureAfterChange": "   public Pair<Boolean, Boolean> setActiveInterpreter(String name)", "diff": ["-  public synchronized Pair<Boolean, Boolean> setActiveInterpreter(String name) {", "-    Interpreter i = _interpreters.get(name);", "-    if (i == null) { throw new IllegalArgumentException(\"Interpreter '\" + name + \"' does not exist.\"); }", "-    boolean changed = (i != _activeInterpreter.second());", "-    _activeInterpreter = Pair.make(name, i);", "-    return Pair.make(changed, _busyInterpreters.contains(i));", "+  public Pair<Boolean, Boolean> setActiveInterpreter(String name) {", "+    synchronized(_stateLock) {", "+      Interpreter i = getInterpreter(name);", "+      if (i == null) { throw new IllegalArgumentException(\"Interpreter '\" + name + \"' does not exist.\"); }", "+      boolean changed = (i != _activeInterpreter.second());", "+      _activeInterpreter = Pair.make(name, i);", "+      return Pair.make(changed, isBusyInterpreter(i));", "+    }"]}], "num": 26610}