{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fea64237c17c60ad55ba6e5cea80fcae", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "085336e50d3ddeb68bd3be6e77ac27b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "37dab6b79fc3d4e6f7b2b5f0aa53a4ea9b7f7476", "commitAfterChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public synchronized void toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean enabled)      throws DebugException", "signatureAfterChange": "   public synchronized void toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean enabled)      throws DebugException", "diff": ["-    if (breakpoint == null)  setBreakpoint(new Breakpoint (doc, offset, lineNum, enabled, this));", "+    if (breakpoint == null) {", "+      if (doc.getLineStartPos(offset) == doc.getLineEndPos(offset)) {", "+        printMessage(\"Cannot set a breakpoint on an empty line.\");", "+      }", "+      else {", "+        try {", "+          setBreakpoint(new Breakpoint (doc, offset, lineNum, enabled, this));", "+        }", "+        catch(LineNotExecutableException lnee) {", "+          printMessage(lnee.getMessage());", "+        }", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd678f5a8460166dec42fd04cf9cb5cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "9297bd3255995599281a9a548fcd6e849eecaf7b", "commitAfterChange": "b8d26b54d9d0d791e5e97a6dd352ae0f9f5f3b20", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public boolean toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean isEnabled)      throws DebugException", "signatureAfterChange": "   public boolean toggleBreakpoint(OpenDefinitionsDocument doc, int offset, boolean isEnabled)      throws DebugException", "diff": ["-  public boolean toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean isEnabled) ", "+  public boolean toggleBreakpoint(OpenDefinitionsDocument doc, int offset, boolean isEnabled) ", "-          setBreakpoint(new JPDABreakpoint(doc, offset, lineNum, isEnabled, this));", "+          setBreakpoint(new JPDABreakpoint(doc, offset, isEnabled, this));", "-          Utilities.show(lne.getMessage());", "+          Utilities.showMessageBox(lne.getMessage(), \"Error Toggling Breakpoint\");"]}], "num": 9561}