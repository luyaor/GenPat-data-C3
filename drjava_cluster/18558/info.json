{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf21a46438e70a7af91fb0f9c7f235de", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "075795e490290a268c5cc4980ed2380a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileBuilder.java", "commitBeforeChange": "314c962d7f6ed2c6b00f5edc6e764b582b016016", "commitAfterChange": "3b2b8c4279d3d3c19a0254256362d4d46aeeddaf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public String getProjectPath()", "signatureAfterChange": "   private static String replaceAll(String str, String toReplace, String replacement)", "diff": ["-  public String getProjectPath() {", "-    return _projectPath;", "+   */", "+  private static String replaceAll(String str, String toReplace, String replacement) {", "+    String result = str;", "+    int i = result.indexOf(toReplace); ", "+    while (i >= 0) {", "+      result = result.substring(0,i) + replacement + result.substring(i+1);", "+      i = result.indexOf(toReplace, i + replacement.length());", "+    }", "+    return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad0424b4f75695f963b50ec1fab1fb47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/AbstractLog.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   protected String formatLocation(StackTraceElement location)", "signatureAfterChange": "   protected String formatLocation(StackTraceElement location)", "diff": ["-    return location.toString();", "+    StringBuilder result = new StringBuilder();", "+    result.append(location.getClassName());", "+    result.append(\".\");", "+    result.append(location.getMethodName());", "+    result.append(\"(\");", "+    int line = location.getLineNumber();", "+    if (line >= 0) { result.append(line); }", "+    else if (location.isNativeMethod()) { result.append(\"native\"); }", "+    else { result.append(\"unknown\"); }", "+    result.append(\")\");", "+    return result.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c84695c1459158cde16b05ac9e651fe5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/MovingDocumentRegion.java", "commitBeforeChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "commitAfterChange": "2d393792d3779835588c185ebb45db67c3e34dc4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public String getString()", "signatureAfterChange": "   public String getString()", "diff": ["-  public String getString() { return _string; }", "+  public String getString() { ", "+    StringBuilder result = new StringBuilder(120);", "+    result.append(_stringSuspension.eval()); ", "+    int length = result.length();", "+//    if (length < 120) result.append(AbstractDJDocument.getBlankString(120 - length));", "+//    result.setLength(120);  // pads on right with null characters", "+    return result.toString();", "+  }"]}], "num": 18558}