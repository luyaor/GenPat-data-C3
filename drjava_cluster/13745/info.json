{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4abb759ea8e20400ef25698b692a38a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bfe1f63c6fd31dc4b0eac13f4a2d8f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "eee347fd3fa2c22c95183dc23b859e14d297bb1b", "commitAfterChange": "a72aa0a4c1f252999ab0a9a3163ec82bfbbfaea2", "methodNumberBeforeChange": 505, "methodNumberAfterChange": 531, "signatureBeforeChange": "     public void setEnabled(boolean b)", "signatureAfterChange": "         public void availabilityChanged(boolean available)", "diff": ["-    /** Do not change the decoree's enabled flag, but cache this value in the shallow enabled flag. */", "-    public void setEnabled(boolean b) { _shallowEnabled = b; }", "+      _guiAvailabilityNotifier.addListener(new ConjoinedGUIAvailabilityListener(_guiAvailabilityNotifier, c) {", "+        public void availabilityChanged(boolean available) {", "+          button.setText(c.toString()+\" \"+_guiAvailabilityNotifier.getCount(c));", "+          button.setSelected(available);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa6122d7eaaa02c782c2e53b30dd632f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "295fa1cba44642fedd75887ecbe0d948c2375de0", "commitAfterChange": "9cb55009db1cb8bd2aab8df62ce303060f475c4b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void setKeyBindingManager(KeyBindingManager keyBindingManager)", "signatureAfterChange": "         public void actionPerformed( ActionEvent ae )", "diff": ["-  public void setKeyBindingManager(KeyBindingManager keyBindingManager) {", "-    _keyBindingManager = keyBindingManager;", "-  }", "+      watchpointItem.addActionListener( new AbstractAction() {", "+        public void actionPerformed( ActionEvent ae ) {", "+          //Make sure that the watchpoint is set on the *clicked* line, if within a selection block.", "+          setCaretPosition(viewToModel(_popupMenuMA.getLastMouseClick().getPoint()));", "+          _mainFrame.addWatchpoint();", "+        }"]}], "num": 13745}