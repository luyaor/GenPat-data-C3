{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34d1abc9f2bbbf9915403e4208173d50", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bd69d33b07bafe74fb5197965aebbf3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalEventNotifier.java", "commitBeforeChange": "8cfaf2efb8ae59b79b9538e0bd5eaf251c6db08b", "commitAfterChange": "b732820bc2f8849bda78001b782e555a753cad1e", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public void junitStarted(List<OpenDefinitionsDocument> docs)", "signatureAfterChange": "   public void junitStarted()", "diff": ["-  /** Called after JUnit is started by the GlobalModel. */", "-  public void junitStarted(List<OpenDefinitionsDocument> docs) {", "-    try { for (GlobalModelListener l : _listeners) { l.junitStarted(docs); } }", "+  /** Called after JUnit is started by the GlobalModel. */", "+  public void junitStarted() {", "+    _lock.startRead();", "+    try { for (GlobalModelListener l : _listeners) { l.junitStarted(); } }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a3771d64aba2b8eee8283aa8b5d8f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitEventNotifier.java", "commitBeforeChange": "8cfaf2efb8ae59b79b9538e0bd5eaf251c6db08b", "commitAfterChange": "b732820bc2f8849bda78001b782e555a753cad1e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void junitStarted(List<OpenDefinitionsDocument> docs)", "signatureAfterChange": "   public void junitStarted()", "diff": ["-   */", "-  public void junitStarted(List<OpenDefinitionsDocument> docs) {", "-    try { for (JUnitListener jul : _listeners) { jul.junitStarted(docs); } }", "+  /** Called after junit/junitAll is started by the GlobalModel. */", "+  public void junitStarted() {", "+    _lock.startRead();", "+    try { for (JUnitListener jul : _listeners) { jul.junitStarted(); } }"]}], "num": 109}