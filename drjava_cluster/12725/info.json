{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "913516544b8ca6ee09986f38c4947477", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52f7d45d7aeabd7f0ecbee5bf894d60a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "   protected VariableData[] _variableDeclaration2VariableData(VariableDeclaration vd, Data enclosingData)", "signatureAfterChange": "   protected VariableData[] _variableDeclaration2VariableData(VariableDeclaration vd, Data enclosingData)", "diff": ["-        StringBuffer s = new StringBuffer(\"the keyword(s) \");", "+        StringBuilder s = new StringBuilder(\"the keyword(s) \");", "-        for (int j = 0; j<modifiers.length; j++) {s.append(\"\\\"\" + modifiers[j] + \"\\\" \");}", "-        _addAndIgnoreError(\"You cannot use \" + s + \"to declare a local variable at the Intermediate level\", vd);", "+        for (String m: modifiers) { if (! m.equals(\"final\")) s.append(\"\\\"\" + m + \"\\\" \");}", "+        _addAndIgnoreError(\"You cannot use \" + s + \"to declare a local variable\", vd);", "-", "+//    System.err.println(\"Return VariableDatas \" + vds);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a102620fa58d486a370f2a82b428a521", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ProcessCreator.java", "commitBeforeChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "commitAfterChange": "ec06880aa408b928b2f252538b208a76154d8334", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public String cmdline()", "signatureAfterChange": "   public String cmdline()", "diff": ["-   */", "+    */", "-    return _cmdline;", "+    if (_cmdline==null) {", "+      if (_cachedCmdLine==null) {", "+        StringBuilder sb = new StringBuilder();", "+        for (int i=0; i<_cmdarray.length; ++i) {", "+          sb.append(\" \");", "+          sb.append(StringOps.unescapeSpacesWith1bHex(_cmdarray[i]));", "+        }", "+        _cachedCmdLine = sb.toString();", "+        if (_cachedCmdLine.length()>0) {", "+          _cachedCmdLine = _cachedCmdLine.substring(1);", "+        }", "+      }", "+      return _cachedCmdLine;", "+    }", "+    else {", "+      return _cmdline;", "+    }"]}], "num": 12725}