{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e12322330475b722474653d65d73562", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fd9e1b374294de0a2e5825a4786836b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "5497ac60fa563e6e67c580081d99fbd842e52332", "commitAfterChange": "5fa866685226be5aebbebdfba9d7d34d29108e50", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public int getLineEndPos(final int pos)", "signatureAfterChange": "   public int getLineEndPos(final int pos)", "diff": ["-    synchronized(_reduced) {", "-      int location = _currentLocation;", "-      _reduced.move(pos - location);", "-      dist = _reduced.getDistToNextNewline();", "-      _reduced.move(location - pos);", "+    readLock();", "+    try {", "+      synchronized(_reduced) {", "+        int location = _currentLocation;", "+        _reduced.move(pos - location);", "+        dist = _reduced.getDistToNextNewline();", "+        _reduced.move(location - pos);", "+      }", "+    finally { readUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df2b82297c6b410f0020436d82c00885", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   private void _indentBlock(final int start, final int end, int reason, ProgressMonitor pm)     throws OperationCanceledException, BadLocationException", "signatureAfterChange": "   private void _indentBlock(final int start, final int end, int reason, ProgressMonitor pm)     throws OperationCanceledException, BadLocationException", "diff": ["-      // We currently ignore current location info from each line, because", "-      // it probably doesn't make sense in a block context.", "-      _indentLine(reason);", "+      // We ignore current location info from each line, because it probably doesn't make sense in a block context.", "+      _indentLine(reason);  // this operation is atomic", "-      walker += _reduced.getDistToNextNewline() + 1;", "+      synchronized(_reduced) {", "+        walker += _reduced.getDistToNextNewline() + 1;", "+      }"]}], "num": 1922}