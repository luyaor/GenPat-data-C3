{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d2e0986277657efcb45b3859b6a11ff", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28203847110c0a8567a2fd57013c7917", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/RMIInteractionsModel.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   private void _updateDocument(String prompt, boolean inProgress, boolean updatePrompt)", "signatureAfterChange": "   private void _updateDocument(final String prompt, final boolean inProgress, boolean updatePrompt)", "diff": ["-  private void _updateDocument(String prompt, boolean inProgress, boolean updatePrompt) {", "+  private void _updateDocument(final String prompt, final boolean inProgress, boolean updatePrompt) {", "-      int len = 0;", "-      _document.acquireWriteLock();", "-      try {", "-        _document.setPrompt(prompt);", "-        _document.insertNewline(_document.getLength());", "-        _document.insertPrompt();", "-        len = _document.getPromptLength();  // updates the interactions pane!", "-      }", "-      finally { _document.releaseWriteLock(); }", "-      advanceCaret(len);", "-    }", "-    _document.setInProgress(inProgress);", "+      Utilities.invokeLater(new Runnable() {", "+        public void run() {", "+          _document.acquireWriteLock();", "+          try {", "+            _document.setPrompt(prompt);", "+            _document.insertNewline(_document.getLength());", "+            _document.insertPrompt();", "+            int len = _document.getPromptLength();  ", "+//            advanceCaret(len);", "+            _document.setInProgress(inProgress);", "+          }", "+          finally { _document.releaseWriteLock(); }", "+        }", "+      });", "+      scrollToCaret();", "+    }   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79312dfc163a984542fce7ac6bf644e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/MatchWholeWordState.java", "commitBeforeChange": "82f2ed0c10073d0b45d405a9ea26c9aa3f37c661", "commitAfterChange": "6bfab9f5cad6f12d0935dd59b83d99bfc86909eb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    private int indexOf(String str, String findword, int fromIndex)", "signatureAfterChange": "     private int indexOf(String str, String findword, int fromIndex)", "diff": ["-  private int indexOf(String str, String findword, int fromIndex) {", "+   private int indexOf(String str, String findword, int fromIndex) {", "-      if (_matchCase) {", "-        return str.indexOf(findword, fromIndex);", "-      }", "-      else {", "-        String lowerstr = str.toLowerCase();", "-        String lowerfindword = findword.toLowerCase();", "-        return lowerstr.indexOf(lowerfindword, fromIndex);", "-      }", "+      if (_matchCase) return str.indexOf(findword, fromIndex);", "+      String lowerstr = str.toLowerCase();", "+      String lowerfindword = findword.toLowerCase();", "+      return lowerstr.indexOf(lowerfindword, fromIndex);", "-    else {", "-      if (_matchCase) {", "-        return str.lastIndexOf(findword, fromIndex);", "-      }", "-      else {", "-        String lowerstr = str.toLowerCase();", "-        String lowerfindword = findword.toLowerCase();", "-        return lowerstr.lastIndexOf(lowerfindword, fromIndex);", "-      }", "-    }", "+    if (_matchCase) return str.lastIndexOf(findword, fromIndex);", "+    String lowerstr = str.toLowerCase();", "+    String lowerfindword = findword.toLowerCase();", "+    return lowerstr.lastIndexOf(lowerfindword, fromIndex);"]}], "num": 6641}