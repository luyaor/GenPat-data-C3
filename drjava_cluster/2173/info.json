{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f2ae8445e314f4b9cbd6dc7b8f8953d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f19135e7b460f33d5eb2cc9e87f8489", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsScriptModel.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void nextInteraction()", "signatureAfterChange": "   public void nextInteraction()", "diff": ["-   */", "+  /** Enters the next interaction into the interactions pane. Should only run in the event thread. */", "-    if (!hasNextInteraction()) {", "-      throw new IllegalStateException(\"There is no next interaction!\");", "+    _doc.acquireWriteLock();", "+    try {", "+      if (! hasNextInteraction()) { throw new IllegalStateException(\"There is no next interaction!\"); }", "+      _currentInteraction++;", "+      _showCurrentInteraction();", "+      _passedCurrent = false;", "-    _currentInteraction++;", "-    _showCurrentInteraction();", "-    _passedCurrent = false;", "+    finally { _doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a285913b651592aa28b44adb4fb1362", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsScriptModel.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void prevInteraction()", "signatureAfterChange": "   public void prevInteraction()", "diff": ["-   */", "+  /** Enters the previous interaction into the interactions pane. Should only run in the event thread. */", "-    if (!hasPrevInteraction()) {", "-      throw new IllegalStateException(\"There is no previous interaction!\");", "+    _doc.acquireWriteLock();", "+    try {", "+      if (!hasPrevInteraction()) {", "+        throw new IllegalStateException(\"There is no previous interaction!\");", "+      }", "+      // Only move back if we haven't passed the current interaction", "+      if (!_passedCurrent)  _currentInteraction--;", "+      _showCurrentInteraction();", "+      _passedCurrent = false;", "-    // Only move back if we haven't passed the current interaction", "-    if (!_passedCurrent) {", "-      _currentInteraction--;", "-    }", "-    _showCurrentInteraction();", "-    _passedCurrent = false;", "+    finally { _doc.releaseWriteLock(); }"]}], "num": 2173}