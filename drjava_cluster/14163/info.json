{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "840fc48d017594bdd13f17d305a6bd86", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5654b4ae042d72c8a856c9c93da3f7a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public static <T> SizedIterable<T> makeIterable(T v1, T v2, T v3, T v4, T v5, T v6, T v7)", "signatureAfterChange": "   public static <T> SizedIterable<T> make(T v1, T v2, T v3, T v4, T v5)", "diff": ["+  /** Create an immutable SizedIterable containing the given values. */", "+  public static <T> SizedIterable<T> make(T v1, T v2, T v3, T v4, T v5) {", "+    @SuppressWarnings(\"unchecked\") T[] values = (T[]) new Object[]{ v1, v2, v3, v4, v5 };", "+    return new ObjectArrayWrapper<T>(values);", "+  }", "-  /** Create an immutable SizedIterable containing the given values */", "-  public static <T> SizedIterable<T> makeIterable(T v1, T v2, T v3, T v4, T v5, T v6, T v7) {", "-    SizedIterable<T> result = SingletonIterable.make(v1);", "-    result = ComposedIterable.make(result, v2);", "-    result = ComposedIterable.make(result, v3);", "-    result = ComposedIterable.make(result, v4);", "-    result = ComposedIterable.make(result, v5);", "-    result = ComposedIterable.make(result, v6);", "-    result = ComposedIterable.make(result, v7);", "-    return result;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f20a01450dbe4086e54c8e1cf76b9d58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public static <T> SizedIterable<T> makeIterable(T v1, T v2, T v3, T v4, T v5, T v6, T v7,                                                    T v8)", "signatureAfterChange": "   public static <T> SizedIterable<T> make(T v1, T v2, T v3, T v4)", "diff": ["+  /** Create an immutable SizedIterable containing the given values. */", "+  public static <T> SizedIterable<T> make(T v1, T v2, T v3, T v4) {", "+    @SuppressWarnings(\"unchecked\") T[] values = (T[]) new Object[]{ v1, v2, v3, v4 };", "+    return new ObjectArrayWrapper<T>(values);", "+  }", "-  /** Create an immutable SizedIterable containing the given values */", "-  public static <T> SizedIterable<T> makeIterable(T v1, T v2, T v3, T v4, T v5, T v6, T v7, ", "-                                                  T v8) {", "-    SizedIterable<T> result = SingletonIterable.make(v1);", "-    result = ComposedIterable.make(result, v2);", "-    result = ComposedIterable.make(result, v3);", "-    result = ComposedIterable.make(result, v4);", "-    result = ComposedIterable.make(result, v5);", "-    result = ComposedIterable.make(result, v6);", "-    result = ComposedIterable.make(result, v7);", "-    result = ComposedIterable.make(result, v8);", "-    return result;", "-  }"]}], "num": 14163}