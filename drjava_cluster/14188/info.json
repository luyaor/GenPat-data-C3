{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a902ff84d09978b8f909312e91739776", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ad1199d8ba0513ccb54d8c9345c86d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 56, "signatureBeforeChange": "     public void removeFromDebugger()", "signatureAfterChange": "     public void removeFromDebugger()", "diff": ["-      if (_debugger.isAvailable() && (_debugger.isReady())) {", "-        try {", "-          while (_breakpoints.size() > 0) {", "-            _debugger.removeBreakpoint(_breakpoints.get(0));", "-          }", "-        }", "-        catch (DebugException de) {", "-          // Shouldn't happen if debugger is active", "-          throw new UnexpectedException(de);", "-        }", "+      while (getBreakpointManager().getRegions().size() > 0) {", "+        Breakpoint bp = getBreakpointManager().getRegions().get(0);", "+        getBreakpointManager().removeRegion(bp);", "-      else clearBreakpoints();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3a4407494fb62dd7dbb33f24a4d1c65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "commitAfterChange": "eb9337b4d6e2d2de4c1774413f08dfb947ae389c", "methodNumberBeforeChange": 360, "methodNumberAfterChange": 360, "signatureBeforeChange": "          private void _fileOpened(final OpenDefinitionsDocument doc)", "signatureAfterChange": "          private void _fileOpened(final OpenDefinitionsDocument doc)", "diff": ["-        if(! _model.isProjectFile(f))", "+        if (! _model.isProjectFile(f)) {", "+          if (_model.isInProjectPath(doc)) _model.setProjectChanged(true);", "+        }", "-      catch (IllegalStateException ise) {", "-        // Impossible: opened => has a file", "-        throw new UnexpectedException(ise);", "-      }", "+      catch (IllegalStateException ise) { throw new UnexpectedException(ise); } /* impossible */", "-        if(! _model.isProjectFile(f))", "-          _recentFileManager.updateOpenFiles(f);", "+        if (! _model.isProjectFile(f)) _recentFileManager.updateOpenFiles(f);"]}], "num": 14188}