{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7f181f841a0ee537cc5839dbc388fc4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2c308c9b1091f96b368c94534bf1bbb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "commitAfterChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public int findPrevEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "signatureAfterChange": "   public int findPrevEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "diff": ["-    if ((pos >= getLength()) || (pos == DOCSTART)) { return ERROR_INDEX; }", "+    if (pos >= getLength() || pos == DOCSTART) { return ERROR_INDEX; }", "-    acquireReadLock();", "-    try {", "-      String text = getText(DOCSTART, pos);", "+    String text = getText(DOCSTART, pos);", "+    ", "+    synchronized(_reduced) {", "+      final int origLocation = _currentLocation;", "+      // Move reduced model to location pos", "+      _reduced.move(pos - origLocation);  // reduced model points to pos == reducedPos", "-      synchronized(_reduced) {", "-        final int origLocation = _currentLocation;", "-        // Move reduced model to location pos", "-        _reduced.move(pos - origLocation);  // reduced model points to pos == reducedPos", "+      // Walk backwards from specificed position", "+      for (i = pos-1; i >= DOCSTART; i--) {", "+        /* Invariant: reduced model points to reducedPos, text[i+1:pos] contains no valid delims, ", "+         * DOCSTART <= i < reducedPos <= pos */", "-        // Walk backwards from specificed position", "-        for (i = pos-1; i >= DOCSTART; i--) {", "-          /* Invariant: reduced model points to reducedPos, text[i+1:pos] contains no valid delims, ", "-           * DOCSTART <= i < reducedPos <= pos */", "+        if (match(text.charAt(i),delims)) {", "+          // Move reduced model to walker's location", "+          _reduced.move(i - reducedPos);  // reduced model points to i", "+          reducedPos = i;                 // reduced model points to reducedPos", "-          if (match(text.charAt(i),delims)) {", "-            // Move reduced model to walker's location", "-            _reduced.move(i - reducedPos);  // reduced model points to i", "-            reducedPos = i;                 // reduced model points to reducedPos", "-            ", "-            // Check if matching char should be ignored because it is within a comment, ", "-            // quotes, or ignored paren phrase", "-            ReducedModelState state = _reduced.getStateAtCurrent();", "-            if (!state.equals(ReducedModelState.FREE) || _isStartOfComment(text, i)", "-                  || ((i > 0) && _isStartOfComment(text, i - 1)))", "-              continue;  // ignore matching char ", "+          // Check if matching char should be ignored because it is within a comment, ", "+          // quotes, or ignored paren phrase", "+          ReducedModelState state = _reduced.getStateAtCurrent();", "+          if (! state.equals(ReducedModelState.FREE) || _isStartOfComment(text, i) || ", "+              (i > 0 && _isStartOfComment(text, i-1)))", "+            continue;  // ignore matching char ", "+          else {", "+            // found valid matching char", "+            if (text.charAt(i) == closing) ++braceBalance;", "-              // found valid matching char", "-              if (text.charAt(i)==closing) ++braceBalance;", "-              else {", "-                if (braceBalance==0) break; // found our opening brace", "-                --braceBalance;", "-              }", "+              if (braceBalance == 0) break; // found our opening brace", "+              --braceBalance;", "-        ", "-        /* Invariant: same as for loop except that DOCSTART-1 <= i <= reducedPos <= pos */", "-        ", "-        _reduced.move(origLocation - reducedPos);    // Restore the state of the reduced model;", "-      }  // end synchronized", "+      }", "-      if (i == DOCSTART-1) reducedPos = ERROR_INDEX; // No matching char was found", "-      _storeInCache(key, reducedPos);", "-    }", "-    finally { releaseReadLock(); }", "+      /* Invariant: same as for loop except that DOCSTART-1 <= i <= reducedPos <= pos */", "+      ", "+      _reduced.move(origLocation - reducedPos);    // Restore the state of the reduced model;", "+    }  // end synchronized", "+    ", "+    if (i == DOCSTART-1) reducedPos = ERROR_INDEX; // No matching char was found", "+    _storeInCache(key, reducedPos, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de5b82a64118724fdbaff12925de8c80", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "commitAfterChange": "35da9b77b7d75aca3d6277e27e3ba3dc86f3eaa9", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "signatureAfterChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "diff": ["-    // throwErrorHuh();", "-    String text = getText(DOCSTART, pos);", "-    ", "-    synchronized (_reduced) {", "+    readLock();", "+    try {", "+      String text = getText(DOCSTART, pos);", "-      final int origLocation = _currentLocation;", "-      // Move reduced model to location pos", "-      _reduced.move(pos - origLocation);  // reduced model points to pos == reducedPos", "-      ", "-      // Walk backwards from specificed position", "-      for (i = pos-1; i >= DOCSTART; i--) {", "-        /* Invariant: reduced model points to reducedPos, text[i+1:pos] contains no valid delims, ", "-         * DOCSTART <= i < reducedPos <= pos */", "-        // Check if ith character is one of the delimiters", "-        if (match(text.charAt(i),delims)) {", "-           ", "-          // Move reduced model to walker's location", "-          _reduced.move(i - reducedPos);  // reduced model points to i", "-          reducedPos = i;                 // reduced model points to reducedPos", "+      synchronized (_reduced) {", "+        final int origLocation = _currentLocation;", "+        // Move reduced model to location pos", "+        _reduced.move(pos - origLocation);  // reduced model points to pos == reducedPos", "+        ", "+        // Walk backwards from specificed position", "+        for (i = pos-1; i >= DOCSTART; i--) {", "+          /* Invariant: reduced model points to reducedPos, text[i+1:pos] contains no valid delims, ", "+           * DOCSTART <= i < reducedPos <= pos */", "-          // Check if matching char should be ignored because it is within a comment, ", "-          // quotes, or ignored paren phrase", "-          ReducedModelState state = _reduced.getStateAtCurrent();", "-          if (!state.equals(ReducedModelState.FREE) || _isStartOfComment(text, i)", "-                || ((i > 0) && _isStartOfComment(text, i - 1))", "-                || (skipParenPhrases && posInParenPhrase())) {", "-            continue; // ignore matching char", "-          } ", "-          break;  // found valid matching char", "+          if (match(text.charAt(i),delims)) {", "+            // Move reduced model to walker's location", "+            _reduced.move(i - reducedPos);  // reduced model points to i", "+            reducedPos = i;                 // reduced model points to reducedPos", "+            ", "+            // Check if matching char should be ignored because it is within a comment, ", "+            // quotes, or ignored paren phrase", "+            ReducedModelState state = _reduced.getStateAtCurrent();", "+            if (!state.equals(ReducedModelState.FREE) || _isStartOfComment(text, i)", "+                  || ((i > 0) && _isStartOfComment(text, i - 1)) || (skipParenPhrases && posInParenPhrase()))", "+              continue;  // ignore matching char ", "+            else break;  // found valid matching char", "+          }", "-      }", "-      /* Invariant: same as for loop except that DOCSTART-1 <= i <= reducedPos <= pos */", "-      ", "-        // Restore the state of the reduced model;", "-        _reduced.move(origLocation - reducedPos);", "+        ", "+        /* Invariant: same as for loop except that DOCSTART-1 <= i <= reducedPos <= pos */", "+        ", "+        _reduced.move(origLocation - reducedPos);    // Restore the state of the reduced model;", "+      }  // end synchronized", "+    finally { readUnlock(); }", "-    "]}], "num": 7605}