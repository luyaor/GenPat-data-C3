{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1947253b1ef4af31e3a9b5c0e1ea7bb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7b461d8405cd73ca1ff5abd3bcb3222", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testFindPrevDelimiter() throws BadLocationException", "signatureAfterChange": "   public void testFindPrevDelimiter() throws BadLocationException", "diff": ["-                 _doc.findPrevDelimiter(23, delimiters1));", "+                 _findPrevDelimiter(23, delimiters1));", "-                 _doc.findPrevDelimiter(16, delimiters1));", "+                 _findPrevDelimiter(16, delimiters1));", "-                 _doc.findPrevDelimiter(5, delimiters1));", "+                 _findPrevDelimiter(5, delimiters1));", "-                 _doc.findPrevDelimiter(5, delimiters1));", "+                 _findPrevDelimiter(5, delimiters1));", "-                 _doc.findPrevDelimiter(14, delimiters1));", "+                 _findPrevDelimiter(14, delimiters1));", "-                 _doc.findPrevDelimiter(20, delimiters2)); ", "+                 _findPrevDelimiter(20, delimiters2)); ", "-                 _doc.findPrevDelimiter(20, delimiters3));", "+                 _findPrevDelimiter(20, delimiters3));", "-                 _doc.findPrevDelimiter(5, delimiters1));", "+                 _findPrevDelimiter(5, delimiters1));", "-                 _doc.findPrevDelimiter(19, delimiters1));", "+                 _findPrevDelimiter(19, delimiters1));", "-                 _doc.findPrevDelimiter(17, delimiters1));", "+                 _findPrevDelimiter(17, delimiters1));", "-                 _doc.findPrevDelimiter(13, delimiters1));", "+                 _findPrevDelimiter(13, delimiters1));", "-                 _doc.findPrevDelimiter(17, delimiters4));", "+                 _findPrevDelimiter(17, delimiters4));", "-                 _doc.findPrevDelimiter(17, delimiters4));", "+                 _findPrevDelimiter(17, delimiters4));", "-    _doc.findPrevDelimiter(8, delimiters2);", "+    _findPrevDelimiter(8, delimiters2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb2216534ca259169dbb5b41ee3dfd0c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 146, "signatureBeforeChange": "   public static <T> SizedIterable<T> makeIterable(T v1, T v2, T v3, T v4)", "signatureAfterChange": "   public static <T> SizedIterable<T> shuffle(Iterable<T> iter)", "diff": ["+   */", "+  public static <T> SizedIterable<T> shuffle(Iterable<T> iter) {", "+    ArrayList<T> result = asArrayList(iter);", "+    Collections.shuffle(result);", "+    return asIterable(result);", "+  }", "-  /** Create an immutable SizedIterable containing the given values */", "-  public static <T> SizedIterable<T> makeIterable(T v1, T v2, T v3, T v4) {", "-    SizedIterable<T> result = SingletonIterable.make(v1);", "-    result = ComposedIterable.make(result, v2);", "-    result = ComposedIterable.make(result, v3);", "-    result = ComposedIterable.make(result, v4);", "-    return result;", "-  }"]}], "num": 24380}