{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27039f6b92731b3d677a3cb4a1b8223e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d705946c47fadf2111a8176979f47f2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "     public Object visit(PostDecrement node)", "signatureAfterChange": "   public Class visit(PostDecrement node)", "diff": ["+   */", "+  public Class visit(PostDecrement node) {", "+    Node exp = node.getExpression();", "+    Class c  = (Class)exp.acceptVisitor(this);", "+    ", "+    // The type of the subexpression must be numeric", "+    if (!c.isPrimitive()   ||", "+        c == void.class    ||", "+        c == boolean.class) {", "+      throw new ExecutionError(\"post.decrement.type\", node);", "+    }", "+    ", "+    // The subexpression must be a variable", "+    if (!exp.hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"post.decrement.type\", node);", "+    }", "+    ", "+    node.setProperty(NodeProperties.TYPE, c);", "+    return c;", "+  }", "-     */", "-    public Object visit(PostDecrement node) {", "-        Node exp = node.getExpression();", "-        Class c  = (Class)exp.acceptVisitor(this);", "-", "-        // The type of the subexpression must be numeric", "-        if (!c.isPrimitive()   ||", "-            c == void.class    ||", "-            c == boolean.class) {", "-            throw new ExecutionError(\"post.decrement.type\", node);", "-        }", "-", "-        // The subexpression must be a variable", "-        if (!exp.hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"post.decrement.type\", node);", "-        }", "-", "-        node.setProperty(NodeProperties.TYPE, c);", "-        return c;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f15881c22c9abdf370c7a108fe5c7ef4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "     public Object visit(PostIncrement node)", "signatureAfterChange": "   public Class visit(PostIncrement node)", "diff": ["+   */", "+  public Class visit(PostIncrement node) {", "+    Node exp = node.getExpression();", "+    Class c  = (Class)exp.acceptVisitor(this);", "+    ", "+    // The type of the subexpression must be numeric", "+    if (!c.isPrimitive()   ||", "+        c == void.class    ||", "+        c == boolean.class) {", "+      throw new ExecutionError(\"post.increment.type\", node);", "+    }", "+    ", "+    // The subexpression must be a variable", "+    if (!exp.hasProperty(NodeProperties.MODIFIER)) {", "+      throw new ExecutionError(\"post.increment.type\", node);", "+    }", "+    ", "+    node.setProperty(NodeProperties.TYPE, c);", "+    return c;", "+  }", "-     */", "-    public Object visit(PostIncrement node) {", "-        Node exp = node.getExpression();", "-        Class c  = (Class)exp.acceptVisitor(this);", "-", "-        // The type of the subexpression must be numeric", "-        if (!c.isPrimitive()   ||", "-            c == void.class    ||", "-            c == boolean.class) {", "-            throw new ExecutionError(\"post.increment.type\", node);", "-        }", "-", "-        // The subexpression must be a variable", "-        if (!exp.hasProperty(NodeProperties.MODIFIER)) {", "-            throw new ExecutionError(\"post.increment.type\", node);", "-        }", "-", "-        node.setProperty(NodeProperties.TYPE, c);", "-        return c;", "-    }"]}], "num": 29236}