{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4b0dd4b6a74cfb8d5ec114a541898e0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "144adb5284c0c9d55b63b02ee620b79f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "d94a1a3c2d24d89ea1f580460a5e45b2a0d432b1", "commitAfterChange": "bc4c188d4bb72853d1e7e7dbaf76b8f47542385d", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public void testGotoFileUnderCursorShowDialog() throws IOException", "signatureAfterChange": "   public void testGotoFileUnderCursorShowDialog() throws IOException", "diff": ["-    _frame.initGotoFileDialog();", "-    _frame._gotoFileDialog.addWindowListener(new WindowListener() {", "-        public void windowActivated(WindowEvent e) { ++count[0]; }", "-        public void windowClosed(WindowEvent e) { throw new RuntimeException(\"Should not close _gotoFileDialog\"); }", "-        public void windowClosing(WindowEvent e) { throw new RuntimeException(\"Should not be closing _gotoFileDialog\"); }", "-        public void windowDeactivated(WindowEvent e) { throw new RuntimeException(\"Should not deactivate _gotoFileDialog\"); }", "-        public void windowDeiconified(WindowEvent e) { throw new RuntimeException(\"Should not deiconify _gotoFileDialog\"); }", "-        public void windowIconified(WindowEvent e) { throw new RuntimeException(\"Should not iconify _gotoFileDialog\"); }", "-        public void windowOpened(WindowEvent e) { ++count[1]; }", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() { ", "+        _frame.initGotoFileDialog();", "+        _frame._gotoFileDialog.addWindowListener(new WindowListener() {", "+          public void windowActivated(WindowEvent e) { ++count[0]; }", "+          public void windowClosed(WindowEvent e) { throw new RuntimeException(\"Should not close _gotoFileDialog\"); }", "+          public void windowClosing(WindowEvent e) { throw new RuntimeException(\"Should not be closing _gotoFileDialog\"); }", "+          public void windowDeactivated(WindowEvent e) { throw new RuntimeException(\"Should not deactivate _gotoFileDialog\"); }", "+          public void windowDeiconified(WindowEvent e) { throw new RuntimeException(\"Should not deiconify _gotoFileDialog\"); }", "+          public void windowIconified(WindowEvent e) { throw new RuntimeException(\"Should not iconify _gotoFileDialog\"); }", "+          public void windowOpened(WindowEvent e) { ++count[1]; }", "+        });", "+      }", "-    ", "+                            ", "-    _frame._gotoFileUnderCursor();", "-    Utilities.clearEventQueue();  // wait for command to complete", "-    Utilities.clearEventQueue();", "+    Utilities.invokeAndWait(new Runnable() { public void run() { _frame._gotoFileUnderCursor(); } });                    ", "+    Utilities.clearEventQueue();  // wait for any asynchronous actions to complete", "+                            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c4e0bafa7a90cea40d4f96283bb6b03", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected OpenDefinitionsDocument setupDocument(String text) throws BadLocationException", "signatureAfterChange": "   protected OpenDefinitionsDocument setupDocument(final String text) throws BadLocationException", "diff": ["-  protected OpenDefinitionsDocument setupDocument(String text) throws BadLocationException {", "+  protected OpenDefinitionsDocument setupDocument(final String text) throws BadLocationException {", "-//    Utilities.invokeAndWait(new Runnable() { public void run () { ", "-    _doc = _model.newFile(); ", "-//    } });", "+    ", "+    // newFile() accesses and modifies Swing objects", "+    Utilities.invokeAndWait(new Runnable() { public void run () { _doc = _model.newFile(); } });", "-    changeDocumentText(text, _doc);", "+    Utilities.invokeAndWait(new Runnable() { public void run() { changeDocumentText(text, _doc); } });", "+    "]}], "num": 597}