{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5be94a61b6d0dbb45120f640868979bb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3915af39b4ac8ed8d42b9f757f1f1fa4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public Node visit(VariableDeclaration node)", "signatureAfterChange": "   public Node visit(AssertStatement node)", "diff": ["+   */", "+  public Node visit(AssertStatement node) {", "+    //Visits the components of this node", "+    Node n = node.getCondition();", "+    Node o = n.acceptVisitor(this);", "+    if(o != null) {", "+      rejectReferenceType(o,n);", "+      node.setCondition((Expression)o);", "+    }", "+    ", "+    n = node.getFailString();", "+    if(n != null) {", "+      o = n.acceptVisitor(this);", "+      if(o != null) {", "+        node.setFailString((Expression)o);", "+      }", "+    }", "+    return null;    ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd07da2ad33325194aa7bc7185e9ec37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "6d55d86705248616cac5b324a7c528485ceb6104", "commitAfterChange": "d9483f6c228cd09f3431ad6b50a3d96bdaf83832", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      public void testDocumentPaneMemoryLeak()  throws InterruptedException, java.io.IOException", "signatureAfterChange": "      public void testDocumentPaneMemoryLeak()  throws InterruptedException, java.io.IOException", "diff": ["-    // make sure that the event queue is empty (can we explicity test this condition?)", "-    Utilities.clearEventQueue();", "-    Utilities.clearEventQueue();", "+    _ct = 0;", "+    do { _cleanup(); }", "+    while (_finalDocCount != 6 || _finalCount != 6);", "-    System.gc();", "-    Utilities.clearEventQueue(); ", "-    System.runFinalization();", "+    if (_ct > 1) System.err.println(\"testDocumentPaneMemoryLeak required \" + _ct + \" iterations\");", "-    Utilities.clearEventQueue();   ", "-    Utilities.clearEventQueue(); ", "-    ", "-    System.gc();", "-    Utilities.clearEventQueue(); ", "-    System.runFinalization();", "-    Utilities.clearEventQueue(); "]}], "num": 21158}