{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f7fe38fb6e761de605fbc6606610cb0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4528a1e9e47a75d3513bdb82a7142612", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "8f195628c479018f0ebf1ac1d99bf34d28c32416", "commitAfterChange": "27c73ce4c03fdd5ec2bb518a13d37e65a3950316", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void updatelru(OpenDefinitionsDocument odd, Pair<DefinitionsDocument,DDReconstructor> pair)", "signatureAfterChange": "   private void updatelru(OpenDefinitionsDocument odd, Pair<DefinitionsDocument,DDReconstructor> pair)", "diff": ["-      if(!lru.isEmpty() && lru.getFirst() == odd){", "+      if (!lru.isEmpty() && lru.getFirst() == odd) {", "-    ", "-    if(!(isDDocInCache(odd) && pair.getFirst().isModifiedSinceSave())){", "-//      System.out.println(\"adding \" + odd + \" to lru\");", "+     ", "+", "+    if (!(isDDocInCache(odd) && pair.getFirst().isModifiedSinceSave())) {", "+      //      System.out.println(\"adding \" + odd + \" to lru\");", "-", "+    ", "-    if(lru.size() > CACHE_SIZE){", "-      synchronized(lru) {", "+    synchronized(lru) {", "+      if (lru.size() > CACHE_SIZE) {", "-      }", "-      Pair<DefinitionsDocument,DDReconstructor> removedPair = table.get(odd);", "-//      System.out.println(\"should i dispose of \" + odd + \"?\");", "-     ", "-      if(isDDocInCache(odd) && removedPair.getFirst().isModifiedSinceSave()){", "-//        System.out.println(\"no\");", "-      } else {", "-//        System.out.println(\"disposing of \" + odd);", "+        Pair<DefinitionsDocument,DDReconstructor> removedPair = table.get(odd);", "+        //      System.out.println(\"should i dispose of \" + odd + \"?\");", "+        ", "+        if(isDDocInCache(odd) && removedPair.getFirst().isModifiedSinceSave()){", "+          //        System.out.println(\"no\");", "+        } else {", "+          //        System.out.println(\"disposing of \" + odd);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89afc8d61ff8a997d94780289009530f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/HighlightManager.java", "commitBeforeChange": "d884ae55e9471d604870827048329b58394dd950", "commitAfterChange": "28bca5adabaaf178bdf954808155389f93ed51fa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean equals( Object o)", "signatureAfterChange": "     public boolean equals(Object o)", "diff": ["-    public boolean equals( Object o) {", "+    public boolean equals(Object o) {", "-      if (o == null) return false;", "+      if (o == null || ! (o instanceof HighlightInfo)) return false;", "-      if (o instanceof HighlightInfo) {", "-        HighlightInfo obj = (HighlightInfo)o;", "-        /*", "-         //System.out.println(\"p0: \"+p0+\"  obj.p0: \"+obj.p0);", "-         //System.out.println(\"p1: \"+p1+\"  obj.p1: \"+obj.p1);", "-         //System.out.println(\"p: \"+p+\"  obj.p: \"+obj.p);", "-         */", "-        boolean result = getStartOffset() == obj.getStartOffset() && ", "-          getEndOffset() == obj.getEndOffset() &&", "-          getPainter() == obj.getPainter();", "-        ", "-        //System.out.println(\"HighlightInfo.equals() = \"+result);", "-        return result;", "-      }", "-      else return false;", "+      HighlightInfo hi = (HighlightInfo)o;", "+      /*", "+       //System.out.println(\"p0: \"+p0+\"  obj.p0: \"+obj.p0);", "+       //System.out.println(\"p1: \"+p1+\"  obj.p1: \"+obj.p1);", "+       //System.out.println(\"p: \"+p+\"  obj.p: \"+obj.p);", "+       */", "+      boolean result = getStartOffset() == hi.getStartOffset() && ", "+        getEndOffset() == hi.getEndOffset() &&", "+        getPainter() == hi.getPainter();", "+      ", "+      //System.out.println(\"HighlightInfo.equals() = \"+result);", "+      return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a552c8ea389c4d714349f0702737deaa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "1b6ef7c7e1a6439fd1630b14326c67b0978e88ba", "commitAfterChange": "93cff9492f5f66f78081d1bfed6f05eaa775f999", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public FileGroupingState _makeProjectFileGroupingState(final File buildDir, final File projectFile)", "signatureAfterChange": "      public FileGroupingState _makeProjectFileGroupingState(final File buildDir, final File projectFile, final File[] projectFiles)", "diff": ["-  public FileGroupingState _makeProjectFileGroupingState(final File buildDir, final File projectFile) { ", "+  public FileGroupingState _makeProjectFileGroupingState(final File buildDir, final File projectFile, final File[] projectFiles) { ", "-      public boolean isProjectFile(OpenDefinitionsDocument doc){", "+      public boolean isInProjectPath(OpenDefinitionsDocument doc){", "+      }", "+      ", "+      public boolean isProjectFile(File f) {", "+        String path;", "+        ", "+        if (f == null) return false;", "+        ", "+        try{", "+          path = f.getCanonicalPath();", "+        }", "+        catch(IOException ioe) {", "+          return false;", "+        }", "+        ", "+        for(File file : projectFiles) {", "+          try {", "+            if(file.getCanonicalPath().equals(path))", "+              return true;", "+          }", "+          catch(IOException ioe) {", "+            //continue", "+          }", "+        }", "+        return false;", "+      }", "+      ", "+      public File[] getProjectFiles() {", "+        return projectFiles;"]}], "num": 5238}