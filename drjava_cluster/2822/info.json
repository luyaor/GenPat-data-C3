{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f6fc50f54655d2ab7055d80698c5cd9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fdec5a361cd263b9896e9b85d51836c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 179, "signatureBeforeChange": "   public void dispose()", "signatureAfterChange": "   public void dispose()", "diff": ["-  public void dispose() { }", "+  public void dispose() {", "+    synchronized(_documentsRepos) { _documentsRepos.clear(); }", "+    Utilities.invokeLater(new SRunnable() {", "+      public void run() { _documentNavigator.clear(); }  // this operation must run in event thread", "+    });", "+    // Only remove listeners after pending events have completed", "+    SwingUtilities.invokeLater(new Runnable() { public void run() { _notifier.removeAllListeners(); } });", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddf96643acb762da349a01e71abdadf7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CompoundUndoManager.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void _notifyUndoHappened()", "signatureAfterChange": "   private void _notifyUndoHappened()", "diff": ["-  /** Helper method to notify the view that an undoable edit has occured. */", "+   *  the event thread (even if called from event thread) when notification happens. */", "-    Utilities.invokeLater(new Runnable() { public void run() { _notifier.undoableEditHappened(); } });", "+    // Use SwingUtilities.invokeLater so that notification is deferred when running in the event thread.", "+    SwingUtilities.invokeLater(new Runnable() { public void run() { _notifier.undoableEditHappened(); } });"]}], "num": 2822}