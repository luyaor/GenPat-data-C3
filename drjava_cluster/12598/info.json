{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc43ef669f994d31ef4eaac92e099cc2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bfe6128f7c5d3e743b8377ed41c326a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected String interpret(String input) throws EditDocumentException", "signatureAfterChange": "   protected String interpret(String input) throws EditDocumentException", "diff": ["+    ", "-    interactionsDoc.insertText(interactionsDoc.getLength(), input, InteractionsDocument.DEFAULT_STYLE);", "+    Utilities.clearEventQueue();", "+    ", "+    interactionsDoc.setInProgress(false);  // for some reason, the inProgress state can be true when interpret is invoked", "+    interactionsDoc.append(input, InteractionsDocument.DEFAULT_STYLE);", "+    ", "+    Utilities.clearEventQueue();", "-    int newLineLen = System.getProperty(\"line.separator\").length();", "+    final int newLineLen = System.getProperty(\"line.separator\").length();", "-    TestListener listener = new TestListener() {", "-      public void interactionStarted() { interactionStartCount++; }", "-", "-      public void interactionEnded() {", "-        assertInteractionStartCount(1);", "-", "-        synchronized(this) {", "-          interactionEndCount++;", "-          this.notify();", "-        }", "-      }", "-", "-    };", "+    InteractionListener listener = new InteractionListener();", "+    listener.logInteractionStart();", "-      synchronized(listener) {", "-        _model.interpretCurrentInteraction();", "-        listener.wait();  // TODO: fix this naked wait which depends on being executed before interpreter finishes!", "-        ", "- /**///In previous versions of 1.5.0-beta compiler, several tests hang right here, because ", "- /////in DebugContextTest and JavaDebugInterpreterTest, the files that were being tested, ", "- /////for example, MonkeyStuff.java, was being compiled without the -g flag, so debugging was ", "- /////impossible. This happened because of a bug in the 1.5 compiler, which is now fixed in the new", "- /////version.", "-      }", "+      _model.interpretCurrentInteraction();", "+      listener.waitInteractionDone();", "-    catch (InterruptedException ie) {", "-      throw new UnexpectedException(ie);", "-    }", "+    catch (InterruptedException ie) { throw new UnexpectedException(ie); }", "+    Utilities.clearEventQueue();", "+    ", "-    final int resultsEndLocation = interactionsDoc.getLength() - newLineLen -", "-                                   interactionsDoc.getPrompt().length();", "-", "-    final int resultsLen = resultsEndLocation - resultsStartLocation;", "-    //System.out.println(\"resultsStartLoc = \" + resultsStartLocation + \" resultsEndLocation = \" + resultsEndLocation);", "-    // There was no output from this interaction", "-    if (resultsLen <= 0)", "-      return \"\";", "-    return interactionsDoc.getDocText(resultsStartLocation, resultsLen);", "+    interactionsDoc.acquireReadLock();", "+    try {", "+      final int resultsEndLocation = interactionsDoc.getLength() - newLineLen - interactionsDoc.getPrompt().length();", "+      ", "+      final int resultsLen = resultsEndLocation - resultsStartLocation;", "+      //System.out.println(\"resultsStartLoc = \" + resultsStartLocation + \" resultsEndLocation = \" + resultsEndLocation);", "+      // There was no output from this interaction", "+      if (resultsLen <= 0) return \"\";", "+      return interactionsDoc.getDocText(resultsStartLocation, resultsLen);", "+    }", "+    finally { interactionsDoc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d42a7570dab8767696aaee61596defc8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testResetConsole() throws EditDocumentException, InterruptedException", "signatureAfterChange": "   public void testResetConsole() throws EditDocumentException, InterruptedException", "diff": ["-    TestListener listener = new TestListener() {", "-      public void interactionStarted() { }", "-      public void interactionEnded() {", "-        synchronized(_interactionDoneLock) {", "-          interactionEndCount++;", "-//          _interactionDone = true;", "-          _interactionDoneLock.notify();", "-        }", "-      }", "-", "-      public void consoleReset() { consoleResetCount++; }", "-    };", "+    InteractionListener listener = new InteractionListener();", "+    ", "+    listener.logInteractionStart();", "+    Utilities.clearEventQueue();", "+    ", "-//    _interactionDone = false;", "-    synchronized(_interactionDoneLock) {", "-      interpretIgnoreResult(\"System.out.print(\\\"a\\\");\");", "-      _interactionDoneLock.wait();  // notified on interactionEnded", "-    }", "-", "+    ", "+    listener.logInteractionStart();    // only resets the interactionDone and resetDone flags", "+    listener.resetConsoleResetCount(); // resets the resetConsoleCount in the listener", "+    ", "+    interpretIgnoreResult(\"System.out.print(\\\"a\\\");\");", "+    listener.waitInteractionDone();", "+    ", "+    Utilities.clearEventQueue();", "+    ", "-    listener.assertConsoleResetCount(2);", "+    listener.assertConsoleResetCount(1);"]}], "num": 12598}