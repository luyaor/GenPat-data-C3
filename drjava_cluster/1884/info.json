{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39bd860b621b386b9af8bb9c4e0f8623", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42989796cbafe30d9c49b88428ebc478", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "21836dcccd81c2207652ee85b319b723ac9ff10b", "commitAfterChange": "18f7005907576031115bfb0859e7ff6d53506e5e", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 76, "signatureBeforeChange": "   private void _runJava()", "signatureAfterChange": "   private void _runJava()", "diff": ["-", "-    List<String> jvms = new ArrayList<String>();", "-    List<String> cmds = new ArrayList<String>();", "-    if (_jvmLine.getText().trim().length()>0) {", "-      jvms = commandLineToList(replaceVariables(_jvmLine.getText().trim(), _props));", "-    }", "-    if (_javaCommandLine.getText().trim().length()>0) {", "-      cmds = commandLineToList(replaceVariables(_javaCommandLine.getText().trim(), _props));", "-    }", "-    if (jvms.size()+cmds.size()>0) {", "-      ProcessCreator pc = new JVMProcessCreator(jvms, cmds);", "+    if (_javaCommandLinePreview.getText().length()>0) {", "+      ProcessCreator pc = new JVMProcessCreator(_jvmLine.getText(), _javaCommandLine.getText(),", "+                                                _javaCommandWorkDirLine.getText().trim(), _props);", "-      File wd = new File(replaceVariables(_javaCommandWorkDirLine.getText().trim(), _props));", "-      // LOG.log(\"ok. wd = \"+wd);", "-      if ((!_javaCommandWorkDirLine.getText().equals(\"\")) &&", "-          ((!wd.exists()) ||", "-           (!wd.isDirectory()))) {", "-        JOptionPane.showMessageDialog(this,", "-                                      \"The working directory '\"+ wd + \"'\\n\"+", "-                                      \"is invalid because it does not exist.\",", "-                                      \"Invalid Work Directory\", JOptionPane.ERROR_MESSAGE);", "- ", "-        // Always apply and save settings", "-        _saveSettings();", "-        this.setVisible(false);", "-        return;", "-      }", "-      else {", "-        // LOG.log(\"setting!\");", "-        pc.setDir(wd);", "-      }", "-      if (cmds.size()>0) { name += \": \"+cmds.get(0); }", "-      if ((_javaCommandLinePreview.getText().length()>0) &&", "-          (_jvmLine.getText().length()>0)) {", "-        JOptionPane.showMessageDialog(this,", "-                                      \"Could not separate command line into individual parts.\",", "-                                      \"Invalid Command Line\",", "-                                      JOptionPane.ERROR_MESSAGE);", "-      }", "-      else {", "-        JOptionPane.showMessageDialog(this,", "-                                      \"Empty command line.\",", "-                                      \"Invalid Command Line\",", "-                                      JOptionPane.ERROR_MESSAGE);", "-      }", "+      JOptionPane.showMessageDialog(this,", "+                                    \"Empty command line.\",", "+                                    \"Invalid Command Line\",", "+                                    JOptionPane.ERROR_MESSAGE);", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c94b59de090848d6a54561974515f741", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "21836dcccd81c2207652ee85b319b723ac9ff10b", "commitAfterChange": "18f7005907576031115bfb0859e7ff6d53506e5e", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 73, "signatureBeforeChange": "   private void _runCommand()", "signatureAfterChange": "   private void _runCommand()", "diff": ["-", "-    List<String> cmds = commandLineToList(replaceVariables(_commandLine.getText(), _props));", "-    if (cmds.size()>0) {", "-      ProcessCreator pc = new ProcessCreator(cmds.toArray(new String[cmds.size()]));", "-      File wd = new File(replaceVariables(_commandWorkDirLine.getText().trim(), _props));", "-      // LOG.log(\"ok. wd = \"+wd);", "-      if ((!_commandWorkDirLine.getText().equals(\"\")) &&", "-          ((!wd.exists()) ||", "-           (!wd.isDirectory()))) {", "-        JOptionPane.showMessageDialog(this,", "-                                      \"The working directory '\"+ wd + \"'\\n\"+", "-                                      \"is invalid because it does not exist.\",", "-                                      \"Invalid Work Directory\", JOptionPane.ERROR_MESSAGE);", "- ", "-        // Always apply and save settings", "-        _saveSettings();", "-        this.setVisible(false);", "-        return;", "-      }", "-      else {", "-        // LOG.log(\"setting!\");", "-        pc.setDir(wd);", "-      }", "+    if (_commandLinePreview.getText().length()>0) {", "+      ProcessCreator pc = new ProcessCreator(_commandLine.getText(), _commandWorkDirLine.getText().trim(), _props);", "-      if (cmds.size()>0) { name += \": \"+cmds.get(0); }", "-      if (_commandLinePreview.getText().length()>0) {", "-        JOptionPane.showMessageDialog(this,", "-                                      \"Could not separate command line into individual parts.\",", "-                                      \"Invalid Command Line\",", "-                                      JOptionPane.ERROR_MESSAGE);", "-      }", "-      else {", "-        JOptionPane.showMessageDialog(this,", "-                                      \"Empty command line.\",", "-                                      \"Invalid Command Line\",", "-                                      JOptionPane.ERROR_MESSAGE);", "-      }", "+      JOptionPane.showMessageDialog(this,", "+                                    \"Empty command line.\",", "+                                    \"Invalid Command Line\",", "+                                    JOptionPane.ERROR_MESSAGE);"]}], "num": 1884}