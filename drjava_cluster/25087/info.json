{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c893e39872129d435087c5ea9a6cce04", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "613838d0df8f47803d6977e0a29929a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 65, "signatureBeforeChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "diff": ["-                       new BooleanOptionComponent(OptionConstants.SHOW_UNCHECKED_WARNINGS, \"Show Unchecked Warnings\", this, ", "-                                                  \"<html>Warn about unchecked conversions involving parameterized types.</html>\", false)", "+                       newBooleanOptionComponent(OptionConstants.SHOW_UNCHECKED_WARNINGS, false)", "-                       new BooleanOptionComponent(OptionConstants.SHOW_DEPRECATION_WARNINGS, \"Show Deprecation Warnings\", this, ", "-                                                  \"<html>Warn about each use or override of a deprecated method, field, or class.</html>\", false)", "+                       newBooleanOptionComponent(OptionConstants.SHOW_DEPRECATION_WARNINGS, false)", "-                       new BooleanOptionComponent(OptionConstants.SHOW_PATH_WARNINGS, \"Show Path Warnings\", this, ", "-                                                  \"<html>Warn about nonexistent members of the classpath and sourcepath.</html>\", false)", "+                       newBooleanOptionComponent(OptionConstants.SHOW_PATH_WARNINGS, false)", "-                       new BooleanOptionComponent(OptionConstants.SHOW_SERIAL_WARNINGS, \"Show Serial Warnings\", this, ", "-                                                  \"<html>Warn about missing <code>serialVersionUID</code> definitions on serializable classes.</html>\", ", "-                                                  false)", "+                       newBooleanOptionComponent(OptionConstants.SHOW_SERIAL_WARNINGS,false)", "-                       new BooleanOptionComponent(OptionConstants.SHOW_FINALLY_WARNINGS, \"Show Finally Warnings\", this,", "-                                                  \"<html>Warn about <code>finally</code> clauses that cannot complete normally.</html>\", false)", "+                       newBooleanOptionComponent(OptionConstants.SHOW_FINALLY_WARNINGS, false)", "-                       new BooleanOptionComponent(OptionConstants.SHOW_FALLTHROUGH_WARNINGS, \"Show Fall-Through Warnings\", this,", "-                                                  \"<html>Warn about <code>switch</code> block cases that fall through to the next case.</html>\", ", "-                                                  false)", "+                       newBooleanOptionComponent(OptionConstants.SHOW_FALLTHROUGH_WARNINGS, false)", "-    final ForcedChoiceOptionComponent CPC = new ForcedChoiceOptionComponent(OptionConstants.COMPILER_PREFERENCE_CONTROL.evaluate(), \"Compiler Preference\", ", "-                         this,", "-                         \"Which compiler is prefered?\");", "+    final ForcedChoiceOptionComponent CPC =", "+      newForcedChoiceOptionComponent(OptionConstants.COMPILER_PREFERENCE_CONTROL.evaluate());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "829c7d456dc994d1ad6a052914bddff6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 70, "signatureBeforeChange": "   private void _setupJUnitPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupJUnitPanel(ConfigPanel panel)", "diff": ["-      new BooleanOptionComponent(OptionConstants.JUNIT_LOCATION_ENABLED, \"Use external JUnit\", this,", "-                                 \"<html>If this is enabled, DrJava will use the JUnit configured<br>\"+", "-                                 \"below under 'JUnit/ConcJUnit Location'. If it is disabled,<br>\"+", "-                                 \"DrJava will use the JUnit that is built-in.</html>\", false)", "+      newBooleanOptionComponent(OptionConstants.JUNIT_LOCATION_ENABLED,false)", "-      new FileOptionComponent(OptionConstants.JUNIT_LOCATION, \"JUnit/ConcJUnit Location\", this,", "-                              \"<html>Optional location of the JUnit or ConcJUnit jar file.<br>\"+", "-                              \"(Changes will not be applied until the Interactions Pane<br>\"+", "-                              \"is reset.)</html>\",", "+      newFileOptionComponent(OptionConstants.JUNIT_LOCATION,", "-      new ForcedChoiceOptionComponent(OptionConstants.CONCJUNIT_CHECKS_ENABLED, \"Enabled ConcJUnit Checks\", this,", "-                                      \"<html>The concurrent unit testing checks that should be performed.<br>\"+", "-                                      \"'none' uses plain JUnit. ConcJUnit can also detect failures in<br>\"+", "-                                      \"all threads ('all-threads'), detect threads that did not end in<br>\"+", "-                                      \"time ('all-threads, join'), and threads that ended in time only<br>\"+", "-                                      \"because they were lucky ('all-threads, nojoin, lucky).<br>\"+", "-                                      \"The last setting requires a 'ConcJUnit Runtime Location' to be set.</html>\");", "+      newForcedChoiceOptionComponent(OptionConstants.CONCJUNIT_CHECKS_ENABLED);", "-      new FileOptionComponent(OptionConstants.RT_CONCJUNIT_LOCATION, \"ConcJUnit Runtime Location\", this,", "-                              \"<html>Optional location of the Java Runtime Library processed<br>\"+", "-                              \"to generate &quot;lucky&quot; warnings. If left blank, &quot;lucky&quot; warnings<br>\"+", "-                              \"will not be generated. This setting is deactivated if the path to<br>\"+", "-                              \"ConcJUnit has not been specified above.<br>\" + ", "-                              \"(Changes will not be applied until the Interactions Pane is reset.)</html>\",", "-                              new FileSelectorComponent(this, _jarChooser, 30, 10f) {", "+      newFileOptionComponent(OptionConstants.RT_CONCJUNIT_LOCATION,", "+                             new FileSelectorComponent(this, _jarChooser, 30, 10f) {", "-      new BooleanOptionComponent(OptionConstants.FORCE_TEST_SUFFIX,", "-                                 \"Require test classes in projects to end in \\\"Test\\\"\",", "-                                 this,", "-                                 \"Whether to force test classes in projects to end in \\\"Test\\\".\",", "-                                 false)", "+      newBooleanOptionComponent(OptionConstants.FORCE_TEST_SUFFIX,false)"]}], "num": 25087}