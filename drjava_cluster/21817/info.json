{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f2c6f99c91b7e35e1e08669c78495e7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "265322169247a137dfd3cf9799419537", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public Node visit(IfThenElseStatement node)", "signatureAfterChange": "   public Object visit(IfThenElseStatement node)", "diff": ["-  public Node visit(IfThenElseStatement node) {", "+  public Object visit(IfThenElseStatement node) {", "-    node.setThenStatement(node.getThenStatement().acceptVisitor(this));", "-    node.setElseStatement(node.getElseStatement().acceptVisitor(this));", "+    node.setThenStatement((Node)node.getThenStatement().acceptVisitor(this));", "+    node.setElseStatement((Node)node.getElseStatement().acceptVisitor(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1a50d0b724acbacfe9ac54100c4430c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "   private Method _getDefineVariableMethod(ReferenceType interpreterRef,                                           Value val)     throws DebugException", "signatureAfterChange": "   private Method _getDefineVariableMethod(ReferenceType interpreterRef,                                           Value val)     throws DebugException", "diff": ["-    List<Method> methods = null;", "+    List methods = null;", "-    methods = interpreterRef.methodsByName(\"defineVariable\", signature);  // JDK 1.5 will eliminate this warning", "+    methods = interpreterRef.methodsByName(\"defineVariable\", signature);", "-    Method tempMethod = methods.get(0);", "+    Method tempMethod = (Method) methods.get(0);", "-      tempMethod = methods.get(i);", "+      tempMethod = (Method) methods.get(i);"]}], "num": 21817}