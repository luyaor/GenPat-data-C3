{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b46f674d9bcd2a6113f1e23018ff2c0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "064b5b210dc8453619d3090f5f3d5f78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtilTest.java", "commitBeforeChange": "6d6fa98f193d16ab3db62dbad1beca43c6bd6363", "commitAfterChange": "8899499d3b5cb3ea80f26187b2a2a457f05dfbc2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testRelax()", "signatureAfterChange": "    public void testRelax()", "diff": ["-  ", "-    Iterable<Number> ns = IterUtil.<Number>relax(is);", "+    @SuppressWarnings(\"unused\") Iterable<Number> ns = IterUtil.<Number>relax(is);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b10cd5dc82c557b5c324ce2d555baaf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/ComposedIterable.java", "commitBeforeChange": "18d23bc33a9e21a21fbea8669d376abbec4474d5", "commitAfterChange": "d43aa0dddfca5bd508283f6af1dfc42f0f92a186", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public T last()", "signatureAfterChange": "   public T last()", "diff": ["+      // javac 6 doesn't like this -- ComposedIterable<? extends T> </: Iterable<capture extends T>", "+      @SuppressWarnings(\"unchecked\")"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5194c5aed4eee4c6c5b3be5ff5cb4ece", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DrJavaPropertySetupTest.java", "commitBeforeChange": "76c0b2960b62020d46b810955623e0af759eee20", "commitAfterChange": "936042cad9bfa0086510cc58a96357306371fb07", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testMisc() throws CloneNotSupportedException", "signatureAfterChange": "      public void testMisc() throws CloneNotSupportedException", "diff": ["-    DrJavaProperty p;", "+    @SuppressWarnings(\"unused\") DrJavaProperty p;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a87e4c08bcc00366b16df93c4f915a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ReflectUtilTest.java", "commitBeforeChange": "6d6fa98f193d16ab3db62dbad1beca43c6bd6363", "commitAfterChange": "8899499d3b5cb3ea80f26187b2a2a457f05dfbc2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "         public void testConstructorLambdas()", "signatureAfterChange": "         public void testConstructorLambdas()", "diff": ["-    Lambda<Object, SimpleBox> l3 = constructorAsLambda(SimpleBox.class, Object.class);", "+    @SuppressWarnings(\"unchecked\") Lambda<Object, SimpleBox> l3 =", "+    \tconstructorAsLambda(SimpleBox.class, Object.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72b745fdfc33878db8a647b158c7734b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/AbstractPredicateSet.java", "commitBeforeChange": "6d6fa98f193d16ab3db62dbad1beca43c6bd6363", "commitAfterChange": "8899499d3b5cb3ea80f26187b2a2a457f05dfbc2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public int size(int bound)", "signatureAfterChange": "   public int size(int bound)", "diff": ["-    for (T elt : this) { result++; if (result == bound) break; }", "+    for (@SuppressWarnings(\"unused\") T elt : this) { result++; if (result == bound) break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "963db76011fe1c2ef4d5a2f52a21a5cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6d6fa98f193d16ab3db62dbad1beca43c6bd6363", "commitAfterChange": "8899499d3b5cb3ea80f26187b2a2a457f05dfbc2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static int sizeOf(Iterable<?> iter)", "signatureAfterChange": "   public static int sizeOf(Iterable<?> iter)", "diff": ["-      for (Object o : iter) { result++; if (result == Integer.MAX_VALUE) break; }", "+      for (@SuppressWarnings(\"unused\") Object o : iter) { result++; if (result == Integer.MAX_VALUE) break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4a00c0e15be687a35740507d4503c46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ReflectUtilTest.java", "commitBeforeChange": "6d6fa98f193d16ab3db62dbad1beca43c6bd6363", "commitAfterChange": "8899499d3b5cb3ea80f26187b2a2a457f05dfbc2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         public void testLoadObject() throws Exception", "signatureAfterChange": "         public void testLoadObject() throws Exception", "diff": ["-    ReflectUtilTest t = (ReflectUtilTest) loadObject(\"edu.rice.cs.plt.reflect.ReflectUtilTest\");", "+\t@SuppressWarnings(\"unused\") ReflectUtilTest t =", "+\t\t(ReflectUtilTest) loadObject(\"edu.rice.cs.plt.reflect.ReflectUtilTest\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27d6de24e9dffc5c0519502b1bdea6e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "3baa592b92b38416a93138ef133d1b649a83a37d", "commitAfterChange": "5e007ed2a02c59f9c5f0ddad6c5fd3c21d5bb370", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 192, "signatureBeforeChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "diff": ["+    ", "+    @SuppressWarnings(\"unchecked\")"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd8920b4a6fc6cff996398fa35623d3f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/PathClassLoaderTest.java", "commitBeforeChange": "6d6fa98f193d16ab3db62dbad1beca43c6bd6363", "commitAfterChange": "8899499d3b5cb3ea80f26187b2a2a457f05dfbc2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void assertCannotGet(ClassLoader l, String className)", "signatureAfterChange": "      private void assertCannotGet(ClassLoader l, String className)", "diff": ["-      int result = (Integer) c.getMethod(\"get\").invoke(instance);", "+      @SuppressWarnings(\"unused\") int result = (Integer) c.getMethod(\"get\").invoke(instance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea2f73ccef1de03a352d13b7844d8322", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      public void testDeleteFileWhileOpen()      throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "      public void testDeleteFileWhileOpen()      throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["-    OpenDefinitionsDocument doc2 = _model.newFile();", "+    @SuppressWarnings(\"unused\") OpenDefinitionsDocument doc2 = _model.newFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fac474bd84a50605a97ca88f099228b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6d6fa98f193d16ab3db62dbad1beca43c6bd6363", "commitAfterChange": "8899499d3b5cb3ea80f26187b2a2a457f05dfbc2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public static int sizeOf(Iterable<?> iter, int bound)", "signatureAfterChange": "   public static int sizeOf(Iterable<?> iter, int bound)", "diff": ["-      for (Object o : iter) { result++; if (result == bound) break; }", "+      for (@SuppressWarnings(\"unused\") Object o : iter) { result++; if (result == bound) break; }"]}], "num": 25067}