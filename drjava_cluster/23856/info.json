{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13d1b9cd053e20d0781450d61e2cd2c2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c00ed29a66d41576b48adc0bfb635480", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartingNewStmt.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-   */", "+    */", "-    // For 0, imaginary delimiter at position -1", "-    if (prevDelimiterPos == -1) {", "-      prevDelimiterPos = -1;", "-    }", "+    // If no previous delimited exists, imaginary delimiter at position -1", "-    } catch (BadLocationException e) {", "-      throw new UnexpectedException(e);", "-    }", "+    } ", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "-    return (firstNonWSAfterDelimiter >= lineStart", "-              || firstNonWSAfterDelimiter == -1);", "+    return (firstNonWSAfterDelimiter >= lineStart || firstNonWSAfterDelimiter == -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efd135971c14ea70801bce2783716122", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartingNewStmt.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    // For DOCSTART, imaginary delimiter at position -1", "-    if (prevDelimiterPos == AbstractDJDocument.ERROR_INDEX) {", "+    // For 0, imaginary delimiter at position -1", "+    if (prevDelimiterPos == -1) {", "-      // will return ERROR_INDEX if we hit the end of the document", "+      // will return ERROR_INDEX (-1) if we hit the end of the document", "-              || firstNonWSAfterDelimiter == AbstractDJDocument.ERROR_INDEX);", "+              || firstNonWSAfterDelimiter == -1);"]}], "num": 23856}