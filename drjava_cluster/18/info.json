{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6cfe5c7c61f732b9601526a1582d05f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20d460264d013346b55c14e149daf746", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          public void saveBeforeCompile()", "signatureAfterChange": "          public void saveBeforeCompile()", "diff": ["-      saveAllFiles(_model, new FileSaveSelector() {", "-        public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "-        public boolean warnFileOpen(File f) { return false; }", "-        public boolean verifyOverwrite() { return true; }", "-        public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "-      });", "+      try {", "+        _model.saveAllFiles(new FileSaveSelector() {", "+          public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "+          public boolean warnFileOpen(File f) { return false; }", "+          public boolean verifyOverwrite() { return true; }", "+          public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "+        });", "+      }", "+      catch(IOException e) { throw new UnexpectedException(e); }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36a9e7b1da0e591e835e8e915a916587", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/HistoryTest.java", "commitBeforeChange": "4dfc9cf8f984c69d646e954511052a889bd9f415", "commitAfterChange": "c7d2e1d461dd66a96eb2ddd00e3e54ea051914ee", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testWriteToFile() throws IOException", "signatureAfterChange": "      public void xtestWriteToFile() throws IOException", "diff": ["-", "-  public void testWriteToFile() throws IOException{", "+  ", "+  public void xtestWriteToFile() throws IOException{ // Doesn't pass on Windows", "-", "+    ", "-\tprivate File file = f1;", "-\tpublic File getFile () { return f1;}", "-\tpublic void warnFileOpen(){}", "-\tpublic boolean verifyOverwrite(){ return true;}", "-\tpublic boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile){return true;}", "-      });", "-", "+      private File file = f1;", "+      public File getFile () { return f1;}", "+      public void warnFileOpen(){}", "+      public boolean verifyOverwrite(){ return true;}", "+      public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile){return true;}", "+    });", "+    ", "-", "+    ", "-\t\t\t ", "+    "]}], "num": 18}