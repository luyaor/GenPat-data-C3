{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bb4f5782f529cab36e3bb49fc974cd8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99222e455f13f075034fe11811d4235c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "536afaee0374767d0f8bdf572a332576e3f54467", "commitAfterChange": "222f5adcb4ec2d8c8823733053796b612dc57603", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void verifyErrorLocation(ParseException ex,                                   int startLine, int startColumn,                                    int endLine, int endColumn)", "signatureAfterChange": "      public void verifyErrorLocation(ParseException ex,                                   int startLine, int startColumn,                                    int endLine, int endColumn)", "diff": ["-    assertEquals(\"Wrong begin line of error\", startLine, ex.getBeginLine());", "-    assertEquals(\"Wrong begin column of error\", startColumn, ex.getBeginColumn());", "-    assertEquals(\"Wrong end line of error\", endLine, ex.getEndLine());", "-    assertEquals(\"Wrong end column of error\", endColumn, ex.getEndColumn());", "+    CustomParseException custom = CustomParseException.makeCustom(ex);", "+    assertEquals(\"Wrong begin line of error\", startLine, custom.getBeginLine());", "+    assertEquals(\"Wrong begin column of error\", startColumn, custom.getBeginColumn());", "+    assertEquals(\"Wrong end line of error\", endLine, custom.getEndLine());", "+    assertEquals(\"Wrong end column of error\", endColumn, custom.getEndColumn());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7ee54182d1941999b6f66714cf7f681", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void verifyErrorLocation(ParseException ex,                                   int startLine, int startColumn,                                    int endLine, int endColumn)", "signatureAfterChange": "      public void verifyErrorLocation(ParseException ex,                                   int startLine, int startColumn,                                    int endLine, int endColumn)", "diff": ["-    CustomParseException custom = CustomParseException.makeCustom(ex);", "-    assertEquals(\"Wrong begin line of error\", startLine, custom.getBeginLine());", "-    assertEquals(\"Wrong begin column of error\", startColumn, custom.getBeginColumn());", "-    assertEquals(\"Wrong end line of error\", endLine, custom.getEndLine());", "-    assertEquals(\"Wrong end column of error\", endColumn, custom.getEndColumn());", "+    SourceInfo si = new ParseError(ex, (File) null).getSourceInfo();", "+    assertEquals(\"Wrong begin line of error\", startLine, si.getStartLine());", "+    assertEquals(\"Wrong begin column of error\", startColumn, si.getStartColumn());", "+    assertEquals(\"Wrong end line of error\", endLine, si.getEndLine());", "+    assertEquals(\"Wrong end column of error\", endColumn, si.getEndColumn());"]}], "num": 16215}