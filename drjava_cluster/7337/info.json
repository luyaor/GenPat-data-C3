{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73c5adb927f2ede5dac01ca5e1b521ba", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "002e519330485d824b92f8e2052e6f7b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/PendingRequestManager.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void classPrepared (ClassPrepareEvent event) throws DebugException", "signatureAfterChange": "   public void classPrepared (ClassPrepareEvent event) throws DebugException", "diff": ["-    ", "+", "-    ", "+", "-    else if (actions.isEmpty()) { ", "+    else if (actions.isEmpty()) {", "-      int lineNumber = actions.elementAt(i).getLineNumber();", "+      int lineNumber = actions.get(i).getLineNumber();", "-        if (!actions.elementAt(i).createRequests(refTypes)) {", "+        // next line was in condition for if", "+        actions.get(i).createRequests(refTypes);", "+//        if (!) {", "-        }", "-        else {", "+//        }", "+//        else {", "-            ", "+", "-          actions.removeElementAt(i);", "+          actions.remove(i);", "-        }", "+//        }", "-        failedActions.addElement(actions.elementAt(i));", "+        failedActions.add(actions.get(i));", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ff9d95978a2e778b3ad8b4fb8e5cb7c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 23, "signatureBeforeChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                         int lineNumber)", "signatureAfterChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                         int lineNumber)", "diff": ["-    // Assume first one is correct, for now", "-    //if (classes.size() > 0) {", "-    ", "-      if (lineNumber > DebugAction.ANY_LINE) {", "+      if (lineNumber != DebugAction.ANY_LINE) {", "+        // If lines.size > 0, lineNumber was found in ref", "-          // The ReferenceType might be in an inner class", "+          // The ReferenceType might be in an inner class, so", "+          //  look for locationsOfLine for nestedTypes", "-                ref =currRef;", "-                break;                ", "+                ref = currRef;", "+                break;", "-      //if (ref != null && !ref.isPrepared()) {", "-      //   return null;", "-      //}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d8e82badf6637d9e1512eb8f1f027c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "ff2e70871791df593185a62b1085ea613a30f1d1", "commitAfterChange": "aef1425a6103fe62ee23d162065d6ac1d8b40238", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void updatelru(OpenDefinitionsDocument odd, Pair<DefinitionsDocument,DDReconstructor> pair)", "signatureAfterChange": "   private void updatelru(OpenDefinitionsDocument odd, Pair<DefinitionsDocument,DDReconstructor> pair)", "diff": ["-    if(!lru.isEmpty() && lru.getFirst() == odd){", "-      //System.out.println(\"updatelru: \" + odd + \" is first in list\");", "-      return;", "+    synchronized(lru) {", "+      if(!lru.isEmpty() && lru.getFirst() == odd){", "+        //System.out.println(\"updatelru: \" + odd + \" is first in list\");", "+        return;", "+      }", "+      lru.remove(odd);", "-    lru.remove(odd);", "-      lru.addFirst(odd);", "+      synchronized(lru) {", "+        lru.addFirst(odd);", "+      }", "-    ", "+", "-      odd = lru.removeLast();", "+      synchronized(lru) {", "+        odd = lru.removeLast();", "+      }", "-      }else{", "+      } else {", "-        update(odd, removedPair.getSecond());", "+          update(odd, removedPair.getSecond());"]}], "num": 7337}