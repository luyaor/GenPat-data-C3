{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb077a9c54a1b6e0a1c04aaac5ee6e1f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "317b779cf5c916ceef777aa307a665e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "          public void testForPackageImportStatementOnly()", "signatureAfterChange": "          public void testForPackageImportStatementOnly()", "diff": ["-      Word[] words = new Word[] {new Word(JExprParser.NO_SOURCE_INFO, \"alpha\"),", "-        new Word(JExprParser.NO_SOURCE_INFO, \"beta\")};", "-      CompoundWord cw = new CompoundWord(JExprParser.NO_SOURCE_INFO, words);", "-      PackageImportStatement cis = new PackageImportStatement(JExprParser.NO_SOURCE_INFO, cw);", "+      Word[] words = new Word[] {new Word(SourceInfo.NO_INFO, \"alpha\"),", "+        new Word(SourceInfo.NO_INFO, \"beta\")};", "+      CompoundWord cw = new CompoundWord(SourceInfo.NO_INFO, words);", "+      PackageImportStatement cis = new PackageImportStatement(SourceInfo.NO_INFO, cw);", "-      Word[] words3 = new Word[] {new Word(JExprParser.NO_SOURCE_INFO, \"myPackage\"), new Word(JExprParser.NO_SOURCE_INFO, ", "+      Word[] words3 = new Word[] {new Word(SourceInfo.NO_INFO, \"myPackage\"), new Word(SourceInfo.NO_INFO, ", "-      CompoundWord cw3 = new CompoundWord(JExprParser.NO_SOURCE_INFO, words3);", "-      PackageImportStatement pis = new PackageImportStatement(JExprParser.NO_SOURCE_INFO, cw3);", "+      CompoundWord cw3 = new CompoundWord(SourceInfo.NO_INFO, words3);", "+      PackageImportStatement pis = new PackageImportStatement(SourceInfo.NO_INFO, cw3);", "-      Word[] words2 = new Word[] {new Word(JExprParser.NO_SOURCE_INFO, \"myPackage\")};", "-      CompoundWord cw2 = new CompoundWord(JExprParser.NO_SOURCE_INFO, words2);", "-      PackageImportStatement pis2 = new PackageImportStatement(JExprParser.NO_SOURCE_INFO, cw2);", "+      Word[] words2 = new Word[] {new Word(SourceInfo.NO_INFO, \"myPackage\")};", "+      CompoundWord cw2 = new CompoundWord(SourceInfo.NO_INFO, words2);", "+      PackageImportStatement pis2 = new PackageImportStatement(SourceInfo.NO_INFO, cw2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bbc004b02e42fba5ed0917620dd0795", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelConverter.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "signatureAfterChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "diff": ["-        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(JExprParser.NO_SOURCE_INFO)));", "+        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(SourceInfo.NO_INFO)));", "-        if (llv.symbolTable.get(\"java.lang.Integer\") == null) {llv.getSymbolData(\"java.lang.Integer\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Double\")==null) {llv.getSymbolData(\"java.lang.Double\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Character\")==null) {llv.getSymbolData(\"java.lang.Character\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Boolean\")==null) {llv.getSymbolData(\"java.lang.Boolean\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Long\")==null) {llv.getSymbolData(\"java.lang.Long\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Byte\")==null) {llv.getSymbolData(\"java.lang.Byte\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Short\")==null) {llv.getSymbolData(\"java.lang.Short\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Float\")==null) {llv.getSymbolData(\"java.lang.Float\", JExprParser.NO_SOURCE_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Integer\") == null) {llv.getSymbolData(\"java.lang.Integer\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Double\")==null) {llv.getSymbolData(\"java.lang.Double\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Character\")==null) {llv.getSymbolData(\"java.lang.Character\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Boolean\")==null) {llv.getSymbolData(\"java.lang.Boolean\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Long\")==null) {llv.getSymbolData(\"java.lang.Long\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Byte\")==null) {llv.getSymbolData(\"java.lang.Byte\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Short\")==null) {llv.getSymbolData(\"java.lang.Short\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Float\")==null) {llv.getSymbolData(\"java.lang.Float\", SourceInfo.NO_INFO);}", "-        _addVisitorError(new Pair<String, JExpressionIF>(ae.getMessage(), new NullLiteral(JExprParser.NO_SOURCE_INFO)));", "+        _addVisitorError(new Pair<String, JExpressionIF>(ae.getMessage(), new NullLiteral(SourceInfo.NO_INFO)));", "-        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(JExprParser.NO_SOURCE_INFO)));", "+        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(SourceInfo.NO_INFO)));"]}], "num": 25894}