{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4d895f208349b0febc022d158faf46c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39f3f239061f0cb64693459353aa944e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "aa7f147d71330aa12463dfbc7a233e3ed25560e6", "commitAfterChange": "cfaac02e8e33f506b730c3f8ce96676d16b8f705", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "    public void interpret(final String s)", "signatureAfterChange": "    public void interpret(final String s)", "diff": ["-      //_log.log(\"main.interp: \" + s);", "+      _log.log(\"main.interp: \" + s);", "-    ", "-    // Spawn thread on this side (receive result \"immediately\")", "-    /*", "-    Thread thread = new Thread(\"interpret thread: \" + s) {", "-      public void run() {", "-        try {", "-          //System.err.println(\"interpret to \" + _interpreterJVM() + \": \" + s);", "-          InterpretResult result = _interpreterJVM().interpret(s);", "-          _log.log(\"main.interp: \" + s + \" --> \" + result);", "-          result.apply(getResultHandler());", "-        }", "-        catch (java.rmi.UnmarshalException ume) {", "-          // Could not receive result from interpret; system probably exited.", "-          // We will silently fail and let the interpreter restart.", "-          _log.log(\"main.interp: UnmarshalException, so interpreter is dead:\\n\"", "-                     + ume);", "-        }", "-        catch (RemoteException re) {", "-          _threwException(re);", "-        }", "-      }", "-    };", "-", "-    thread.setDaemon(true);", "-    thread.start();", "-    */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5a19bff5030b01f93937d5c52893945", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   protected void slaveQuitDuringStartup(int status)", "signatureAfterChange": "   protected void slaveQuitDuringStartup(int status)", "diff": ["+    _log.log(\"Slave quit during startup. Throwing \" + e);"]}], "num": 29064}