{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe6b4613ce625384c0deedd442a9f310", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cb52a9a3b3c3ccf9b14112daea3b94d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineEmpty.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    */\r", "-  boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason) {\r", "-    try {\r", "-      // Determine if there are only whitespace chars by seeing if the first non-WS char is the endOfLine\r", "-      int here = doc.getCurrentLocation();\r", "-      int endOfLine = doc.getLineEndPos(here);\r", "-      int firstNonWS = doc.getLineFirstCharPos(here);\r", "-      return (endOfLine == firstNonWS);\r", "-    }\r", "-    catch (BadLocationException e) {\r", "-      // Shouldn't happen\r", "-      throw new UnexpectedException(e);\r", "-    }\r", "-  }\r", "+    */", "+  boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason) {", "+    try {", "+      // Determine if there are only whitespace chars by seeing if the first non-WS char is the endOfLine", "+      int here = doc.getCurrentLocation();", "+      int endOfLine = doc._getLineEndPos(here);", "+      int firstNonWS = doc._getLineFirstCharPos(here);", "+      return (endOfLine == firstNonWS);", "+    }", "+    catch (BadLocationException e) {", "+      // Shouldn't happen", "+      throw new UnexpectedException(e);", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e11015ff1f857c402471b9009bf6723", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineEmpty.java", "commitBeforeChange": "7800062ae81518c3396891f7a26a405437cbcbf7", "commitAfterChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    try {", "-      // Determine if there are only whitespace chars by seeing if the first non-WS char is the endOfLine", "-      int here = doc.getCurrentLocation();", "-      int endOfLine = doc._getLineEndPos(here);", "-      int firstNonWS = doc._getLineFirstCharPos(here);", "-      return (endOfLine == firstNonWS);", "-    }", "-    catch (BadLocationException e) {", "-      // Shouldn't happen", "-      throw new UnexpectedException(e);", "-    }", "+    // Determine if there are only whitespace chars by seeing if the first non-WS char is the endOfLine", "+    int here = doc.getCurrentLocation();", "+    int endOfLine = doc._getLineEndPos(here);", "+    int firstNonWS = doc._getLineFirstCharPos(here);", "+    return (endOfLine == firstNonWS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfede31e5224532468a5cf33210a37ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineEmptyOrEnterPress.java", "commitBeforeChange": "7800062ae81518c3396891f7a26a405437cbcbf7", "commitAfterChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    try {", "-      // Determine if there are only whitespace chars by seeing if the first non-WS char is the endOfLine", "-      int here = doc.getCurrentLocation();", "-      int endOfLine = doc._getLineEndPos(here);", "-      int firstNonWS = doc._getLineFirstCharPos(here);", "-      return (endOfLine == firstNonWS);", "-    }", "-    catch (BadLocationException e) {", "-      // Shouldn't happen", "-      throw new UnexpectedException(e);", "-    }", "+    // Determine if there are only whitespace chars by seeing if the first non-WS char is the endOfLine", "+    int here = doc.getCurrentLocation();", "+    int endOfLine = doc._getLineEndPos(here);", "+    int firstNonWS = doc._getLineFirstCharPos(here);", "+    return (endOfLine == firstNonWS);"]}], "num": 19389}