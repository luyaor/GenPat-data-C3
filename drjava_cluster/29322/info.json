{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13b858c5faba16df600f68c9a5e5c8cc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac0356b9a44db7748b7fd54bc9b17644", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "b128df4fa9d8df79a76ba9e19a170c160365e646", "commitAfterChange": "e16fd9dc1aa815e303a7aa80be407f3a031e237d", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "     public List<DocumentRegion> forCons(Cons c)", "signatureAfterChange": "     public List<Region> forCons(Cons c)", "diff": ["-    public List<DocumentRegion> forEmpty(Empty e) { return new ArrayList<DocumentRegion>(); }", "-    public List<DocumentRegion> forCons(Cons c) {", "-      List<DocumentRegion> list = c.getRest().accept(this);", "-      DocumentRegion tmp = ProjectFileParser.ONLY.parseBookmark(c.getFirst(), _srcFileBase);", "+    public List<Region> forEmpty(Empty e) { return new ArrayList<Region>(); }", "+    public List<Region> forCons(Cons c) {", "+      List<Region> list = c.getRest().accept(this);", "+      Region tmp = ProjectFileParser.ONLY.parseBookmark(c.getFirst(), _srcFileBase);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb0777836c25bbef7ce8cf27a5ad588c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "     public List<Region> forCons(Cons c)", "signatureAfterChange": "     public List<FileRegion> forCons(Cons c)", "diff": ["-    public List<Region> forEmpty(Empty e) { return new ArrayList<Region>(); }", "-    public List<Region> forCons(Cons c) {", "-      List<Region> list = c.getRest().accept(this);", "-      Region tmp = ProjectFileParser.ONLY.parseBookmark(c.getFirst(), _srcFileBase);", "+    public List<FileRegion> forEmpty(Empty e) { return new ArrayList<FileRegion>(); }", "+    public List<FileRegion> forCons(Cons c) {", "+      List<FileRegion> list = c.getRest().accept(this);", "+      FileRegion tmp = ProjectFileParser.ONLY.parseBookmark(c.getFirst(), _srcFileBase);"]}], "num": 29322}