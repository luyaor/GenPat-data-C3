{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef94a5ff7df1123c077d56ac9cc7b799", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18345f18d84592d39b09339ef1b16454", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public TypeData forConditionalExpressionOnly(ConditionalExpression that, TypeData condition_result, TypeData forTrue_result, TypeData forFalse_result)", "signatureAfterChange": "   public TypeData forConditionalExpressionOnly(ConditionalExpression that, TypeData condition_result,                                                 TypeData forTrue_result, TypeData forFalse_result)", "diff": ["-   */", "-  public TypeData forConditionalExpressionOnly(ConditionalExpression that, TypeData condition_result, TypeData forTrue_result, TypeData forFalse_result) {", "-    throw new RuntimeException (\"Internal Program Error: Conditional expressions are not supported.  This should have been caught before the TypeChecker.  Please report this bug.\");", "+  /** Not currently supported */", "+  public TypeData forConditionalExpressionOnly(ConditionalExpression that, TypeData condition_result, ", "+                                               TypeData forTrue_result, TypeData forFalse_result) {", "+    throw new RuntimeException (\"Internal Program Error: Conditional expressions are not supported.  \" + ", "+                                \"This should have been caught before the TypeChecker.  Please report this bug.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "811733c6016869e08fb66c3c71d03dc0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public TypeData forShiftAssignmentExpressionOnly(ShiftAssignmentExpression that, TypeData name_result, TypeData value_result)", "signatureAfterChange": "   public TypeData forShiftAssignmentExpressionOnly(ShiftAssignmentExpression that, TypeData name_result,                                                     TypeData value_result)", "diff": ["-  public TypeData forShiftAssignmentExpressionOnly(ShiftAssignmentExpression that, TypeData name_result, TypeData value_result) {", "-    throw new RuntimeException (\"Internal Program Error: Shift assignment operators are not supported.  This should have been caught before the TypeChecker.  Please report this bug.\");", "+  public TypeData forShiftAssignmentExpressionOnly(ShiftAssignmentExpression that, TypeData name_result, ", "+                                                   TypeData value_result) {", "+    throw new RuntimeException (\"Internal Program Error: Shift assignment operators are not supported.  \" + ", "+                                \"This should have been caught before the TypeChecker.  Please report this bug.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e669ec93f5db8bc11c586edde7a327d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public TypeData forBitwiseBinaryExpressionOnly(BitwiseBinaryExpression that, TypeData left_result, TypeData right_result)", "signatureAfterChange": "   public TypeData forBitwiseBinaryExpressionOnly(BitwiseBinaryExpression that, TypeData left_result,                                                   TypeData right_result)", "diff": ["-  public TypeData forBitwiseBinaryExpressionOnly(BitwiseBinaryExpression that, TypeData left_result, TypeData right_result) {", "-    throw new RuntimeException (\"Internal Program Error: Bitwise operators are not supported.  This should have been caught before the TypeChecker.  Please report this bug.\");", "+  public TypeData forBitwiseBinaryExpressionOnly(BitwiseBinaryExpression that, TypeData left_result, ", "+                                                 TypeData right_result) {", "+    throw new RuntimeException (\"Internal Program Error: Bitwise operators are not supported.  \" + ", "+                                \"This should have been caught before the TypeChecker.  Please report this bug.\");"]}], "num": 5543}