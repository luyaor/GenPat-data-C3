{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "530b8dbc18331c598dccfacf6d3bb21f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32a1f8f3195d55f5f9c3b97b2c5f800c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "481944e3395dcc7a19e81902c59977be65ba633a", "commitAfterChange": "c682fca099b13e765e0e1f201629222d04fb1339", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "   public OpenDefinitionsDocument newFile(File parentDir)", "signatureAfterChange": "   public OpenDefinitionsDocument newFile(File parentDir)", "diff": ["-    synchronized(_documentsRepos) { _documentsRepos.add(doc); }", "-    ", "-    if (parentDir != null) {", "-      try { _documentNavigator.addDocument(doc, fixPathForNavigator(parentDir.getCanonicalPath() + File.separator)); }", "-      catch(IOException ioe) { _documentNavigator.addDocument(doc); }", "-    }", "-    else _documentNavigator.addDocument(doc);", "+    addDocToNavigator(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db5156bb8f360d0daec9d09cf8a76729", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "commitAfterChange": "ec06880aa408b928b2f252538b208a76154d8334", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   protected void updateText()", "signatureAfterChange": "   protected void updateText()", "diff": ["-      try {", "-        if ((_is!=null) && (_p!=null) &&", "-            (_is.ready()) &&", "-            (_p.getInputStream().available()>0)) { readText(false); }", "-      }", "-      catch(IOException ioe) {", "-        _sb.append(\"\\n\\nI/O Exception reading from process\\n\");", "-        abortActionPerformed(null);", "-        ++_changeCount;", "-      }", "+//      try {", "+//        if ((_is!=null) && (_p!=null) &&", "+//            (_is.ready()) &&", "+//            (_p.getInputStream().available()>0)) { readText(false); }", "+//      }", "+//      catch(IOException ioe) {", "+//        try {", "+//          _p.exitValue();", "+//          // if we get here, process has finished, and we don't display the I/O exception", "+//        }", "+//        catch(IllegalThreadStateException e) {", "+//          // process has NOT finished yet, display the I/O exception", "+//          _sb.append(\"\\n\\nI/O Exception reading from process\\n\");", "+//        }", "+//        abortActionPerformed(null);", "+//        ++_changeCount;", "+//      }"]}], "num": 23007}