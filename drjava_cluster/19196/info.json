{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e58c14f7fdf27bbcf5f7337ed3047410", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f69dc2e3db103b641d68e47ba62bc43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public Void forInterfaceDef(InterfaceDef that)", "signatureAfterChange": "   public Void forInterfaceDef(InterfaceDef that)", "diff": ["-    SymbolData sd = defineSymbolData(that, className);", "-    ", "+    SymbolData sd = defineSymbolData(that, className);  //TODO: should this statement follow interface processing in 345", "+  ", "+      identifyInnerClasses(that);  // inner interfaces??", "-                                                            _classNamesInThisFile, continuations));", "+                                                            _classesInThisFile, continuations, fixUps));", "-    _classesToBeParsed.remove(className);", "+    _classesInThisFile.remove(className);", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b77ef561115befece637772fd61bcedb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Void forInterfaceDef(InterfaceDef that)", "signatureAfterChange": "   public Void forInterfaceDef(InterfaceDef that)", "diff": ["+      identifyInnerClasses(that);  // inner interfaces??", "-                                                                _classNamesInThisFile, continuations));", "+                                                                _classesInThisFile, continuations, fixUps));", "+    ", "-    _classesToBeParsed.remove(className);", "+    _classesInThisFile.remove(className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be482172cbab67ad2a889523371170f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public Void forClassDef(ClassDef that)", "signatureAfterChange": "   public Void forClassDef(ClassDef that)", "diff": ["-    SymbolData sd = defineSymbolData(that, className); ", "+    System.err.println(\"Processing class \" + className);", "+    SymbolData sd = defineSymbolData(that, className);", "+    assert getQualifiedSymbolData(className, SourceInfo.NO_INFO, false) != null;", "+//    _enclosingClassName = className;", "+//    System.err.println(\"Setting _enclosingClassName to \" + className);", "+    ", "+    ", "+    if (sd != null) identifyInnerClasses(that);", "-                                                        _importedPackages, _classNamesInThisFile, continuations));", "+                                                        _importedPackages, _classesInThisFile, continuations, fixUps));", "-    _classesToBeParsed.remove(className);", "-  }"]}], "num": 19196}