{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04c61354a4b184be84c56d56e3054067", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484f5b2a0999152d4a4f5051309e1cb3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocumentAdapter.java", "commitBeforeChange": "a37574604ff4a3d36ac0046c2a1565869d8a1596", "commitAfterChange": "a8613ae7d0a727955779b61d4301c40099189842", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void setBoldFonts(int point, Graphics g)", "signatureAfterChange": "         public synchronized void setBoldFonts(int point, Graphics g)", "diff": ["+  ", "+  public synchronized void setBoldFonts(int point, Graphics g) {", "+    for(Pair<Pair<Integer,Integer>,String> p :  _stylesList) {", "+      Pair<Integer,Integer> loc = p.getFirst();", "+      if(loc.getFirst() <= point && loc.getSecond() >= point) {", "+        if(p.getSecond().equals(InteractionsDocument.ERROR_STYLE)) {", "+          g.setFont(g.getFont().deriveFont(Font.BOLD));", "+        }", "+        else if(p.getSecond().equals(InteractionsDocument.DEBUGGER_STYLE)) {", "+          g.setFont(g.getFont().deriveFont(Font.BOLD));", "+        }", "+        else {", "+          g.setFont(INTERACTIONS_MAIN_FONT);", "+        }", "+        return;", "+      }", "-  public void setBoldFonts(int point, Graphics g) {", "-    synchronized(_lock) {", "-      for(Pair<Pair<Integer,Integer>,String> p :  _stylesList) {", "-        Pair<Integer,Integer> loc = p.getFirst();", "-        if(loc.getFirst() <= point && loc.getSecond() >= point) {", "-          if(p.getSecond().equals(InteractionsDocument.ERROR_STYLE)) {", "-            g.setFont(g.getFont().deriveFont(Font.BOLD));", "-          }", "-          else if(p.getSecond().equals(InteractionsDocument.DEBUGGER_STYLE)) {", "-            g.setFont(g.getFont().deriveFont(Font.BOLD));", "-          }", "-          else {", "-            g.setFont(INTERACTIONS_MAIN_FONT);", "-          }", "-          return;", "-        }", "-      }", "-    }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e6e440decaa9a365f9fd206f394ff97", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocumentAdapter.java", "commitBeforeChange": "fa78ee7a06602f123abf33b8aef0005c93bb3efa", "commitAfterChange": "f26f93ad5e4b158c960a6cefd64cf99f7137ecbc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public synchronized void setBoldFonts(int point, Graphics g)", "signatureAfterChange": "   public void setBoldFonts(int point, Graphics g)", "diff": ["-   */", "-  public synchronized void setBoldFonts(int point, Graphics g) {", "-    for(Pair<Pair<Integer,Integer>,String> p :  _stylesList) {", "-      Pair<Integer,Integer> loc = p.getFirst();", "-      if(loc.getFirst() <= point && loc.getSecond() >= point) {", "-        if(p.getSecond().equals(InteractionsDocument.ERROR_STYLE)) {", "-          g.setFont(g.getFont().deriveFont(Font.BOLD));", "-        }", "-        else if(p.getSecond().equals(InteractionsDocument.DEBUGGER_STYLE)) {", "-          g.setFont(g.getFont().deriveFont(Font.BOLD));", "-        }", "-        else {", "-          g.setFont(ColoringView.MAIN_FONT);", "-        }", "-        return;", "-      }", "+  /** Attempts to set the font on the graphics context based upon the styles held in the styles list. */", "+  public void setBoldFonts(int point, Graphics g) {", "+    synchronized (_stylesList) {", "+      for(Pair<Pair<Integer,Integer>,String> p :  _stylesList) {", "+        Pair<Integer,Integer> loc = p.getFirst();", "+        if(loc.getFirst() <= point && loc.getSecond() >= point) {", "+          if(p.getSecond().equals(InteractionsDocument.ERROR_STYLE))", "+            g.setFont(g.getFont().deriveFont(Font.BOLD));", "+          else if(p.getSecond().equals(InteractionsDocument.DEBUGGER_STYLE))", "+            g.setFont(g.getFont().deriveFont(Font.BOLD));", "+          else  g.setFont(MAIN_FONT);", "+          return;", "+        }", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61794e4bad4a7079ab5339c2916b50e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocumentAdapter.java", "commitBeforeChange": "a4a2af26b6c17a91ead92bae0871adcd6e96d716", "commitAfterChange": "d68c02cecc4cc58e597f55ca1d69f68604b75377", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void setBoldFonts(int point, Graphics g)", "signatureAfterChange": "      public void setBoldFonts(int point, Graphics g)", "diff": ["-    for(Pair<Pair<Integer,Integer>,String> p :  _stylesList) {", "-      Pair<Integer,Integer> loc = p.getFirst();", "-      if(loc.getFirst() <= point && loc.getSecond() >= point) {", "-        if(p.getSecond().equals(InteractionsDocument.ERROR_STYLE)) {", "-          g.setFont(g.getFont().deriveFont(Font.BOLD));", "+    synchronized(_lock) {", "+      for(Pair<Pair<Integer,Integer>,String> p :  _stylesList) {", "+        Pair<Integer,Integer> loc = p.getFirst();", "+        if(loc.getFirst() <= point && loc.getSecond() >= point) {", "+          if(p.getSecond().equals(InteractionsDocument.ERROR_STYLE)) {", "+            g.setFont(g.getFont().deriveFont(Font.BOLD));", "+          }", "+          else if(p.getSecond().equals(InteractionsDocument.DEBUGGER_STYLE)) {", "+            g.setFont(g.getFont().deriveFont(Font.BOLD));", "+          }", "+          else {", "+            g.setFont(INTERACTIONS_MAIN_FONT);", "+          }", "+          return;", "-        else if(p.getSecond().equals(InteractionsDocument.DEBUGGER_STYLE)) {", "-          g.setFont(g.getFont().deriveFont(Font.BOLD));", "-        }", "-        else {", "-          g.setFont(INTERACTIONS_MAIN_FONT);", "-        }", "-        return;"]}], "num": 17229}