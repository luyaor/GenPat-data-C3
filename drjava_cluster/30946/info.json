{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34fac88414f1519f12d45f12c115bb86", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf67e51eb229a52f282c53a890448fbe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public Class<?> visit(AddAssignExpression node)", "signatureAfterChange": "   public Type visit(AddAssignExpression node)", "diff": ["-  public Class<?> visit(AddAssignExpression node) {", "+  public Type visit(AddAssignExpression node) {", "-    Class<?> lc = ln.acceptVisitor(this);", "-    Class<?> rc = node.getRightExpression().acceptVisitor(this);", "-", "+    Type lc1 = ln.acceptVisitor(this);", "+    Type rc1 = node.getRightExpression().acceptVisitor(this);", "+    Class<?> lc = (Class<?>)lc1;", "+    Class<?> rc = (Class<?>)rc1;", "-", "+    ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1a49eea5b3e7f564790b4f81f1db2eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "   public Class<?> visit(RemainderAssignExpression node)", "signatureAfterChange": "   public Type visit(RemainderAssignExpression node)", "diff": ["-  public Class<?> visit(RemainderAssignExpression node) {", "+  public Type visit(RemainderAssignExpression node) {", "-    Class<?> lc = ln.acceptVisitor(this);", "-    Class<?> rc = node.getRightExpression().acceptVisitor(this);", "-", "+    Type lc1 = ln.acceptVisitor(this);", "+    Type rc1 = node.getRightExpression().acceptVisitor(this);", "+    Class<?> lc = (Class<?>)lc1;", "+    Class<?> rc = (Class<?>)rc1;", "-", "+    ", "-", "+    "]}], "num": 30946}