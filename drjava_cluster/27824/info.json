{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "514672e48b742b8a2a1b5db186c9c2d0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6029cb90648aa3463f1be25d119d956c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/GlobalContext.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  public Object visit(ImportDeclaration node)", "signatureAfterChange": "     public Boolean visit(ImportDeclaration node)", "diff": ["+     */", "+    public Boolean visit(ImportDeclaration node) {", "+      // Declare the package or class importation", "+      if (node.isPackage()) {", "+        importationManager.declarePackageImport(node.getName());", "+      } else {", "+        try {", "+          importationManager.declareClassImport(node.getName());", "+        } catch (ClassNotFoundException e) {", "+          throw new CatchedExceptionError(e, node);", "+        } catch (PseudoError e) {", "+        }", "+      }", "+      return null;", "+    }", "-  */", "- public Object visit(ImportDeclaration node) {", "-     // Declare the package or class importation", "-     if (node.isPackage()) {", "-  importationManager.declarePackageImport(node.getName());", "-     } else {", "-  try {", "-      importationManager.declareClassImport(node.getName());", "-  } catch (ClassNotFoundException e) {", "-      throw new CatchedExceptionError(e, node);", "-  } catch (PseudoError e) {", "-  }", "-     }", "-     return null;", "- }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b308aca87cc2c95bca02306df085497", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic Object visit(ImportDeclaration node)", "signatureAfterChange": "     public Void visit(ImportDeclaration node)", "diff": ["-\t */", "-\tpublic Object visit(ImportDeclaration node) {", "-\t    // Declare the package or class importation", "-\t    if (node.isPackage()) {", "-\t\tcontext.declarePackageImport(node.getName());", "-\t    } else {", "-\t\ttry {", "-\t\t    context.declareClassImport(node.getName());", "-\t\t} catch (ClassNotFoundException e) {", "-\t\t    throw new CatchedExceptionError(e, node);", "-\t\t} catch (PseudoError e) {", "-\t\t}", "-\t    }", "-\t    return null;", "-\t}", "+     */", "+    public Void visit(ImportDeclaration node) {", "+      // Declare the package or class importation", "+      if (node.isPackage()) {", "+        context.declarePackageImport(node.getName());", "+      } else {", "+        try {", "+          context.declareClassImport(node.getName());", "+        } catch (ClassNotFoundException e) {", "+          throw new CatchedExceptionError(e, node);", "+        } catch (PseudoError e) {", "+        }", "+      }", "+      return null;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "805ea852d74948a1ea3f2c85fc1553c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Object visit(ImportDeclaration node)", "signatureAfterChange": "   public Class visit(ImportDeclaration node)", "diff": ["+   */", "+  public Class visit(ImportDeclaration node) {", "+    // Declare the package or class importation", "+    if (node.isPackage()) {", "+      context.declarePackageImport(node.getName());", "+    } else {", "+      try {", "+        context.declareClassImport(node.getName());", "+      } catch (ClassNotFoundException e) {", "+        throw new CatchedExceptionError(e, node);", "+      }", "+    return null;", "+  }", "-     */", "-    public Object visit(ImportDeclaration node) {", "-        // Declare the package or class importation", "-        if (node.isPackage()) {", "-            context.declarePackageImport(node.getName());", "-        } else {", "-            try {", "-                context.declareClassImport(node.getName());", "-            } catch (ClassNotFoundException e) {", "-                throw new CatchedExceptionError(e, node);", "-            }", "-        return null;", "-    }"]}], "num": 27824}