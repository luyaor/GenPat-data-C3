{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d92926cc4ca294f1b5c67b8adbb8deb5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07198929a5033c7b79146969d6f7bc8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ce1be4bebdf226da73b0f3a3408c7770e9d93c01", "commitAfterChange": "e48d5f3129b8001e5afe1a32af197a9281189fe3", "methodNumberBeforeChange": 394, "methodNumberAfterChange": 397, "signatureBeforeChange": "   private void _setUpTabs()", "signatureAfterChange": "   private void _setUpTabs()", "diff": ["+", "+    // hook highlighting listener to find results manager", "+    _model.getFindResultsManager().addListener(new RegionManagerListener<DocumentRegion>() {      ", "+      public void regionAdded(DocumentRegion r) {", "+        DefinitionsPane bpPane = getDefPaneGivenODD(r.getDocument());", "+        _documentFindResultsHighlights.", "+          put(r, bpPane.getHighlightManager().", "+                addHighlight(r.getStartOffset(), r.getEndOffset(), DefinitionsPane.FIND_RESULTS_PAINTER));", "+      }", "+      public void regionChanged(DocumentRegion r) { ", "+        regionRemoved(r);", "+        regionAdded(r);", "+      }", "+      public void regionRemoved(DocumentRegion r) {", "+        HighlightManager.HighlightInfo highlight = _documentFindResultsHighlights.get(r);", "+        if (highlight != null) highlight.remove();", "+        _documentFindResultsHighlights.remove(r);", "+      }", "+    });", "+    _tabs.addLast(_findResultsPanel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "339c0a0255350f027d01d9af59aeaa82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "11e630b08382faca40628146b7f40625d89f190c", "commitAfterChange": "4742de9e9abcc9abfbe963657e41dfd407aaaeee", "methodNumberBeforeChange": 397, "methodNumberAfterChange": 402, "signatureBeforeChange": "   private void _setUpTabs()", "signatureAfterChange": "   private void _setUpTabs()", "diff": ["-    // hook highlighting listener to find results manager", "-    _model.getFindResultsManager().addListener(new RegionManagerListener<DocumentRegion>() {      ", "-      public void regionAdded(DocumentRegion r) {", "-        DefinitionsPane bpPane = getDefPaneGivenODD(r.getDocument());", "-        _documentFindResultsHighlights.", "-          put(r, bpPane.getHighlightManager().", "-                addHighlight(r.getStartOffset(), r.getEndOffset(), DefinitionsPane.FIND_RESULTS_PAINTER));", "-      }", "-      public void regionChanged(DocumentRegion r) { ", "-        regionRemoved(r);", "-        regionAdded(r);", "-      }", "-      public void regionRemoved(DocumentRegion r) {", "-        HighlightManager.HighlightInfo highlight = _documentFindResultsHighlights.get(r);", "-        if (highlight != null) highlight.remove();", "-        _documentFindResultsHighlights.remove(r);", "-      }", "-    });", "-    ", "-    _tabs.addLast(_findResultsPanel);", "+    });", "+    if (_showDebugger) {", "+      _breakpointsPanel.getMainPanel().addFocusListener(new FocusAdapter() {", "+        public void focusGained(FocusEvent e) { _lastFocusOwner = _breakpointsPanel; }", "+      });", "+    }", "+    _bookmarksPanel.getMainPanel().addFocusListener(new FocusAdapter() {", "+      public void focusGained(FocusEvent e) { _lastFocusOwner = _bookmarksPanel; }"]}], "num": 21889}