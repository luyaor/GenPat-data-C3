{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "774f4368e9a2dcf6a65ecf41fa89972f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b1fdb4d13a4e72b353a88ab01715359", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    _compilerChoiceBox =", "-      new JComboBox(getModel().getCompilerModel().getAvailableCompilers());", "+    final CompilerModel compilerModel = getModel().getCompilerModel();", "+    _compilerChoiceBox = new JComboBox(compilerModel.getAvailableCompilers());", "-    _compilerChoiceBox.setSelectedItem", "-      (getModel().getCompilerModel().getActiveCompiler());", "+    _compilerChoiceBox.setSelectedItem(compilerModel.getActiveCompiler());", "-        CompilerInterface compiler = (CompilerInterface)", "-          _compilerChoiceBox.getSelectedItem();", "-        if (compiler != null) {", "-          getModel().getCompilerModel().setActiveCompiler(compiler);", "-        }", "-        else {", "-          getModel().getCompilerModel()", "-            .setActiveCompiler(NoCompilerAvailable.ONLY);", "-        }", "-        getModel().getCompilerModel().resetCompilerErrors();", "+        CompilerInterface compiler = (CompilerInterface) _compilerChoiceBox.getSelectedItem();", "+        if (compiler == null) compiler = NoCompilerAvailable.ONLY;", "+        compilerModel.setActiveCompiler(compiler);", "+        compilerModel.resetCompilerErrors();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a81abb202e935cdeb7765ba36b03af47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    _compilerChoiceBox = new JComboBox(getModel().getAvailableCompilers());", "+    _compilerChoiceBox = ", "+      new JComboBox(getModel().getCompilerModel().getAvailableCompilers());", "-    _compilerChoiceBox.setSelectedItem(getModel().getActiveCompiler());", "+    _compilerChoiceBox.setSelectedItem", "+      (getModel().getCompilerModel().getActiveCompiler());", "-          getModel().setActiveCompiler(compiler);", "+          getModel().getCompilerModel().setActiveCompiler(compiler);", "-          getModel().setActiveCompiler(NoCompilerAvailable.ONLY);", "+          getModel().getCompilerModel()", "+            .setActiveCompiler(NoCompilerAvailable.ONLY);", "-        getModel().resetCompilerErrors();", "+        getModel().getCompilerModel().resetCompilerErrors();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa8434f0b7263880b3471d29dd339314", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "f858bdc4a8556fa2d602de70e64361813405ec96", "commitAfterChange": "9a6ce0c2dd9939538b22d21a227d64c36bc636d3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    _compilerChoiceBox = new JComboBox(compilerModel.getAvailableCompilers());", "+    Iterable<CompilerInterface> iter = getModel().getCompilerModel().getAvailableCompilers();", "+    _compilerChoiceBox = new JComboBox(IterUtil.asList(iter).toArray(new CompilerInterface[0]));", "-        CompilerInterface compiler = (CompilerInterface) _compilerChoiceBox.getSelectedItem();", "-        if (compiler == null) compiler = NoCompilerAvailable.ONLY;", "-        compilerModel.setActiveCompiler(compiler);", "-        compilerModel.resetCompilerErrors();", "-        _compileHasOccurred = false;", "-        reset();", "+        if (e.getStateChange() == ItemEvent.SELECTED) {", "+          CompilerInterface compiler = (CompilerInterface) _compilerChoiceBox.getSelectedItem();", "+          compilerModel.setActiveCompiler(compiler);", "+          compilerModel.resetCompilerErrors();", "+          _compileHasOccurred = false;", "+          reset();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80f6f9070e0cb0c31a41ae2f8057b85", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "signatureAfterChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "diff": ["-      if (_compileHasOccurred) {", "+      if (_compileHasOccurred) ", "-      }", "-      else {", "-        if (getModel().getCompilerModel().getAvailableCompilers().length == 0) {", "-          message = \"No compiler is available.  Please specify one in\\n\" +", "-            \"the Preferences dialog in the Edit menu.\";", "-        }", "-        else {", "-          if (getModel().getCompilerModel().getActiveCompiler() == NoCompilerAvailable.ONLY) {", "-            message = \"No compiler available.\";", "-          }", "-          else {", "-            message = getModel().getCompilerModel().getActiveCompiler().getName() + \" compiler ready.\";", "-          }", "-        }", "-      }", "+      else if (getModel().getCompilerModel().getAvailableCompilers().length == 0)", "+        message = \"No compiler is available.  Please specify one in\\nthe Preferences dialog in the Edit menu.\";", "+      else if (getModel().getCompilerModel().getActiveCompiler() == NoCompilerAvailable.ONLY)", "+        message = \"No compiler available.\";", "+      else ", "+        message = getModel().getCompilerModel().getActiveCompiler().getName() + \" compiler ready.\";"]}], "num": 8203}