{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82d6231e31f8da766319f6f76fbddbe6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13b0c828f468c746b8bc974a437c07dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 462, "methodNumberAfterChange": 462, "signatureBeforeChange": "\r \r   public void forBooleanLiteral(BooleanLiteral that)", "signatureAfterChange": "    public void forBooleanLiteral(BooleanLiteral that)", "diff": ["-\r", "-  public void forBooleanLiteral(BooleanLiteral that) {\r", "-    forBooleanLiteralDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forBooleanLiteralOnly(that);\r", "-  }\r", "+", "+  public void forBooleanLiteral(BooleanLiteral that) {", "+    forBooleanLiteralDoFirst(that);", "+    if (prune(that)) return;", "+    forBooleanLiteralOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c34daf0f924a871bda1a2a0957f3dde", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 495, "methodNumberAfterChange": 495, "signatureBeforeChange": "\r \r \r   public void forEmptyForCondition(EmptyForCondition that)", "signatureAfterChange": "      public void forEmptyForCondition(EmptyForCondition that)", "diff": ["-\r", "-  public void forEmptyForCondition(EmptyForCondition that) {\r", "-    forEmptyForConditionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forEmptyForConditionOnly(that);\r", "-  }\r", "+  ", "+  public void forEmptyForCondition(EmptyForCondition that) {", "+    forEmptyForConditionDoFirst(that);", "+    if (prune(that)) return;", "+    forEmptyForConditionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45e100384c5907fdf89bbeeded756e58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 465, "methodNumberAfterChange": 465, "signatureBeforeChange": "\r \r   public void forNullLiteral(NullLiteral that)", "signatureAfterChange": "    public void forNullLiteral(NullLiteral that)", "diff": ["-\r", "-  public void forNullLiteral(NullLiteral that) {\r", "-    forNullLiteralDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forNullLiteralOnly(that);\r", "-  }\r", "+", "+  public void forNullLiteral(NullLiteral that) {", "+    forNullLiteralDoFirst(that);", "+    if (prune(that)) return;", "+    forNullLiteralOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ad7471da81a01d8a6103415251dd779", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 458, "methodNumberAfterChange": 458, "signatureBeforeChange": "\r \r   public void forIntegerLiteral(IntegerLiteral that)", "signatureAfterChange": "    public void forIntegerLiteral(IntegerLiteral that)", "diff": ["-\r", "-  public void forIntegerLiteral(IntegerLiteral that) {\r", "-    forIntegerLiteralDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forIntegerLiteralOnly(that);\r", "-  }\r", "+", "+  public void forIntegerLiteral(IntegerLiteral that) {", "+    forIntegerLiteralDoFirst(that);", "+    if (prune(that)) return;", "+    forIntegerLiteralOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df8ab6f848796909e4b12d796b0bc69", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 410, "methodNumberAfterChange": 410, "signatureBeforeChange": "\r \r   public void forTypeVariable(TypeVariable that)", "signatureAfterChange": "    public void forTypeVariable(TypeVariable that)", "diff": ["-\r", "-  public void forTypeVariable(TypeVariable that) {\r", "-    forTypeVariableDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forTypeVariableOnly(that);\r", "-  }\r", "+", "+  public void forTypeVariable(TypeVariable that) {", "+    forTypeVariableDoFirst(that);", "+    if (prune(that)) return;", "+    forTypeVariableOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72f104461612303ba5aa1e33012e452e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 460, "methodNumberAfterChange": 460, "signatureBeforeChange": "\r \r   public void forDoubleLiteral(DoubleLiteral that)", "signatureAfterChange": "    public void forDoubleLiteral(DoubleLiteral that)", "diff": ["-\r", "-  public void forDoubleLiteral(DoubleLiteral that) {\r", "-    forDoubleLiteralDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forDoubleLiteralOnly(that);\r", "-  }\r", "+", "+  public void forDoubleLiteral(DoubleLiteral that) {", "+    forDoubleLiteralDoFirst(that);", "+    if (prune(that)) return;", "+    forDoubleLiteralOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73268013758087cfd4244cdf6bd909b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 391, "methodNumberAfterChange": 391, "signatureBeforeChange": "\r \r   public void forVoidReturnStatement(VoidReturnStatement that)", "signatureAfterChange": "    public void forVoidReturnStatement(VoidReturnStatement that)", "diff": ["-\r", "-  public void forVoidReturnStatement(VoidReturnStatement that) {\r", "-    forVoidReturnStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forVoidReturnStatementOnly(that);\r", "-  }\r", "+", "+  public void forVoidReturnStatement(VoidReturnStatement that) {", "+    forVoidReturnStatementDoFirst(that);", "+    if (prune(that)) return;", "+    forVoidReturnStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f3190fa760acce972e56effa980dcd0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 397, "methodNumberAfterChange": 397, "signatureBeforeChange": "\r \r   public void forEmptyStatement(EmptyStatement that)", "signatureAfterChange": "    public void forEmptyStatement(EmptyStatement that)", "diff": ["-\r", "-  public void forEmptyStatement(EmptyStatement that) {\r", "-    forEmptyStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forEmptyStatementOnly(that);\r", "-  }\r", "+", "+  public void forEmptyStatement(EmptyStatement that) {", "+    forEmptyStatementDoFirst(that);", "+    if (prune(that)) return;", "+    forEmptyStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f3d1956eb6b23a1be4f37b6452f04db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 367, "methodNumberAfterChange": 367, "signatureBeforeChange": "\r \r \r   public void forWord(Word that)", "signatureAfterChange": "     public void forWord(Word that)", "diff": ["-\r", "-  public void forWord(Word that) {\r", "-    forWordDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forWordOnly(that);\r", "-  }\r", "+", "+  public void forWord(Word that) {", "+    forWordDoFirst(that);", "+    if (prune(that)) return;", "+    forWordOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc04bae466b823d2bedb08f26fab8ce4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 461, "methodNumberAfterChange": 461, "signatureBeforeChange": "\r \r   public void forFloatLiteral(FloatLiteral that)", "signatureAfterChange": "    public void forFloatLiteral(FloatLiteral that)", "diff": ["-\r", "-  public void forFloatLiteral(FloatLiteral that) {\r", "-    forFloatLiteralDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forFloatLiteralOnly(that);\r", "-  }\r", "+", "+  public void forFloatLiteral(FloatLiteral that) {", "+    forFloatLiteralDoFirst(that);", "+    if (prune(that)) return;", "+    forFloatLiteralOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cea531d422781383ff1c76da44b0fe7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 406, "methodNumberAfterChange": 406, "signatureBeforeChange": "\r \r   public void forPrimitiveType(PrimitiveType that)", "signatureAfterChange": "    public void forPrimitiveType(PrimitiveType that)", "diff": ["-\r", "-  public void forPrimitiveType(PrimitiveType that) {\r", "-    forPrimitiveTypeDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forPrimitiveTypeOnly(that);\r", "-  }\r", "+", "+  public void forPrimitiveType(PrimitiveType that) {", "+    forPrimitiveTypeDoFirst(that);", "+    if (prune(that)) return;", "+    forPrimitiveTypeOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d133bbd72bfb70d70732ef70f73826ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 489, "methodNumberAfterChange": 489, "signatureBeforeChange": "\r \r   public void forEmptyExpression(EmptyExpression that)", "signatureAfterChange": "    public void forEmptyExpression(EmptyExpression that)", "diff": ["-\r", "-  public void forEmptyExpression(EmptyExpression that) {\r", "-    forEmptyExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forEmptyExpressionOnly(that);\r", "-  }\r", "+", "+  public void forEmptyExpression(EmptyExpression that) {", "+    forEmptyExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    forEmptyExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1cc94c5c1411b35589710fd738e62c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 464, "methodNumberAfterChange": 464, "signatureBeforeChange": "\r \r   public void forStringLiteral(StringLiteral that)", "signatureAfterChange": "    public void forStringLiteral(StringLiteral that)", "diff": ["-\r", "-  public void forStringLiteral(StringLiteral that) {\r", "-    forStringLiteralDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forStringLiteralOnly(that);\r", "-  }\r", "+", "+  public void forStringLiteral(StringLiteral that) {", "+    forStringLiteralDoFirst(that);", "+    if (prune(that)) return;", "+    forStringLiteralOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d61c408eaa0607e1cc5b99f5005de1ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 459, "methodNumberAfterChange": 459, "signatureBeforeChange": "\r \r   public void forLongLiteral(LongLiteral that)", "signatureAfterChange": "    public void forLongLiteral(LongLiteral that)", "diff": ["-\r", "-  public void forLongLiteral(LongLiteral that) {\r", "-    forLongLiteralDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forLongLiteralOnly(that);\r", "-  }\r", "+", "+  public void forLongLiteral(LongLiteral that) {", "+    forLongLiteralDoFirst(that);", "+    if (prune(that)) return;", "+    forLongLiteralOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dee2ff5e88fb222f0876d2cb1a764129", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 463, "methodNumberAfterChange": 463, "signatureBeforeChange": "\r \r   public void forCharLiteral(CharLiteral that)", "signatureAfterChange": "    public void forCharLiteral(CharLiteral that)", "diff": ["-\r", "-  public void forCharLiteral(CharLiteral that) {\r", "-    forCharLiteralDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forCharLiteralOnly(that);\r", "-  }\r", "+", "+  public void forCharLiteral(CharLiteral that) {", "+    forCharLiteralDoFirst(that);", "+    if (prune(that)) return;", "+    forCharLiteralOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff1d04009762f1f336393a3e374bcd57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 411, "methodNumberAfterChange": 411, "signatureBeforeChange": "\r \r   public void forVoidReturn(VoidReturn that)", "signatureAfterChange": "    public void forVoidReturn(VoidReturn that)", "diff": ["-\r", "-  public void forVoidReturn(VoidReturn that) {\r", "-    forVoidReturnDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forVoidReturnOnly(that);\r", "-  }\r", "+", "+  public void forVoidReturn(VoidReturn that) {", "+    forVoidReturnDoFirst(that);", "+    if (prune(that)) return;", "+    forVoidReturnOnly(that);", "+  }"]}], "num": 9076}