{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7dfaf4952e976db8ad3757bc1e1bbf3f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a10ef919a7d9c6621d24f76775bc4132", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "b7e7dc26985115a0b1d39562458d043f05ace9bb", "commitAfterChange": "f8bbe10df4c611d46e38b444998362529994b559", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   private void _handleRemoteException(RemoteException e)", "signatureAfterChange": "   private void _handleRemoteException(RemoteException e)", "diff": ["-    if (e instanceof UnmarshalException && e.getCause() instanceof EOFException) {", "+    if (e instanceof UnmarshalException) {", "+      if (e.getCause() instanceof EOFException) return;", "+      /* Deals with bug 2688586: Reset during debugging throws UnmarshalException", "+       * We may want to extend this to all kinds of SocketExceptions. */", "+      if ((e.getCause() instanceof SocketException) &&", "+          (e.getCause().getMessage().equals(\"Connection reset\"))) return;", "-    else { DrJavaErrorHandler.record(e); }", "+    DrJavaErrorHandler.record(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d57faa6f7b7c84b489982b8600d60267", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/KeyStrokeOption.java", "commitBeforeChange": "762f9487498790edfa8d7b58c3d83cb6592af447", "commitAfterChange": "1ea7874872b93b44444c8711a298524cf05a221e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public String format(KeyStroke k)", "signatureAfterChange": "   public String format(KeyStroke k)", "diff": ["-        return \"null\";", "+        return \"<none>\";", "+        if (key.equals(\"CONTROL\") || key.equals(\"ALT\") || key.equals(\"META\") ||", "+            key.equals(\"SHIFT\"))", "+          return s;"]}], "num": 5098}