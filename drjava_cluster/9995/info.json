{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88d1d46e5a4eebe9b1f84c1ca9279edc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6497f8fbf4bc990c5cd11cee3d5f2413", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyAdvancedVisitor.java", "commitBeforeChange": "5e7a16013fcb5945eddc036e2d2d0ce3e14ba2d0", "commitAfterChange": "e1389ddb9dcb8a7d3a230cc1be322481e1c8fd6a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void forCatchBlock(CatchBlock that)", "signatureAfterChange": "   public Void forCatchBlock(CatchBlock that)", "diff": ["-   */", "-  public void forCatchBlock(CatchBlock that) {", "+  /** Visit the block as in forBlock(), but first add the exception parameter as a variable in that block. */", "+  public Void forCatchBlock(CatchBlock that) {", "-    if (prune(that)) return;", "+    if (prune(that)) return null;", "-    if (prune(b)) return;", "+    if (prune(b)) return null;", "-    if (prune(that.getException())) return;", "+    if (prune(that.getException())) return null;", "-    forCatchBlockOnly(that);", "+    return forCatchBlockOnly(that);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dad0e628e6673ad0ce3b6feba97052c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "5e7a16013fcb5945eddc036e2d2d0ce3e14ba2d0", "commitAfterChange": "e1389ddb9dcb8a7d3a230cc1be322481e1c8fd6a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void forCatchBlock(CatchBlock that)", "signatureAfterChange": "   public Void forCatchBlock(CatchBlock that)", "diff": ["-   */", "-  public void forCatchBlock(CatchBlock that) {", "+  /** Visit the block as in forBlock(), but first add the exception parameter as a variable in that block. */", "+  public Void forCatchBlock(CatchBlock that) {", "-    if (prune(that)) return;", "+    if (prune(that)) return null;", "-    if (prune(b)) return;", "+    if (prune(b)) return null;", "-    if (prune(that.getException())) return;", "+    if (prune(that.getException())) return null;", "-    forCatchBlockOnly(that);", "+    return forCatchBlockOnly(that);"]}], "num": 9995}