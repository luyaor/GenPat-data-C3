{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69aa1282195f7567173c0a1c40fe624f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69467cb68cf97efa15985c89e949b0f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "commitAfterChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected void handleSlaveWontStart(Exception e)", "signatureAfterChange": "   protected void handleSlaveWontStart(Exception e)", "diff": ["-    boolean giveUp;", "-    synchronized (_startupLock) {", "-      _startupAttempts++;", "-      debug.logValue(\"startupFailures\", _startupAttempts);", "-      giveUp = _startupAttempts > MAX_STARTUP_FAILURES;", "-      if (giveUp) {", "-        _restart = false;", "-        _startupAttempts = 0;", "-        _startupComplete.signal();", "-      }", "-    }", "-    if (giveUp) {", "-      debug.log(\"Giving up on restart\");", "-      _interactionsModel.interpreterWontStart(e);", "-    }", "-    else {", "-      debug.logStart(\"trying to start interpreter again\");", "-      _doStartup();", "-      debug.logEnd(\"trying to start interpreter again\");", "-    }", "+    debug.log(\"Slave won't start\", e);", "+    _state.value().startFailed(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba3cdbf1b35966de7218c6b62588f431", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "commitAfterChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void startInterpreterJVM()", "signatureAfterChange": "   public void startInterpreterJVM()", "diff": ["-  public void startInterpreterJVM() {", "-    debug.logStart();", "-", "-    boolean alreadyStarted;", "-    synchronized (_startupLock) {", "-      alreadyStarted = (_interpreterJVM.value() != null || !_startupComplete.isSignaled());", "-      if (!alreadyStarted) {", "-        _startupComplete.reset();", "-        _startupAttempts = 1;", "-      }", "-    }", "-    if (alreadyStarted) { debug.log(\"Already started\"); }", "-    else { _doStartup(); }", "-    debug.logEnd();", "-  }", "+  public void startInterpreterJVM() { _state.value().start(); }"]}], "num": 13262}