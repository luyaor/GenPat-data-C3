{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df86e80a1c134807d9bc5469d379b2c7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53e962414d25bed8ea448ffb2b418af3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 480, "methodNumberAfterChange": 480, "signatureBeforeChange": "\r \r   public void forSimpleMethodInvocation(SimpleMethodInvocation that)", "signatureAfterChange": "    public void forSimpleMethodInvocation(SimpleMethodInvocation that)", "diff": ["-\r", "-  public void forSimpleMethodInvocation(SimpleMethodInvocation that) {\r", "-    forSimpleMethodInvocationDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getName().visit(this);\r", "-    that.getArguments().visit(this);\r", "-    forSimpleMethodInvocationOnly(that);\r", "-  }\r", "+", "+  public void forSimpleMethodInvocation(SimpleMethodInvocation that) {", "+    forSimpleMethodInvocationDoFirst(that);", "+    if (prune(that)) return;", "+    that.getName().visit(this);", "+    that.getArguments().visit(this);", "+    forSimpleMethodInvocationOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74553804f0826853d1bb09eeb79b0e2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 482, "methodNumberAfterChange": 482, "signatureBeforeChange": "\r \r   public void forSimpleThisConstructorInvocation(SimpleThisConstructorInvocation that)", "signatureAfterChange": "    public void forSimpleThisConstructorInvocation(SimpleThisConstructorInvocation that)", "diff": ["-\r", "-  public void forSimpleThisConstructorInvocation(SimpleThisConstructorInvocation that) {\r", "-    forSimpleThisConstructorInvocationDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getArguments().visit(this);\r", "-    forSimpleThisConstructorInvocationOnly(that);\r", "-  }\r", "+", "+  public void forSimpleThisConstructorInvocation(SimpleThisConstructorInvocation that) {", "+    forSimpleThisConstructorInvocationDoFirst(that);", "+    if (prune(that)) return;", "+    that.getArguments().visit(this);", "+    forSimpleThisConstructorInvocationOnly(that);", "+  }"]}], "num": 25767}