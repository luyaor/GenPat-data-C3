{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a67539803b34be6c87378065ef794e7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1952d3f580d690ee469fb4048ab59018", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   public Object visit(ExclusiveOrAssignExpression node)", "signatureAfterChange": "   public Object visit(ExclusiveOrAssignExpression node)", "diff": ["-    Class resType = NodeProperties.getType(node);", "-    Class calcType = resType; // always a primitive type", "+    Class<?> resType = NodeProperties.getType(node);", "+    Class<?> calcType = resType; // always a primitive type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2be4aee5a170c5c3cd121bdacfdf0e7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "   public Object visit(BitOrAssignExpression node)", "signatureAfterChange": "   public Object visit(BitOrAssignExpression node)", "diff": ["-    Class resType = NodeProperties.getType(node);", "-    Class calcType = resType; // always a primitive type", "+    Class<?> resType = NodeProperties.getType(node);", "+    Class<?> calcType = resType; // always a primitive type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "306c0b9da59882ac348402312da8c47b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "   public Object visit(BitAndAssignExpression node)", "signatureAfterChange": "   public Object visit(BitAndAssignExpression node)", "diff": ["-    Class resType = NodeProperties.getType(node);", "-    Class calcType = resType; // always a primitive type", "+    Class<?> resType = NodeProperties.getType(node);", "+    Class<?> calcType = resType; // always a primitive type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "687e6aeea7a485cbad97cf83441490c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "   public Object visit(ShiftLeftAssignExpression node)", "signatureAfterChange": "   public Object visit(ShiftLeftAssignExpression node)", "diff": ["-    Class resType = NodeProperties.getType(node);", "-    Class calcType = resType; // always a primitive type", "+    Class<?> resType = NodeProperties.getType(node);", "+    Class<?> calcType = resType; // always a primitive type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85d6f699369990e1f795d507eb5b214c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "   public Object visit(PreDecrement node)", "signatureAfterChange": "   public Object visit(PreDecrement node)", "diff": ["-    Class resType = NodeProperties.getType(node);", "-    Class calcType = resType; // always a primitive type", "+    Class<?> resType = NodeProperties.getType(node);", "+    Class<?> calcType = resType; // always a primitive type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "917c07457dd848a27f62d40cd86e28c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "   public Object visit(PostDecrement node)", "signatureAfterChange": "   public Object visit(PostDecrement node)", "diff": ["-    Class resType = NodeProperties.getType(node);", "-    Class calcType = resType; // always a primitive type", "+    Class<?> resType = NodeProperties.getType(node);", "+    Class<?> calcType = resType; // always a primitive type"]}], "num": 1561}