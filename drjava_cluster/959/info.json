{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f730dfc1b627282a73de7170b7994152", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16db2899c54627e65aee6d2fbae9b959", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "10c44767bf3d5eefd230820d6106fe1ea2534e6f", "commitAfterChange": "c1c9eac4e19bc59469201ee2ac4b0d20897056f9", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "   public void closeProject()", "signatureAfterChange": "   public void closeProject(boolean quitting)", "diff": ["-  public void closeProject() {", "-    setDocumentNavigator(new AWTContainerNavigatorFactory<OpenDefinitionsDocument>().makeListNavigator(getDocumentNavigator()));", "+  public void closeProject(boolean quitting) {", "+    setDocumentNavigator(new AWTContainerNavigatorFactory<OpenDefinitionsDocument>().", "+                           makeListNavigator(getDocumentNavigator()));", "-    resetInteractions(getWorkingDirectory());", "+    if (! quitting) resetInteractions(getWorkingDirectory());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b2b7e86eb68be9349b2351be53f1d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "c3686d18afe86d8459a6ef71e5f779589d915dd8", "commitAfterChange": "1e5237b2401d25a04c08b7b54162568a6d55c836", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public synchronized int getFirstNonWSCharPos(int pos,char[] whitespace)     throws BadLocationException", "signatureAfterChange": "   public synchronized int getFirstNonWSCharPos     (int pos, char[] whitespace, boolean acceptComments) throws BadLocationException", "diff": ["-  public synchronized int getFirstNonWSCharPos(int pos,char[] whitespace)", "-    throws BadLocationException", "+  public synchronized int getFirstNonWSCharPos", "+    (int pos, char[] whitespace, boolean acceptComments) throws BadLocationException", "-        // Check if non-ws char is in comment", "-        if((_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_LINE_COMMENT)) ||", "-           (_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_BLOCK_COMMENT))) {", "+        // Check if non-ws char is in comment, and we want to ignore them.", "+        if (!acceptComments &&", "+            ((_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_LINE_COMMENT)) ||", "+             (_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_BLOCK_COMMENT))))", "+        {", "-          /*", "-          int tokenSize = _reduced.currentToken().getSize();", "-          int offset = _reduced.getBlockOffset();", "-          //DrJava.consoleOut().println(\"     token len: \" + tokenSize +", "-          //                            \", offset: \" + offset);", "-          //DrJava.consoleOut().println(\"     token before: \" + _reduced.currentToken().getState());", "-          _reduced.move(tokenSize - offset);", "-          i += tokenSize - offset;", "-          //DrJava.consoleOut().println(\"     token after: \" + _reduced.currentToken().getState());", "-          */", "+//          int tokenSize = _reduced.currentToken().getSize();", "+//          int offset = _reduced.getBlockOffset();", "+//          //DrJava.consoleOut().println(\"     token len: \" + tokenSize +", "+//          //                            \", offset: \" + offset);", "+//          //DrJava.consoleOut().println(\"     token before: \" + _reduced.currentToken().getState());", "+//          _reduced.move(tokenSize - offset);", "+//          i += tokenSize - offset;", "+//          //DrJava.consoleOut().println(\"     token after: \" + _reduced.currentToken().getState());", "+", "-          if(_isStartOfComment(text, i - pos)) {", "+          if(!acceptComments && _isStartOfComment(text, i - pos)) {"]}], "num": 959}