{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3423bf9ed9b9614eaa393fa7c8fe41e4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d88f25d288d8c5f7e576f2551003a7c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "       public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason)", "signatureAfterChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "diff": ["-      public void junitEnded() { junitEndCount++; }", "-      public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason) {", "-        assertEquals(\"should be JUNIT reason to save\", JUNIT_REASON, reason);", "-        assertModified(true, doc);", "-        assertSaveCount(0);", "-        assertCompileStartCount(0);", "-        assertCompileEndCount(0);", "-        ", "-        try {", "-          doc.saveFile(new FileSelector(file));", "-        }", "-        catch (IOException ioe) {", "-          fail(\"Save produced exception: \" + ioe);", "-        }", "-        ", "-        saveAllBeforeProceedingCount++;", "-      }", "+   */", "+  public void testUnsavedAndUnCompiledChanges() throws Exception {", "+    OpenDefinitionsDocument doc = setupDocument(MONKEYTEST_PASS_TEXT);", "+    final File file = new File(_tempDir, \"MonkeyTestPass.java\");", "+    doc.saveFile(new FileSelector(file));", "+    TestShouldSucceedListener listener = new TestShouldSucceedListener();", "+    _model.addListener(listener);", "+    synchronized(listener) {", "+      doc.startCompile();", "+      listener.wait();", "+    }", "+    changeDocumentText(MONKEYTEST_FAIL_TEXT, doc);", "+    synchronized(listener) {", "+      doc.startJUnit();", "+      listener.wait();", "+    }", "+    _model.removeListener(listener);", "+    ", "+    assertEquals(\"test case should have no errors reported after modifying\",", "+                 0,", "+                 doc.getJUnitErrorModel().getNumErrors());", "+    doc.saveFile(new FileSelector(file));", "+    doc.startJUnit();", "+    ", "+    assertEquals(\"test case should have no errors reported after saving\",", "+                 0,", "+                 doc.getJUnitErrorModel().getNumErrors());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d9defb1137969f54dddfc9833495f01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "7c4507413beb0e75cdce1379ffec8d0279bed992", "commitAfterChange": "d1bf0f940bc3d914d8d8293a0e85760984d7b371", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 246, "signatureBeforeChange": "           public File getFile() throws FileMovedException", "signatureAfterChange": "   public synchronized void addToBrowserHistory()", "diff": ["-          public OpenDefinitionsDocument getDocument() { return odd; }", "-          public File getFile() throws FileMovedException { return odd.getFile(); }", "+  /** Add the current location to the browser history. */", "+  public synchronized void addToBrowserHistory() {", "+    final OpenDefinitionsDocument doc = getActiveDocument();", "+    ", "+    if (doc!=null) {", "+      doc.acquireReadLock();", "+      try {", "+        final Position startPos = doc.createPosition(doc.getCaretPosition());", "+        final Position endPos = doc.createPosition(doc.getLineEndPos(doc.getCaretPosition()));", "+        getBrowserHistoryManager().addRegion(new SimpleDocumentRegion(doc, doc.getFile(), startPos.getOffset(), endPos.getOffset()));", "+      }", "+      catch (FileMovedException fme) {", "+        throw new UnexpectedException(fme);", "+      }", "+      catch (BadLocationException ble) {", "+        throw new UnexpectedException(ble);", "+      }", "+      finally { doc.releaseReadLock(); }", "+    }"]}], "num": 16730}