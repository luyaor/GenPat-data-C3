{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e80f337b9b50a1469e8fbf1c6b91f30", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ef5bc8ce09b9fb6191052e1c1815dda", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public String getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)", "signatureAfterChange": "   public int getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)", "diff": ["-  public String getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)  {", "+  public int getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)  {", "+", "-    ", "-//        final Query key = new Query.IndentOfCurrStmt(pos, delims, whitespace);", "-//        final String cached = (String) _checkCache(key);", "-//        if (cached != null) return cached;", "+", "-        final String cached = (String) _checkCache(key);", "-        if (cached != null) return cached;", "+        final Integer cached = (Integer) _checkCache(key);", "+        if (cached != null) return cached;  // relying on auto-unboxing", "-        String wSPrefix = getBlankString(firstNonWS - newLineStart);  // ensure that the wsPrefix only contains blanks", "-        _storeInCache(key, wSPrefix, firstNonWS);", "+        int wSPrefix = firstNonWS - newLineStart;", "+        _storeInCache(key, wSPrefix, firstNonWS);  // relying on autoboxing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "244d7fd8c7421394c16328ec114cb584", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public IndentInfo getIndentInformation()", "signatureAfterChange": "   public IndentInfo _getIndentInformation()", "diff": ["-    // Check cache", "+  /* Performs same computation as getIndentInformation, except it assumes that the read lock is alreay held. */", "+  public IndentInfo _getIndentInformation() {", "+    // check cache", "+    final int pos = _currentLocation;", "+    Query key = new Query.IndentInformation(pos);", "+    IndentInfo cached = (IndentInfo) _checkCache(key);", "+    if (cached != null) return cached; ", "-    acquireReadLock();", "-    try {", "-      final int pos = _currentLocation;", "-      Query key = new Query.IndentInformation(pos);", "-      ", "-      IndentInfo cached = (IndentInfo) _checkCache(key);", "-      if (cached != null) return cached; ", "-      synchronized(_reduced) { ", "-        info = _reduced.getIndentInformation(); ", "-      } ", "-      _storeInCache(key, info, pos - 1);", "-      ", "-      return info;", "-    }", "-    finally { releaseReadLock(); }  ", "+    synchronized(_reduced) { info = _reduced.getIndentInformation(); } ", "+    _storeInCache(key, info, pos - 1);", "+    ", "+    return info;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3445e26ecaa6be1ecc12d17a8c1385d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public int findNextEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "signatureAfterChange": "   public int findNextEnclosingBrace(final int pos, final char opening, final char closing) throws BadLocationException", "diff": ["-  public int findNextEnclosingBrace(int pos, char opening, char closing) throws BadLocationException {", "+  public int findNextEnclosingBrace(final int pos, final char opening, final char closing) throws BadLocationException {", "-    final StringBuilder keyBuf = ", "-      new StringBuilder(\"findNextEnclosingBrace:\").append(opening).append(':').append(closing).append(':').append(pos);", "-    final String key = keyBuf.toString();", "+    final Query key = new Query.NextEnclosingBrace(pos, opening, closing);", "-    if (pos >= getLength()-1) { return ERROR_INDEX; }", "+    if (pos >= getLength() - 1) { return -1; }", "-      if (i == text.length()) reducedPos = ERROR_INDEX; // No matching char was found", "+      if (i == text.length()) reducedPos = -1; // No matching char was found", "-      // Return position of matching char or ERROR_INDEX     ", "+      // Return position of matching char or ERROR_INDEX (-1)     ", "-    ", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a37e62a1c6c3b1d2a7571f5040d28c5c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public String getIndentOfCurrStmt(int pos, char[] delims, char[] whitespace) throws BadLocationException", "signatureAfterChange": "   public String getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace) throws      BadLocationException", "diff": ["-  public String getIndentOfCurrStmt(int pos, char[] delims, char[] whitespace) throws BadLocationException {", "+  public String getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace) throws ", "+    BadLocationException {", "-    final StringBuilder keyBuf = new StringBuilder(\"getIndentOfCurrStmt:\").append(pos).append(':').append(whitespace);", "-    final String key = keyBuf.toString();", "+    final Query key = new Query.IndentOfCurrStmt(pos, delims, whitespace);", "-          if (prevDelim == ERROR_INDEX) { // no delimiter found", "+          if (prevDelim == -1) { // no delimiter found", "-        if (reachedStart) nextNonWSChar = getFirstNonWSCharPos(DOCSTART);", "+        if (reachedStart) nextNonWSChar = getFirstNonWSCharPos(0);", "-        if (nextNonWSChar == ERROR_INDEX) nextNonWSChar = getLength();", "+        if (nextNonWSChar == -1) nextNonWSChar = getLength();", "-        _storeInCache(key, lineText, pos);", "+        _storeInCache(key, lineText, pos - 1);"]}], "num": 8208}