{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b475adb7abf92300e68593b6e1575481", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b9a30b5ba92bce868517b8444a2dec4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "657a4474e2cff2279e8f7fa2db0bf7fc469049cb", "commitAfterChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void doubleClicked(MouseEvent e)", "signatureAfterChange": "   public void doubleClicked(MouseEvent e)", "diff": ["+        ", "+    List<OpenDefinitionsDocument> docs = _model.getOpenDefinitionsDocuments();", "+    if ((docs == null) || (docs.size() == 0)) return; // do nothing", "+", "-", "-    List<OpenDefinitionsDocument> docs = _model.getOpenDefinitionsDocuments();", "-    if ((docs == null) || (docs.size() == 0)) return; // do nothing", "-", "+    ", "+    while ((start >= 0) && (start < line.length()) && Character.isWhitespace(line.charAt(start))) {", "+      --start;", "+    }", "+      if (simpleName == null) { simpleName = \"\"; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3a2fb7db17adf9ae923ce8a027053b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "98f0c27d2704f53c27c12dba8736793eeeac44cf", "commitAfterChange": "807926b925dfb352a7bbfb2667234847dc65f45d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void doubleClicked(MouseEvent e)", "signatureAfterChange": "   public void doubleClicked(MouseEvent e)", "diff": ["-    while((end<t.length()) && (t.charAt(end)!='\\n')) { ++end; }", "+    while((end>=0) && (end<t.length()) && (t.charAt(end)!='\\n')) { ++end; }", "+    if ((start<0) || (end<0) || (start>=t.length()) || (end>=t.length())) return;", "-    while(end<line.length()) {", "+    while((end>=0) && (end<line.length())) {", "-    do {", "+    while(start>0) {", "-      if ((start>=0) && (end>=start)) {", "+      if ((start>=0) && (end>=start) && (start<line.length()) && (end<line.length())) {", "-    } while(start>0);", "+    }"]}], "num": 4151}