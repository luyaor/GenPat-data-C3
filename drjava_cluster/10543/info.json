{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e721df4349828eeec9e5531a425d17b8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4083c61460d8a20dfc411e8bfb73d4be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 288, "signatureBeforeChange": "   public static <T, R> Lambda<T, R> asLambda(final Runnable1<? super T> r, final R result)", "signatureAfterChange": "   public static <T, R> Lambda<T, R> asLambda(Runnable1<? super T> r, R result)", "diff": ["-  /** @return  A lambda that executes the given runnable, then returns {@code result} */", "-  public static <T, R> Lambda<T, R> asLambda(final Runnable1<? super T> r, final R result) {", "-    return new Lambda<T, R>() { public R value(T arg) { r.run(arg); return result; } };", "-  }", "+  /** Create a lambda that executes the given runnable, then returns {@code result}. */", "+  public static <T, R> Lambda<T, R> asLambda(Runnable1<? super T> r, R result) {", "+    return new RunnableLambda<T, R>(r, result);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c754c30a59f6eba3b9fa3cde93fe7bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "ff9333e71e149a259aa78828cab4c9a697c57c55", "commitAfterChange": "9063c30c220a374fd05cad2179b7b27d5702591e", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 141, "signatureBeforeChange": "   public static <T, R> Lambda<T, R> asLambda(final Command1<? super T> c, final R result)", "signatureAfterChange": "   public static <T, R> Lambda<T, R> asLambda(final Runnable1<? super T> r, final R result)", "diff": ["-  /** @return  A lambda that executes the given command, then returns {@code result} */", "-  public static <T, R> Lambda<T, R> asLambda(final Command1<? super T> c, final R result) {", "-    return new Lambda<T, R>() { public R value(T arg) { c.run(arg); return result; } };", "+  /** @return  A lambda that executes the given runnable, then returns {@code result} */", "+  public static <T, R> Lambda<T, R> asLambda(final Runnable1<? super T> r, final R result) {", "+    return new Lambda<T, R>() { public R value(T arg) { r.run(arg); return result; } };"]}], "num": 10543}