{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8a7883e93dc9c84f24f6328b7d137f2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56ac57a8adf25a5c2ffb8e2071cde138", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "520c98c03a1e651efb4dfbf7d7f2a55510c74658", "commitAfterChange": "3f953b8fb783fe3ca1b336468898f35cd9cde7db", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public Class visit(AddAssignExpression node)", "signatureAfterChange": "   public Class visit(AddAssignExpression node)", "diff": ["+    // Do some error checking for null, void, etc.", "-      if (lc == null || rc == null ||", "-          lc == void.class || rc == void.class ||", "-          rc == boolean.class || !rc.isPrimitive()) {", "+      if (lc == null          || rc == null          ||", "+          lc == void.class    || rc == void.class    ||", "+          lc == boolean.class || rc == boolean.class || ", "+          lc == Boolean.class || rc == Boolean.class ||", "+          !(lc.isPrimitive()  || _isBoxingType(lc))  || ", "+          !(rc.isPrimitive()  || _isBoxingType(rc)) ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7b3016d108e698515808076610ad46e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "520c98c03a1e651efb4dfbf7d7f2a55510c74658", "commitAfterChange": "3f953b8fb783fe3ca1b336468898f35cd9cde7db", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "   private Class visitBitwiseAssign(BinaryExpression node)", "signatureAfterChange": "   private Class visitBitwiseAssign(BinaryExpression node)", "diff": ["-    if (lc == null           || rc == null           ||", "-        lc == void.class     || rc == void.class     ||", "-        lc == float.class    || rc == float.class    ||", "-        lc == double.class   || rc == double.class   ||", "-        (lc == boolean.class ^ rc == boolean.class)  ||", "-        !lc.isPrimitive()    || !rc.isPrimitive()) {", "+    if (lc == null           || rc == null             ||", "+        lc == void.class     || rc == void.class       ||", "+        lc == float.class    || rc == float.class      ||", "+        lc == double.class   || rc == double.class     ||", "+        ((lc == boolean.class || lc == Boolean.class) ^ ", "+         (rc == boolean.class || rc == Boolean.class)) ||", "+        !(lc.isPrimitive() || _isBoxingType(lc))       || ", "+        !(rc.isPrimitive() || _isBoxingType(rc))) {"]}], "num": 665}