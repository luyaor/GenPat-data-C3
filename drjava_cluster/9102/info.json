{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae7d34884f7046899abe6b9b795ad660", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70d94eadacb57113afa84d299736b637", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "   public TypeData forUninitializedArrayInstantiationOnly(UninitializedArrayInstantiation that, TypeData type_result, TypeData[] dimensions_result)", "signatureAfterChange": "   public TypeData forUninitializedArrayInstantiationOnly(UninitializedArrayInstantiation that, TypeData type_result,                                                           TypeData[] dimensions_result)", "diff": ["-  public TypeData forUninitializedArrayInstantiationOnly(UninitializedArrayInstantiation that, TypeData type_result, TypeData[] dimensions_result) {", "+  public TypeData forUninitializedArrayInstantiationOnly(UninitializedArrayInstantiation that, TypeData type_result, ", "+                                                         TypeData[] dimensions_result) {", "-        if (!dimensions_result[i].getSymbolData().isAssignableTo(SymbolData.INT_TYPE, LanguageLevelConverter.OPT.javaVersion())) {", "-          _addError(\"The dimensions of an array instantiation must all be ints.  You have specified something of type \" + dimensions_result[i].getName(), dims[i]);", "+        if (!dimensions_result[i].getSymbolData().isAssignableTo(SymbolData.INT_TYPE, ", "+                                                                 JAVA_VERSION)) {", "+          _addError(\"The dimensions of an array instantiation must all be ints.  You have specified something of type \" +", "+                    dimensions_result[i].getName(), dims[i]);", "-          assertInstanceType(dimensions_result[i], \"All dimensions of an array instantiation must be instances.  You have specified the type \" + dimensions_result[i].getName(), dims[i]);", "+          assertInstanceType(dimensions_result[i], \"All dimensions of an array instantiation must be instances.\" + ", "+                             \"  You have specified the type \" + dimensions_result[i].getName(), dims[i]);", "-        _addError(\"You are trying to initialize an array of type \" + type_result.getName() + \" which requires \" + dim + \" dimensions, but you have specified \" + dimensions_result.length + \" dimensions--the wrong number\", that);", "+        _addError(\"You are trying to initialize an array of type \" + type_result.getName() + \" which requires \" + dim +", "+                  \" dimensions, but you have specified \" + dimensions_result.length + \" dimensions--the wrong number\", ", "+                  that);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5cbe0243bbd704dc940604cb132d681", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public TypeData forIncrementExpressionOnly(IncrementExpression that, TypeData value_result)", "signatureAfterChange": "   public TypeData forIncrementExpressionOnly(IncrementExpression that, TypeData value_result)", "diff": ["-   */", "+    */", "-    if (assertInstanceType(value_result, \"You cannot increment or decrement \" + value_result.getName() + \", because it is a class name not an instance\", that)) {", "-      if (!value_result.getSymbolData().isNumberType(LanguageLevelConverter.OPT.javaVersion())) {", "-        _addError(\"You cannot increment or decrement something that is not a number type.  You have specified something of type \" + value_result.getName(), that);", "+    if (assertInstanceType(value_result, \"You cannot increment or decrement \" + value_result.getName() + ", "+                           \", because it is a class name not an instance\", that)) {", "+      if (!value_result.getSymbolData().isNumberType(JAVA_VERSION)) {", "+        _addError(\"You cannot increment or decrement something that is not a number type.\" + ", "+                  \"  You have specified something of type \" + value_result.getName(), that);"]}], "num": 9102}