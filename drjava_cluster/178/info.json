{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "876c7b5e11205bbc8eed7ac577239771", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11cdc0d80213becbddc5f15c60ff0cc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "b1a009357ee38fae7ba4718d569db3d7d864b431", "commitAfterChange": "c18e1b711f51d63da82eefb4c4720e5a5f2e15db", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "diff": ["-                                                  \"<html>Give more detail for unchecked conversion warnings that are mandated<br>\" + ", "-                                                  \"by the Java Language Specification.</html>\"));", "+                                                  \"<html>Warn about unchecked conversions involving parameterized types.</html>\"));", "-                                                  \"<html>Show a description of each use or override of a deprecated member or class.</html>\"));", "+                                                  \"<html>Warn about each use or override of a deprecated method, field, or class.</html>\"));", "-                                                  \"<html>Warn about nonexistent path (classpath, sourcepath, etc) directories.</html>\"));", "+                                                  \"<html>Warn about nonexistent members of the classpath and sourcepath.</html>\"));", "-                                                  \"<html>Warn about <code>finally<code> clauses that cannot complete normally.</html>\"));", "+                                                  \"<html>Warn about <code>finally</code> clauses that cannot complete normally.</html>\"));", "-                                                  \"<html>Check <code>switch</code> blocks for fall-through cases and provide a warning message for any that are found.<br>\"+", "-                                                  \"Fall-through cases are cases in a <code>switch</code> block, other than the last case in the block,<br>\"+", "-                                                  \"whose code does not include a <code>break</code> statement, allowing code execution to \\\"fall through\\\"<br>\"+", "-                                                  \"from that case to the next case.</html>\"));", "+                                                  \"<html>Warn about <code>switch</code> block cases that fall through to the next case.</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48d47fa52fa08cd5bf5fc3e32bb699db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DrJavaPropertySetup.java", "commitBeforeChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "commitAfterChange": "fdb0eba529d65804f971cdb52c673713ef0d4616", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static void setup()", "signatureAfterChange": "   public static void setup()", "diff": ["-                                                             \"Make the directory with the provided name inside the specified \"+", "-                                                             \"parent directory. Evaluates to the empty string \\\"\\\" if \"+", "-                                                             \"successful.\\n\"+", "+                                                             \"Make the directory with the provided file name. \"+", "+                                                             \"Evaluates to the empty string \\\"\\\" if successful.\\n\"+", "-                                                             \"\\tname=\\\"<name for the new directory>\\\"\"+", "-                                                             \"\\tfile=\\\"<parent directory>\\\"\\n\"+", "-                                                             \"Multiple names can be specified for the name attribute, each \"+", "+                                                             \"\\tfile=\\\"<directory to create>\\\"\\n\"+", "+                                                             \"Multiple files can be specified for the file attribute, each \"+", "-                                                             \" on this machine. If multiple names are specified, then DrJava \"+", "+                                                             \" on this machine. If multiple files are specified, then DrJava \"+", "-        s = StringOps.unescapeSpacesWith1bHex(s);", "-        File f = new File(s);", "-        s = _attributes.get(\"name\");", "-        if (s==null) {", "-          _value = \"(file.mkdir Error: name missing...)\";", "-          return;", "-        }", "-          File n = new File(f,fs);", "+          File n = new File(fs);", "-        _attributes.put(\"name\", null);", "+                                                             \" on this machine)\\n\"+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "613838d0df8f47803d6977e0a29929a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 65, "signatureBeforeChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "diff": ["-                       new BooleanOptionComponent(OptionConstants.SHOW_UNCHECKED_WARNINGS, \"Show Unchecked Warnings\", this, ", "-                                                  \"<html>Warn about unchecked conversions involving parameterized types.</html>\", false)", "+                       newBooleanOptionComponent(OptionConstants.SHOW_UNCHECKED_WARNINGS, false)", "-                       new BooleanOptionComponent(OptionConstants.SHOW_DEPRECATION_WARNINGS, \"Show Deprecation Warnings\", this, ", "-                                                  \"<html>Warn about each use or override of a deprecated method, field, or class.</html>\", false)", "+                       newBooleanOptionComponent(OptionConstants.SHOW_DEPRECATION_WARNINGS, false)", "-                       new BooleanOptionComponent(OptionConstants.SHOW_PATH_WARNINGS, \"Show Path Warnings\", this, ", "-                                                  \"<html>Warn about nonexistent members of the classpath and sourcepath.</html>\", false)", "+                       newBooleanOptionComponent(OptionConstants.SHOW_PATH_WARNINGS, false)", "-                       new BooleanOptionComponent(OptionConstants.SHOW_SERIAL_WARNINGS, \"Show Serial Warnings\", this, ", "-                                                  \"<html>Warn about missing <code>serialVersionUID</code> definitions on serializable classes.</html>\", ", "-                                                  false)", "+                       newBooleanOptionComponent(OptionConstants.SHOW_SERIAL_WARNINGS,false)", "-                       new BooleanOptionComponent(OptionConstants.SHOW_FINALLY_WARNINGS, \"Show Finally Warnings\", this,", "-                                                  \"<html>Warn about <code>finally</code> clauses that cannot complete normally.</html>\", false)", "+                       newBooleanOptionComponent(OptionConstants.SHOW_FINALLY_WARNINGS, false)", "-                       new BooleanOptionComponent(OptionConstants.SHOW_FALLTHROUGH_WARNINGS, \"Show Fall-Through Warnings\", this,", "-                                                  \"<html>Warn about <code>switch</code> block cases that fall through to the next case.</html>\", ", "-                                                  false)", "+                       newBooleanOptionComponent(OptionConstants.SHOW_FALLTHROUGH_WARNINGS, false)", "-    final ForcedChoiceOptionComponent CPC = new ForcedChoiceOptionComponent(OptionConstants.COMPILER_PREFERENCE_CONTROL.evaluate(), \"Compiler Preference\", ", "-                         this,", "-                         \"Which compiler is prefered?\");", "+    final ForcedChoiceOptionComponent CPC =", "+      newForcedChoiceOptionComponent(OptionConstants.COMPILER_PREFERENCE_CONTROL.evaluate());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fa5187de6c724ab9ebf0d12bad3ba94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "diff": ["-                                       \"The lowest access level to include for fields and methods.\"));", "+                                       \"<html>Fields and methods with access modifiers at this level<br>\" +", "+                                       \"or higher will be included in the generated Javadoc.</html>\"));", "-      (new BooleanOptionComponent(OptionConstants.JAVADOC_FROM_ROOTS,", "-                                  \"Generate Javadoc From Source Roots\", this,", "-                                  \"<html>Whether Javadoc should be generated for all packages in<br>\" +", "-                                  \"an open document's source tree, rather than just the document's<br>\" +", "-                                  \"own package and sub-packages.</html>\"));", "+      (new FileOptionComponent(OptionConstants.JAVADOC_DESTINATION,", "+                               \"Default Destination Directory\", this,", "+                               \"Optional default directory for saving Javadoc documentation.\",", "+                               _fileOptionChooser));", "+    ", "-                                 \"Any extra parameters to pass to Javadoc.\"));", "+                                 \"Any extra flags or parameters to pass to Javadoc.\"));", "+    ", "-      (new FileOptionComponent(OptionConstants.JAVADOC_DESTINATION,", "-                               \"Default Destination Directory\", this,", "-                               \"The default directory for saving Javadoc documentation.\",", "-                               _fileOptionChooser));", "+      (new BooleanOptionComponent(OptionConstants.JAVADOC_FROM_ROOTS,", "+                                  \"Generate Javadoc From Source Roots\", this,", "+                                  \"<html>Whether 'Javadoc All' should generate Javadoc for all packages<br>\" +", "+                                  \"in an open document's source tree, rather than just the document's<br>\" +", "+                                  \"own package and sub-packages.</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9322ec4e6106bc68c8230b608b97429", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "839683081b0d966fa9fc02dc0e1948fc900d3a55", "commitAfterChange": "72ee238f22e4ae6534ad887ff5bcbab9970c036e", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "diff": ["-                                                  \"<html>Warn about unchecked conversions involving parameterized types.</html>\"));", "+                                                  \"<html>Warn about unchecked conversions involving parameterized types.</html>\", false)", "+                         .setEntireColumn(true));", "-                                                  \"<html>Warn about each use or override of a deprecated method, field, or class.</html>\"));", "+                                                  \"<html>Warn about each use or override of a deprecated method, field, or class.</html>\", false)", "+                         .setEntireColumn(true));", "-                                                  \"<html>Warn about nonexistent members of the classpath and sourcepath.</html>\"));", "+                                                  \"<html>Warn about nonexistent members of the classpath and sourcepath.</html>\", false)", "+                         .setEntireColumn(true));", "-                                                  \"<html>Warn about missing <code>serialVersionUID</code> definitions on serializable classes.</html>\"));", "+                                                  \"<html>Warn about missing <code>serialVersionUID</code> definitions on serializable classes.</html>\", false)", "+                         .setEntireColumn(true));", "-                                                  \"<html>Warn about <code>finally</code> clauses that cannot complete normally.</html>\"));", "+                                                  \"<html>Warn about <code>finally</code> clauses that cannot complete normally.</html>\", false)", "+                         .setEntireColumn(true));", "-                                                  \"<html>Warn about <code>switch</code> block cases that fall through to the next case.</html>\"));", "-    addOptionComponent(panel, new LabelComponent(\"<html><br><br>Note: Compiler warnings not shown if<br>compiling any Java language level files.</html>\", this, true));", "+                                                  \"<html>Warn about <code>switch</code> block cases that fall through to the next case.</html>\", false)", "+                         .setEntireColumn(true));", "+    addOptionComponent(panel, new LabelComponent(\"<html><br><br>Note: Compiler warnings not shown if compiling any Java language level files.</html>\", this, true));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e84ba28a26f3c57a7707b5975b99d832", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "69317eecda3235d4815eb5d9a5b9e536b8481c4a", "commitAfterChange": "3549437d3f0aec05949cb330cf74662cd269bb15", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   private void _setupMiscPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupMiscPanel(ConfigPanel panel)", "diff": ["-                                                  \"<html>On some platforms, DrJava does not shut down properly when files are open<br>\" + ", "+                                                  \"<html>On some platforms, DrJava does not shut down properly when files are open<br>\"+", "-                                                  \"<html>Whether DrJava should listen to a socket (see below) so it<br>\" + ", "-                                                         \"can be remote controlled and told to open files.<br>\" + ", "+                                                  \"<html>Whether DrJava should listen to a socket (see below) so it<br>\"+", "+                                                         \"can be remote controlled and told to open files.<br>\"+", "-                                                         \"<html>A running instance of DrJava can be remote controlled and<br>\" + ", "-                                                         \"told to open files. This specifies the port used for remote control.</html>\"));", "+                                                         \"<html>A running instance of DrJava can be remote controlled and<br>\"+", "+                                                         \"told to open files. This specifies the port used for remote control.<br>\" + ", "+                                                         \"(Changes will not be applied until DrJava is restarted.)</html>\"));", "-                                                         \"<html>The delay in milliseconds that has to elapse before DrJava will check<br>\" + ", "+                                                         \"<html>The delay in milliseconds that has to elapse before DrJava will check<br>\"+", "-                                                         \"<html>The maximum number of lines to keep in a \\\"Follow File\\\"<br>\" + ", "+                                                         \"<html>The maximum number of lines to keep in a \\\"Follow File\\\"<br>\"+"]}], "num": 178}