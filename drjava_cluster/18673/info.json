{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc52ce0711d4066f2f4c24e8af2ca7c2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d8abcf056ca012985a9a8b423ec8dec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyTypeChecker.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "          public void testForConstructorDef()", "signatureAfterChange": "          public void testForConstructorDef()", "diff": ["-      System.err.println(\"***** Starting traversal of classDef\");", "+//      System.err.println(\"***** Starting traversal of classDef\");", "-      System.err.println(\"Error 2 for line 803 of ClassBodyTypeChecker is: \" + errors.get(1).getFirst());", "-      System.err.println(\"Error 1 for line 803 of ClassBodyTypeChecker is: \" + errors.get(0).getFirst());", "+//      System.err.println(\"Error 2 for line 803 of ClassBodyTypeChecker is: \" + errors.get(1).getFirst());", "+//      System.err.println(\"Error 1 for line 803 of ClassBodyTypeChecker is: \" + errors.get(0).getFirst());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42639a52e1adc4e4b4334530887ca917", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorCaretListener.java", "commitBeforeChange": "facb31d52d0108009578d6a1708ac1dfc68b98b8", "commitAfterChange": "417b6d282f87d7da5aa7274e065294c3e7058851", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void updateHighlight(int curPos)", "signatureAfterChange": "   public void updateHighlight(int curPos)", "diff": ["-    for (errorAfter = 0; errorAfter < _positions.length; errorAfter++) {", "+    for (errorAfter = 0; errorAfter < _positions.length; errorAfter++) {   ", "-", "+   ", "+      //System.out.println(\"Error before: \" + _positions[errorBefore] + _positions[errorBefore].getOffset());", "-", "+    ", "+      //System.out.println(\"Error on or after:\" + _positions[errorAfter] + _positions[errorAfter].getOffset());", "+", "-      // Select item wants the CompilerError", "-      JUnitError[] errors = _model.getErrors();", "+      // Select item wants the JUnitError", "+      JUnitError[] errors = _model.getErrorsWithPositions();", "+"]}], "num": 18673}