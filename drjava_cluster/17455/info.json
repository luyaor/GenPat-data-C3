{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e24c24bb18ff0e3a991a1ad8e1ea15f9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6909d77153bb97cf0753c9c513016062", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/swing/SwingWorker.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public final boolean isDone()", "signatureAfterChange": "       public void run(I val)", "diff": ["+    class IntermediateListener implements Runnable1<I> {", "+      public void run(I val) {", "+        intermediateListeners().remove(this); // don't respond again until the Swing task runs", "+        SwingUtilities.invokeLater(new Runnable() {", "+          public void run() {", "+            List<I> vals = new LinkedList<I>();", "+            // add listener before drain to ensure a concurrent write isn't missed", "+            intermediateListeners().add(IntermediateListener.this);", "+            intermediateQueue().drainTo(vals);", "+            process(vals);", "+          }", "+        });", "+      }", "-   */", "-  public final boolean isDone() {", "-    Status status = _controller.status();", "-    return status.equals(Status.CANCELED) || status.equals(Status.FINISHED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c19b2c2a6bec433238783e51d93bf2fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4e444cf3e45665116a56b367a272fb6465e0e2ab", "commitAfterChange": "4cc061cda0dcd0210fc21018c1746064dc52e5d0", "methodNumberBeforeChange": 348, "methodNumberAfterChange": 348, "signatureBeforeChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "signatureAfterChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "diff": ["+    doc.addDocumentListener(new DocumentUIListener() {", "+      public void changedUpdate(DocumentEvent e) {", "+        Utilities.invokeLater(new Runnable() {", "+          public void run() {", "+            revalidateLineNums();", "+          }", "+        });", "+      }", "+      public void insertUpdate(DocumentEvent e) {", "+        Utilities.invokeLater(new Runnable() {", "+          public void run() {", "+            revalidateLineNums();", "+          }", "+        });", "+      }", "+      public void removeUpdate(DocumentEvent e) {", "+        Utilities.invokeLater(new Runnable() {", "+          public void run() {", "+            revalidateLineNums();", "+          }", "+        });", "+      }", "+    });", "+    ", "-    JScrollPane scroll = new BorderlessScrollPane(pane,", "+    final JScrollPane scroll = new BorderlessScrollPane(pane,"]}], "num": 17455}