{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d6e83dfff151998fe536bcdf7dbbce5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d3fe73d46dafc6cbaefb04ac4636357", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryVisitor.java", "commitBeforeChange": "5e7a16013fcb5945eddc036e2d2d0ce3e14ba2d0", "commitAfterChange": "e1389ddb9dcb8a7d3a230cc1be322481e1c8fd6a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void forPrimitiveTypeDoFirst(PrimitiveType that)", "signatureAfterChange": "   public Void forPrimitiveTypeDoFirst(PrimitiveType that)", "diff": ["-  public void forPrimitiveTypeDoFirst(PrimitiveType that) {", "+  public Void forPrimitiveTypeDoFirst(PrimitiveType that) {", "-      _addError(\"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Elementary level\", that);", "+      _addError(\"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" \" + ", "+                \"can be used at the Elementary level\", that);", "+    return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80a7ca023a543dc7389ec66f022f97a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "   public TypeData methodInvocationHelper(MethodInvocation that, TypeData context)", "signatureAfterChange": "   public TypeData methodInvocationHelper(MethodInvocation that, TypeData context)", "diff": ["-    for (int i = 0; i<thrown.length; i++) {", "+    for (int i = 0; i < thrown.length; i++) {", "-      _addError(\"Internal error: returnType is null\", that);", "+      _addError(\"Internal error: the returnType for \" + md + \" is null\", that);", "+//      Utilities.show(\"****** null return type for \" + md + \" Receiver type is \" + context + \" File is \" + _file ", "+//                       + \" MethodData is \" + md);", "+//      assert false;"]}], "num": 15381}