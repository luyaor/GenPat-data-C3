{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc6dfd73de836038405f0eb8390e71f0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08eaf459f62562874d21684f45638be2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "101c103fed282ea73966b5bc0dce7152a188fba5", "commitAfterChange": "2bbdbef8ef11cd93c30f52236eee8443bfc75e9d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public static JarJDKToolsLibrary makeFromFile(File f, GlobalModel model, JDKDescriptor desc,                                                 List<File> additionalBootClassPath)", "signatureAfterChange": "   public static JarJDKToolsLibrary makeFromFile(File f, GlobalModel model, JDKDescriptor desc,                                                 List<File> additionalBootClassPath)", "diff": ["+        else {", "+          // could not determine boot classpath because the file was not named classes.jar or tools.jar", "+          // at least put the compiler file itself and the additional compiler files on the boot classpath", "+          bootClassPath.add(f);", "+          for(File acf: additionalCompilerFiles) { bootClassPath.add(acf); };", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3869083d37a4ca9b965ebac5f6effc6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "5a42b92d770342c963138046c93f1390dcf62017", "commitAfterChange": "b29182d94c1064d5f838746a211b47a58b37d210", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "signatureAfterChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "diff": ["+          ", "+          // Check for # in the path of the file because if there", "+          // is one, then the file cannot be used in the Interactions Pane", "+          if (file.getAbsolutePath().indexOf(\"#\") != -1) {", "+            _notifier.filePathContainsPound();", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72934123bcae3ec83e8a6994b1ce4709", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void _throwParseException(ParseException pe, String message) throws ParseException", "signatureAfterChange": "     private void _throwParseException(ParseException pe, String message) throws ParseException", "diff": ["-     // Use the embedded error message if thrown from our code", "+     // Use the embedded error message if thrown from our code, or if ends in EOF", "+     }", "+     if(pe.getMessage().indexOf(\"<EOF>\\\"\") != -1) {", "+       message = \"Encountered Unexpected \\\"<EOF>\\\"\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d8cbbe842e2dcd9b179ea57d402ef53", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "a42a1005ad3faca50638e0131df3bc7c45ba82de", "commitAfterChange": "0b0e9049d382a4fa995a6c0df7ce197dd950d3eb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected ReferenceType _getReferenceTypeForField(String field, Context context)", "signatureAfterChange": "     protected ReferenceType _getReferenceTypeForField(String field, Context context)", "diff": ["+      // field may be of form outerClass$innerClass. ", "+      // We want to match the inner most class.", "+      int lastDollar = field.lastIndexOf(\"$\");", "+      if (lastDollar != -1) {", "+        field = field.substring(lastDollar + 1, field.length());", "+      }"]}], "num": 22287}