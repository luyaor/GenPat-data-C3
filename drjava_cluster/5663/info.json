{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f07effde1eb43d55b76d85538a87b355", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61258d69e319e654ffc5ffa78411ef2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TigerTest.java", "commitBeforeChange": "0cc20e52ff83b7000f2c534f4df717db22d53165", "commitAfterChange": "01976b859dcbb21fcccdad846dcb4a0675ac7cca", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         public void testParseVarArgs()", "signatureAfterChange": "         public void testParseVarArgs()", "diff": ["-    MethodDeclaration md = new MethodDeclaration(java.lang.reflect.Modifier.PUBLIC,new VoidType(),\"someMethod\",params,new LinkedList<ReferenceType>(),body,true,null, 0, 0, 0, 0);", "+    MethodDeclaration md = new MethodDeclaration(", "+                                                 java.lang.reflect.Modifier.PUBLIC | 0x00000080, // java.lang.reflect.Modifier.VARARGS == 0x00000080 /**/", "+                                                 new VoidType(),\"someMethod\",params,new LinkedList<ReferenceType>(),body,null, 0, 0, 0, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "698b0b41b711f441a837b71a99417e13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/NewVersionPopup.java", "commitBeforeChange": "936042cad9bfa0086510cc58a96357306371fb07", "commitAfterChange": "a25d046a4425747f3b5e9370ddf6c9450f8f6f3a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void updateText()", "signatureAfterChange": "      private void updateText()", "diff": ["-    Utilities.clearEventQueue(false);  // Why? In principle, its inclusion does not change the semantics of the program", "+    // clearEventQueue must not be called from the event thread", "+    //Utilities.clearEventQueue(false);  // Why? In principle, its inclusion does not change the semantics of the program"]}], "num": 5663}