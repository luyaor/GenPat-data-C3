{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9de6484be4143a0bd0fedaa824b81fe2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35b32d1a24bda1bce1c564f1cad39fee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 230, "signatureBeforeChange": "     public Lambda2Value(T1 arg1, T2 arg2)", "signatureAfterChange": "   public static <T> SizedIterable<Iterable<T>> diagonalCross(Iterable<? extends Iterable<? extends T>> iters)", "diff": ["+  public static <T> SizedIterable<Iterable<T>> diagonalCross(Iterable<? extends Iterable<? extends T>> iters) {", "+    return diagonalCrossFold(iters, IterUtil.<T>empty(), IterUtil.<T>composeRightLambda());", "+  }  ", "-    private final T2 _arg2;", "-    public Lambda2Value(T1 arg1, T2 arg2) { _arg1 = arg1; _arg2 = arg2; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df2a502c946f9014c06bc0bcd0d890c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 305, "signatureBeforeChange": " public Boolean value(T arg)", "signatureAfterChange": "     public Boolean value(T arg)", "diff": ["-  public static <T> Predicate<T> asPredicate(final Lambda<? super T, ? extends Boolean> lambda) {", "-    return new Predicate<T>() { public Boolean value(T arg) { return lambda.value(arg); } };", "+    public LambdaPredicate(Lambda<? super T, ? extends Boolean> l) { _l = l; }", "+    public Boolean value(T arg) { return _l.value(arg); }"]}], "num": 1773}