{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "077c18aec3344c8218053f090db20ef0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db812d5a0ba8ba3597cc8c62cc20085e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "commitAfterChange": "1210f15594c9808455815ddca20501677d42bd7f", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "   private void _saveCommand()", "signatureAfterChange": "   private void _saveCommand()", "diff": ["-    int count = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_COUNT) + 1;", "-    ", "-    final Vector<String> names = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_NAMES);", "-    final Vector<String> types = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_TYPES);", "-    final Vector<String> cmdlines = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_CMDLINES);", "-    final Vector<String> jvmargs = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_JVMARGS);", "-    final Vector<String> workdirs = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_WORKDIRS);", "-    ", "-    String name = JOptionPane.showInputDialog(this, \"Name for saved process:\", \"External Java \"+count);", "-    if (name==null) {", "-      // Always apply and save settings", "-      _saveSettings();", "-      this.setVisible(false);", "-      return;", "+    int count = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_COUNT);", "+          ", "+    if (_editMode) {", "+      final Vector<String> names = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_NAMES);", "+      final Vector<String> cmdlines = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_CMDLINES);", "+      final Vector<String> workdirs = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_WORKDIRS);", "+      String name = JOptionPane.showInputDialog(this, \"Name for saved process:\", names.get(_editIndex));", "+      if (name==null) {", "+        // Always apply and save settings", "+        _saveSettings();", "+        this.setVisible(false);", "+        if (_cm!=null) { _cm.set(); }", "+        return;", "+      }", "+      names.set(_editIndex,name);", "+      DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_NAMES,names);", "+      ", "+      String cmdline = _commandLine.getText();", "+      cmdlines.set(_editIndex,cmdline);", "+      DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_CMDLINES,cmdlines);", "+      ", "+      String workdir = _commandWorkDirLine.getText();", "+      workdirs.set(_editIndex,workdir);", "+      DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_WORKDIRS,workdirs);", "+    }", "+    else {", "+      ++count;", "+      final Vector<String> names = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_NAMES);", "+      final Vector<String> types = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_TYPES);", "+      final Vector<String> cmdlines = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_CMDLINES);", "+      final Vector<String> jvmargs = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_JVMARGS);", "+      final Vector<String> workdirs = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_WORKDIRS);", "+      ", "+      String name = JOptionPane.showInputDialog(this, \"Name for saved process:\", \"External Java \"+count);", "+      if (name==null) {", "+        // Always apply and save settings", "+        _saveSettings();", "+        this.setVisible(false);", "+        if (_cm!=null) { _cm.set(); }", "+        return;", "+      }", "+      ", "+      names.add(name);", "+      DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_NAMES,names);", "+      ", "+      types.add(\"cmdline\");", "+      DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_TYPES,types);", "+      ", "+      String cmdline = _commandLine.getText();", "+      cmdlines.add(cmdline);", "+      DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_CMDLINES,cmdlines);", "+      ", "+      jvmargs.add(\"\");", "+      DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_JVMARGS,jvmargs);", "+      ", "+      String workdir = _commandWorkDirLine.getText();", "+      workdirs.add(workdir);", "+      DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_WORKDIRS,workdirs);", "-    names.add(name);", "-    DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_NAMES,names);", "-    ", "-    types.add(\"cmdline\");", "-    DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_TYPES,types);", "-    ", "-    String cmdline = _commandLine.getText();", "-    cmdlines.add(cmdline);", "-    DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_CMDLINES,cmdlines);", "-    ", "-    jvmargs.add(\"\");", "-    DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_JVMARGS,jvmargs);", "-    ", "-    String workdir = _commandWorkDirLine.getText();", "-    workdirs.add(workdir);", "-    DrJava.getConfig().setSetting(OptionConstants.EXTERNAL_SAVED_WORKDIRS,workdirs);", "-", "-    ", "+    if (_cm!=null) { _cm.set(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5aafdb1be836bd953b19114789fe8cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "69317eecda3235d4815eb5d9a5b9e536b8481c4a", "commitAfterChange": "3549437d3f0aec05949cb330cf74662cd269bb15", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   private void _doStartup()", "signatureAfterChange": "   private void _doStartup()", "diff": ["+    // ConcJUnit argument: -Xbootclasspath/p:rt.concjunit.jar", "+    File junitLocation = DrJava.getConfig().getSetting(OptionConstants.JUNIT_LOCATION);", "+    boolean concJUnitLocationConfigured =", "+      edu.rice.cs.drjava.model.junit.DefaultJUnitModel.isValidConcJUnitFile(junitLocation);", "+    File rtLocation = DrJava.getConfig().getSetting(OptionConstants.RT_CONCJUNIT_LOCATION);", "+    boolean rtLocationConfigured =", "+      edu.rice.cs.drjava.model.junit.DefaultJUnitModel.isValidRTConcJUnitFile(rtLocation);", "+    if (!rtLocationConfigured && // not valid", "+        (rtLocation != null) && // not null", "+        (!FileOps.NULL_FILE.equals(rtLocation)) && // not NULL_FILE", "+        (rtLocation.exists())) { // but exists", "+      // invalid file, clear setting", "+      DrJava.getConfig().setSetting(OptionConstants.RT_CONCJUNIT_LOCATION, FileOps.NULL_FILE);", "+      rtLocationConfigured = false;", "+    }", "+    if (concJUnitLocationConfigured && rtLocationConfigured) {", "+      try {", "+        // NOTE: this is a work-around", "+        // it seems like it's impossible to pass long file names here on Windows", "+        // so we are using a clumsy method that determines the short file name", "+        File shortF = FileOps.getShortFile(rtLocation);", "+        jvmArgs.add(\"-Xbootclasspath/p:\"+shortF.getAbsolutePath().replace(File.separatorChar, '/'));", "+      }", "+      catch(IOException ioe) {", "+        // we couldn't get the short file name (on Windows), disable \"lucky\" warnings", "+        DrJava.getConfig().setSetting(OptionConstants.RT_CONCJUNIT_LOCATION, FileOps.NULL_FILE);", "+        rtLocationConfigured = false;", "+      }", "+    }", "+    ", "+    "]}], "num": 1332}