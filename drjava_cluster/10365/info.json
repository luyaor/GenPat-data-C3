{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f066940f4ef1aae7c3044a2de522a12", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aac6ef87b3366f5ad9d67264bea93f22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void xtestResultOfNonPublicTestCase() throws Exception", "signatureAfterChange": "   public void testResultOfNonPublicTestCase() throws Exception", "diff": ["-   */", "-  public void xtestResultOfNonPublicTestCase() throws Exception {", "+  /** Tests that the ui is notified to put up an error dialog if JUnit is run on a non-public TestCase. */", "+  public void testResultOfNonPublicTestCase() throws Exception {", "-    synchronized(listener) {", "-      doc.startJUnit();", "-      listener.assertJUnitStartCount(1);", "-      if (printMessages) System.out.println(\"waiting for test\");", "-      listener.wait();", "-    }", "+    _runJUnit(doc);", "+   ", "+    listener.assertJUnitStartCount(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc7b32b0b32fb84bab6f2f591afda056", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testNonTestCaseError() throws Exception", "signatureAfterChange": "   public void testNonTestCaseError() throws Exception", "diff": ["-   */", "+  /** Tests that the ui is notified to put up an error dialog if JUnit is run on a non-TestCase. */", "-    synchronized(listener) {", "-      doc.startJUnit();", "-      listener.assertJUnitStartCount(1);", "-      if (printMessages) System.out.println(\"waiting for test\");", "-      listener.wait();", "-    }", "+", "+    _runJUnit(doc);", "+", "-    listener.assertJUnitEndCount(1);", "+    listener.assertJUnitStartCount(0);  // JUnit is never started", "+    listener.assertJUnitEndCount(0); // JUnit never started and hence never ended"]}], "num": 10365}