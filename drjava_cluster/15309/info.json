{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21efb738e325420a7f2d31f38fb13062", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04205504bb5e4bc7078ecccaf897789e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhraseTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testStartOfDocument() throws BadLocationException", "signatureAfterChange": "   public void testStartOfDocument() throws BadLocationException", "diff": ["-    assertTrue(\"first line\", !rule.applyRule(_doc, 0));", "-    assertTrue(\"second line\", !rule.applyRule(_doc, 2));", "+    assertTrue(\"first line\", !rule.applyRule(_doc, 0, Indenter.OTHER));", "+    assertTrue(\"second line\", !rule.applyRule(_doc, 2, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37297c0195afb4288c5d5a7c5af621f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhraseTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testOperatorDelim() throws BadLocationException", "signatureAfterChange": "   public void testOperatorDelim() throws BadLocationException", "diff": ["-    assertTrue(\"line after operator\", rule.applyRule(_doc, 8));", "-    assertTrue(\"line after comma\", !rule.applyRule(_doc, 10));", "+    assertTrue(\"line after operator\", rule.applyRule(_doc, 8, Indenter.OTHER));", "+    assertTrue(\"line after comma\", !rule.applyRule(_doc, 10, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4654ed3b2dbe5ec0b260b57e2b008fc8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionExistsCharInStmtTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testColonNotInTernaryOpMultiLineStmts() throws BadLocationException", "signatureAfterChange": "   public void testColonNotInTernaryOpMultiLineStmts() throws BadLocationException", "diff": ["-        !rule.applyRule(_doc));", "+        !rule.applyRule(_doc, Indenter.OTHER));", "-        !rule.applyRule(_doc));", "+        !rule.applyRule(_doc, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e852427eced5104551ce418d3e39324", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionPrevLineStartsWithTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testStartOfDocument() throws BadLocationException", "signatureAfterChange": "   public void testStartOfDocument() throws BadLocationException", "diff": ["-    assertTrue(\"first line\", !rule.applyRule(_doc, 0));", "-    assertTrue(\"second line\", !rule.applyRule(_doc, 2));", "+    assertTrue(\"first line\", !rule.applyRule(_doc, 0, Indenter.OTHER));", "+    assertTrue(\"second line\", !rule.applyRule(_doc, 2, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8601db33a01dbc5b82eab947417edee2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhraseTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testNoParenDelims() throws BadLocationException", "signatureAfterChange": "   public void testNoParenDelims() throws BadLocationException", "diff": ["-    assertTrue(\"second line\", !rule.applyRule(_doc, 4));", "-    assertTrue(\"third line\", !rule.applyRule(_doc, 9));", "+    assertTrue(\"second line\", !rule.applyRule(_doc, 4, Indenter.OTHER));", "+    assertTrue(\"third line\", !rule.applyRule(_doc, 9, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "996378c58bfed47a78c87fe22b17eb19", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartAfterOpenBraceTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testBraceLastCharOnLine() throws BadLocationException", "signatureAfterChange": "      public void testBraceLastCharOnLine() throws BadLocationException", "diff": ["-    assertTrue(\"Brace only char on line.\", _rule.applyRule(_doc, 2));", "+    assertTrue(\"Brace only char on line.\", _rule.applyRule(_doc, 2, Indenter.OTHER));", "-    assertTrue(\"Brace last char on line.\", _rule.applyRule(_doc, 13));", "+    assertTrue(\"Brace last char on line.\", _rule.applyRule(_doc, 13, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd520e0d2c3576b9659d18ceb4085b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhraseTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testDoesNotEndWithParenDelim() throws BadLocationException", "signatureAfterChange": "   public void testDoesNotEndWithParenDelim() throws BadLocationException", "diff": ["-    assertTrue(\"line after paren\", !rule.applyRule(_doc, 9));", "-    assertTrue(\"line after comma\", !rule.applyRule(_doc, 13));", "+    assertTrue(\"line after paren\", !rule.applyRule(_doc, 9, Indenter.OTHER));", "+    assertTrue(\"line after comma\", !rule.applyRule(_doc, 13, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d247ff5ceb97d4de9a8d2570179f0411", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionLineContainsTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testLineDoesNotContainColon() throws BadLocationException", "signatureAfterChange": "   public void testLineDoesNotContainColon() throws BadLocationException", "diff": ["-    assertTrue(\"no colon\", !rule.applyRule(_doc));", "+    assertTrue(\"no colon\", !rule.applyRule(_doc, Indenter.OTHER));", "-    assertTrue(\"line of close brace (no colon in text)\", !rule.applyRule(_doc));    ", "+    assertTrue(\"line of close brace (no colon in text)\", !rule.applyRule(_doc, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5f50f90e70ee11c905b82d3c4eacdeb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhraseTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testParenDelimsWithComment() throws BadLocationException", "signatureAfterChange": "   public void testParenDelimsWithComment() throws BadLocationException", "diff": ["-    assertTrue(\"// comment\", rule.applyRule(_doc, 23));", "-    assertTrue(\"/* */ comment\", rule.applyRule(_doc, 45));", "+    assertTrue(\"// comment\", rule.applyRule(_doc, 23, Indenter.OTHER));", "+    assertTrue(\"/* */ comment\", rule.applyRule(_doc, 45, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f971b5c55e870d9f24bc3f187cc4791e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/IndentRuleWithTraceTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public void testTrace() throws BadLocationException", "signatureAfterChange": "    public void testTrace() throws BadLocationException", "diff": ["-    rule1.indentLine(_doc, 23);", "-    rule1.indentLine(_doc, 75);", "+    rule1.indentLine(_doc, 23, Indenter.OTHER);", "+    rule1.indentLine(_doc, 75, Indenter.OTHER);"]}], "num": 15309}