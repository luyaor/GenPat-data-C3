{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f195fd3313c7a8acb043db2fb1490e52", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3a8466da8ed68aa378ed38740159eea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilities.java", "commitBeforeChange": "1ef951d20d276f3c46e1cf20ba51ab4b6ce00f53", "commitAfterChange": "fe7c222597b4c2632fd01caf1fa72f992186277e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public static List<Method> getMethods(Class cl, String name, int params)", "signatureAfterChange": "   public static List<Method> getMethods(Class cl, String name, int params)", "diff": ["-            ms[i].getParameterTypes().length == params) {", "+            ms[i].getParameterTypes().length <= (params + 1)) {", "-    } ", "-    else {", "-      Class c = cl;", "-      while (c != null) {", "-        Method[] ms = c.getDeclaredMethods();", "-        ", "-        for (int i = 0; i < ms.length; i++) {", "-          if (ms[i].getName().equals(name) &&", "-              ms[i].getParameterTypes().length == params) {", "-            result.add(ms[i]);", "-          }", "-        }", "-        c = c.getSuperclass();", "-      }", "-    return result;", "-  }", "+              ms[i].getParameterTypes().length <= (params + 1)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2a495faf960c6e3896b5d5b45f11526", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "1ff154e9eb4de7b8f07ce9a8120997b76e53aa3f", "commitAfterChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "             public void expandTree()", "signatureAfterChange": "   public void expandTree()", "diff": ["+  /** Expands all nodes in a two-level tree. */", "-    for (int i = 0; i < ct; i++) _regTree.expandRow(i);", "+    for (int i = ct - 1; i >= 0; i--) _regTree.expandRow(i);"]}], "num": 29901}