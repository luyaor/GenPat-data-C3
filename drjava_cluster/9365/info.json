{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "590e53616d0af68c06afe3a701b0a549", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a22adc2efe9c06a711a3e73a52b8ddd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 55, "signatureBeforeChange": "     ProjectFileGroupingState(File project)", "signatureAfterChange": "     ProjectFileGroupingState(File project)", "diff": ["-           IterUtil.<AbsRelFile>empty(), null, 0, false, null);", "+           IterUtil.<AbsRelFile>empty(), null, 0, false, null, new HashMap<OptionParser,String>());", "+      HashMap<OptionParser,String> defaultStoredPreferences = new HashMap<OptionParser,String>();", "+      // by default, put INDENT_LEVEL AND LANGUAGE_LEVEL into the project file", "+      defaultStoredPreferences.put(INDENT_LEVEL, DrJava.getConfig().getOptionMap().getString(INDENT_LEVEL));      ", "+      defaultStoredPreferences.put(LANGUAGE_LEVEL, DrJava.getConfig().getOptionMap().getString(LANGUAGE_LEVEL));", "+      setPreferencesStoredInProject(defaultStoredPreferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4349b3690c3d17e9791a0cbf1c02fcba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/ClassPathManager.java", "commitBeforeChange": "f8e4975fc86eccfc2e1e190be55c64d1a287745a", "commitAfterChange": "1b5ef0eebd43a246e897081eb432b396efa2d20e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public ClassPathManager()", "signatureAfterChange": "      public ClassPathManager(Iterable<File> builtInCP)", "diff": ["-  public ClassPathManager() {", "+  public ClassPathManager(Iterable<File> builtInCP) {", "-    _fullPath = IterUtil.collapse(IterUtil.map(IterUtil.make(_projectCP, _buildCP, _projectFilesCP,", "-                                                             _externalFilesCP, _extraCP), _makeSafeSnapshot));", "-    _loader = new PathClassLoader(_fullPath);", "+    // conversions to SizedIterables are necessary to support 1.4 compatibility", "+    Iterable<Iterable<File>> allPaths =", "+      IterUtil.<Iterable<File>>make(IterUtil.asSizedIterable(_projectCP),", "+                                    IterUtil.asSizedIterable(_buildCP),", "+                                    IterUtil.asSizedIterable(_projectFilesCP),", "+                                    IterUtil.asSizedIterable(_externalFilesCP),", "+                                    IterUtil.asSizedIterable(_extraCP),", "+                                    IterUtil.snapshot(builtInCP));", "+    // lazily map the lists to their snapshots -- the snapshot code executes every time", "+    // _fullPath is traversed", "+    _fullPath = IterUtil.collapse(IterUtil.map(allPaths, _makeSafeSnapshot));", "+    _loader = new PathClassLoader(null, _fullPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b18573df88062e4b0762f44fb42f24e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": "   public void saveProject(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "signatureAfterChange": "   public void saveProject(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "diff": ["+    // add breakpoints and watches", "+    try {", "+      ArrayList<DebugBreakpointData> l = new ArrayList<DebugBreakpointData>();", "+      for(Breakpoint bp: getDebugger().getBreakpoints()) { l.add(bp); }", "+      builder.setBreakpoints(l);", "+    }", "+    catch(DebugException de) { /* ignore, just don't store breakpoints */ }", "+    try {", "+      builder.setWatches(getDebugger().getWatches());", "+    }", "+    catch(DebugException de) { /* ignore, just don't store watches */ }", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe5ccea06b6975f46358376a82171466", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "c6857a248a65e4dc52a9c98c57b551279861859d", "commitAfterChange": "4118fb5987600e1ade6dff5b6d5f90e5fdaddc47", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public Vector<URL> getClasspath()", "signatureAfterChange": "   public Vector<URL> getClasspath()", "diff": ["-        Vector<URL> classpath = new Vector<URL>(_interpreterJVM().getAugmentedClasspath());", "+        Vector<String> strClasspath = new Vector<String>(_interpreterJVM().getAugmentedClasspath());", "+        Vector<URL> classpath = new Vector<URL>(strClasspath.size()+_startupClasspathVector.size());", "+        ", "+        for(String s : strClasspath) { ", "+          try { classpath.add(new URL(s)); }", "+          catch (MalformedURLException e) {", "+           throw new edu.rice.cs.util.UnexpectedException(e);", "+          }", "+        }", "+        "]}], "num": 9365}