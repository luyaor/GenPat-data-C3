{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "286977698fb6110478f3dacf34a44b6e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c9b83f99b7117864e2f2ba8d2ebc66b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "d3ca8d30db126f3de1352627e18f51d00a1bf339", "commitAfterChange": "1e619a02befaa7a99dc31172b2a007a2446ed2bd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "    protected void initThread(ProcessCreator pc)", "signatureAfterChange": "\r \r   protected void initThread(ProcessCreator pc)", "diff": ["-", "-  protected void initThread(ProcessCreator pc) {", "-    _abortMonitor.reset();", "-    // MainFrame.LOG.log(\"\\tProcessPanel ctor\");", "-    try {", "-      _pc = pc;", "-      _pc.getPropertyMaps().clearVariables();", "-      _readThread = new Thread(new Runnable() {", "-        public void run() {", "-          while((_is!=null) || (_erris!=null)) {", "-            readText(false);", "-          }", "-        }", "-      },\"External Process Read Thread\");", "-      _updateThread = new Thread(new Runnable() {", "-        public void run() {", "-          while((_is!=null) || (_erris!=null)) {", "-            try {", "-              Thread.sleep(edu.rice.cs.drjava.DrJava.getConfig().", "-                             getSetting(edu.rice.cs.drjava.config.OptionConstants.FOLLOW_FILE_DELAY));", "-            }", "-            catch(InterruptedException ie) { /* ignore */ }", "-            updateText();", "-          }", "-        }", "-      },\"External Process Update Thread\");", "-      _p = _pc.start();", "-      _sb.append(\"Evaluated command line:\");", "-      _sb.append(_pc.evaluatedCommandLine());", "-      _sb.append('\\n');", "-      _is = new InputStreamReader(_p.getInputStream());", "-      _erris = new InputStreamReader(_p.getErrorStream());", "-      _readThread.start();", "-      _updateThread.start();", "-      _updateNowButton.setEnabled(true);", "-      _deathThread = new Thread(new Runnable() {", "-        public void run() {", "-          try {", "-            _retVal = _p.waitFor();", "-            Utilities.invokeLater(new Runnable() {", "-              public void run() {", "-                _sb.append(\"\\n\\nProcess returned \");", "-                _sb.append(_retVal);", "-                _sb.append(\"\\n\");", "-                _textArea.setText(_sb.toString());", "-              }", "-            });", "-          }", "-          catch(InterruptedException e) {", "-            Utilities.invokeLater(new Runnable() {", "-              public void run() {", "-                _p.destroy();", "-                _sb.append(\"\\n\\nProcess returned \");", "-                _sb.append(_retVal);", "-                _sb.append(\"\\n\");", "-                _textArea.setText(_sb.toString());", "-              }", "-            });", "-          }", "-          finally {", "-            abortActionPerformed(null);", "-          }", "-        }", "-      },\"External Process Death Thread\");", "-      _deathThread.start();", "-      // MainFrame.LOG.log(\"\\tUpdate thread started\");", "-    }", "-    catch(Exception e) {", "-      _sb.append(\"\\n\\nException from process:\\n\"+e.toString());", "-      _textArea.setText(_sb.toString());", "-      edu.rice.cs.util.GeneralProcessCreator.LOG.log(_sb.toString());", "-      abortActionPerformed(null);", "-    }", "-  }", "+\r", "+  protected void initThread(ProcessCreator pc) {\r", "+    _abortMonitor.reset();\r", "+    // MainFrame.LOG.log(\"\\tProcessPanel ctor\");\r", "+    try {\r", "+      _pc = pc;\r", "+      _pc.getPropertyMaps().clearVariables();\r", "+      _readThread = new Thread(new Runnable() {\r", "+        public void run() {\r", "+          while((_is!=null) || (_erris!=null)) {\r", "+            readText(false);\r", "+          }\r", "+        }\r", "+      },\"External Process Read Thread\");\r", "+      _updateThread = new Thread(new Runnable() {\r", "+        public void run() {\r", "+          while((_is!=null) || (_erris!=null)) {\r", "+            try {\r", "+              Thread.sleep(edu.rice.cs.drjava.DrJava.getConfig().\r", "+                             getSetting(edu.rice.cs.drjava.config.OptionConstants.FOLLOW_FILE_DELAY));\r", "+            }\r", "+            catch(InterruptedException ie) { /* ignore */ }\r", "+            updateText();\r", "+          }\r", "+        }\r", "+      },\"External Process Update Thread\");\r", "+      _p = _pc.start();\r", "+      _sb.append(\"Evaluated command line: \");\r", "+      _sb.append(_pc.evaluatedCommandLine());\r", "+      _sb.append('\\n');\r", "+      _is = new InputStreamReader(_p.getInputStream());\r", "+      _erris = new InputStreamReader(_p.getErrorStream());\r", "+      _readThread.start();\r", "+      _updateThread.start();\r", "+      _updateNowButton.setEnabled(true);\r", "+      _deathThread = new Thread(new Runnable() {\r", "+        public void run() {\r", "+          try {\r", "+            _retVal = _p.waitFor();\r", "+            Utilities.invokeLater(new Runnable() {\r", "+              public void run() {\r", "+                _sb.append(\"\\n\\nProcess returned \");\r", "+                _sb.append(_retVal);\r", "+                _sb.append(\"\\n\");\r", "+                _textArea.setText(_sb.toString());\r", "+              }\r", "+            });\r", "+          }\r", "+          catch(InterruptedException e) {\r", "+            Utilities.invokeLater(new Runnable() {\r", "+              public void run() {\r", "+                _p.destroy();\r", "+                _sb.append(\"\\n\\nProcess returned \");\r", "+                _sb.append(_retVal);\r", "+                _sb.append(\"\\n\");\r", "+                _textArea.setText(_sb.toString());\r", "+              }\r", "+            });\r", "+          }\r", "+          finally {\r", "+            abortActionPerformed(null);\r", "+          }\r", "+        }\r", "+      },\"External Process Death Thread\");\r", "+      _deathThread.start();\r", "+      // MainFrame.LOG.log(\"\\tUpdate thread started\");\r", "+    }\r", "+    catch(Exception e) {\r", "+      _sb.append(\"\\n\\nException from process:\\n\"+e.toString());\r", "+      _textArea.setText(_sb.toString());\r", "+      edu.rice.cs.util.GeneralProcessCreator.LOG.log(_sb.toString());\r", "+      abortActionPerformed(null);\r", "+    }\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60c89c185c262d00335da6c7fbf61970", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "d3ca8d30db126f3de1352627e18f51d00a1bf339", "commitAfterChange": "1e619a02befaa7a99dc31172b2a007a2446ed2bd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ExternalProcessPanel(MainFrame frame, String title, ProcessCreator pc)", "signatureAfterChange": "\r   public ExternalProcessPanel(MainFrame frame, String title, ProcessCreator pc)", "diff": ["-    */", "-  public ExternalProcessPanel(MainFrame frame, String title, ProcessCreator pc) {", "-    super(frame, title);", "-    _sb = new StringBuilder(\"Command line:\");", "-    _sb.append(pc.cmdline());", "-    _sb.append('\\n');", "-    _header = _sb.toString();", "-    _textArea.setText(_header);", "-    initThread(pc);", "-    _textArea.addMouseListener(new MouseListener() {", "-      public void mouseClicked(MouseEvent e) {", "-        if ((SwingUtilities.isLeftMouseButton(e)) &&", "-            (e.getClickCount()==2)) {", "-          doubleClicked(e);", "-        }", "-      }", "-      public void mouseEntered(MouseEvent e) { }", "-      public void mouseExited(MouseEvent e) { }", "-      public void mousePressed(MouseEvent e) { }", "-      public void mouseReleased(MouseEvent e) { }", "-    });", "-    SwingUtilities.invokeLater(new Runnable() {", "-      public void run() { updateText(); } });", "-    // MainFrame.LOG.log(\"\\tProcessPanel ctor done\");", "-  }", "+    */\r", "+  public ExternalProcessPanel(MainFrame frame, String title, ProcessCreator pc) {\r", "+    super(frame, title);\r", "+    _sb = new StringBuilder(\"Command line: \");\r", "+    _sb.append(pc.cmdline());\r", "+    _sb.append('\\n');\r", "+    _header = _sb.toString();\r", "+    _textArea.setText(_header);\r", "+    initThread(pc);\r", "+    _textArea.addMouseListener(new MouseListener() {\r", "+      public void mouseClicked(MouseEvent e) {\r", "+        if ((SwingUtilities.isLeftMouseButton(e)) &&\r", "+            (e.getClickCount()==2)) {\r", "+          doubleClicked(e);\r", "+        }\r", "+      }\r", "+      public void mouseEntered(MouseEvent e) { }\r", "+      public void mouseExited(MouseEvent e) { }\r", "+      public void mousePressed(MouseEvent e) { }\r", "+      public void mouseReleased(MouseEvent e) { }\r", "+    });\r", "+    SwingUtilities.invokeLater(new Runnable() {\r", "+      public void run() { updateText(); } });\r", "+    // MainFrame.LOG.log(\"\\tProcessPanel ctor done\");\r", "+  }\r"]}], "num": 3361}