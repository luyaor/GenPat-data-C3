{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7d03aced20fa45b70965bf7a535bdbc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16f35da349bb54b91a8c43fa0a62d381", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/AbstractLog.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private static SizedIterable<String> processThrowable(Throwable t, boolean asCause)", "signatureAfterChange": "      private static SizedIterable<String> processThrowable(Throwable t, boolean asCause)", "diff": ["-    if (asCause) { result = IterUtil.makeIterable(\"\", \"Caused by \" + t, \"at\"); }", "-    else { result = IterUtil.makeIterable(t.toString(), \"at\"); }", "-    result = IterUtil.compose(result, processStack(IterUtil.arrayIterable(t.getStackTrace())));", "+    if (asCause) { result = IterUtil.make(\"\", \"Caused by \" + t, \"at\"); }", "+    else { result = IterUtil.make(t.toString(), \"at\"); }", "+    result = IterUtil.compose(result, processStack(IterUtil.asIterable(t.getStackTrace())));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50726c941e9d058ae4ad3d00973afdcc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/text/ArgumentParser.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public Result parse(String... args) throws IllegalArgumentException", "signatureAfterChange": "   public Result parse(String... args) throws IllegalArgumentException", "diff": ["-        options.put(currentOption, IterUtil.asIterable(currentOptionArgs));", "+        options.put(currentOption, IterUtil.asSizedIterable(currentOptionArgs));", "-            options.put(currentOption, IterUtil.asIterable(currentOptionArgs));", "+            options.put(currentOption, IterUtil.asSizedIterable(currentOptionArgs));", "-      options.put(currentOption, IterUtil.asIterable(currentOptionArgs));", "+      options.put(currentOption, IterUtil.asSizedIterable(currentOptionArgs));"]}], "num": 27752}