{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64f9b5d05c099e9d7de52e24b0f72910", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e99bc477a26c85975f822b41adfc11f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "d6f67da504ad61f8681827b1ed9e34bdf47096b1", "commitAfterChange": "0a854931d2d0d982ce19ec1350fad796e2685223", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected static LinkedHashMap<File,Set<JDKDescriptor>> getDefaultSearchRoots()", "signatureAfterChange": "   protected static LinkedHashMap<File,Set<JDKDescriptor>> getDefaultSearchRoots()", "diff": ["+    JDKToolsLibrary.msg(\"---- Getting Default Search Roots ----\");", "+    ", "-      addIfDir(new File(javaHome), null, roots);", "-      addIfDir(new File(javaHome, \"..\"), null, roots);", "-      addIfDir(new File(javaHome, \"../..\"), null, roots);", "+      addIfDir(new File(javaHome), roots);", "+      addIfDir(new File(javaHome, \"..\"), roots);", "+      addIfDir(new File(javaHome, \"../..\"), roots);", "-      addIfDir(new File(envJavaHome), null, roots);", "-      addIfDir(new File(envJavaHome, \"..\"), null, roots);", "-      addIfDir(new File(envJavaHome, \"../..\"), null, roots);", "+      addIfDir(new File(envJavaHome), roots);", "+      addIfDir(new File(envJavaHome, \"..\"), roots);", "+      addIfDir(new File(envJavaHome, \"../..\"), roots);", "-      addIfDir(new File(programFiles, \"Java\"), null, roots);", "-      addIfDir(new File(programFiles), null, roots);", "+      addIfDir(new File(programFiles, \"Java\"), roots);", "+      addIfDir(new File(programFiles), roots);", "-    addIfDir(new File(\"/C:/Program Files/Java\"), null, roots);", "-    addIfDir(new File(\"/C:/Program Files\"), null, roots);", "+    addIfDir(new File(\"/C:/Program Files/Java\"), roots);", "+    addIfDir(new File(\"/C:/Program Files\"), roots);", "-      addIfDir(new File(systemDrive, \"Java\"), null, roots);", "-      addIfDir(new File(systemDrive), null, roots);", "+      addIfDir(new File(systemDrive, \"Java\"), roots);", "+      addIfDir(new File(systemDrive), roots);", "-    addIfDir(new File(\"/C:/Java\"), null, roots);", "-    addIfDir(new File(\"/C:\"), null, roots);", "+    addIfDir(new File(\"/C:/Java\"), roots);", "+    addIfDir(new File(\"/C:\"), roots);", "-    addIfDir(new File(\"/System/Library/Frameworks/JavaVM.framework/Versions\"), null, roots);", "+    addIfDir(new File(\"/System/Library/Frameworks/JavaVM.framework/Versions\"), roots);", "-    addIfDir(new File(\"/usr/java\"), null, roots);", "-    addIfDir(new File(\"/usr/j2se\"), null, roots);", "-    addIfDir(new File(\"/usr\"), null, roots);", "-    addIfDir(new File(\"/usr/local/java\"), null, roots);", "-    addIfDir(new File(\"/usr/local/j2se\"), null, roots);", "-    addIfDir(new File(\"/usr/local\"), null, roots);", "+    addIfDir(new File(\"/usr/java\"), roots);", "+    addIfDir(new File(\"/usr/j2se\"), roots);", "+    addIfDir(new File(\"/usr\"), roots);", "+    addIfDir(new File(\"/usr/local/java\"), roots);", "+    addIfDir(new File(\"/usr/local/j2se\"), roots);", "+    addIfDir(new File(\"/usr/local\"), roots);", "-    addIfDir(new File(\"/usr/lib/jvm\"), null, roots);", "-    addIfDir(new File(\"/usr/lib/jvm/java-6-sun\"), null, roots);", "-    addIfDir(new File(\"/usr/lib/jvm/java-1.5.0-sun\"), null, roots);", "-    addIfDir(new File(\"/usr/lib/jvm/java-6-openjdk\"), null, roots);", "+    addIfDir(new File(\"/usr/lib/jvm\"), roots);", "+    addIfDir(new File(\"/usr/lib/jvm/java-6-sun\"), roots);", "+    addIfDir(new File(\"/usr/lib/jvm/java-1.5.0-sun\"), roots);", "+    addIfDir(new File(\"/usr/lib/jvm/java-6-openjdk\"), roots);", "-    addIfDir(new File(\"/home/javaplt/java/Linux-i686\"), null, roots);", "+    addIfDir(new File(\"/home/javaplt/java/Linux-i686\"), roots);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e37f8b47d247b47914e759f7008c2273", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      public void testSynchronizedStatement() throws ParseException", "signatureAfterChange": "      public void testSynchronizedStatement() throws ParseException", "diff": ["-    stmts.add(new ExpressionStatement(new ObjectMethodCall(new AmbiguousName(\"lock\"), \"release\", null, \"\", -1, -1, -1, -1), true));", "+    stmts.add(new ExpressionStatement(new ObjectMethodCall(new AmbiguousName(\"lock\"), \"release\", null, SourceInfo.NONE), true));", "-                                              \"\", -1, -1, -1, -1));", "+                                              SourceInfo.NONE));"]}], "num": 10948}