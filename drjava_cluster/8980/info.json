{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7e41bdfb12bac86d938fc3886469815", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5034378d29a0f826dae8639f828da4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public Object visit(ArrayAccess node)", "signatureAfterChange": "   public Node visit(ArrayAccess node)", "diff": ["+   */", "+  public Node visit(ArrayAccess node) {", "+    visitExpressionContainer(node);", "+    ", "+    // Visits the cell number expression", "+    Node   n = node.getCellNumber();", "+    Node o = n.acceptVisitor(this);", "+    if (o != null) {", "+      rejectReferenceType(o,n);", "+      node.setCellNumber((Expression)o);", "+    }", "+    return null;", "+  }", "-     */", "-    public Object visit(ArrayAccess node) {", "-\tvisitExpressionContainer(node);", "-", "-        // Visits the cell number expression", "-\tNode   n = node.getCellNumber();", "-        Object o = n.acceptVisitor(this);", "-\tif (o != null) {", "-\t    if (o instanceof ReferenceType) {", "-\t\tthrow new ExecutionError(\"malformed.expression\", n);", "-\t    }", "-\t    node.setCellNumber((Expression)o);", "-\t}", "-\treturn null;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ded89c3de1722458c68f73ba6721443", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Object visit(LabeledStatement node)", "signatureAfterChange": "   public Node visit(LabeledStatement node)", "diff": ["+   */", "+  public Node visit(LabeledStatement node) {", "+    Node n = node.getStatement();", "+    Node o = n.acceptVisitor(this);", "+    if (o != null) {", "+      rejectReferenceType(o,n);", "+      node.setStatement(o);", "+    }", "+    return null;", "+  }", "-     */", "-    public Object visit(LabeledStatement node) {", "-\tNode n = node.getStatement();", "-        Object o = n.acceptVisitor(this);", "-        if (o != null) {", "-\t    if (o instanceof ReferenceType) {", "-\t\tthrow new ExecutionError(\"malformed.expression\", n);", "-\t    }", "-\t    node.setStatement((Expression)o);", "-        }", "-        return null;", "-    }"]}], "num": 8980}