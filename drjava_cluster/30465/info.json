{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc239f7139b887e9c9d34d8db7be1dea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "062d97877b0f6f0f0719f9e5d74088b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public String getPackageName() throws InvalidPackageException", "signatureAfterChange": "   public String getPackageName() throws InvalidPackageException", "diff": ["-                                              \"No semicolon found to terminate \" +", "-                                              \"package statement!\");", "+                                              \"No semicolon found to terminate package statement!\");", "-          ", "-        while (_reduced.currentToken().getHighlightState() !=", "-               HighlightStatus.NORMAL);", "+        while (_reduced.currentToken().getHighlightState() != HighlightStatus.NORMAL);", "-          if (_reduced.currentToken().getHighlightState() ==", "-              HighlightStatus.NORMAL)", "-          {", "+          if (_reduced.currentToken().getHighlightState() == HighlightStatus.NORMAL) {", "-            ", "-            if (! Character.isWhitespace(curChar)) {", "-              buf.append(curChar);", "-            }", "+            if (! Character.isWhitespace(curChar)) buf.append(curChar);", "-                                            \"Package name was not specified \" +", "-                                            \"after the package keyword!\");", "+                                            \"Package name was not specified after the package keyword!\");", "-        ", "-      catch (BadLocationException ble) {", "-        throw new UnexpectedException(ble);", "-      }", "+      catch (BadLocationException ble) { throw new UnexpectedException(ble); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e60683a98830a747788c6c8c46128dba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "591ec87995880046281596623701cb5a561fc66e", "commitAfterChange": "ce73fdb27a8e7aa886580e240ca54bfd98e64031", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public T current()", "signatureAfterChange": "     public T current()", "diff": ["-      if (atStart())", "-        throw new RuntimeException(\"Attempt to call current on an \" +", "-                                   \"iterator in the initial position\");", "-      if (atEnd())", "-        throw new RuntimeException(\"Attempt to call current on an \" +", "-                                   \"iterator in the final position\");", "+      if (atStart()) throw new RuntimeException(\"Attempt to call current on an iterator in the initial position\");", "+      if (atEnd()) throw new RuntimeException(\"Attempt to call current on an iterator in the final position\");"]}], "num": 30465}