{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76feeb7b9e461a7fc325e37815d291f7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30acb970b31cb2e8ea1e8454e035257e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "4ea2cd518855e40df6753e4f4157e51bfa3110ce", "commitAfterChange": "4741154917524eb52199eddabe5e1780caea0eb7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "    private void _setupDebugPanel ( ConfigPanel panel)", "signatureAfterChange": "    private void _setupDebugPanel ( ConfigPanel panel)", "diff": ["-    if (_mainFrame.getModel().getDebugger() == null) {", "+    if (!_mainFrame.getModel().getDebugger().isAvailable()) {", "-        \"\\nThe debugger is not currently active.  To use the debugger, you must\\n\" +", "-        \"include Sun's tools.jar or jpda.jar on your classpath when starting DrJava.\\n\" +", "-        \"Do not use the \\\"-jar\\\" option, because it overrides the classpath.\\n\" +", "+        \"\\nThe debugger is not currently active.  To use the debugger, you\\n\" +", "+        \"must include Sun's tools.jar or jpda.jar on your classpath when\\n\" +", "+        \"starting DrJava.  Do not use the \\\"-jar\\\" option, because it\\n\" +", "+        \"overrides the classpath and will not include tools.jar.\\n\" +", "-      panel.addComponent( new LabelComponent(howto, this) );", "+        panel.addComponent( new LabelComponent(howto, this) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3653ac71be033e5e34971ad8dca6e932", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "e4d6291f62d6e504510509a9010f43ba6552f00d", "commitAfterChange": "217c110d76e83e4661793b1b3dd648691e91b61d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "signatureAfterChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "diff": ["-      else if (getModel().getCompilerModel().getActiveCompiler() == NoCompilerAvailable.ONLY)", "+      else if (!getModel().getCompilerModel().getActiveCompiler().isAvailable())", "-        message = getModel().getCompilerModel().getActiveCompiler().getName() + \" compiler ready.\";", "+        message = \"Compiler ready: \" + getModel().getCompilerModel().getActiveCompiler().getDescription() + \".\";"]}], "num": 28724}