{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a95fa51a9e7366ffa29efb1fe7eb6a3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0419238cebccb81b4bf6a6f499d7476a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "commitAfterChange": "530cb3b64455d081e962324602750973729aa1fb", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 192, "signatureBeforeChange": "      public void interactionsExited(int status)", "signatureAfterChange": "      public void interactionsExited(final int status)", "diff": ["-    public void interactionsExited(int status) {", "-      String msg = \"The interactions window was terminated by a call \" +", "-        \"to System.exit(\" + status + \").\\n\" +", "-        \"The interactions window will now be restarted.\";", "-", "-      String title = \"Interactions terminated by System.exit(\" + status + \")\";", "-", "-      JOptionPane.showMessageDialog(MainFrame.this,", "-                                    msg,", "-                                    title,", "-                                    JOptionPane.INFORMATION_MESSAGE);", "-", "-      // we don't restore the interactions pane to life, since", "-      // the interactionsReset event will do it.", "+    public void interactionsExited(final int status) {", "+      // Only show prompt if option is set", "+      if (DrJava.CONFIG.getSetting(INTERACTIONS_EXIT_PROMPT).booleanValue()) {", "+        // Show the dialog in a Swing thread, so Interactions can", "+        // start resetting right away.", "+        Runnable doCommand = new Runnable() {", "+          public void run() {", "+            String msg = \"The interactions window was terminated by a call \" +", "+              \"to System.exit(\" + status + \").\\n\" +", "+              \"The interactions window will now be restarted.\";", "+            ", "+            String title = \"Interactions terminated by System.exit(\" + status + \")\";", "+            ", "+            JOptionPane.showMessageDialog(MainFrame.this,", "+                                          msg,", "+                                          title,", "+                                          JOptionPane.INFORMATION_MESSAGE);", "+          }", "+        };", "+        SwingUtilities.invokeLater(doCommand);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43c02c0d043e352383e2a93631e991d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/NewVersionPopup.java", "commitBeforeChange": "ce9868c401197893c2350342d3a4d99ed1f30047", "commitAfterChange": "815f40b5bb451c8033ddeb39c2dbb5f242c0c317", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      protected void updateAction()", "signatureAfterChange": "      protected void updateAction()", "diff": ["-    cp.add(new JOptionPane(\"Updating, please wait.\",JOptionPane.INFORMATION_MESSAGE,", "+    cp.add(new JOptionPane(\"Waiting for www.sourceforge.net ...\",JOptionPane.INFORMATION_MESSAGE,", "+    JProgressBar pb = new JProgressBar(0,100);", "+    pb.setIndeterminate(true);", "+    cp.add(pb, BorderLayout.SOUTH);", "-          Runtime.getRuntime().addShutdownHook(new Thread() {", "+          Thread restart = new Thread() {", "-          });", "-          _mainFrame.quit();", "+          };", "+          Runtime.getRuntime().addShutdownHook(restart);", "+          Utilities.invokeAndWait(new Runnable() { public void run() { _mainFrame.quit(); } });", "+          // if we get here, then the user has cancelled the shutdown", "+          // remove the hook", "+          Runtime.getRuntime().removeShutdownHook(restart);", "+          tempClassFile.delete();", "+          JOptionPane.showMessageDialog(_mainFrame, ", "+                                        \"A new version of DrJava was downloaded. However, you chose\\n\"+", "+                                        \"not to restart DrJava, so the old version was not automatically\\n\"+", "+                                        \"replaced.\\n\\n\"+", "+                                        \"The new copy is now installed at:\\n\"+", "+                                        finalDestFile.getAbsolutePath()+\"\\n\\n\"+", "+                                        \"The old copy is still installed at:\\n\"+", "+                                        targetFile.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d34e90ce04f019cc2287d98975799c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 411, "methodNumberAfterChange": 411, "signatureBeforeChange": "     public boolean canAbandonFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public boolean canAbandonFile(OpenDefinitionsDocument doc)", "diff": ["+      return _fileSaveHelper(doc, JOptionPane.YES_NO_CANCEL_OPTION);", "+    }", "-      int rc = JOptionPane.showConfirmDialog(MainFrame.this,", "-                                             text,", "-                                             \"Save \" + fname + \"?\",", "-                                             JOptionPane.YES_NO_CANCEL_OPTION);", "-            catch(IllegalStateException ise) {", "-              // Shouldn't happen because this file was just saved", "-              throw new UnexpectedException(ise);", "-            }", "-            catch(FileMovedException fme) { ", "-              // Shouldn't happend because this file was just saved", "-              throw new UnexpectedException(fme);", "-//              savedFilename = \"The current file\"; ", "-            }", "-//            rc = JOptionPane.showConfirmDialog(MainFrame.this,", "-//                                               savedFilename + ", "-//                                               \"  is now in the current project.\\n\" +", "-//                                               \"If you close it, it will be permanently removed \"+", "-//                                               \"from the project.\\n\" +", "-//                                               \"Do you still wish to close it.\",", "-//                                               \"Close Project File\",", "-//                                               JOptionPane.YES_NO_CANCEL_OPTION);", "-//            if (rc != JOptionPane.YES_OPTION)", "-//              return false;", "-//            else return true;", "-        case JOptionPane.CLOSED_OPTION:", "-        case JOptionPane.CANCEL_OPTION:", "-        default:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6147a5602f21b51a4e1467e0d355451a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "8470bac42027a288eff50252d965c363d15d41dc", "commitAfterChange": "cb029f12bd6c2fdcdba02605492a4baf5ca47e02", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "    private void _updateWatches()", "signatureAfterChange": "    private void _updateWatches()", "diff": ["-      DrJava.consoleOut().println(\"Thread has not been suspended\");", "+      ReferenceType outerRt = rt;", "-        Field field = rt.fieldByName(currName);", "+        Field field = outerRt.fieldByName(currName);", "-        String className = rt.name();", "-        //ReferenceType outerRt;", "+        String className = outerRt.name();", "-            ", "-            //currWatch.setValue(WatchUndefinedValue.Singleton);", "-            //currWatch.setType(null);", "-          rt = (ReferenceType)_vm.classesByName(className).get(0);", "-          if (rt == null) {", "-            //currWatch.setValue(WatchUndefinedValue.Singleton);", "-            //currWatch.setType(null);", "+          outerRt = (ReferenceType)_vm.classesByName(className).get(0);", "+          if (outerRt == null) {", "-          field = rt.fieldByName(currName);", "+          field = outerRt.fieldByName(currName);", "-            currWatch.setValue(rt.getValue(field));", "+            currWatch.setValue(outerRt.getValue(field));", "-              DrJava.consoleOut().println(\"Class not loaded\");", "-                   !outerFrame.thisObject().referenceType().equals(rt) &&", "+                   !outerFrame.thisObject().referenceType().equals(outerRt) &&", "-                DrJava.consoleOut().println(\"Class not loaded\");", "+        else {", "+          currWatch.setValue(WatchUndefinedValue.Singleton);", "+          currWatch.setType(null);", "+        }", "-          DrJava.consoleOut().println(\"Class not loaded\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8551f5133c6cd454f73929fb67ae0255", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0ef216d80b2e9cc63f2ef7b2c23490480ef77851", "commitAfterChange": "c5aaf72fbd7fa889788e2cd72fe646345421a547", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   private synchronized void _updateWatches() throws DebugException", "signatureAfterChange": "   private synchronized void _updateWatches() throws DebugException", "diff": ["+        ", "-            currWatch.setValue(v);", "-            // currWatch.setType(String.valueOf(localVar.type()));", "-            currWatch.setType(v.type().name());", "+            if (v == null) {", "+              currWatch.setValue(_getValue(null));", "+              try {", "+                currWatch.setType(localVar.type().name());", "+              }", "+              catch (ClassNotLoadedException cnle) {", "+                List classes = _vm.classesByName(localVar.typeName());", "+                if (!classes.isEmpty()) {", "+                  currWatch.setType(((Type)classes.get(0)).name());", "+                }", "+                else {", "+                  currWatch.setTypeNotLoaded();", "+                }", "+              }", "+            }", "+            else {              ", "+              currWatch.setValue(_getValue(v));", "+              currWatch.setType(v.type().name());", "+            }", "-              currWatch.setType(String.valueOf(field.type()));", "+              currWatch.setType(field.type().name());", "-              currWatch.setNoType();", "+              List classes = _vm.classesByName(field.typeName());", "+              if (!classes.isEmpty()) {", "+                currWatch.setType(((Type)classes.get(0)).name());", "+              }", "+              else {", "+                currWatch.setTypeNotLoaded();", "+              }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1024b0c8f91e81a81b95cd3376e4f4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fc7d587574d5a237a5707add509a4d43a4a37a60", "commitAfterChange": "6f9c3eb8b98326d7b39af702a4d8722536b8eadd", "methodNumberBeforeChange": 408, "methodNumberAfterChange": 408, "signatureBeforeChange": "     public boolean canAbandonFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public boolean canAbandonFile(OpenDefinitionsDocument doc)", "diff": ["+          if(r && (doc.isAuxiliaryFile() || ", "+                   (_model.isProjectActive() && doc.isInProjectPath()))) {", "+            String savedFilename = null;", "+            try{", "+              savedFilename = doc.getFile().getName();", "+            }", "+            catch(IllegalStateException ise) {", "+              //Shouldn't happen because this file was just saved", "+              throw new UnexpectedException(ise);", "+            }", "+            catch(FileMovedException fme) {", "+              savedFilename = \"The current file\";", "+            }", "+            rc = JOptionPane.showConfirmDialog(MainFrame.this,", "+                                               savedFilename + ", "+                                               \"  is now in the current project.\\n\" +", "+                                               \"If you close it, it will be permanently removed \"+", "+                                               \"from the project.\\n\" +", "+                                               \"Do you still wish to close it.\",", "+                                               \"Close Project File\",", "+                                               JOptionPane.YES_NO_CANCEL_OPTION);", "+            if(rc != JOptionPane.YES_OPTION)", "+              return false;", "+            else return true;", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df5e4dbceb002a61f03fd4446b885767", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2c410784e4fa53ebc121330c159aaf4b4c4c6253", "commitAfterChange": "43eeb832e6e01b26859ac14937b1999b0722a962", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "    private void _javadocAll()", "signatureAfterChange": "   private void _javadocAll()", "diff": ["+   */", "+    // Only javadoc if all are saved.", "+    _model.saveAllBeforeProceeding(GlobalModelListener.JAVADOC_REASON);", "+    ", "+    // Get the destination directory via a JFileChooser.", "-      int returnVal = _javadocChooser.showDialog(MainFrame.this, \"Create Javadoc!\");", "+      int returnVal;", "-      try {", "+      boolean rejected = false;", "+        ", "+      // Make sure the destination is writable.", "+      do {", "+        // If the choice was rejected, tell the user and ask again.", "+        if (rejected) {", "+          JOptionPane.showMessageDialog(this,", "+                                        \"The destination directory you have chosen\\n\"", "+                                          + \"does not exist or is not readable. Please\\n\"", "+                                          + \"choose another directory.\",", "+                                        \"Bad Destination\", JOptionPane.ERROR_MESSAGE);", "+        }", "+        ", "+        returnVal = _javadocChooser.showOpenDialog(MainFrame.this);", "-      } catch(OperationCanceledException oce){", "-        return;", "-      }", "+      } while (!destDir.exists() || !destDir.canWrite());", "+      ", "+      // Generate the output with the GlobalModel.", "+      ", "+      // Display the results.", "-    } catch (IOException ioe) {", "+    }", "+    catch (IOException ioe) {", "+    }", "+    catch (OperationCanceledException oce) {", "+      // If the user cancels the prompt, silently return.", "+      return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee081f8715574d19288371cdf875f63e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/VectorOption.java", "commitBeforeChange": "e66e301ba3e7c9392b46f6d5762feacdcedbfdde", "commitAfterChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Vector<T> parse(String s)", "signatureAfterChange": "   public Vector<T> parse(String s)", "diff": ["-    st.ordinaryChar('\\\\');", "+    st.ordinaryChar('|');", "-        if (tok=='\\\\') {", "-          if (prevtok=='\\\\') {", "-            // second backslash in a row, append a backslash to string builder", "-            sb.append('\\\\');", "+        if (tok=='|') {", "+          if (prevtok=='|') {", "+            // second pipe in a row, append a pipe to string builder", "+            sb.append('|');", "-            // first backslash, next token decides", "+            // first pipe, next token decides", "-          if (prevtok=='\\\\') {", "-            // backslash followed by delimiter --> escaped delimiter", "+          if (prevtok=='|') {", "+            // pipe followed by delimiter --> escaped delimiter", "-            // no preceding backslash --> real delimiter", "+            // no preceding pipe --> real delimiter", "-          // not a backslash or delimiter", "-          if (prevtok=='\\\\') {", "+          // not a pipe or delimiter", "+          if (prevtok=='|') {", "-            throw new OptionParseException(name, s, \"A backslash was discovered before the token '\" + st.sval +", "-                                           \"'. A backslash is only allowed in front of another backslash \" +", "+            throw new OptionParseException(name, s, \"A pipe | was discovered before the token '\" + st.sval +", "+                                           \"'. A pipe is only allowed in front of another pipe \" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fea22bb035def1fffad875663aaa4014", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "34f2ea007a9d228268fe51193dea23995f823c51", "commitAfterChange": "fc5097bf3e220739875860f050e455b4fcf1d859", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 187, "signatureBeforeChange": "                 public void threadLocationUpdated(final OpenDefinitionsDocument doc,                                        final int lineNumber)", "signatureAfterChange": "                 public void threadLocationUpdated(final OpenDefinitionsDocument doc,                                        final int lineNumber,                                       final boolean shouldHighlight)", "diff": ["-                                      final int lineNumber) {", "+                                      final int lineNumber,", "+                                      final boolean shouldHighlight) {", "-            _currentDefPane.centerViewOnLine(lineNumber); ", "+            _currentDefPane.centerViewOnLine(lineNumber);", "+            _currentDefPane.requestFocus();", "-          ", "-          _removeThreadLocationHighlight();", "-          DefinitionsDocument defDoc = doc.getDocument();", "-          int startOffset = defDoc.getOffset(lineNumber);", "-          if (startOffset > -1) {", "-            int endOffset = defDoc.getLineEndPos(startOffset);", "-            if (endOffset > -1) {", "-              _currentThreadLocationHighlight = ", "-                _currentDefPane.getHighlightManager().addHighlight(startOffset,", "-                                                                   endOffset,", "-                                                                   DefinitionsPane.THREAD_PAINTER);", "+", "+          if (shouldHighlight) {", "+            _removeThreadLocationHighlight();", "+            DefinitionsDocument defDoc = doc.getDocument();", "+            int startOffset = defDoc.getOffset(lineNumber);", "+            if (startOffset > -1) {", "+              int endOffset = defDoc.getLineEndPos(startOffset);", "+              if (endOffset > -1) {", "+                _currentThreadLocationHighlight = ", "+                  _currentDefPane.getHighlightManager().addHighlight(startOffset, endOffset,", "+                                                                     DefinitionsPane.THREAD_PAINTER);", "+              }", "+"]}], "num": 20348}