{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cd8dd0e7135a1e83e391c00388f1b28", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "259fde8f7c3cfe97b330ebd536eff393", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ArgumentTokenizerTest.java", "commitBeforeChange": "e6059a690372d24d354206755ceb1326c1718997", "commitAfterChange": "30865706505ac032f7839e76656d4d5fb3416a82", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testTokenizeArguments()", "signatureAfterChange": "   public void testTokenizeArguments()", "diff": ["-    // [a b, c, d]", "-    //  This is different behavior than Unix or DOS, but it's more", "-    //  intuitive to the user (and easier to implement).", "+    // [a bc, d]", "+    // This behavior seems unintuitive, but it's the way both DOS and Unix", "+    //  handle command-line arguments.", "-                     new String[]{\"a b\",\"c\",\"d\"});", "+                     new String[]{\"a bc\",\"d\"});", "+", "+    // 'a b'c d", "+    // [a bc, d]", "+    // This behavior seems unintuitive, but it's the way both DOS and Unix", "+    //  handle command-line arguments.", "+    _assertTokenized(\"'a b'c d\",", "+                     new String[]{\"a bc\",\"d\"});", "+", "+    // a b\"c d\"", "+    // [a, bc d]", "+    // This behavior seems unintuitive, but it's the way both DOS and Unix", "+    //  handle command-line arguments.", "+    _assertTokenized(\"a b\\\"c d\\\"\",", "+                     new String[]{\"a\",\"bc d\"});", "+", "+    // a b'c d'", "+    // [a, bc d]", "+    // This behavior seems unintuitive, but it's the way both DOS and Unix", "+    //  handle command-line arguments.", "+    _assertTokenized(\"a b'c d'\",", "+                     new String[]{\"a\",\"bc d\"});", "+", "+    // a b'c d'\"e f\" g \"hi \"", "+    // [a, bc de f, g, hi ]", "+    _assertTokenized(\"a b'c d'\\\"e f\\\" g \\\"hi \\\"\",", "+                     new String[]{\"a\",\"bc de f\",\"g\",\"hi \"});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c9387992dc031b5c3e4c98c5ddf06a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "9d671cad5f849049059b2e199aea7279dd398525", "commitAfterChange": "ef7e8ed674f3435dc8cfe861d137f1cab241f5c2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testInterpretJavaQuotedEscapedArgs()", "signatureAfterChange": "   public void testInterpretJavaQuotedEscapedArgs()", "diff": ["-    _assertMainTransformation(\"java Foo \\\"a \\\\\\\" b\\\"\", \"Foo.main(new String[]{\\\"a \\\\\\\" b\\\"});\");", "+    _assertJavaTransformation(\"java Foo \\\"a \\\\\\\" b\\\"\", \"Foo.main(new String[]{\\\"a \\\\\\\" b\\\"});\");", "-    _assertMainTransformation(\"java Foo \\\"\\\\'\\\"\", \"Foo.main(new String[]{\\\"\\\\\\\\'\\\"});\");", "+    _assertJavaTransformation(\"java Foo \\\"\\\\'\\\"\", \"Foo.main(new String[]{\\\"\\\\\\\\'\\\"});\");", "-    _assertMainTransformation(\"java Foo \\\"\\\\\\\\\\\"\", \"Foo.main(new String[]{\\\"\\\\\\\\\\\"});\");", "+    _assertJavaTransformation(\"java Foo \\\"\\\\\\\\\\\"\", \"Foo.main(new String[]{\\\"\\\\\\\\\\\"});\");", "-    _assertMainTransformation(\"java Foo \\\"\\\\\\\" \\\\d\\\"\", \"Foo.main(new String[]{\\\"\\\\\\\" \\\\\\\\d\\\"});\");", "+    _assertJavaTransformation(\"java Foo \\\"\\\\\\\" \\\\d\\\"\", \"Foo.main(new String[]{\\\"\\\\\\\" \\\\\\\\d\\\"});\");", "-    /*    _assertMainTransformation(\"java Foo \\\"\\\\n\\\"\", \"Foo.main(new String[]{\\\"\\\\n\\\"});\");", "+    /*    _assertJavaTransformation(\"java Foo \\\"\\\\n\\\"\", \"Foo.main(new String[]{\\\"\\\\n\\\"});\");", "-     _assertMainTransformation(\"java Foo \\\"\\\\t\\\"\", \"Foo.main(new String[]{\\\"\\\\t\\\"});\");", "+     _assertJavaTransformation(\"java Foo \\\"\\\\t\\\"\", \"Foo.main(new String[]{\\\"\\\\t\\\"});\");", "-     _assertMainTransformation(\"java Foo \\\"\\\\r\\\"\", \"Foo.main(new String[]{\\\"\\\\r\\\"});\");", "+     _assertJavaTransformation(\"java Foo \\\"\\\\r\\\"\", \"Foo.main(new String[]{\\\"\\\\r\\\"});\");", "-     _assertMainTransformation(\"java Foo \\\"\\\\f\\\"\", \"Foo.main(new String[]{\\\"\\\\f\\\"});\");", "+     _assertJavaTransformation(\"java Foo \\\"\\\\f\\\"\", \"Foo.main(new String[]{\\\"\\\\f\\\"});\");", "-     _assertMainTransformation(\"java Foo \\\"\\\\b\\\"\", \"Foo.main(new String[]{\\\"\\\\b\\\"});\"); */", "+     _assertJavaTransformation(\"java Foo \\\"\\\\b\\\"\", \"Foo.main(new String[]{\\\"\\\\b\\\"});\"); */"]}], "num": 9761}