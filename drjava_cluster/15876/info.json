{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4774591552d647c025c33ec191abe260", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22d3296d6fedee2ca92f0ef4ff122d12", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "fcb52146fe5952d46eb1cf9b67172e0f75de7a52", "commitAfterChange": "fbab2bd705dc6109a68454696cb8f397eb070aa2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testDancingUIFileOpened() throws IOException", "signatureAfterChange": "   public void testDancingUIFileOpened() throws IOException", "diff": ["-     Utilities.invokeLater(new Runnable() { public void run() {", "-       _frame.pack();", "-       _frame.open(new FileOpenSelector() {", "-         public File[] getFiles() {", "-           File[] return_me = new File[1];", "-           return_me[0] = new File(_tempDir, \"ForceOpenClass1.java\");", "-           return return_me;", "-         }", "-       });", "-       _frame.getModel().addListener(compileListener);", "-       _frame.addComponentListenerToOpenDocumentsList(listener);", "-       _compileDone = false;", "-       _frame.getCompileAllButton().doClick();", "-     }});  ", "+     try {", "+       Utilities.invokeAndWait(new Runnable() { public void run() {", "+         _frame.pack();", "+         _frame.open(new FileOpenSelector() {", "+           public File[] getFiles() {", "+             File[] return_me = new File[1];", "+             return_me[0] = new File(_tempDir, \"ForceOpenClass1.java\");", "+             return return_me;", "+           }", "+         });", "+         _frame.getModel().addListener(compileListener);", "+         _frame.addComponentListenerToOpenDocumentsList(listener);", "+         _compileDone = false;", "+         _frame.getCompileAllButton().doClick();", "+       }});", "+     }", "+     catch(InterruptedException e) { fail(e.toString()); }", "-       catch(InterruptedException exception) { fail(exception.toString()); }", "+       catch(InterruptedException e) { fail(e.toString()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4707d5e2881c63e335fd61e0add956c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "63cffca72f6a1e6647332e3c5d09c544e2cf35f3", "commitAfterChange": "03e8c58726828f3ddf7d6eb7f633023068dad9fe", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testDancingUIFileOpened() throws IOException", "signatureAfterChange": "   public void testDancingUIFileOpened() throws IOException", "diff": ["-      /**", "-     * Maybe this sequence of calls should be incorporated into one function", "-     * createTestDir(), which would get the username and create the temporary", "-     * directory", "-     * Only sticky part is deciding where to put it, in FileOps maybe?", "+    /** Maybe this sequence of calls should be incorporated into one function createTestDir(), which would get ", "+     *  the username and create the temporary directory. Only sticky part is deciding where to put it, in FileOps ", "+     *  maybe?", "-     _frame.pack();", "-     _frame.open(new FileOpenSelector() {", "-       public File[] getFiles() {", "-         File[] return_me = new File[1];", "-         return_me[0] = new File(_tempDir, \"ForceOpenClass1.java\");", "-         return return_me;", "-       }", "-     });", "-     ComponentAdapter listener = new ComponentAdapter() {", "+     final ComponentAdapter listener = new ComponentAdapter() {", "-     ", "-     _frame.addComponentListenerToOpenDocumentsList(listener);", "-     ", "-     _compileDone = false;", "-     SingleDisplayModelCompileListener compileListener = new SingleDisplayModelCompileListener();", "-     _frame.getModel().addListener(compileListener);", "+     final SingleDisplayModelCompileListener compileListener = new SingleDisplayModelCompileListener();", "-     Utilities.invokeLater(new Runnable() {", "-       public void run() { _frame.getCompileAllButton().doClick();}", "-     });", "+     Utilities.invokeLater(new Runnable() { public void run() {", "+       _frame.pack();", "+       _frame.open(new FileOpenSelector() {", "+         public File[] getFiles() {", "+           File[] return_me = new File[1];", "+           return_me[0] = new File(_tempDir, \"ForceOpenClass1.java\");", "+           return return_me;", "+         }", "+       });", "+       _frame.getModel().addListener(compileListener);", "+       _frame.addComponentListenerToOpenDocumentsList(listener);", "+       _compileDone = false;", "+       _frame.getCompileAllButton().doClick();", "+     }});  "]}], "num": 15876}