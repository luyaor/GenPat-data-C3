{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fc3d9f3de7fa3e32017a2d4ea4bda54", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0221332e256b32663edc8405d900a35b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "afda437000b953ac5d61ee69781723d29e664271", "commitAfterChange": "de9a557f090086de80e9723b0612333c5fd32e24", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 28, "signatureBeforeChange": "      public JPanel _mainDocumentSelector()", "signatureAfterChange": "      public JPanel _mainDocumentSelector()", "diff": ["-    File rootFile = _getProjRoot();", "-    try {", "-      rootFile = rootFile.getCanonicalFile();", "-    } catch(IOException e) { }", "+    final File projRoot = _getProjRoot();", "-    final File root = rootFile;", "-    ", "-    FileChooser chooser = new FileChooser(root);", "+    FileChooser chooser = new FileChooser(projRoot);", "-    chooser.setCurrentDirectory(root);", "+    chooser.setCurrentDirectory(projRoot);", "-        return  FileOps.isInFileTree(f, root) && (f.isDirectory() ||", "+        return  FileOps.isInFileTree(f, projRoot) && (f.isDirectory() ||"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33d0ea944b0784c4cb12493ed3c78e69", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FileSelectorComponent.java", "commitBeforeChange": "80b5b6b287ce1d96a643c73dcded8fef52ef99c0", "commitAfterChange": "5b5854a74ae4104fe98919ec137a82ddfe0b03d0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void setFileField(File file)", "signatureAfterChange": "   public void setFileField(File file)", "diff": ["-    if (file != null && file.exists()) {", "-      try {", "-        _file = file.getCanonicalFile();", "-      }", "-      catch(IOException e) {", "-        //handle it gracefully", "-        _file = file.getAbsoluteFile();", "-      }", "-      resetFileField();", "-    }", "+    //    if (file != null) {", "+    //      try {", "+    //        _file = file.getCanonicalFile();", "+    //      }", "+    //      catch(IOException e) {", "+    //        //handle it gracefully", "+    //        _file = file.getAbsoluteFile();", "+    //      }", "+    _file = file;", "+    resetFileField();", "+    //    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3821c2d26ad733f9c5ec90b1601752f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "12434dc2dab84dfe1024e2e2b39fd8f27da62bbd", "commitAfterChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void _attachToVM() throws DebugException", "signatureAfterChange": "   private void _attachToVM() throws DebugException", "diff": ["-    catch(Exception e1) {", "-      try { _vm = connector.attach(args); }", "-      catch(Exception e2) {", "-        try { _vm = connector.attach(args); }", "-        catch(Exception e3) { throw new DebugException(\"Could not connect to VM: \" + e3); } // three strikes and you are out", "-      }", "-    }", "+    catch(Exception e) { throw new DebugException(\"Could not connect to VM: \" + e); }"]}], "num": 4244}