{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d637cf3fb2f83bfb103507e3adba265", "detectedBy": ["DIFF_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5f2c5e345432e1b11ecea1d693d3f57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public int findPrevEnclosingBrace(int pos, char opening, char closing) throws BadLocationException", "signatureAfterChange": "   public int findPrevEnclosingBrace(final int pos, final char opening, final char closing) throws BadLocationException", "diff": ["-  public int findPrevEnclosingBrace(int pos, char opening, char closing) throws BadLocationException {", "+  public int findPrevEnclosingBrace(final int pos, final char opening, final char closing) throws BadLocationException {", "-    final StringBuilder keyBuf = ", "-      new StringBuilder(\"findPrevEnclosingBrace:\").append(opening).append(':').append(closing).append(':').append(pos);", "-    final String key = keyBuf.toString();", "+    final Query key = new Query.PrevEnclosingBrace(pos, opening, closing);", "-    if (pos >= getLength() || pos == DOCSTART) { return ERROR_INDEX; }", "+    if (pos >= getLength() || pos == 0) { return -1; }", "-    String text = getText(DOCSTART, pos);", "+    String text = getText(0, pos);", "-      for (i = pos-1; i >= DOCSTART; i--) {", "+      for (i = pos-1; i >= 0; i--) {", "-         * DOCSTART <= i < reducedPos <= pos */", "+         * 0 <= i < reducedPos <= pos */", "-      /* Invariant: same as for loop except that DOCSTART-1 <= i <= reducedPos <= pos */", "+      /* Invariant: same as for loop except that -1 <= i <= reducedPos <= pos */", "-    if (i == DOCSTART-1) reducedPos = ERROR_INDEX; // No matching char was found", "-    _storeInCache(key, reducedPos, pos);", "+    if (i == -1) reducedPos = -1; // No matching char was found", "+    _storeInCache(key, reducedPos, pos - 1);", "-    // Return position of matching char or ERROR_INDEX ", "+    // Return position of matching char or ERROR_INDEX (-1) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e48255bbfa8a0f61b66cff6e5f66a202", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "signatureAfterChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "diff": ["-    final StringBuilder keyBuf = new StringBuilder(\"findPrevDelimiter:\").append(pos);", "-    for (char ch: delims) { keyBuf.append(':').append(ch); }", "-    keyBuf.append(':').append(skipParenPhrases);", "-    final String key = keyBuf.toString();", "+    final Query key = new Query.PrevDelimiter(pos, delims, skipParenPhrases);", "-      String text = getText(DOCSTART, pos);", "+      String text = getText(0, pos);", "-        for (i = pos-1; i >= DOCSTART; i--) {", "+        for (i = pos-1; i >= 0; i--) {", "-           * DOCSTART <= i < reducedPos <= pos */", "+           * 0 <= i < reducedPos <= pos */", "-        /* Invariant: same as for loop except that DOCSTART-1 <= i <= reducedPos <= pos */", "+        /* Invariant: same as for loop except that -1 <= i <= reducedPos <= pos */", "-      if (i == DOCSTART-1) reducedPos = ERROR_INDEX; // No matching char was found", "-      _storeInCache(key, reducedPos, pos);", "+      if (i == -1) reducedPos = -1; // No matching char was found", "+      _storeInCache(key, reducedPos, pos - 1);", "-      // Return position of matching char or ERROR_INDEX ", "+      // Return position of matching char or ERROR_INDEX (-1) "]}], "num": 1071}