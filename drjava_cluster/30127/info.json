{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2918a32be36226a0813df9bff33a5a32", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31fd7b79e8fcc4cc87ba49d63f0fa6dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "cbdc405e8bd4373c383ad7cbc6a9a656b65ddd52", "commitAfterChange": "2c9a67ea7f4112fa7f99743281ac144c9f56d20a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void fullSetup()", "signatureAfterChange": "   private void fullSetup()", "diff": ["-   */", "+  /** Extra setup for test cases with several documents. */", "-    errors = new CompilerError[]", "-    { new CompilerError(files[0], \"Test error with File (no line)\", false),", "+    errors = new CompilerError[] { ", "+      new CompilerError(files[0], \"Test error with File (no line)\", false),", "-      new CompilerError(files[0], 1, 0, \"Test error with File\", false) };", "+      new CompilerError(files[0], 1, 0, \"Test error with File\", false) ", "+    };", "-    for (int i = 0; i < errors.length; i++) {", "-      copy[i] = errors[i];", "-    }", "+    for (int i = 0; i < errors.length; i++) copy[i] = errors[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e7c6fa5dbb8879b0d6f99d6765c2464", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public void startCompile()", "signatureAfterChange": "     public void startCompile() throws IOException", "diff": ["-    public void startCompile() {", "+    public void startCompile() throws IOException {", "+      CompilerError[] errors = new CompilerError[0];", "-            _compileErrors = compiler.compile(sourceRoot, files);", "+            errors = compiler.compile(sourceRoot, files);", "-            CompilerError err = new CompilerError(file.getAbsolutePath(),", "+            CompilerError err = new CompilerError(file,", "-            _compileErrors = new CompilerError[] { err };", "+            errors = new CompilerError[] { err };", "+            _distributeErrors(errors);", "+", "+            // Fire a compileEnded event", "-            if (_compileErrors.length == 0) {", "+            if (_numErrors == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85f78a3107ce2922e097f7f3f7cea2fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "cbdc405e8bd4373c383ad7cbc6a9a656b65ddd52", "commitAfterChange": "2c9a67ea7f4112fa7f99743281ac144c9f56d20a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testConstructManyDocsWithLineNums()", "signatureAfterChange": "   public void testConstructManyDocsWithLineNums()", "diff": ["-   */", "+  /** Tests CompilerErrorModel setup code with several files and only errors with line numbers. */", "-    errors = new CompilerError[]", "-    { new CompilerError(files[0], 2, 0, \"Test error with File\", false),", "+    errors = new CompilerError[] { ", "+      new CompilerError(files[0], 2, 0, \"Test error with File\", false),", "-      new CompilerError(files[0], 1, 0, \"Test error with File\", false) };", "+      new CompilerError(files[0], 1, 0, \"Test error with File\", false) ", "+    };", "-    for (int i = 0; i < errors.length; i++) {", "-      copy[i] = errors[i];", "-    }", "+    for (int i = 0; i < errors.length; i++) copy[i] = errors[i];"]}], "num": 30127}