{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "370de6e6d04ae1e07a02d918989f4386", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18ce4c422ff347c3ef301d25c73a8c30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "e2abbf01d6f3b23be51f493f663daa5ce8abf706", "commitAfterChange": "d7bd3eaf7514715e375acabd9bf0f41e4281985a", "methodNumberBeforeChange": 309, "methodNumberAfterChange": 302, "signatureBeforeChange": "     public boolean moreSpecificThan(FunctionInvocationCandidate<I> c)", "signatureAfterChange": "     public boolean moreSpecificThan(FunctionInvocationCandidate<F> c)", "diff": ["-    public boolean moreSpecificThan(FunctionInvocationCandidate<I> c) {", "-      SignatureMatcher m = makeMatcher(c.typeParameters(), EMPTY_TYPE_ITERABLE, c.parameterTypes(), ", "-                                       IterUtil.mapSnapshot(parameterTypes(), EMPTY_EXPRESSION_FOR_TYPE),", "+    public boolean moreSpecificThan(FunctionInvocationCandidate<F> c) {", "+      SignatureMatcher m = makeMatcher(c._f.typeParameters(), EMPTY_TYPE_ITERABLE, SymbolUtil.parameterTypes(c._f), ", "+                                       IterUtil.mapSnapshot(SymbolUtil.parameterTypes(_f), EMPTY_EXPRESSION_FOR_TYPE),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccabe779f1d8bf72109adf3b9cb322ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 278, "methodNumberAfterChange": 308, "signatureBeforeChange": "   private boolean isMoreSpecific(SignatureChecker sig1, SignatureChecker sig2)", "signatureAfterChange": "     public boolean moreSpecificThan(FunctionInvocationCandidate<I> c)", "diff": ["+     */", "+    public boolean moreSpecificThan(FunctionInvocationCandidate<I> c) {", "+      SignatureMatcher m = makeMatcher(c.typeParameters(), EMPTY_TYPE_ITERABLE, c.parameterTypes(), ", "+                                       IterUtil.mapSnapshot(parameterTypes(), EMPTY_EXPRESSION_FOR_TYPE),", "+                                       BOTTOM, NONE_TYPE_OPTION);", "+      return m.matches();", "+    }", "-   */", "-  private boolean isMoreSpecific(SignatureChecker sig1, SignatureChecker sig2) {", "-    SignatureChecker c = makeChecker(sig2.typeParameters(), EMPTY_TYPE_ITERABLE, sig2.parameters(), ", "-                                     IterUtil.mapSnapshot(sig1.parameters(), EMPTY_EXPRESSION_FOR_TYPE),", "-                                     BOTTOM, NONE_TYPE_OPTION);", "-    return c.matches();", "-  }"]}], "num": 29324}