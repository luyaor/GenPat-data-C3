{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3be1c2776cae429ba66e735d405cf4cb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31bc3ae9890137d662e92de9b7d1b24d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "7abad9d4d237e1759bd098868c3fc80eb6e4365f", "commitAfterChange": "dcd05db97717868f3a1bba07cb5b1b9106d93c65", "methodNumberBeforeChange": 261, "methodNumberAfterChange": 261, "signatureBeforeChange": "   public void addToBrowserHistory()", "signatureAfterChange": "   public void addToBrowserHistory()", "diff": ["+    addToBrowserHistory(false);", "+  }", "-      int pos = doc.getCurrentLocation();", "-//      System.err.println(\"addToBrowserHistory() called for lineNum \" + doc.getLineOfOffset(pos) + \" in \" + doc);", "-      BrowserDocumentRegion current = _browserHistoryManager.getCurrentRegion();", "-      if (current != null) {", "-        OpenDefinitionsDocument currentDoc = current.getDocument();", "-        if (doc == currentDoc) {", "-          int lineNum = doc.getLineOfOffset(pos);", "-          int currentLineNum = currentDoc.getLineOfOffset(current.getStartOffset());", "-//          System.err.println(\"lineNum = \" + lineNum + \" currentLineNum = \" + currentLineNum);", "-          if (Math.abs(lineNum - currentLineNum) <= DIFF_THRESHOLD) return;", "-        }", "-      }", "-    ", "-//        Utilities.show(\"Adding (\" + doc + \", \" + startPos + \", \" + endPos + \") to browser history\");", "-    _browserHistoryManager.addBrowserRegion(new BrowserDocumentRegion(doc, startPos, endPos), _notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40aeae5ae0273434302e03c8b176469e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "cbb9f04386fdbcd6c82a6f2a5ae6b635359499fb", "commitAfterChange": "e77b9389e0feb3169a20412f8892f630db108f0e", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 254, "signatureBeforeChange": "   public void addToBrowserHistory()", "signatureAfterChange": "   public void addToBrowserHistory()", "diff": ["-  /** Add the current location to the browser history.  Aborts if not run in event thread. */", "+  /** Add the current location to the browser history.  Only runs in event thread. Assumes that doc is not null. */", "-    assert doc != null && EventQueue.isDispatchThread();", "+//    assert doc != null && EventQueue.isDispatchThread();", "+//      System.err.println(\"addToBrowserHistory() called for lineNum \" + doc.getLineOfOffset(pos) + \" in \" + doc);", "+      BrowserDocumentRegion current = _browserHistoryManager.getCurrentRegion();", "+      if (current != null) {", "+        OpenDefinitionsDocument currentDoc = current.getDocument();", "+        if (doc == currentDoc) {", "+          int lineNum = doc.getLineOfOffset(pos);", "+          int currentLineNum = currentDoc.getLineOfOffset(current.getStartOffset());", "+//          System.err.println(\"lineNum = \" + lineNum + \" currentLineNum = \" + currentLineNum);", "+          if (Math.abs(lineNum - currentLineNum) <= DIFF_THRESHOLD) return;", "+        }", "+      }", "-      endPos = doc.createPosition(doc._getLineEndPos(pos));", "+      endPos = startPos; // was doc.createPosition(doc._getLineEndPos(pos));"]}], "num": 10633}