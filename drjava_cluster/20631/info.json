{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ecd9e664f1514b89703d418102b2b78", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "057140285ee2039b2958d550dde8335e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "commitAfterChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 82, "signatureBeforeChange": "          public void run()", "signatureAfterChange": "     public void run()", "diff": ["+    /** Removes chars from reduced model; cache has already been selectively cleared. */", "-      acquireReadLock();", "-      try {", "-        synchronized(_reduced) { ", "-          _setCurrentLocation(_offset);", "-          _reduced.delete(_length);    ", "-          _styleChanged();", "-        }", "-      }", "-      finally { releaseReadLock(); } ", "+//      acquireReadLock();  // unnecessary! exclusive readLock should already be held!", "+//      try {", "+//        synchronized(_reduced) {  // unnecessary?  no other thread should hold a readLock", "+      _setCurrentLocation(_offset);", "+      _reduced.delete(_length);    ", "+      _styleChanged();", "+//        }", "+//      }", "+//      finally { releaseReadLock(); } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "113ce8a120cf3bcfd250eb7471aaa4ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocument.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public boolean _inBlockComment()", "signatureAfterChange": "   public boolean _inBlockComment()", "diff": ["-    acquireReadLock();", "-    try {", "-      synchronized(_reduced) {", "+//    acquireReadLock();", "+//    try {", "+//      synchronized(_reduced) {", "-      }", "-    }", "-    finally { releaseReadLock(); }", "+//      }", "+//    }", "+//    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21945275211f7845c5dacca0541eecb2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void setCurrentLocation(int loc)", "signatureAfterChange": "   public void setCurrentLocation(int loc)", "diff": ["-    acquireReadLock();", "-    try { synchronized(_reduced) {_setCurrentLocation(loc); } }", "-    finally { releaseReadLock(); }", "+//    acquireReadLock();", "+//    try { ", "+//    synchronized(_reduced) {", "+      _setCurrentLocation(loc); ", "+//    } ", "+//    }", "+//    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77f24d3abb679f9032d29a7944792778", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "commitAfterChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 80, "signatureBeforeChange": "          public void run()", "signatureAfterChange": "     public void run()", "diff": ["+    /** Inserts chars in reduced model and move location to end of insert; cache has already been selectively cleared. */", "-      // adjust location to the start of the text to input", "-      acquireReadLock();", "-      try {", "-        synchronized(_reduced) {", "-          _reduced.move(_offset - _currentLocation);  ", "-          int len = _text.length();", "-          // loop over string, inserting characters into reduced model", "-          for (int i = 0; i < len; i++) {", "-            char curChar = _text.charAt(i);", "-            _addCharToReducedModel(curChar);", "-          }", "-          _currentLocation = _offset + len;  // current location is at end of inserted string", "-          _styleChanged();", "-        }", "+      ", "+//      acquireReadLock();  // Unnecessary! exclusive readLock should already be held!", "+//      try {", "+//        synchronized(_reduced) {  // Unnecessary?  no other thread should hold a readLock", "+      _reduced.move(_offset - _currentLocation);  ", "+      int len = _text.length();", "+      // loop over string, inserting characters into reduced model", "+      for (int i = 0; i < len; i++) {", "+        char curChar = _text.charAt(i);", "+        _addCharToReducedModel(curChar);", "-      finally { releaseReadLock(); }", "+      _currentLocation = _offset + len;  // current location is at end of inserted string", "+      _styleChanged();", "+//        }", "+//      }", "+//      finally { releaseReadLock(); }"]}], "num": 20631}