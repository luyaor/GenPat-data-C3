{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78c75cab6df3f7277a019139bd626bd4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8558a6457f62393c638eb1ab1c5eee47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 396, "methodNumberAfterChange": 396, "signatureBeforeChange": "\r \r   public void forNormalTryCatchStatement(NormalTryCatchStatement that)", "signatureAfterChange": "    public void forNormalTryCatchStatement(NormalTryCatchStatement that)", "diff": ["-\r", "-  public void forNormalTryCatchStatement(NormalTryCatchStatement that) {\r", "-    forNormalTryCatchStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getTryBlock().visit(this);\r", "-    for (int i = 0; i < that.getCatchBlocks().length; i++) that.getCatchBlocks()[i].visit(this);\r", "-    forNormalTryCatchStatementOnly(that);\r", "-  }\r", "+", "+  public void forNormalTryCatchStatement(NormalTryCatchStatement that) {", "+    forNormalTryCatchStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getTryBlock().visit(this);", "+    for (int i = 0; i < that.getCatchBlocks().length; i++) that.getCatchBlocks()[i].visit(this);", "+    forNormalTryCatchStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc2b58947b5e66003842a48895b0bf2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 395, "methodNumberAfterChange": 395, "signatureBeforeChange": "\r \r   public void forTryCatchFinallyStatement(TryCatchFinallyStatement that)", "signatureAfterChange": "    public void forTryCatchFinallyStatement(TryCatchFinallyStatement that)", "diff": ["-\r", "-  public void forTryCatchFinallyStatement(TryCatchFinallyStatement that) {\r", "-    forTryCatchFinallyStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getTryBlock().visit(this);\r", "-    for (int i = 0; i < that.getCatchBlocks().length; i++) that.getCatchBlocks()[i].visit(this);\r", "-    that.getFinallyBlock().visit(this);\r", "-    forTryCatchFinallyStatementOnly(that);\r", "-  }\r", "+", "+  public void forTryCatchFinallyStatement(TryCatchFinallyStatement that) {", "+    forTryCatchFinallyStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getTryBlock().visit(this);", "+    for (int i = 0; i < that.getCatchBlocks().length; i++) that.getCatchBlocks()[i].visit(this);", "+    that.getFinallyBlock().visit(this);", "+    forTryCatchFinallyStatementOnly(that);", "+  }"]}], "num": 18740}