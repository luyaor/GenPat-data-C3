{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19cd27db4a7aefc13d0d78435a0c6a09", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b540f86d42333b057ff76d0779a9193", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "signatureAfterChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "diff": ["-    CompilerError[] errors = _model.getCompileErrors();", "+    //CompilerError[] errors = _model.getCompileErrors();", "+    int numErrors = _model.getNumErrors();", "-    StringBuffer buf = new StringBuffer();", "-    for (int i = 0; i < errors.length; i++) {", "-      buf.append(\"\\nerror #\" + i + \": \" + errors[i]);", "-    }", "+    //StringBuffer buf = new StringBuffer();", "+    //for (int i = 0; i < errors.length; i++) {", "+    //  buf.append(\"\\nerror #\" + i + \": \" + errors[i]);", "+    //}", "-    assertEquals(name + \"compile errors > 0? errors=\" + buf,", "+    assertEquals(name + \"compile errors > 0? numErrors=\" + numErrors,", "-                 errors.length > 0);", "+                 numErrors > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a34bb4dfb96e3eebe7b7d09225620261", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "7b4a527a2fd4010c88a2ef6ea8f158547b322968", "commitAfterChange": "7b22fbe0160e9fdc451caeb623e46b870b03ccd3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "    protected void assertCompileErrorsPresent(boolean b)", "signatureAfterChange": "    protected void assertCompileErrorsPresent(boolean b)", "diff": ["+    assertCompileErrorsPresent(\"\", b);", "+  }", "-    assertEquals(\"compile errors > 0? errors=\" + buf,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4b1e9252594491b5ae37c5163e615ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "c6857a248a65e4dc52a9c98c57b551279861859d", "commitAfterChange": "4118fb5987600e1ade6dff5b6d5f90e5fdaddc47", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   private void _addBasicArguments(ArrayList<String> args,                                   String destDir,                                   String sourcePath,                                   String[] classpath)", "signatureAfterChange": "   private void _addBasicArguments(ArrayList<String> args,                                   String destDir,                                   String sourcePath,                                   String classpath)", "diff": ["-                                  String[] classpath)", "+                                  String classpath)", "-    StringBuffer cp = new StringBuffer();", "-    String sep = System.getProperty(\"path.separator\");", "-    for (int i=0; i < classpath.length; i++) {", "-      cp.append(classpath[i]);", "-      cp.append(sep);", "-    }", "-    args.add(cp.toString());", "+    args.add(classpath);"]}], "num": 5412}