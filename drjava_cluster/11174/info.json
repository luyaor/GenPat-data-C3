{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac76dcfcc4cdc583a1f50df132bab966", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "028186a559a972b9b89e16d6f29ae08b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileBuilder.java", "commitBeforeChange": "314c962d7f6ed2c6b00f5edc6e764b582b016016", "commitAfterChange": "3b2b8c4279d3d3c19a0254256362d4d46aeeddaf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void addResourceFile(File sf)", "signatureAfterChange": "   public void write() throws IOException", "diff": ["-  public void addResourceFile(File sf)", "-  {", "-    _resourceFiles.add(sf);", "-  }", "+   */", "+  public void write() throws IOException {", "+    FileWriter fw = new FileWriter(_projectFile);", "+    ", "+    // write opening comment line", "+    fw.write(\";; DrJava project file, written by build \" + Version.getBuildTimeString());", "+    ", "+    // write source files", "+    if (!_sourceFiles.isEmpty()) {", "+      fw.write(\"\\n(source\");", "+      for(DocFile df: _sourceFiles) {", "+        fw.write(\"\\n\" + encodeDocFile(df, \"  \"));", "+      }", "+      fw.write(\")\"); // close the source expression", "+    }", "+    ", "+    // write aux files", "+    if (!_auxFiles.isEmpty()) {", "+      fw.write(\"\\n(auxiliary\");", "+      for(DocFile df: _auxFiles) {", "+        fw.write(\"\\n\" + encodeDocFile(df, \"  \", false));", "+      }", "+      fw.write(\")\"); // close the auxiliary expression", "+    }", "+    ", "+    // write collapsed paths", "+    if (!_collapsedPaths.isEmpty()){", "+      fw.write(\"\\n(collapsed\");", "+      for(File f: _collapsedPaths) {", "+        fw.write(\"\\n\" + encodeFile(f, \"  \"));", "+      }", "+      fw.write(\")\"); // close the collapsed expression", "+    }", "+    ", "+    // write classpaths", "+    if (!_classpathFiles.isEmpty()) {", "+      fw.write(\"\\n(classpaths\");", "+      for(File f: _classpathFiles) {", "+        fw.write(\"\\n\" + encodeFile(f, \"  \"));", "+      }", "+      fw.write(\")\"); // close the classpaths expression", "+    }", "+    ", "+    // write the build directory", "+    if (_buildDir != null) {", "+      fw.write(\"\\n(build-dir\");", "+      fw.write(\"\\n\" + encodeFile(_buildDir, \"  \"));", "+      fw.write(\")\");", "+    }", "+    ", "+    // write the main class", "+    if (_mainClass != null) {", "+      fw.write(\"\\n(main-class\");", "+      fw.write(\"\\n\" + encodeFile(_mainClass, \"  \"));", "+      fw.write(\")\");", "+    }", "+    ", "+    fw.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b0e6b85119aeb250da98b9d3693d8e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileBuilder.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void write() throws IOException", "signatureAfterChange": "   public void write() throws IOException", "diff": ["-   */", "+  /** This method writes what information has been passed to this builder so far to disk in s-expression format. */", "-      for(DocFile df: _sourceFiles) {", "-        fw.write(\"\\n\" + encodeDocFile(df, \"  \"));", "-      }", "+      for(DocFile df: _sourceFiles) { fw.write(\"\\n\" + encodeDocFile(df, \"  \")); }", "-    else {", "-      fw.write(\"\\n;; no source files\");", "-    }", "+    else fw.write(\"\\n;; no source files\");", "-      for(DocFile df: _auxFiles) {", "-        fw.write(\"\\n\" + encodeDocFile(df, \"  \", false));", "-      }", "+      for(DocFile df: _auxFiles) { fw.write(\"\\n\" + encodeDocFile(df, \"  \", false)); }", "-    else {", "-      fw.write(\"\\n;; no aux files\");", "-    }", "+    else fw.write(\"\\n;; no aux files\");", "-    else {", "-      fw.write(\"\\n;; no collapsed branches\");", "-    }", "+    else fw.write(\"\\n;; no collapsed branches\");", "-    if (!_classpathFiles.isEmpty()) {", "+    if (!_classPathFiles.isEmpty()) {", "-      for(File f: _classpathFiles) {", "+      for(File f: _classPathFiles) {", "-    else {", "-      fw.write(\"\\n;; no classpaths files\");", "-    }", "+    else fw.write(\"\\n;; no classpaths files\");", "-    else {", "-      fw.write(\"\\n;; no build directory\");", "+    else fw.write(\"\\n;; no build directory\");", "+    ", "+     // write the working directory", "+    if (_workDir != null) {", "+      fw.write(\"\\n(work-dir\");", "+      fw.write(\"\\n\" + encodeFile(_workDir, \"  \", true));", "+      fw.write(\")\");", "+    else fw.write(\"\\n;; no working directory\");", "-    else {", "-      fw.write(\"\\n;; no main class\");", "-    }", "+    else fw.write(\"\\n;; no main class\");"]}], "num": 11174}