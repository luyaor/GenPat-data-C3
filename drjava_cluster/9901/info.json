{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9900823b462a6304c60859abc18a9675", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fd18990cd59ae429f53f890f2d20b36", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ShadowingClassLoader.java", "commitBeforeChange": "98a0206bc90f5eb73be3e2e6e290a67ee1cd136d", "commitAfterChange": "bd4a771b77ba1887596583ce142a4b7d1fa91b7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public URL getResource(String name)", "signatureAfterChange": "      @Override public URL getResource(String name)", "diff": ["-  public URL getResource(String name) {", "-    if (shouldShadow(name.replace('/', '.'))) { return null; }", "-    else { return getParent().getResource(name); }", "+  @Override public URL getResource(String name) {", "+    if (matchesPrefixes(name.replace('/', '.')) == _blackList) { return null; }", "+    else {", "+      // can't use getParent().getResource(name) because parent may be null", "+      return super.getResource(name);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c92137aee645a18ae7461872dd187e76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ShadowingClassLoader.java", "commitBeforeChange": "98a0206bc90f5eb73be3e2e6e290a67ee1cd136d", "commitAfterChange": "bd4a771b77ba1887596583ce142a4b7d1fa91b7e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "   protected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException", "signatureAfterChange": "   @Override protected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException", "diff": ["-  protected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {", "-    if (shouldShadow(name)) { throw new ClassNotFoundException(name + \" is being shadowed\"); }", "+  @Override protected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {", "+    if (matchesPrefixes(name) == _blackList) {", "+      throw new ClassNotFoundException(name + \" is being shadowed\");", "+    }", "-      Class<?> result = getParent().loadClass(name);", "-      if (resolve) { resolveClass(result); }", "-      return result;", "+      // can't use getParent().loadClass(name) because parent may be null", "+      return super.loadClass(name, resolve);"]}], "num": 9901}