{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0abac48ea347162905f58eb7897d480e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "172f841479b1c8dbf592257d0c9a35bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 421, "methodNumberAfterChange": 421, "signatureBeforeChange": "\r \r   public void forLeftShiftAssignmentExpression(LeftShiftAssignmentExpression that)", "signatureAfterChange": "    public void forLeftShiftAssignmentExpression(LeftShiftAssignmentExpression that)", "diff": ["-\r", "-  public void forLeftShiftAssignmentExpression(LeftShiftAssignmentExpression that) {\r", "-    forLeftShiftAssignmentExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getName().visit(this);\r", "-    that.getValue().visit(this);\r", "-    forLeftShiftAssignmentExpressionOnly(that);\r", "-  }\r", "+", "+  public void forLeftShiftAssignmentExpression(LeftShiftAssignmentExpression that) {", "+    forLeftShiftAssignmentExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getName().visit(this);", "+    that.getValue().visit(this);", "+    forLeftShiftAssignmentExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b9566e813983a9f5904c7a8f3831e2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 418, "methodNumberAfterChange": 418, "signatureBeforeChange": "\r \r   public void forMultiplyAssignmentExpression(MultiplyAssignmentExpression that)", "signatureAfterChange": "    public void forMultiplyAssignmentExpression(MultiplyAssignmentExpression that)", "diff": ["-\r", "-  public void forMultiplyAssignmentExpression(MultiplyAssignmentExpression that) {\r", "-    forMultiplyAssignmentExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getName().visit(this);\r", "-    that.getValue().visit(this);\r", "-    forMultiplyAssignmentExpressionOnly(that);\r", "-  }\r", "+", "+  public void forMultiplyAssignmentExpression(MultiplyAssignmentExpression that) {", "+    forMultiplyAssignmentExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getName().visit(this);", "+    that.getValue().visit(this);", "+    forMultiplyAssignmentExpressionOnly(that);", "+  }"]}], "num": 27086}