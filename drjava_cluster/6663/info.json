{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3677505cd97f50c1784f9b8b059ff69f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c77770c2a85d7d5a66eceb6f13050c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "99e17181157667354a79af5fff7558664559fae9", "commitAfterChange": "0f014669daf60c46746e3e582159e95f94a3d43c", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException, AbsentInformationException", "signatureAfterChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException, AbsentInformationException", "diff": ["+      StackFrame frame = suspendedThreadRef.frame(0);", "+      Location l = frame.location();", "+      ReferenceType rt = l.declaringType();", "+      String className = rt.name();", "-      _model.getInteractionsModel().addDebugInterpreter(interpreterName);", "+      _model.getInteractionsModel().addDebugInterpreter(interpreterName, className);", "-      StackFrame frame = suspendedThreadRef.frame(0);", "+      frame = suspendedThreadRef.frame(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a231e5ba6c40982329d3117cd9ee10db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "commitAfterChange": "f631b97f7a46e37b22216cbc1b865ac25185f25a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _assertProcessedContents(String typed, String expected)     throws DocumentAdapterException", "signatureAfterChange": "   protected void _assertProcessedContents(String typed, String expected)     throws DocumentAdapterException", "diff": ["-    InteractionsDocument doc = _model.getDocument();", "+    assert(_model instanceof TestInteractionsModel);", "+    TestInteractionsModel model = (TestInteractionsModel)_model;", "+    InteractionsDocument doc = model.getDocument();", "-    _model.interpretCurrentInteraction();", "+    model.interpretCurrentInteraction();", "-                 expected, _model.toEval);", "+                 expected, model.toEval);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8e8084262ab670901494083fa85d162", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public void testSwitchInterpreters()", "signatureAfterChange": "   public void testSwitchInterpreters()", "diff": ["-    ", "-    // Create a new Java interpreter", "-    ((RMIInteractionsModel)_model.getInteractionsModel()).", "-      addJavaInterpreter(\"testInterpreter\");", "-    ", "-    // Set it to be active", "-    ((RMIInteractionsModel)_model.getInteractionsModel()).", "-      setActiveInterpreter(\"testInterpreter\", \"myPrompt>\");", "-    ", "+", "+    DefaultInteractionsModel dim = _model.getInteractionsModel();", "+", "+    // Create a new Java interpreter, and set it to be active", "+    dim.addJavaInterpreter(\"testInterpreter\");", "+    dim.setActiveInterpreter(\"testInterpreter\", \"myPrompt>\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9127ed95e6d28b679ed426248929a91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "17590567cb9f06269b33249dad955c39164a9028", "commitAfterChange": "6222fd84e3aa6c7b8b3da9d73ccf7a9a3370487b", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "   private void removeCurrentDebugInterpreter() throws DebugException", "signatureAfterChange": "   private void removeCurrentDebugInterpreter() throws DebugException", "diff": ["+    DefaultInteractionsModel interactionsModel =", "+      ((DefaultInteractionsModel)_model.getInteractionsModel());", "-      ((DefaultInteractionsModel)_model.getInteractionsModel()).setToDefaultInterpreter();", "+      interactionsModel.setToDefaultInterpreter();", "-    ((DefaultInteractionsModel)_model.getInteractionsModel()).removeInterpreter(oldInterpreterName);", "+    interactionsModel.removeInterpreter(oldInterpreterName);"]}], "num": 6663}