{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "025780c62937f8005c898c4bcd52b393", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c7bd9707c67b5767467ca6299d8ee92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AboutDialog.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "    public static String getLicense()", "signatureAfterChange": "    public static String getLicense()", "diff": ["-      if(is!=null) {", "+      if (is != null) {", "-        StringBuffer sb = new StringBuffer();", "-        for(String s = r.readLine(); s != null; s = r.readLine()) {", "-          int lastSig = s.length()-1; // the last char index", "-", "-          while(lastSig >= 0 && Character.isWhitespace(s.charAt(lastSig))) {", "-            lastSig--;", "+        try {", "+          ", "+          StringBuffer sb = new StringBuffer();", "+          for(String s = r.readLine(); s != null; s = r.readLine()) {", "+            int lastSig = s.length()-1; // the last char index", "+            ", "+            while(lastSig >= 0 && Character.isWhitespace(s.charAt(lastSig))) lastSig--;", "+            if (lastSig < 0) sb.append(\"\\n\"); // empty line, so insert two newlines.", "+            else {", "+              sb.append(s.substring(0,lastSig+1));", "+              sb.append('\\n');", "+            }", "-          if(lastSig<0) {", "-            sb.append(\"\\n\"); // empty line, so insert two newlines.", "-          } else {", "-            sb.append(s.substring(0,lastSig+1));", "-            sb.append('\\n');", "-          }", "+          LICENSE = sb.toString();", "+          LICENSE = LICENSE.trim();", "+          if (LICENSE.length() == 0) LICENSE = null;", "-        LICENSE = sb.toString();", "-        LICENSE = LICENSE.trim();", "-        if(LICENSE.length() == 0) {", "-          LICENSE = null;", "+        finally { ", "+          is.close();", "+          r.close();", "-    catch(Exception e) {", "-      throw new UnexpectedException(e, StringOps.getStackTrace(e));", "-//      LICENSE = null;", "-    }", "+    catch(Exception e) { throw new UnexpectedException(e, StringOps.getStackTrace(e)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "846aac96defc32be7f641b18154f28c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "   private static void _readAndWriteThroughIndex(int line, int column)", "signatureAfterChange": "   private static String _readThroughIndex(int line, int column)", "diff": ["-   */", "-  private static void _readAndWriteThroughIndex(int line, int column) {", "+    */", "+  private static String _readThroughIndex(int line, int column) {", "+", "-      throw new RuntimeException(\"Internal Program Error: Attempt to read in \" + _llv._file.getName() + \" through a point that is already past: line \" + line + \", column \" + column + \"; (currently at \" + _fileInLine + \", \" + _fileInColumn + \").  Please report this bug.\");", "+      throw new RuntimeException(\"Internal Program Error: Attempt to read in \" + _llv._file.getName() + ", "+                                 \" at a point that is already past: line \" + line + \", column \" + column + ", "+                                 \"; (currently at \" + _fileInLine + \", \" + _fileInColumn + \").  Please report this bug.\");", "-          throw new RuntimeException(\"Internal Program Error: Attempt to read in \" + _llv._file.getName() + \" past the end of file: line \" + line + \", column \" + column + \"; (currently at \" + _fileInLine + \", \" + _fileInColumn + \").  Please report this bug.\");", "+          throw new RuntimeException(\"Internal Program Error: Attempt to read in \" + _llv._file.getName() + ", "+                                     \" past the end of file: line \" + line + \", column \" + column + \"; (currently at \" +", "+                                     _fileInLine + \", \" + _fileInColumn + \").  Please report this bug.\");", "-      _writeToFileOut(result.toString());", "+      return result.toString();", "-    catch (IOException ioe) {", "-      throw new Augmentor.Exception(ioe);", "-    }", "+    catch (IOException ioe) { throw new Augmentor.Exception(ioe); }", "+  }"]}], "num": 24019}