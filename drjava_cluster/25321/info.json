{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "231b9c7da337e434cfc8e2136ef194e9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07e0143aa52dc5222da5caa20805542a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "5293cb4cfbc2f45d6061ba4101ad60348aa251ed", "commitAfterChange": "f68f43e5a680bb235f87f6125c6c0de6d15a12f4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public String getVariableToString(String var)", "signatureAfterChange": "   public String getVariableToString(String var)", "diff": ["-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try {", "-      return slave.interpret(var).apply(new InterpretResult.Visitor<String>() {", "-        public String forNoValue() { return \"\"; }", "-        public String forStringValue(String s) { return '\"' + s + '\"'; }", "-        public String forCharValue(Character c) { return \"'\" + c + \"'\"; }", "-        public String forNumberValue(Number n) { return n.toString(); }", "-        public String forBooleanValue(Boolean b) { return b.toString(); }", "-        public String forObjectValue(String valString) { return valString; }", "-        public String forException(String msg) { return \"\"; }", "-        public String forUnexpectedException(Throwable t) { throw new UnexpectedException(t); }", "-        public String forBusy() { return \"\"; }", "-      });", "-    }", "-    catch (RemoteException re) {", "-      _threwException(re);", "-      return null;", "-    }", "+    InterpreterJVMRemoteI interpreter = ensureInterpreterConnected();", "+    try { return interpreter.getVariableToString(var); }", "+    catch (RemoteException e) { _threwException(e); return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84536dd2d6f8f06326e6b90a378225f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public String getVariableToString(String var)", "signatureAfterChange": "   public String getVariableToString(String var)", "diff": ["-    try { return slave.getVariableToString(var); }", "+    try {", "+      return slave.interpret(var).apply(new InterpretResult.Visitor<String>() {", "+        public String forNoValue() { return \"\"; }", "+        public String forStringValue(String s) { return '\"' + s + '\"'; }", "+        public String forCharValue(Character c) { return \"'\" + c + \"'\"; }", "+        public String forNumberValue(Number n) { return n.toString(); }", "+        public String forBooleanValue(Boolean b) { return b.toString(); }", "+        public String forObjectValue(String valString) { return valString; }", "+        public String forException(String msg) { return \"\"; }", "+        public String forUnexpectedException(Throwable t) { throw new UnexpectedException(t); }", "+        public String forBusy() { return \"\"; }", "+      });", "+    }"]}], "num": 25321}