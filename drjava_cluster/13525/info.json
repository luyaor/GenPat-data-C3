{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6443bbe233b0aea4c55ff90e86379f50", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bbaa2e946c113346670ab1c36f445c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerError.java", "commitBeforeChange": "7933cc364884763a44a085994870596faa04b316", "commitAfterChange": "b978cac1d85997e83464382e4a499c19d736223c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public int compareTo(Object o)", "signatureAfterChange": "   public int compareTo(Object o)", "diff": ["-   */", "+    */", "-      if (other.file() == null)", "-        // Errors with files are bigger", "-        return 1;", "-      else {", "-        // Compare by file", "+      // \"this\" has a file", "+      if (other.file() != null) {", "+         // \"this\" and other have files; compare them", "-        // Compare by position", "+        // This and other have equal files; compare positions", "+      else return 1; // Other has no file so \"this\" is bigger   ", "-    // My file is null", "-    if (other.file() == null) {", "-      // All else equal.", "-      //                           I'm a warning.                I'm not a warning.", "-      return (this.isWarning() ? (other.isWarning() ? 0 : 1) : (other.isWarning()? -1:0));", "-    }", "-    else return -1; // Errors without files are smaller", "+    // \"this\" has no file", "+    if (other.file() != null) return -1; // Other has a file so \"this\" is smaller", "+    // Neither error has a file", "+    boolean otherWarning = other.isWarning();", "+    return compareErrorWarning(other);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e09f165f55abe177f3a190fa2ef6b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerError.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public int compareTo(Object o)", "signatureAfterChange": "   public int compareTo(Object o)", "diff": ["-", "+    ", "-      if (other.file() == null) {", "+      if (other.file() == null)", "-      }", "-        if (fileComp != 0) {", "-          return fileComp;", "-        }", "-        else {", "-          // Compare by position", "-          return compareByPosition(other);", "-        }", "+        if (fileComp != 0) return fileComp;", "+        // Compare by position", "+        return compareByPosition(other);", "-    else {", "-      // My file is null", "-      if (other.file() == null) {", "-        // All else equal.", "-        //                        I'm a warning.           I'm not a warning.", "-        return (this._isWarning? (other._isWarning? 0:1):(other._isWarning? -1:0));", "-      }", "-      else {", "-        // Errors without files are smaller", "-        return -1;", "-      }", "+    // My file is null", "+    if (other.file() == null) {", "+      // All else equal.", "+      //                        I'm a warning.           I'm not a warning.", "+      return (this._isWarning? (other._isWarning? 0:1):(other._isWarning? -1:0));", "+    else return -1; // Errors without files are smaller"]}], "num": 13525}