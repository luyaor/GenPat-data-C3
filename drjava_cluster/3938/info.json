{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53439b7f1e987c66957a10336033badd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "083991e067f106d7c43ee3cf87d07d05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     @Override public Type visit(ObjectFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(ObjectFieldAccess node)", "diff": ["-            new StaticFieldAccess((ReferenceTypeName) resolved, node.getFieldName(), node.getFilename(),", "-                                  node.getBeginLine(), node.getBeginColumn(), node.getEndLine(),", "-                                  node.getEndColumn());", "+            new StaticFieldAccess((ReferenceTypeName) resolved, node.getFieldName(), node.getSourceInfo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22af129c45eec4ebdd913ea755b6a59c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 236, "methodNumberAfterChange": 236, "signatureBeforeChange": "      private Expression unbox(Expression exp, String methodName)", "signatureAfterChange": "      private Expression unbox(Expression exp, String methodName)", "diff": ["-    ObjectMethodCall result = new ObjectMethodCall(exp, methodName, null, ", "-                                                   exp.getFilename(), exp.getBeginLine(), exp.getBeginColumn(), ", "-                                                   exp.getEndLine(), exp.getEndColumn());", "+    ObjectMethodCall result = new ObjectMethodCall(exp, methodName, null, exp.getSourceInfo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2dc270f586ead1bcab950f9da67dc93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 290, "methodNumberAfterChange": 290, "signatureBeforeChange": "   private Expression makeCast(Type target, Expression e)", "signatureAfterChange": "   private Expression makeCast(Type target, Expression e)", "diff": ["-    Expression result = new CastExpression(null, e, e.getFilename(), e.getBeginLine(), e.getBeginColumn(),", "-                                           e.getEndLine(), e.getEndColumn());", "+    Expression result = new CastExpression(null, e, e.getSourceInfo());"]}], "num": 3938}