{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ac786b93f554b2294499200584889d0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06fa6475bff54cf4b23e4a61095c07bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "5a26bed1df752ba1358015c1f052f13e80e98cf2", "commitAfterChange": "b2adcf09a03ba6f772e2f3c91188d15851dd508c", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public void testFileMovedWhenTriedToSave()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testFileMovedWhenTriedToSave()     throws BadLocationException, IOException", "diff": ["-      doc.saveFile(new FileSelector(file));", "+      doc.saveFile(new WarningFileSelector(file));", "-    catch (FileMovedException fme) {", "-      //this is expected to occur", "+    catch (GlobalModelTestCase.FileMovedWarningException fme) {", "+      // this is expected to occur:", "+      //  WarningFileSelector throws it in shouldSaveAfterFileMoved()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9145b2c8bc696b16acd3c4ec13b34879", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "a40073610630d4f516a406059faeaca761da62c1", "commitAfterChange": "cd10122759eccf6c810135d6cad33cd763492317", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public AbstractTypeChecker makeTypeChecker(final Context<Type> context)", "signatureAfterChange": "   public AbstractTypeChecker makeTypeChecker(final Context context)", "diff": ["-  public AbstractTypeChecker makeTypeChecker(final Context<Type> context) {", "+  public AbstractTypeChecker makeTypeChecker(final Context context) {", "-      public Type visit(QualifiedName node) {", "+      public Class<?> visit(QualifiedName node) {", "-      public Type visit(QualifiedName node) {", "+      public Class<?> visit(QualifiedName node) {"]}], "num": 7385}