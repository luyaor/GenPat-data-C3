{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c5a5be09752937d74e01a5edfb6b24e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2e2f9f339662209935d10470caa19e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3f81b37285813b52f5c285ae3a68ee4a21753a7e", "commitAfterChange": "844a54657c2f878fc1ea01131f59375a436ab7c8", "methodNumberBeforeChange": 243, "methodNumberAfterChange": 247, "signatureBeforeChange": "      public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason)", "signatureAfterChange": "      private void _saveAllBeforeProceeding(String message)", "diff": ["-    public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason) {", "-      String message;", "-      if (reason == COMPILE_REASON) {", "-        message =", "-          \"To compile, you must first save ALL modified files.\\n\" +", "-          \"Would you like to save and then compile?\";", "-      }", "-      else if (reason == JUNIT_REASON) {", "-        message =", "-          \"To run JUnit, you must first save and compile ALL modified\\n\" +", "-          \"files. Would you like to save and then compile?\";", "-      }", "-      else if (reason == JAVADOC_REASON) {", "-        message =", "-          \"To run JavaDoc, you must first save ALL modified files.\\n\" +", "-          \"Would you like to save and then run JavaDoc?\"; ", "-      }", "-      else if (reason == DEBUG_REASON) {", "-        message =", "-          \"To use debugging commands, you must first save and compile\\n\" +", "-          \"ALL modified files. Would you like to save and then compile?\";", "-      }", "-      else {", "-        throw new RuntimeException(\"Invalid reason for forcing a save.\");", "-      }", "-      int rc = JOptionPane.showConfirmDialog(MainFrame.this, message,", "-                                             \"Must save all files to continue\",", "-                                             JOptionPane.YES_NO_OPTION);", "-      switch (rc) {", "-        case JOptionPane.YES_OPTION:", "-          _saveAll();", "-          break;", "-        case JOptionPane.NO_OPTION:", "-        case JOptionPane.CANCEL_OPTION:", "-        case JOptionPane.CLOSED_OPTION:", "-          // do nothing", "-          break;", "-        default:", "-          throw new RuntimeException(\"Invalid rc from showConfirmDialog: \" + rc);", "+    private void _saveAllBeforeProceeding(String message) {", "+      if (_model.hasModifiedDocuments()) {", "+        int rc = JOptionPane.showConfirmDialog(MainFrame.this, message,", "+                                               \"Must save all files to continue\",", "+                                               JOptionPane.YES_NO_OPTION);", "+        switch (rc) {", "+          case JOptionPane.YES_OPTION:", "+            _saveAll();", "+            break;", "+          case JOptionPane.NO_OPTION:", "+          case JOptionPane.CANCEL_OPTION:", "+          case JOptionPane.CLOSED_OPTION:", "+            // do nothing", "+            break;", "+          default:", "+            throw new RuntimeException(\"Invalid rc from showConfirmDialog: \" + rc);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3ea3e32c749f4496a085117350424fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "commitAfterChange": "07096ad0945aff1086f040e03a93769039f16340", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void removeAuxiliaryFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "   public void removeAuxiliaryFile(OpenDefinitionsDocument doc)", "diff": ["-  public void removeAuxiliaryFile(OpenDefinitionsDocument doc) {", "-    File file = doc.getRawFile();", "-    if (file == null) return;  // Should never happen unless doc is Untitled.", "-    String path = FileOps.getCanonicalPath(file);", "-    ", "-    synchronized(_auxiliaryFiles) {", "-      ListIterator<File> it = _auxiliaryFiles.listIterator();", "-      while (it.hasNext()) {", "-        if (path.equals (FileOps.getCanonicalPath(it.next()))) {", "-          it.remove();", "-          setProjectChanged(true);", "-          break;", "-        }", "-      }", "-    }", "-  }", "+  public void removeAuxiliaryFile(OpenDefinitionsDocument doc) { _state.remAuxFile(doc.getRawFile()); }"]}], "num": 19275}