{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1befd4f71a2d3eeaaeb4d8b97f16b0c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f37de3279915a8f89a1513e51ef587e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocumentTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void xtestStylesListContentAndReset() throws EditDocumentException, InterruptedException", "signatureAfterChange": "   public void xtestStylesListContentAndReset() throws EditDocumentException, InterruptedException", "diff": ["-    _doc.acquireReadLock();       // assures that any pending updates to _doc have been performed", "-    try {", "-      assertEquals(\"StylesList after reset should contain 2 pairs\", 2, _adapter.getStyles().length);", "-      ", "-      assertEquals(\"The first element pushed on StylesList after reset should be\", styleElt1,", "-                   _adapter.getStyles()[1].toString());", "-      assertEquals(\"The second element pushed on StylesList after reset should be\", styleElt2,", "-                   _adapter.getStyles()[0].toString());", "-    }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();       // assures that any pending updates to _doc have been performed", "+//    try {", "+    assertEquals(\"StylesList after reset should contain 2 pairs\", 2, _adapter.getStyles().length);", "+    ", "+    assertEquals(\"The first element pushed on StylesList after reset should be\", styleElt1,", "+                 _adapter.getStyles()[1].toString());", "+    assertEquals(\"The second element pushed on StylesList after reset should be\", styleElt2,", "+                 _adapter.getStyles()[0].toString());", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac2dfc04759d1835b6e408f01554869c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringView.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected int drawUnselectedText(Graphics g, int x, int y, int start, int end) throws BadLocationException", "signatureAfterChange": "   protected int drawUnselectedText(Graphics g, int x, int y, int start, int end) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try {", "+//    _doc.acquireReadLock();", "+//    try {", "+    ", "+    ArrayList<HighlightStatus> stats = _doc._getHighlightStatus(start, end);", "+    if (stats.size() < 1) throw  new RuntimeException(\"GetHighlightStatus returned nothing!\");", "+    ", "+    for (HighlightStatus stat: stats) {", "+      int location = stat.getLocation();", "+      int length = stat.getLength();", "-      ArrayList<HighlightStatus> stats = _doc._getHighlightStatus(start, end);", "-      if (stats.size() < 1) throw  new RuntimeException(\"GetHighlightStatus returned nothing!\");", "+      // If this highlight status extends past p1, end at p1", "+      if (location + length > end) length = end - stat.getLocation();", "-      for (HighlightStatus stat: stats) {", "-        int location = stat.getLocation();", "-        int length = stat.getLength();", "-        ", "-        // If this highlight status extends past p1, end at p1", "-        if (location + length > end) length = end - stat.getLocation();", "-        ", "-        if (! (_doc instanceof InteractionsDJDocument) || ", "-            ! ((InteractionsDJDocument)_doc).setColoring((start + end)/2, g))      ", "-          setFormattingForState(g, stat.getState());", "-        Segment text = getLineBuffer(); ", "-        _doc.getText(location, length, text);", "-        x = Utilities.drawTabbedText(text, x, y, g, this, location);  // updates x on each iteration", "-      }", "+      if (! (_doc instanceof InteractionsDJDocument) || ", "+          ! ((InteractionsDJDocument)_doc).setColoring((start + end)/2, g))      ", "+        setFormattingForState(g, stat.getState());", "+      Segment text = getLineBuffer(); ", "+      _doc.getText(location, length, text);", "+      x = Utilities.drawTabbedText(text, x, y, g, this, location);  // updates x on each iteration", "-    finally { _doc.releaseReadLock(); }", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}], "num": 22676}