{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f6b4059ee17a3395d35336d93766bc4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ebc56f4d0f47e00b2d2ea7027f7731", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "7c2b459760724c8e0af7c91f77f7fa41e315edc6", "commitAfterChange": "c9b6668252c82575b56cf423d4fca817498241b6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testResetConsole()     throws DocumentAdapterException, InterruptedException", "signatureAfterChange": "   public void testResetConsole() throws DocumentAdapterException, InterruptedException", "diff": ["-   */", "-  public void testResetConsole()", "-    throws DocumentAdapterException, InterruptedException", "-  {", "+  /** Checks that reset console works. */", "+  public void testResetConsole() throws DocumentAdapterException, InterruptedException {", "-        synchronized(this) {", "+        synchronized(_interactionDoneLock) {", "-          this.notify();", "+          _interactionDone = true;", "+          _interactionDoneLock.notify();", "-      public void consoleReset() {", "-        consoleResetCount++;", "-      }", "+      public void consoleReset() { consoleResetCount++; }", "-    assertEquals(\"Length of console text\",", "-                 0,", "-                 _model.getConsoleDocument().getDocLength());", "+    assertEquals(\"Length of console text\", 0, _model.getConsoleDocument().getDocLength());", "-", "-    synchronized(listener) {", "+    _interactionDone = false;", "+    synchronized(_interactionDoneLock) {", "-      listener.wait();  // notified on interactionEnded", "+      _interactionDoneLock.wait();  // notified on interactionEnded", "-    assertEquals(\"Length of console text\",", "-                 1,", "-                 _model.getConsoleDocument().getDocLength());", "+    assertEquals(\"Length of console text\", 1, _model.getConsoleDocument().getDocLength());", "-    assertEquals(\"Length of console text\",", "-                 0,", "-                 _model.getConsoleDocument().getDocLength());", "+    assertEquals(\"Length of console text\", 0, _model.getConsoleDocument().getDocLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f120bd524412ac65cc7ac1c9ef2c7b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testDisplayFilename() throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   public void testCompleteFilename() throws BadLocationException, IOException, OperationCanceledException,      AlreadyOpenException", "diff": ["-  /** Tests the displayFileName method. */", "-  public void testDisplayFilename() throws IOException, OperationCanceledException, AlreadyOpenException {", "+  /** Tests the getCompleteFileName method. */", "+  public void testCompleteFilename() throws BadLocationException, IOException, OperationCanceledException, ", "+    AlreadyOpenException {", "-    assertEquals(\"untitled display filename\", \"(Untitled)\", _sdModel.getDisplayFileName(doc));", "+    assertEquals(\"untitled display filename\", \"(Untitled)\", doc.getCompletePath());", "-    String name = file.getName();", "+    String name = file.getAbsolutePath();", "-    assertEquals(\".java display filename\",", "-                 name.substring(0, name.length()-5),", "-                 _sdModel.getDisplayFileName(doc));", "+            ", "+    assertEquals(\".java display filename\", name, doc.getCompletePath());", "-    name = file.getName();", "+    name = file.getAbsolutePath();", "-    assertEquals(\".txt display filename\", name, _sdModel.getDisplayFileName(doc));", "+    assertEquals(\".txt display filename\", name, doc.getCompletePath());", "-    // Doesn't end in \".java\"", "-    file = File.createTempFile(\"DrJava-filename-test\", \".java.txt\", _tempDir).getCanonicalFile();", "+    // Modified File", "+    file = File.createTempFile(\"DrJava-filename-test\", \".java\", _tempDir).getCanonicalFile();", "-    name = file.getName();", "+    name = file.getAbsolutePath();", "-    assertEquals(\".java.txt display filename\", name, _sdModel.getDisplayFileName(doc));", "+    changeDocumentText(\"foo\", doc);", "+    assertEquals(\".java.txt display filename\", name + \" *\", doc.getCompletePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f89be1f1de4ddfbecd546ef781ec715d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/XMLProjectFileParserTest.java", "commitBeforeChange": "c3fb656e676b9139addd78f759d02f23bc0ddcb3", "commitAfterChange": "0f1ebded0cf3f3c1433e87b9a6d077f0d67078af", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testXMLParse() throws IOException, MalformedProjectFileException, java.text.ParseException", "signatureAfterChange": "   public void testXMLParse() throws IOException, MalformedProjectFileException, java.text.ParseException", "diff": ["-    File base = new File(System.getProperty(\"user.dir\"));", "+    File base = new File(f.getParent());", "-    assertEquals(\"first source filename\", new File(root,\"edu/rice/cs/drjava/DrJava.java\").getAbsolutePath(),", "-                 pfir.getSourceFiles()[0].getPath());", "+    assertEquals(\"first source filename\", new File(root,\"edu/rice/cs/drjava/DrJava.java\").getCanonicalPath(),", "+                 pfir.getSourceFiles()[0].getCanonicalPath());", "-    assertEquals(\"last source filename\", new File(root,\"edu/rice/cs/drjava/ui/BackgroundColorListener.java\").getAbsolutePath(), ", "-                 pfir.getSourceFiles()[5].getPath());", "-    assertEquals(\"first aux filename\", System.getProperty(\"user.dir\")+\"/testFiles/sample-project-file.xml\", ", "-                 pfir.getAuxiliaryFiles()[0].getPath());", "+    assertEquals(\"last source filename\", new File(root,\"edu/rice/cs/drjava/ui/BackgroundColorListener.java\").getCanonicalPath(), ", "+                 pfir.getSourceFiles()[5].getCanonicalPath());", "+    assertEquals(\"first aux filename\", new File(System.getProperty(\"user.dir\"),\"/testFiles/sample-project-file.xml\").getCanonicalPath(), ", "+                 pfir.getAuxiliaryFiles()[0].getCanonicalPath());", "-    assertEquals(\"classpath name\", System.getProperty(\"user.dir\")+\"/lib\", ", "-                 IterUtil.first(pfir.getClassPaths()).getPath());", "+    assertEquals(\"classpath name\", new File(System.getProperty(\"user.dir\"),\"lib\").getCanonicalPath(), ", "+                 IterUtil.first(pfir.getClassPaths()).getCanonicalPath());"]}], "num": 10283}