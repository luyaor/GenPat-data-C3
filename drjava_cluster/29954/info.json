{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e60264f03ec92560347e1988824feeb0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "227bdd4370f0f0425f28ddd8da012709", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 496, "methodNumberAfterChange": 612, "signatureBeforeChange": "    final private boolean jj_3R_107()", "signatureAfterChange": "    final private boolean jj_3R_107()", "diff": ["-  final private boolean jj_3R_107() {", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_159()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_107() {", "+    if (jj_3R_159()) return true;", "+    if (jj_3R_220()) jj_scanpos = xsp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcbb6f0b849ab5feef1b61c6e6808ba7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   synchronized public void compileAll(List<File> sourceRootSet, List<File> filesToCompile) throws IOException", "signatureAfterChange": "   public void compileAll(List<File> sourceRootSet, List<File> filesToCompile) throws IOException", "diff": ["-  synchronized public void compileAll(List<File> sourceRootSet, List<File> filesToCompile) throws IOException {", "+  public void compileAll(List<File> sourceRootSet, List<File> filesToCompile) throws IOException {", "+    ", "-    if (_getter.getFileGroupingState().isProjectActive()) {", "+    ", "+    if (_getter.getFileGroupingState().isProjectActive()) ", "-    }", "-    List<OpenDefinitionsDocument> defDocs = _getter.getDefinitionsDocuments();", "+    List<OpenDefinitionsDocument> defDocs;", "+    ", "+    defDocs = _getter.getDefinitionsDocuments(); ", "+    ", "-", "-    // check for modified project files, in case they didn't save when prompted", "-    if (_hasModifiedFiles(defDocs)) {", "-      // if any files haven't been saved after we told our", "-      // listeners to do so, don't proceed with the rest", "-      // of the compile.", "+    ", "+    // Check for modified project files, in case they didn't save when prompted.", "+    // If any files haven't been saved after we told our listeners to do so, ", "+    // don't proceed with the rest of the compile.", "+    if (_hasModifiedFiles(defDocs)) return;", "+    ", "+    // Get sourceroots and all files", "+    File[] sourceRoots = sourceRootSet.toArray(new File[0]);;", "+    File[] files = filesToCompile.toArray(new File[0]);", "+    ", "+    _notifier.compileStarted();", "+    ", "+    try { _compileFiles(sourceRoots, files, buildDir); }", "+    catch (Throwable t) {", "+      CompilerError err = new CompilerError(t.toString(), false);", "+      CompilerError[] errors = new CompilerError[] { err };", "+      _distributeErrors(errors);", "-    else {", "-", "-      // Get sourceroots and all files", "-      File[] sourceRoots = sourceRootSet.toArray(new File[0]);;", "-      File[] files = filesToCompile.toArray(new File[0]);", "-", "-      _notifier.compileStarted();", "-", "+    finally { _notifier.compileEnded(); }", "+  }", "-        // Compile the files", "-        _compileFiles(sourceRoots, files, buildDir);", "-      catch (Throwable t) {", "-        CompilerError err = new CompilerError(t.toString(), false);", "-        CompilerError[] errors = new CompilerError[] { err };", "-        _distributeErrors(errors);", "-      finally {", "-        // Fire a compileEnded event", "-        _notifier.compileEnded();", "-      }"]}], "num": 29954}