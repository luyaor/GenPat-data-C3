{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82afad3c874629ac88d43d6af3452446", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdb11f29d1373cb0578f57f861d6e6e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "commitAfterChange": "462c4a613a015a2dbcac948815ea1318bb028f22", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void appendExceptionResult(String exceptionClass, String message,                                     String stackTrace, String styleName)", "signatureAfterChange": "   public void appendExceptionResult(String exceptionClass, String message,                                     String stackTrace, String styleName)", "diff": ["-", "+      ", "-      insertText(getDocLength(),", "-                 exceptionClass + \": \" + message + \"\\n\", styleName);", "+      String c = exceptionClass;", "+      if(c.indexOf('.') != -1) ", "+        c = c.substring(c.lastIndexOf('.')+1,c.length());      ", "+      insertText(getDocLength(), c + \": \" + message + \"\\n\", styleName);", "+      ", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec7fad0e6aa00e49dd1a645c62205a5f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ImportationManager.java", "commitBeforeChange": "dbdd53c636f6618ffbae999ad0ee607bc3e2b6a3", "commitAfterChange": "689d9f23e5437e0982e3819c2bbd111dd456dac2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void declareMemberStaticImport(String member)", "signatureAfterChange": "     public void declareMemberStaticImport(String member)", "diff": ["+      Class c;", "-        Class.forName(member, true, classLoader);", "+        c = Class.forName(member, true, classLoader);", "-        findInnerClass(member);", "+        c = findInnerClass(member);", "-      declareClassImport(member);", "-      foundSomethingToImport = true;", "+      if(isPublicAndStatic(c.getModifiers())) {", "+        declareClassImport(member);", "+        foundSomethingToImport = true;", "+      }", "-      singleTypeImportStaticFieldClauses.remove(f);", "-      singleTypeImportStaticFieldClauses.add(0,f);", "-      foundSomethingToImport = true;", "+      if(isPublicAndStatic(f.getModifiers())) {", "+        singleTypeImportStaticFieldClauses.remove(f);", "+        singleTypeImportStaticFieldClauses.add(0,f);", "+        foundSomethingToImport = true;", "+      }", "-          singleTypeImportStaticMethodClauses.remove(m);", "-          singleTypeImportStaticMethodClauses.add(0,m);", "-          foundSomethingToImport = true;", "+          if(isPublicAndStatic(m.getModifiers())) {", "+            singleTypeImportStaticMethodClauses.remove(m);", "+            singleTypeImportStaticMethodClauses.add(0,m);", "+            foundSomethingToImport = true;", "+          }"]}], "num": 20821}