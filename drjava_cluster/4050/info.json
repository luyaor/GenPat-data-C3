{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3dbef7f2cdf4ac8c19edbca3883f24e8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deccb3cc7c831f253a36a61a70a898e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "commitAfterChange": "e7a6b9c5a51a2cf7b9cfb5a10d90c24a3c7c3844", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 65, "signatureBeforeChange": "   public Void forBitwiseXorExpressionDoFirst(BitwiseXorExpression that)", "signatureAfterChange": "   public Void forBitwiseXorExpressionDoFirst(BitwiseXorExpression that)", "diff": ["-  }", "-  public Void forBitwiseXorExpressionDoFirst(BitwiseXorExpression that) {", "-    _addAndIgnoreError(\"Bitwise xor expressions cannot be used at any language level\", that);", "-    return null;", "-  }", "+  public Void forBitwiseOrExpressionDoFirst(BitwiseOrExpression that) { return null; }", "+  public Void forBitwiseXorExpressionDoFirst(BitwiseXorExpression that) { return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94763916cefed00aae88c2c4ead82b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "commitAfterChange": "e7a6b9c5a51a2cf7b9cfb5a10d90c24a3c7c3844", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 68, "signatureBeforeChange": "   public Void forShiftBinaryExpressionDoFirst(ShiftBinaryExpression that)", "signatureAfterChange": "   public Void forShiftBinaryExpressionDoFirst(ShiftBinaryExpression that)", "diff": ["-  }", "-  public Void forShiftBinaryExpressionDoFirst(ShiftBinaryExpression that) {", "-    _addAndIgnoreError(\"Bit shifting operators cannot be used at any language level\", that);", "-    return null;", "-  }", "+  public Void forBitwiseNotExpressionDoFirst(BitwiseNotExpression that) { return null; }", "+  public Void forShiftBinaryExpressionDoFirst(ShiftBinaryExpression that) { return null; }"]}], "num": 4050}