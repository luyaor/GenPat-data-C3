{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f87c5aa2d3fe8a2cc8adad8ad33d452", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97c7ceb3aa05e5da439f2e1559ecc677", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "    public TypeData forInterfaceDefOnly(InterfaceDef that, TypeData mav_result, TypeData name_result, TypeData[] typeParameters_result, TypeData[] superinterfaces_result, TypeData body_result)", "signatureAfterChange": "    public TypeData forInterfaceDefOnly(InterfaceDef that, TypeData mavRes, TypeData nameRes,                                        TypeData[] typeParamRes, TypeData[] superinterfacesRes, TypeData bodyRes)", "diff": ["-  public TypeData forInterfaceDefOnly(InterfaceDef that, TypeData mav_result, TypeData name_result, TypeData[] typeParameters_result, TypeData[] superinterfaces_result, TypeData body_result) {", "-    return forJExpressionOnly(that);//forTypeDefBaseOnly(that, mav_result, name_result, typeParameters_result);", "+  public TypeData forInterfaceDefOnly(InterfaceDef that, TypeData mavRes, TypeData nameRes, ", "+                                      TypeData[] typeParamRes, TypeData[] superinterfacesRes, TypeData bodyRes) {", "+    return forJExpressionOnly(that); //forTypeDefBaseOnly(that, mavRes, nameRes, typeParamRes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d410d6d16ead34145cce0b95145e336e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "    public TypeData forClassDefOnly(ClassDef that, TypeData mav_result, TypeData name_result, TypeData[] typeParameters_result, TypeData superclass_result, TypeData[] interfaces_result, TypeData body_result)", "signatureAfterChange": "    public TypeData forClassDefOnly(ClassDef that, TypeData mavRes, TypeData nameRes, TypeData[] typeParametersRes,                                   TypeData superRes, TypeData[] interfacesRes, TypeData bodyRes)", "diff": ["-  public TypeData forClassDefOnly(ClassDef that, TypeData mav_result, TypeData name_result, TypeData[] typeParameters_result, TypeData superclass_result, TypeData[] interfaces_result, TypeData body_result) {", "-    return forJExpressionOnly(that);//forTypeDefBaseOnly(that, mav_result, name_result, typeParameters_result);", "+  public TypeData forClassDefOnly(ClassDef that, TypeData mavRes, TypeData nameRes, TypeData[] typeParametersRes,", "+                                  TypeData superRes, TypeData[] interfacesRes, TypeData bodyRes) {", "+    return forJExpressionOnly(that);//forTypeDefBaseOnly(that, mavRes, nameRes, typeParametersRes);"]}], "num": 20118}