{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "864847528e27af049d4df71c52fb53e6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "122e68751356eb4e543ef508f70d974d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/NewJavaClassDialog.java", "commitBeforeChange": "6207c0d4b83ee23d6d4624c513f270e47c43cc83", "commitAfterChange": "f4c8eb851d98f4da2479f32fb767dac4b3a40e1c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void ok()", "signatureAfterChange": "   public void ok()", "diff": ["-    if (!classNameMeetsNamingConvention(_className.getText())) {", "+    if (!checkClassName(_className.getText())) {", "-      if(!classNameMeetsNamingConvention(_superClass.getText())) {", "+      if(!checkSuperClassName(_superClass.getText())) {", "-      if(!interfacesNameMeetsNamingConvention(_interfaces.getText())) {", "+      if(!checkInterfaceNames(_interfaces.getText())) {", "-    String classContent = createClassContent(_publicRadio.isSelected()?\"public\":\"\",", "+    String classContent = getClassContent(_publicRadio.isSelected()?\"public\":\"\",", "-                                             _superClass.getText(), _interfaces.getText());", "+                                             _superClass.getText(), _interfaces.getText(),", "+                                             _isElementaryOrFunctionalJava);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "680c8de8490919248d7c8369ce6e6fd1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/NewJavaClassTest.java", "commitBeforeChange": "6207c0d4b83ee23d6d4624c513f270e47c43cc83", "commitAfterChange": "f4c8eb851d98f4da2479f32fb767dac4b3a40e1c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testInterfacesNamingConventionsWrongNames()", "signatureAfterChange": "      public void testInterfacesNamingConventionsWrongNames()", "diff": ["-                NewJavaClassDialog.interfacesNameMeetsNamingConvention(\"interf aces\")); ", "+                NewJavaClassDialog.checkInterfaceNames(\"interf aces\")); ", "-                NewJavaClassDialog.interfacesNameMeetsNamingConvention(\"interfaces; inter\"));", "+                NewJavaClassDialog.checkInterfaceNames(\"interfaces; inter\"));", "-                NewJavaClassDialog.interfacesNameMeetsNamingConvention(\"interfaces, &inter\"));", "-    assertFalse(\"Correct Interfaces Name\", ", "-                NewJavaClassDialog.interfacesNameMeetsNamingConvention(\"interfaces1, interfaceme123 , \"));", "+                NewJavaClassDialog.checkInterfaceNames(\"interfaces, &inter\"));", "+    assertFalse(\"Wrong Interfaces Name\", ", "+                NewJavaClassDialog.checkInterfaceNames(\"interfaces1, interfaceme123 , \"));"]}], "num": 12049}