{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7fdf60d724a886569fb3d939ddf8860", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b724c93ba1837697e6dbe6ea80b9bf5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 697, "methodNumberAfterChange": 675, "signatureBeforeChange": "      public void nonTestCase(boolean isTestAll)", "signatureAfterChange": "      public void nonTestCase(boolean isTestAll)", "diff": ["-      Utilities.invokeLater(new Runnable() {", "-        public void run() {", "+//      Utilities.invokeLater(new Runnable() {", "+//        public void run() {", "-        }});", "+//        }});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19724773ca40d34629f588bb58e06064", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "signatureAfterChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "diff": ["-        Utilities.invokeLater(new Runnable() { public void run() { _notifier.junitStarted(); } });", "+//        Utilities.invokeLater(new Runnable() { public void run() { ", "+          _notifier.junitStarted(); ", "+//        } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33d5e96d356873aed6234295d913241f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "27f4730bb628f4f21b5ace9b8592e93a615017f8", "commitAfterChange": "08f616afaebe02cc02ba5da4da4990852caead81", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public synchronized void startUp() throws DebugException", "signatureAfterChange": "   public void startUp() throws DebugException", "diff": ["-  public synchronized void startUp() throws DebugException {", "+  public /* synchronized */ void startUp() throws DebugException {", "-          // TODO: holding a lock (this) while sleeping. try to release lock? (mgricken)", "-          // TODO: holding a lock (this) while sleeping. try to release lock? (mgricken)", "-          try { Thread.sleep(100); } // Give any temporary connection problems a chance to resolve", "+          try { Thread.sleep(500); } // Give any temporary connection problems a chance to resolve", "-      /* Move the following command to the end of the event queue so that it is done outside outside the readLock", "-       * held when this method is called from an InteractionsListener. */", "-      EventQueue.invokeLater(new Runnable() {", "-        public void run() { _model.getInteractionsModel().addListener(_watchListener); }", "-      });", "-      ", "+      _model.getInteractionsModel().addListener(_watchListener);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48f172f40e62ee99c87421083949e1d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5fcb38a9e5144c9ef6a799230bac118e680b79fd", "commitAfterChange": "1d939764a7a48ee57c8c9b9e857d49b241cabd3e", "methodNumberBeforeChange": 401, "methodNumberAfterChange": 398, "signatureBeforeChange": "   private void _openProjectHelper(File projectFile)", "signatureAfterChange": "   private void _openProjectHelper(File projectFile)", "diff": ["-      EventQueue.invokeLater(new Runnable() { public void run() { _model.addToBrowserHistory(); } });", "+      _model.addToBrowserHistory();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8475bcbd9cd5b388543244f2ee0b514a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "05772424dfc982d0dfb9b515dbd73529baa8dcec", "commitAfterChange": "49e1a7c8210973b52b1154ca254fffc70cc2f3a4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static void main(final String[] args)", "signatureAfterChange": "   public static void main(final String[] args)", "diff": ["-    SwingUtilities.invokeLater(new Runnable() {", "-      public void run() { createAndShowGUI(args, splash); }", "-    });", "+    // ** invokeLater commented out in order to allow the splash screen to paint itself", "+//    SwingUtilities.invokeLater(new Runnable() {", "+//      public void run() { ", "+        createAndShowGUI(args, splash); ", "+//      }", "+//    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e15ac9a78f034ba3026afd7ea6f5f61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "a33beea01f3d2263a618fa7843cb52ddfdaa4ccf", "commitAfterChange": "2b371f46cbe5fba581bc2ddd38ce1509ce9a6d65", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void changeRegion(final R region, Lambda<Object, R> cmd)", "signatureAfterChange": "   public void changeRegion(final R region, Lambda<Object, R> cmd)", "diff": ["-//      final OpenDefinitionsDocument doc = region.getDocument();", "-    Utilities.invokeLater(new Runnable() { public void run() {", "-      // notify", "-      _lock.startRead();", "-      try { for (RegionManagerListener<R> l: _listeners) { l.regionChanged(region); } } ", "-      finally { _lock.endRead(); }            ", "-    } });", "+    // notify", "+    _lock.startRead();", "+    try { for (RegionManagerListener<R> l: _listeners) { l.regionChanged(region); } } ", "+    finally { _lock.endRead(); }            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e69ef364b35de4f39ff504ab95fd2e54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 656, "methodNumberAfterChange": 646, "signatureBeforeChange": "          public void interactionEnded()", "signatureAfterChange": "          public void interactionEnded()", "diff": ["-      Utilities.invokeLater(new Runnable() {", "-        public void run() {", "+//      Utilities.invokeLater(new Runnable() {", "+//        public void run() {", "-        }", "-      });", "+//        }", "+//      });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa13bcf88064b5d130e1b78ea4456b4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "5523fc1c8420b6c9512186f7b1faddd6cd1960a0", "commitAfterChange": "0e447714063de4343f51d85c5c1b4138c2abd929", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void findAll(String searchStr, final boolean searchAll, final boolean matchCase,                       final boolean wholeWord, final boolean noComments, final boolean noTestCases,                       final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm,                       final FindResultsPanel panel)", "signatureAfterChange": "   public void findAll(String searchStr, final boolean searchAll, final boolean matchCase,                       final boolean wholeWord, final boolean noComments, final boolean noTestCases,                       final OpenDefinitionsDocument startDoc, final RegionManager<MovingDocumentRegion> rm,                       final FindResultsPanel panel)", "diff": ["-      EventQueue.invokeLater(new Runnable() {", "-        public void run() {", "+//      EventQueue.invokeLater(new Runnable() {", "+//        public void run() {", "-        }", "-      });", "+//        }", "+//      });"]}], "num": 7753}