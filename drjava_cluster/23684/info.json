{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "892bd06e38a53ff813a974bdbdc428b2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e8c99d67fb3ba34129b801d855f0e61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "56df485f00337d373f1f0b94fc58f7c7b8b714d4", "commitAfterChange": "c96259dca0616423a6c16e192d3684fffa655320", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public FindReplaceDialog(MainFrame frame, SingleDisplayModel model)", "signatureAfterChange": "   public FindReplaceDialog(MainFrame frame, SingleDisplayModel model)", "diff": ["+    JLabel matchLabel = new JLabel(\"Match\", SwingConstants.LEFT);", "+    matchLabel.setHorizontalAlignment(SwingConstants.LEFT);", "+", "+    _labelPanel.add(matchLabel);", "+    MatchWholeWordListener mwwl = new MatchWholeWordListener();", "+    _matchWholeWord = new JRadioButton(\"Whole Word\");", "+    _matchWholeWord.addActionListener(mwwl);", "+", "+    FindAnyOccurrenceListener faol = new FindAnyOccurrenceListener();", "+    _findAnyOccurrence = new JRadioButton(\"Any Occurrence\");", "+    _findAnyOccurrence.addActionListener(faol);", "+", "+", "+    _radioButtonPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0));", "+    _radioButtonPanel.add(_matchWholeWord);", "+    _radioButtonPanel.add(_findAnyOccurrence);", "+    // add radiobuttons to the buttongroup", "+    _radioButtonGroup = new ButtonGroup();", "+    _radioButtonGroup.add(_matchWholeWord);", "+    _radioButtonGroup.add(_findAnyOccurrence);", "+", "+    //_matchCaseAndClosePanel.add(_matchWholeWord);", "+    //_matchCaseAndClosePanel.add(_findAnyOccurrence);", "+    _findAnyOccurrence.setSelected(true);", "+", "-    JPanel midPanel = new JPanel(new GridLayout(2,1));", "+    JPanel midPanel = new JPanel(new GridLayout(3,1));", "+    midPanel.add(wrap(_radioButtonPanel));", "+", "+    //_rightPanel.add(_radioButtonPanel, BorderLayout.SOUTH);", "-    _searchAllDocuments.setNextFocusableComponent(_findNextButton);", "+    _searchAllDocuments.setNextFocusableComponent(_matchWholeWord);", "+    _matchWholeWord.setNextFocusableComponent(_findAnyOccurrence);", "+    _findAnyOccurrence.setNextFocusableComponent(_findNextButton);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c03a0b3e9e8cb49a04d1986c03fcbed5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ProcessChain.java", "commitBeforeChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "commitAfterChange": "fdb0eba529d65804f971cdb52c673713ef0d4616", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ProcessChain(ProcessCreator[] pcs)", "signatureAfterChange": "   public ProcessChain(ProcessCreator[] pcs)", "diff": ["+", "+    _combinedInputStream = new PipedInputStream();", "+    try {", "+      _combinedStdOutStream = new PipedOutputStream(_combinedInputStream);", "+      _combinedInputStream.connect(_combinedStdOutStream);", "+    }", "+    catch(IOException e) { /* ignore, no output if this goes wrong */ }", "+    _combinedErrorStream = new PipedInputStream();", "+    try {", "+      _combinedStdErrStream = new PipedOutputStream(_combinedErrorStream);", "+      _combinedErrorStream.connect(_combinedStdErrStream);", "+    }", "+    catch(IOException e) { /* ignore, no output if this goes wrong */ }", "+", "-                                                        PROCESS_CHAIN_THREAD_GROUP);", "-      _stdOutRedirectors.add(r);", "+                                                        new ProcessChainThreadGroup(this));", "+      _redirectors.add(r);", "-                                   PROCESS_CHAIN_THREAD_GROUP);", "-      _stdErrRedirectors.add(r);", "+                                   new ProcessChainThreadGroup(this));", "+      _redirectors.add(r);", "+    // now pipe output from the last process into our output streams", "+    StreamRedirectThread r = new StreamRedirectThread(\"stdout Redirector \"+(_processes.length-1),", "+                                                      _processes[_processes.length-1].getInputStream(),", "+                                                      _combinedStdOutStream,", "+                                                      new ProcessChainThreadGroup(this));", "+    _redirectors.add(r);", "+    r.start();", "+    r = new StreamRedirectThread(\"stderr Redirector \"+(_processes.length-1),", "+                                 _processes[_processes.length-1].getErrorStream(),", "+                                 _combinedStdErrStream,", "+                                 new ProcessChainThreadGroup(this));", "+    _redirectors.add(r);", "+    r.start();"]}], "num": 23684}