{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7e4ddd0f5e9e8e1279efafa483c5029", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c2c21853703637f4b4bd08cb71dfe6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "commitAfterChange": "2df7289d55456372fbaf4e3ab78549d8571648f8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void compile(List<OpenDefinitionsDocument> defDocs) throws IOException", "signatureAfterChange": "   public void compile(List<OpenDefinitionsDocument> defDocs) throws IOException", "diff": ["-  /** Compiles all documents in the specified list of OpenDefinitionsDocuments. */", "+   */", "-    ", "-//    System.err.println(\"compile(\" + defDocs + \") called\");", "-    ", "-    // Only compile if all are saved", "-    if (_hasModifiedFiles(defDocs)) _notifier.saveBeforeCompile();", "-    // check for modified project files, in case they didn't save when prompted", "-    if (_hasModifiedFiles(defDocs)) return;", "-    // if any files haven't been saved after we told our", "-    // listeners to do so, don't proceed with the rest", "-    // of the compile.", "-    ", "-    // Get sourceroots and all files", "+    if (_prepareForCompile()) {", "+      _doCompile(defDocs);", "+    }", "+  }", "-    ", "-    File f;", "-    ", "-    for (OpenDefinitionsDocument doc : defDocs) {", "-        filesToCompile.add(doc.getFile());", "-    ", "-//    System.err.println(\"Filtered list of docs to compile: \" + filesToCompile);", "-    ", "-    _rawCompile(getSourceRootSet(), filesToCompile.toArray(new File[0]), excludedFiles.toArray(new File[0]));", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55ab38ebc2dc92a97d1c0cd91624be2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "8279bc33117c74621df6401dedd10a0cae247a2c", "commitAfterChange": "ce3350f89c936debb5fbaa8f27f501d1524368cf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void restartInterpreterJVM()", "signatureAfterChange": "   public void restartInterpreterJVM()", "diff": ["-    synchronized(this) {", "-     if (_startupInProgress) {", "-        return;", "-      }", "+    if (isStartupInProgress()) {", "+      return;", "+    }", "-      _startupInProgress = true;", "-", "-      killInterpreter();", "-", "-      String className = InterpreterJVM.class.getName();", "-      String[] args = new String[] { getIdentifier() };", "-      try {", "-        //System.err.println(\"started interpreter jvm\");", "-        _interpreterProcess = ExecJVM.runJVMPropogateClassPath(className, args);", "-        ", "-        // Start a thread to wait for the interpreter to die and to fire", "-        // off a new one (and notify model) when it happens", "-        Thread thread = new Thread() {", "-          public void run() {", "-            try {", "-              int status = _interpreterProcess.waitFor();", "-              restartInterpreterJVM();", "-              _model.replCalledSystemExit(status);", "-            }", "-            catch (InterruptedException ie) {", "-              throw new edu.rice.cs.util.UnexpectedException(ie);", "-            }", "-          }", "-        };", "-", "-        thread.start();", "-      }", "-      catch (IOException ioe) {", "-        _threwException(ioe);", "-      }", "+    try {", "+      invokeSlave();", "+    }", "+    catch (RemoteException re) {", "+      _threwException(re);", "+    }", "+    catch (IOException ioe) {", "+      _threwException(ioe);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8890057c62ba9ddb2a3c68073b4bab22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "805c373a0ec3b1117a99ab61e1255aea61e2bd63", "commitAfterChange": "4117398987de5205499e8524a48aeb3a8a6b43ad", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public File getMasterWorkingDirectory()", "signatureAfterChange": "   public File getMasterWorkingDirectory()", "diff": ["-      file = DrJava.getConfig().getSetting(LAST_DIRECTORY);", "-      ", "-      // if it's the NULL_FILE, use \"user.home\"", "-      if (file==FileOption.NULL_FILE) {", "-        file = new File(System.getProperty(\"user.home\"));", "-      }", "+      file = FileOps.getValidDirectory(DrJava.getConfig().getSetting(LAST_DIRECTORY));", "-      file = new File(System.getProperty(\"user.home\"));", "+      file = FileOps.getValidDirectory(DrJava.getConfig().getSetting(LAST_DIRECTORY));", "-    while (!file.exists()) {", "-      // if the saved path doesn't exist anymore, try the parent", "-      file = file.getParentFile();", "-    }", "-    if (file==null) {", "-      // somehow we ended up with null, use \"user.home\"", "-      file = new File(System.getProperty(\"user.home\"));", "-    }", "-    // if it's not a directory, try the parent", "-    if (!file.isDirectory()) {", "-      if (file.getParent() != null) file = file.getParentFile();", "-    }", "-", "-    // this should be an existing directory now", "-    if (file.exists() && file.isDirectory()) {", "-\t// update the setting and return it", "-        DrJava.getConfig().setSetting(LAST_DIRECTORY, file);", "-        return file;", "-    }", "-", "-    // ye who enter here, abandon all hope...", "-    // the saved path didn't work, and neither did \"user.home\"", "-    throw new UnexpectedException(new IOException(\"File's parent file is null\"));", "+    // update the setting and return it", "+    DrJava.getConfig().setSetting(LAST_DIRECTORY, file);", "+    return file;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d75ac86e8d20a7533864ade2dc614841", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "1f215280ffb4deee1474aa0ea630d96d544831f9", "commitAfterChange": "36da33844ba54377479a55c5dc3b578eed405d70", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void init(UIAdapter adapter)", "signatureAfterChange": "      public void shutdown()", "diff": ["+  ", "+  public void shutdown() {", "+    if (isReady()) {", "+      _vm.dispose();", "+      _vm = null;", "+    }", "-   */", "-   }"]}], "num": 12966}