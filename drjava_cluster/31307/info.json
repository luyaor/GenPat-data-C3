{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc0f3e6b853488c7e209b1c9cd72383c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24970d1974851f4234c3c1ae2472b4a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyAdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public Void forInnerClassDef(InnerClassDef that)", "signatureAfterChange": "   public Void forInnerClassDef(InnerClassDef that)", "diff": ["-  public Void forInnerClassDef(InnerClassDef that) {", "+  public Void forInnerClassDef(InnerClassDef that) { ", "-    handleInnerClassDef(that, _bodyData, getQualifiedClassName(_bodyData.getSymbolData().getName()) + \"$\" + ", "-                        _bodyData.getSymbolData().preincrementLocalClassNum() + that.getName().getText());", "+    handleInnerClassDef(that, _bodyData, getQualifiedClassName(_bodyData.getSymbolData().getName()) + \".\" + ", "+                        /* _bodyData.getSymbolData().preincrementLocalClassNum() + */ that.getName().getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0cdd6d1568ae3163d4ed45d36b30d2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyFullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public Void forInnerInterfaceDef(InnerInterfaceDef that)", "signatureAfterChange": "   public Void forInnerInterfaceDef(InnerInterfaceDef that)", "diff": ["-  /** Process a local inner interface definition */", "+  /** Process a local interface definition */", "-    // TODO: is this necessarily local?", "-    handleInnerInterfaceDef(that, _bodyData, getQualifiedClassName(_bodyData.getSymbolData().getName()) + \".\"", "-                              + _bodyData.getSymbolData().preincrementLocalClassNum() + that.getName().getText());", "+    _addAndIgnoreError(\"Local interfaces are illegal in Java.\", that);"]}], "num": 31307}