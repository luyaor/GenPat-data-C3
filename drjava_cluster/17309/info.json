{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2dc41ba825981ba6742bd0188ef8e0ba", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f8525b370585e0b69520789c76bc52c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 404, "methodNumberAfterChange": 404, "signatureBeforeChange": "\r \r   public void forTypeParameter(TypeParameter that)", "signatureAfterChange": "    public void forTypeParameter(TypeParameter that)", "diff": ["-\r", "-  public void forTypeParameter(TypeParameter that) {\r", "-    forTypeParameterDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getVariable().visit(this);\r", "-    that.getBound().visit(this);\r", "-    forTypeParameterOnly(that);\r", "-  }\r", "+", "+  public void forTypeParameter(TypeParameter that) {", "+    forTypeParameterDoFirst(that);", "+    if (prune(that)) return;", "+    that.getVariable().visit(this);", "+    that.getBound().visit(this);", "+    forTypeParameterOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd6673f21e5422857526e4bd28bcfd89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 385, "signatureBeforeChange": "\r \r   public void forDoStatement(DoStatement that)", "signatureAfterChange": "    public void forDoStatement(DoStatement that)", "diff": ["-\r", "-  public void forDoStatement(DoStatement that) {\r", "-    forDoStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getCode().visit(this);\r", "-    that.getCondition().visit(this);\r", "-    forDoStatementOnly(that);\r", "-  }\r", "+", "+  public void forDoStatement(DoStatement that) {", "+    forDoStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getCode().visit(this);", "+    that.getCondition().visit(this);", "+    forDoStatementOnly(that);", "+  }"]}], "num": 17309}