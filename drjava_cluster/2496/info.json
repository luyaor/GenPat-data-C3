{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "888d0136907eee48e333f37805e59985", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c612d0fe31902733176deaccd3ed47ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": "      public void testAnonymousInnerClass() throws ParseException", "signatureAfterChange": "      public void testAnonymousInnerClass() throws ParseException", "diff": ["-    stmts.add(new ObjectMethodCall(new AmbiguousName(\"o\"), \"n\", null, \"\", -1, -1, -1, -1));", "+    stmts.add(new ExpressionStatement(new ObjectMethodCall(new AmbiguousName(\"o\"), \"n\", null, \"\", -1, -1, -1, -1), true));", "-    expectedAST.add(new AnonymousAllocation(new ReferenceTypeName(\"C\"), null, members)); ", "-    verifyOutput(\" new C() { void m() { o.n(); } }\", expectedAST);", "+    Expression expected = new AnonymousAllocation(new ReferenceTypeName(\"C\"), null, members); ", "+    verifyExprOutput(\" new C() { void m() { o.n(); } }\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2d2f098b955d8e53ed9747c5a57496f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 59, "signatureBeforeChange": "      public void testImplicitMethodInvocation() throws ParseException", "signatureAfterChange": "      public void testImplicitMethodInvocation() throws ParseException", "diff": ["-    expectedAST.add(new ObjectMethodCall(null,\"meth\", args, null, -1, -1, -1, -1));", "-    verifyOutput(\"meth(5)\", expectedAST);", "+    Expression expected = new SimpleMethodCall(\"meth\", args, null, -1, -1, -1, -1);", "+    verifyExprOutput(\"meth(5)\", expected);"]}], "num": 2496}