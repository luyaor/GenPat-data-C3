{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12e18e7bca7337b725abab5dcc0d8c06", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c9e17b75b7ef6efd33564572378020e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithSkipCommentsTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testNoPrefix() throws BadLocationException", "signatureAfterChange": "    public void testNoPrefix() throws BadLocationException", "diff": ["-    assertTrue(\"At DOCSTART.\", rule.applyRule(_doc, 0));", "-    assertTrue(\"At start of block.\", rule.applyRule(_doc, 25));", "-    assertTrue(\"START starts one-line comment.\", rule.applyRule(_doc, 54));", "-    assertTrue(\"START starts one-line comment.\", rule.applyRule(_doc, 60));", "-    assertTrue(\"START starts javadoc comment.\", rule.applyRule(_doc, 104));", "-    assertTrue(\"START starts javadoc comment.\", rule.applyRule(_doc, 110));", "-    assertTrue(\"Line inside javadoc comment.\", !rule.applyRule(_doc, 130));", "-    assertTrue(\"Line closes javadoc comment.\", rule.applyRule(_doc, 150));", "-    assertTrue(\"START is free.\", rule.applyRule(_doc, 180));", "-    assertTrue(\"START is free.\", rule.applyRule(_doc, 230));", "-    assertTrue(\"START starts multi-line comment.\", rule.applyRule(_doc, 260));", "-    assertTrue(\"Line inside multi-line comment.\", !rule.applyRule(_doc, 275));", "-    assertTrue(\"Line inside multi-line comment.\", !rule.applyRule(_doc, 300));", "-    assertTrue(\"Line closes multi-line comment.\", rule.applyRule(_doc, 399));", "-    assertTrue(\"START is free.\", rule.applyRule(_doc, 400));", "-    assertTrue(\"At end of document.\", rule.applyRule(_doc, 401));", "+    assertTrue(\"At DOCSTART.\", rule.applyRule(_doc, 0, Indenter.OTHER));", "+    assertTrue(\"At start of block.\", rule.applyRule(_doc, 25, Indenter.OTHER));", "+    assertTrue(\"START starts one-line comment.\", rule.applyRule(_doc, 54, Indenter.OTHER));", "+    assertTrue(\"START starts one-line comment.\", rule.applyRule(_doc, 60, Indenter.OTHER));", "+    assertTrue(\"START starts javadoc comment.\", rule.applyRule(_doc, 104, Indenter.OTHER));", "+    assertTrue(\"START starts javadoc comment.\", rule.applyRule(_doc, 110, Indenter.OTHER));", "+    assertTrue(\"Line inside javadoc comment.\", !rule.applyRule(_doc, 130, Indenter.OTHER));", "+    assertTrue(\"Line closes javadoc comment.\", rule.applyRule(_doc, 150, Indenter.OTHER));", "+    assertTrue(\"START is free.\", rule.applyRule(_doc, 180, Indenter.OTHER));", "+    assertTrue(\"START is free.\", rule.applyRule(_doc, 230, Indenter.OTHER));", "+    assertTrue(\"START starts multi-line comment.\", rule.applyRule(_doc, 260, Indenter.OTHER));", "+    assertTrue(\"Line inside multi-line comment.\", !rule.applyRule(_doc, 275, Indenter.OTHER));", "+    assertTrue(\"Line inside multi-line comment.\", !rule.applyRule(_doc, 300, Indenter.OTHER));", "+    assertTrue(\"Line closes multi-line comment.\", rule.applyRule(_doc, 399, Indenter.OTHER));", "+    assertTrue(\"START is free.\", rule.applyRule(_doc, 400, Indenter.OTHER));", "+    assertTrue(\"At end of document.\", rule.applyRule(_doc, 401, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa1039f5f7f9f5b892fef99520c6bfd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionHasCharPrecedingOpenBraceTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testIsIn1DArray() throws BadLocationException", "signatureAfterChange": "    public void testIsIn1DArray() throws BadLocationException", "diff": ["-    assertTrue(\"At DOCSTART.\", ! rule.applyRule(_doc, 0));", "-    assertTrue(\"At identifier.\",  ! rule.applyRule(_doc, 10));", "-    assertTrue(\"At start of array.\", !rule.applyRule(_doc, 25));", "-    assertTrue(\"START starts one-line comment.\", rule.applyRule(_doc, 54));", "-    assertTrue(\"START starts one-line comment.\", rule.applyRule(_doc, 60));", "-    assertTrue(\"START starts javadoc comment.\", rule.applyRule(_doc, 104));", "-    assertTrue(\"START starts javadoc comment.\", rule.applyRule(_doc, 110));", "-    assertTrue(\"Line inside javadoc comment.\", rule.applyRule(_doc, 130));", "-    assertTrue(\"Line closes javadoc comment.\", rule.applyRule(_doc, 150));", "-    assertTrue(\"START is stil in first.\", rule.applyRule(_doc, 180));", "-    assertTrue(\"Second pseudo array element.\", ! rule.applyRule(_doc, 230));", "-    assertTrue(\"Start of multi-line comment.\", !rule.applyRule(_doc, 260));", "-    assertTrue(\"Line inside multi-line comment.\", !rule.applyRule(_doc, 275));", "-    assertTrue(\"Line inside multi-line comment.\", !rule.applyRule(_doc, 300));", "-    assertTrue(\"Line closes multi-line comment.\", !rule.applyRule(_doc, 399));", "-    assertTrue(\"Last close brace\", !rule.applyRule(_doc, 400));", "-    assertTrue(\"At end of document.\", !rule.applyRule(_doc, 401));", "+    assertTrue(\"At DOCSTART.\", ! rule.applyRule(_doc, 0, Indenter.OTHER));", "+    assertTrue(\"At identifier.\",  ! rule.applyRule(_doc, 10, Indenter.OTHER));", "+    assertTrue(\"At start of array.\", !rule.applyRule(_doc, 25, Indenter.OTHER));", "+    assertTrue(\"START starts one-line comment.\", rule.applyRule(_doc, 54, Indenter.OTHER));", "+    assertTrue(\"START starts one-line comment.\", rule.applyRule(_doc, 60, Indenter.OTHER));", "+    assertTrue(\"START starts javadoc comment.\", rule.applyRule(_doc, 104, Indenter.OTHER));", "+    assertTrue(\"START starts javadoc comment.\", rule.applyRule(_doc, 110, Indenter.OTHER));", "+    assertTrue(\"Line inside javadoc comment.\", rule.applyRule(_doc, 130, Indenter.OTHER));", "+    assertTrue(\"Line closes javadoc comment.\", rule.applyRule(_doc, 150, Indenter.OTHER));", "+    assertTrue(\"START is stil in first.\", rule.applyRule(_doc, 180, Indenter.OTHER));", "+    assertTrue(\"Second pseudo array element.\", ! rule.applyRule(_doc, 230, Indenter.OTHER));", "+    assertTrue(\"Start of multi-line comment.\", !rule.applyRule(_doc, 260, Indenter.OTHER));", "+    assertTrue(\"Line inside multi-line comment.\", !rule.applyRule(_doc, 275, Indenter.OTHER));", "+    assertTrue(\"Line inside multi-line comment.\", !rule.applyRule(_doc, 300, Indenter.OTHER));", "+    assertTrue(\"Line closes multi-line comment.\", !rule.applyRule(_doc, 399, Indenter.OTHER));", "+    assertTrue(\"Last close brace\", !rule.applyRule(_doc, 400, Indenter.OTHER));", "+    assertTrue(\"At end of document.\", !rule.applyRule(_doc, 401, Indenter.OTHER));"]}], "num": 26522}