{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9844e50e99b89f198b9056350bf37698", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "703aac7646d7d48007c27e76c0958c4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "734866577ba652e258c158eef25bcbc68a43749a", "commitAfterChange": "06c097879b27ffb8ca08a54a4961265ba5907f07", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   @Override public TypeContext visit(ForEachStatement node)", "signatureAfterChange": "   @Override public TypeContext visit(ForEachStatement node)", "diff": ["-        setErrorStrings(node, ts.userRepresentation(elementType), ts.userRepresentation(paramT));", "+        TypePrinter printer = ts.typePrinter();", "+        setErrorStrings(node, printer.print(elementType), printer.print(paramT));", "-          setErrorStrings(node, ts.userRepresentation(nextInv.returnType()), ts.userRepresentation(paramT));", "+          TypePrinter printer = ts.typePrinter();", "+          setErrorStrings(node, printer.print(nextInv.returnType()), printer.print(paramT));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dcf67726c8c65c26424ea3370746444", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "734866577ba652e258c158eef25bcbc68a43749a", "commitAfterChange": "06c097879b27ffb8ca08a54a4961265ba5907f07", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   @Override public TypeContext visit(ReturnStatement node)", "signatureAfterChange": "   @Override public TypeContext visit(ReturnStatement node)", "diff": ["-        setErrorStrings(node, ts.userRepresentation(TypeSystem.VOID),", "-                        ts.userRepresentation(expected));", "+        TypePrinter printer = ts.typePrinter();", "+        setErrorStrings(node, printer.print(TypeSystem.VOID), printer.print(expected));", "-        setErrorStrings(node, ts.userRepresentation(getType(node.getExpression())),", "-                        ts.userRepresentation(expected));", "+        TypePrinter printer = ts.typePrinter();", "+        setErrorStrings(node, printer.print(getType(node.getExpression())), printer.print(expected));"]}], "num": 19228}