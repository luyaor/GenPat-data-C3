{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5188db42a5175d1a29cba5f553361ed", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a2f5e90d2b6f6ea6c88630e4cc11f08", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ed1069955672117b4c9aac0875c5704fb5071788", "commitAfterChange": "bd123d07912360358a1a9262bb626bfc554bdb6a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private static JavaVersion.FullVersion fvOnly(JavaVersion.FullVersion tVersion)", "signatureAfterChange": "   private static JavaVersion.FullVersion coarsenVersion(JavaVersion.FullVersion tVersion)", "diff": ["-  ", "-  private static JavaVersion.FullVersion fvOnly(JavaVersion.FullVersion tVersion) {", "+  // the major version and the vendor will be considered", "+  private static JavaVersion.FullVersion coarsenVersion(JavaVersion.FullVersion tVersion) {", "-      tVersion = tVersion.majorVersion().fullVersion();", "+      tVersion = tVersion.onlyMajorVersionAndVendor();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86b2cff0d85513ffe3ab5d10e7533516", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "7a9a1a584dbea988e52c91909a30a2d54f580df1", "commitAfterChange": "38289ebc7d35b217d991b224a08e60caae3469a0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         private Iterable<JDKToolsLibrary> findLibraries()", "signatureAfterChange": "         private Iterable<JDKToolsLibrary> findLibraries()", "diff": ["-    JavaVersion runtimeVersion = fromRuntime.version().majorVersion();", "-    if (fromRuntime.isValid() && !results.containsKey(runtimeVersion)) { results.put(runtimeVersion.fullVersion(), fromRuntime); }", "+    JavaVersion.FullVersion runtimeVersion = fromRuntime.version();", "+    if (fromRuntime.isValid() && !results.containsKey(runtimeVersion)) { results.put(runtimeVersion, fromRuntime); }"]}], "num": 2121}