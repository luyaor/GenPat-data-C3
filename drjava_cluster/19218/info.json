{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e8bf1f20cdc392563208b8f37f872be", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48c614bda5af14c17cb9a958ca2787e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BackSlashTest.java", "commitBeforeChange": "59d5a7ea5784619a931e9fdef9de2a8ec9f89b2b", "commitAfterChange": "aa22056e3e8260253bc014e71a3e1da99c0bc773", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void testInsideQuotePrevious()", "signatureAfterChange": "    public void testInsideQuotePrevious()", "diff": ["-\tpublic void testInsideQuotePrevious()", "-\t\t{", "-\t\t\tmodel1.insertQuote();", "-\t\t\tmodel1.insertBackSlash();", "-\t\t\tmodel1.insertQuote();", "-\t\t\tmodel1.move(-2);", "-\t\t\tassertEquals(\"#0.0\", \"\\\\\\\"\", model1.currentToken().getType());", "-\t\t\tassertEquals(\"#0.1\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.currentToken().getState());\t\t\t", "-\t\t\tmodel1.move(2);", "-\t\t\tmodel1.insertQuote();", "-\t\t\tmodel1.move(-1);", "-\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1.currentToken().getType());", "-\t\t\tassertEquals(\"#1.1\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "-\t\t\tassertTrue(\"#1.2\", model1.currentToken().isClosed());", "-\t\t\tmodel1.move(1);", "-\t\t\tmodel1.insertQuote();\t\t\t", "-\t\t\tmodel1.insertBackSlash();", "-\t\t\tmodel1.insertBackSlash();", "-\t\t\tmodel1.move(-2);", "-\t\t\tassertEquals(\"#2.0\", \"\\\\\\\\\", model1.currentToken().getType());", "-\t\t\tassertEquals(\"#2.1\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.currentToken().getState());\t\t\t", "-\t\t\tmodel1.move(2);", "-\t\t\tmodel1.insertBackSlash();", "-\t\t\tmodel1.move(-1);", "-\t\t\tassertEquals(\"#3.0\", \"\\\\\", model1.currentToken().getType());", "-\t\t\tassertEquals(\"#3.1\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.currentToken().getState());\t\t\t", "-\t\t\tmodel1.move(1);", "-\t\t\tmodel1.insertQuote();", "-\t\t\tmodel1.move(-1);", "-\t\t\tassertEquals(\"#4.0\", \"\\\\\\\"\", model1.currentToken().getType());", "-\t\t\tassertEquals(\"#4.1\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "-\t\t}", "+  public void testInsideQuotePrevious() {", "+    model1.insertQuote();", "+    model1.insertBackSlash();", "+    model1.insertQuote();", "+    model1.move(-2);", "+    assertEquals(\"#0.0\", \"\\\\\\\"\", model1.currentToken().getType());", "+    assertEquals(\"#0.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+    model1.move(2);", "+    model1.insertQuote();", "+    model1.move(-1);", "+    assertEquals(\"#1.0\", \"\\\"\", model1.currentToken().getType());", "+    assertEquals(\"#1.1\", FREE, stateOfCurrentToken(model1));", "+    assertTrue(\"#1.2\", model1.currentToken().isClosed());", "+    model1.move(1);", "+    model1.insertQuote();     ", "+    model1.insertBackSlash();", "+    model1.insertBackSlash();", "+    model1.move(-2);", "+    assertEquals(\"#2.0\", \"\\\\\\\\\", model1.currentToken().getType());", "+    assertEquals(\"#2.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));       ", "+    model1.move(2);", "+    model1.insertBackSlash();", "+    model1.move(-1);", "+    assertEquals(\"#3.0\", \"\\\\\", model1.currentToken().getType());", "+    assertEquals(\"#3.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+    model1.move(1);", "+    model1.insertQuote();", "+    model1.move(-1);", "+    assertEquals(\"#4.0\", \"\\\\\\\"\", model1.currentToken().getType());", "+    assertEquals(\"#4.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1b47183c9b65d1d2ade27351b8ce75c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/BackSlashTest.java", "commitBeforeChange": "59d5a7ea5784619a931e9fdef9de2a8ec9f89b2b", "commitAfterChange": "aa22056e3e8260253bc014e71a3e1da99c0bc773", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void testInsideQuotePrevious()", "signatureAfterChange": "    public void testInsideQuotePrevious()", "diff": ["-\tpublic void testInsideQuotePrevious()", "-\t\t{", "-\t\t\tmodel1.insertQuote();", "-\t\t\tmodel1.insertBackSlash();", "-\t\t\tmodel1.insertQuote();", "-\t\t\tmodel1.move(-2);", "-\t\t\tassertEquals(\"#0.0\", \"\\\\\\\"\", model1.currentToken().getType());", "-\t\t\tassertEquals(\"#0.1\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.currentToken().getState());\t\t\t", "-\t\t\tmodel1.move(2);", "-\t\t\tmodel1.insertQuote();", "-\t\t\tmodel1.move(-1);", "-\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1.currentToken().getType());", "-\t\t\tassertEquals(\"#1.1\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "-\t\t\tassertTrue(\"#1.2\", model1.currentToken().isClosed());", "-\t\t\tmodel1.move(1);", "-\t\t\tmodel1.insertQuote();\t\t\t", "-\t\t\tmodel1.insertBackSlash();", "-\t\t\tmodel1.insertBackSlash();", "-\t\t\tmodel1.move(-2);", "-\t\t\tassertEquals(\"#2.0\", \"\\\\\\\\\", model1.currentToken().getType());", "-\t\t\tassertEquals(\"#2.1\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.currentToken().getState());\t\t\t", "-\t\t\tmodel1.move(2);", "-\t\t\tmodel1.insertBackSlash();", "-\t\t\tmodel1.move(-1);", "-\t\t\tassertEquals(\"#3.0\", \"\\\\\", model1.currentToken().getType());", "-\t\t\tassertEquals(\"#3.1\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.currentToken().getState());\t\t\t", "-\t\t\tmodel1.move(1);", "-\t\t\tmodel1.insertQuote();", "-\t\t\tmodel1.move(-1);", "-\t\t\tassertEquals(\"#4.0\", \"\\\\\\\"\", model1.currentToken().getType());", "-\t\t\tassertEquals(\"#4.1\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "-\t\t}", "+  public void testInsideQuotePrevious() {", "+    model1.insertQuote();", "+    model1.insertBackSlash();", "+    model1.insertQuote();", "+    model1.move(-2);", "+    assertEquals(\"#0.0\", \"\\\\\\\"\", model1.currentToken().getType());", "+    assertEquals(\"#0.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+    model1.move(2);", "+    model1.insertQuote();", "+    model1.move(-1);", "+    assertEquals(\"#1.0\", \"\\\"\", model1.currentToken().getType());", "+    assertEquals(\"#1.1\", FREE, stateOfCurrentToken(model1));", "+    assertTrue(\"#1.2\", model1.currentToken().isClosed());", "+    model1.move(1);", "+    model1.insertQuote();     ", "+    model1.insertBackSlash();", "+    model1.insertBackSlash();", "+    model1.move(-2);", "+    assertEquals(\"#2.0\", \"\\\\\\\\\", model1.currentToken().getType());", "+    assertEquals(\"#2.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));       ", "+    model1.move(2);", "+    model1.insertBackSlash();", "+    model1.move(-1);", "+    assertEquals(\"#3.0\", \"\\\\\", model1.currentToken().getType());", "+    assertEquals(\"#3.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+    model1.move(1);", "+    model1.insertQuote();", "+    model1.move(-1);", "+    assertEquals(\"#4.0\", \"\\\\\\\"\", model1.currentToken().getType());", "+    assertEquals(\"#4.1\", INSIDE_QUOTE, stateOfCurrentToken(model1));", "+  }"]}], "num": 19218}