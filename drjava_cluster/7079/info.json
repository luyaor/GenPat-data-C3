{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa6469e2086e25c5214792044b2a4d80", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00639efba537b7f236b536e26dbd49ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected ReferenceType _getReferenceTypeForField(String field, Context context)", "signatureAfterChange": "   protected ReferenceType _getReferenceTypeForField(String field, Context context)", "diff": ["-      LinkedList<Identifier> list = new LinkedList<Identifier>();", "+      LinkedList list = new LinkedList(); // Add parameterization <Identifier>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06716803789c4a7241d3eca01e997f62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "     public Object visit(ArrayAllocation node)", "signatureAfterChange": "     public Object visit(ArrayAllocation node)", "diff": ["-      LinkedList<Expression> sizes = new LinkedList<Expression>();", "+      LinkedList sizes = new LinkedList(); // Add parameterization <Expression>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15d01258c9fac9fa5fa3823dea02273f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "    private Value _getValueOfLocalVariable(LocalVariable var, ThreadReference thread)     throws InvalidTypeException, ClassNotLoadedException, AbsentInformationException,     IncompatibleThreadStateException, InvocationException, DebugException", "signatureAfterChange": "    private Value _getValueOfLocalVariable(LocalVariable var, ThreadReference thread)     throws InvalidTypeException, ClassNotLoadedException, AbsentInformationException,     IncompatibleThreadStateException, InvocationException, DebugException", "diff": ["-        List<Mirror> args = new LinkedList<Mirror>(); //Added parameterization <Mirror>. ", "+        List args = new LinkedList(); //Add parameterization <Mirror>. "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "186b2b2f2b8a46e76073a6d69582e327", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/src-jsr14v1_0/edu/rice/cs/drjava/model/compiler/JavacGJCompiler.java", "commitBeforeChange": "f3b76b44e2a57d2f1c8a2d30bef33ca77d379a75", "commitAfterChange": "02d55075a7583943307bcca2b254ec492f7f204d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public CompilerError[] compile(File[] sourceRoots, File[] files)", "signatureAfterChange": "   public CompilerError[] compile(File[] sourceRoots, File[] files)", "diff": ["-    List<String> filesToCompile = new List<String>();", "+    List filesToCompile = new List();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d94862374c5d1ed2abf3bfcd5bb9425", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     public Object visit(InnerAllocation node)", "signatureAfterChange": "     public Object visit(InnerAllocation node)", "diff": ["-      LinkedList<Expression> arguments = null;", "+      LinkedList arguments = null; // Add parameterization <Expression>.", "-        arguments = new LinkedList<Expression>();", "+        arguments = new LinkedList(); // Add parameterization <Expression>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2be7d1927a4fbfa992baf612cfd0727d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testConvertToObjectFieldAccess()", "signatureAfterChange": "   public void testConvertToObjectFieldAccess()", "diff": ["-    LinkedList<IdentifierToken> ids = new LinkedList<IdentifierToken>(); // Add parameterization <Identifier>.", "+    LinkedList ids = new LinkedList(); // Add parameterization <Identifier>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37185b1a924c02609d01ded8dff14964", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "b6148d8c1aaf55232aeac694d90234c9353139cd", "commitAfterChange": "536afaee0374767d0f8bdf572a332576e3f54467", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "     public void breakpointSet(final Breakpoint bp)", "signatureAfterChange": "     public void breakpointSet(final Breakpoint bp)", "diff": ["-          Enumeration<TreeNode> documents = _breakpointRootNode.children();", "+          // Raw type here due to Swing's use of raw types.", "+          Enumeration documents = _breakpointRootNode.children();", "-              Enumeration<TreeNode> lineNumbers = doc.children();", "+              // Raw type here due to Swing's use of raw types.", "+              Enumeration lineNumbers = doc.children();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3773f9bd67e8660db6d5dc258e684fe0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public Object visit(SuperMethodCall node)", "signatureAfterChange": "     public Object visit(SuperMethodCall node)", "diff": ["-      LinkedList<Node> arguments = null;", "+      LinkedList arguments = null; // Add parameterization <Node>.", "-        arguments = new LinkedList<Node>();", "+        arguments = new LinkedList(); // Add parameterization <Node>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45786e1e36aeef53e585d9c76d8dcb50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ForEachTypingTest.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testSuperForEach() throws ParseException", "signatureAfterChange": "   public void testSuperForEach() throws ParseException", "diff": ["-    Context<Type> cntxt = new GlobalContext<Type>(new TreeInterpreter(new JavaCCParserFactory()));", "+    Context cntxt = new GlobalContext(new TreeInterpreter(new JavaCCParserFactory()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49009582747c75675e2550e21251be61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public Object visit(SimpleAllocation node)", "signatureAfterChange": "     public Object visit(SimpleAllocation node)", "diff": ["-      LinkedList<Expression> arguments = null;", "+      LinkedList arguments = null; // Add parameterization <Expresion>.", "-        arguments = new LinkedList<Expression>();", "+        arguments = new LinkedList(); // Add parameterization <Expression>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "501fa361b86882af0335dd1214b7ef15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "   private ObjectReference _getDebugInterpreter(String interpreterName,                                                ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,     IncompatibleThreadStateException, InvocationException, DebugException", "signatureAfterChange": "   private ObjectReference _getDebugInterpreter(String interpreterName,                                                ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,     IncompatibleThreadStateException, InvocationException, DebugException", "diff": ["-        LinkedList<StringReference> args = new LinkedList<StringReference>(); //Added parameterization <StringReference>. ", "+        LinkedList args = new LinkedList(); //Add parameterization <StringReference>. "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51912ebe6405040c4320444ad1360389", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testConvertToObjectFieldAccess()", "signatureAfterChange": "   public void testConvertToObjectFieldAccess()", "diff": ["-    LinkedList<Identifier> ids = new LinkedList<Identifier>();", "+    LinkedList ids = new LinkedList(); // Add parameterization <Identifier>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57b8404336620478b8e4e5dea41c2926", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   protected QualifiedName _convertThisToName(ThisExpression node)", "signatureAfterChange": "   protected QualifiedName _convertThisToName(ThisExpression node)", "diff": ["-    List<Identifier> ids = new LinkedList<Identifier>();", "+    List ids = new LinkedList(); // Add parameterization <Identifier>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c52a6deed4433c7e42add79d9593958", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitorTest.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp()", "signatureAfterChange": "   public void setUp()", "diff": ["-    _globalContext = new GlobalContext<Type>(new TreeInterpreter(parserFactory));", "+    _globalContext = new GlobalContext(new TreeInterpreter(parserFactory));", "-    _globalNameContext = new GlobalContext<Type>(new TreeInterpreter(parserFactory));", "+    _globalNameContext = new GlobalContext(new TreeInterpreter(parserFactory));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f30464f81a955cf5faef8c785c49ebe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp()", "signatureAfterChange": "   public void setUp()", "diff": ["-    _globalContext = new GlobalContext<Type>(new TreeInterpreter(parserFactory));", "+    _globalContext = new GlobalContext(new TreeInterpreter(parserFactory));", "-    _globalNameContext = new GlobalContext<Type>(new TreeInterpreter(parserFactory));", "+    _globalNameContext = new GlobalContext(new TreeInterpreter(parserFactory));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6be78e77717867cbf8d9ae99d042f4b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public NameVisitor(Context<Type> ctx, Context<Type> typeCtx)", "signatureAfterChange": "   public NameVisitor(Context ctx, Context typeCtx)", "diff": ["-  public NameVisitor(Context<Type> ctx, Context<Type> typeCtx) {", "+  public NameVisitor(Context ctx, Context typeCtx) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d24dd7dd908e5e865eed5ac5ae1d915", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ForEachNamingTest.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testSuperForEach() throws ParseException", "signatureAfterChange": "   public void testSuperForEach() throws ParseException", "diff": ["-    Context<Type> cntxt = new GlobalContext<Type>(new TreeInterpreter(new JavaCCParserFactory()));", "+    Context cntxt = new GlobalContext(new TreeInterpreter(new JavaCCParserFactory()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86a93f5d1633faf17c8d53fdec3831e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "     public Object visit(ClassDeclaration node)", "signatureAfterChange": "     public Object visit(ClassDeclaration node)", "diff": ["-      LinkedList<Node> members = new LinkedList<Node>();", "+      LinkedList members = new LinkedList(); // Add parameterization <Node>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d4094681e795cd8d9af89b797adaafe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public Object visit(SwitchStatement node)", "signatureAfterChange": "   public Object visit(SwitchStatement node)", "diff": ["-    LinkedList<Node> cases = new LinkedList<Node>();", "+    LinkedList cases = new LinkedList(); // Add parameterization <Node>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e1f15f8df92ff4d1e3c0c03fc5fda0c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected ReferenceType _getReferenceTypeForField(String field, Context context)", "signatureAfterChange": "   protected ReferenceType _getReferenceTypeForField(String field, Context context)", "diff": ["-      LinkedList<IdentifierToken> list = new LinkedList<IdentifierToken>();", "+      LinkedList list = new LinkedList(); // Add parameterization <Identifier>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9003972a58a7179671717dd8457dd1f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public Object visit(FunctionCall node)", "signatureAfterChange": "   public Object visit(FunctionCall node)", "diff": ["-    LinkedList<Node> arguments = null;", "+    LinkedList arguments = null; // Add parameterization <Node>.", "-      arguments = new LinkedList<Node>();", "+      arguments = new LinkedList(); // Add parameterization <Node>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9256267dec4edc0f6c1bd6c273257d42", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public Object visit(StaticMethodCall node)", "signatureAfterChange": "   public Object visit(StaticMethodCall node)", "diff": ["-    LinkedList<Node> arguments = null;", "+    LinkedList arguments = null; // Add parameterization <Node>.", "-      arguments = new LinkedList<Node>();", "+      arguments = new LinkedList(); // Add parameterization <Node>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "935ce674c107839525fe0832fc6a48e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected ThisExpression buildUnqualifiedThis()", "signatureAfterChange": "   protected ThisExpression buildUnqualifiedThis()", "diff": ["-    LinkedList<IdentifierToken> ids = new LinkedList<IdentifierToken>();", "+    LinkedList ids = new LinkedList();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98cf06bd59e3d06e28d5ea2ed7f0a4fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/OptionMapLoader.java", "commitBeforeChange": "5a85b19daac40f9227c1d37126d83286ba866a85", "commitAfterChange": "9ab3c647e4bf2cceb929c5db766abfe1f2993d4e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void loadInto(OptionMap map)", "signatureAfterChange": "     public void loadInto(OptionMap map)", "diff": ["-\tEnumeration<OptionParser<Object>> options = DEFAULTS.keys();", "+\tEnumeration<OptionParser> options = DEFAULTS.keys();", "-\t    OptionParser<Object> option = options.nextElement();", "+\t    OptionParser option = options.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99e114ca11d21289095e71b01f3fe8c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/src-jsr14v1_0/edu/rice/cs/drjava/model/compiler/JavacGJCompiler.java", "commitBeforeChange": "f3b76b44e2a57d2f1c8a2d30bef33ca77d379a75", "commitAfterChange": "02d55075a7583943307bcca2b254ec492f7f204d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "    protected void initCompiler(File[] sourceRoots)", "signatureAfterChange": "    protected void initCompiler(File[] sourceRoots)", "diff": ["-    Hashtable<String, String> options = createOptionsHashtable(sourceRoots);", "+    Hashtable options = createOptionsHashtable(sourceRoots);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f09918b9d4f4079c54c667a77a6079a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "   private void _defineVariable(ThreadReference suspendedThreadRef,                                ObjectReference debugInterpreter,                                String name, Value val, Type type)     throws InvalidTypeException, AbsentInformationException, IncompatibleThreadStateException,     ClassNotLoadedException, InvocationException, DebugException", "signatureAfterChange": "   private void _defineVariable(ThreadReference suspendedThreadRef,                                ObjectReference debugInterpreter,                                String name, Value val, Type type)     throws InvalidTypeException, AbsentInformationException, IncompatibleThreadStateException,     ClassNotLoadedException, InvocationException, DebugException", "diff": ["-        List<Mirror> args = new LinkedList<Mirror>();  // Mirror is the common supertype of StringReference, Value, and ReferenceType", "+        //Add parameterization <Mirror>. ", "+        List args = new LinkedList();  // Mirror is the common supertype of StringReference, Value, and ReferenceType"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a87c7f9322ecdd14401503eab3b8d76f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   protected QualifiedName _convertThisToName(ThisExpression node)", "signatureAfterChange": "   protected QualifiedName _convertThisToName(ThisExpression node)", "diff": ["-    List<IdentifierToken> ids = new LinkedList<IdentifierToken>(); // Add parameterization <Identifier>.", "+    List ids = new LinkedList(); // Add parameterization <Identifier>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8b06ab0b4c285898d65f3c71412efb1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "     public Object visit(BlockStatement node)", "signatureAfterChange": "     public Object visit(BlockStatement node)", "diff": ["-      LinkedList<Node> statements = new LinkedList<Node>();", "+      LinkedList statements = new LinkedList(); // Add parameterization <Node>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4f694943d94577728592e5025184b2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "    private Value _getValueOfLocalVariable(LocalVariable var, ThreadReference thread)     throws InvalidTypeException, ClassNotLoadedException, AbsentInformationException,     IncompatibleThreadStateException, InvocationException, DebugException", "signatureAfterChange": "    private Value _getValueOfLocalVariable(LocalVariable var, ThreadReference thread)     throws InvalidTypeException, ClassNotLoadedException, AbsentInformationException,     IncompatibleThreadStateException, InvocationException, DebugException", "diff": ["-        List<Mirror> args = new LinkedList<Mirror>();", "+        List args = new LinkedList(); //Add parameterization <Mirror>. "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1af81aae464b2312341057689ad593c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public Object visit(ObjectMethodCall node)", "signatureAfterChange": "   public Object visit(ObjectMethodCall node)", "diff": ["-    LinkedList<Node> arguments = null;", "+    LinkedList arguments = null; // Add parameterization <Node>.", "-      arguments = new LinkedList<Node>();", "+      arguments = new LinkedList(); // Add parameterization <Node>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3eb8b365b1ae1b3b5eae0c11dae3868", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "a40073610630d4f516a406059faeaca761da62c1", "commitAfterChange": "cd10122759eccf6c810135d6cad33cd763492317", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public GlobalContext<Type> makeGlobalTypeContext(TreeInterpreter i)", "signatureAfterChange": "    public GlobalContext makeGlobalTypeContext(TreeInterpreter i)", "diff": ["-  public GlobalContext<Type> makeGlobalTypeContext(TreeInterpreter i) {", "-    return new GlobalContext<Type>(i) {", "+  public GlobalContext makeGlobalTypeContext(TreeInterpreter i) {", "+    return new GlobalContext(i) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4472667bc35a619a8c3ca57f3ec482c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testConvertToName()", "signatureAfterChange": "   public void testConvertToName()", "diff": ["-    LinkedList<Identifier> thisList = new LinkedList<Identifier>();", "+    LinkedList thisList = new LinkedList(); // Add parameterization <Identifier>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c49a757dca087ca20c677fd48782ff5c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     public Object visit(ArrayInitializer node)", "signatureAfterChange": "     public Object visit(ArrayInitializer node)", "diff": ["-      LinkedList<Node> cells = new LinkedList<Node>();", "+      LinkedList cells = new LinkedList(); // Add parameterization <Node>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9cd37278e382acdc76d8ec2b8406cf6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public Object visit(ConstructorInvocation node)", "signatureAfterChange": "     public Object visit(ConstructorInvocation node)", "diff": ["-      LinkedList<Node> arguments = null;", "+      LinkedList arguments = null; // Add parameterization <Node>.", "-        arguments = new LinkedList<Node>();", "+        arguments = new LinkedList(); // Add parameterization <Node>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce255d4bd163fcbe87fd44ba5e57e966", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public Object visit(TryStatement node)", "signatureAfterChange": "   public Object visit(TryStatement node)", "diff": ["-    LinkedList<Node> catchStatements = new LinkedList<Node>();", "+    LinkedList catchStatements = new LinkedList(); // Add parameterization <Node>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfe3c2f6a28435aa91938d537884dd73", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Object visit(SwitchBlock node)", "signatureAfterChange": "   public Object visit(SwitchBlock node)", "diff": ["-    LinkedList<Node> statements = null;", "+    LinkedList statements = null; // Add parameterization <Node>.", "-      statements = new LinkedList<Node>();", "+      statements = new LinkedList(); // Add parameterization <Node>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d46490c3f075e4649607a790e6a1dc37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "     public Object visit(InterfaceDeclaration node)", "signatureAfterChange": "     public Object visit(InterfaceDeclaration node)", "diff": ["-      LinkedList<Node> members = new LinkedList<Node>();", "+      LinkedList members = new LinkedList(); // Add parameterization <Node>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbd5835dd2451f9f38b3f3d39c0eca84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "     public Object visit(MethodDeclaration node)", "signatureAfterChange": "     public Object visit(MethodDeclaration node)", "diff": ["-      LinkedList<Node> parameters = new LinkedList<Node>();", "+      LinkedList parameters = new LinkedList(); // Add parameterization <Node>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7cf02af7188c7b201ccf06dcd949375", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testConvertToName()", "signatureAfterChange": "   public void testConvertToName()", "diff": ["-    LinkedList<IdentifierToken> thisList = new LinkedList<IdentifierToken>(); // Add parameterization <Identifier>.", "+    LinkedList thisList = new LinkedList(); // Add parameterization <Identifier>."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f38c02baa091bdd94022ab1b29c910be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "   private ObjectReference _getDebugInterpreter(String interpreterName,                                                ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,     IncompatibleThreadStateException, InvocationException, DebugException", "signatureAfterChange": "   private ObjectReference _getDebugInterpreter(String interpreterName,                                                ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,     IncompatibleThreadStateException, InvocationException, DebugException", "diff": ["-        LinkedList<StringReference> args = new LinkedList<StringReference>();", "+        LinkedList args = new LinkedList(); //Add parameterization <StringReference>. "]}], "num": 7079}