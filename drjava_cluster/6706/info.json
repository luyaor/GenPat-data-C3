{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cde110db6723e192dcdc9db6f9004c2f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "234d7d8a59e5a4cb031c1d38e12d315a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "0af0c72004872701891228fa18659a3204fb6e2f", "commitAfterChange": "b121ed20db87231f3836df8854d99256d5781f05", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "signatureAfterChange": "   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "diff": ["-    // drjava.jar file itself; check if it's a combined Mint/DrJava jar", "-    addIfFile(edu.rice.cs.util.FileOps.getDrJavaFile(), (JDKDescriptor)null, jars);", "+        if (desc!=null) {", "+          boolean containsCompiler = desc.containsCompiler(jar.getKey());", "+          JDKToolsLibrary.msg(\"Checking file \"+jar.getKey()+\" for \"+desc);", "+          JDKToolsLibrary.msg(\"\\t\"+containsCompiler);", "+          if (!containsCompiler) continue;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f91533040bdd21ea3345931f266bd462", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "065b1e3954d46e1086ba2f867744163daf14462d", "commitAfterChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   private static void getFilesInDir(File d, List<File> acc, boolean recur, FileFilter filter)", "signatureAfterChange": "   private static void getFilesInDir(File d, List<File> acc, boolean recur, FileFilter filter)", "diff": ["-      for (File f: d.listFiles(filter)) {", "-        if (f.isDirectory() && recur) getFilesInDir(f, acc, recur, filter);", "-        else if (f.isFile()) acc.add(f);", "+      File[] files = d.listFiles(filter);", "+      if (files!=null) { // listFiles may return null if there's an IO error", "+        for (File f: files) {", "+          if (f.isDirectory() && recur) getFilesInDir(f, acc, recur, filter);", "+          else if (f.isFile()) acc.add(f);", "+        }"]}], "num": 6706}