{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6590aab9c87e48a4af013c19de358aab", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c4f85fe6b388104ee15145a3ca4f9de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/JVMProcessCreator.java", "commitBeforeChange": "21836dcccd81c2207652ee85b319b723ac9ff10b", "commitAfterChange": "18f7005907576031115bfb0859e7ff6d53506e5e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public List<String> command()", "signatureAfterChange": "   public String cmdline()", "diff": ["-  public List<String> command() {", "-    LinkedList<String> args = new LinkedList<String>();", "-    args.add(ExecJVM.getExecutable());", "-    args.addAll(_jvmArgs);", "-    args.addAll(_command);", "-    return args;", "+  public String cmdline() {", "+    return ExecJVM.getExecutable() + \" \" + _jvmArgs + _cmdline;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27407c8c68472e6970d8c7ef32589cf9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ComplementSet.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Iterator<E> iterator()", "signatureAfterChange": "      public boolean hasFixedSize()", "diff": ["-  /** Traversing is linear in the size of {@code domain}. */", "-  public Iterator<E> iterator() {", "-    Predicate<Object> filter = LambdaUtil.negate(CollectUtil.containsPredicate(_excluded));", "-    return new FilteredIterator<E>(_domain.iterator(), filter);", "+  public boolean hasFixedSize() {", "+    return IterUtil.hasFixedSize(_set) && _excluded.hasFixedSize();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "633aa19e5a9cd0bbeb9dd6a691e419a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "667a3b3eeb7df33831045c52d97320979614b89d", "commitAfterChange": "1b2c230a180a408e07fefa4999fd97bfd19485a5", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": "   public void configNewProject() throws IOException", "signatureAfterChange": "   public void configNewProject() throws IOException", "diff": ["-    // FileLists for project file", "-    ArrayList<DocFile> srcFileList = new ArrayList<DocFile>();", "-    LinkedList<DocFile> auxFileList = new LinkedList<DocFile>();", "-    ArrayList<File> extFileList = new ArrayList<File>();", "-    ", "+    // FileLists for project file    ", "-      if (doc.isUntitled()) extFileList.add(f);", "-      else if (IOUtil.isMember(f, projectRoot)) {", "-        DocFile file = new DocFile(f);", "-        file.setPackage(doc.getPackageName());  // must save _packageName so it is correct when project is loaded", "-        builder.addSourceFile(file);", "-        srcFileList.add(file);", "+      if (!doc.isUntitled()) {", "+        if (IOUtil.isMember(f, projectRoot)) {", "+          DocFile file = new DocFile(f);", "+          file.setPackage(doc.getPackageName());  // must save _packageName so it is correct when project is loaded", "+          builder.addSourceFile(file);", "+        }", "+        else if ( doc.isAuxiliaryFile()) {", "+          DocFile file = new DocFile(f);", "+          file.setPackage(doc.getPackageName());  // must save _packageName so it is correct when project is loaded", "+          builder.addAuxiliaryFile(new DocFile(f));", "+        }", "-      else if ( doc.isAuxiliaryFile()) {", "-        DocFile file = new DocFile(f);", "-        file.setPackage(doc.getPackageName());  // must save _packageName so it is correct when project is loaded", "-        builder.addAuxiliaryFile(new DocFile(f));", "-        auxFileList.add(file);", "-      }", "-      else /* doc is external file */ extFileList.add(f);", "-    ", "-//    DocFile[] srcFiles = srcFileList.toArray(new DocFile[srcFileList.size()]);", "-//    DocFile[] extFiles = extFileList.toArray(new DocFile[extFileList.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f65fb888f7a28dba75d434e59de8f84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ab929f2517998893e7ac2a2baadc6213c733962b", "commitAfterChange": "0fe56dbec731a045fe28e9c5bc1a9260c7157f46", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 155, "signatureBeforeChange": "      private File[] getFilesInDir(File d, boolean recur)", "signatureAfterChange": "           public File[] getFiles()", "diff": ["-  ", "-  private File[] getFilesInDir(File d, boolean recur){", "-    ArrayList<File> l = new ArrayList<File>();", "-    getFilesInDir(d, l, recur);", "-    return l.toArray(new File[0]);    ", "-  }", "+            return sfiles;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c51fbcaf3a8d60171bceab991ded7e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ImmutableRelation.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public Iterator<Pair<T1, T2>> iterator()", "signatureAfterChange": "      public boolean add(Pair<T1, T2> o)", "diff": ["-  public Iterator<Pair<T1, T2>> iterator() { return new ImmutableIterator<Pair<T1, T2>>(_relation.iterator()); }", "+  public boolean add(Pair<T1, T2> o) { throw new UnsupportedOperationException(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aab2a12f10b370d478533642ad7e0e47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/XMLProjectFileParser.java", "commitBeforeChange": "2c8ce62ae485e784b2bec820cb7bf72ad52ae36f", "commitAfterChange": "b59ea5c5062a947f96790df7fe854009e693434a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    protected List<File> readFiles(String path)", "signatureAfterChange": "\r \r   protected List<AbsRelFile> readFiles(String path)", "diff": ["-", "-  protected List<File> readFiles(String path) {", "-    List<File> fList = new ArrayList<File>();", "-    List<Node> defs = _xc.getNodes(path+\"/file\");", "-    for(Node n: defs) {", "-      // now all path names are relative to node n...", "-      String name = _xc.get(\".name\",n);", "-      fList.add(new File(name).getAbsoluteFile());", "-    }", "-    return fList;", "-  }", "+\r", "+  protected List<AbsRelFile> readFiles(String path) {\r", "+    return readFiles(path, \"\");\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acc9f440ff13d225ebcbfcd45364b0ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/IntersectionSet.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Iterator<E> iterator()", "signatureAfterChange": "      public boolean hasFixedSize()", "diff": ["-  /** Traversing is linear in the size of {@code set2}. */", "-  public Iterator<E> iterator() {", "-    Predicate<Object> filter = CollectUtil.containsPredicate(_set1);", "-    return new FilteredIterator<E>(_set2.iterator(), filter);", "+  public boolean hasFixedSize() {", "+    return ((PredicateSet<?>) _pred).hasFixedSize() && IterUtil.hasFixedSize(_set);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1444846710e9749cd46391a894233ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "667a3b3eeb7df33831045c52d97320979614b89d", "commitAfterChange": "1b2c230a180a408e07fefa4999fd97bfd19485a5", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": "   public ProjectProfile _makeProjectProfile(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "signatureAfterChange": "   public ProjectProfile _makeProjectProfile(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "diff": ["-    ArrayList<File> srcFileList = new ArrayList<File>();", "-    LinkedList<File> auxFileList = new LinkedList<File>();", "-    ", "-        srcFileList.add(g.getFile());", "-        auxFileList.add(g.getFile());"]}], "num": 7736}