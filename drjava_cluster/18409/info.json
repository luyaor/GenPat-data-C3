{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81eb30b248c02863f0e7a29b0ce14432", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95e3290abeb9ca8fd3690c495ff0be8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 218, "methodNumberAfterChange": 218, "signatureBeforeChange": "   public File[] getSourceRootSet()", "signatureAfterChange": "   public Iterable<File> getSourceRootSet()", "diff": ["-   */", "-  public File[] getSourceRootSet() {", "-    HashSet<File> roots = new HashSet<File>();", "+  /** Gets an array of all sourceRoots for the open definitions documents, without duplicates. */", "+  public Iterable<File> getSourceRootSet() {", "+    Set<File> roots = new LinkedHashSet<File>();", "-          File root = doc.getSourceRoot ();", "-          if (root != null) roots.add(root); // Can't create duplicate entries in a HashSet", "+          File root = doc.getSourceRoot();", "+          if (root != null) roots.add(root); // Can't create duplicate entries in a Set", "-    return roots.toArray(new File[roots.size()]);", "+    return roots;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd73059d41b63cee7b6cea50c02f53b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 106, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "diff": ["-        OpenDefinitionsDocument d = DefaultGlobalModel.this.getODDGivenIDoc(n);", "+        OpenDefinitionsDocument d = (OpenDefinitionsDocument) n;", "-        OpenDefinitionsDocument d = DefaultGlobalModel.this.getODDGivenIDoc(n);", "+        OpenDefinitionsDocument d =  (OpenDefinitionsDocument) n;", "-      public boolean accept(INavigatorItem n){", "-        OpenDefinitionsDocument d = DefaultGlobalModel.this.getODDGivenIDoc(n);", "+      public boolean accept(INavigatorItem d){", "-        INavigatorItem idoc = getIDocGivenODD(d);", "+        INavigatorItem idoc = d;", "-      catch(IOException e) { /* do nothing */ }", "+      catch(IOException e) { ", "+      /* do nothing; findbugs signals a bug unless this catch clause spans more than two lines */ ", "+      }"]}], "num": 18409}