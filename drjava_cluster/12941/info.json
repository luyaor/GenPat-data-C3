{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "914e03058727bae05c32008071d958d7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28ec35948279d3960c3b06012979d3eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void testMoveOverSeveralTokens()", "signatureAfterChange": "  \tpublic void testBreakCloseBlockCommentWithStar()", "diff": ["+", "+\tpublic void testBreakCloseBlockCommentWithStar()", "+\t\t{", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertStar();", "+\t\t\tmodel1.insertStar();", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertGap(2);", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertGap(2);", "+", "+\t\t\tmodel1.move(-7);", "+\t\t\t // /**___#//__/__", "+\t\t\tmodel1.move(-3);", "+\t\t\tassertEquals(\"#5.0\", true, model1.currentToken().isGap());", "+\t\t\tassertEquals(\"#5.4\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(3);", "+\t\t\tassertEquals(\"#5.2\", \"/\", model1.currentToken().getType());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(1);", "+\t\t\tassertEquals(\"#5.3\", \"/\", model1.currentToken().getType());", "+", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "-", "-\tpublic void testMoveOverSeveralTokens()", "-\t\t{", "-\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.insertStar();", "-\t\t\tmodel1.insertGap(4);", "-\t\t\tmodel1.insertOpenSquiggly();", "-\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.insertQuote();", "-\t\t\tmodel1.insertGap(3);", "-\t\t\tmodel1.insertNewline();", "-\t\t\t// /*____{\"___#\\n\t\t\t", "-\t\t\tassertTrue(\"#0.0\", model1.getCursor().atEnd());", "-\t\t\tassertEquals(\"#0.1\", 0, model1.getBlockOffset());", "-", "-\t\t\tmodel1.move(-12);", "-\t\t\t// /#*____{\"___\\n", "-\t\t\tassertEquals(\"#1.0\", \"/*\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#1.1\", 1, model1.getBlockOffset());", "-", "-\t\t\tmodel1.move(11);", "-\t\t\t// /*____{\"___#\\n\t\t\t", "-\t\t\tassertEquals(\"#2.0\", \"\\n\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#2.1\", 0, model1.getBlockOffset());", "-", "-\t\t\tmodel1.move(-1);", "-\t\t\t// /*____{\"__#_\\n", "-\t\t\tassertTrue(\"#3.0\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#3.1\", 2, model1.getBlockOffset());", "-", "-\t\t\tmodel1.move(-6);", "-\t\t\t// /*___#_{\"___\\n\t\t\t", "-\t\t\tassertTrue(\"#4.0\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#4.1\", 3, model1.getBlockOffset());", "-", "-\t\t\ttry {", "-\t\t\t\tmodel1.move(-8);", "-\t\t\t\tassertTrue(\"#5.0\", false);", "-\t\t\t}", "-\t\t\tcatch (Exception e) {", "-\t\t\t}", "-\t\t\tassertTrue(\"#5.1\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#5.2\", 3, model1.getBlockOffset());", "-", "-\t\t\ttry {", "-\t\t\t\tmodel1.move(20);", "-\t\t\t\tassertTrue(\"#6.0\", false);", "-\t\t\t}", "-\t\t\tcatch (Exception e) {", "-\t\t\t}", "-\t\t\tassertTrue(\"#6.1\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#6.2\", 3, model1.getBlockOffset());", "-", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e245698410e5843f80f3d420fead79c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void testMoveOverSeveralTokens()", "signatureAfterChange": "  \tpublic void testBreakCloseBlockCommentWithStar()", "diff": ["+", "+\tpublic void testBreakCloseBlockCommentWithStar()", "+\t\t{", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertStar();", "+\t\t\tmodel1.insertStar();", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertGap(2);", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertGap(2);", "+", "+\t\t\tmodel1.move(-7);", "+\t\t\t // /**___#//__/__", "+\t\t\tmodel1.move(-3);", "+\t\t\tassertEquals(\"#5.0\", true, model1.currentToken().isGap());", "+\t\t\tassertEquals(\"#5.4\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(3);", "+\t\t\tassertEquals(\"#5.2\", \"/\", model1.currentToken().getType());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(1);", "+\t\t\tassertEquals(\"#5.3\", \"/\", model1.currentToken().getType());", "+", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "-", "-\tpublic void testMoveOverSeveralTokens()", "-\t\t{", "-\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.insertStar();", "-\t\t\tmodel1.insertGap(4);", "-\t\t\tmodel1.insertOpenSquiggly();", "-\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.insertQuote();", "-\t\t\tmodel1.insertGap(3);", "-\t\t\tmodel1.insertNewline();", "-\t\t\t// /*____{\"___#\\n\t\t\t", "-\t\t\tassertTrue(\"#0.0\", model1.getCursor().atEnd());", "-\t\t\tassertEquals(\"#0.1\", 0, model1.getBlockOffset());", "-", "-\t\t\tmodel1.move(-12);", "-\t\t\t// /#*____{\"___\\n", "-\t\t\tassertEquals(\"#1.0\", \"/*\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#1.1\", 1, model1.getBlockOffset());", "-", "-\t\t\tmodel1.move(11);", "-\t\t\t// /*____{\"___#\\n\t\t\t", "-\t\t\tassertEquals(\"#2.0\", \"\\n\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#2.1\", 0, model1.getBlockOffset());", "-", "-\t\t\tmodel1.move(-1);", "-\t\t\t// /*____{\"__#_\\n", "-\t\t\tassertTrue(\"#3.0\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#3.1\", 2, model1.getBlockOffset());", "-", "-\t\t\tmodel1.move(-6);", "-\t\t\t// /*___#_{\"___\\n\t\t\t", "-\t\t\tassertTrue(\"#4.0\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#4.1\", 3, model1.getBlockOffset());", "-", "-\t\t\ttry {", "-\t\t\t\tmodel1.move(-8);", "-\t\t\t\tassertTrue(\"#5.0\", false);", "-\t\t\t}", "-\t\t\tcatch (Exception e) {", "-\t\t\t}", "-\t\t\tassertTrue(\"#5.1\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#5.2\", 3, model1.getBlockOffset());", "-", "-\t\t\ttry {", "-\t\t\t\tmodel1.move(20);", "-\t\t\t\tassertTrue(\"#6.0\", false);", "-\t\t\t}", "-\t\t\tcatch (Exception e) {", "-\t\t\t}", "-\t\t\tassertTrue(\"#6.1\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#6.2\", 3, model1.getBlockOffset());", "-", "-\t\t}"]}], "num": 12941}