{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9a70b2490966c94eef48df3e59129ad", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00b5d7728d29a8bddf09abfd1f3f50a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/RMIInteractionsModel.java", "commitBeforeChange": "01c62517d281ffc6534fc475329bd814c0e2c112", "commitAfterChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void setPrivateAccessible(boolean allow)", "signatureAfterChange": "   public void setEnforcePrivateAccess(boolean enforce)", "diff": ["-  /** Sets whether or not the interpreter should allow access to private members. */", "-  public void setPrivateAccessible(boolean allow) { _jvm.setPrivateAccessible(allow); }", "+  /** Sets whether or not the interpreter should enforce access to private members. */", "+  public void setEnforcePrivateAccess(boolean enforce) { _jvm.setEnforcePrivateAccess(enforce); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34b2c6de7c23843db4e20f712b3cff4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVMRemoteI.java", "commitBeforeChange": "01c62517d281ffc6534fc475329bd814c0e2c112", "commitAfterChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setPrivateAccessible(boolean allow) throws RemoteException;", "signatureAfterChange": "   public void setEnforcePrivateAccess(boolean enforce) throws RemoteException;", "diff": ["-  /** Sets whether to allow private access. */", "-  public void setPrivateAccessible(boolean allow) throws RemoteException;", "+  /** Check that access of private class members is permitted (irrelevant if setEnforceAllAccess() is set to true). */", "+  public void setEnforcePrivateAccess(boolean enforce) throws RemoteException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe92af1b01abdc22253773c1361d74f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "01c62517d281ffc6534fc475329bd814c0e2c112", "commitAfterChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public synchronized void setPrivateAccessible(boolean allow)", "signatureAfterChange": "   public synchronized void setEnforcePrivateAccess(boolean enforce)", "diff": ["-  /** Sets the interpreter to allow access to private members. */", "-  public synchronized void setPrivateAccessible(boolean allow) {", "-    // TODO: implement with Options values", "+  /** Check that access of private class members is permitted (irrelevant if setEnforceAllAccess() is set to true). */", "+  public synchronized void setEnforcePrivateAccess(boolean enforce) {", "+    _interpreterOptions.setEnforcePrivateAccess(enforce);", "+  }"]}], "num": 26387}