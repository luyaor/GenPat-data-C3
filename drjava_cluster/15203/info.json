{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "006c16d1b1b12a0fba6f7bc0f547c28b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d1e4e753d9b4596101f01855335f15b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Bob.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "               public void testForArrayInitializerHelper()", "signatureAfterChange": "               public void testForArrayInitializerHelper()", "diff": ["-      LanguageLevelConverter.symbolTable = llv.symbolTable = _b.symbolTable;", "+//      LanguageLevelConverter.symbolTable = llv.symbolTable = _b.symbolTable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b211faca847740808047befcb8763dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaErrorWindow.java", "commitBeforeChange": "7933cc364884763a44a085994870596faa04b316", "commitAfterChange": "b978cac1d85997e83464382e4a499c19d736223c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private void updateErrorInfo()", "signatureAfterChange": "   private void updateErrorInfo()", "diff": ["-      StringBuilder b = new StringBuilder();", "+      final StringBuilder b = new StringBuilder();", "-        for(StackTraceElement ste: _error.getStackTrace()) {", "+        for (StackTraceElement ste: _error.getStackTrace()) {", "-      b = new StringBuilder();", "-      b.append(HEADER_HTML);", "-      b.append(_errorCount);", "-      b.append(\" error\");", "-      b.append(((_errorCount>1)?\"s\":\"\"));", "-      b.append(\" occured!<br>\");", "-      b.append(ERRORS_FOOTER_HTML);", "-      _errorInfo = new JEditorPane(\"text/html\", b.toString());", "+      final StringBuilder b2 = new StringBuilder();", "+      b2.append(HEADER_HTML);", "+      b2.append(_errorCount);", "+      b2.append(\" error\");", "+      b2.append(((_errorCount>1)?\"s\":\"\"));", "+      b2.append(\" occured!<br>\");", "+      b2.append(ERRORS_FOOTER_HTML);", "+      _errorInfo = new JEditorPane(\"text/html\", b2.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50fe7b3c25b1527625ba67bcfab31c36", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "1ca22d8d9e892abbe72cd6aa5627cc7ce0e56b03", "commitAfterChange": "024873f55ad7ba6280213fee7183c6688ba3b395", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testSwitchActiveInterpreter() throws InterruptedException", "signatureAfterChange": "   public void testSwitchActiveInterpreter() throws InterruptedException", "diff": ["-    synchronized(_jvm) {", "+    synchronized(_testLock) {", "-      _jvm.wait();", "+      _testLock.wait();", "-    synchronized(_jvm) {", "+    synchronized(_testLock) {", "-      _jvm.wait();", "+      _testLock.wait();", "-    synchronized(_jvm) {", "+    synchronized(_testLock) {", "-      _jvm.wait();", "+      _testLock.wait();", "-    synchronized(_jvm) {", "+    synchronized(_testLock) {", "-      _jvm.wait();", "+      _testLock.wait();", "-    synchronized(_jvm) {", "+    synchronized(_testLock) {", "-      _jvm.wait();", "+      _testLock.wait();", "-//     synchronized(_jvm) {", "+//     synchronized(_testLock) {", "-//       _jvm.wait();", "+//       _testLock.wait();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f99ad2e25473e64c6cb5d84d36d0805", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/GenericReferenceType.java", "commitBeforeChange": "6595282fd67e77d6079df1ee1647ba51751bbcec", "commitAfterChange": "de0f38d123822794b2970bd8e5814e75677feb46", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public String toStringHelper()", "signatureAfterChange": "      public String toStringHelper()", "diff": ["-    List<? extends Type> ta = getTypeArguments();", "-    if(ta.size()>0)", "-      typeArgS = \"\"+ta.get(0);", "-    for(int i = 1; i < ta.size(); i++)", "-      typeArgS = typeArgS + \" \" + ta.get(i);", "-    ", "-    return typeArgS+\" \"+super.toStringHelper();", "+    List<List<? extends Type>> alltas = getTypeArguments();", "+    for( List<? extends Type> ta : alltas ){", "+      if(ta.size()>0)", "+        typeArgS = \"\"+ta.get(0);", "+      for(int i = 1; i < ta.size(); i++)", "+        typeArgS += \" \" + ta.get(i);", "+      typeArgS += \":\";", "+    }    ", "+    return super.toStringHelper()+\" \"+typeArgS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd6957335bd278980c1d78b88bfafb34", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/io/IOUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 136, "signatureBeforeChange": "   public static FileFilter extensionFileFilter(String extension, FileFilter also)", "signatureAfterChange": "     public boolean accept(File f)", "diff": ["-  public static FileFilter extensionFileFilter(String extension, FileFilter also) {", "-    return asFileFilter(extensionFilePredicate(extension, asPredicate(also)));", "+    public SamePathFilePredicate(File f) { _f = canonicalCase(f); }", "+    public boolean accept(File f) {", "+      File candidate = canonicalCase(attemptAbsoluteFile(f));", "+      for (File compareTo = _f; compareTo != null; compareTo = compareTo.getParentFile()) {", "+        if (candidate == null || !compareTo.getName().equals(candidate.getName())) {", "+          return false;", "+        }", "+        candidate = candidate.getParentFile();", "+      }", "+      return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccabe779f1d8bf72109adf3b9cb322ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 278, "methodNumberAfterChange": 308, "signatureBeforeChange": "   private boolean isMoreSpecific(SignatureChecker sig1, SignatureChecker sig2)", "signatureAfterChange": "     public boolean moreSpecificThan(FunctionInvocationCandidate<I> c)", "diff": ["+     */", "+    public boolean moreSpecificThan(FunctionInvocationCandidate<I> c) {", "+      SignatureMatcher m = makeMatcher(c.typeParameters(), EMPTY_TYPE_ITERABLE, c.parameterTypes(), ", "+                                       IterUtil.mapSnapshot(parameterTypes(), EMPTY_EXPRESSION_FOR_TYPE),", "+                                       BOTTOM, NONE_TYPE_OPTION);", "+      return m.matches();", "+    }", "-   */", "-  private boolean isMoreSpecific(SignatureChecker sig1, SignatureChecker sig2) {", "-    SignatureChecker c = makeChecker(sig2.typeParameters(), EMPTY_TYPE_ITERABLE, sig2.parameters(), ", "-                                     IterUtil.mapSnapshot(sig1.parameters(), EMPTY_EXPRESSION_FOR_TYPE),", "-                                     BOTTOM, NONE_TYPE_OPTION);", "-    return c.matches();", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da0f052c8535375f004f42dd7566cbfb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListSortNavigator.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private int insertDoc(INavigatorItem doc)", "signatureAfterChange": "   private int insertDoc(INavigatorItem doc)", "diff": ["-    int i = 0;", "+    int i;", "-      while (i<_model.size() && ((INavigatorItem)(_model.get(i))).getName().toUpperCase().compareTo(doc.getName().toUpperCase()) < 0) {", "-        i++;", "+      for (i = 0; i<_model.size(); i++) { ", "+        INavigatorItem item = (INavigatorItem) _model.get(i);", "+        if (doc.getName().toUpperCase().compareTo(item.getName().toUpperCase()) <= 0) break;"]}], "num": 15203}