{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7dd3b0e6dd1f9434d58083b64a3eff8e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e79c1db4804c8cf3d0542ec18c70a57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 265, "signatureBeforeChange": "   public static <T1, T2, T3, T4>      Predicate4<T1, T2, T3, T4> or4(Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p1,                                    Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p2)", "signatureAfterChange": "   public static <T1, T2, T3, T4> Predicate4<T1, T2, T3, T4>      or4(Iterable<? extends Predicate4<? super T1, ? super T2, ? super T3, ? super T4>> preds)", "diff": ["-  /** @return  The disjunction ({@code ||}) of {@code p1} and {@code p2} */", "-  public static <T1, T2, T3, T4> ", "-    Predicate4<T1, T2, T3, T4> or4(Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p1,", "-    return and4(IterUtil.makeIterable(p1, p2));", "+   */", "+  public static <T1, T2, T3, T4> Predicate4<T1, T2, T3, T4> ", "+    or4(Iterable<? extends Predicate4<? super T1, ? super T2, ? super T3, ? super T4>> preds) {", "+    return new OrPredicate4<T1, T2, T3, T4>(preds);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a85026e93f81e46dd3159ec344e2ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 260, "signatureBeforeChange": "   public static <T1, T2, T3>      Predicate3<T1, T2, T3> or3(Predicate3<? super T1, ? super T2, ? super T3> p1,                                 Predicate3<? super T1, ? super T2, ? super T3> p2)", "signatureAfterChange": "   public static <T1, T2, T3>      Predicate3<T1, T2, T3> or3(Iterable<? extends Predicate3<? super T1, ? super T2, ? super T3>> preds)", "diff": ["-  /** @return  The disjunction ({@code ||}) of {@code p1} and {@code p2} */", "-  public static <T1, T2, T3> ", "-    Predicate3<T1, T2, T3> or3(Predicate3<? super T1, ? super T2, ? super T3> p1, ", "-    return and3(IterUtil.makeIterable(p1, p2));", "+   */", "+  public static <T1, T2, T3> ", "+    Predicate3<T1, T2, T3> or3(Iterable<? extends Predicate3<? super T1, ? super T2, ? super T3>> preds) {", "+    return new OrPredicate3<T1, T2, T3>(preds);", "+  }"]}], "num": 27213}