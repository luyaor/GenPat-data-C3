{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8c1eb8e67f427ec533b846c34cfd3d3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "accc94506405eb40a55e90607ca541d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public Type visit(QualifiedName node)", "signatureAfterChange": "   public Class<?> visit(QualifiedName node)", "diff": ["-  public Type visit(QualifiedName node) {", "+  public Class<?> visit(QualifiedName node) {", "-    Type c = context.get(var);    //cast to Class<?>???", "+    Class<?> c = (Class<?>) context.get(var);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba62d4bd135034e5b85f132eb3ead039", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public Class<?> visit(FunctionCall node)", "signatureAfterChange": "   public Type visit(FunctionCall node)", "diff": ["-  public Class<?> visit(FunctionCall node) {", "+  public Type visit(FunctionCall node) {", "-    Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;", "+    Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;       //LOOK HERE!!", "-        cargs[i++] = it.next().acceptVisitor(this);", "+        cargs[i++] = (Class<?>)it.next().acceptVisitor(this);", "+    ", "-    try {", "-      f = context.lookupFunction(node.getMethodName(), cargs);", "-    } catch (NoSuchFunctionException e) {", "+    try { f = context.lookupFunction(node.getMethodName(), cargs); } ", "+    catch (NoSuchFunctionException e) {", "-", "+    ", "-    Class<?> c;", "+    Type c;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d26c9e58caf0e8a5654bea328b39ddfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public Class<?> visit(SuperMethodCall node)", "signatureAfterChange": "   public Type visit(SuperMethodCall node)", "diff": ["-  public Class<?> visit(SuperMethodCall node) {", "+  public Type visit(SuperMethodCall node) {", "-        pt[i++] = it.next().acceptVisitor(this);", "+        pt[i++] = (Class<?>)it.next().acceptVisitor(this);", "+    ", "-    try {", "-      m = context.lookupSuperMethod(node, node.getMethodName(), pt);", "-    } catch (Exception e) {", "-      throw new CatchedExceptionError(e, node);", "-    }", "-", "+    try { m = context.lookupSuperMethod(node, node.getMethodName(), pt); } ", "+    catch (Exception e) { throw new CatchedExceptionError(e, node); }", "+    ", "-    Class<?> c;", "+    Type c;"]}], "num": 20495}