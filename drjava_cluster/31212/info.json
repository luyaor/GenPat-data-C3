{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "018dc19fb6fa1bd5b206920fb61e21fe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "985440c69dc09a16ac70dca4eac65ab4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 63, "signatureBeforeChange": "   public int getLineFirstCharPos(final int pos) throws BadLocationException", "signatureAfterChange": "   public int _getLineFirstCharPos(final int pos) throws BadLocationException", "diff": ["-  public int getLineFirstCharPos(final int pos) throws BadLocationException {", "+  public int _getLineFirstCharPos(final int pos) throws BadLocationException {", "+    ", "+    assert isReadLocked();", "+    ", "-    acquireReadLock();", "-    try {", "-      final int startLinePos = getLineStartPos(pos);", "-      final int endLinePos = getLineEndPos(pos);", "-      int nonWSPos = endLinePos;", "-      ", "-      // Get all text on this line", "-      String text = getText(startLinePos, endLinePos - startLinePos);", "-      int walker = 0;", "-      while (walker < text.length()) {", "-        if (text.charAt(walker) == ' ' || text.charAt(walker) == '\\t') walker++;", "-        else {", "-          nonWSPos = startLinePos + walker;", "-          break;", "-        }", "+//    acquireReadLock();", "+//    try {", "+    final int startLinePos = _getLineStartPos(pos);", "+    final int endLinePos = _getLineEndPos(pos);", "+    int nonWSPos = endLinePos;", "+    ", "+    // Get all text on this line", "+    String text = getText(startLinePos, endLinePos - startLinePos);", "+    int walker = 0;", "+    while (walker < text.length()) {", "+      if (text.charAt(walker) == ' ' || text.charAt(walker) == '\\t') walker++;", "+      else {", "+        nonWSPos = startLinePos + walker;", "+        break;", "-      _storeInCache(key, nonWSPos, Math.max(pos - 1, nonWSPos));", "-      return nonWSPos;  // may equal lineEndPos", "-    finally { releaseReadLock(); }", "+    _storeInCache(key, nonWSPos, Math.max(pos - 1, nonWSPos));", "+    return nonWSPos;  // may equal lineEndPos", "+//    }", "+//    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e9cccbc3736d8290036250203d700d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "f6810ad68cbb0aaa0d9f5ff0052437da87098ab7", "commitAfterChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public int getLineFirstCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   public int getLineFirstCharPos(int pos) throws BadLocationException", "diff": ["-    int startLinePos = getLineStartPos(pos);", "-    int endLinePos = getLineEndPos(pos);", "-    ", "-    // Get all text on this line", "-    String text = this.getText(startLinePos, endLinePos - startLinePos);", "-    int walker = 0;", "-    while (walker < text.length()) {", "-      if (text.charAt(walker) == ' ' ||", "-          text.charAt(walker) == '\\t') {", "-        walker++;", "+    acquireReadLock();", "+    try {", "+      int startLinePos = getLineStartPos(pos);", "+      int endLinePos = getLineEndPos(pos);", "+      ", "+      // Get all text on this line", "+      String text = this.getText(startLinePos, endLinePos - startLinePos);", "+      int walker = 0;", "+      while (walker < text.length()) {", "+        if (text.charAt(walker) == ' ' || text.charAt(walker) == '\\t') walker++;", "+        else {", "+          _storeInCache(key, startLinePos + walker);", "+          return startLinePos + walker;", "+        }", "-      else {", "-        _storeInCache(key, new Integer(startLinePos + walker));", "-        return startLinePos + walker;", "-      }", "+      // No non-WS char found, so return last position on line", "+      _storeInCache(key, endLinePos);", "+      return endLinePos;", "-    // No non-WS char found, so return last position on line", "-    _storeInCache(key, new Integer(endLinePos));", "-    return endLinePos;", "+    finally { releaseReadLock(); }"]}], "num": 31212}