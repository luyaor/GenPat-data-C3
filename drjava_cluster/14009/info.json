{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68d897b0a86d39d28510a2cf81457fdd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a6bf498f672c942e94c08301d61a3ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   protected MethodData createMethodData(final MethodDef that, final SymbolData sd)", "signatureAfterChange": "   protected MethodData createMethodData(final MethodDef that, final SymbolData sd)", "diff": ["-    System.err.println(\"createMethodData(\" + that.getName().getText() + \", \" + sd + \") called.\");", "-    System.err.println(\"_enclosingClassName = \" + _enclosingClassName);", "+//    System.err.println(\"createMethodData(\" + that.getName().getText() + \", \" + sd + \") called.\");", "+//    System.err.println(\"_enclosingClassName = \" + _enclosingClassName);", "-    System.err.println(\"Creating MethodData for \" + name + \" in type \" + sd);", "+//    System.err.println(\"Creating MethodData for \" + name + \" in type \" + sd);", "-      System.err.println(\"Creating return type fixup for \" + rtString + \" in method \" + name + \" in class \" + sd);", "+//      System.err.println(\"Creating return type fixup for \" + rtString + \" in method \" + name + \" in class \" + sd);", "-    System.err.println(\"Called createMethodData(\" + name + \", \" + sd.getName() + \")\");", "+//    System.err.println(\"Called createMethodData(\" + name + \", \" + sd.getName() + \")\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "485202eeaff88b3c2aa272519d745be6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "451a8ef10dd808c32bb1dec2a41dbfe38542794f", "commitAfterChange": "fd372db787cedeccdc43d382b7e2999ff5184943", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "    public void testCaretStaysAtEndDuringInteraction() throws EditDocumentException", "signatureAfterChange": "    public void testCaretStaysAtEndDuringInteraction() throws EditDocumentException", "diff": ["-    System.err.println(\"start caret pos = \" + _pane.getCaretPosition());", "-    System.err.println(\"start prompt pos = \" + _doc.getPromptPos());", "+//    System.err.println(\"start caret pos = \" + _pane.getCaretPosition());", "+//    System.err.println(\"start prompt pos = \" + _doc.getPromptPos());", "-    System.err.println(\"caret pos = \" + _pane.getCaretPosition());", "-    System.err.println(\"prompt pos = \" + _doc.getPromptPos());", "-    System.err.println(\"Document = |\" + _doc.getDocText(0, _doc.getLength()) + \"|\");", "-    assertEquals(\"Caret is at the end after output while in progress.\",", "-                 _doc.getLength(),", "-                 _pane.getCaretPosition());", "+//    System.err.println(\"caret pos = \" + _pane.getCaretPosition());", "+//    System.err.println(\"prompt pos = \" + _doc.getPromptPos());", "+//    System.err.println(\"Document = |\" + _doc.getDocText(0, _doc.getLength()) + \"|\");", "+    assertEquals(\"Caret is at the end after output while in progress.\", _doc.getLength(), _pane.getCaretPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecb956df6ef9f0c97b229f0bc0fc4aaf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JDKToolsLibrary.java", "commitBeforeChange": "8dbb3967ef585255b4d1ff989654250a57b1af90", "commitAfterChange": "b7d4cb04f4bb848380a14b3825abe047db8dc58f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public static Iterable<JDKToolsLibrary> makeFromRuntime(GlobalModel model)", "signatureAfterChange": "   public static Iterable<JDKToolsLibrary> makeFromRuntime(GlobalModel model)", "diff": ["-    if (JavaVersion.JAVA_6.compareTo(version.majorVersion())>=0) {", "-      // at least Java 6, try Eclipse compiler", "-      msg(\"                 at least Java 6, try EclipseCompiler\");", "-      // provide \"UNKNOWN 6.0\" as version", "-      FullVersion eclipseVersion = JavaVersion.parseFullVersion(JavaVersion.JAVA_6.fullVersion().versionString(),", "-                                                                \"Eclipse\",\"\");", "-      msg(\"                 version for Eclipse: \"+eclipseVersion);", "-      compiler = getCompilerInterface(\"edu.rice.cs.drjava.model.compiler.EclipseCompiler\", eclipseVersion);", "-      msg(\"                 compiler=\"+compiler.getClass().getName());", "-      if (compiler!=NoCompilerAvailable.ONLY) {", "-        // if we have found a compiler, add it", "-        msg(\"                 compiler found\");", "-        list.add(new JDKToolsLibrary(eclipseVersion, null, compiler, debugger, javadoc));", "-      }", "-    }", "+//    if (JavaVersion.JAVA_6.compareTo(version.majorVersion())>=0) {", "+//      // at least Java 6, try Eclipse compiler", "+//      msg(\"                 at least Java 6, try EclipseCompiler\");", "+//      // provide \"UNKNOWN 6.0\" as version", "+//      FullVersion eclipseVersion = JavaVersion.parseFullVersion(JavaVersion.JAVA_6.fullVersion().versionString(),", "+//                                                                \"Eclipse\",\"\");", "+//      msg(\"                 version for Eclipse: \"+eclipseVersion);", "+//      compiler = getCompilerInterface(\"edu.rice.cs.drjava.model.compiler.EclipseCompiler\", eclipseVersion);", "+//      msg(\"                 compiler=\"+compiler.getClass().getName());", "+//      if (compiler!=NoCompilerAvailable.ONLY) {", "+//        // if we have found a compiler, add it", "+//        msg(\"                 compiler found\");", "+//        list.add(new JDKToolsLibrary(eclipseVersion, null, compiler, debugger, javadoc));", "+//      }", "+//    }"]}], "num": 14009}