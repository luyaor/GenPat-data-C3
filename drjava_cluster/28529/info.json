{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7ceae7b992958b335f8b2421983b28e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f806b0d051453da8fca96e3f1c1745", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 383, "methodNumberAfterChange": 383, "signatureBeforeChange": "\r \r   public void forIfThenElseStatement(IfThenElseStatement that)", "signatureAfterChange": "    public void forIfThenElseStatement(IfThenElseStatement that)", "diff": ["-\r", "-  public void forIfThenElseStatement(IfThenElseStatement that) {\r", "-    forIfThenElseStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getTestExpression().visit(this);\r", "-    that.getThenStatement().visit(this);\r", "-    that.getElseStatement().visit(this);\r", "-    forIfThenElseStatementOnly(that);\r", "-  }\r", "+", "+  public void forIfThenElseStatement(IfThenElseStatement that) {", "+    forIfThenElseStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getTestExpression().visit(this);", "+    that.getThenStatement().visit(this);", "+    that.getElseStatement().visit(this);", "+    forIfThenElseStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c4a2b94d3d5b647c739b3c97d2570ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 384, "signatureBeforeChange": "\r \r   public void forWhileStatement(WhileStatement that)", "signatureAfterChange": "    public void forWhileStatement(WhileStatement that)", "diff": ["-\r", "-  public void forWhileStatement(WhileStatement that) {\r", "-    forWhileStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getCondition().visit(this);\r", "-    that.getCode().visit(this);\r", "-    forWhileStatementOnly(that);\r", "-  }\r", "+", "+  public void forWhileStatement(WhileStatement that) {", "+    forWhileStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getCondition().visit(this);", "+    that.getCode().visit(this);", "+    forWhileStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97c0392a29711da954e784ba717d0073", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 382, "methodNumberAfterChange": 382, "signatureBeforeChange": "\r \r   public void forIfThenStatement(IfThenStatement that)", "signatureAfterChange": "    public void forIfThenStatement(IfThenStatement that)", "diff": ["-\r", "-  public void forIfThenStatement(IfThenStatement that) {\r", "-    forIfThenStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getTestExpression().visit(this);\r", "-    that.getThenStatement().visit(this);\r", "-    forIfThenStatementOnly(that);\r", "-  }\r", "+", "+  public void forIfThenStatement(IfThenStatement that) {", "+    forIfThenStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getTestExpression().visit(this);", "+    that.getThenStatement().visit(this);", "+    forIfThenStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c020ec1093c1344145ff1e91e26c697c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 386, "methodNumberAfterChange": 386, "signatureBeforeChange": "\r \r   public void forForStatement(ForStatement that)", "signatureAfterChange": "    public void forForStatement(ForStatement that)", "diff": ["-\r", "-  public void forForStatement(ForStatement that) {\r", "-    forForStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getInit().visit(this);\r", "-    that.getCondition().visit(this);\r", "-    that.getUpdate().visit(this);\r", "-    that.getCode().visit(this);\r", "-    forForStatementOnly(that);\r", "-  }\r", "+", "+  public void forForStatement(ForStatement that) {", "+    forForStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getInit().visit(this);", "+    that.getCondition().visit(this);", "+    that.getUpdate().visit(this);", "+    that.getCode().visit(this);", "+    forForStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd6673f21e5422857526e4bd28bcfd89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 385, "signatureBeforeChange": "\r \r   public void forDoStatement(DoStatement that)", "signatureAfterChange": "    public void forDoStatement(DoStatement that)", "diff": ["-\r", "-  public void forDoStatement(DoStatement that) {\r", "-    forDoStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getCode().visit(this);\r", "-    that.getCondition().visit(this);\r", "-    forDoStatementOnly(that);\r", "-  }\r", "+", "+  public void forDoStatement(DoStatement that) {", "+    forDoStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getCode().visit(this);", "+    that.getCondition().visit(this);", "+    forDoStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd3a7613a2160a86a162ed9d7d730758", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 387, "methodNumberAfterChange": 387, "signatureBeforeChange": "\r \r   public void forLabeledBreakStatement(LabeledBreakStatement that)", "signatureAfterChange": "    public void forLabeledBreakStatement(LabeledBreakStatement that)", "diff": ["-\r", "-  public void forLabeledBreakStatement(LabeledBreakStatement that) {\r", "-    forLabeledBreakStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getLabel().visit(this);\r", "-    forLabeledBreakStatementOnly(that);\r", "-  }\r", "+", "+  public void forLabeledBreakStatement(LabeledBreakStatement that) {", "+    forLabeledBreakStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getLabel().visit(this);", "+    forLabeledBreakStatementOnly(that);", "+  }"]}], "num": 28529}