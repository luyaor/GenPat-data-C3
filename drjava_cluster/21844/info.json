{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "827591f649ee4f76edc81276140e543a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b5527ba27333ce4697595d32ec3331", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 22, "signatureBeforeChange": "          public void testForPrimitiveTypeDoFirst()", "signatureAfterChange": "          public void testForPrimitiveTypeDoFirst()", "diff": ["-     //only primative types boolean, char, int, and double are allowed at Intermediate level. ", "+      //only primative types boolean, char, int, and double are allowed at Intermediate level. ", "-", "+      ", "-            ", "+      ", "-", "+      ", "-      assertEquals(\"After visiting byte, errors should be 1\", 1, errors.size());", "-      assertEquals(\"After byte, error message is correct\", \"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Intermediate level\", errors.getLast().getFirst());", "-", "+      assertEquals(\"After visiting byte, errors should be 0\", 0, errors.size());", "+      ", "-      assertEquals(\"After visiting short, errors should be 2\", 2, errors.size());", "-      assertEquals(\"After short, error message is correct\", \"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Intermediate level\", errors.getLast().getFirst());", "-", "+      assertEquals(\"After visiting short, errors should be 0\", 0, errors.size());", "+      ", "-      assertEquals(\"After visiting long, errors should be 3\", 3, errors.size());", "-      assertEquals(\"After long, error message is correct\", \"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Intermediate level\", errors.getLast().getFirst());", "-", "+      assertEquals(\"After visiting long, errors should be 0\", 0, errors.size());", "+      ", "-      assertEquals(\"After visiting float, errors should be 4\", 4, errors.size());", "-      assertEquals(\"After float, error message is correct\", \"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Intermediate level\", errors.getLast().getFirst());", "+      assertEquals(\"After visiting float, errors should be 0\", 0, errors.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4cda15938f32b0d41be9ef6232ece9e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocumentAdapterTest.java", "commitBeforeChange": "74df86fd67328f41836d5f23da76b724b0648a22", "commitAfterChange": "debcaa5c7896b7af34301718bd146b407947838f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testStylesListContentAndReset() throws DocumentAdapterException", "signatureAfterChange": "   public void testStylesListContentAndReset() throws DocumentAdapterException", "diff": ["-                 \"((0, 19), default)\", _adapter.getStylesList().get(0).toString());", "+                 \"((0, 19), object.return.style)\", _adapter.getStylesList().get(0).toString());", "+    _model.resetInterpreter();", "-    assertEquals(\"StylesList before reset should contain 4 pairs\",", "-                 4, _adapter.getStylesList().size());", "-    ", "-    assertEquals(\"The fourth element of the StylesLIst before reset should be\",", "-                 \"((19, 45), error)\", _adapter.getStylesList().get(3).toString());", "-    ", "-    _doc.reset();", "-    //_doc.insertText(_doc.getDocLength(), \"\\\"yes\\\"\", InteractionsDocument.STRING_RETURN_STYLE);", "-    assertEquals(\"StylesList after rest should only contain 2 pairs\",", "-                 2, _adapter.getStylesList().size());", "-    assertEquals(\"The first element of StylesList after reset should be\", ", "-                 \"((0, 19), default)\", _adapter.getStylesList().get(0).toString());", "-    assertEquals(\"The second element of StylesList after reset should be\", ", "-                 \"((19, 21), default)\", _adapter.getStylesList().get(1).toString());", "-  }", "+    assertEquals(\"StylesList after reset should contain 1 pair\",1, _adapter.getStylesList().size());", "+    //Resetting Interactions piece", "+    assertEquals(\"The only element of the StylesList after reset should be\",", "+                 \"((48, 74), error)\", _adapter.getStylesList().get(0).toString());"]}], "num": 21844}