{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4270ee29aaa777fc4106c436ef0a11e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41acab55dac2af76ab290bcbe56ecb8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public synchronized void testStepOut()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testStepOut()      throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-    debugListener.assertDebuggerStartedCount(1);", "-    ", "+    // Set breakpoint", "-    synchronized(_notifierLock){", "-      _asynchStep(Debugger.STEP_INTO);", "+    synchronized(_notifierLock) {", "+      _asyncStep(Debugger.STEP_INTO);", "-    synchronized(_notifierLock){", "-      _asynchStep(Debugger.STEP_OUT);", "+    synchronized(_notifierLock) {", "+      _asyncStep(Debugger.STEP_OUT);", "-       public void interpreterChanged(boolean inProgress){", "+       public void interpreterChanged(boolean inProgress) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53a7e30601a3bac284c78094ce757d20", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public synchronized void testStepIntoOverBreakpoint() throws Exception", "signatureAfterChange": "   public synchronized void testStepIntoOverBreakpoint() throws Exception", "diff": ["-    debugListener.assertBreakpointSetCount(2);", "+    debugListener.assertRegionAddedCount(2);", "-    debugListener.assertBreakpointRemovedCount(2);  //fires (no waiting)", "+    debugListener.assertRegionRemovedCount(2);  //fires (no waiting)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54dc5e2f71714fa579ef5f0c81de1886", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "17590567cb9f06269b33249dad955c39164a9028", "commitAfterChange": "6222fd84e3aa6c7b8b3da9d73ccf7a9a3370487b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses()     throws Exception", "signatureAfterChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses()     throws Exception", "diff": ["-      _waitForNotifies(3);  // currThreadDied, interactionEnded, interpreterChanged", "+      _waitForNotifies(3);  // interactionEnded, interpreterChanged, currThreadDied", "+                            // here, we get a currThreadDied since it's the last thread", "-    debugListener.assertCurrThreadDiedCount(1);  //fires"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f35f2810dd3ea4d043afc294698daeca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "0d6a1751a06319b8d446186ea0aafba68239ee0c", "commitAfterChange": "50d54a2cc075d489d4814ce780949e6748ba1350", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void testStepInto()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testStepInto()      throws DebugException, BadLocationException, IOException, InterruptedException", "diff": ["-      _debugManager.startup();", "+      _startup();  //_debugManager.startup();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f41a6a729b920e84927a9c874b9ada6e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "commitAfterChange": "42161d6697319e0431a875a1f8336eb6cdd1fe73", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testStepInto()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testStepInto()      throws DebugException, BadLocationException, IOException, InterruptedException", "diff": ["-      _waitForNotifies(1);  // suspended", "+      _waitForNotifies(2);  // suspended, updated", "-    debugListener.assertThreadLocationUpdatedCount(1);", "-    debugListener.assertCurrThreadSuspendedCount(2);  //fires", "+    debugListener.assertThreadLocationUpdatedCount(2);  // fires", "+    debugListener.assertCurrThreadSuspendedCount(2);  // fires", "-      _waitForNotifies(1);  // suspended", "+      _waitForNotifies(2);  // suspended, updated", "-    debugListener.assertThreadLocationUpdatedCount(1);  ", "+    debugListener.assertThreadLocationUpdatedCount(3);  // fires", "-    debugListener.assertCurrThreadSuspendedCount(3);  //fires", "+    debugListener.assertCurrThreadSuspendedCount(3);  // fires", "-      _waitForNotifies(1);  // suspended", "+      _waitForNotifies(2);  // suspended, updated", "-    debugListener.assertThreadLocationUpdatedCount(1);", "+    debugListener.assertThreadLocationUpdatedCount(4);  // fires", "-    debugListener.assertCurrThreadSuspendedCount(4);  //fires", "+    debugListener.assertCurrThreadSuspendedCount(4);  // fires", "-      _waitForNotifies(1);  // suspended", "+      _waitForNotifies(2);  // suspended, updated", "-      _waitForNotifies(1);  // suspended", "+      _waitForNotifies(2);  // suspended, updated", "-    debugListener.assertThreadLocationUpdatedCount(1);", "+    debugListener.assertThreadLocationUpdatedCount(6);  // fires"]}], "num": 18186}