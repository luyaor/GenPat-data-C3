{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba725456e2378e816d4bcbe16d1dc755", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "589db1ba783f2fc376d783cb35e71729", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public Class<?> visit(DivideAssignExpression node)", "signatureAfterChange": "   public Type visit(DivideAssignExpression node)", "diff": ["-  public Class<?> visit(DivideAssignExpression node) {", "+  public Type visit(DivideAssignExpression node) {", "-    Class<?> lc = ln.acceptVisitor(this);", "-    Class<?> rc = node.getRightExpression().acceptVisitor(this);", "+    Type lc1 = ln.acceptVisitor(this);", "+    Type rc1 = node.getRightExpression().acceptVisitor(this);", "+    Class<?> lc = (Class<?>)lc1;", "+    Class<?> rc = (Class<?>)rc1;", "-        !(rc.isPrimitive()  || TigerUtilities.isBoxingType(rc)) ) {", "+        !(rc.isPrimitive()  || TigerUtilities.isBoxingType(rc))) {", "-", "+    ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd21be561224595b3d933d96e705d70f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public Type visit(DivideAssignExpression node)", "signatureAfterChange": "   public Class<?> visit(DivideAssignExpression node)", "diff": ["-  public Type visit(DivideAssignExpression node) {", "+  public Class<?> visit(DivideAssignExpression node) {", "-    Type lc1 = ln.acceptVisitor(this);", "-    Type rc1 = node.getRightExpression().acceptVisitor(this);", "-    Class<?> lc = (Class<?>)lc1;", "-    Class<?> rc = (Class<?>)rc1;", "+    Class<?> lc = ln.acceptVisitor(this);", "+    Class<?> rc = node.getRightExpression().acceptVisitor(this);", "-        !(rc.isPrimitive()  || TigerUtilities.isBoxingType(rc))) {", "+        !(rc.isPrimitive()  || TigerUtilities.isBoxingType(rc)) ) {", "-    ", "+", "-    ", "+"]}], "num": 24657}