{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c4aa92ac1a39d601d423fb5f9c11635", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cd1b65d50b746fce289e72692ba89ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testSimpleReplace() throws BadLocationException", "signatureAfterChange": "     public void testSimpleReplace() throws BadLocationException", "diff": ["- ", "-  public void testSimpleReplace() throws BadLocationException {", "-    doc.insertString(0,EVIL_TEXT, null);", "-    FindReplaceMachine frm = new FindReplaceMachine(doc, 0);", "-    _assertOffsets(frm, 0, 0);", "-    frm.setFindWord(\"evil\");", "-    frm.setReplaceWord(\"monkey\");", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 12);", "-    frm.replaceCurrent();", "-    assertEquals(\"new replaced text\",", "-                 \"Hear no monkey, see no evil, speak no evil.\",", "-                 doc.getText(0, doc.getLength()));", "-  }", "+  public void testSimpleReplace() throws BadLocationException { ", "+    doc.insertString(0,EVIL_TEXT, null); ", "+    _initFrm(0);", "+    _assertOffsets(frm, 0, 0); ", "+    frm.setFindWord(\"evil\"); ", "+    frm.setReplaceWord(\"monkey\"); ", "+    _testFindNextSucceeds(frm, CONTINUE, 0, 12); ", "+    frm.replaceCurrent(); ", "+    assertEquals(\"new replaced text\", ", "+                 \"Hear no monkey, see no evil, speak no evil.\", ", "+                 doc.getText(0, doc.getLength())); ", "+  } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b91b70a90b8294680a8bbb0c2e3f756", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testSimpleReplace() throws BadLocationException", "signatureAfterChange": "    public void testSimpleReplace() throws BadLocationException", "diff": ["- ", "-  public void testSimpleReplace() throws BadLocationException { ", "-    doc.insertString(0,EVIL_TEXT, null); ", "-    _initFrm(0);", "-    _assertOffsets(frm, 0, 0); ", "-    frm.setFindWord(\"evil\"); ", "-    frm.setReplaceWord(\"monkey\"); ", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 12); ", "-    frm.replaceCurrent(); ", "-    assertEquals(\"new replaced text\", ", "-                 \"Hear no monkey, see no evil, speak no evil.\", ", "-                 doc.getText(0, doc.getLength())); ", "-  } ", "+  public void testSimpleReplace() throws BadLocationException {", "+    _doc.insertString(0, EVIL_TEXT, null);", "+    _assertOffsets(_frm, 0, 0);", "+    _frm.setFindWord(\"evil\");", "+    _frm.setReplaceWord(\"monkey\");", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 12);", "+    _frm.replaceCurrent();", "+    assertEquals(\"new replaced text\",", "+                 \"Hear no monkey, see no evil, speak no evil.\",", "+                 _doc.getText(0, _doc.getLength()));"]}], "num": 29514}