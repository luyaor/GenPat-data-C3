{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ec26ba129ceee705c1f3903f0f39dc0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9437fb7d0317e1170799735f92ed7a9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         private void compileClass(Node ast)", "signatureAfterChange": "         private void compileClass(Node ast)", "diff": ["+    // Promote default access to public -- a reference may logically appear in the same", "+    // package but, due to implementation constraints, be loaded by a different class loader.", "+    // In that situation, default access isn't permitted at run time.", "+    accessFlags = defaultToPublicAccess(accessFlags);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa697339785b6f6875be6f4bffda93b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      private void compileField(final FieldDeclaration ast, boolean isInterface)", "signatureAfterChange": "      private void compileField(final FieldDeclaration ast, boolean isInterface)", "diff": ["-    int access = ast.getAccessFlags();", "-    if (isInterface) { access = defaultToPublicAccess(access) | Modifier.STATIC | Modifier.FINAL; }", "+    int access = isInterface ? ast.getModifiers().getBitVector(STATIC, FINAL) : ast.getModifiers().getBitVector();", "+    if (isInterface) { access = defaultToPublicAccess(access); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b310ccfdba678cadace4071a5ae5159d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private void compileMethod(MethodDeclaration ast, boolean isInterface)", "signatureAfterChange": "      private void compileMethod(MethodDeclaration ast, boolean isInterface)", "diff": ["-    int access = ast.getAccessFlags();", "-    if (isInterface) { access = defaultToPublicAccess(access) | Modifier.ABSTRACT; }", "+    int access = isInterface ? ast.getModifiers().getBitVector(ABSTRACT) : ast.getModifiers().getBitVector();", "+    if (isInterface) { access = defaultToPublicAccess(access); }"]}], "num": 6328}