{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bdd8019bf43abf75dc1775d003faf45a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1870da8cf6575f7bc53a1113812f2515", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      public TypeData forInnerInterfaceDefOnly(InnerInterfaceDef that, TypeData mav_result, TypeData name_result, TypeData[] typeParameters_result, TypeData[] superinterfaces_result, TypeData body_result)", "signatureAfterChange": "      public TypeData forInnerInterfaceDefOnly(InnerInterfaceDef that, TypeData mavRes, TypeData nameRes,                                             TypeData[] typeParamRes, TypeData[] superinterfacesRes, TypeData bodyRes)", "diff": ["-  public TypeData forInnerInterfaceDefOnly(InnerInterfaceDef that, TypeData mav_result, TypeData name_result, TypeData[] typeParameters_result, TypeData[] superinterfaces_result, TypeData body_result) {", "-    return forJExpressionOnly(that);//forInterfaceDefOnly(that, mav_result, name_result, typeParameters_result, superinterfaces_result, body_result);", "+  public TypeData forInnerInterfaceDefOnly(InnerInterfaceDef that, TypeData mavRes, TypeData nameRes, ", "+                                           TypeData[] typeParamRes, TypeData[] superinterfacesRes, TypeData bodyRes) {", "+    return forJExpressionOnly(that);", "+    // replaces forInterfaceDefOnly(that, mavRes, nameRes, typeParamRes, superinterfacesRes, bodyRes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc75b329f1fddc70a32265400976ead0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "    public TypeData forInnerClassDefOnly(InnerClassDef that, TypeData mav_result, TypeData name_result, TypeData[] typeParameters_result, TypeData superclass_result, TypeData[] interfaces_result, TypeData body_result)", "signatureAfterChange": "    public TypeData forInnerClassDefOnly(InnerClassDef that, TypeData mavRes, TypeData nameRes, TypeData[] typeParamRes,                                         TypeData superClassRes, TypeData[] interfacesRes, TypeData bodyRes)", "diff": ["-  public TypeData forInnerClassDefOnly(InnerClassDef that, TypeData mav_result, TypeData name_result, TypeData[] typeParameters_result, TypeData superclass_result, TypeData[] interfaces_result, TypeData body_result) {", "-    return forJExpressionOnly(that);//forClassDefOnly(that, mav_result, name_result, typeParameters_result, superclass_result, interfaces_result, body_result);", "+  public TypeData forInnerClassDefOnly(InnerClassDef that, TypeData mavRes, TypeData nameRes, TypeData[] typeParamRes, ", "+                                       TypeData superClassRes, TypeData[] interfacesRes, TypeData bodyRes) {", "+    return forJExpressionOnly(that);", "+    // replaces forClassDefOnly(that, mavRes, nameRes, typeParamRes, superClassRes, interfacesRes, ", "+    //                          bodyRes);"]}], "num": 28942}