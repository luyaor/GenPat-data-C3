{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5b84de7d61eca12c37687326e979b8a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31d7856a7353ff4df4f371d36c1803e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelState.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean _combineCurrentAndNextIfFind(String first, String second,                                        TokenList.Iterator copyCursor)", "signatureAfterChange": "   boolean _combineCurrentAndNextIfFind(String first, String second, TokenList.Iterator copyCursor)", "diff": ["-  boolean _combineCurrentAndNextIfFind(String first, String second,", "-                                       TokenList.Iterator copyCursor)", "-  {", "+  boolean _combineCurrentAndNextIfFind(String first, String second, TokenList.Iterator copyCursor) {", "-    {", "-    }", "+", "-      if ((copyCursor.current().getType().equals(\"\")) &&", "-          (copyCursor.prevItem().getType().equals(\"\"))) {", "+      if (copyCursor.current().getType().equals(\"\") && copyCursor.prevItem().getType().equals(\"\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "462bca991642338aa050c02aeef3cece", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "fa3002b037df55391c4f74b18fce7cb5d20b82f3", "commitAfterChange": "5f12d16bf856e43a5e3999099b39d12f17d7ad32", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 53, "signatureBeforeChange": "   private boolean _isCurrentBraceMatchable( \t\tModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private boolean _isCurrentBraceMatchable( \t\tModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-  {", "-    String type = copyCursor.current().getType();", "+\t\t{", "+\t\t\tString type = copyCursor.current().getType();", "-    return !(type.equals(\"/\")  ||", "-             type.equals(\"*\")  ||", "-             type.equals(\"\\n\") ||", "-             type.equals(\"//\"));", "-  }", "+\t\t\treturn (!copyCursor.current().isGap() &&", "+\t\t\t\t\t\t\t!(type.equals(\"/\")  ||", "+\t\t\t\t\t\t\t\ttype.equals(\"*\")  ||", "+\t\t\t\t\t\t\t\ttype.equals(\"\\n\") ||", "+\t\t\t\t\t\t\t\ttype.equals(\"//\")) &&", "+\t\t\t\t\t\t\t!copyCursor.current().isShadowed());", "+\t\t}"]}], "num": 9360}