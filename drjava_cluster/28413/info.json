{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfcff73b0653dc4de85ad33742eb10c2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c4e0bafa7a90cea40d4f96283bb6b03", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected OpenDefinitionsDocument setupDocument(String text) throws BadLocationException", "signatureAfterChange": "   protected OpenDefinitionsDocument setupDocument(final String text) throws BadLocationException", "diff": ["-  protected OpenDefinitionsDocument setupDocument(String text) throws BadLocationException {", "+  protected OpenDefinitionsDocument setupDocument(final String text) throws BadLocationException {", "-//    Utilities.invokeAndWait(new Runnable() { public void run () { ", "-    _doc = _model.newFile(); ", "-//    } });", "+    ", "+    // newFile() accesses and modifies Swing objects", "+    Utilities.invokeAndWait(new Runnable() { public void run () { _doc = _model.newFile(); } });", "-    changeDocumentText(text, _doc);", "+    Utilities.invokeAndWait(new Runnable() { public void run() { changeDocumentText(text, _doc); } });", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0715a5aa78633802dfea13993ab13c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "cbb9f04386fdbcd6c82a6f2a5ae6b635359499fb", "commitAfterChange": "e77b9389e0feb3169a20412f8892f630db108f0e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void _doCompile(List<OpenDefinitionsDocument> docs) throws IOException", "signatureAfterChange": "   private void _doCompile(List<OpenDefinitionsDocument> docs) throws IOException", "diff": ["-    ArrayList<File> filesToCompile = new ArrayList<File>();", "-    ArrayList<File> excludedFiles = new ArrayList<File>();", "-    ArrayList<CompilerError> packageErrors = new ArrayList<CompilerError>();", "+    final ArrayList<File> filesToCompile = new ArrayList<File>();", "+    final ArrayList<File> excludedFiles = new ArrayList<File>();", "+    final ArrayList<CompilerError> packageErrors = new ArrayList<CompilerError>();", "-    _notifier.compileStarted();", "+    Utilities.invokeLater(new Runnable() { public void run() { _notifier.compileStarted(); } });", "-      if (!packageErrors.isEmpty()) { _distributeErrors(packageErrors); }", "+      if (! packageErrors.isEmpty()) { _distributeErrors(packageErrors); }", "-    finally { _notifier.compileEnded(_model.getWorkingDirectory(), excludedFiles); }", "+    finally { ", "+      Utilities.invokeLater(new Runnable() { ", "+        public void run() { _notifier.compileEnded(_model.getWorkingDirectory(), excludedFiles); } });", "+    }"]}], "num": 28413}