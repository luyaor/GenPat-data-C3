{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c678013f9a5d2378768d274aa98b16a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7208e2029a79581e4d0a126c01c55791", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "973271a114877f62b3cb122ffc9ab5f28c91b43a", "commitAfterChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     int deleteRight(Iterator delTo)", "signatureAfterChange": "     int deleteRight(Iterator delTo)", "diff": ["-      */", "+    /** Deletes from offset in this to endOffset in delTo. Uses ModelList.collapse to perform quick deletion. */", "-      this.collapse(delTo);", "+      collapse(delTo);", "-      if (this.eq(delTo) && this.current().isGap()) {", "+      if (eq(delTo) && current().isGap()) {", "-        this.current().shrink(delTo.getBlockOffset() - this.getBlockOffset());", "-        return this.getBlockOffset();", "+        current().shrink(delTo.getBlockOffset() - getBlockOffset());", "+        return getBlockOffset();", "-      if (!this.eq(delTo)) {", "-        this.clipLeft();", "-      }", "+      if (! eq(delTo)) clipLeft();", "-      if (!this.atStart()) {", "-        this.prev();", "-      }", "+      if (! atStart()) prev();", "-        this.setTo(delTo);", "+        setTo(delTo);", "-        this.setTo(delTo);", "+        setTo(delTo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98656040a2511af9f0c8a633846150c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "973271a114877f62b3cb122ffc9ab5f28c91b43a", "commitAfterChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     void clipRight()", "signatureAfterChange": "     void clipRight()", "diff": ["-      if (this.atEnd()) {", "-        return;", "-      }", "-      else if (this.getBlockOffset() == 0) {", "-        return;", "-      }", "-      else if (this.getBlockOffset() == this.current().getSize()) {", "-        this.remove();", "-      }", "-      else if (this.current().isGap()) {", "-        this.current().shrink(this.getBlockOffset());", "-      }", "-      else if (this.current().isMultipleCharBrace()) {", "-        if (this.getBlockOffset() != 1) {", "-          throw new IllegalArgumentException(\"Offset incorrect\");", "-        }", "+      if (atEnd()) return;", "+      else if (getBlockOffset() == 0) return;", "+      else if (getBlockOffset() == current().getSize()) remove();", "+      else if (current().isGap()) current().shrink(getBlockOffset());", "+      else if (current().isMultipleCharBrace()) {", "+        if (getBlockOffset() != 1) throw new IllegalArgumentException(\"Offset incorrect\");", "-          String type = this.current().getType();", "+          String type = current().getType();", "-          this.current().setType(second);", "+          current().setType(second);", "-      else {", "-        throw new IllegalArgumentException(\"Cannot clip left.\");", "-      }", "+      else throw new IllegalArgumentException(\"Cannot clip left.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc50a3a661ae79a8c9733e1bc62fb7c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "6c31f49b491d4a01bd2ddbae62b5ee4f76d52129", "commitAfterChange": "b17c3d3d0edf27a5d35f38839287840198b5808d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private int _moveLeft(int count, int currentOffset)", "signatureAfterChange": "     private int _moveLeft(int count, int currentOffset)", "diff": ["-      if (this.atEnd()) {", "-        this.prev();", "-        if (!this.atStart()) //make sure list not empty", "-        {", "-          currentOffset = this.current().getSize();", "-        }", "+      ", "+      // Standardize initial position, eliminating 0 offset", "+      if (atEnd()) {", "+        prev();", "+        if (! atStart())  currentOffset = current().getSize(); //make sure list not empty", "-", "-      if (this.atStart()) {", "-        throw new IllegalArgumentException(\"At Start\");", "-      }", "+      if (atStart()) throw new IllegalArgumentException(\"At Start\");", "-        this.prev();", "+        prev();", "-        if (this.atStart()) {", "-          if (count > 0) {", "-            throw new IllegalArgumentException(\"At Start\");", "-          }", "-          else {", "-            this.next();", "-            currentOffset = 0;", "-          }", "-        }", "-        else {", "-          currentOffset = this.current().getSize();", "-        }", "+        if (atStart()) throw new IllegalArgumentException(\"At Start\");  // count > 0", "+        currentOffset = current().getSize();", "-      return currentOffset - count;", "+      return currentOffset - count;  // Note: returned offset can be 0"]}], "num": 26186}