{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9144f829b193bb870cd6621c460cb7f3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "199d1e955e3272eea77ff155f1f45dd1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "commitAfterChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          public void saveBeforeCompile()", "signatureAfterChange": "          public void saveBeforeCompile()", "diff": ["-      try {", "-        _model.saveAllFiles(new FileSaveSelector() {", "-          public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "-          public boolean warnFileOpen(File f) { return false; }", "-          public boolean verifyOverwrite() { return true; }", "-          public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "-        });", "-      }", "-      catch(IOException e) { throw new UnexpectedException(e); }  ", "+      saveAllFiles(_model, new FileSaveSelector() {", "+        public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "+        public boolean warnFileOpen(File f) { return false; }", "+        public boolean verifyOverwrite() { return true; }", "+        public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "+      });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20d460264d013346b55c14e149daf746", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          public void saveBeforeCompile()", "signatureAfterChange": "          public void saveBeforeCompile()", "diff": ["-      saveAllFiles(_model, new FileSaveSelector() {", "-        public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "-        public boolean warnFileOpen(File f) { return false; }", "-        public boolean verifyOverwrite() { return true; }", "-        public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "-      });", "+      try {", "+        _model.saveAllFiles(new FileSaveSelector() {", "+          public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "+          public boolean warnFileOpen(File f) { return false; }", "+          public boolean verifyOverwrite() { return true; }", "+          public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "+        });", "+      }", "+      catch(IOException e) { throw new UnexpectedException(e); }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4afec6224213f1bd6b9b6d421f5a30f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          public void saveBeforeCompile()", "signatureAfterChange": "          public void saveBeforeCompile()", "diff": ["-      try {", "-        _model.saveAllFiles(new FileSaveSelector() {", "-          public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "-          public boolean warnFileOpen(File f) { return false; }", "-          public boolean verifyOverwrite() { return true; }", "-          public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "-        });", "-      }", "-      catch(IOException e) { throw new UnexpectedException(e); }  ", "+      saveAllFiles(_model, new FileSaveSelector() {", "+        public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "+        public boolean warnFileOpen(File f) { return false; }", "+        public boolean verifyOverwrite() { return true; }", "+        public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "+      });"]}], "num": 3939}