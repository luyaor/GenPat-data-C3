{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5b6da0460cd9e82c4f75660e493a295", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76afbda205472c6188eaa6818517e081", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "9c6f88c259086ee69c4d958032e8427e6f011b12", "commitAfterChange": "9437c2299622c109c03b30ccc782cae5639dae6e", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public abstract Type meet(Type t1, Type t2);", "signatureAfterChange": "   public Type meet(Type t1, Type t2)", "diff": ["-  /** Compute a common subtype of {@code t1} and {@code t2}. */", "-  public abstract Type meet(Type t1, Type t2);", "+  /** Compute a common supertype of the given pair of types. */", "+  public Type meet(Type t1, Type t2) { return meet(IterUtil.make(t1, t2)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77b3fa544a1dc6821924642ae8dddac8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "9c6f88c259086ee69c4d958032e8427e6f011b12", "commitAfterChange": "9437c2299622c109c03b30ccc782cae5639dae6e", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public abstract Type join(Type t1, Type t2);", "signatureAfterChange": "   public Type join(Type t1, Type t2)", "diff": ["-  /** Compute a common supertype of {@code t1} and {@code t2}. */", "-  public abstract Type join(Type t1, Type t2);", "+  /** Compute a common supertype of the given pair of types. */", "+  public Type join(Type t1, Type t2) { return join(IterUtil.make(t1, t2)); }"]}], "num": 26776}