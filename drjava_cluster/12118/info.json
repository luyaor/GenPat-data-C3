{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11c44003f3b4b7a1881fbce81301b56f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "051760dd38243e1e42950df3c1564239", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 212, "signatureBeforeChange": "     public boolean saveFile(FileSaveSelector com) throws IOException", "signatureAfterChange": "     public boolean saveFile(FileSaveSelector com) throws IOException", "diff": ["-      FileSaveSelector realCommand;", "-      final File file;", "+//      System.err.println(\"saveFile called on \" + this);", "+//      System.err.println(this + \" is untitled? \" + isUntitled());", "+      if (isUntitled()) return saveFileAs(com);", "-      if (!isModifiedSinceSave() && !isUntitled()) return true;", "-        // Don't need to save; return true, since the save wasn't \"canceled\"", "+      if (! isModifiedSinceSave()) return true;", "+      // Didn't need to save since file is named and unmodified; return true, since the save wasn't \"canceled\"", "+      FileSaveSelector realCommand = com;", "-        if (isUntitled()) realCommand = com;", "-        else", "-          try {", "-          file = getFile();", "+        final File file = getFile();", "+//        System.err.println(\"file name for doc to be saved is: \" + file);", "+        if (file != null) {", "+//          System.err.println(\"TrivialFSS set up\");", "-        catch (FileMovedException fme) {", "-          // getFile() failed, prompt the user if a new one should be selected", "-          if (com.shouldSaveAfterFileMoved(this, fme.getFile())) realCommand = com;", "-          else return false;", "-            // User declines to save as a new file, so don't save ", "-        }", "-        return saveFileAs(realCommand);", "-      catch (IllegalStateException ise) {", "-        // No file--  this should have been caught by isUntitled()", "-        throw new UnexpectedException(ise);", "+      catch (FileMovedException fme) {", "+        // getFile() failed, prompt the user if a new one should be selected", "+        if (com.shouldSaveAfterFileMoved(this, fme.getFile())) realCommand = com;", "+        else return false;", "+        // User declines to save as a new file, so don't save ", "+//      System.err.println(\"Calling saveFileAs\");", "+      return saveFileAs(realCommand);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a822ac90bd671207f5191a131d4572ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 193, "methodNumberAfterChange": 195, "signatureBeforeChange": "     public boolean saveFile(FileSaveSelector com) throws IOException", "signatureAfterChange": "     public boolean saveFile(FileSaveSelector com) throws IOException", "diff": ["-        if (isUntitled()) {", "-          realCommand = com;", "-        }", "-        else {", "+        if (isUntitled()) realCommand = com;", "+        else", "-            file = getFile();", "-            realCommand = new TrivialFSS(file);", "-          }", "-          catch (FileMovedException fme) {", "-            // getFile() failed, prompt the user if a new one should be selected", "-            if (com.shouldSaveAfterFileMoved(this, fme.getFile())) {", "-              realCommand = com;", "-            }", "-            else {", "-              // User declines to save as a new file, so don't save", "-              return false;", "-            }", "-          }", "+          file = getFile();", "+          realCommand = new TrivialFSS(file);", "+        }", "+        catch (FileMovedException fme) {", "+          // getFile() failed, prompt the user if a new one should be selected", "+          if (com.shouldSaveAfterFileMoved(this, fme.getFile())) realCommand = com;", "+          else", "+            // User declines to save as a new file, so don't save", "+            return false;"]}], "num": 12118}