{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3befa19537dbd5b7b4a9f61d110216a1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27a6dce90d170b29bd38b15c6d41af67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SimpleAllocation.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args)", "signatureAfterChange": "   public SimpleAllocation(Option<List<TypeName>> targs, ReferenceTypeName tp, List<? extends Expression> args)", "diff": ["-  public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args) {", "-    this(tp, args, SourceInfo.NONE);", "+  public SimpleAllocation(Option<List<TypeName>> targs, ReferenceTypeName tp, List<? extends Expression> args) {", "+    this(targs, tp, args, SourceInfo.NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53d78982d9e4f195cb4578fbc62da3ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InterfaceDeclaration.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public InterfaceDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, List<Node> body)", "signatureAfterChange": "   public InterfaceDeclaration(ModifierSet mods, String name, Option<List<TypeParameter>> tparams,                                List<? extends ReferenceTypeName> impl, List<Node> body)", "diff": ["+   */", "+  public InterfaceDeclaration(ModifierSet mods, String name, Option<List<TypeParameter>> tparams,", "+                               List<? extends ReferenceTypeName> impl, List<Node> body) {", "+    this(mods, name, tparams, impl, body, SourceInfo.NONE);", "+  }", "-    this(mods, name, impl, body, SourceInfo.NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8edea47ccad8aa82825dccedeacdde77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ObjectMethodCall.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args,                           SourceInfo si)", "signatureAfterChange": "   public ObjectMethodCall(Expression exp, Option<List<TypeName>> targs, String mn,                            List<? extends Expression> args, SourceInfo si)", "diff": ["-  public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args,", "-                          SourceInfo si) {", "-    super(mn, args, si);", "+  public ObjectMethodCall(Expression exp, Option<List<TypeName>> targs, String mn,", "+                           List<? extends Expression> args, SourceInfo si) {", "+    super(targs, mn, args, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a19fa7a5c19707c6e060deea50ea7831", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/StaticMethodCall.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public StaticMethodCall(TypeName typ, String mn, List<? extends Expression> args)", "signatureAfterChange": "   public StaticMethodCall(TypeName typ, Option<List<TypeName>> targs, String mn, List<? extends Expression> args)", "diff": ["+   */", "+  public StaticMethodCall(TypeName typ, Option<List<TypeName>> targs, String mn, List<? extends Expression> args) {", "+    this(typ, targs, mn, args, SourceInfo.NONE);", "+  }", "-    this(typ, mn, args, SourceInfo.NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e88b5053164178cde51ec4460fd89681", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SuperMethodCall.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public SuperMethodCall(Option<String> cn, String mn, List<? extends Expression> args, SourceInfo si)", "signatureAfterChange": "      public SuperMethodCall(Option<String> cn, Option<List<TypeName>> targs, String mn,                           List<? extends Expression> args, SourceInfo si)", "diff": ["-  public SuperMethodCall(Option<String> cn, String mn, List<? extends Expression> args, SourceInfo si) {", "-    super(mn, args, si);", "+  public SuperMethodCall(Option<String> cn, Option<List<TypeName>> targs, String mn,", "+                          List<? extends Expression> args, SourceInfo si) {", "+    super(targs, mn, args, si);"]}], "num": 16418}