{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dea2748152822b022e83e40bdb15a462", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ccd8a9e8eee8f020977f41d5c8a4634", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsCurly.java", "commitBeforeChange": "ab72ce86901addf5fe2a66f48b9dc4c5f7db818b", "commitAfterChange": "0d293f065df295b40875d176fa985aae8404680f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    // PRE: we are not inside a multiline comment", "-    // PRE: the current block or expression list was *not* ", "-    //      opened by '[' or '('.", "-    ", "-    throw new RuntimeException(\"Not yet implemented!\");", "-    ", "-    /*", "-    * pos := START", "-    * ", "-    * while (pos < DOCSTART)", "-    *    if char[pos] = '{'", "-    *       return TRUE", "-    *  ", "-    *    else if char[pos] = '[' or char[pos] = '('", "-    *       return false", "-    *", "-    *    else ", "-    *       pos := pos - 1", "-    *", "-    * return FALSE", "-    *", "-    * [Note: ensure return char is not in // comment!!]", "-    */ ", "+    // PRE: We are not inside a multiline comment.", "+    // PRE: The closest brace is not a '(' or a '['.", "+", "+    IndentInfo info = doc.getReduced().getIndentInformation();", "+", "+    return info.braceType.equals(IndentInfo.openSquiggly);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2ca0547aae9b936d11e9a215320a7ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceOnPrevLine.java", "commitBeforeChange": "ab72ce86901addf5fe2a66f48b9dc4c5f7db818b", "commitAfterChange": "0d293f065df295b40875d176fa985aae8404680f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    throw new RuntimeException(\"Not yet implemented!\");", "+    IndentInfo info = doc.getReduced().getIndentInformation();", "+    //info.distToPrevNewline;    //______|\\n_____x___", "+    //info.distToNewline;        //______\\n|____{_____x___", "+    //info.distToBrace;          //______|{_____x___", "+    ", "+    return true;", "+", "-    * pos := START", "-    * counter := 0", "-    *", "-    * while (pos > DOCSTART)   ", "-    *    if char[pos] = '{' ", "-    *       return (counter = 1)     [if pos is not in // comment!!]", "-    *  ", "-    *    else if char[pos] = '\\n'", "-    *       counter := counter + 1", "-    *       pos := pos - 1", "-    *", "-    * return false", "-    *", "-    */", "+     * pos := START", "+     * counter := 0", "+     *", "+     * while (pos > DOCSTART)   ", "+     *    if char[pos] = '{' ", "+     *       return (counter = 1)     [if pos is not in // comment!!]", "+     *  ", "+     *    else if char[pos] = '\\n'", "+     *       counter := counter + 1", "+     *       pos := pos - 1", "+     *", "+     * return false", "+     *", "+     */"]}], "num": 11745}