{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "296a8fcc97c1db3a9f40d3cdcd79bbe4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c0a392ecaeaeba0c2c3a65d3be09d37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3b9696a707d284763f4bff7a7d587935d483984c", "commitAfterChange": "d63224548fc8865b0ab459659b530c0d39d21fc7", "methodNumberBeforeChange": 543, "methodNumberAfterChange": 544, "signatureBeforeChange": "   private JMenu _setUpToolsMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpToolsMenu(int mask)", "diff": ["-    JMenu toolsMenu = new JMenu(\"Tools\");", "+    final JMenu toolsMenu = new JMenu(\"Tools\");", "+    final int runActionIndex = toolsMenu.getItemCount();", "+    // Add the listener that changes the \"Run Main\" menu item", "+    OptionListener<Boolean> runMainListener = new OptionListener<Boolean>() {", "+      public void optionChanged(final OptionEvent<Boolean> oce) {", "+        JMenuItem mi = toolsMenu.getItem(runActionIndex);", "+", "+        // change", "+        if (oce.value) {", "+          mi.setText(\"Run Document\");", "+          mi.setToolTipText(\"Run the current document, regardless of whether it is an applet, an ACM \" +", "+                            \"Java Task Force program, or a regular Java program with a main method.\"); ", "+        }", "+        else {", "+          mi.setText(\"Run Document's Main Method\");", "+          mi.setToolTipText(\"Run the main method of the current document\"); ", "+        }", "+      }", "+    };", "+    DrJava.getConfig().addOptionListener(OptionConstants.SMART_RUN_FOR_APPLETS_AND_PROGRAMS, runMainListener);", "+    runMainListener.optionChanged(new OptionEvent<Boolean>", "+                                  (OptionConstants.SMART_RUN_FOR_APPLETS_AND_PROGRAMS,", "+                                   DrJava.getConfig().getSetting(OptionConstants.SMART_RUN_FOR_APPLETS_AND_PROGRAMS)));", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "882626fe7eee68bd501eb954bdc964a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "37dab6b79fc3d4e6f7b2b5f0aa53a4ea9b7f7476", "commitAfterChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 168, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+    ", "+    // The OptionListener for LIGHTWEIGHT_PARSING_ENABLED.", "+    OptionListener<Boolean> parsingEnabledListener = new OptionListener<Boolean>() {", "+      public void optionChanged(OptionEvent<Boolean> oce) {", "+        if (oce.value) {", "+          _model.getParsingControl().addListener(new LightWeightParsingListener() {", "+            public void enclosingClassNameUpdated(OpenDefinitionsDocument doc, String old, String updated) {", "+              if (doc==_model.getActiveDocument()) { updateFileTitle(); }", "+            }", "+          });", "+        }", "+        _model.getParsingControl().reset();", "+        _model.getParsingControl().setAutomaticUpdates(oce.value);", "+        updateFileTitle();", "+      }", "+    };", "+    DrJava.getConfig().addOptionListener(LIGHTWEIGHT_PARSING_ENABLED, parsingEnabledListener);", "+    parsingEnabledListener.optionChanged(new OptionEvent<Boolean>(LIGHTWEIGHT_PARSING_ENABLED, ", "+                                                                  DrJava.getConfig().getSetting(LIGHTWEIGHT_PARSING_ENABLED).booleanValue()));"]}], "num": 12790}