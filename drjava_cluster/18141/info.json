{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "629ba091b1395ef1f6a0f5c7c894eef9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b7561175d3fce424eee6c6da80c4563", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocument.java", "commitBeforeChange": "25c6efa4fee666f10304502f8f42fa30cbab79a2", "commitAfterChange": "e193e4674aaab3350b36cbc521ecf3bf9c098bc6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   List<Pair<Pair<Integer, Integer>, String>> getStylesList()", "signatureAfterChange": "   public Pair<Pair<Integer, Integer>, String>[] getStyles()", "diff": ["-  /** Package protected accessor method used for test cases */", "-  List<Pair<Pair<Integer, Integer>, String>> getStylesList() { return _stylesList; }", "+  /** Accessor method used to copy contents of _stylesList to an array.  Used in test cases. */", "+  public Pair<Pair<Integer, Integer>, String>[] getStyles() { ", "+    acquireReadLock();", "+    synchronized(_stylesList) {", "+      try { ", "+        /* TODO: file javac bug report concerning placement of @SuppressWarnings.  Fails if rhs of result binding is", "+         * used as body of return statement. */", "+        @SuppressWarnings(\"unchecked\")", "+        Pair<Pair<Integer, Integer>, String>[] result = ", "+          (Pair<Pair<Integer, Integer>, String>[]) (_stylesList.toArray(new Pair[0]));", "+        return result;", "+      }", "+      finally { releaseReadLock(); }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d6e81f353a43f1bab2ff21501040d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "a30a5503c4bed745d3bf75a4b449d026f5c00795", "commitAfterChange": "18853ae3d062d9694905fb3ffaa507db78319f52", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public String getVariableToString(String var)", "signatureAfterChange": "   public Pair<String,String> getVariableToString(String var)", "diff": ["-  public String getVariableToString(String var) {", "-    if (!isValidFieldName(var)) { return \"<error in watch name>\"; }", "-    Object[] val = getVariable(var);", "-    if (val.length == 0) { return null; }", "+  public Pair<String,String> getVariableToString(String var) {", "+//    if (!isValidFieldName(var)) { return \"<error in watch name>\"; }", "+    Pair<Object,String>[] val = getVariable(var);", "+    if (val.length == 0) { return new Pair<String,String>(null,null); }", "-      Object o = val[0];", "-      try { return TextUtil.toString(o); }", "-      catch (Throwable t) { return \"<error in toString()>\"; }", "+      Object o = val[0].first();", "+      try { return new Pair<String,String>(TextUtil.toString(o),val[0].second()); }", "+      catch (Throwable t) { return new Pair<String,String>(\"<error in toString()>\",\"\"); }"]}], "num": 18141}