{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4048f80aa203e05cc9e3cbb9ddf1bb45", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c204bd8f304634af53e3d98c8297a54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "5497ac60fa563e6e67c580081d99fbd842e52332", "commitAfterChange": "5fa866685226be5aebbebdfba9d7d34d29108e50", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void move(int dist)", "signatureAfterChange": "   public void move(int dist)", "diff": ["-    synchronized(_reduced) {", "-      int newLoc = _currentLocation + dist;", "-      if (newLoc < 0) throw new IllegalStateException(\"Tried to move cursor to a negative location\");", "-      _currentLocation = newLoc;", "-      _reduced.move(dist);", "+    readLock();", "+    try {", "+      synchronized(_reduced) {", "+        int newLoc = _currentLocation + dist;", "+        // location is set asynchronously when caret is moved so the following adjustment is necessary", "+        if (newLoc < 0) newLoc = 0;", "+        else if (newLoc > getLength()) newLoc = getLength();", "+        _currentLocation = newLoc;", "+        _reduced.move(dist);", "+      }", "+    finally { readUnlock(); }   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85efd721a087268c8906a4652ce8e327", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "06a5c45ef1fc363387e831a72bae96256df629e8", "commitAfterChange": "d38c322133f95b0654ce8d1107bb215e7f56de2e", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public synchronized void setBuildDirectory(File f)", "signatureAfterChange": "   public synchronized void setBuildDirectory(File f)", "diff": ["-      _interpreterControl.addClassPath(f.getAbsolutePath());", "+      try{", "+        _interpreterControl.addBuildDirectoryClassPath(new File(f.getAbsolutePath()).toURL());", "+      }catch(MalformedURLException murle){", "+        // this is bad! change this! we should handle this exception better!", "+        // show a popup like \"invalide build directory\" or something", "+        throw new RuntimeException(murle);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1f5729787c62911f7059ec68f71db3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ClassAndInterfaceFinder.java", "commitBeforeChange": "816e415ebd3619964409d5b7c5a5d20fa993a7b5", "commitAfterChange": "79e38a44be6c4c379730bdfb5468461330077836", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public ClassAndInterfaceFinder(File f)", "signatureAfterChange": "   public ClassAndInterfaceFinder(File f)", "diff": ["-  public ClassAndInterfaceFinder(File f){", "-    _file = f;", "+  /* normal constructor */", "+  public ClassAndInterfaceFinder(File f) {", "+    Reader r;", "+    try {", "+      r = new FileReader(f);", "+    }", "+    catch(FileNotFoundException e) { /* create a Reader for an \"empty\" file */", "+      r = new StringReader(\"\");", "+    }", "+    initialize(r);", "+  }"]}], "num": 29414}