{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c8772108a6f4371e255d73738ed2970", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5caf0657219c85117606595ec8cce919", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 76, "signatureBeforeChange": "   private ObjectReference _getDebugInterpreter(String interpreterName, ThreadReference threadRef) throws      InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, InvocationException,      DebugException", "signatureAfterChange": "   private ObjectReference _getDebugInterpreter(String interpreterName, ThreadReference threadRef) throws      InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, InvocationException,      DebugException", "diff": ["-          System.out.println(\"Invoking \" + m.toString() + \" on \" + args.toString());", "-          System.out.println(\"Thread is \" + threadRef.toString() + \" <suspended = \" + threadRef.isSuspended() + \">\");", "+          printStream.println(\"Invoking \" + m.toString() + \" on \" + args.toString());", "+          printStream.println(\"Thread is \" + threadRef.toString() + \" <suspended = \" + threadRef.isSuspended() + \">\");", "-        if ( printMessages ) System.out.println(\"Returning...\");", "+        if ( printMessages ) printStream.println(\"Returning...\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73b7a4b9fa8b6044b16787336e3e6b03", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "   private ObjectReference _getDebugInterpreter(String interpreterName, ThreadReference threadRef) throws      InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, InvocationException,      DebugException", "signatureAfterChange": "   private ObjectReference _getDebugInterpreter(String interpreterName, ThreadReference threadRef) throws      InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, InvocationException,      DebugException", "diff": ["-        if ( printMessages ) {", "-          printStream.println(\"Invoking \" + m.toString() + \" on \" + args.toString());", "-          printStream.println(\"Thread is \" + threadRef.toString() + \" <suspended = \" + threadRef.isSuspended() + \">\");", "-        }", "+        _log.log(\"Invoking \" + m.toString() + \" on \" + args.toString());", "+        _log.log(\"Thread is \" + threadRef.toString() + \" <suspended = \" + threadRef.isSuspended() + \">\");", "-        if ( printMessages ) printStream.println(\"Returning...\");", "+        _log.log(\"Returning...\");"]}], "num": 4633}