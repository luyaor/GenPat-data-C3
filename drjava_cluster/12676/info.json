{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "659d8a1dbfc0da837c914869ac9576bd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "662d28a12a9ffce273e7cf1c2d136eb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "634bad3816e5a89c71c174f08f33c3f80727cfeb", "commitAfterChange": "d1ffac675273323f7a1b9777462d16896d09a1af", "methodNumberBeforeChange": 440, "methodNumberAfterChange": 454, "signatureBeforeChange": "   public void showTab(Component c)", "signatureAfterChange": "   public void showTab(final Component c)", "diff": ["-  public void showTab(Component c) {", "-    int numVisible = 0;", "+  public void showTab(final Component c) {", "-    // This retarded method doesn't work for our two always-on tabs,", "-    // so here's a temporary kludge.", "-    if (c == _interactionsPane) _tabbedPane.setSelectedIndex(0);", "-    else if (c == _consolePane) _tabbedPane.setSelectedIndex(1);", "-    else {", "-      for (TabbedPanel tp: _tabs) {", "-        if (tp == c) {", "-          // 2 right now is a magic number for the number of tabs always visible", "-          // interactions & console", "-          if (! tp.isDisplayed()) {", "-            _tabbedPane.insertTab(tp.getName(), null, tp, null, numVisible + 2);", "-            tp.setDisplayed(true);", "+    // This retarded method doesn't work for our two always-on tabs, so here's a temporary kludge.", "+    Utilities.invokeLater(new Runnable() {", "+      public void run() {", "+        int numVisible = 0;", "+        if (c == _interactionsPane) _tabbedPane.setSelectedIndex(0);", "+        else if (c == _consolePane) _tabbedPane.setSelectedIndex(1);", "+        else {", "+          for (TabbedPanel tp: _tabs) {", "+            if (tp == c) {", "+              // 2 right now is a magic number for the number of tabs always visible", "+              // interactions & console", "+              if (! tp.isDisplayed()) {", "+                _tabbedPane.insertTab(tp.getName(), null, tp, null, numVisible + 2);", "+                tp.setDisplayed(true);", "+              }", "+              _tabbedPane.setSelectedIndex(numVisible + 2);", "+              ", "+              c.requestFocusInWindow();", "+              return;", "+            }", "+            if (tp.isDisplayed()) numVisible++;", "-          _tabbedPane.setSelectedIndex(numVisible + 2);", "-          ", "-          c.requestFocusInWindow();", "-          return;", "-        if (tp.isDisplayed()) numVisible++;", "-    }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a54f6f6c44543ef42f8e1bd1742646", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "11a167d5b0a97e55aef4d62ed18d4da71e30b762", "commitAfterChange": "a32847752bc1c4d9a9c65da4d91d56e3d8a61fa6", "methodNumberBeforeChange": 255, "methodNumberAfterChange": 261, "signatureBeforeChange": "   public void showTab(Component c)", "signatureAfterChange": "   public void showTab(Component c)", "diff": ["-    for (int i = 0; i < _tabs.size(); i++) {", "-      tp = (TabbedPanel)_tabs.get(i);", "-      if (tp == c) {", "-        // 2 right now is a magic number for the number of tabs always visible", "-        // interactions & console", "-        if (!tp.isDisplayed()) {", "-          _tabbedPane.insertTab(tp.getName(), null, tp, null, numVisible + 2);", "-          tp.setDisplayed(true);", "+    // This retarded method doesn't work for our two always-on tabs,", "+    // so here's a temporary kludge.", "+    if (c == _interactionsPane) {", "+      _tabbedPane.setSelectedIndex(0);", "+    }", "+    else if (c == _consolePane) {", "+      _tabbedPane.setSelectedIndex(1);", "+    }", "+    else {", "+      for (int i = 0; i < _tabs.size(); i++) {", "+        tp = (TabbedPanel)_tabs.get(i);", "+        if (tp == c) {", "+          // 2 right now is a magic number for the number of tabs always visible", "+          // interactions & console", "+          if (!tp.isDisplayed()) {", "+            _tabbedPane.insertTab(tp.getName(), null, tp, null, numVisible + 2);", "+            tp.setDisplayed(true);", "+          }", "+          _tabbedPane.setSelectedIndex(numVisible + 2);", "+          return;", "-        _tabbedPane.setSelectedIndex(numVisible + 2);", "-        return;", "+        if (tp.isDisplayed())", "+          numVisible++;", "-      if (tp.isDisplayed())", "-        numVisible++;"]}], "num": 12676}