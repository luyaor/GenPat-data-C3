{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5ae52d5fcffd754a6abfe5257a91248", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c56efea7038941ddc45d1459329b138", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AbstractConsoleController.java", "commitBeforeChange": "efc072ede22ea55faaadbf97a73c4466d939ffd3", "commitAfterChange": "0eb7fcb52c65dc5248fffbf667b1fb96b5218a87", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   protected void _setupView()", "signatureAfterChange": "   protected void _setupView()", "diff": ["+    ", "+    _pane.addActionForKeyStroke(DrJava.getConfig().getSetting(OptionConstants.KEY_CUT), cutAction);", "+    _pane.addActionForKeyStroke(DrJava.getConfig().getSetting(OptionConstants.KEY_COPY), copyAction);", "+    DrJava.getConfig().addOptionListener(OptionConstants.KEY_CUT, new OptionListener<KeyStroke>() {", "+      public void optionChanged(OptionEvent<KeyStroke> oe) {", "+        _pane.addActionForKeyStroke(DrJava.getConfig().getSetting(OptionConstants.KEY_CUT), cutAction);", "+     }", "+    });", "+    DrJava.getConfig().addOptionListener(OptionConstants.KEY_COPY, new OptionListener<KeyStroke>() {", "+      public void optionChanged(OptionEvent<KeyStroke> oe) {", "+        _pane.addActionForKeyStroke(DrJava.getConfig().getSetting(OptionConstants.KEY_COPY), copyAction);", "+     }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65347710e22ed55849e828ddd70cfe9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a64d259eb205583970c69af64c3cca967dd81a0f", "commitAfterChange": "9be84f23a860532e5852c80be2ef2d01c63b33b7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DefinitionsDocument(GlobalEventNotifier notifier)", "signatureAfterChange": "   public DefinitionsDocument(GlobalEventNotifier notifier)", "diff": ["-  public DefinitionsDocument(GlobalEventNotifier notifier) {", "-    this(DefaultGlobalModel.INDENTER, notifier);", "+   */", "+  public DefinitionsDocument(GlobalEventNotifier notifier) {", "+", "+    _notifier = notifier;", "+", "+    // Create the indenter from the config values", "+    int ind = DrJava.getConfig().getSetting(INDENT_LEVEL).intValue();", "+    _indenter = new Indenter(ind);", "+    DrJava.getConfig().addOptionListener(INDENT_LEVEL,", "+                                         new OptionListener<Integer>() {", "+      public void optionChanged(OptionEvent<Integer> oce) {", "+        _indenter.buildTree(oce.value.intValue());", "+      }", "+    });", "+    DrJava.getConfig().addOptionListener(AUTO_CLOSE_COMMENTS,", "+                                         new OptionListener<Boolean>() {", "+      public void optionChanged(OptionEvent<Boolean> oce) {", "+        _indenter.buildTree(DrJava.getConfig().getSetting(INDENT_LEVEL).intValue());", "+      }", "+    });", "+", "+    _init();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c50e2f745db97e34aa38dbc8fcc2be7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ColorOptionComponent.java", "commitBeforeChange": "7b8e61b54c444deec40202441181317a86727c3a", "commitAfterChange": "1763dbe8cbfddb4c5dc11b4a5b86d887d31274b9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ColorOptionComponent(ColorOption opt, String text, Frame parent,                               boolean isBackgroundColor)", "signatureAfterChange": "   public ColorOptionComponent(ColorOption opt, String text, Frame parent,                               boolean isBackgroundColor)", "diff": ["-      _colorField.setForeground(Color.black);", "+//      _colorField.setForeground(Color.black);", "+      _colorField.setForeground(DrJava.getConfig().getSetting(OptionConstants.DEFINITIONS_NORMAL_COLOR));", "+      DrJava.getConfig().addOptionListener(OptionConstants.DEFINITIONS_NORMAL_COLOR,", "+                                           new OptionListener<Color>() {", "+        public void optionChanged(OptionEvent<Color> oe) {", "+          _colorField.setForeground(oe.value);", "+        }", "+      });", "-      _colorField.setBackground(Color.white);", "-      // Would be nice to use background color here (need a listener in configframe?)", "-      //_colorField.setBackground(DrJava.getConfig().getSetting(OptionConstants.DEFINITIONS_BACKGROUND_COLOR)););", "-    }", "+//      _colorField.setBackground(Color.white);", "+      _colorField.setBackground(DrJava.getConfig().getSetting(OptionConstants.DEFINITIONS_BACKGROUND_COLOR));", "+       DrJava.getConfig().addOptionListener(OptionConstants.DEFINITIONS_BACKGROUND_COLOR,", "+                                           new OptionListener<Color>() {", "+        public void optionChanged(OptionEvent<Color> oe) {", "+          _colorField.setBackground(oe.value);", "+        }", "+      });", "+   }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d400b6d13349b66cdd38d500cc1b3c7a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "0ef216d80b2e9cc63f2ef7b2c23490480ef77851", "commitAfterChange": "c5aaf72fbd7fa889788e2cd72fe646345421a547", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected void _setupView()", "signatureAfterChange": "   protected void _setupView()", "diff": ["+    DrJava.getConfig().addOptionListener(OptionConstants.KEY_PREVIOUS_WORD, new OptionListener<KeyStroke>() {", "+      public void optionChanged(OptionEvent<KeyStroke> oe) {", "+        _pane.addActionForKeyStroke(DrJava.getConfig().getSetting(OptionConstants.KEY_PREVIOUS_WORD),", "+                                    prevWordAction);", "+      }", "+    });", "+    ", "+    DrJava.getConfig().addOptionListener(OptionConstants.KEY_NEXT_WORD, new OptionListener<KeyStroke>() {", "+      public void optionChanged(OptionEvent<KeyStroke> oe) {", "+        _pane.addActionForKeyStroke(DrJava.getConfig().getSetting(OptionConstants.KEY_NEXT_WORD),", "+                                    nextWordAction);", "+      }", "+    });"]}], "num": 18763}