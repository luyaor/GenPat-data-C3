{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "969d4de351d356693a91767c35a40c05", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0800ae71bb5ad321bc6fe135b85c05a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "6c31f49b491d4a01bd2ddbae62b5ee4f76d52129", "commitAfterChange": "b17c3d3d0edf27a5d35f38839287840198b5808d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     void clipLeft()", "signatureAfterChange": "     void clipLeft()", "diff": ["-     */", "+      */", "-      if (atStart()) {", "-        return;", "-      }", "-      else if (getBlockOffset() == 0) {", "-        remove();", "-      }", "+      if (atStart())  return;", "+      else if (getBlockOffset() == 0)  remove();", "-        this.current().shrink(size - getBlockOffset());", "+        current().shrink(size - getBlockOffset());", "-        if (getBlockOffset() != 1) {", "-          throw new IllegalArgumentException(\"Offset incorrect\");", "-        }", "+        if (getBlockOffset() != 1) throw new IllegalArgumentException(\"Offset incorrect\");", "-          this.current().setType(first);", "+          current().setType(first);", "-      else {", "-        throw new IllegalArgumentException(\"Cannot clip left.\");", "-      }", "+      else throw new IllegalArgumentException(\"Cannot clip left.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7208e2029a79581e4d0a126c01c55791", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "973271a114877f62b3cb122ffc9ab5f28c91b43a", "commitAfterChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     int deleteRight(Iterator delTo)", "signatureAfterChange": "     int deleteRight(Iterator delTo)", "diff": ["-      */", "+    /** Deletes from offset in this to endOffset in delTo. Uses ModelList.collapse to perform quick deletion. */", "-      this.collapse(delTo);", "+      collapse(delTo);", "-      if (this.eq(delTo) && this.current().isGap()) {", "+      if (eq(delTo) && current().isGap()) {", "-        this.current().shrink(delTo.getBlockOffset() - this.getBlockOffset());", "-        return this.getBlockOffset();", "+        current().shrink(delTo.getBlockOffset() - getBlockOffset());", "+        return getBlockOffset();", "-      if (!this.eq(delTo)) {", "-        this.clipLeft();", "-      }", "+      if (! eq(delTo)) clipLeft();", "-      if (!this.atStart()) {", "-        this.prev();", "-      }", "+      if (! atStart()) prev();", "-        this.setTo(delTo);", "+        setTo(delTo);", "-        this.setTo(delTo);", "+        setTo(delTo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "966f72b80ddce66c1657aa96597cd560", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "6c31f49b491d4a01bd2ddbae62b5ee4f76d52129", "commitAfterChange": "b17c3d3d0edf27a5d35f38839287840198b5808d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private int _moveRight(int count, int currentOffset)", "signatureAfterChange": "     private int _moveRight(int count, int currentOffset)", "diff": ["-      if (this.atStart()) {", "+      // Standardize initial position", "+      if (atStart()) {", "-        this.next();", "+        next();", "-      if (this.atEnd()) {", "-        throw new IllegalArgumentException(\"At end\");", "-      }", "-      while (count >= this.current().getSize() - currentOffset) {", "-        count = count - this.current().getSize() + currentOffset;", "-        this.next();", "+      if (atEnd()) throw new IllegalArgumentException(\"At end\");", "+      while (count >= current().getSize() - currentOffset) {", "+        count = count - current().getSize() + currentOffset;", "+        next();", "-        if (this.atEnd()) {", "+        if (atEnd()) {", "-          else {", "-            throw new IllegalArgumentException(\"At end\");", "-          }", "+          else throw new IllegalArgumentException(\"At end\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98656040a2511af9f0c8a633846150c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "973271a114877f62b3cb122ffc9ab5f28c91b43a", "commitAfterChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     void clipRight()", "signatureAfterChange": "     void clipRight()", "diff": ["-      if (this.atEnd()) {", "-        return;", "-      }", "-      else if (this.getBlockOffset() == 0) {", "-        return;", "-      }", "-      else if (this.getBlockOffset() == this.current().getSize()) {", "-        this.remove();", "-      }", "-      else if (this.current().isGap()) {", "-        this.current().shrink(this.getBlockOffset());", "-      }", "-      else if (this.current().isMultipleCharBrace()) {", "-        if (this.getBlockOffset() != 1) {", "-          throw new IllegalArgumentException(\"Offset incorrect\");", "-        }", "+      if (atEnd()) return;", "+      else if (getBlockOffset() == 0) return;", "+      else if (getBlockOffset() == current().getSize()) remove();", "+      else if (current().isGap()) current().shrink(getBlockOffset());", "+      else if (current().isMultipleCharBrace()) {", "+        if (getBlockOffset() != 1) throw new IllegalArgumentException(\"Offset incorrect\");", "-          String type = this.current().getType();", "+          String type = current().getType();", "-          this.current().setType(second);", "+          current().setType(second);", "-      else {", "-        throw new IllegalArgumentException(\"Cannot clip left.\");", "-      }", "+      else throw new IllegalArgumentException(\"Cannot clip left.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc50a3a661ae79a8c9733e1bc62fb7c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "6c31f49b491d4a01bd2ddbae62b5ee4f76d52129", "commitAfterChange": "b17c3d3d0edf27a5d35f38839287840198b5808d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private int _moveLeft(int count, int currentOffset)", "signatureAfterChange": "     private int _moveLeft(int count, int currentOffset)", "diff": ["-      if (this.atEnd()) {", "-        this.prev();", "-        if (!this.atStart()) //make sure list not empty", "-        {", "-          currentOffset = this.current().getSize();", "-        }", "+      ", "+      // Standardize initial position, eliminating 0 offset", "+      if (atEnd()) {", "+        prev();", "+        if (! atStart())  currentOffset = current().getSize(); //make sure list not empty", "-", "-      if (this.atStart()) {", "-        throw new IllegalArgumentException(\"At Start\");", "-      }", "+      if (atStart()) throw new IllegalArgumentException(\"At Start\");", "-        this.prev();", "+        prev();", "-        if (this.atStart()) {", "-          if (count > 0) {", "-            throw new IllegalArgumentException(\"At Start\");", "-          }", "-          else {", "-            this.next();", "-            currentOffset = 0;", "-          }", "-        }", "-        else {", "-          currentOffset = this.current().getSize();", "-        }", "+        if (atStart()) throw new IllegalArgumentException(\"At Start\");  // count > 0", "+        currentOffset = current().getSize();", "-      return currentOffset - count;", "+      return currentOffset - count;  // Note: returned offset can be 0"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec9a3bd449c97485ecedfb6129665bdd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "155978805098b6e2a3078df6585b1402e5c7705e", "commitAfterChange": "25a10abeda1945066d6766970fef196b893518a9", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public static String replaceVariables(String str, PropertyMaps props, Lambda<String,DrJavaProperty> getter)", "signatureAfterChange": "   public static String replaceVariables(String str, PropertyMaps props, Lambda<String,DrJavaProperty> getter)", "diff": ["+                  atok.addQuotes(\"${\", \"}\");", "-                      throw new IllegalArgumentException(\"Unknown attribute list format for property \"+key);", "+                      throw new IllegalArgumentException(\"Unknown attribute list format for property \"+key+\"; expected name, but was \"+n);", "-                      throw new IllegalArgumentException(\"Unknown attribute list format for property \"+key);", "+                      throw new IllegalArgumentException(\"Unknown attribute list format for property \"+key+\"; expected =, but was \"+n);", "-                      throw new IllegalArgumentException(\"Unknown attribute list format for property \"+key);", "+                      throw new IllegalArgumentException(\"Unknown attribute list format for property \"+key+\"; expected \\\", but was \"+n);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3d5053f8959e8ac37b2a7eb1a8ba03c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     void clipLeft()", "signatureAfterChange": "     void clipLeft()", "diff": ["-    */", "+     */", "-      if (this.atStart()) {", "+      if (atStart()) {", "-      else if (this.getBlockOffset() == 0) {", "-        this.remove();", "+      else if (getBlockOffset() == 0) {", "+        remove();", "-      else if (this.current().isGap()) {", "-        int size = this.current().getSize();", "-        this.current().shrink(size-this.getBlockOffset());", "+      else if (current().isGap()) {", "+        int size = current().getSize();", "+        this.current().shrink(size - getBlockOffset());", "-      else if (this.current().isMultipleCharBrace()) {", "-        if (this.getBlockOffset() != 1) {", "+      else if (current().isMultipleCharBrace()) {", "+        if (getBlockOffset() != 1) {", "-          String type = this.current().getType();", "-          String first = type.substring(0,1);", "+          String type = current().getType();", "+          String first = type.substring(0, 1);"]}], "num": 25684}