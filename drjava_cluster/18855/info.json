{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b006f061ebc49dc75ca65936b78a8525", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15b8d4569eeaa410b680ac9c4bdde201", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TopLevelContext.java", "commitBeforeChange": "6b388fb1877469cd91350296fabdf9fe8d522b74", "commitAfterChange": "b5cc61b9509dcda722d6dd7d5605a055e9915381", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public Type typeContainingMethod(String name, TypeSystem ts) throws AmbiguousNameException", "signatureAfterChange": "   public ClassType typeContainingMethod(String name, TypeSystem ts) throws AmbiguousNameException", "diff": ["-  public Type typeContainingMethod(String name, TypeSystem ts) throws AmbiguousNameException {", "+  public ClassType typeContainingMethod(String name, TypeSystem ts) throws AmbiguousNameException {", "-    Type result = explicitImport == null ? null : ts.makeClassType(explicitImport);", "+    ClassType result = explicitImport == null ? null : ts.makeClassType(explicitImport);", "-      LinkedList<Type> onDemandMatches = new LinkedList<Type>();", "+      LinkedList<ClassType> onDemandMatches = new LinkedList<ClassType>();", "-        Type t = ts.makeClassType(c);", "+        ClassType t = ts.makeClassType(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8205c825d6060b9260e07c115e07e6d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TopLevelContext.java", "commitBeforeChange": "6b388fb1877469cd91350296fabdf9fe8d522b74", "commitAfterChange": "b5cc61b9509dcda722d6dd7d5605a055e9915381", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public Type typeContainingField(String name, TypeSystem ts) throws AmbiguousNameException", "signatureAfterChange": "   public ClassType typeContainingField(String name, TypeSystem ts) throws AmbiguousNameException", "diff": ["-  public Type typeContainingField(String name, TypeSystem ts) throws AmbiguousNameException {", "+  public ClassType typeContainingField(String name, TypeSystem ts) throws AmbiguousNameException {", "-    Type result = explicitImport == null ? null : ts.makeClassType(explicitImport);", "+    ClassType result = explicitImport == null ? null : ts.makeClassType(explicitImport);", "-      LinkedList<Type> onDemandMatches = new LinkedList<Type>();", "+      LinkedList<ClassType> onDemandMatches = new LinkedList<ClassType>();", "-        Type t = ts.makeClassType(c);", "+        ClassType t = ts.makeClassType(c);"]}], "num": 18855}