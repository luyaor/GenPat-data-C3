{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e604ade750576edf4ae6b62da7e69902", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d8be9e6f47172566b9165a362c03480", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryVisitor.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public Void forClassDef(ClassDef that)", "signatureAfterChange": "   public Void forClassDef(ClassDef that)", "diff": ["-   */", "+    */", "-      if (! _importedPackages.contains(\"junit.framework\"))", "-        _importedPackages.addFirst(\"junit.framework\");", "+      if (! _importedPackages.contains(\"junit.framework\")) _importedPackages.addFirst(\"junit.framework\");", "+    that.getMav().visit(this);", "+    that.getName().visit(this);", "+    that.getSuperclass().visit(this);", "-    that.getMav().visit(this);", "-    that.getName().visit(this);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cf840d03f144f7ebce1a0dcdfdac412", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 68, "signatureBeforeChange": "   public Void forSourceFile(SourceFile that)", "signatureAfterChange": "   public Void forSourceFile(SourceFile that)", "diff": ["-   */", "+    */", "-    if (! _importedPackages.contains(\"java.lang\"))", "-      _importedPackages.addFirst(\"java.lang\");", "+    if (! _importedPackages.contains(\"java.lang\")) _importedPackages.addFirst(\"java.lang\");", "-      _classesToBeParsed.put(qualifiedClassName, ", "-                             new Pair<TypeDefBase, LanguageLevelVisitor>(types[i], this));", "+      _log.log(\"Adding \" + qualifiedClassName + \" to _classesToBeParsed\");", "+      _classesToBeParsed.put(qualifiedClassName, new Pair<TypeDefBase, LanguageLevelVisitor>(types[i], this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c641b75d5acd8101df2926271802d18b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public Void forSourceFile(SourceFile sf)", "signatureAfterChange": "   public Void forSourceFile(SourceFile sf)", "diff": ["-    ", "-      ", "-    /* If importedPackages contains \"junit.framework\", then we had to import it while type checking this file.  Because", "-     * we assumed it was imported, the generated java file needs to import it as well. */", "-    if (_isElementaryFile() && _llv._importedPackages.contains(\"junit.framework\")) { // Assumes no package statements", "-      _writeToFileOut(\"import junit.framework.*;\" + newLine);", "-    }"]}], "num": 5955}