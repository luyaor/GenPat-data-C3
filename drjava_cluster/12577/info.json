{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2aeab7782fac141d4df843bfb6f9d17c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "543d3771c6717fca56065c198e307c72", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "commitAfterChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public synchronized Vector<StackFrame> getCurrentStackFrames()", "signatureAfterChange": "   public synchronized Vector<StackData> getCurrentStackFrameData()", "diff": ["-  public synchronized Vector<StackFrame> getCurrentStackFrames() {", "+  public synchronized Vector<StackData> getCurrentStackFrameData() {", "-      Vector<StackFrame> frames = new Vector<StackFrame>();", "+      Vector<StackData> frames = new Vector<StackData>();", "-        frames.addElement((StackFrame)iter.next());", "+        frames.addElement(new StackData((StackFrame)iter.next()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8ed483bf156437930ecc66c4dd18cc7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "commitAfterChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public synchronized Vector<ThreadReference> getCurrentThreads()", "signatureAfterChange": "   public synchronized Vector<ThreadData> getCurrentThreadData()", "diff": ["-  public synchronized Vector<ThreadReference> getCurrentThreads() {", "+  public synchronized Vector<ThreadData> getCurrentThreadData() {", "-    Vector<ThreadReference> threads = new Vector<ThreadReference>();", "-    while (iter.hasNext()) {", "-      threads.addElement((ThreadReference)iter.next());", "+    Vector<ThreadData> threads = new Vector<ThreadData>();", "+    while (iter.hasNext()) {      ", "+      threads.addElement(new ThreadData((ThreadReference)iter.next()));                                                  "]}], "num": 12577}