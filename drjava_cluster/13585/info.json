{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c6be056c64bb8f3c8aea26c95ba9505", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00d1d073032c26c4d6d9298ea26ea1ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/DictionaryMap.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 12, "signatureBeforeChange": "       public Set<K> value()", "signatureAfterChange": "      @Override public V value(K key)", "diff": ["-    _keys = LazyThunk.make(new Thunk<Set<K>>() {", "-      public Set<K> value() {", "-        Set<K> result = CollectUtil.asSet(ReadOnceIterable.make(IterUtil.asIterator(_d.keys())));", "-        return Collections.unmodifiableSet(result);", "-      }", "+  @Override public V value(K key) { return _d.get(key); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a6c7e5591ef5bbe2eaa726793a31878", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "commitAfterChange": "ead43466202abb204c90f7ee2c316fec230d4415", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 34, "signatureBeforeChange": "       @Override protected Thunk<? extends TypeSystem> typeSystemFactory()", "signatureAfterChange": "       @Override protected Thunk<? extends TypeSystem> typeSystemFactory()", "diff": ["+      protected abstract TypeSystem makeTypeSystem();", "+      @Override protected Thunk<? extends TypeSystem> typeSystemFactory() {", "+        return LambdaUtil.valueLambda(makeTypeSystem());", "+      }", "-    _options.put(\"ext\", new Options() {", "-      @Override protected Thunk<? extends TypeSystem> typeSystemFactory() {", "-        TypeSystem result = new ExtendedTypeSystem(this);", "-        return LambdaUtil.valueLambda(result);", "-      }"]}], "num": 13585}