{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65a4d87a8657397c33f244aa20d7ea89", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddf4e94c8311176e31fed782ffb5b63b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "commitAfterChange": "35da9b77b7d75aca3d6277e27e3ba3dc86f3eaa9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Vector<HighlightStatus> getHighlightStatus(int start, int end)", "signatureAfterChange": "   public Vector<HighlightStatus> getHighlightStatus(int start, int end)", "diff": ["-    synchronized (_reduced) {", "-      setCurrentLocation(start);", "-    ", "-      // Now ask reduced model for highlight status for chars till end", "-      v = _reduced.getHighlightStatus(start, end - start);", "-    }", "-    ", "-    // Go through and find any NORMAL blocks", "-    // Within them check for keywords", "-    for (int i = 0; i < v.size(); i++) {", "-      HighlightStatus stat = v.get(i);", "-      ", "-      if (stat.getState() == HighlightStatus.NORMAL) {", "-        i = _highlightKeywords(v, i);", "+    readLock();", "+    try {", "+      synchronized (_reduced) {", "+        setCurrentLocation(start);", "+        // Now ask reduced model for highlight status for chars till end", "+        v = _reduced.getHighlightStatus(start, end - start);", "+        ", "+        // Go through and find any NORMAL blocks", "+        // Within them check for keywords", "+        for (int i = 0; i < v.size(); i++) {", "+          HighlightStatus stat = v.get(i);", "+          if (stat.getState() == HighlightStatus.NORMAL) i = _highlightKeywords(v, i);", "+        }", "+    finally { readUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de5b82a64118724fdbaff12925de8c80", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "commitAfterChange": "35da9b77b7d75aca3d6277e27e3ba3dc86f3eaa9", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "signatureAfterChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "diff": ["-    // throwErrorHuh();", "-    String text = getText(DOCSTART, pos);", "-    ", "-    synchronized (_reduced) {", "+    readLock();", "+    try {", "+      String text = getText(DOCSTART, pos);", "-      final int origLocation = _currentLocation;", "-      // Move reduced model to location pos", "-      _reduced.move(pos - origLocation);  // reduced model points to pos == reducedPos", "-      ", "-      // Walk backwards from specificed position", "-      for (i = pos-1; i >= DOCSTART; i--) {", "-        /* Invariant: reduced model points to reducedPos, text[i+1:pos] contains no valid delims, ", "-         * DOCSTART <= i < reducedPos <= pos */", "-        // Check if ith character is one of the delimiters", "-        if (match(text.charAt(i),delims)) {", "-           ", "-          // Move reduced model to walker's location", "-          _reduced.move(i - reducedPos);  // reduced model points to i", "-          reducedPos = i;                 // reduced model points to reducedPos", "+      synchronized (_reduced) {", "+        final int origLocation = _currentLocation;", "+        // Move reduced model to location pos", "+        _reduced.move(pos - origLocation);  // reduced model points to pos == reducedPos", "+        ", "+        // Walk backwards from specificed position", "+        for (i = pos-1; i >= DOCSTART; i--) {", "+          /* Invariant: reduced model points to reducedPos, text[i+1:pos] contains no valid delims, ", "+           * DOCSTART <= i < reducedPos <= pos */", "-          // Check if matching char should be ignored because it is within a comment, ", "-          // quotes, or ignored paren phrase", "-          ReducedModelState state = _reduced.getStateAtCurrent();", "-          if (!state.equals(ReducedModelState.FREE) || _isStartOfComment(text, i)", "-                || ((i > 0) && _isStartOfComment(text, i - 1))", "-                || (skipParenPhrases && posInParenPhrase())) {", "-            continue; // ignore matching char", "-          } ", "-          break;  // found valid matching char", "+          if (match(text.charAt(i),delims)) {", "+            // Move reduced model to walker's location", "+            _reduced.move(i - reducedPos);  // reduced model points to i", "+            reducedPos = i;                 // reduced model points to reducedPos", "+            ", "+            // Check if matching char should be ignored because it is within a comment, ", "+            // quotes, or ignored paren phrase", "+            ReducedModelState state = _reduced.getStateAtCurrent();", "+            if (!state.equals(ReducedModelState.FREE) || _isStartOfComment(text, i)", "+                  || ((i > 0) && _isStartOfComment(text, i - 1)) || (skipParenPhrases && posInParenPhrase()))", "+              continue;  // ignore matching char ", "+            else break;  // found valid matching char", "+          }", "-      }", "-      /* Invariant: same as for loop except that DOCSTART-1 <= i <= reducedPos <= pos */", "-      ", "-        // Restore the state of the reduced model;", "-        _reduced.move(origLocation - reducedPos);", "+        ", "+        /* Invariant: same as for loop except that DOCSTART-1 <= i <= reducedPos <= pos */", "+        ", "+        _reduced.move(origLocation - reducedPos);    // Restore the state of the reduced model;", "+      }  // end synchronized", "+    finally { readUnlock(); }", "-    "]}], "num": 25779}