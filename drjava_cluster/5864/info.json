{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05a84e9c53d16332816a9b74a07061e4", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07d3e794266b860582ee39b58a42db62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "1018be24b33ba74b1be6da8d72dc97e6545e20b1", "commitAfterChange": "c0c2e54a62410a429f0ffcedb26fd38c6f82937b", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public void testCancelSaveAlreadySaved()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCancelSaveAlreadySaved()     throws BadLocationException, IOException", "diff": ["-        assertEquals(\"saved file name\", file, f);", "-        saveCount++;", "+        try {", "+          assertEquals(\"saved file\", file.getCanonicalFile(),", "+                       f.getCanonicalFile());", "+          saveCount++;", "+        }", "+        catch (IOException ioe) {", "+          fail(\"could not get canonical file\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4c16d79a6c1c4eddc54b0b8415295d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "1018be24b33ba74b1be6da8d72dc97e6545e20b1", "commitAfterChange": "c0c2e54a62410a429f0ffcedb26fd38c6f82937b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testCloseUnmodifiedAutomatically()     throws BadLocationException, IOException,       OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   public void testCloseUnmodifiedAutomatically()     throws BadLocationException, IOException,       OperationCanceledException, AlreadyOpenException", "diff": ["-        assertEquals(\"file to open\", tempFile, file);", "-        openCount++;", "+        try {", "+          assertEquals(\"file to open\", tempFile.getCanonicalFile(),", "+                       file.getCanonicalFile());", "+          openCount++;", "+        }", "+        catch (IOException ioe) {", "+          fail(\"could not get canonical file\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe91094b1ca4503544969329a9c56c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "1018be24b33ba74b1be6da8d72dc97e6545e20b1", "commitAfterChange": "c0c2e54a62410a429f0ffcedb26fd38c6f82937b", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "diff": ["-        assertEquals(\"saved file name\", file, f);", "-        saveCount++;", "+        try {", "+          assertEquals(\"saved file\", file.getCanonicalFile(),", "+                       f.getCanonicalFile());", "+          saveCount++;", "+        }", "+        catch (IOException ioe) {", "+          fail(\"could not get canonical file\");", "+        }", "-    assertEquals(\"no backup was made\", false, backup.exists());", "+    assertFalse(\"no backup was made\", backup.exists());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cda173ac23629d5111c68439a02dc7e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "1018be24b33ba74b1be6da8d72dc97e6545e20b1", "commitAfterChange": "c0c2e54a62410a429f0ffcedb26fd38c6f82937b", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void testRealSaveFirstSave() throws BadLocationException, IOException", "signatureAfterChange": "   public void testRealSaveFirstSave() throws BadLocationException, IOException", "diff": ["-        assertEquals(\"saved file name\", file, f);", "-        saveCount++;", "+        try {", "+          assertEquals(\"saved file name\", file.getCanonicalFile(),", "+                       f.getCanonicalFile());", "+          saveCount++;", "+        }", "+        catch (IOException ioe) {", "+          fail(\"could not get canonical file\");", "+        }"]}], "num": 5864}