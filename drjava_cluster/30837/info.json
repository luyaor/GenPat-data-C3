{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5fc3d1604c9714235b386727bbc236dc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e1eb86ed1e077ee20e4c4a7583ddb80", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "commitAfterChange": "b1b91197c778ee62ce767051b412c31f7bcdddb8", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   private void _resumeThread(ThreadReference thread, boolean shouldCopyBack)     throws DebugException", "signatureAfterChange": "   private void _resumeThread(ThreadReference thread, boolean fromStep)     throws DebugException", "diff": ["-  private void _resumeThread(ThreadReference thread, boolean shouldCopyBack)", "+  private void _resumeThread(ThreadReference thread, boolean fromStep)", "-    if (shouldCopyBack) {", "+    if (!fromStep) {", "+      _updateWatches();", "-      removeCurrentDebugInterpreter();", "-      _updateWatches();", "+      _removeCurrentDebugInterpreter(fromStep);", "-    if (!_suspendedThreads.isEmpty()) {", "+    if (!fromStep && !_suspendedThreads.isEmpty()) {", "-    }", "+    }    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f66ae9bd9063f5b263a57c4307f8ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   private void _resumeThread(ThreadReference thread, boolean fromStep)     throws DebugException", "signatureAfterChange": "   private void _resumeThread(ThreadReference thread, boolean fromStep) throws DebugException", "diff": ["-  private void _resumeThread(ThreadReference thread, boolean fromStep)", "-    throws DebugException", "-  {", "+  private void _resumeThread(ThreadReference thread, boolean fromStep) throws DebugException {", "-    if (printMessages) {", "-      printStream.println(\"Getting suspendCount = \" + suspendCount);", "-    }", "+    _log.log(\"Getting suspendCount = \" + suspendCount);", "+"]}], "num": 30837}