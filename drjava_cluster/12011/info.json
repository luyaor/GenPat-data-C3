{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "861ee1df2e5a4da24d1836f517077a22", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e50ee56285bd53c152e58ef7dea0168", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "de413eda4232899a577fad80816630301e25a4de", "commitAfterChange": "1510cae783655f3e20fbad13671dbf97008c3ec2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private void _findAll()", "signatureAfterChange": "   private void _findAll()", "diff": ["-    FindResultsPanel panel = ", "+    final FindResultsPanel panel = ", "-    panel._regTree.scrollRowToVisible(0);", "+    EventQueue.invokeLater(new Runnable() { public void run() { panel._regTree.scrollRowToVisible(0); } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbf19b3cf07c8782f8c9889ad6b4d83d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/javadoc/DefaultJavadocModel.java", "commitBeforeChange": "4827c31f832b0b658b5049b701f441bcd4cd2853", "commitAfterChange": "c9a582a01c4727c2040c438bfb469bb6c612160b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 36, "signatureBeforeChange": "   private void _runJavadoc(Iterable<String> files, File destDir, Iterable<String> extraArgs, boolean allDocs)", "signatureAfterChange": "   private void _runJavadoc(Iterable<String> files, final File destDir, Iterable<String> extraArgs, final boolean allDocs)", "diff": ["-  private void _runJavadoc(Iterable<String> files, File destDir, Iterable<String> extraArgs, boolean allDocs) {", "+  private void _runJavadoc(Iterable<String> files, final File destDir, Iterable<String> extraArgs, final boolean allDocs) {    ", "-    boolean success = _javadocErrorModel.hasOnlyWarnings();", "+    final boolean success = _javadocErrorModel.hasOnlyWarnings();", "-    _notifier.javadocEnded(success, destDir, allDocs);", "+    // Use EventQueue.invokeLater so that notification is deferred when running in the event thread.", "+    EventQueue.invokeLater(new Runnable() { public void run() { _notifier.javadocEnded(success, destDir, allDocs); } });"]}], "num": 12011}