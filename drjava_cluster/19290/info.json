{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1b0268757d129c8cb5f19b33a1c3933", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e7456a2f86de5839e60768deef4171", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 75, "signatureBeforeChange": "   final public Statement ifStatement() throws ParseException", "signatureAfterChange": "   final public Statement ifStatement() throws ParseException", "diff": ["-    t = jj_consume_token(IF);", "-    jj_consume_token(LPAREN);", "-    exp = expression();", "-    jj_consume_token(RPAREN);", "-    stat1 = statement();", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case ELSE:", "-      jj_consume_token(ELSE);", "-      stat2 = statement();", "-      break;", "-    default:", "-      jj_la1[68] = jj_gen;", "-      ;", "-    }", "-      if (stat2 == null) {", "-        {if (true) return new IfThenStatement(exp, stat1,", "-                                   filename,", "-                                   t.beginLine,       t.beginColumn,", "-                                   stat1.getEndLine(), stat1.getEndColumn());}", "-      } else {", "-        {if (true) return new IfThenElseStatement(exp, stat1, stat2,", "-                                       filename,", "-                                       t.beginLine,       t.beginColumn,", "-                                       stat2.getEndLine(), stat2.getEndColumn());}", "+    try {", "+      t = jj_consume_token(IF);", "+      jj_consume_token(LPAREN);", "+      exp = expression();", "+      jj_consume_token(RPAREN);", "+      stat1 = statement();", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case ELSE:", "+        jj_consume_token(ELSE);", "+        stat2 = statement();", "+        break;", "+      default:", "+        jj_la1[69] = jj_gen;", "+        ;", "+        if (stat2 == null) {", "+          {if (true) return new IfThenStatement(exp, stat1,", "+                                     filename,", "+                                     t.beginLine,       t.beginColumn,", "+                                     stat1.getEndLine(), stat1.getEndColumn());}", "+        } else {", "+          {if (true) return new IfThenElseStatement(exp, stat1, stat2,", "+                                         filename,", "+                                         t.beginLine,       t.beginColumn,", "+                                         stat2.getEndLine(), stat2.getEndColumn());}", "+        }", "+    } catch (ParseException pe) {", "+      _throwParseException(pe,\"Invalid if statement\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1e8405f15d96ce81921db4e3fe178d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 47, "signatureBeforeChange": "   final public FormalParameter varArgsFormalParameter() throws ParseException", "signatureAfterChange": "   final public FormalParameter varArgsFormalParameter() throws ParseException", "diff": ["-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case FINAL:", "-      f = jj_consume_token(FINAL);", "-      break;", "-    default:", "-      jj_la1[36] = jj_gen;", "-      ;", "-    }", "-    typ = type();", "-    jj_consume_token(VAR_ARGS);", "-    id = jj_consume_token(IDENTIFIER);", "+    try {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case FINAL:", "+        f = jj_consume_token(FINAL);", "+        break;", "+      default:", "+        jj_la1[37] = jj_gen;", "+        ;", "+      }", "+      typ = type();", "+      jj_consume_token(VAR_ARGS);", "+      id = jj_consume_token(IDENTIFIER);", "+    } catch (ParseException pe) {", "+      _throwParseException(pe, \"Invalid variable arguments formal parameter\");", "+    }"]}], "num": 19290}