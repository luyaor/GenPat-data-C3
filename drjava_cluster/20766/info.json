{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9fe8d7cc82de3145c385806779520c7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e26be3330e41e5e42dd6a87b301b2f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "611afcaf59528294d37f92105e692c81ac320af5", "commitAfterChange": "8714a43a313a1a0d2ca9cc83816dab7a08ff011b", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public int findCharOnLine(int pos, char findChar)", "signatureAfterChange": "   public int findCharOnLine(int pos, char findChar)", "diff": ["+    ", "+    // Move to start of line", "+    /*", "+    _reduced.move(lineStart - here);", "+    int reducedPos = lineStart;", "+    int prevI = 0;", "+    */", "+    ", "-      this.getReduced().move(i + lineStart - here);", "+      int matchIndex = i + lineStart;", "+      _reduced.move(matchIndex - here);", "+      //int dist = i - prevI;", "+      //_reduced.move(dist);", "+      //reducedPos = reducedPos + dist;", "-      if (!this.getReduced().getStateAtCurrent().equals(ReducedModelState.FREE)) {", "+      if (!_reduced.getStateAtCurrent().equals(ReducedModelState.FREE)) {", "-        this.getReduced().move(here - (i + lineStart));", "-        _storeInCache(key, new Integer(i + lineStart));", "-        return (i + lineStart);", "+        //_reduced.move(here - reducedPos);", "+        _reduced.move(here - matchIndex);", "+        _storeInCache(key, new Integer(matchIndex));", "+        return matchIndex;", "-      this.getReduced().move(here - (i + lineStart));", "+      _reduced.move(here - matchIndex);", "+      ", "+      //prevI = i;", "+    ", "+    //_reduced.move(here - reducedPos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfb94d1cc83d45d83af4b0ef93ef45e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "8b24a954c4ca31d0bfd4e6cf29968bdfd85074dd", "commitAfterChange": "7a16360ed3db92a5068288b3b626cc549d236342", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public int findCharOnLine(int pos, char findChar)", "signatureAfterChange": "   public int findCharOnLine(int pos, char findChar)", "diff": ["-      if((this.getReduced().getStateAtCurrent().equals(ReducedModelState.INSIDE_LINE_COMMENT)) ||", "-         (this.getReduced().getStateAtCurrent().equals(ReducedModelState.INSIDE_BLOCK_COMMENT)) ||", "-         (this.getReduced().getStateAtCurrent().equals(ReducedModelState.INSIDE_SINGLE_QUOTE)) ||", "-         (this.getReduced().getStateAtCurrent().equals(ReducedModelState.INSIDE_DOUBLE_QUOTE))) {", "-           // Ignore matching char", "-         } else {", "-           // Return position of matching char", "-           this.getReduced().move(reducedAbsOffset - (i + lineStart));", "-           return (i + lineStart);", "-         }", "+      if (!this.getReduced().getStateAtCurrent().equals(ReducedModelState.FREE)) {", "+        // Ignore matching char", "+      } else {", "+        // Return position of matching char", "+        this.getReduced().move(reducedAbsOffset - (i + lineStart));", "+        return (i + lineStart);", "+      }"]}], "num": 20766}