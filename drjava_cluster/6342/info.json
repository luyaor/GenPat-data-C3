{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb35ab498dd5c4c25c6e1750382af49c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa0b7aeb3f3ef885b241b0967db01465", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 270, "methodNumberAfterChange": 268, "signatureBeforeChange": "     public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "signatureAfterChange": "     public R value(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "diff": ["+    public FlattenedLambda4(Lambda<? super Quad<T1, T2, T3, T4>, ? extends R> lambda) { _lambda = lambda; }", "+    public R value(T1 arg1, T2 arg2, T3 arg3, T4 arg4) {", "+      return _lambda.value(new Quad<T1, T2, T3, T4>(arg1, arg2, arg3, arg4));", "+    }", "-    public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4) { return !_p.value(arg1, arg2, arg3, arg4); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4f5c09533afbd27f219df0db0ac6877", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 221, "signatureBeforeChange": "        public Boolean value(T1 arg1, T2 arg2)", "signatureAfterChange": "     public Boolean value(T1 arg1, T2 arg2)", "diff": ["+    public NegationPredicate2(Predicate2<? super T1, ? super T2> p) { _p = p; }", "+    public Boolean value(T1 arg1, T2 arg2) { return !_p.value(arg1, arg2); }", "-    return new Predicate2<T1, T2>() { ", "-      public Boolean value(T1 arg1, T2 arg2) { return !pred.value(arg1, arg2); }"]}], "num": 6342}