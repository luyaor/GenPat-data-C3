{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65dd7ce83fb541839c36f2c48cf5dfb0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39f3f239061f0cb64693459353aa944e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "aa7f147d71330aa12463dfbc7a233e3ed25560e6", "commitAfterChange": "cfaac02e8e33f506b730c3f8ce96676d16b8f705", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "    public void interpret(final String s)", "signatureAfterChange": "    public void interpret(final String s)", "diff": ["-      //_log.log(\"main.interp: \" + s);", "+      _log.log(\"main.interp: \" + s);", "-    ", "-    // Spawn thread on this side (receive result \"immediately\")", "-    /*", "-    Thread thread = new Thread(\"interpret thread: \" + s) {", "-      public void run() {", "-        try {", "-          //System.err.println(\"interpret to \" + _interpreterJVM() + \": \" + s);", "-          InterpretResult result = _interpreterJVM().interpret(s);", "-          _log.log(\"main.interp: \" + s + \" --> \" + result);", "-          result.apply(getResultHandler());", "-        }", "-        catch (java.rmi.UnmarshalException ume) {", "-          // Could not receive result from interpret; system probably exited.", "-          // We will silently fail and let the interpreter restart.", "-          _log.log(\"main.interp: UnmarshalException, so interpreter is dead:\\n\"", "-                     + ume);", "-        }", "-        catch (RemoteException re) {", "-          _threwException(re);", "-        }", "-      }", "-    };", "-", "-    thread.setDaemon(true);", "-    thread.start();", "-    */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0234ab357d66981a2ca946ea777d8eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void interpret(String s)", "signatureAfterChange": "    public void interpret(final String s)", "diff": ["-  public void interpret(String s) {", "+  public void interpret(final String s) {", "+    // silently fail if diabled. see killInterpreter docs for details.", "+    if (! _enabled) return;", "+", "+    /*", "-      //System.err.println(\"interpret to \" + _interpreterJVM + \": \" + s);", "-      _interpreterJVM.interpret(s);", "+      //_log.log(\"main.interp: \" + s);", "+      _interpreterJVM().interpret(s);", "+    */", "+    ", "+    Thread thread = new Thread(\"interpret thread: \" + s) {", "+      public void run() {", "+        try {", "+          //System.err.println(\"interpret to \" + _interpreterJVM() + \": \" + s);", "+          InterpretResult result = _interpreterJVM().interpret(s);", "+          _log.log(\"main.interp: \" + s + \" --> \" + result);", "+          result.apply(getResultHandler());", "+        }", "+        catch (java.rmi.UnmarshalException ume) {", "+          // Could not receive result from interpret; system probably exited.", "+          // We will silently fail and let the interpreter restart.", "+          _log.log(\"main.interp: UnmarshalException, so interpreter is dead:\\n\"", "+                     + ume);", "+        }", "+        catch (RemoteException re) {", "+          _threwException(re);", "+        }", "+      }", "+    };", "+", "+    thread.setDaemon(true);", "+    thread.start();"]}], "num": 29875}