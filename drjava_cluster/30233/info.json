{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be0f41e60818c5d5e73b455083ee767b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0300fc70e30952a65ace18c9b0f01f7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "7b3e2baaa631329b7e3233840fa805eba66e7b61", "commitAfterChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 42, "signatureBeforeChange": "   private boolean \t_combineCurrentAndNextIfFind(String first, String second, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private boolean \t_combineCurrentAndNextIfFind(String first, String second, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-\t\t\t\t\t// delete the first Brace and augment the second", "+\t\t\t\t\t// the backslash examples.", "+\t\t\t\t\t// \\-\\\\", "+\t\t\t\t\telse if ((copyCursor.current().getType().equals(\"\\\\\\\\\")) &&", "+\t\t\t\t\t\t\t\t\t (copyCursor.prevItem().getType().equals(\"\\\\\")))", "+\t\t\t\t\t\t{", "+\t\t\t\t\t\t\tcopyCursor.current().setType(\"\\\\\");", "+\t\t\t\t\t\t\tcopyCursor.prev();", "+\t\t\t\t\t\t\tcopyCursor.current().setType(\"\\\\\\\\\");", "+\t\t\t\t\t\t\tcopyCursor.current().setState(ReducedToken.FREE);", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t} // \\-\\\"", "+\t\t\t\t\telse if ((copyCursor.current().getType().equals(\"\\\\\\\"\")) &&", "+\t\t\t\t\t\t\t\t\t (copyCursor.prevItem().getType().equals(\"\\\\\")))", "+\t\t\t\t\t\t{", "+\t\t\t\t\t\t\tcopyCursor.current().setType(\"\\\"\");", "+\t\t\t\t\t\t\tcopyCursor.prev();", "+\t\t\t\t\t\t\tcopyCursor.current().setType(\"\\\\\\\\\");", "+\t\t\t\t\t\t\tcopyCursor.current().setState(ReducedToken.FREE);", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t}", "+// delete the first Brace and augment the second"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a311ff941ee646509ab826e1c260c472", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "d8dc2cdeba22db2fb0316de83a445bb83f56ae4d", "commitAfterChange": "fecb09777cd63cca239611fe19e85d2f0e8401e9", "methodNumberBeforeChange": 637, "methodNumberAfterChange": 7, "signatureBeforeChange": "    final private boolean jj_3R_556()", "signatureAfterChange": "    private void checkModifiers(int flags, int notAllowed) throws ParseException", "diff": ["+  private void checkModifiers(int flags, int notAllowed) throws ParseException {", "+    if(Modifier.isPublic(flags) && Modifier.isPublic(notAllowed))", "+      _throwParseException(\"Modifier public is not allowed here\");", "+    if(Modifier.isPrivate(flags) && Modifier.isPrivate(notAllowed))", "+      _throwParseException(\"Modifier private is not allowed here\");", "+    if(Modifier.isProtected(flags) && Modifier.isProtected(notAllowed))", "+      _throwParseException(\"Modifier protected is not allowed here\");", "+    if(Modifier.isAbstract(flags) && Modifier.isAbstract(notAllowed))", "+      _throwParseException(\"Modifier abstract is not allowed here\");", "+    if(Modifier.isFinal(flags) && Modifier.isFinal(notAllowed))", "+      _throwParseException(\"Modifier final is not allowed here\");", "+    if(Modifier.isStatic(flags) && Modifier.isStatic(notAllowed))", "+      _throwParseException(\"Modifier static is not allowed here\");", "+    if(Modifier.isNative(flags) && Modifier.isNative(notAllowed))", "+      _throwParseException(\"Modifier native is not allowed here\");", "+    if(Modifier.isSynchronized(flags) && Modifier.isSynchronized(notAllowed))", "+      _throwParseException(\"Modifier synchronized is not allowed here\");", "+    if(Modifier.isTransient(flags) && Modifier.isTransient(notAllowed))", "+      _throwParseException(\"Modifier transient is not allowed here\");", "+    if(Modifier.isVolatile(flags) && Modifier.isVolatile(notAllowed))", "+      _throwParseException(\"Modifier volatile is not allowed here\");", "+  }", "-  final private boolean jj_3R_556() {", "-    if (jj_scan_token(PROTECTED)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2b0e82bbda32ce97f2af9b42928323", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/ScrollableListDialogTest.java", "commitBeforeChange": "60280b438c8e4415d1e3fb7cae7f2c5284f4ab7d", "commitAfterChange": "f1e49fbbed5c92cb9e03198e54bd2a4b521e7d76", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testValidMessageTypes()", "signatureAfterChange": "   public void testValidMessageTypes()", "diff": ["-      new  ScrollableListDialog(null, TITLE, LEADER, DATA, JOptionPane.ERROR_MESSAGE);", "+      new  ScrollableListDialog.Builder<String>()", "+        .setOwner(null).setTitle(TITLE).setText(LEADER).setItems(DATA).setMessageType(JOptionPane.ERROR_MESSAGE).build();", "-      new  ScrollableListDialog(null, TITLE, LEADER, DATA, JOptionPane.INFORMATION_MESSAGE);", "+      new  ScrollableListDialog.Builder<String>()", "+        .setOwner(null).setTitle(TITLE).setText(LEADER).setItems(DATA).setMessageType(JOptionPane.INFORMATION_MESSAGE).build();", "-      new  ScrollableListDialog(null, TITLE, LEADER, DATA, JOptionPane.WARNING_MESSAGE);", "+      new  ScrollableListDialog.Builder<String>()", "+        .setOwner(null).setTitle(TITLE).setText(LEADER).setItems(DATA).setMessageType(JOptionPane.WARNING_MESSAGE).build();", "-      new  ScrollableListDialog(null, TITLE, LEADER, DATA, JOptionPane.QUESTION_MESSAGE);", "+      new  ScrollableListDialog.Builder<String>()", "+        .setOwner(null).setTitle(TITLE).setText(LEADER).setItems(DATA).setMessageType(JOptionPane.QUESTION_MESSAGE).build();", "-      new  ScrollableListDialog(null, TITLE, LEADER, DATA, JOptionPane.PLAIN_MESSAGE);", "+      new  ScrollableListDialog.Builder<String>()", "+        .setOwner(null).setTitle(TITLE).setText(LEADER).setItems(DATA).setMessageType(JOptionPane.PLAIN_MESSAGE).build();", "-      new  ScrollableListDialog(null, TITLE, LEADER, DATA, -128);", "+      new  ScrollableListDialog.Builder<String>()", "+        .setOwner(null).setTitle(TITLE).setText(LEADER).setItems(DATA).setMessageType(-128).build();", "-      new  ScrollableListDialog(null, TITLE, LEADER, DATA, 42);", "+      new  ScrollableListDialog.Builder<String>()", "+        .setOwner(null).setTitle(TITLE).setText(LEADER).setItems(DATA).setMessageType(42).build();"]}], "num": 30233}