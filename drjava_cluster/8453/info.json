{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93dd34d85fcaf9b06b2bdfdef46d60f6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f2ac5aa6ab172799c360a06a5172bd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testVerifyErrorHandledCorrectly() throws Exception", "signatureAfterChange": "   public void testVerifyErrorHandledCorrectly() throws Exception", "diff": ["-    saveFile(doc, new FileSelector(file));", "+    doc.saveFile(new FileSelector(file));", "-    saveFile(doc2, new FileSelector(file2));", "+    doc2.saveFile(new FileSelector(file2));", "-    final OpenDefinitionsDocument doc3 = setupDocument(ABC_CLASS_TWO);", "+    OpenDefinitionsDocument doc3 = setupDocument(ABC_CLASS_TWO);", "-    saveFile(doc3, new FileSelector(file3));", "+    doc3.saveFile(new FileSelector(file3));", "-    ", "-    _model.addListener(listener);", "-    ", "-    listener.compile(doc3);", "-", "+    doc3.startCompile();", "-    listener.resetCounts();", "+    _model.addListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a1842b4ea5436b3e54a00f47ac89946", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testCompileClassPathOKDefaultPackage()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileClassPathOKDefaultPackage()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    saveFile(doc1, new FileSelector(fooFile));", "+    doc1.saveFile(new FileSelector(fooFile));", "-    testStartCompile(doc1);", "-    listener.waitCompileDone();", "+    doc1.startCompile();", "-    saveFile(doc2, new FileSelector(foo2File));", "+    doc2.saveFile(new FileSelector(foo2File));", "-    testStartCompile(doc2);", "-    listener2.waitCompileDone();", "+    doc2.startCompile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1c04fd61f13c9ee68a72cc5164a5320", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testCompileClassPathOKDifferentPackages() throws BadLocationException, IOException, InterruptedException,     InvalidPackageException", "signatureAfterChange": "   public void testCompileClassPathOKDifferentPackages() throws BadLocationException, IOException, InterruptedException,     InvalidPackageException", "diff": ["-    saveFile(doc1, new FileSelector(fooFile));", "+    doc1.saveFile(new FileSelector(fooFile));", "-    testStartCompile(doc1);", "-    ", "-    listener.waitCompileDone();", "+    doc1.startCompile();", "-    saveFile(doc2, new FileSelector(foo2File));", "+    doc2.saveFile(new FileSelector(foo2File));", "-    testStartCompile(doc2);", "-    listener2.waitCompileDone();", "+    doc2.startCompile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e608358042d7b6b8d89ccfe2d92fa439", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "signatureAfterChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "diff": ["-    if (printMessages) System.err.println(\"-----testUnsavedAndUnCompiledChanges-----\");", "+    if (printMessages) System.out.println(\"-----testUnsavedAndUnCompiledChanges-----\");", "-    saveFile(doc, new FileSelector(file));", "+    doc.saveFile(new FileSelector(file));", "-    testStartCompile(doc);", "+    doc.startCompile();", "-    listener.waitCompileDone();", "-    if (printMessages) System.err.println(\"after test\");", "+    if (printMessages) System.out.println(\"after test\");", "-    saveFile(doc, new FileSelector(file));", "+    doc.saveFile(new FileSelector(file));"]}], "num": 8453}