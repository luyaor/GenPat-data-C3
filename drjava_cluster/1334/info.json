{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c39a1d3717a443e97910770d175db4f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7508893daf56cb502bcb672f99585cfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "b4cb953a15f76465c4fdfdd0a3efe47737f78efc", "commitAfterChange": "da8b20243b85298aada190df10fa721e07aae787", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 153, "signatureBeforeChange": "              public void forWildcard(Wildcard t)", "signatureAfterChange": "          public void forWildcard(Wildcard t)", "diff": ["+    ", "+    public void forWildcard(Wildcard t) {", "+      _result.append(\"?\");", "+      if (!isEqual(t.symbol().upperBound(), OBJECT)) {", "+        _result.append(\" extends \");", "+        run(t.symbol().upperBound());", "+      }", "+      if (!isEqual(t.symbol().lowerBound(), NULL)) {", "+        _result.append(\" super \");", "+        run(t.symbol().lowerBound());", "+      }", "+    }", "-      ", "-      public void forWildcard(Wildcard t) {", "-        result.append(\"?\");", "-        if (!isEqual(t.symbol().upperBound(), OBJECT)) {", "-          result.append(\" extends \");", "-          run(t.symbol().upperBound());", "-        }", "-        if (!isEqual(t.symbol().lowerBound(), NULL)) {", "-          result.append(\" super \");", "-          run(t.symbol().lowerBound());", "-        }", "-      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1118774f49915744f3b24d3255832d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "e7fa83968a0076b95166203c3ff9a5bddde8dfee", "commitAfterChange": "b2bccf49a3d470addd7a5aec1fd2eaf00accbe3b", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "      public boolean isPrimitiveConvertible(Type t)", "signatureAfterChange": "      public boolean isPrimitiveConvertible(Type t)", "diff": ["-      isSubtype(t, BOOLEAN_CLASS) || ", "-      isSubtype(t, CHARACTER_CLASS) ||", "-      isSubtype(t, BYTE_CLASS) ||", "-      isSubtype(t, SHORT_CLASS) ||", "-      isSubtype(t, INTEGER_CLASS) ||", "-      isSubtype(t, LONG_CLASS) ||", "-      isSubtype(t, FLOAT_CLASS) ||", "-      isSubtype(t, DOUBLE_CLASS);", "+      (!isSubtype(t, NULL) &&", "+       (isSubtype(t, BOOLEAN_CLASS) || ", "+        isSubtype(t, CHARACTER_CLASS) ||", "+        isSubtype(t, BYTE_CLASS) ||", "+        isSubtype(t, SHORT_CLASS) ||", "+        isSubtype(t, INTEGER_CLASS) ||", "+        isSubtype(t, LONG_CLASS) ||", "+        isSubtype(t, FLOAT_CLASS) ||", "+        isSubtype(t, DOUBLE_CLASS)));"]}], "num": 1334}