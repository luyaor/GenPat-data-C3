{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f0a2e03aa07b66e8fb6eb3bd29c14e4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d76f9de3797eea40d1d8d730bc9bbd7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "5293cb4cfbc2f45d6061ba4101ad60348aa251ed", "commitAfterChange": "f68f43e5a680bb235f87f6125c6c0de6d15a12f4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 10, "signatureBeforeChange": "         public String forUnexpectedException(Throwable t)", "signatureAfterChange": "   public String getVariableType(String var)", "diff": ["-        public String forException(String msg) { return \"\"; }", "-        public String forUnexpectedException(Throwable t) { throw new UnexpectedException(t); }", "+  public String getVariableType(String var) {", "+    // silently fail if disabled. see killInterpreter docs for details.", "+    if (! _restart) return null;", "+    ", "+    InterpreterJVMRemoteI interpreter = ensureInterpreterConnected();", "+    try { return interpreter.getVariableType(var); }", "+    catch (RemoteException e) { _threwException(e); return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef0a8e0f9181b53af1707a4aa4795d29", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void addDebugInterpreter(String name, String className)", "signatureAfterChange": "   public void addInterpreter(String name)", "diff": ["+  public void addInterpreter(String name) {", "+    try { slave.addInterpreter(name);  }", "-   */", "-  public void addDebugInterpreter(String name, String className) {", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (! _restart) return;", "-    ", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.addDebugInterpreter(name, className); }", "-    catch (RemoteException re) { _threwException(re); }"]}], "num": 28449}