{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff53ca4bb41f7dd693f872782a69d058", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18013ada5796ef15bd048a4fd9811cd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/DelegatingRelation.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public DelegatingRelation(Relation<T1, T2> delegate)", "signatureAfterChange": "   public DelegatingRelation(Relation<T1, T2> delegate)", "diff": ["+  protected final Relation<T1, T2> _delegate; // field is redundant, but prevents a lot of useless casts ", "+  public DelegatingRelation(Relation<T1, T2> delegate) { super(delegate); _delegate = delegate; }", "-  public DelegatingRelation(Relation<T1, T2> delegate) { super(delegate); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1def32e81637ce9819ca3eb0defc6f39", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 221, "methodNumberAfterChange": 260, "signatureBeforeChange": "       public Type forSimpleClassType(SimpleClassType t)", "signatureAfterChange": "     public PredicateSet<T> findFirst(Type t)", "diff": ["-      public Type defaultCase(Type t) { throw new IllegalArgumentException(); }", "-      public Type forSimpleClassType(SimpleClassType t) { return immediateSupertype(t); }", "+     */", "+    public PredicateSet<T> findFirst(Type t) { return find(t, false); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3419fab5c03ba9663accad5980683931", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/DelegatingRelation.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public Relation<T2, T1> inverse()", "signatureAfterChange": "   public Relation<T2, T1> inverse()", "diff": ["-  ", "-  public Relation<T2, T1> inverse() {", "-    return ((Relation<T1, T2>) _delegate).inverse();", "-  }", "+  public boolean remove(T1 first, T2 second) { return _delegate.remove(first, second); }", "+  public Relation<T2, T1> inverse() { return _delegate.inverse(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b233d76c468d19996a6a4df185990755", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 226, "methodNumberAfterChange": 45, "signatureBeforeChange": "       public Type value(Type t)", "signatureAfterChange": "      public Option<Type> dynamicallyEnclosingType(Type t)", "diff": ["+  public Option<Type> dynamicallyEnclosingType(Type t) { return t.apply(DYNAMICALLY_ENCLOSING); }", "-    Iterable<Type> erasedSups = IterUtil.map(t.ofClass().declaredSupertypes(), new Lambda<Type, Type>() {", "-      public Type value(Type t) { return t.apply(ERASE); }"]}], "num": 28923}