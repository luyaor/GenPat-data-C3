{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9a8390eef3d43669f68fcd8d32f0eef", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bd9e250fe013cb9ca029dc2ede24ad9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "7d7d651695cc4a26c75cdfb50217f79acc4c45a4", "commitAfterChange": "641e8d72a9e70ecaee90e1431ba7ab971af51ca9", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      public void testSystemIn()", "signatureAfterChange": "      public void testSystemIn()", "diff": ["-      assertEquals(\"Should have returned the correct text.\", \"test-text\\n\", buf.toString());", "+      // we don't expect the newline anymore, this is now added by the input box", "+      assertEquals(\"Should have returned the correct text.\", \"test-text\", buf.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8683dbeb184d2b4128c9bc11d2c4eae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "4ae3dba211535b42e36ea3344ccafcfcc3ff3edd", "commitAfterChange": "90464e2ed7c77705e57d251eb7f4b67e377039d6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "    public void testAccessNullFieldsAndFinalLocalVariables()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "signatureAfterChange": "    public void testAccessNullFieldsAndFinalLocalVariables()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "diff": ["-    assertEquals(\"The value of localVar should not have changed\", \"11\", interpret(\"localVar\"));", "+    /* The Following test is commented out TEMPORARILY to work around bug in JDK 1.5 Beta2 JVM */", "+    // assertEquals(\"The value of localVar should not have changed\", \"11\", interpret(\"localVar\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c34368f6f06153699823234689132ae0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExprParserTest.java", "commitBeforeChange": "22d657e12f9772e827da127651c8e929ac3086b2", "commitAfterChange": "b00da75251cc187a59120994342504cc3f5e9bfa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testParseSucceeds() throws IOException, ParseException", "signatureAfterChange": "   public void testParseSucceeds() throws IOException, ParseException", "diff": ["-      assertEquals(\"The resulting SourceFile generated from \" + currFile + \" is not correct.\", text, sf.toString());", "+      assertEquals(\"The resulting SourceFile generated from \" + currFile + \" is not correct.\",", "+                   lf(text),", "+                   lf(sf.toString()));"]}], "num": 22135}