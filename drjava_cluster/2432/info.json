{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "37543e77521a1c43e978ed83ac8d8e14", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b3e98b6e53db7ae3dfb5daf23b2600b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testStaticFieldsConsistent()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testStaticFieldsConsistent() throws Exception", "diff": ["-  public void testStaticFieldsConsistent()", "-    throws DebugException, BadLocationException, DocumentAdapterException,", "-    IOException, InterruptedException", "-  {", "+  public void testStaticFieldsConsistent() throws Exception {", "-    ", "-    // Compile the class", "-    File file = new File(_tempDir, \"DrJavaDebugStaticField.java\");", "-    OpenDefinitionsDocument doc = doCompile(CLASS_WITH_STATIC_FIELD, file);", "-    ", "-    // Start debugger", "-    synchronized(_notifierLock) {", "-      _debugger.startup();", "-      _waitForNotifies(1);  // startup", "-      _notifierLock.wait();", "-    }", "-    debugListener.assertDebuggerStartedCount(1);", "+    // Start up", "+    OpenDefinitionsDocument doc = _startupDebugger(\"DrJavaDebugStaticField.java\",", "+                                                   CLASS_WITH_STATIC_FIELD);", "+    // Set a breakpoint", "-    // Run the foo() method, hitting breakpoint", "+    // Run the main method, hitting breakpoint", "-    // Close doc and make sure breakpoints are removed", "-    _model.closeFile(doc);", "-    debugListener.assertBreakpointRemovedCount(1);  //fires (no waiting)", "-    ", "-    // Shutdown the debugger", "-    if (printMessages) {", "-      System.out.println(\"Shutting down...\");", "-    }", "-    InterpretListener interpretListener = new InterpretListener() {", "-       public void interpreterChanged(boolean inProgress) {", "-         // Don't notify: happens in the same thread", "-        interpreterChangedCount++;", "-       }", "-     };", "-    _model.addListener(interpretListener);", "-    synchronized(_notifierLock) {", "-      _debugger.shutdown();", "-      _waitForNotifies(2);  // interactionEnded, shutdown", "-      _notifierLock.wait();", "-    }", "-    interpretListener.assertInteractionEndCount(1);", "-    _model.removeListener(interpretListener);", "-    ", "-    debugListener.assertDebuggerShutdownCount(1);  //fires", "-    if (printMessages) {", "-      System.out.println(\"Shut down.\");", "-    }", "+    // Shut down", "+    _shutdownAndWaitForInteractionEnded();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a29cabf512014b29da7e52684ff1bb4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testStaticWatches()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testStaticWatches() throws Exception", "diff": ["-  public void testStaticWatches()", "-    throws DebugException, BadLocationException, DocumentAdapterException,", "-    IOException, InterruptedException", "-  {", "+  public void testStaticWatches() throws Exception {", "-    ", "-    // Compile the class", "-    File file = new File(_tempDir, \"MonkeyStaticStuff.java\");", "-    OpenDefinitionsDocument doc = doCompile(MONKEY_STATIC_STUFF, file);", "-    ", "-    // Start debugger", "-    synchronized(_notifierLock) {", "-      _debugger.startup();", "-      _waitForNotifies(1);  // startup", "-      _notifierLock.wait();", "-    }", "-    debugListener.assertDebuggerStartedCount(1);", "+    // Start up", "+    OpenDefinitionsDocument doc = _startupDebugger(\"MonkeyStaticStuff.java\",", "+                                                   MONKEY_STATIC_STUFF);", "+    // Set a breakpoint", "-    // Run the foo() method, hitting breakpoint", "+    // Run an inner method, hitting breakpoint", "-    ", "-//    if (printMessages) {", "-//      System.out.println(\"first step\");", "-//    }", "-//    // Step to line 14", "-//    synchronized(_notifierLock){", "-//      _asyncStep(Debugger.STEP_OVER);", "-//      _waitForNotifies(2);  // suspended, updated", "-//      _notifierLock.wait();", "-//    }", "-//    debugListener.assertStepRequestedCount(1);  // fires (don't wait)", "-//    debugListener.assertCurrThreadResumedCount(1); // fires (don't wait)", "-//    debugListener.assertThreadLocationUpdatedCount(2);  // fires", "-//    debugListener.assertCurrThreadSuspendedCount(2);  // fires", "-//    debugListener.assertBreakpointReachedCount(1);", "-//    debugListener.assertCurrThreadDiedCount(0);", "-    // Close doc and make sure breakpoints are removed", "-    _model.closeFile(doc);", "-    debugListener.assertBreakpointRemovedCount(1);  //fires (no waiting)", "-    ", "-    // Shutdown the debugger", "-    if (printMessages) {", "-      System.out.println(\"Shutting down...\");", "-    }", "-    InterpretListener interpretListener = new InterpretListener() {", "-       public void interpreterChanged(boolean inProgress) {", "-         // Don't notify: happens in the same thread", "-        interpreterChangedCount++;", "-       }", "-     };", "-    _model.addListener(interpretListener);", "-    synchronized(_notifierLock) {", "-      _debugger.shutdown();", "-      _waitForNotifies(2);  // interactionEnded, shutdown", "-      _notifierLock.wait();", "-    }", "-    interpretListener.assertInteractionEndCount(1);", "-    _model.removeListener(interpretListener);", "-    ", "-    debugListener.assertDebuggerShutdownCount(1);  //fires", "-    if (printMessages) {", "-      System.out.println(\"Shut down.\");", "-    }", "+    // Shut down", "+    _shutdownAndWaitForInteractionEnded();"]}], "num": 2432}