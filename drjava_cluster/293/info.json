{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24f5df59a138d74dba35dcd83957662f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a434dc368d4c686f8976f6075a2619c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "b121ed20db87231f3836df8854d99256d5781f05", "commitAfterChange": "5e4fadedf6da2c2718ee8846afe69f5d1e599662", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private Iterable<JDKToolsLibrary> findLibraries()", "signatureAfterChange": "      private Iterable<JDKToolsLibrary> findLibraries()", "diff": ["-      if (!results.containsKey(coarsenVersion(tVersion))) {", "-        JarJDKToolsLibrary.msg(\"From search: \"+t);", "-        results.put(coarsenVersion(tVersion), t);", "+      JarJDKToolsLibrary.msg(\"From search: \"+t);", "+      JavaVersion.FullVersion coarsenedVersion = coarsenVersion(tVersion);", "+      JarJDKToolsLibrary.msg(\"\\ttVersion: \"+tVersion+\" \"+tVersion.vendor());", "+      JarJDKToolsLibrary.msg(\"\\tcoarsenedVersion: \"+coarsenedVersion+\" \"+coarsenedVersion.vendor());", "+      if (!results.containsKey(coarsenedVersion)) {", "+        JarJDKToolsLibrary.msg(\"\\tadded\");", "+        results.put(coarsenedVersion, t);", "-      else { JarJDKToolsLibrary.msg(\"From search: duplicate \"+t); }", "+      else { JarJDKToolsLibrary.msg(\"\\tduplicate\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97dc28f88c3e868b066f3fd7d7942579", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ecd8712b87b08f04e81a172c17c295c61485659a", "commitAfterChange": "e240585fa71c6cba067e4f383e2111594b5db4e4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         private Iterable<JDKToolsLibrary> findLibraries()", "signatureAfterChange": "         private Iterable<JDKToolsLibrary> findLibraries()", "diff": ["-    Map<JavaVersion, JDKToolsLibrary> results = new TreeMap<JavaVersion, JDKToolsLibrary>();", "+    Map<JavaVersion.FullVersion, JDKToolsLibrary> results = new TreeMap<JavaVersion.FullVersion, JDKToolsLibrary>();", "-      if (fromConfig.isValid()) { results.put(fromConfig.version().majorVersion(), fromConfig); }", "+      if (fromConfig.isValid()) { results.put(fromConfig.version().majorVersion().fullVersion(), fromConfig); }", "-    if (fromRuntime.isValid() && !results.containsKey(runtimeVersion)) { results.put(runtimeVersion, fromRuntime); }", "+    if (fromRuntime.isValid() && !results.containsKey(runtimeVersion)) { results.put(runtimeVersion.fullVersion(), fromRuntime); }", "-      JavaVersion tVersion = t.version().majorVersion();", "-      // guaranteed to be valid", "+      JavaVersion.FullVersion tVersion = t.version();", "+      if (!DrJava.getConfig().getSetting(edu.rice.cs.drjava.config.OptionConstants.DISPLAY_ALL_COMPILER_VERSIONS).booleanValue()) {", "+        tVersion = tVersion.majorVersion().fullVersion();", "+      }"]}], "num": 293}