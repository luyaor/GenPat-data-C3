{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc1ef7819bc44457a0f441ac3aa03913", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cb849ad76264e972c0b73f0f6d075a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "28ed37193d3d1605a7ea343a3a2a748ce08a7b25", "commitAfterChange": "deccdad7d1e1e890f5a05d651027f51330f6ca59", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public DefaultGlobalModel()", "signatureAfterChange": "   public DefaultGlobalModel()", "diff": ["+    AbstractMasterJVM._log.log(this + \" has called contstructor for DefaultGlobal Model\");", "+    AbstractMasterJVM._log.log(this + \" has created a new MainJVM\");", "-    ", "-//    Utilities.show(\"Notifier chaining done\");", "+//    AbstractMasterJVM._log.log(\"Starting the interpreter in \" + this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3e3297cf22068ed2304ba8e0aa555ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   protected final void quitSlave() throws RemoteException", "signatureAfterChange": "   protected final void quitSlave() throws RemoteException", "diff": ["-//    Utilities.showDebug(\"quitSlave() called\");", "+    _log.log(this + \".quitSlave() called\");", "-        // There is a slave to be quit, but we don't have a handle to it yet.", "-        // Instead we set this flag, which makes it quit immediately after it", "-        // registers in registerSlave.", "+        /* There is a slave to be quit, but we don't have a handle to it yet. Instead we set this flag, which makes it", "+         * quit immediately after it registers in registerSlave. */", "-      else if (_slave == null)  System.out.println(\"slave JVM quit invoked when no slave running\");", "+      else if (_slave == null)  {", "+        System.out.println(\"Slave JVM quit operation invoked when no slave running\");", "+        _log.log(this + \" called quitSlave() when no slave was running\");", "-      else _slave.quit();", "+      }", "+      else {", "+        _slave.quit();", "+        _slave = null;  // Remove reference to Slave JVM", "+      }"]}], "num": 793}