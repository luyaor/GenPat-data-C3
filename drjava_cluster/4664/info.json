{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3575c2f5465aab20fd84d4978c7a65d5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "477d90c004c62650392aa4c887a45505", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "cbb9f04386fdbcd6c82a6f2a5ae6b635359499fb", "commitAfterChange": "e77b9389e0feb3169a20412f8892f630db108f0e", "methodNumberBeforeChange": 623, "methodNumberAfterChange": 624, "signatureBeforeChange": "   public void scrollToDocumentAndOffset(final OpenDefinitionsDocument doc, final int offset,                                          final boolean shouldHighlight, final boolean shouldAddToHistory)", "signatureAfterChange": "   public void scrollToDocumentAndOffset(final OpenDefinitionsDocument doc, final int offset,                                          final boolean shouldHighlight, final boolean shouldAddToHistory)", "diff": ["-    final boolean toSameDoc = _model.getActiveDocument().equals(doc);", "+    OpenDefinitionsDocument activeDoc =  _model.getActiveDocument();", "+    final boolean toSameDoc = (activeDoc == doc);", "-        ", "-        // get the line number after the switch of documents was made", "-        int lineNumber = doc.getLineOfOffset(offset) + 1;", "-        ", "-        // this block occurs if the documents is already open and as such has a positive size", "-        if (_currentDefPane.getSize().getWidth() > 0 && _currentDefPane.getSize().getHeight() > 0) { ", "-          EventQueue.invokeLater(new Runnable() { ", "-            public void run() { ", "-              if (! toSameDoc) Utilities.clearEventQueue();  // pause to let async aspects of active document switch complete", "-              _currentDefPane.centerViewOnOffset(offset);", "-              _currentDefPane.requestFocusInWindow();", "-            }", "-          });", "-        }", "-        ", "+", "-          int startOffset = doc._getOffset(lineNumber);  // Much faster to directly search back from offset!", "-          if (startOffset > -1) {", "-            int endOffset = doc._getLineEndPos(startOffset);", "-            if (endOffset > -1) {", "+          int startOffset = doc._getLineStartPos(offset);", "+          if (startOffset >= 0) {", "+            int endOffset = doc._getLineEndPos(offset);", "+            if (endOffset >= 0) {", "+        }", "+        // Is the following test necessary?", "+        if (_currentDefPane.getSize().getWidth() > 0 && _currentDefPane.getSize().getHeight() > 0) {", "+          EventQueue.invokeLater(new Runnable() { ", "+            public void run() {", "+              _currentDefPane.centerViewOnOffset(offset);", "+              _currentDefPane.requestFocusInWindow();", "+            }", "+          });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "787763ff37045589c896cb21bd29735b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "527b327a81252940ede7723bc28a80b1911fdddb", "commitAfterChange": "60cd84614ab1a6d35590df8d34b30b47cae7364d", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": "   private void okButtonPressed()", "signatureAfterChange": "   private void buttonPressed(CloseAction<T> a)", "diff": ["-  /** Handle OK button. */", "-  private void okButtonPressed() {", "-    if (_force && (_matchList.getModel().getSize()==0)) {", "-      Toolkit.getDefaultToolkit().beep();", "-    }", "-    else {", "-      _buttonPressed = JOptionPane.OK_OPTION;", "-      _lastState = new FrameState(PredictiveInputFrame.this);", "-      setVisible(false);", "-      _okAction.apply(this);", "-    }", "-  }", "+  /** Handle button pressed. */", "+  private void buttonPressed(CloseAction<T> a) {", "+    _buttonPressed = a.getName();", "+    a.apply(this);"]}], "num": 4664}