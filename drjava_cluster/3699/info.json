{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16a8bcb74f971a8af4c95a12a8d269b8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2af5d669f64c95f7c81b755acbf4a3a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "17590567cb9f06269b33249dad955c39164a9028", "commitAfterChange": "6222fd84e3aa6c7b8b3da9d73ccf7a9a3370487b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testStaticFieldsConsistent() throws Exception", "signatureAfterChange": "   public void testStaticFieldsConsistent() throws Exception", "diff": ["-      _waitForNotifies(2);  // suspended, updated", "+      _waitForNotifies(4);  // suspended x 2, updated x 2", "-    debugListener.assertThreadLocationUpdatedCount(3);  // fires", "-    debugListener.assertCurrThreadSuspendedCount(3);  // fires", "+    debugListener.assertThreadLocationUpdatedCount(4);  // fires", "+    debugListener.assertCurrThreadSuspendedCount(4);  // fires", "-", "+    ", "-      _waitForNotifies(2);  // suspended, updated", "+      _waitForNotifies(4);  // (suspended, updated) x2", "-    ", "-    debugListener.assertThreadLocationUpdatedCount(4);  // fires", "+    debugListener.assertThreadLocationUpdatedCount(6);  // fires", "-    debugListener.assertCurrThreadSuspendedCount(4);  // fires", "+    debugListener.assertCurrThreadSuspendedCount(6);  // fires", "-      _waitForNotifies(2);  // updated, suspended", "+      _waitForNotifies(2);  // suspended, updated"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cffc32147db748b9a1b2dab76b7502bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/DebugContextTest.java", "commitBeforeChange": "9297bd3255995599281a9a548fcd6e849eecaf7b", "commitAfterChange": "b8d26b54d9d0d791e5e97a6dd352ae0f9f5f3b20", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public synchronized void XXXtestStepIntoOverBreakpoint() throws Exception", "signatureAfterChange": "   public synchronized void XXXtestStepIntoOverBreakpoint() throws Exception", "diff": ["-    _debugger.toggleBreakpoint(doc,DEBUG_CLASS.indexOf(\"Foo Line 1\"), 3,true);", "-    _debugger.toggleBreakpoint(doc,DEBUG_CLASS.indexOf(\"bar();\\n\"), 4,true);", "+    _debugger.toggleBreakpoint(doc,DEBUG_CLASS.indexOf(\"Foo Line 1\"),true);", "+    _debugger.toggleBreakpoint(doc,DEBUG_CLASS.indexOf(\"bar();\\n\"),true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2a301c904b39e2a70ac5b406bf7fdbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "95fc34f702728d19ab12beabcddae9a69d422c00", "commitAfterChange": "5607cf775ad2ef70ccd49a101fe31fb06f6903bb", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": "          public void test_forModifiersAndVisibility()", "signatureAfterChange": "          public void test_forModifiersAndVisibility()", "diff": ["-      assertEquals(\"There should be two errors.\", 3, errors.size());", "+      assertEquals(\"There should still be two errors.\", 2, errors.size());  // Generated error is duplicate", "-                   \" Can't use final and abstract together.\", errors.get(2).getFirst());", "+                   \" Can't use final and abstract together.\", errors.get(1).getFirst());", "-      assertEquals(\"There should be two errors.\", 4, errors.size());", "+      assertEquals(\"There should be three errors.\", 3, errors.size());  // Generated one new error", "-                   \" Can't use final and volatile together.\", errors.get(3).getFirst());", "+                   \" Can't use final and volatile together.\", errors.get(2).getFirst());", "-      assertEquals(\"There should be two errors.\", 5, errors.size());", "-      assertEquals(\"The error message should be correct.\", \"Duplicate modifier: static\", errors.get(4).getFirst());", "+      assertEquals(\"There should be four errors.\", 4, errors.size());  // Generated one new error", "+      assertEquals(\"The error message should be correct.\", \"Duplicate modifier: static\", errors.get(3).getFirst());"]}], "num": 3699}