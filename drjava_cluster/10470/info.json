{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3039f5afed991c805cdd272a00804bbe", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e04597db266b39ee4c4e7fa6ef9ff5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ReverseHighlighter.java", "commitBeforeChange": "304bb61899a16b4e87269d9bb4c4a3ecbf1bc6d4", "commitAfterChange": "efc072ede22ea55faaadbf97a73c4466d939ffd3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r   public Object addHighlight(int p0, int p1, Highlighter.HighlightPainter p) throws BadLocationException", "signatureAfterChange": "\r   public Object addHighlight(int p0, int p1, Highlighter.HighlightPainter p) throws BadLocationException", "diff": ["-        if ((!(p instanceof DefaultFrameHighlightPainter)) && (!(p instanceof DefaultUnderlineHighlightPainter))) {\r", "+        if ((!(hli.getPainter() instanceof DefaultFrameHighlightPainter)) && \r", "+            (!(hli.getPainter() instanceof DefaultUnderlineHighlightPainter))) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da337e369fedb1a4cb8d4446f7b4f2a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "dac1911c42074b029b90bbb69267d350628d7300", "commitAfterChange": "6ac6b30c03b8f321199592a97e544cb4056701f0", "methodNumberBeforeChange": 190, "methodNumberAfterChange": 189, "signatureBeforeChange": "   public Pair<Expression, Expression> mergeConditional(final Expression e1, final Expression e2)      throws UnsupportedConversionException", "signatureAfterChange": "   public Pair<Expression, Expression> mergeConditional(final Expression e1, final Expression e2)      throws UnsupportedConversionException", "diff": ["-        return _supportBoxing &&", "+        return !_opt.prohibitBoxing() &&", "-      private boolean isBooleanReference(Type t) { return _supportBoxing && isSubtype(t, BOOLEAN_CLASS); }", "+      private boolean isBooleanReference(Type t) { return !_opt.prohibitBoxing() && isSubtype(t, BOOLEAN_CLASS); }"]}], "num": 10470}