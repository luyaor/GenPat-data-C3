{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c767c5b803d1ad4c3004ecf745f3faba", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "062e24ded749b1fd36acfc6b972851ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/PreviewFrame.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      private PageChangerUpdater createPageChanger()", "signatureAfterChange": "      private PageChangerUpdater createPageChanger()", "diff": ["-      final Method getter = spinnerClass.getMethod(\"getValue\",new Class[0]);", "+      final Method getter = spinnerClass.getMethod(\"getValue\",new Class<?>[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "063e6587ccee0899acd35ab08edee25c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "4ae3dba211535b42e36ea3344ccafcfcc3ff3edd", "commitAfterChange": "90464e2ed7c77705e57d251eb7f4b67e377039d6", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   private String _getValue(Value value) throws DebugException", "signatureAfterChange": "   private String _getValue(Value value) throws DebugException", "diff": ["-      Value stringValue = object.invokeMethod(thread, method, new LinkedList(),", "+      Value stringValue = object.invokeMethod(thread, method, new LinkedList<Value>(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06939094dc1413637590a2e427543866", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker15.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected SimpleAllocation _box(Expression exp, Class refType)", "signatureAfterChange": "   protected SimpleAllocation _box(Expression exp, Class<?> refType)", "diff": ["-  protected SimpleAllocation _box(Expression exp, Class refType) {", "+  protected SimpleAllocation _box(Expression exp, Class<?> refType) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07030a4eb5664afa4de94ad034c28a3c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public Class visit(SynchronizedStatement node)", "signatureAfterChange": "   public Class<?> visit(SynchronizedStatement node)", "diff": ["-  public Class visit(SynchronizedStatement node) {", "+  public Class<?> visit(SynchronizedStatement node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0add13b8f8bde8a7960a767edaffdac9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/StaticContext.java", "commitBeforeChange": "68bd63f6034f2863f39ab1e69222ff477d2c17f9", "commitAfterChange": "0fae02937c58237a9087228b753c7aa76d749043", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public StaticContext(Interpreter i, Class c, Set fp)", "signatureAfterChange": "   public StaticContext(Interpreter i, Class c, Set<AbstractVariable> fp)", "diff": ["-  public StaticContext(Interpreter i, Class c, Set fp) {", "+  public StaticContext(Interpreter i, Class c, Set<AbstractVariable> fp) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d2004f0f0d556f3ea21bf1dc588e5bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MethodDeclaration.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public List getExceptions()", "signatureAfterChange": "   public List<? extends ReferenceTypeName> getExceptions()", "diff": ["-  public List getExceptions() {", "+  public List<? extends ReferenceTypeName> getExceptions() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ecefe40c5755290b2b499b25c5a026d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/modifier/StaticFieldModifier.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object prepare(Visitor v, Context ctx)", "signatureAfterChange": "   public Object prepare(Visitor<Object> v, Context ctx)", "diff": ["+   */", "+  public Object prepare(Visitor<Object> v, Context ctx) {", "+    try {", "+      return field.get(null);", "+    } catch (Exception e) {", "+      throw new CatchedExceptionError(e, node);", "-     */", "-    public Object prepare(Visitor v, Context ctx) {", "-\ttry {", "-\t    return field.get(null);", "-\t} catch (Exception e) {", "-            throw new CatchedExceptionError(e, node);", "-\t}", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "103d67edab7934e67caa2e4c606d5ed6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/InterpreterUtilities.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "   public static Object unsignedShiftRight(Class c, Object l, Object r)", "signatureAfterChange": "   public static Object unsignedShiftRight(Class<?> c, Object l, Object r)", "diff": ["-  public static Object unsignedShiftRight(Class c, Object l, Object r) {", "+  public static Object unsignedShiftRight(Class<?> c, Object l, Object r) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11696c22b2f7187a9652e4f6146cb07b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      protected FileGroupingState     makeProjectFileGroupingState(File pr, String main, File bd, File wd, File project, File[] srcFiles, File[] auxFiles,                                   File[] excludedFiles, Iterable<AbsRelFile> cp, File cjf, int cjflags, boolean refresh,                                  String manifest, Map<OptionParser,String> storedPreferences)", "signatureAfterChange": "      protected FileGroupingState     makeProjectFileGroupingState(File pr, String main, File bd, File wd, File project, File[] srcFiles, File[] auxFiles,                                   File[] excludedFiles, Iterable<AbsRelFile> cp, File cjf, int cjflags, boolean refresh,                                  String manifest, Map<OptionParser<?>,String> storedPreferences)", "diff": ["-                                 String manifest, Map<OptionParser,String> storedPreferences) {", "+                                 String manifest, Map<OptionParser<?>,String> storedPreferences) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f212381ed96186769c7a2859d398011", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "      @SuppressWarnings(\"unchecked\")   protected void removePreviousListeners()", "signatureAfterChange": "      @SuppressWarnings(\"unchecked\")   protected void removePreviousListeners()", "diff": ["-    for(Map.Entry<OptionParser, OptionListener<?>> e: LISTENERS_TO_REMOVE.entrySet()) {", "+    for(Map.Entry<OptionParser<?>, OptionListener<?>> e: LISTENERS_TO_REMOVE.entrySet()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26c2f353bbce3743920e3203ff47a8e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "   public String[] getCollapsedPaths()", "signatureAfterChange": "   public String[] getCollapsedPaths()", "diff": ["-    Enumeration nodes = rootNode.depthFirstEnumeration(); /** This warning is expected **/", "+    Enumeration<?> nodes = rootNode.depthFirstEnumeration(); /** This warning is expected **/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a9d2698ea6f4f3161d8b211e8978c0e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "68bd63f6034f2863f39ab1e69222ff477d2c17f9", "commitAfterChange": "0fae02937c58237a9087228b753c7aa76d749043", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "    final public List enumConstants() throws ParseException", "signatureAfterChange": "    final public List<EnumConstant> enumConstants() throws ParseException", "diff": ["-  final public List enumConstants() throws ParseException {", "+  final public List<EnumConstant> enumConstants() throws ParseException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ac9ebba42b16d51a9b05e9a16e47903", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public Class visit(ArrayInitializer node)", "signatureAfterChange": "   public Class<?> visit(ArrayInitializer node)", "diff": ["-  public Class visit(ArrayInitializer node) {", "+  public Class<?> visit(ArrayInitializer node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e7ae6dff1a78b9e595debd55ba1444", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/InterpreterUtilities.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   protected static Object binaryArithmeticOperation(Class c, Object l, Object r,                                                     BinaryArithmeticOperation o)", "signatureAfterChange": "   protected static Object binaryArithmeticOperation(Class<?> c, Object l, Object r,                                                     BinaryArithmeticOperation o)", "diff": ["-  protected static Object binaryArithmeticOperation(Class c, Object l, Object r,", "+  protected static Object binaryArithmeticOperation(Class<?> c, Object l, Object r,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "743dda6646be8d3fe8980c0feeaa210a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOpsTest.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static Class anonClass()", "signatureAfterChange": "     public static Class<?> anonClass()", "diff": ["-    public static Class anonClass() {", "+    public static Class<?> anonClass() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7973efc7b2ac27c032af0147009e47b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DummyGlobalModel.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "    public void setPreferencesStoredInProject(Map<OptionParser,String> sp)", "signatureAfterChange": "    public void setPreferencesStoredInProject(Map<OptionParser<?>,String> sp)", "diff": ["-  public void setPreferencesStoredInProject(Map<OptionParser,String> sp) {", "+  public void setPreferencesStoredInProject(Map<OptionParser<?>,String> sp) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "863b63e9c01344963396d563e2647c6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/MethodContext.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public MethodContext(Interpreter i, Class c, Object obj, Set<AbstractVariable> fp)", "signatureAfterChange": "   public MethodContext(Interpreter i, Class<?> c, Object obj, Set<AbstractVariable> fp)", "diff": ["-  public MethodContext(Interpreter i, Class c, Object obj, Set<AbstractVariable> fp) {", "+  public MethodContext(Interpreter i, Class<?> c, Object obj, Set<AbstractVariable> fp) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86881a889419e887463158dc68b1d968", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "      public void setPreferencesStoredInProject(Map<OptionParser,String> sp)", "signatureAfterChange": "      public void setPreferencesStoredInProject(Map<OptionParser<?>,String> sp)", "diff": ["-    public void setPreferencesStoredInProject(Map<OptionParser,String> sp) {", "+    public void setPreferencesStoredInProject(Map<OptionParser<?>,String> sp) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8758d548670e8b752f4454be2357172c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/modifier/InvalidModifier.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object prepare(Visitor v, Context ctx)", "signatureAfterChange": "   public Object prepare(Visitor<Object> v, Context ctx)", "diff": ["-     */", "-    public Object prepare(Visitor v, Context ctx) {", "-\tthrow new ExecutionError(\"cannot.modify\", node);", "-    }", "+   */", "+  public Object prepare(Visitor<Object> v, Context ctx) {", "+    throw new ExecutionError(\"cannot.modify\", node);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a16ac9e145367087a7ef53aee485946", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/OptionComponent.java", "commitBeforeChange": "c302d1db72cb508e0cec30d24e39d48cce8fd663", "commitAfterChange": "68d14b52468e7fad6eb9d5f26ee2e88ac93b395f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public OptionComponent<T> setEntireColumn(boolean entireColumn)", "signatureAfterChange": "   public OptionComponent<T,C> setEntireColumn(boolean entireColumn)", "diff": ["-  public OptionComponent<T> setEntireColumn(boolean entireColumn) { ", "+  public OptionComponent<T,C> setEntireColumn(boolean entireColumn) { "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae917707a62b1558c20d0820430f8c4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/UneditableTableModel.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public UneditableTableModel(Vector columnNames, int rowCount)", "signatureAfterChange": "   public UneditableTableModel(Vector<String> columnNames, int rowCount)", "diff": ["-  public UneditableTableModel(Vector columnNames, int rowCount) { super(columnNames, rowCount); }", "+  public UneditableTableModel(Vector<String> columnNames, int rowCount) { super(columnNames, rowCount); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba02131ff34178c89a73db21dfff296b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FileGroupingState.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "    public void setPreferencesStoredInProject(Map<OptionParser,String> sp);", "signatureAfterChange": "    public void setPreferencesStoredInProject(Map<OptionParser<?>,String> sp);", "diff": ["-  public void setPreferencesStoredInProject(Map<OptionParser,String> sp);", "+  public void setPreferencesStoredInProject(Map<OptionParser<?>,String> sp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb88f856f506d542890b61e25d0fad32", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/GlobalContext.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public Class lookupClass(String cname) throws ClassNotFoundException", "signatureAfterChange": "   public Class<?> lookupClass(String cname) throws ClassNotFoundException", "diff": ["-  public Class lookupClass(String cname) throws ClassNotFoundException {", "+  public Class<?> lookupClass(String cname) throws ClassNotFoundException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c11f0799a68ca17d2693215cd8a5774c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6595282fd67e77d6079df1ee1647ba51751bbcec", "commitAfterChange": "de0f38d123822794b2970bd8e5814e75677feb46", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   final public List parseCompilationUnit() throws ParseException", "signatureAfterChange": "   final public List<Node> parseCompilationUnit() throws ParseException", "diff": ["-  final public List parseCompilationUnit() throws ParseException {", "+  final public List<Node> parseCompilationUnit() throws ParseException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6147e6b59f06af1a7fe48f4331e8d5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/modifier/ObjectFieldModifier.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Object prepare(Visitor<Object> v, Context ctx)", "signatureAfterChange": "   public Object prepare(Visitor<Object> v, Context<Object> ctx)", "diff": ["-  public Object prepare(Visitor<Object> v, Context ctx) {", "+  public Object prepare(Visitor<Object> v, Context<Object> ctx) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8c283957c79473216233d498ac0f119", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "76c0b2960b62020d46b810955623e0af759eee20", "commitAfterChange": "936042cad9bfa0086510cc58a96357306371fb07", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 182, "signatureBeforeChange": "   public ProjectProfile _makeProjectProfile(File file, HashMap<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "signatureAfterChange": "   public ProjectProfile _makeProjectProfile(File file, HashMap<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "diff": ["-    if (_documentNavigator instanceof JTreeSortNavigator) {", "+    if (_documentNavigator instanceof JTreeSortNavigator<?>) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca66e66e00d064beaa0612afae4f1a21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DummyGlobalModel.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      public Map<OptionParser,String> getPreferencesStoredInProject()", "signatureAfterChange": "      public Map<OptionParser<?>,String> getPreferencesStoredInProject()", "diff": ["-  public Map<OptionParser,String> getPreferencesStoredInProject() {", "+  public Map<OptionParser<?>,String> getPreferencesStoredInProject() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1981c4b81a7c138c8a1d64e0ebb9b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public Class visit(LabeledStatement node)", "signatureAfterChange": "   public Class<?> visit(LabeledStatement node)", "diff": ["-  public Class visit(LabeledStatement node) {", "+  public Class<?> visit(LabeledStatement node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce2a9e78e4af85209bc3e577a21f5e36", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected StaticMethodCall _getStaticMethodCallForFunction(MethodCall method, Context context)", "signatureAfterChange": "   protected StaticMethodCall _getStaticMethodCallForFunction(MethodCall method, Context<Type> context)", "diff": ["-  protected StaticMethodCall _getStaticMethodCallForFunction(MethodCall method, Context context) {", "+  protected StaticMethodCall _getStaticMethodCallForFunction(MethodCall method, Context<Type> context) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf37a87864581af718a71a09bba3a971", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "4ae3dba211535b42e36ea3344ccafcfcc3ff3edd", "commitAfterChange": "90464e2ed7c77705e57d251eb7f4b67e377039d6", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "   private Value _convertToActualType(ThreadReference threadRef, LocalVariable localVar,                                      Value v)     throws InvalidTypeException, ClassNotLoadedException,     IncompatibleThreadStateException, InvocationException", "signatureAfterChange": "   private Value _convertToActualType(ThreadReference threadRef, LocalVariable localVar,                                      Value v)     throws InvalidTypeException, ClassNotLoadedException,     IncompatibleThreadStateException, InvocationException", "diff": ["-    return ref.invokeMethod(threadRef, m, new LinkedList(),", "+    return ref.invokeMethod(threadRef, m, new LinkedList<Value>(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1fa73fce1ad11855a3f6feea34a0d70", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/StaticContext.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public Method lookupSuperMethod(Node node, String mname, Class[] params)     throws NoSuchMethodException", "signatureAfterChange": "   public Method lookupSuperMethod(Node node, String mname, Class<?>[] params)     throws NoSuchMethodException", "diff": ["-  public Method lookupSuperMethod(Node node, String mname, Class[] params)", "+  public Method lookupSuperMethod(Node node, String mname, Class<?>[] params)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3c9485c0ce797c54bc27d9c3efb7f28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/modifier/ObjectFieldModifier.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object prepare(Visitor v, Context ctx)", "signatureAfterChange": "   public Object prepare(Visitor<Object> v, Context ctx)", "diff": ["+   */", "+  public Object prepare(Visitor<Object> v, Context ctx) {", "+    fields.add(0, fieldObject);", "+    ", "+    fieldObject = node.getExpression().acceptVisitor(v);", "+    try {", "+      return field.get(fieldObject);", "+    } catch (Exception e) {", "+      throw new CatchedExceptionError(e, node);", "-     */", "-    public Object prepare(Visitor v, Context ctx) {", "-\tfields.add(0, fieldObject);", "-", "-\tfieldObject = node.getExpression().acceptVisitor(v);", "-\ttry {", "-\t    return field.get(fieldObject);", "-\t} catch (Exception e) {", "-            throw new CatchedExceptionError(e, node);", "-\t}", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db66070134626c6365798bdab160a920", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "   protected abstract ObjectMethodCall _unbox(Expression child, Class type);", "signatureAfterChange": "   protected abstract ObjectMethodCall _unbox(Expression child, Class<?> type);", "diff": ["-  protected abstract ObjectMethodCall _unbox(Expression child, Class type);", "+  protected abstract ObjectMethodCall _unbox(Expression child, Class<?> type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e154b6246fd57234eb7b6bd9be966cbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 199, "signatureBeforeChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "diff": ["-    final Map<OptionParser,String> storedPreferences = ir.getPreferencesStoredInProject();", "+    final Map<OptionParser<?>,String> storedPreferences = ir.getPreferencesStoredInProject();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e69fdc6dbcb0d4ee422b4982ffd317dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public Object visit(ObjectFieldAccess node)", "signatureAfterChange": "   public Object visit(ObjectFieldAccess node)", "diff": ["-    Class c = NodeProperties.getType(node.getExpression());", "+    Class<?> c = NodeProperties.getType(node.getExpression());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3c4e862580beb910f4321b76ab9ae33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ReflectUtil.java", "commitBeforeChange": "6d6fa98f193d16ab3db62dbad1beca43c6bd6363", "commitAfterChange": "8899499d3b5cb3ea80f26187b2a2a457f05dfbc2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public static Object loadLibraryAdapter(ClassLoader baseLoader, Iterable<? extends File> libraryPath,                                            String adapterName, Class[] constructorSig, Object... constructorArgs)      throws ReflectException", "signatureAfterChange": "   public static Object loadLibraryAdapter(ClassLoader baseLoader, Iterable<? extends File> libraryPath,                                            String adapterName, Class<?>[] constructorSig, Object... constructorArgs)      throws ReflectException", "diff": ["-                                          String adapterName, Class[] constructorSig, Object... constructorArgs) ", "+                                          String adapterName, Class<?>[] constructorSig, Object... constructorArgs) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f72646972c4c40ce77f70e7000cd94b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigPanel.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void addComponent( OptionComponent oc)", "signatureAfterChange": "   public void addComponent( OptionComponent<?> oc)", "diff": ["-  public void addComponent( OptionComponent oc) { _components.add(oc); }", "+  public void addComponent( OptionComponent<?> oc) { _components.add(oc); }"]}], "num": 1585}