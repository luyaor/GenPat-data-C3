{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21c30829692609440bbf5b35b5a7a138", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "318af711e3f7b261bbf80ea7edeb5242", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void testWriteFile() throws IOException, MalformedProjectFileException", "signatureAfterChange": "    public void testWriteFile() throws IOException, MalformedProjectFileException", "diff": ["-    ProjectFileBuilder fb = new ProjectFileBuilder(pf);", "-    String sr =pf.getCanonicalFile().getParent();", "+    ProjectProfile fb = new ProjectProfile(pf);", "+    String sr = pf.getCanonicalFile().getParent();", "-      received += (char)c;", "+      received += (char) c;", "+    ", "-    assertEquals(\"build-dir name\", new File(absp,\"drjava/built\").getPath(), pfir.getBuildDirectory().getCanonicalPath());", "-    assertEquals(\"work-dir name\", new File(absp,\"drjava/src\").getPath(), pfir.getWorkingDirectory().getCanonicalPath());", "+    assertEquals(\"build-dir name\", null, pfir.getBuildDirectory());", "+    assertEquals(\"work-dir name\", null, pfir.getWorkingDirectory());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb51f86b80a590eb0f0526338249564d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "signatureAfterChange": "   public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "diff": ["+      \"(work-dir ;; absolute path\\n\" +", "+      \"   (file (name \"+convertToLiteral(new File(absp,\"drjava/src\").getCanonicalPath()) + \")))\\n\" +", "-    assertEquals(\"number of classpaths\", 1, pfir.getClasspaths().length);", "+    assertEquals(\"number of classpaths\", 1, pfir.getClassPaths().length);", "-    assertEquals(\"classpath name\", new File(absp,\"drjava/src/edu/rice/cs/lib\").getPath(), pfir.getClasspaths()[0].getCanonicalPath());", "+    assertEquals(\"work-dir name\", new File(absp,\"drjava/src\").getPath(), pfir.getWorkingDirectory().getCanonicalPath());", "+    assertEquals(\"classpath name\", new File(absp,\"drjava/src/edu/rice/cs/lib\").getPath(), pfir.getClassPaths()[0].getCanonicalPath());"]}], "num": 194}