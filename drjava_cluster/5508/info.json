{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31c7bb749de460bbe0168fe33ad1a971", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd33ba84554b0b1dbb14b32e9838fa9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1a21d93c6026fc975d9f1a1bda2fbd55942a0154", "commitAfterChange": "7cbabe0b7b5f77b58eac69afdca15c16ef2f6a9b", "methodNumberBeforeChange": 269, "methodNumberAfterChange": 269, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["-    _tabbedPanesFrame = new DetachedFrame(\"Tabbed Panes\", MainFrame.this, new Lambda<Void,DetachedFrame>() {", "-      public Void apply(DetachedFrame frame) {", "+    _tabbedPanesFrame = new DetachedFrame(\"Tabbed Panes\", MainFrame.this, new Runnable1<DetachedFrame>() {", "+      public void run(DetachedFrame frame) {", "-        return null;", "-    }, new Lambda<Void,DetachedFrame>() {", "-      public Void apply(DetachedFrame frame) {", "+    }, new Runnable1<DetachedFrame>() {", "+      public void run(DetachedFrame frame) {", "-        return null;", "-      _debugFrame = new DetachedFrame(\"Debugger\", MainFrame.this, new Lambda<Void,DetachedFrame>() {", "-        public Void apply(DetachedFrame frame) {", "+      _debugFrame = new DetachedFrame(\"Debugger\", MainFrame.this, new Runnable1<DetachedFrame>() {", "+        public void run(DetachedFrame frame) {", "-          return null;", "-      }, new Lambda<Void,DetachedFrame>() {", "-        public Void apply(DetachedFrame frame) {", "+      }, new Runnable1<DetachedFrame>() {", "+        public void run(DetachedFrame frame) {", "-          return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e28348e456bab52d630f68525b561dd2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "diff": ["-    ", "+    // set breakpoints", "-          getDebugger().toggleBreakpoint(odd, odd._getOffset(lnr), lnr, dbd.isEnabled()); ", "+          getDebugger().toggleBreakpoint(odd, odd._getOffset(lnr), lnr, dbd.isEnabled());", "-    ", "-    try {", "-      for (Region bm: ir.getBookmarks()) {", "-        File f = bm.getFile();", "-        if (! modifiedFiles.contains(f)) {", "-          OpenDefinitionsDocument odd = getDocumentForFile(f);", "-          int start = bm.getStartOffset();", "-          int end = bm.getEndOffset();", "-          if (getOpenDefinitionsDocuments().contains(odd) && ", "-              _bookmarkManager.getRegionsOverlapping(odd, start, end).size() == 0) { // bookmark is valid", "-            Position startPos = odd.createPosition(start);", "-            Position endPos = odd.createPosition(end);", "-            try { _bookmarkManager.addRegion(new DocumentRegion(odd, startPos, endPos)); }", "-            catch(Exception e) { DrJavaErrorHandler.record(e); }  // should never happen", "+    for (FileRegion bm: ir.getBookmarks()) {", "+      File f = bm.getFile();", "+      if (! modifiedFiles.contains(f)) {", "+        OpenDefinitionsDocument odd = getDocumentForFile(f);", "+        int start = bm.getStartOffset();", "+        int end = bm.getEndOffset();", "+        if (getOpenDefinitionsDocuments().contains(odd) && ", "+            _bookmarkManager.getRegionsOverlapping(odd, start, end).size() == 0) { // bookmark is valid", "+          try { ", "+            int lineStart = odd._getLineStartPos(start);", "+            int lineEnd = odd._getLineEndPos(end);", "+            _bookmarkManager.addRegion(new MovingDocumentRegion(odd, start, end, lineStart, lineEnd)); ", "-          // should remove stale bookmark", "+          catch(Exception e) { DrJavaErrorHandler.record(e); }  // should never happen", "+        // should remove stale bookmark", "-    catch(BadLocationException e) { throw new UnexpectedException(e); }"]}], "num": 5508}