{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccf29cf85d7acfb408941963c7b4c6d0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c09680edbd9185aecbab7e4b3f27994", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public boolean findCharInStmtBeforePos(char findChar, int position)", "signatureAfterChange": "   public boolean findCharInStmtBeforePos(char findChar, int position)", "diff": ["+      String mesg = \"Argument endChar to QuestionExistsCharInStmt must be a char \" +", "+        \"that exists on the current line.\";", "-      throw new UnexpectedException(new", "-                                      IllegalArgumentException(\"Argument endChar to \" +", "-                                                               \"QuestionExistsCharInStmt must be a char \" +", "-                                                               \"that exists on the current line.\"));", "+      throw new UnexpectedException(new IllegalArgumentException(mesg));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e3a60320a9b453f50a0acda36c83c97", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionExistsCharInStmt.java", "commitBeforeChange": "6d23d799552cf55313f22433cb12915906b19690", "commitAfterChange": "8a04e8e94a35e432777ebd444cf5fc70868fe9e4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-\tIllegalArgumentException(\"Argument endChar to \" + ", "-\t\t\t\t \"QuestionExistsCharInStmt must be a char \" +", "-\t\t\t\t \"that exists on the current line.\"));", "+        IllegalArgumentException(\"Argument endChar to \" + ", "+                                 \"QuestionExistsCharInStmt must be a char \" +", "+                                 \"that exists on the current line.\"));", "-", "+    ", "-", "+    ", "-    // position of endChar", "+    // position of endChar (looking in paren phrases as well)", "-      prevFindChar = doc.findPrevDelimiter(endCharPos, findCharDelims);", "+      prevFindChar = doc.findPrevDelimiter(endCharPos, findCharDelims, false);", "-", "+    ", "-", "+    ", "+    //  (not looking in paren phrases)", "-      prevEndStmtDelim = doc.findPrevDelimiter(endCharPos, endStmtDelims);", "+      prevEndStmtDelim = doc.findPrevDelimiter(endCharPos, endStmtDelims, true);"]}], "num": 14096}