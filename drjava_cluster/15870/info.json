{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bad4e16c2f3818f08d012692f7fba4c4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "011cd3e707c8765bfd7c6bef6e037b21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   private void _distributeErrors(List<? extends CompilerError> errors) throws IOException", "signatureAfterChange": "   private void _distributeErrors(List<? extends DJError> errors) throws IOException", "diff": ["-  private void _distributeErrors(List<? extends CompilerError> errors) throws IOException {", "+  private void _distributeErrors(List<? extends DJError> errors) throws IOException {", "-    _compilerErrorModel = new CompilerErrorModel(errors.toArray(new CompilerError[0]), _model);", "+//    System.err.println(\"Preparing to construct CompilerErrorModel for errors: \" + errors);", "+    _compilerErrorModel = new CompilerErrorModel(errors.toArray(new DJError[0]), _model);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "028ec14bb858f736e9b11fa26cd01850", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "commitAfterChange": "2df7289d55456372fbaf4e3ab78549d8571648f8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void _distributeErrors(CompilerError[] errors) throws IOException", "signatureAfterChange": "   private void _distributeErrors(List<? extends CompilerError> errors) throws IOException", "diff": ["-  private void _distributeErrors(CompilerError[] errors) throws IOException {", "+  private void _distributeErrors(List<? extends CompilerError> errors) throws IOException {", "-    _compilerErrorModel = new CompilerErrorModel(errors, _model);", "+    _compilerErrorModel = new CompilerErrorModel(errors.toArray(new CompilerError[0]), _model);"]}], "num": 15870}