{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bda5dcc187b3ff7b4e66692ce7cdec0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9336dae399740327b85d3701aa74b9bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/Indenter.java", "commitBeforeChange": "cdec0e83ccb73131518824857180629f938997fc", "commitAfterChange": "a661a8e595eaba533f043d38dbbb891fcd8bf32f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void buildTree()", "signatureAfterChange": "   public void buildTree()", "diff": ["+      rule35 = new ActionStartCurrStmtPlus(oneLevel),", "+      rule34 = new ActionStartStmtOfBracePlus(oneLevel),", "+      rule33 = rule35,", "+      rule32 = new QuestionExistsCharInStmt('?', ':', rule33, rule34),", "+      rule31 = new QuestionLineContains(':', rule32, rule35),", "+      rule30 = new ActionStartCurrStmtPlus(\"\"),", "+      rule29 = new QuestionCurrLineStartsWithSkipComments(\"{\", rule30, rule31),", "+      rule28 = new ActionStartPrevStmtPlus(\"\"),", "+      rule27 = rule34,", "+      rule26 = rule28,", "+      rule25 = new QuestionExistsCharInStmt('?', ':', rule26, rule27),", "+      rule24 = new QuestionLineContains(':', rule25, rule28),", "+      rule23 = new QuestionStartingNewStmt(rule24, rule29),", "+      rule22 = rule23,", "+      rule21 = rule34,", "+      rule20 = new QuestionStartAfterOpenBrace(rule21, rule22),", "+      rule19 = new ActionStartStmtOfBracePlus(\"\"),", "+      rule18 = new QuestionCurrLineStartsWithSkipComments(\"}\", rule19, rule20),", "+      rule17 = new QuestionBraceIsCurly(rule18, rule23),", "+      rule16 = new ActionBracePlus(\" \" + oneLevel),", "+      rule15 = new ActionBracePlus(\" \"),", "+      rule14 = new QuestionNewParenPhrase(rule15, rule16),", "+      rule13 = new QuestionBraceIsParenOrBracket(rule14, rule17),", "+      rule12 = new ActionStartPrevLinePlus(\"\"),", "+      rule11 = rule12,", "+      rule10 = new ActionStartPrevLinePlus(\"* \"),", "+      rule09 = new QuestionCurrLineEmpty(rule10, rule11),", "+      rule08 = rule12,          ", "+      rule07 = new QuestionCurrLineStartsWith(\"*\", rule08, rule09),", "+      rule06 = new QuestionPrevLineStartsWith(\"*\", rule07, rule12),", "-      rule03 = new QuestionCurrLineEmpty(rule04, rule05);", "-    ", "-    IndentRule ", "-      rule33 = new ActionStartCurrStmtPlus(oneLevel),", "-      rule32 = new ActionStartStmtOfBracePlus(oneLevel),", "-      rule31 = rule33,", "-      rule30 = new QuestionExistsCharInStmt('?', ':', rule31, rule32),", "-      rule29 = new QuestionLineContains(':', rule30, rule33),", "-      rule28 = new ActionStartCurrStmtPlus(\"\"),", "-      rule27 = new QuestionCurrLineStartsWithSkipComments(\"{\", rule28, rule29),", "-      rule26 = new ActionStartPrevStmtPlus(\"\"),", "-      rule25 = rule32,", "-      rule24 = rule26,", "-      rule23 = new QuestionExistsCharInStmt('?', ':', rule24, rule25),", "-      rule22 = new QuestionLineContains(':', rule23, rule26),", "-      rule21 = new ActionStartStmtOfBracePlus(\"\"),", "-      rule19 = new QuestionStartingNewStmt(rule22, rule27),", "-      rule18 = rule19,", "-      rule17 = rule32,", "-      rule16 = new QuestionStartAfterOpenBrace(rule17, rule18),", "-      rule20 = new QuestionCurrLineStartsWithSkipComments(\"}\", rule21, rule16),", "-      rule15 = new QuestionBraceIsCurly(rule20, rule19),", "-      rule14 = new ActionBracePlus(\" \" + oneLevel),", "-      rule13 = new ActionBracePlus(\" \"),", "-      rule12 = new QuestionNewParenPhrase(rule13, rule14),", "-      rule11 = new QuestionBraceIsParenOrBracket(rule12, rule15),", "-      rule10 = new ActionStartPrevLinePlus(\"\"),", "-      rule9b = rule10,", "-      rule9a = new ActionStartPrevLinePlus(\"* \"),", "-      rule09 = new QuestionCurrLineEmpty(rule9a, rule9b),", "-      rule08 = rule10,          ", "-      rule07 = new QuestionCurrLineStartsWith(\"*\", rule08, rule09),", "-      rule06 = new QuestionPrevLineStartsWith(\"*\", rule07, rule10),", "+      rule03 = new QuestionCurrLineEmpty(rule04, rule05),", "-      rule01 = new QuestionInsideComment(rule02, rule11);", "+      rule01 = new QuestionInsideComment(rule02, rule13);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0fa2144872ff657b9ffa1225ed3a7dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/Indenter.java", "commitBeforeChange": "a3941c1000ac76b7c7dfbe2e02df0072cee011b6", "commitAfterChange": "9dde008cc707b0b4af3c382ad06f25fcd30d66ce", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void buildTree()", "signatureAfterChange": "   public void buildTree()", "diff": ["-      rule35 = new ActionStartCurrStmtPlus(oneLevel),", "-      rule34 = new ActionStartStmtOfBracePlus(oneLevel),", "-      rule33 = rule35,", "-      rule32 = new QuestionExistsCharInStmt('?', ':', rule33, rule34),", "-      rule31 = new QuestionLineContains(':', rule32, rule35),", "-      rule30 = new ActionStartCurrStmtPlus(\"\"),", "-      rule29 = new QuestionCurrLineStartsWithSkipComments(\"{\", rule30, rule31),", "-      rule28 = new ActionStartPrevStmtPlus(\"\", true),", "-      rule27 = rule34,", "-      rule26 = new ActionStartPrevStmtPlus(\"\", false),", "-      rule25 = new QuestionExistsCharInStmt('?', ':', rule26, rule27),", "-      rule24 = new QuestionLineContains(':', rule25, rule28),", "-      rule23 = new QuestionStartingNewStmt(rule24, rule29),", "-      rule22 = rule23,", "-      rule21 = rule34,", "+      rule37 = new ActionStartCurrStmtPlus(oneLevel),", "+      rule36 = new ActionStartStmtOfBracePlus(oneLevel),", "+      rule35 = rule37,", "+      rule34 = new QuestionExistsCharInStmt('?', ':', rule35, rule36),", "+      rule33 = new QuestionLineContains(':', rule34, rule37),", "+      rule32 = new ActionStartCurrStmtPlus(\"\"),", "+      rule31 = new QuestionCurrLineStartsWithSkipComments(\"{\", rule32, rule33),", "+      rule30 = new ActionStartPrevStmtPlus(\"\", true),", "+      rule29 = rule36,", "+      rule28 = new ActionStartPrevStmtPlus(\"\", false),", "+      rule27 = new QuestionExistsCharInStmt('?', ':', rule28, rule29),", "+      rule26 = new QuestionLineContains(':', rule27, rule30),", "+      rule25 = new QuestionStartingNewStmt(rule26, rule31),", "+      rule24 = rule25,", "+      rule23 = rule36,", "+      rule22 = new QuestionHasCharPrecedingOpenBrace(new char[] {'=',',','{'},rule23,rule24),", "+      rule21 = rule36,", "-      rule17 = new QuestionBraceIsCurly(rule18, rule23),", "+      rule17 = new QuestionBraceIsCurly(rule18, rule25),"]}], "num": 21489}