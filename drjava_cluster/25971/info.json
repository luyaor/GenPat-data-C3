{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efe410873612d89b61b86a3f91e72c41", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ac585ea475e4f8fca09d17ec03ad176", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public static <T> SizedIterable<T> makeIterable(T v1, T v2)", "signatureAfterChange": "   public static <T> SizedIterable<T> make()", "diff": ["+  /** Create an immutable SizedIterable containing the given values. */", "+  public static <T> SizedIterable<T> make() {", "+    @SuppressWarnings(\"unchecked\") EmptyIterable<T> result = (EmptyIterable<T>) EmptyIterable.INSTANCE;", "+    return result;", "+  }", "-  /** Create an immutable SizedIterable containing the given values */", "-  public static <T> SizedIterable<T> makeIterable(T v1, T v2) {", "-    SizedIterable<T> result = SingletonIterable.make(v1);", "-    result = ComposedIterable.make(result, v2);", "-    return result;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb2216534ca259169dbb5b41ee3dfd0c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 146, "signatureBeforeChange": "   public static <T> SizedIterable<T> makeIterable(T v1, T v2, T v3, T v4)", "signatureAfterChange": "   public static <T> SizedIterable<T> shuffle(Iterable<T> iter)", "diff": ["+   */", "+  public static <T> SizedIterable<T> shuffle(Iterable<T> iter) {", "+    ArrayList<T> result = asArrayList(iter);", "+    Collections.shuffle(result);", "+    return asIterable(result);", "+  }", "-  /** Create an immutable SizedIterable containing the given values */", "-  public static <T> SizedIterable<T> makeIterable(T v1, T v2, T v3, T v4) {", "-    SizedIterable<T> result = SingletonIterable.make(v1);", "-    result = ComposedIterable.make(result, v2);", "-    result = ComposedIterable.make(result, v3);", "-    result = ComposedIterable.make(result, v4);", "-    return result;", "-  }"]}], "num": 25971}