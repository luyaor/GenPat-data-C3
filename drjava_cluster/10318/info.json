{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b03fb25600956ede2d517c4191011f9a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12edc94c56eee7ff60f328915cdc1e45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "commitAfterChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 92, "signatureBeforeChange": "   void toggleBreakpoint()", "signatureAfterChange": "   void toggleBreakpoint()", "diff": ["-    OpenDefinitionsDocument doc = _model.getActiveDocument();", "-    try {", "-      _model.getDebugManager().toggleBreakpoint(doc, ", "-                                                _currentDefPane.getCaretPosition(),", "-                                                _currentDefPane.getCurrentLine());", "-    }", "-    catch (DebugException de) {", "-      _showError(de, \"Debugger Error\",", "-                 \"Could not set a breakpoint at the current line.\");", "+    if (inDebugMode()) {", "+      OpenDefinitionsDocument doc = _model.getActiveDocument();", "+      try {", "+        DebugManager debugger = _model.getDebugManager();", "+        debugger.toggleBreakpoint(doc, ", "+                                  _currentDefPane.getCaretPosition(),", "+                                  _currentDefPane.getCurrentLine());", "+      }", "+      catch (DebugException de) {", "+        _showError(de, \"Debugger Error\",", "+                   \"Could not set a breakpoint at the current line.\");", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9521a8f14a26226ea6a3f79c9580093f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "444cb9c318707ca2f9a6eaa5854ba2be0fcd383e", "commitAfterChange": "c21488275df662efbed39106365c897fb0dbfb85", "methodNumberBeforeChange": 188, "methodNumberAfterChange": 188, "signatureBeforeChange": "     public void fileOpened(final OpenDefinitionsDocument doc)", "signatureAfterChange": "     public void fileOpened(final OpenDefinitionsDocument doc)", "diff": ["-       if( !SwingUtilities.isEventDispatchThread() ){", "-        try{", "-          SwingUtilities.invokeAndWait(new Runnable(){", "+      if ( !SwingUtilities.isEventDispatchThread() && !inDebugMode() ) {", "+        // Can't invokeAndWait while in debug mode:", "+        //  UI thread might not respond, so DrJava locks up", "+        try {", "+          Runnable command = new Runnable() {", "-            }});", "+            }", "+          };", "+          SwingUtilities.invokeAndWait(command);", "-        catch(InterruptedException ex){", "+        catch(InterruptedException ex) {", "-        catch(InvocationTargetException ex2){", "+        catch(InvocationTargetException ex2) {", "-      else{", "+      else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5eb29fa46dbdedfbd76f88f8dcc5d58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "444cb9c318707ca2f9a6eaa5854ba2be0fcd383e", "commitAfterChange": "c21488275df662efbed39106365c897fb0dbfb85", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": "     public void fileClosed(final OpenDefinitionsDocument doc)", "signatureAfterChange": "     public void fileClosed(final OpenDefinitionsDocument doc)", "diff": ["-      if( !SwingUtilities.isEventDispatchThread() ){", "-        try{", "-          SwingUtilities.invokeAndWait(new Runnable(){", "+      if ( !SwingUtilities.isEventDispatchThread() && !inDebugMode() ) {", "+        // Can't invokeAndWait while in debug mode:", "+        //  UI thread might not respond, so DrJava locks up", "+        try {", "+          Runnable command = new Runnable() {", "-            }});", "+            }", "+          };", "+          SwingUtilities.invokeAndWait(command);", "-        catch(InterruptedException ex){", "+        catch(InterruptedException ex) {", "-        catch(InvocationTargetException ex2){", "+        catch(InvocationTargetException ex2) {", "-      else{", "+      else {"]}], "num": 10318}