{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae70cde14385526dd7e92a5d1a850554", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d18a318c218b4d1b3dc3219af22db34", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "c85becb760bfba1d758f97ed5b638fcefd6f6350", "commitAfterChange": "75c6ef317ddc6280ea7699f7367da5542d5fc400", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "signatureAfterChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "diff": ["+        try {", "+          File sourceRoot = doc.getSourceRoot(); // may throw an InvalidPackageException", "+          ", "+          // doc has valid package name; add it to list of open java source doc files", "+          openDocFiles.add(doc.getCanonicalPath());", "-        // doc has valid package name; add it to list of open java source doc files", "-        openDocFiles.add(doc.getCanonicalPath());", "-        ", "-        String packagePath = doc.getPackageName().replace('.', File.separatorChar);", "-        ", "-        // Add (canonical path name for) build directory for doc to classDirs", "-        ", "-        File sourceRoot = doc.getSourceRoot();", "-        File buildRoot = (buildDir == null) ? sourceRoot: buildDir;", "-        ", "-        File classFileDir = new File(IOUtil.attemptCanonicalFile(buildRoot), packagePath);", "-        ", "-        File sourceDir = ", "-          (buildDir == null) ? classFileDir : new File(IOUtil.attemptCanonicalFile(sourceRoot), packagePath);", "-        ", "-        if (! classDirsAndRoots.containsKey(classFileDir)) {", "-          classDirsAndRoots.put(classFileDir, sourceDir);", "+          String packagePath = doc.getPackageName().replace('.', File.separatorChar);", "+          ", "+          // Add (canonical path name for) build directory for doc to classDirs", "+          ", "+          File buildRoot = (buildDir == null) ? sourceRoot: buildDir;", "+          ", "+          File classFileDir = new File(IOUtil.attemptCanonicalFile(buildRoot), packagePath);", "+          ", "+          File sourceDir = ", "+            (buildDir == null) ? classFileDir : new File(IOUtil.attemptCanonicalFile(sourceRoot), packagePath);", "+          ", "+          if (! classDirsAndRoots.containsKey(classFileDir)) {", "+            classDirsAndRoots.put(classFileDir, sourceDir);", "+          }", "+        catch (InvalidPackageException e) { /* Skip the file, since it doesn't have a valid package */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "700e7d1b511a1815ed8146cc6df4d236", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9c56cd9d9775329b3a5e6a7701ab0c05369850af", "commitAfterChange": "a7a439f9a53360ece86e113cdb8203e5c8b2acda", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 109, "signatureBeforeChange": "   public void saveProject(String filename, Hashtable<OpenDefinitionsDocument,DocumentInfoGetter> info)      throws IOException", "signatureAfterChange": "   public void saveProject(String filename, Hashtable<OpenDefinitionsDocument,DocumentInfoGetter> info)      throws IOException", "diff": ["-    synchronized (_documentsRepos) { ", "-      for (OpenDefinitionsDocument doc: _documentsRepos.values()) {", "-        if (!doc.isUntitled()) {", "-          // could not use doc.isInProjectPath because we may be in flat file view which returns false", "-          String projectPath = new File(filename).getParentFile().getCanonicalPath() + File.separator;", "-          String filePath = doc.getFile().getParentFile().getCanonicalPath() + File.separator;", "-          if (filePath.startsWith(projectPath)){", "-            DocumentInfoGetter g = info.get(doc);", "-            builder.addSourceFile(g);", "-            srcFileVector.add(g.getFile());", "-          }", "-          else if (doc.isAuxiliaryFile()) {", "-            DocumentInfoGetter g = info.get(doc);", "-            builder.addAuxiliaryFile(g);", "-            auxFileList.add(g.getFile());", "-          }", "+    OpenDefinitionsDocument[] docs;", "+    ", "+    synchronized (_documentsRepos) { docs = _documentsRepos.valuesArray(new OpenDefinitionsDocument[0]); }", "+    for (OpenDefinitionsDocument doc: docs) {", "+      if (!doc.isUntitled()) {", "+        // could not use doc.isInProjectPath because we may be in flat file view which returns false", "+        String projectPath = new File(filename).getParentFile().getCanonicalPath() + File.separator;", "+        String filePath = doc.getFile().getParentFile().getCanonicalPath() + File.separator;", "+        if (filePath.startsWith(projectPath)){", "+          DocumentInfoGetter g = info.get(doc);", "+          builder.addSourceFile(g);", "+          srcFileVector.add(g.getFile());", "+        }", "+        else if (doc.isAuxiliaryFile()) {", "+          DocumentInfoGetter g = info.get(doc);", "+          builder.addAuxiliaryFile(g);", "+          auxFileList.add(g.getFile());", "+", "+//    ScrollableDialog sd = new ScrollableDialog(null, \"saveProject completed\", \"\", \"\");", "+//    sd.show();"]}], "num": 28604}