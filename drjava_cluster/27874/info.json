{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8eda205f9d0bdbeea9c026a686ed082b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04634aa803c1c259976e68a8ae9bded1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "          public void xtestForClassDef()", "signatureAfterChange": "          public void xtestForClassDef()", "diff": ["-      ClassDef cd0 = new ClassDef(JExprParser.NO_SOURCE_INFO, _packageMav, new Word(JExprParser.NO_SOURCE_INFO, \"Lisa\"),", "-                                 new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"Object\", new Type[0]), new ReferenceType[0], ", "-                                  new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0])); ", "+      ClassDef cd0 = new ClassDef(SourceInfo.NO_INFO, _packageMav, new Word(SourceInfo.NO_INFO, \"Lisa\"),", "+                                 new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"Object\", new Type[0]), new ReferenceType[0], ", "+                                  new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0])); ", "-      ClassDef cd1 = new ClassDef(JExprParser.NO_SOURCE_INFO, _abstractMav, new Word(JExprParser.NO_SOURCE_INFO, \"Bart\"),", "-                                  new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"System\", new Type[0]), new ReferenceType[0], ", "-                                  new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ClassDef cd1 = new ClassDef(SourceInfo.NO_INFO, _abstractMav, new Word(SourceInfo.NO_INFO, \"Bart\"),", "+                                  new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"System\", new Type[0]), new ReferenceType[0], ", "+                                  new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      ConcreteMethodDef cmd = new ConcreteMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      ConcreteMethodDef cmd = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "-                                                    new VoidReturn(JExprParser.NO_SOURCE_INFO, \"void\"), ", "-                                                    new Word(JExprParser.NO_SOURCE_INFO, \"testMethodName\"),", "+                                                    new VoidReturn(SourceInfo.NO_INFO, \"void\"), ", "+                                                    new Word(SourceInfo.NO_INFO, \"testMethodName\"),", "-                                                    new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      ClassDef cd3 = new ClassDef(JExprParser.NO_SOURCE_INFO, _abstractMav, new Word(JExprParser.NO_SOURCE_INFO, \"TestSuper2\"),", "-                                  new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"TestCase\", new Type[0]), new ReferenceType[0], ", "-                                  new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {cmd}));", "+      ClassDef cd3 = new ClassDef(SourceInfo.NO_INFO, _abstractMav, new Word(SourceInfo.NO_INFO, \"TestSuper2\"),", "+                                  new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"TestCase\", new Type[0]), new ReferenceType[0], ", "+                                  new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {cmd}));", "-      ConcreteMethodDef cmd2 = new ConcreteMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      ConcreteMethodDef cmd2 = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "-                                                    new VoidReturn(JExprParser.NO_SOURCE_INFO, \"void\"), ", "-                                                    new Word(JExprParser.NO_SOURCE_INFO, \"uhOh\"),", "+                                                    new VoidReturn(SourceInfo.NO_INFO, \"void\"), ", "+                                                    new Word(SourceInfo.NO_INFO, \"uhOh\"),", "-                                                    new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      ClassDef cd4 = new ClassDef(JExprParser.NO_SOURCE_INFO, _abstractMav, new Word(JExprParser.NO_SOURCE_INFO, \"TestVoidNoTestMethod\"),", "-                                  new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"junit.framework.TestCase\", new Type[0]), new ReferenceType[0], ", "-                                  new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {cmd2}));", "+      ClassDef cd4 = new ClassDef(SourceInfo.NO_INFO, _abstractMav, new Word(SourceInfo.NO_INFO, \"TestVoidNoTestMethod\"),", "+                                  new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"junit.framework.TestCase\", new Type[0]), new ReferenceType[0], ", "+                                  new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {cmd2}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ab5935037198e30a482e2f12e462296", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "          public void testForClassDef()", "signatureAfterChange": "          public void testForClassDef()", "diff": ["-      ClassDef cd0 = new ClassDef(JExprParser.NO_SOURCE_INFO, _packageMav, new Word(JExprParser.NO_SOURCE_INFO, \"Lisa\"),", "-                                 new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"Object\", new Type[0]), new ReferenceType[0], ", "-                                  new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0])); ", "+      ClassDef cd0 =", "+        new ClassDef(NO_INFO, _packageMav, ", "+                     new Word(NO_INFO, \"Lisa\"),", "+                     new TypeParameter[0], ", "+                     new ClassOrInterfaceType(NO_INFO, \"Object\", new Type[0]),", "+                     new ReferenceType[0], ", "+                     new BracedBody(NO_INFO, new BodyItemI[0])); ", "-      ClassDef cd1 = new ClassDef(JExprParser.NO_SOURCE_INFO, _abstractMav, new Word(JExprParser.NO_SOURCE_INFO, \"Bart\"),", "-                                  new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"System\", new Type[0]), new ReferenceType[0], ", "-                                  new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ClassDef cd1 = ", "+        new ClassDef(NO_INFO, _abstractMav, ", "+                     new Word(NO_INFO, \"Bart\"),", "+                     new TypeParameter[0], ", "+                     new ClassOrInterfaceType(NO_INFO, \"System\", new Type[0]), ", "+                     new ReferenceType[0], ", "+                     new BracedBody(NO_INFO, new BodyItemI[0]));", "-      ConcreteMethodDef cmd = new ConcreteMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      ConcreteMethodDef cmd = new ConcreteMethodDef(NO_INFO, ", "-                                                    new VoidReturn(JExprParser.NO_SOURCE_INFO, \"void\"), ", "-                                                    new Word(JExprParser.NO_SOURCE_INFO, \"testMethodName\"),", "+                                                    new VoidReturn(NO_INFO, \"void\"), ", "+                                                    new Word(NO_INFO, \"testMethodName\"),", "-                                                    new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(NO_INFO, new BodyItemI[0]));", "-      ClassDef cd3 = new ClassDef(JExprParser.NO_SOURCE_INFO, _abstractMav, new Word(JExprParser.NO_SOURCE_INFO, \"TestSuper2\"),", "-                                  new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"TestCase\", new Type[0]), new ReferenceType[0], ", "-                                  new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {cmd}));", "+      ClassDef cd3 = new ClassDef(NO_INFO, _abstractMav,", "+                                  new Word(NO_INFO, \"TestSuper2\"),", "+                                  new TypeParameter[0], ", "+                                  new ClassOrInterfaceType(NO_INFO, \"TestCase\", new Type[0]), new ReferenceType[0], ", "+                                  new BracedBody(NO_INFO, new BodyItemI[] {cmd}));", "-      ConcreteMethodDef cmd2 = new ConcreteMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      ConcreteMethodDef cmd2 = new ConcreteMethodDef(NO_INFO, ", "-                                                    new VoidReturn(JExprParser.NO_SOURCE_INFO, \"void\"), ", "-                                                    new Word(JExprParser.NO_SOURCE_INFO, \"uhOh\"),", "+                                                    new VoidReturn(NO_INFO, \"void\"), ", "+                                                    new Word(NO_INFO, \"uhOh\"),", "-                                                    new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(NO_INFO, new BodyItemI[0]));", "-      ClassDef cd4 = new ClassDef(JExprParser.NO_SOURCE_INFO, _abstractMav, new Word(JExprParser.NO_SOURCE_INFO, \"TestVoidNoTestMethod\"),", "-                                  new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"junit.framework.TestCase\", new Type[0]), new ReferenceType[0], ", "-                                  new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {cmd2}));", "-", "-", "-", "+      ClassDef cd4 =", "+        new ClassDef(NO_INFO, _abstractMav, ", "+                     new Word(NO_INFO, \"TestVoidNoTestMethod\"),", "+                     new TypeParameter[0], ", "+                     new ClassOrInterfaceType(NO_INFO, \"junit.framework.TestCase\", new Type[0]), new ReferenceType[0], ", "+                     new BracedBody(NO_INFO, new BodyItemI[] {cmd2}));", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b4760c435a98c8ce35b3a05f7ddb355", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryVisitor.java", "commitBeforeChange": "5e7a16013fcb5945eddc036e2d2d0ce3e14ba2d0", "commitAfterChange": "e1389ddb9dcb8a7d3a230cc1be322481e1c8fd6a", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "          public void testForClassDefDoFirst()", "signatureAfterChange": "          public void testForClassDefDoFirst()", "diff": ["-      ClassDef cd1 = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, ", "-                                  new Word(JExprParser.NO_SOURCE_INFO, \"Test\"), new TypeParameter[0],", "-                                  JExprParser.NO_TYPE, ", "-                                  new ReferenceType[0], new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ClassDef cd1 = new ClassDef(_noSourceInfo, _publicMav, new Word(_noSourceInfo, \"Test\"), new TypeParameter[0],", "+                                  _noType, new ReferenceType[0], new BracedBody(_noSourceInfo, new BodyItemI[0]));", "-      ClassDef cd0 = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"Lisa\"),", "-                                 new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.lang.Object\", new Type[0]), new ReferenceType[0], new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ClassDef cd0 = new ClassDef(_noSourceInfo, _publicMav, new Word(_noSourceInfo, \"Lisa\"),", "+                                  new TypeParameter[0], ", "+                                  new ClassOrInterfaceType(_noSourceInfo, \"java.lang.Object\", new Type[0]), ", "+                                  new ReferenceType[0], new BracedBody(_noSourceInfo, new BodyItemI[0]));", "-       ClassDef cd2 = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, ", "-                                   new Word(JExprParser.NO_SOURCE_INFO, \"Test\"), new TypeParameter[0],", "-                                   JExprParser.NO_TYPE, ", "-                                   new ReferenceType[] {new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.lang.Object\", new Type[0])}, ", "-                                   new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+       ClassDef cd2 = new ClassDef(_noSourceInfo, _publicMav, new Word(_noSourceInfo, \"Test\"), new TypeParameter[0],", "+                                   _noType, ", "+                                   new ReferenceType[] { new ClassOrInterfaceType(_noSourceInfo, ", "+                                                                                  \"java.lang.Object\", new Type[0]) }, ", "+                                   new BracedBody(_noSourceInfo, new BodyItemI[0]));", "-      ClassDef cd3 = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, ", "-                                  new Word(JExprParser.NO_SOURCE_INFO, \"String\"), new TypeParameter[0],", "-                                  JExprParser.NO_TYPE, ", "-                                  new ReferenceType[0], new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ClassDef cd3 = new ClassDef(_noSourceInfo, _publicMav,  new Word(_noSourceInfo, \"String\"), new TypeParameter[0],", "+                                  _noType, new ReferenceType[0], new BracedBody(_noSourceInfo, new BodyItemI[0]));", "-      assertEquals(\"The error message should be correct\", \"You cannot define a class with the name String at the Elementary Level, because that class name is reserved.  Please choose a different name for this class\", errors.getLast().getFirst());", "+      assertEquals(\"The error message should be correct\", ", "+                   \"You cannot define a class with the name String at the Elementary Level, because that class name \" +", "+                   \"is reserved.  Please choose a different name for this class\", errors.getLast().getFirst());", "-      ClassDef cd4 = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, ", "-                                  new Word(JExprParser.NO_SOURCE_INFO, \"Integer\"), new TypeParameter[0],", "-                                  JExprParser.NO_TYPE, ", "-                                  new ReferenceType[0], new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ClassDef cd4 = new ClassDef(_noSourceInfo, _publicMav, new Word(_noSourceInfo, \"Integer\"), new TypeParameter[0],", "+                                  _noType, new ReferenceType[0], new BracedBody(_noSourceInfo, new BodyItemI[0]));", "-      assertEquals(\"The error message should be correct\", \"You cannot define a class with the name Integer at the Elementary Level, because that class name is reserved.  Please choose a different name for this class\", errors.getLast().getFirst());", "+      assertEquals(\"The error message should be correct\", ", "+                   \"You cannot define a class with the name Integer at the Elementary Level, because that class name \" +", "+                   \"is reserved.  Please choose a different name for this class\", errors.getLast().getFirst());", "-      ClassDef cd5 = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, ", "-                                  new Word(JExprParser.NO_SOURCE_INFO, \"TestCase\"), new TypeParameter[0],", "-                                  JExprParser.NO_TYPE, ", "-                                  new ReferenceType[0], new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ClassDef cd5 = new ClassDef(_noSourceInfo, _publicMav, new Word(_noSourceInfo, \"TestCase\"), new TypeParameter[0],", "+                                  _noType, new ReferenceType[0], new BracedBody(_noSourceInfo, new BodyItemI[0]));", "-      assertEquals(\"The error message should be correct\", \"You cannot define a class with the name TestCase at the Elementary Level, because that class name is reserved.  Please choose a different name for this class\", errors.getLast().getFirst());", "+      assertEquals(\"The error message should be correct\", ", "+                   \"You cannot define a class with the name TestCase at the Elementary Level, because that class name \" +", "+                   \"is reserved.  Please choose a different name for this class\", errors.getLast().getFirst());"]}], "num": 27874}