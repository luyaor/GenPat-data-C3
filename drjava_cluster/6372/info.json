{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e233f393938bd7b45b859125be50406a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a1b85848d0e6eecee0689a8703b20cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtilTest.java", "commitBeforeChange": "fb074680a667c1bef445c8882705c591e6d2e32a", "commitAfterChange": "cf20ebf3ed8f70fab233d795a534c6fbf0907d4b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public void testArrayIterable()", "signatureAfterChange": "    public void testArrayIterable()", "diff": ["-    assertTrue(intIter.hasNext());", "-    assertEquals(1, intIter.next());", "-    assertTrue(intIter.hasNext());", "-    assertEquals(1, intIter.next());", "-    assertTrue(intIter.hasNext());", "-    assertEquals(2, intIter.next());", "-    assertTrue(intIter.hasNext());", "-    assertEquals(3, intIter.next());", "-    assertTrue(intIter.hasNext());", "-    assertEquals(5, intIter.next());", "-    assertFalse(intIter.hasNext());", "+    assertIterator(intIter, 1, 1, 2, 3, 5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca34fd06675e1d1dfaf16473e34b14df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ReflectUtilTest.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public void testStaticMethodLambdas()", "signatureAfterChange": "         public void testStaticMethodLambdas()", "diff": ["-    assertTrue(p1.value(null));", "+    assertTrue(p1.contains(null));", "-    assertFalse(p2.value(null));", "+    assertFalse(p2.contains(null));", "-    assertFalse(p3.value(null));", "+    assertFalse(p3.contains(null));", "-    assertTrue(p4.value(null));", "+    assertTrue(p4.contains(null));", "-    assertTrue(p5.value(null));", "+    assertTrue(p5.contains(null));", "-    assertFalse(p6.value(null));", "+    assertFalse(p6.contains(null));"]}], "num": 6372}