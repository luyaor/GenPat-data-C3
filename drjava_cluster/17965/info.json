{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6bf12fbdf4f2338eb2509b1b4e0dff82", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b3d5fc1842e581206f30cfeee67cf4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5c952c5847e3008cec3ed5ff89d03d335c050f54", "commitAfterChange": "e3e56a8c058b51612dfa6f1f21259a37eadcdcbb", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": "   private void _setCurrentDirectory(File file)", "signatureAfterChange": "   private void _setCurrentDirectory(File file)", "diff": ["-    _openChooser.setCurrentDirectory(file.getAbsoluteFile());", "-    _saveChooser.setCurrentDirectory(file.getAbsoluteFile());", "-    _javadocChooser.setCurrentDirectory(file.getAbsoluteFile());", "+    // We want to use absolute paths whenever possible, since canonical paths", "+    //  resolve symbolic links and can be quite long and unintuitive.", "+    // However, Windows blows up if you set the current directory of a", "+    //  JFileChooser to an absolute path with \"..\" in it.", "+    // In that case, we'll use the canonical path for the file chooser.", "+    // (Fix for bug 707734)", "+    try {", "+      File f = file.getAbsoluteFile();", "+      if (PlatformFactory.ONLY.isWindowsPlatform() &&", "+          (file.getAbsolutePath().indexOf(\"..\") != -1)) {", "+        f = file.getCanonicalFile();", "+      }", "+      _openChooser.setCurrentDirectory(f);", "+      _saveChooser.setCurrentDirectory(f);", "+      _javadocChooser.setCurrentDirectory(f);", "+    }", "+    catch (IOException ioe) {", "+      // If getCanonicalFile throws an IOException, we can't", "+      //  set the directory of the file chooser.  Oh well.", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8fbfc0b3098a82da642de178e51c1dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1b6ef7c7e1a6439fd1630b14326c67b0978e88ba", "commitAfterChange": "93cff9492f5f66f78081d1bfed6f05eaa775f999", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": "    private void _open()", "signatureAfterChange": "    private void _open()", "diff": ["-    if(_openChooser.getFileFilter().equals(_projectFilter))", "-      openProject(_openSelector);", "-    else", "-      open(_openSelector);", "+    try {", "+      final File[] fileList = _openSelector.getFiles();", "+      ", "+      FileOpenSelector fos = new FileOpenSelector() {", "+        public File[] getFiles(){", "+          return fileList;         ", "+        }", "+      };", "+    ", "+      if(_openChooser.getFileFilter().equals(_projectFilter)) ", "+        openProject(fos);", "+      else", "+        open(fos);", "+    }", "+    catch(OperationCanceledException oce) {", "+      ", "+    }"]}], "num": 17965}