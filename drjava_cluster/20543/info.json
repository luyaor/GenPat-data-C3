{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cbb7260f3e08072cf9af5980fcb0d3da", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2abb3f845eb9000bb3b7b67a93a3b453", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "3c002733e6bec1f112ca58ec38806686ba48b477", "commitAfterChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void addDebugInterpreter(String name, JavaInterpreter interpreter)", "signatureAfterChange": "   public void addDebugInterpreter(String name)", "diff": ["-  public void addDebugInterpreter(String name, JavaInterpreter interpreter) {", "-    if (_debugInterpreters.containsKey(name)) {", "-      throw new IllegalArgumentException(\"Names for debug interpreters must be unique\");", "-    }", "-    _debugInterpreters.put(name, interpreter);", "+  public void addDebugInterpreter(String name) {", "+    addDebugInterpreter(name, new DynamicJavaAdapter());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78f0c1e30e55ed7f2823c32df907f455", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "commitAfterChange": "6fa1e9e0526601b88fed849b111530adacda855f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public boolean setActiveInterpreter(String name)", "signatureAfterChange": "    public boolean setActiveInterpreter(String name)", "diff": ["+   */", "+   public boolean setActiveInterpreter(String name) {", "+     _activeInterpreter = getInterpreter(name);", "+     return _activeInterpreter.isInProgress();", "+   }", "-   */", "-  public boolean setActiveInterpreter(String name) {", "-    if (_debugInterpreters.containsKey(name)) {", "-      _activeInterpreter = _debugInterpreters.get(name);", "-      return _activeInterpreter.isInProgress();", "-    }", "-    else {", "-      throw new IllegalArgumentException(\"Interpreter <\" + name + \"> does not exist.\");", "-    }", "-  }"]}], "num": 20543}