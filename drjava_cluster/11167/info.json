{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42ff55975ccdd8c7e03a684d2d34c045", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16b0107a1ab8795967ddab82e2637deb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "13fd7a397c83b96c149ac8eb636b988dccbb4bed", "commitAfterChange": "7b6e3a6da13b7dd368ad89b9fff988959ce6f154", "methodNumberBeforeChange": 410, "methodNumberAfterChange": 410, "signatureBeforeChange": "     public void caretUpdate(final CaretEvent ce)", "signatureAfterChange": "     public void caretUpdate(final CaretEvent ce)", "diff": ["-      Element root = doc.getDefaultRootElement();", "-      int line = root.getElementIndex(offset);", "-      int col = offset - root.getElement(line).getStartOffset();", "-      updateLocation(line + 1, col);  // line numbers are 1-based", "+      String text = doc.getText();", "+      if (offset == _offset + 1 && text.charAt(_offset) != '\\n') {", "+        _col += 1;", "+      }", "+      else {", "+        Element root = doc.getDefaultRootElement();", "+        int line = root.getElementIndex(offset); ", "+        _line = line + 1;     // line numbers are 1-based", "+        _col = offset - root.getElement(line).getStartOffset();", "+      }", "+      updateLocation(_line, _col);  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5ed3ac7e70a99bd39aa1405f5a235c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "commitAfterChange": "fbbca8c38fe9b7414801b8eeb32f639f83abb9c9", "methodNumberBeforeChange": 410, "methodNumberAfterChange": 410, "signatureBeforeChange": "     public void caretUpdate(final CaretEvent ce)", "signatureAfterChange": "     public void caretUpdate(final CaretEvent ce)", "diff": ["-    // The following method does not need to run in the event thread", "-    public void caretUpdate(final CaretEvent ce) { updateLocation(); }", "+    // The following method only runs in the event thread because it is called from DefinitionsPane", "+    public void caretUpdate(final CaretEvent ce) {", "+      OpenDefinitionsDocument doc = _model.getActiveDocument();", "+      int offset = ce.getDot();", "+      Element root = doc.getDefaultRootElement();", "+      int line = root.getElementIndex(offset);", "+      int col = offset - root.getElement(line).getStartOffset();", "+      updateLocation(line + 1, col);  // line numbers are 1-based", "+    }"]}], "num": 11167}