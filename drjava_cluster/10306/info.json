{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74dcf466941cae137fe870f6e00537a2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4066f6ec54b980095bcdae52d2b3b4af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelListTest.java", "commitBeforeChange": "5a2a5e61cb4a1ee4d053834c9eda949c73544637", "commitAfterChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic void testNotifyCollapse()", "signatureAfterChange": "      public void testNotifyCollapse()", "diff": ["-", "-\tpublic void testNotifyCollapse() {", "-\t\t\tModelList<Integer>.Iterator itFull = fFull.getIterator();", "-\t\t\tModelList<Integer>.Iterator itFull2 = fFull.getIterator();", "-\t\t\tModelList<Integer>.Iterator itFull3 = fFull.getIterator();", "-", "-\t\t\titFull2.insert(new Integer(0));", "-\t\t\titFull2.insert(new Integer(1));", "-\t\t\titFull2.insert(new Integer(2));", "-\t\t\titFull2.insert(new Integer(3));", "-\t\t\titFull2.insert(new Integer(4));", "-", "-\t\t\tassertTrue(\"#0.0.0\",itFull.atStart());", "-\t\t\t// we have (4 3 2 1 0), itFull2 points at 4, itFull and itFull3", "-\t\t\t// point at 0.  We want to move itFull back to point at 2 to show", "-\t\t\t// notifyCollapse works", "-", "-\t\t\tfor (int i = 0; i < 3; i++)", "-\t\t\t\titFull.next();", "-\t\t\tfor (int j = 0; j < 5; j++)", "-\t\t\t\titFull3.next();\t\t\t", "-\t\t\tassertEquals(\"#0.0\", new Integer(2), itFull.current());", "-\t\t\tassertEquals(\"#0.1\", new Integer(0), itFull3.current());", "-\t\t\titFull2.collapse(itFull3);", "-\t\t\t", "-\t\t\tassertEquals(\"#1.0\", new Integer(4), itFull2.current());", "-\t\t\tassertEquals(\"#1.1\", new Integer(0), itFull3.current());", "-\t\t\tassertEquals(\"#1.2\", new Integer(0), itFull.current());", "-\t}", "+  ", "+  public void testNotifyCollapse() {", "+    ModelList<Integer>.Iterator itFull = fFull.getIterator();", "+    ModelList<Integer>.Iterator itFull2 = fFull.getIterator();", "+    ModelList<Integer>.Iterator itFull3 = fFull.getIterator();", "+    ", "+    itFull2.insert(new Integer(0));", "+    itFull2.insert(new Integer(1));", "+    itFull2.insert(new Integer(2));", "+    itFull2.insert(new Integer(3));", "+    itFull2.insert(new Integer(4));", "+    ", "+    assertTrue(\"#0.0.0\",itFull.atStart());", "+    // we have (4 3 2 1 0), itFull2 points at 4, itFull and itFull3", "+    // point at 0.  We want to move itFull back to point at 2 to show", "+    // notifyCollapse works", "+    ", "+    for (int i = 0; i < 3; i++) {", "+      itFull.next();", "+    }", "+    for (int j = 0; j < 5; j++) {", "+      itFull3.next();", "+    }", "+    assertEquals(\"#0.0\", new Integer(2), itFull.current());", "+    assertEquals(\"#0.1\", new Integer(0), itFull3.current());", "+    itFull2.collapse(itFull3);", "+    ", "+    assertEquals(\"#1.0\", new Integer(4), itFull2.current());", "+    assertEquals(\"#1.1\", new Integer(0), itFull3.current());", "+    assertEquals(\"#1.2\", new Integer(0), itFull.current());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c27abb4f0dd84d0013e4b8080943e11", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ModelListTest.java", "commitBeforeChange": "5a2a5e61cb4a1ee4d053834c9eda949c73544637", "commitAfterChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic void testNotifyCollapse()", "signatureAfterChange": "      public void testNotifyCollapse()", "diff": ["-", "-\tpublic void testNotifyCollapse() {", "-\t\t\tModelList<Integer>.Iterator itFull = fFull.getIterator();", "-\t\t\tModelList<Integer>.Iterator itFull2 = fFull.getIterator();", "-\t\t\tModelList<Integer>.Iterator itFull3 = fFull.getIterator();", "-", "-\t\t\titFull2.insert(new Integer(0));", "-\t\t\titFull2.insert(new Integer(1));", "-\t\t\titFull2.insert(new Integer(2));", "-\t\t\titFull2.insert(new Integer(3));", "-\t\t\titFull2.insert(new Integer(4));", "-", "-\t\t\tassertTrue(\"#0.0.0\",itFull.atStart());", "-\t\t\t// we have (4 3 2 1 0), itFull2 points at 4, itFull and itFull3", "-\t\t\t// point at 0.  We want to move itFull back to point at 2 to show", "-\t\t\t// notifyCollapse works", "-", "-\t\t\tfor (int i = 0; i < 3; i++)", "-\t\t\t\titFull.next();", "-\t\t\tfor (int j = 0; j < 5; j++)", "-\t\t\t\titFull3.next();\t\t\t", "-\t\t\tassertEquals(\"#0.0\", new Integer(2), itFull.current());", "-\t\t\tassertEquals(\"#0.1\", new Integer(0), itFull3.current());", "-\t\t\titFull2.collapse(itFull3);", "-\t\t\t", "-\t\t\tassertEquals(\"#1.0\", new Integer(4), itFull2.current());", "-\t\t\tassertEquals(\"#1.1\", new Integer(0), itFull3.current());", "-\t\t\tassertEquals(\"#1.2\", new Integer(0), itFull.current());", "-\t}", "+  ", "+  public void testNotifyCollapse() {", "+    ModelList<Integer>.Iterator itFull = fFull.getIterator();", "+    ModelList<Integer>.Iterator itFull2 = fFull.getIterator();", "+    ModelList<Integer>.Iterator itFull3 = fFull.getIterator();", "+    ", "+    itFull2.insert(new Integer(0));", "+    itFull2.insert(new Integer(1));", "+    itFull2.insert(new Integer(2));", "+    itFull2.insert(new Integer(3));", "+    itFull2.insert(new Integer(4));", "+    ", "+    assertTrue(\"#0.0.0\",itFull.atStart());", "+    // we have (4 3 2 1 0), itFull2 points at 4, itFull and itFull3", "+    // point at 0.  We want to move itFull back to point at 2 to show", "+    // notifyCollapse works", "+    ", "+    for (int i = 0; i < 3; i++) {", "+      itFull.next();", "+    }", "+    for (int j = 0; j < 5; j++) {", "+      itFull3.next();", "+    }", "+    assertEquals(\"#0.0\", new Integer(2), itFull.current());", "+    assertEquals(\"#0.1\", new Integer(0), itFull3.current());", "+    itFull2.collapse(itFull3);", "+    ", "+    assertEquals(\"#1.0\", new Integer(4), itFull2.current());", "+    assertEquals(\"#1.1\", new Integer(0), itFull3.current());", "+    assertEquals(\"#1.2\", new Integer(0), itFull.current());", "+  }"]}], "num": 10306}