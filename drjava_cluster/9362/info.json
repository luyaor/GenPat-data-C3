{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ce99ce154800b8ced6e91f7368eee51", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43c02c0d043e352383e2a93631e991d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/NewVersionPopup.java", "commitBeforeChange": "ce9868c401197893c2350342d3a4d99ed1f30047", "commitAfterChange": "815f40b5bb451c8033ddeb39c2dbb5f242c0c317", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      protected void updateAction()", "signatureAfterChange": "      protected void updateAction()", "diff": ["-    cp.add(new JOptionPane(\"Updating, please wait.\",JOptionPane.INFORMATION_MESSAGE,", "+    cp.add(new JOptionPane(\"Waiting for www.sourceforge.net ...\",JOptionPane.INFORMATION_MESSAGE,", "+    JProgressBar pb = new JProgressBar(0,100);", "+    pb.setIndeterminate(true);", "+    cp.add(pb, BorderLayout.SOUTH);", "-          Runtime.getRuntime().addShutdownHook(new Thread() {", "+          Thread restart = new Thread() {", "-          });", "-          _mainFrame.quit();", "+          };", "+          Runtime.getRuntime().addShutdownHook(restart);", "+          Utilities.invokeAndWait(new Runnable() { public void run() { _mainFrame.quit(); } });", "+          // if we get here, then the user has cancelled the shutdown", "+          // remove the hook", "+          Runtime.getRuntime().removeShutdownHook(restart);", "+          tempClassFile.delete();", "+          JOptionPane.showMessageDialog(_mainFrame, ", "+                                        \"A new version of DrJava was downloaded. However, you chose\\n\"+", "+                                        \"not to restart DrJava, so the old version was not automatically\\n\"+", "+                                        \"replaced.\\n\\n\"+", "+                                        \"The new copy is now installed at:\\n\"+", "+                                        finalDestFile.getAbsolutePath()+\"\\n\\n\"+", "+                                        \"The old copy is still installed at:\\n\"+", "+                                        targetFile.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b032c93522d921b79dd1140ae902c4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7228cea597c372946661a7e1f1db20fd24b9dee1", "commitAfterChange": "8bb2649bd077e2bf6ccaf611ff49da8ad083e7b7", "methodNumberBeforeChange": 414, "methodNumberAfterChange": 415, "signatureBeforeChange": "   private void _setUpTabs()", "signatureAfterChange": "   private void _setUpTabs()", "diff": ["-//        Utilities.showDebug(\"MainFrame.stateChanged called with event\");", "+//        Utilities.show(\"_tabbedPane.stateChanged called with event\");", "-        if (_tabbedPane.getSelectedComponent() == _consoleScroll)", "+        if (_tabbedPane.getSelectedIndex() == INTERACTIONS_TAB) {", "-          SwingUtilities.invokeLater(new Runnable() { public void run() { _consolePane.requestFocusInWindow(); } });", "-          ", "+//          System.err.println(\"Interactions Container Selected\");", "+          _interactionsContainer.setVisible(true);  // kluge to overcome subtle focus bug", "+          EventQueue.invokeLater(new Runnable() { public void run() { _interactionsContainer.requestFocusInWindow(); } });", "+        }", "+        else if (_tabbedPane.getSelectedIndex() == CONSOLE_TAB) {", "+          // Use SwingUtilities because this action must execute AFTER all pending events in the event queue", "+//          System.err.println(\"Console Scroll Selected\");", "+          EventQueue.invokeLater(new Runnable() { public void run() { _consoleScroll.requestFocusInWindow(); } });", "+        }", "+    ", "+    _interactionsContainer.addFocusListener(new FocusAdapter() {", "+      public void focusGained(FocusEvent e) { ", "+        EventQueue.invokeLater(new Runnable() { ", "+          public void run() {", "+//            System.err.println(\"Requesting focus in interactions pane\");", "+            _interactionsPane.requestFocusInWindow(); ", "+          }", "+        });", "+      }", "+    });", "-    _tabbedPane.setSelectedIndex(0);", "+    _tabbedPane.setSelectedIndex(INTERACTIONS_TAB);"]}], "num": 9362}