{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f96f4ba28f3a19536a4e61e191d37e3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d71f74d5621f4b06d20ef81624aa982", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JDKToolsLibrary.java", "commitBeforeChange": "e4d6291f62d6e504510509a9010f43ba6552f00d", "commitAfterChange": "217c110d76e83e4661793b1b3dd648691e91b61d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public static JDKToolsLibrary makeFromRuntime(GlobalModel model)", "signatureAfterChange": "      public static JDKToolsLibrary makeFromRuntime(GlobalModel model)", "diff": ["-        CompilerInterface attempt = (CompilerInterface) ", "-          ReflectUtil.loadObject(compilerAdapter, new Class[]{FullVersion.class, List.class}, version, bootClassPath);", "+        Class[] sig = new Class[]{ FullVersion.class, String.class, List.class };", "+        Object[] args = new Object[]{ version, \"the runtime class path\", bootClassPath };", "+        CompilerInterface attempt = (CompilerInterface) ReflectUtil.loadObject(compilerAdapter, sig, args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f60b5c098d6876a089291951a18a833a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "e4d6291f62d6e504510509a9010f43ba6552f00d", "commitAfterChange": "217c110d76e83e4661793b1b3dd648691e91b61d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public static JarJDKToolsLibrary makeFromFile(File f, GlobalModel model)", "signatureAfterChange": "      public static JarJDKToolsLibrary makeFromFile(File f, GlobalModel model)", "diff": ["-      Iterable<File> path = IterUtil.singleton(f);", "+      Iterable<File> path = IterUtil.singleton(f);", "-          Class[] sig = new Class[]{ FullVersion.class, List.class };", "-          CompilerInterface attempt = (CompilerInterface) ", "-            ReflectUtil.loadLibraryAdapter(loader, path, compilerAdapter, sig, version, bootClassPath);", "+          Class[] sig = new Class[]{ FullVersion.class, String.class, List.class };", "+          Object[] args = new Object[]{ version, f.toString(), bootClassPath };", "+          CompilerInterface attempt = (CompilerInterface) ReflectUtil.loadLibraryAdapter(loader, path, compilerAdapter, ", "+                                                                                         sig, args);"]}], "num": 26998}