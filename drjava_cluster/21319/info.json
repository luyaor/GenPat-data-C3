{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5339e3eddf7362f940f58cc8b3d09875", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a43b0acb77ec37a4c337445160fcf177", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersionTest.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testParseFullVersionUnrecognized()", "signatureAfterChange": "      public void testParseFullVersionUnrecognized()", "diff": ["+    FullVersion v8 = parseFullVersion(\"1.7.0\",\"\",\"\");", "+    assertEquals(\"7.0\", v8.versionString());", "+    ", "+    FullVersion v9 = parseFullVersion(\"1.7.0_11\",\"\",\"\");", "+    assertEquals(\"7.0_11\", v9.versionString());", "+    ", "+    sorter.add(v9);", "+    sorter.add(v8);", "-    assertTrue(IterUtil.isEqual(sorter, IterUtil.make(v1, v2, v3, v4, v5, v6, v7)));", "+    assertTrue(IterUtil.isEqual(sorter, IterUtil.make(v1, v2, v3, v4, v5, v6, v7, v8, v9)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdddd4663faa860d78c5845e0e62a4c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersionTest.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testParseFullVersion()", "signatureAfterChange": "      public void testParseFullVersion()", "diff": ["+    FullVersion v8 = parseFullVersion(\"1.7.0\");", "+    assertEquals(\"7.0\", v8.versionString());", "+    ", "+    FullVersion v9 = parseFullVersion(\"1.7.0_11\");", "+    assertEquals(\"7.0_11\", v9.versionString());", "+    ", "+    sorter.add(v9);", "+    sorter.add(v8);", "-    assertTrue(IterUtil.isEqual(sorter, IterUtil.make(v1, v2, v3, v4, v5, v6, v7)));", "+    assertTrue(IterUtil.isEqual(sorter, IterUtil.make(v1, v2, v3, v4, v5, v6, v7, v8, v9)));"]}], "num": 21319}