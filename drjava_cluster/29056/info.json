{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dbba3fca87da1ad5f4bfbfd9c5d6a37a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "190b5417ba2129f1d8de4abaac9f4f77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/KeyStrokeOption.java", "commitBeforeChange": "7bc6765693343476fc2f77685ee6bc931bf3b3f3", "commitAfterChange": "7f2688df99750a8a6042f231ca2bc23d3f2c923c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public String format(KeyStroke k)", "signatureAfterChange": "   public String format(KeyStroke k)", "diff": ["-      s += \" \";", "+      if (!s.equals(\"\"))", "+        s += \" \";", "-        return s; ", "-        /*String key = new String();", "-         switch(k.getKeyCode()) {", "-         // COMMA", "-         case 44:key = \"COMMA\";", "-         break;", "-         // PERIOD", "-         case 46:key = \"PERIOD\";", "-         break;", "-         // SLASH", "-         case 47:key = \"SLASH\";", "-         break;", "-         // SEMICOLON", "-         case 59:key = \"SEMICOLON\";", "-         break;", "-         // EQUALS", "-         case 61:key = \"EQUALS\";", "-         break;", "-         // OPEN BRACKET", "-         case 91:key = \"OPEN_BRACKET\";", "-         break;", "-         // BACKSLASH", "-         case 92:key = \"BACKSLASH\";", "-         break;", "-         // CLOSE BRACKET", "-         case 93:key = \"CLOSE_BRACKET\";", "-         break;", "-         default:key = KeyEvent.getKeyText(k.getKeyCode()).toUpperCase()", "-         .replace(' ', '_');", "-         }", "-         s += key;*/", "+        return s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94f9f86628e3408ab521a13c260b7da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/KeyStrokeOption.java", "commitBeforeChange": "86073a7fb314101fbea8399fc18b3a4415cbc887", "commitAfterChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public String format(KeyStroke k)", "signatureAfterChange": "   public String format(KeyStroke k)", "diff": ["+      if (k == NULL_KEYSTROKE)", "+        return \"null\";", "-        s += KeyEvent.getKeyText(k.getKeyCode()).toUpperCase().replace(' ', '_');", "+        String key = (String) keys.get(new Integer(k.getKeyCode()));", "+        if (key == null)", "+          throw new IllegalArgumentException(\"Invalid keystroke\");", "+        s += key;", "+        return s; ", "+        /*String key = new String();", "+         switch(k.getKeyCode()) {", "+         // COMMA", "+         case 44:key = \"COMMA\";", "+         break;", "+         // PERIOD", "+         case 46:key = \"PERIOD\";", "+         break;", "+         // SLASH", "+         case 47:key = \"SLASH\";", "+         break;", "+         // SEMICOLON", "+         case 59:key = \"SEMICOLON\";", "+         break;", "+         // EQUALS", "+         case 61:key = \"EQUALS\";", "+         break;", "+         // OPEN BRACKET", "+         case 91:key = \"OPEN_BRACKET\";", "+         break;", "+         // BACKSLASH", "+         case 92:key = \"BACKSLASH\";", "+         break;", "+         // CLOSE BRACKET", "+         case 93:key = \"CLOSE_BRACKET\";", "+         break;", "+         default:key = KeyEvent.getKeyText(k.getKeyCode()).toUpperCase()", "+         .replace(' ', '_');", "+         }", "+         s += key;*/", "-    else", "-      return null;", "+    else return \"\";"]}], "num": 29056}