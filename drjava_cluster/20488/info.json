{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26680357c561e12ee1c3cf791936eaf1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42c6dac0713cc9b1c39ede12f8dd6806", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilities.java", "commitBeforeChange": "dd7f7fbbfae186b155b4ab01f1629e1623154745", "commitAfterChange": "0cc20e52ff83b7000f2c534f4df717db22d53165", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public static Method lookupMethod(Class cl, String name, Class[] ac)     throws NoSuchMethodException", "signatureAfterChange": "   public static Method lookupMethod(Class cl, String name, Class[] ac)     throws NoSuchMethodException", "diff": ["+      ", "-      throw new NoSuchMethodException(name);", "+      ms = getVarArgsMethods(cl, name, ac.length);", "+      ", "+      // Search for the methods with good parameter types and", "+      // put them in 'mm'", "+      it = ms.iterator();", "+      while (it.hasNext()) {", "+        Method m = it.next();", "+        if (hasVarArgsCompatibleSignatures(m.getParameterTypes(), ac)) {", "+          mm.add(m);", "+        }", "+      }", "+      ", "+      if(mm.isEmpty()){", "+        throw new NoSuchMethodException(name);", "+      }", "-      result = selectTheMostSpecificMethod(result, it.next());", "+      result = selectTheMostSpecificMethod(result, it.next()); /**/// may be confused by mm having varargs and need to be changed"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5e6d8a6f5f18232cf7b203d069e1ac5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilities.java", "commitBeforeChange": "2fc4395eb72dbc8caeb586fbd5d1fef990083e71", "commitAfterChange": "a2262b2230c42b5cda2b42cb16829b87b361f597", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static Constructor lookupConstructor(Class cl, Class [] ac)     throws NoSuchMethodException", "signatureAfterChange": "   public static Constructor lookupConstructor(Class cl, Class [] ac)     throws NoSuchMethodException", "diff": ["-      throw new NoSuchMethodException(cl.getName()+\" constructor\");", "+      // It is here that we have to take care of boxing/unboxing and varargs", "+      ", "+      ", "+      // Do second pass for finding a varargs method that matches given method call", "+      ", "+      ms = getVarArgsConstructors(cl, ac.length);", "+      ", "+      // Search for the methods with good parameter types and", "+      // put them in 'mm'", "+      it = ms.iterator();", "+      while (it.hasNext()) {", "+        Constructor m = it.next();", "+        if (hasVarArgsCompatibleSignatures(m.getParameterTypes(), ac)) {", "+          mm.add(m);", "+        }", "+      }", "+      ", "+      if(mm.isEmpty()){", "+        throw new NoSuchMethodException(cl.getName()+\" constructor\");", "+      }"]}], "num": 20488}