{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "099b066520c04acf9676b9f5f0238bce", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac8b5ebfc10e3cedfe024db0d0a05cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/ContinuationTest.java", "commitBeforeChange": "2c0187dc2f9d55623655e85f4610811768ae2c9f", "commitAfterChange": "bc2858e97e525b9ca8a53860833c36e678cd89a9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "              public void testSum()", "signatureAfterChange": "              public void testSum()", "diff": ["-    try { sum(300000); fail(\"sum(300000) did not overflow the stack\"); }", "-    catch (StackOverflowError e) { /* expected behavior */ }", "+    try { sum(500); fail(\"sum(500) did not overflow the stack\"); }", "+    catch (RuntimeException e) { /* expected behavior */ }", "-    long bigResult = safeSum(300000).value();", "-    assertTrue(bigResult > 300000l);", "-    assertTrue(bigResult < (300000l * 300000l));", "+    long bigResult = safeSum(500).value();", "+    assertTrue(bigResult > 500l);", "+    assertTrue(bigResult < (500l * 500l));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af385558df58dab901080944cc49a0e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/ContinuationTest.java", "commitBeforeChange": "2c0187dc2f9d55623655e85f4610811768ae2c9f", "commitAfterChange": "bc2858e97e525b9ca8a53860833c36e678cd89a9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testIsEven()", "signatureAfterChange": "      public void testIsEven()", "diff": ["-    try { isEven(300000); fail(\"isEven(300000) did not overflow the stack\"); }", "-    catch (StackOverflowError e) { /* expected behavior */ }", "+    try { isEven(500); fail(\"isEven(500) did not overflow the stack\"); }", "+    catch (RuntimeException e) { /* expected behavior */ }", "-    assertTrue(safeIsEven(300000).value());", "+    assertTrue(safeIsEven(500).value());"]}], "num": 2835}