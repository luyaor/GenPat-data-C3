{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a72d1a9ef65e823226f30279dba878d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1561b1c456dd1140bf12c77a0b22ec20", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModel.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JUnitErrorModel(DefinitionsDocument doc, JUnitError[] errors)", "signatureAfterChange": "   public JUnitErrorModel(JUnitError[] errors, GlobalModel model, boolean testsHaveRun)", "diff": ["-  public JUnitErrorModel(DefinitionsDocument doc, JUnitError[] errors) {", "-    _document = doc;", "-    _testsHaveRun = true;", "-    _numErrors = errors.length;", "-    try {", "-      _file = doc.getFile();", "-    }", "-    catch (FileMovedException fme) {", "-      // Recover, even though file was deleted", "-      _file = fme.getFile();", "-    }", "-    catch (IllegalStateException ise) {", "-      _file = null;", "-    }", "-    ", "-    //Create the array of errors and failures, ordered by line number", "-    ", "-    /* while ( (i < errors.length) && ( (tFail != null) || (tErr != null) ) ) {", "-     ", "-      if ( (jFail != null) && ( (jErr == null) || (jFail.lineNumber() < jErr.lineNumber()) ) ) {", "-        errors[i] = jFail;", "-        System.out.println(jFail.lineNumber());", "-        if (failures.hasMoreElements()) {", "-          tFail = (TestFailure)failures.nextElement();", "-          jFail = _makeJUnitError(tFail, theclass, false);", "-        }", "-        else {", "-          tFail = null;", "-          jFail = null;", "-        }", "-      }", "-      ", "-      else if ( (jErr != null) && ( (jFail == null) || (jErr.lineNumber() <= jFail.lineNumber()) ) ) {", "-        errors[i] = jErr;", "-        System.out.println(jErr.lineNumber());", "-        if (errEnum.hasMoreElements()) {", "-          tErr = (TestFailure)errEnum.nextElement();", "-          jErr = _makeJUnitError(tErr, theclass, true);", "-        }", "-        else {", "-          tErr = null;", "-          jErr = null;", "-        }", "-      }", "-       ", "-      i++;", "-    }*/", "-   ", "-    _groupErrors(errors);", "+  public JUnitErrorModel(JUnitError[] errors, GlobalModel model, boolean testsHaveRun) {", "+    super(errors, model);", "+    _testsHaveRun = testsHaveRun;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e11fb407b39cdf28c46a678f2d2ac62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDABreakpoint.java", "commitBeforeChange": "9297bd3255995599281a9a548fcd6e849eecaf7b", "commitAfterChange": "b8d26b54d9d0d791e5e97a6dd352ae0f9f5f3b20", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean isEnabled, JPDADebugger manager)     throws DebugException", "signatureAfterChange": "   public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, boolean isEnabled, JPDADebugger manager)     throws DebugException", "diff": ["-  public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean isEnabled, JPDADebugger manager)", "+  public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, boolean isEnabled, JPDADebugger manager)", "-    _lineNumber = lineNumber;", "-    ", "-    try {", "-      _startPos = doc.createPosition(_doc._getLineStartPos(offset));", "-      _endPos = doc.createPosition(_doc._getLineEndPos(offset));", "-    }", "-    catch (BadLocationException e) { throw new UnexpectedException(e); }", "+    update();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55e3954c9f19b661195cd6dee3d14d6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6082e28d363f7796f6c9506e0c82e9e5f29262e2", "commitAfterChange": "35d96698360e3de9d027b8743e5a37f097d6163e", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 131, "signatureBeforeChange": "    private void _open()", "signatureAfterChange": "    private void _open()", "diff": ["+    open(_openSelector);", "+  }", "-      final File[] fileList = _openSelector.getFiles();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e7a3a86e421639c2edc1810578474a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "8cfaf2efb8ae59b79b9538e0bd5eaf251c6db08b", "commitAfterChange": "b732820bc2f8849bda78001b782e555a753cad1e", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   private boolean _shouldIgnore(int foundOffset, AbstractDocumentInterface doc)", "signatureAfterChange": "   private boolean _shouldIgnore(int foundOffset, AbstractDocumentInterface doc)", "diff": ["-    try{", "-      doc.acquireReadLock();", "-      String docText;", "-      try{", "-        docText = doc.getText(0, foundOffset);", "-      }", "-      finally{doc.releaseReadLock();}", "-    ", "-      return ((_matchWholeWord && !wholeWordFoundAtCurrent(doc, foundOffset)) || ", "-              (_ignoreCommentsAndStrings && ", "-               _model.getODDForDocument(doc).getStateAtCurrent() ", "-                 != ReducedModelStates.FREE));", "-    }", "-    catch(BadLocationException e) { throw new UnexpectedException(e); }", "+    return (_matchWholeWord && !wholeWordFoundAtCurrent(doc, foundOffset)) || ", "+      (_ignoreCommentsAndStrings && _model.getODDForDocument(doc).getStateAtCurrent() != ReducedModelStates.FREE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60c3177f894e2c9b30ea094956fb6612", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public FindReplaceMachine(Document doc, int position)      throws BadLocationException", "signatureAfterChange": "   public FindReplaceMachine()", "diff": ["-  public FindReplaceMachine(Document doc, int position) ", "-    throws BadLocationException", "-  {", "-    // we have to put this in here because createPosition", "-    // will not catch these cases for us.  Better safe than", "-    // sorry, and we shouldn't have to deal later with positions", "-    // that are not within the bounds of the document.", "-    if ((position < 0) ||", "-        (position > doc.getLength())) ", "-    {", "-      throw new BadLocationException(\"position outside document bounds\",", "-                                     position);", "-    }", "-    _doc = doc;", "-    _start = _doc.createPosition(position);", "-    _current = _doc.createPosition(position);", "+   */", "+  public FindReplaceMachine() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72c652d81aa3746e33d33a4a281f5593", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerRegistry.java", "commitBeforeChange": "7b4a527a2fd4010c88a2ef6ea8f158547b322968", "commitAfterChange": "7b22fbe0160e9fdc451caeb623e46b870b03ccd3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   private CompilerInterface _instantiateCompiler(String name) throws Throwable", "signatureAfterChange": "   private CompilerInterface _instantiateCompiler(String name) throws Throwable", "diff": ["+    return createCompiler(clazz);", "+  }", "-      return (CompilerInterface) field.get(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4dc6486ff95471023e8192d2d730c31", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "14999011605e2c3a05dc56c0f62a941e8b525311", "commitAfterChange": "9ac999ce828a3f9b8d41d5a1d9e3b21904fde907", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public static boolean contains(Iterable<?> iter, Object o)", "signatureAfterChange": "   public static boolean contains(Iterable<?> iter, Object o)", "diff": ["+    else { return iteratedContains(iter, o); }", "+  }", "-      if (o == null) {", "-        for (Object elt : iter) {", "-          if (elt == null) { return true; }", "-        }", "-        return false;", "-      else {", "-        for (Object elt : iter) {", "-          if (o.equals(elt)) { return true; }", "-        }", "-        return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa48a196ff2bd23ca2077795b9813939", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2635960b836d3430a185539ff1211d21f9bd0bdd", "commitAfterChange": "1b6ef7c7e1a6439fd1630b14326c67b0978e88ba", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": "   private void _openProject()", "signatureAfterChange": "   private void _openProject()", "diff": ["+    openProject(_openProjectSelector);", "+  }", "-      final File[] file = _openProjectSelector.getFiles();"]}], "num": 6908}