{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6cc01b1a9af92f04f8db9d10f181036", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7305b2dbf1514482b92c9a10181c35b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "diff": ["-    ", "-    try { pr = pr.getCanonicalFile(); }", "+    try {", "+      pr = pr.getCanonicalFile();", "+    }", "-    ", "-    INavigatorItemFilter<OpenDefinitionsDocument> navItem1 = new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getSourceBinTitle(),", "+                                                                          new INavigatorItemFilter<OpenDefinitionsDocument>() {", "-    };", "+    }));", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getSourceBinTitle(), navItem1));", "-    ", "-    INavigatorItemFilter<OpenDefinitionsDocument> navItem2 = new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getAuxiliaryBinTitle(),", "+                                                                          new INavigatorItemFilter<OpenDefinitionsDocument>() {", "-    };", "+    }));", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getAuxiliaryBinTitle(), navItem2));", "-    ", "-    INavigatorItemFilter<OpenDefinitionsDocument> navItem3 = new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getExternalBinTitle(),", "+                                                                          new INavigatorItemFilter<OpenDefinitionsDocument>() {", "-    };", "-                                                                          ", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getExternalBinTitle(), navItem3));", "-                                                                    ", "+    }));", "+    ", "-      new AWTContainerNavigatorFactory<OpenDefinitionsDocument>().", "-      makeTreeNavigator(projfilepath, getDocumentNavigator(), l);", "+      new AWTContainerNavigatorFactory<OpenDefinitionsDocument>().makeTreeNavigator(projfilepath, getDocumentNavigator(), l);", "+//    synchronized(_auxiliaryFiles) {", "+//      _auxiliaryFiles.clear();", "+//      for (File file: auxFiles) { _auxiliaryFiles.add(file); }", "+//    }", "+    ", "+//    Utilities.show(\"Project Root loaded into grouping state is \" + projRoot);", "+    ", "-                                                      auxFiles, excludedFiles, projectClassPaths, createJarFile, ", "-                                                      createJarFlags, autoRefresh));", "+                                                      auxFiles, excludedFiles, projectClassPaths, createJarFile, createJarFlags, ", "+                                                      autoRefresh));", "-          getDebugger().toggleBreakpoint(odd, odd._getOffset(lnr), lnr, dbd.isEnabled()); ", "+          odd.acquireReadLock();", "+          try { getDebugger().toggleBreakpoint(odd, odd._getOffset(lnr), lnr, dbd.isEnabled()); }", "+          finally { odd.releaseReadLock(); }", "-          if (getOpenDefinitionsDocuments().contains(odd)) { // bookmark is not stale", "-            final Position startPos = odd.createPosition(bm.getStartOffset());", "-            final Position endPos = odd.createPosition(bm.getEndOffset());", "-            try { getBookmarkManager().addRegion(new DocumentRegion(odd, startPos, endPos)); }", "-            catch(Exception e) { DrJavaErrorHandler.record(e); }  // should never happen", "-          }", "-          // should remove stale bookmark", "+          final Position startPos = odd.createPosition(bm.getStartOffset());", "+          final Position endPos = odd.createPosition(bm.getEndOffset());", "+          getBookmarkManager().addRegion(new DocumentRegion(odd, startPos, endPos));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7a0393912055e2d43d3ab68a17783e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b6148d8c1aaf55232aeac694d90234c9353139cd", "commitAfterChange": "536afaee0374767d0f8bdf572a332576e3f54467", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "diff": ["-    List<Pair<String, INavigatorItemFilter>> l = new LinkedList<Pair<String, INavigatorItemFilter>>();", "-    l.add(new Pair<String, INavigatorItemFilter>(getSourceBinTitle(), new INavigatorItemFilter() {", "-      public boolean accept(INavigatorItem n) {", "-        OpenDefinitionsDocument d = (OpenDefinitionsDocument) n;", "-        return d.isInProjectPath();", "-      }", "-    }));", "+    List<Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>> l = ", "+        new LinkedList<Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>>();", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getSourceBinTitle(), ", "+        new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+          public boolean accept(OpenDefinitionsDocument n) {", "+            return n.isInProjectPath();", "+          }", "+        }));", "-    l.add(new Pair<String, INavigatorItemFilter>(getAuxiliaryBinTitle(), new INavigatorItemFilter() {", "-      public boolean accept(INavigatorItem n) {", "-        OpenDefinitionsDocument d =  (OpenDefinitionsDocument) n;", "-        return d.isAuxiliaryFile();", "-      }", "-    }));", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getAuxiliaryBinTitle(), ", "+        new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+          public boolean accept(OpenDefinitionsDocument n) {", "+            return n.isAuxiliaryFile();", "+          }", "+        }));", "-    l.add(new Pair<String, INavigatorItemFilter>(getExternalBinTitle(), new INavigatorItemFilter() {", "-      public boolean accept(INavigatorItem n) {", "-        OpenDefinitionsDocument d = (OpenDefinitionsDocument) n;", "-        return !(d.inProject() || d.isAuxiliaryFile()) || d.isUntitled();", "-      }", "-    }));", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getExternalBinTitle(), ", "+        new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+          public boolean accept(OpenDefinitionsDocument d) {", "+            return !(d.inProject() || d.isAuxiliaryFile()) || d.isUntitled();", "+          }", "+        }));", "-    IDocumentNavigator newNav = ", "-      AWTContainerNavigatorFactory.Singleton.makeTreeNavigator(projfilepath, getDocumentNavigator(), l);", "+    IDocumentNavigator<OpenDefinitionsDocument> newNav = ", "+      new AWTContainerNavigatorFactory<OpenDefinitionsDocument>().makeTreeNavigator(projfilepath, getDocumentNavigator(), l);", "-              final INavigatorItem idoc = d;", "-              _documentNavigator.refreshDocument(idoc, path);  // this operation must run in event thread", "+              _documentNavigator.refreshDocument(d, path);  // this operation must run in event thread", "-      ((JTreeSortNavigator)_documentNavigator).collapsePaths(ir.getCollapsedPaths());", "+      ((JTreeSortNavigator<?>)_documentNavigator).collapsePaths(ir.getCollapsedPaths());"]}], "num": 4794}