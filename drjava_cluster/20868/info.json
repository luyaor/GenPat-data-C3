{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1c7168c994f7d7fe25358dbc9072718", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1da263388aa168d1ccb4051268cbc5d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "5e7a16013fcb5945eddc036e2d2d0ce3e14ba2d0", "commitAfterChange": "e1389ddb9dcb8a7d3a230cc1be322481e1c8fd6a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void forPackageStatementDoFirst(PackageStatement that)", "signatureAfterChange": "   public Void forPackageStatementDoFirst(PackageStatement that)", "diff": ["-  public void forPackageStatementDoFirst(PackageStatement that) {", "-    _addError(\"Package statements cannot be used at the Intermediate level.  All Intermediate level classes and interfaces are assumed to be in the default package\", that);", "+  public Void forPackageStatementDoFirst(PackageStatement that) {", "+    _addError(\"Package statements cannot be used at the Intermediate level.  \" +", "+              \"All Intermediate level classes and interfaces are assumed to be in the default package\", that);", "+    return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d3fe73d46dafc6cbaefb04ac4636357", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryVisitor.java", "commitBeforeChange": "5e7a16013fcb5945eddc036e2d2d0ce3e14ba2d0", "commitAfterChange": "e1389ddb9dcb8a7d3a230cc1be322481e1c8fd6a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void forPrimitiveTypeDoFirst(PrimitiveType that)", "signatureAfterChange": "   public Void forPrimitiveTypeDoFirst(PrimitiveType that)", "diff": ["-  public void forPrimitiveTypeDoFirst(PrimitiveType that) {", "+  public Void forPrimitiveTypeDoFirst(PrimitiveType that) {", "-      _addError(\"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Elementary level\", that);", "+      _addError(\"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" \" + ", "+                \"can be used at the Elementary level\", that);", "+    return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e93b4161f43a3b1dcf6a082fb16de814", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryVisitor.java", "commitBeforeChange": "5e7a16013fcb5945eddc036e2d2d0ce3e14ba2d0", "commitAfterChange": "e1389ddb9dcb8a7d3a230cc1be322481e1c8fd6a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void forClassDefDoFirst(ClassDef that)", "signatureAfterChange": "   public Void forClassDefDoFirst(ClassDef that)", "diff": ["-  public void forClassDefDoFirst(ClassDef that) {", "+  public Void forClassDefDoFirst(ClassDef that) {", "-    SymbolData javaLangClass = getSymbolData(\"java.lang.\" + that.getName().getText(), that.getSourceInfo(), true, false, false, false);", "+    SymbolData javaLangClass = ", "+      getSymbolData(\"java.lang.\" + that.getName().getText(), that.getSourceInfo(), true, false, false, false);", "-      _addError(\"You cannot define a class with the name \" + that.getName().getText() + \" at the Elementary Level, because that class name is reserved.  Please choose a different name for this class\", that);", "+      _addError(\"You cannot define a class with the name \" + that.getName().getText() + ", "+                \" at the Elementary Level, because that class name is reserved.\" +", "+                \"  Please choose a different name for this class\", that);", "-    super.forClassDefDoFirst(that);", "+    return super.forClassDefDoFirst(that);"]}], "num": 20868}