{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38090819d5c3f161c7d8abc79b1cdc72", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16417ce61a10ad1f9c1221f51441bc96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 196, "signatureBeforeChange": "   public void exportOldProject(File file, HashMap<OpenDefinitionsDocument,DocumentInfoGetter> info) throws IOException", "signatureAfterChange": "   public void exportOldProject(File file, HashMap<OpenDefinitionsDocument,DocumentInfoGetter> info) throws IOException", "diff": ["-                                                      builder.getCreateJarFlags(), builder.getAutoRefreshStatus(), builder.getCustomManifest()));", "+                                                      builder.getCreateJarFlags(), builder.getAutoRefreshStatus(),", "+                                                      builder.getCustomManifest(),", "+                                                      builder.getPreferencesStoredInProject()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73f3179594d39497220e06047c852b00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindAnyOccurrenceState.java", "commitBeforeChange": "f26f93ad5e4b158c960a6cefd64cf99f7137ecbc", "commitAfterChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private FindResult _findNextInAllDocs(Document docToSearch) throws BadLocationException", "signatureAfterChange": "   private FindResult _findNextInAllDocs(Document docToSearch) throws BadLocationException", "diff": ["-    if (docToSearch == _doc) {", "-      return new FindResult(_doc, -1, false);", "-    }", "+    if (docToSearch == _doc) return new FindResult(_doc, -1, false);", "-        if (!_searchBackwards) {", "-          index += findWord.length();", "-        }", "+        if (!_searchBackwards) index += findWord.length();", "-      else {", "+      else", "-                                  _docIterator.getPrevDocument(docToSearch));", "-      }", "+                                    _docIterator.getPrevDocument(docToSearch));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f08af969a576ee37ae8e2e6b46c4adc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "51e8f4cbce06d140e9a09dd38237b848b4f27d8a", "commitAfterChange": "d350dd729092f66f8ad737ae377c54d2ad394fbf", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public ExternalProcessPanel runCommand(String name, String cmdline, String workdir,                                          String drJavaJarFile, PropertyMaps pm)", "signatureAfterChange": "   public ExternalProcessPanel runCommand(String name, String cmdline, String workdir,                                          String enclosingFile, PropertyMaps pm)", "diff": ["-  /** Run a command and return an external process panel. */", "+    */", "-                                         String drJavaJarFile, PropertyMaps pm) {", "+                                         String enclosingFile, PropertyMaps pm) {", "+    ((MutableFileProperty)pm.getProperty(\"enclosing.djapp.file\")).setFile(enclosingFile.length()>0?", "+                                                                            new File(enclosingFile):null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4fe1477590afc022019e8731aebc870", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "1502cfa27280e1c7a53d8bd6dee788f17c33dc23", "commitAfterChange": "f3485582e7c13f9ae164de3e45280fa4f5c05b3e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   private FindResult _findNext(int start, int end)", "signatureAfterChange": "   private FindResult _findNext(int start, int end)", "diff": ["-          AbstractDocumentInterface nextDocToSearch = (!_searchBackwards ? _docIterator.getNextDocument(_doc) :", "-                                                         _docIterator.getPrevDocument(_doc));", "+          AbstractDocumentInterface nextDocToSearch;", "+          ", "+          nextDocToSearch = (!_searchBackwards ? _docIterator.getNextDocument(_doc) :", "+                                                 _docIterator.getPrevDocument(_doc));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fad71fbbb805ba44c4630a47c761464e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 186, "methodNumberAfterChange": 195, "signatureBeforeChange": "   public void saveProject(File file, HashMap<OpenDefinitionsDocument, DocumentInfoGetter> info) throws IOException", "signatureAfterChange": "   public void saveProject(File file, HashMap<OpenDefinitionsDocument, DocumentInfoGetter> info) throws IOException", "diff": ["-                                                      builder.getCreateJarFlags(), builder.getAutoRefreshStatus(), builder.getCustomManifest()));", "+                                                      builder.getCreateJarFlags(), builder.getAutoRefreshStatus(),", "+                                                      builder.getCustomManifest(),", "+                                                      builder.getPreferencesStoredInProject()));"]}], "num": 1020}