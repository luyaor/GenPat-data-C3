{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2568b8504240784fdc751349c65bf943", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3825027e172a7c6e3972ff96ea259fb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void testThrowRuntimeException() throws Throwable", "signatureAfterChange": "     public void testThrowRuntimeException() throws Throwable", "diff": ["+    _jvm.resetFlags();", "-    assertTrue(\"exception message\", _jvm.exceptionMsgBuf.startsWith(\"java.lang.RuntimeException\"));", "-    // TODO: eliminate the unnecessary stack trace from the error message (replacing with an", "-    // accurate stack trace from the interpreted language's point of view)", "+    assertTrue(\"exception message\", _jvm.exceptionMsgBuf().startsWith(\"java.lang.RuntimeException\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f8aef8d6dce70783925faa18dbbdb49", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 26, "signatureBeforeChange": "    public void testStackTraceEmptyTrace() throws Throwable", "signatureAfterChange": "              public Void forUnexpectedException(Throwable t)", "diff": ["-", "-  public void testStackTraceEmptyTrace() throws Throwable {", "-    _log.log(\"NewJVMTest.testStackTraceEmptyTrace executing\");", "-    synchronized(_testLock) {", "-      _jvm.interpret(\"null.toString()\");", "-", "-      while (_jvm.exceptionClassBuf == null) {", "-        _testLock.wait();", "-      }", "-", "-      assertEquals(\"exception class\",", "-                   \"java.lang.NullPointerException\",", "-                   _jvm.exceptionClassBuf);", "-      assertEquals(\"stack trace\",", "-                   InterpreterJVM.EMPTY_TRACE_TEXT.trim(),", "-                   _jvm.exceptionTraceBuf.trim());", "-    }", "-  }", "+      ", "+      public Void forUnexpectedException(Throwable t) {", "+        debug.log();", "+        throw new UnexpectedException(t);", "+      }"]}], "num": 4911}