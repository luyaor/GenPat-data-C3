{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e11f96ff50bbc1c750262df2461b14f1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "474a14664faad4ed9033c6003483a2d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "e7660fffdb51451a3d4a61981945f6529addb874", "commitAfterChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void evaluateExpression(SEList e, ProjectFileIR pfir, DocFileListVisitor flv) throws IOException", "signatureAfterChange": "   private void evaluateExpression(SEList e, ProjectFileIR pfir, DocFileListVisitor flv) throws IOException", "diff": ["-//    else if (name.compareToIgnoreCase(\"create-jar-file\") == 0) {", "-//      List<File> fList = exp.getRest().accept(fileListVisitor);", "-//      if (fList.size() > 1) throw new PrivateProjectException(\"Cannot have more than one \\\"create jar\\\" file\");", "-//      else if (fList.size() == 0) pfir.setCreateJarFile(null);", "-//      else pfir.setCreateJarFile(fList.get(0));", "-//    }", "-//    else if (name.compareToIgnoreCase(\"create-jar-flags\") == 0) {", "-//      Integer i = exp.getRest().accept(NumberVisitor.ONLY);", "-//      pfir.setCreateJarFlags(i);", "-//    }", "+    else if (name.compareToIgnoreCase(\"create-jar-file\") == 0) {", "+      List<DocFile> fList = exp.getRest().accept(flv);", "+      if (fList.size() > 1) throw new PrivateProjectException(\"Cannot have more than one \\\"create jar\\\" file\");", "+      else if (fList.size() == 0) pfir.setCreateJarFile(null);", "+      else pfir.setCreateJarFile(fList.get(0));", "+    }", "+    else if (name.compareToIgnoreCase(\"create-jar-flags\") == 0) {", "+      Integer i = exp.getRest().accept(NumberVisitor.ONLY);", "+      pfir.setCreateJarFlags(i);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df8af8f1d8118bfcf7f597c1650daa1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void evaluateExpression(SEList e, ProjectFileIRImpl pfir, FileListVisitor flv)", "signatureAfterChange": "   private void evaluateExpression(SEList e, ProjectFileIRImpl pfir, FileListVisitor flv)", "diff": ["-      if (fList.size() > 1) {", "-        throw new PrivateProjectException(\"Cannot have multiple build directories\");", "-      }", "-      else if (fList.size() == 0) {", "-        pfir.setBuildDirectory(null);", "-      }", "-      else {", "-        pfir.setBuildDirectory(fList.get(0));", "-      }", "+      if (fList.size() > 1) throw new PrivateProjectException(\"Cannot have multiple build directories\");", "+      else if (fList.size() == 0) pfir.setBuildDirectory(null);", "+      else pfir.setBuildDirectory(fList.get(0));", "+    }", "+    else if (name.compareToIgnoreCase(\"work-dir\") == 0) {", "+      List<DocFile> fList = exp.getRest().accept(flv);", "+      if (fList.size() > 1) throw new PrivateProjectException(\"Cannot have multiple working directories\");", "+      else if (fList.size() == 0) pfir.setWorkingDirectory(null);", "+      else pfir.setWorkingDirectory(fList.get(0));", "-      pfir.setClasspaths(fList);", "+      pfir.setClassPaths(fList);", "-  }", "+  } "]}], "num": 4270}