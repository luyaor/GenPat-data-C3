{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d82c9606b0096df6b9c1f616b59d76ca", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0931e3e2220e3bb2dd34160f5c4fae7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "21f40abc1b1e49110febfbe137665f4ad897576b", "commitAfterChange": "f4278ef90560d9633afda2a2ab460f54efaa99f1", "methodNumberBeforeChange": 363, "methodNumberAfterChange": 363, "signatureBeforeChange": "     File _getSourceRoot(String packageName) throws InvalidPackageException", "signatureAfterChange": "     File _getSourceRoot(String packageName) throws InvalidPackageException", "diff": ["+        File grandParentDir;", "+          grandParentDir = parentDir.getParentFile();", "-          if (! part.equals(parentDir.getName ())) {", "+          boolean equal;", "+          if (grandParentDir!=null) {", "+            // grand parent exists, compare File objects", "+            // this handles case-insensitivity for packages on Windows", "+            File packageDir = new File(grandParentDir,part);", "+            equal = packageDir.equals(parentDir);", "+          }", "+          else {", "+            // grand parent does not exist, so we can't create a File object", "+            // with the package's name. Just compare names; this doesn't", "+            // handle case-insensitivity for packages on Windows", "+            equal = part.equals(parentDir.getName()); ", "+          }", "+          if (!equal) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba63fcb8f15d51aea1115f40d3340e6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/ToolsJarClassLoader.java", "commitBeforeChange": "d74188241db90ffeca61708e1d5c82b1650e2c97", "commitAfterChange": "fb8a34355f8b261362a479b30a61f7a961c8b301", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public static File[] getToolsJarFiles()", "signatureAfterChange": "   public static File[] getToolsJarFiles()", "diff": ["-    File home = new File(javaHome);", "-    File libDir = new File(home, \"lib\");", "-    File libDir2 = new File(home.getParentFile(), \"lib\");", "-    ", "+    File home = new File(javaHome);    ", "-    files.addElement(new File(libDir, \"tools.jar\"));", "-    files.addElement(new File(libDir2, \"tools.jar\"));", "+    ", "+    // Check $JAVA_HOME/lib/tools.jar", "+    File libDir = new File(home, \"lib\");", "+    File jar = new File(libDir, \"tools.jar\");", "+    if (jar.exists()) {", "+      files.addElement(jar);", "+    }", "+    ", "+    // Check $JAVA_HOME/../lib/tools.jar", "+    File libDir2 = new File(home.getParentFile(), \"lib\");", "+    File jar2 = new File(libDir2, \"tools.jar\");", "+    if (jar2.exists()) {", "+      files.addElement(jar2);", "+    }", "-      files.addElement(new File(getWindowsToolsJar(javaHome)));", "+      File jar3 = new File(getWindowsToolsJar(javaHome));", "+      if (jar3.exists()) {", "+        files.addElement(jar3);", "+      }"]}], "num": 16427}