{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "750d0e6eb53fe6c8e33009075bb06474", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "156f3498d0291c4e2e2c74ed41b0e90b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "c3686d18afe86d8459a6ef71e5f779589d915dd8", "commitAfterChange": "1e5237b2401d25a04c08b7b54162568a6d55c836", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 122, "signatureBeforeChange": "     public void indentLinesInDefinitions(int selStart, int selEnd, int reason)", "signatureAfterChange": "     public void indentLinesInDefinitions(int selStart, int selEnd,                                          int reason, ProgressMonitor pm)         throws OperationCanceledException", "diff": ["-    public void indentLinesInDefinitions(int selStart, int selEnd, int reason) {", "-      _doc.indentLines(selStart, selEnd, reason);", "+    public void indentLinesInDefinitions(int selStart, int selEnd,", "+                                         int reason, ProgressMonitor pm)", "+        throws OperationCanceledException {", "+      _doc.indentLines(selStart, selEnd, reason, pm);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85468d88d5498c323da2c6583869a342", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "c3686d18afe86d8459a6ef71e5f779589d915dd8", "commitAfterChange": "1e5237b2401d25a04c08b7b54162568a6d55c836", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 66, "signatureBeforeChange": "   public void indentLines(int selStart, int selEnd, int reason)", "signatureAfterChange": "   public void indentLines(int selStart, int selEnd,                            int reason, ProgressMonitor pm)       throws OperationCanceledException", "diff": ["-  public void indentLines(int selStart, int selEnd, int reason) {", "+   */", "+  public void indentLines(int selStart, int selEnd, ", "+                          int reason, ProgressMonitor pm)", "+      throws OperationCanceledException {", "-        _indentLine(reason);", "-        //int caretPos = getCaretPosition();", "-        //_doc().setCurrentLocation(caretPos);", "-        setCurrentLocation(oldCurrentPosition.getOffset());", "-        int space = getWhiteSpace();", "-        move(space);", "-        //setCaretPosition(caretPos + space);", "+        // Indent, updating current location if necessary.", "+        if (_indentLine(reason)) {", "+          //int caretPos = getCaretPosition();", "+          //_doc().setCurrentLocation(caretPos);", "+          setCurrentLocation(oldCurrentPosition.getOffset());", "+          int space = getWhiteSpace();", "+          move(space);", "+          //setCaretPosition(caretPos + space);", "+        }", "-        _indentBlock(selStart, selEnd, reason);", "+        _indentBlock(selStart, selEnd, reason, pm);"]}], "num": 7096}