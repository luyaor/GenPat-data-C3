{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ebcc5b6a0f5252cbc6efbc2c44486347", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f683e99273b97775fa7ae5e2254d341", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public Type visit(AddExpression node)", "signatureAfterChange": "   public Class<?> visit(AddExpression node)", "diff": ["-  public Type visit(AddExpression node) {", "+  public Class<?> visit(AddExpression node) {", "-    Type lc = ln.acceptVisitor(this);", "-    Type rc = rn.acceptVisitor(this);", "-    Type c  = String.class;", "-    ", "+    Class<?> lc = ln.acceptVisitor(this);", "+    Class<?> rc = rn.acceptVisitor(this);", "+    Class<?> c  = String.class;", "+", "+", "-                       InterpreterUtilities.add((Class<?>)c, ln.getProperty(NodeProperties.VALUE),", "+                       InterpreterUtilities.add(c, ln.getProperty(NodeProperties.VALUE),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "518ba52c6b408246ccaaa88128251596", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public Class<?> visit(AddExpression node)", "signatureAfterChange": "   public Type visit(AddExpression node)", "diff": ["-  public Class<?> visit(AddExpression node) {", "+  public Type visit(AddExpression node) {", "-    Class<?> lc = ln.acceptVisitor(this);", "-    Class<?> rc = rn.acceptVisitor(this);", "-    Class<?> c  = String.class;", "-", "+    Type lc = ln.acceptVisitor(this);", "+    Type rc = rn.acceptVisitor(this);", "+    Type c  = String.class;", "+    ", "-", "-                       InterpreterUtilities.add(c, ln.getProperty(NodeProperties.VALUE),", "+                       InterpreterUtilities.add((Class<?>)c, ln.getProperty(NodeProperties.VALUE),"]}], "num": 15990}