{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76871a9b2189f2b207d46998aa656506", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fd6492ec45049eb62ad2efb543242d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "6b690d7e50bc9f782260d6c38aaf261dfe0715e0", "commitAfterChange": "8b2531509cebe19f9248dfcfb27c6842d311bd33", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "   protected void colorVariables(final JTextPane pane,                                 final PropertyMaps props,                                 final DocumentListener dl,                                 final SimpleAttributeSet normal,                                 final SimpleAttributeSet variable,                                 final SimpleAttributeSet error)", "signatureAfterChange": "   protected void colorVariables(final JTextPane pane,                                 final PropertyMaps props,                                 final DocumentListener dl,                                 final SimpleAttributeSet normal,                                 final SimpleAttributeSet variable,                                 final SimpleAttributeSet error)", "diff": ["-        BalancingStreamTokenizer tok = new BalancingStreamTokenizer(new StringReader(str));", "+        BalancingStreamTokenizer tok = new BalancingStreamTokenizer(new StringReader(str), '\\\\');", "-            if (next.startsWith(\"${\")) {", "+            if ((tok.token()==BalancingStreamTokenizer.Token.QUOTED) && (next.startsWith(\"${\"))) {", "-                      BalancingStreamTokenizer atok = new BalancingStreamTokenizer(new StringReader(attrList));", "+                      BalancingStreamTokenizer atok = new BalancingStreamTokenizer(new StringReader(attrList), '\\\\');", "-                        if ((n==null) || n.trim().equals(\";\") || n.trim().equals(\"=\") || n.trim().startsWith(\"\\\"\")) {", "+                        if ((n==null) || (atok.token()!=BalancingStreamTokenizer.Token.NORMAL) ||", "+                            n.trim().equals(\";\") || n.trim().equals(\"=\") || n.trim().startsWith(\"\\\"\")) {", "-                        if ((n==null) || (!n.trim().equals(\"=\"))) {", "+                        if ((n==null) || (atok.token()!=BalancingStreamTokenizer.Token.KEYWORD) || (!n.trim().equals(\"=\"))) {", "-                        if ((n==null) || (!n.trim().startsWith(\"\\\"\"))) {", "+                        if ((n==null) || (atok.token()!=BalancingStreamTokenizer.Token.QUOTED) || (!n.trim().startsWith(\"\\\"\"))) {", "-                        if ((n!=null) && (!n.trim().equals(\";\"))) {", "+                        if (((n!=null) && ((atok.token()!=BalancingStreamTokenizer.Token.KEYWORD) || (!n.equals(\";\")))) ||", "+                            ((n==null) && (atok.token()!=BalancingStreamTokenizer.Token.END))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3d3e672641fbc588404a85050f96a6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "6b690d7e50bc9f782260d6c38aaf261dfe0715e0", "commitAfterChange": "8b2531509cebe19f9248dfcfb27c6842d311bd33", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public static String replaceVariables(String str, PropertyMaps props, Lambda<String,DrJavaProperty> getter)", "signatureAfterChange": "   public static String replaceVariables(String str, PropertyMaps props, Lambda<String,DrJavaProperty> getter)", "diff": ["-    BalancingStreamTokenizer tok = new BalancingStreamTokenizer(new StringReader(str));", "+    BalancingStreamTokenizer tok = new BalancingStreamTokenizer(new StringReader(str), '\\\\');", "-        if ((next.startsWith(\"${\")) &&", "-             (next.endsWith(\"}\"))) {", "+        // LOG.log(\"Token: \"+next);", "+        if ((tok.token()==BalancingStreamTokenizer.Token.QUOTED) &&", "+            (next.startsWith(\"${\")) &&", "+            (next.endsWith(\"}\"))) {", "-                  BalancingStreamTokenizer atok = new BalancingStreamTokenizer(new StringReader(attrList));", "+                  BalancingStreamTokenizer atok = new BalancingStreamTokenizer(new StringReader(attrList), '\\\\');", "-                    if ((n==null) || n.equals(\";\") || n.equals(\"=\") || n.startsWith(\"\\\"\")) {", "+                    if ((n==null) || (atok.token()!=BalancingStreamTokenizer.Token.NORMAL) ||", "+                        n.equals(\";\") || n.equals(\"=\") || n.startsWith(\"\\\"\")) {", "-                    if ((n==null) || (!n.equals(\"=\"))) {", "+                    if ((n==null) || (atok.token()!=BalancingStreamTokenizer.Token.KEYWORD) || (!n.equals(\"=\"))) {", "-                    if ((n==null) || (!n.startsWith(\"\\\"\"))) {", "+                    if ((n==null) || (atok.token()!=BalancingStreamTokenizer.Token.QUOTED) || (!n.startsWith(\"\\\"\"))) {", "-                    if ((n!=null) && (!n.equals(\";\"))) {", "+                    if (((n!=null) && ((atok.token()!=BalancingStreamTokenizer.Token.KEYWORD) || (!n.equals(\";\")))) ||", "+                        ((n==null) && (atok.token()!=BalancingStreamTokenizer.Token.END))) {"]}], "num": 25181}