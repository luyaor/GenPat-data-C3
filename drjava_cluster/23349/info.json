{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b3906f74055a2c5264f9718532cc5ee4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3604da8d4721b30754e357cf4c51ade9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/FileFinder.java", "commitBeforeChange": "5cb9931cd4d17d4bcf0e028e2763a314647f8344", "commitAfterChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public File findFile(String name) throws IOException", "signatureAfterChange": "   public File findFile(String name) throws IOException", "diff": ["-    Iterator it = paths.iterator();", "-    while (it.hasNext()) {", "-      File f = new File((String)it.next() + name);", "+    for (String s : paths) {", "+      File f = new File(s + name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37336f06436ad1056019dd5726e317c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "5293cb4cfbc2f45d6061ba4101ad60348aa251ed", "commitAfterChange": "f68f43e5a680bb235f87f6125c6c0de6d15a12f4", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public synchronized Vector<DebugThreadData> getCurrentThreadData() throws DebugException", "signatureAfterChange": "   public synchronized Vector<DebugThreadData> getCurrentThreadData() throws DebugException", "diff": ["-    List<ThreadReference> listThreads; // Add parameterization <ThreadReference> to listThreads.", "+    Iterable<ThreadReference> listThreads;", "-    // get an iterator from the list returned by _vm.allThreads()", "-    Iterator<ThreadReference> iter = listThreads.iterator(); // Added parameterization <ThreadReference>.", "-    while (iter.hasNext()) {", "-      try {", "-        threads.add(new JPDAThreadData(iter.next()));", "-      }", "+    for (ThreadReference ref : listThreads) {", "+      try { threads.add(new JPDAThreadData(ref)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e775007c5f9514a67838a0d874dc83f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "5cb9931cd4d17d4bcf0e028e2763a314647f8344", "commitAfterChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "   public Void visit(BlockStatement node)", "signatureAfterChange": "   public Void visit(BlockStatement node)", "diff": ["-    Iterator it = node.getStatements().iterator();", "-    while (it.hasNext()) {", "-      ((Node)it.next()).acceptVisitor(this);", "+    for (Node n : node.getStatements()) {", "+      n.acceptVisitor(this);"]}], "num": 23349}