{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6efba28063b50bb7515a2d7619300f8d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e01ca18da880bf80d25466ef617846ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException,      InterruptedException", "diff": ["-  public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()", "-    throws BadLocationException, IOException, InterruptedException", "-  {", "+  public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException, ", "+    InterruptedException {", "+    ", "-        try {", "-          doc2.saveFile(new FileSelector(file2));", "-        }", "-        catch (IOException ioe) {", "-          fail(\"Save produced exception: \" + ioe);", "-        }", "+        try { doc2.saveFile(new FileSelector(file2)); }", "+        catch (IOException ioe) { fail(\"Save produced exception: \" + ioe); }", "-        saveBeforeCompileCount++;", "+        synchronized(this) { saveBeforeCompileCount++; }", "-        saveCount++;", "+        synchronized(this) { saveCount++; }", "+    listener.waitCompileDone();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9eee0bdc5facaf7e9554f2efdab798a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testCompileFailsCorrectLineNumbers() throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileFailsCorrectLineNumbers() throws BadLocationException, IOException, InterruptedException", "diff": ["-  public void testCompileFailsCorrectLineNumbers() throws BadLocationException, IOException {", "+  public void testCompileFailsCorrectLineNumbers() throws BadLocationException, IOException, InterruptedException {", "-    doc2.saveFile(new FileSelector(file2));    ", "-    _compileDone = false;", "-    _model.addListener(_failListener);", "+    doc2.saveFile(new FileSelector(file2));", "+    ", "+   ", "+    // do compile -- should fail since package decl is not valid!", "+    CompileShouldFailListener listener = new CompileShouldFailListener();", "+    _model.addListener(listener);", "+", "-    _waitCompileDone();", "+    listener.waitCompileDone();", "-    _failListener.checkCompileOccurred();", "-    _model.removeListener(_failListener);", "+    listener.checkCompileOccurred();", "+    _model.removeListener(listener);"]}], "num": 4499}