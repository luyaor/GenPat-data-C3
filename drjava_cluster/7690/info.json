{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45f0999d2fc3115ad386ab85e49229c0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30712799410cba95c7a577400c476713", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "cf0d5a7c9531c826952b4ecc3c4a220f2a907a0c", "commitAfterChange": "1c7e0138b9996497cf68b90499ce66108cdb5ed6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   protected void getDistToEnclosingBrace(IndentInfo info)", "signatureAfterChange": "   protected void getDistToLineEnclosingBrace(IndentInfo info)", "diff": ["-  protected void getDistToEnclosingBrace(IndentInfo info) {", "+  protected void getDistToLineEnclosingBrace(IndentInfo info) {", "+    if (info.distToStart() == -1) { // There is no preceding newline char.", "+//      info.setDistToLineEnclosingBrace(-1);  // should be unnecessary", "+      return; ", "+    }", "-    int relDistance = info.distToLineEnclosingBraceStart + 1;  ", "-    /* This code is OBSCENE!  As a precondition, info.distToLineEnclosingBraceStart must hold the distance to the right edge of ", "-     * preceding newline (start of this line). */", "+    int relDistance = info.distToStart() + 1;  ", "-    if (info.distToLineEnclosingBraceStart == -1) {  // There is no preceding newline char.  (Why not give distance to line start?)", "-      iter.dispose();", "-      return;", "-    }", "-    iter.move(-info.distToLineEnclosingBraceStart - 1);", "+    iter.move(-info.distToStart() - 1);", "-    //reset the value of info signiling the necessary newline has", "-    //not been found.", "-    info.distToLineEnclosingBraceStart = -1;", "+    //reset the value of info signiling the necessary newline has not been found.", "+//    info.setDistToLineEnclosingBraceStart(-1);  // should be unnecessary", "-                  info.lineEnclosingBraceType = curBrace.getType();", "-                  info.distToLineEnclosingBrace = distance;", "+                  info.setLineEnclosingBraceType(curBrace.getType());", "+                  info.setDistToLineEnclosingBrace(distance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3099ba3cd49139d18feee76c84332570", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "9ab3c647e4bf2cceb929c5db766abfe1f2993d4e", "commitAfterChange": "0047e2d5991ef20f74452ac3c21bd6d7ee99b408", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public int getCurrentRow()", "signatureAfterChange": "   public int getCurrentLine()", "diff": ["-  public int getCurrentRow() {", "-    int count=0;", "-    int _copyLocation = _currentLocation;", "-    int distPrevNewLine = _reduced.getDistToPreviousNewline( _currentLocation );", "-    while (distPrevNewLine != -1 && _currentLocation>0) {", "-      _currentLocation -= distPrevNewLine;", "+  public int getCurrentLine() {", "+    int count=1;", "+    int _copyLocation = getCurrentLocation();", "+    int distPrevNewLine = _reduced.getDistToPreviousNewline( 0 );", "+", "+    while (distPrevNewLine != -1 && getCurrentLocation()>0) {", "+      setCurrentLocation( getCurrentLocation()-distPrevNewLine-1 );", "-      distPrevNewLine = _reduced.getDistToPreviousNewline( _currentLocation );", "+      distPrevNewLine = _reduced.getDistToPreviousNewline( 0 );", "-    _currentLocation = _copyLocation;", "+    setCurrentLocation( _copyLocation );"]}], "num": 7690}