{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2ed59b920d1dcc36075ab45ee76b09b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10153ccc5e8eb19f13a537bcafced8ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "      public void testCompoundAssignment() throws ParseException", "signatureAfterChange": "      public void testCompoundAssignment() throws ParseException", "diff": ["-    List<IdentifierToken> idnt1  = new LinkedList<IdentifierToken>();", "-    idnt1.add(new Identifier(\"i\"));", "-", "-    List<IdentifierToken> idnt2  = new LinkedList<IdentifierToken>();", "-    idnt2.add(new Identifier(\"j\"));", "-", "-    expectedAST.add(new ExclusiveOrAssignExpression(new QualifiedName(idnt1), new QualifiedName(idnt2)));", "+    expectedAST.add(new ExclusiveOrAssignExpression(new AmbiguousName(\"i\"), new AmbiguousName(\"j\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "165a80f75aba1d1e0774d627787c9b64", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EnumDeclaration.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    static List<Node> AddValues(String enumTypeName, List<Node> body, List<EnumConstant> consts)", "signatureAfterChange": "    static List<Node> AddValues(String enumTypeName, List<Node> body, List<EnumConstant> consts)", "diff": ["-    List<IdentifierToken> iIds = new LinkedList<IdentifierToken>();", "-    iIds.add(new Identifier(\"i\"));", "-    QualifiedName iId = new QualifiedName(iIds);", "+    AmbiguousName iId = new AmbiguousName(\"i\");", "-    List<IdentifierToken> sIds = new LinkedList<IdentifierToken>();", "-    sIds.add(new Identifier(\"s\"));", "-    QualifiedName sId = new QualifiedName(sIds);", "-    args.add(new QualifiedName(sIds));", "+    AmbiguousName sId = new AmbiguousName(\"s\");", "+    args.add(new AmbiguousName(\"s\"));"]}], "num": 9078}