{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd2601feb6f51abccc5615cb0e80effd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38202df2eabbde0c13957ab0a3f80c4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "805c373a0ec3b1117a99ab61e1255aea61e2bd63", "commitAfterChange": "4117398987de5205499e8524a48aeb3a8a6b43ad", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "     public File getWorkingDirectory()", "signatureAfterChange": "     public File getWorkingDirectory()", "diff": ["-        if (roots.length == 0) return getMasterWorkingDirectory();", "+        if (roots.length == 0) {", "+          // return getMasterWorkingDirectory();", "+          // use the last directory saved to the configuration", "+          File file;", "+          try {", "+            // restore the path from the configuration", "+            file = FileOps.getValidDirectory(DrJava.getConfig().getSetting(LAST_INTERACTIONS_DIRECTORY));", "+          }", "+          catch (RuntimeException e) {", "+            // something went wrong, clear the setting and use \"user.home\"", "+            DrJava.getConfig().setSetting(LAST_INTERACTIONS_DIRECTORY, FileOption.NULL_FILE);", "+            file = FileOps.getValidDirectory(DrJava.getConfig().getSetting(LAST_INTERACTIONS_DIRECTORY));", "+          }", "+          // update the setting and return it", "+          DrJava.getConfig().setSetting(LAST_INTERACTIONS_DIRECTORY, file);", "+          return file;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "631fcbf951674059599cc28a38b6a256", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 41, "signatureBeforeChange": "   protected VariableData[] formalParameters2VariableData(FormalParameter[] fps, Data enclosing)", "signatureAfterChange": "   protected VariableData[] formalParameters2VariableData(FormalParameter[] fps, Data enclosing)", "diff": ["+    //Should conssolidate with same method in AdvancedVisitor; almost identical", "-    String[] mav;", "+    String[] mav = new String[] {\"final\"};", "+        ", "-      mav = new String[] {\"final\"};", "-      SymbolData type = getSymbolData(vd.getType().getName(), vd.getType().getSourceInfo());", "-      if (type != null) {", "-        varData[i] = ", "-          new VariableData(name, new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, mav), type, true, enclosing);", "-        varData[i].gotValue();", "+      SourceInfo si = vd.getType().getSourceInfo();", "+      SymbolData type = getSymbolData(vd.getType().getName(), si);", "+      ", "+      if (type == null) {  // should add && ! elementary level here ?  What about library types?", "+        //see if this is a partially qualified field reference", "+        type = enclosing.getInnerClassOrInterface(vd.getType().getName());", "-      else { ", "-        /* if type is null, then there was an error, trying to resolve it. ", "-         * Just put 'null' in the array, because we will never try to access it. */", "-        _addError(\"Class or Interface \" + vd.getType().getName() + \" not found\", vd);", "-        varData[i]=null;", "+      ", "+      if (type == null) {", "+        //if we still couldn't resolve sd, create a continuation for it.", "+        type = new SymbolData(enclosing.getSymbolData().getName() + \"$\" + vd.getType().getName());", "+        enclosing.getSymbolData().addInnerClass(type);", "+        type.setOuterData(enclosing.getSymbolData());", "+      ", "+      varData[i] = new VariableData(name, ", "+                                    new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, mav), ", "+                                    type, true, enclosing);", "+      varData[i].gotValue();", "+   "]}], "num": 1522}