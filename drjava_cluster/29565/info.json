{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c296b571fa27a98e229124719622a1e1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b72360681a93676020169953dd02f04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ReverseHighlighter.java", "commitBeforeChange": "5fa1752ae0f197cbe974a5ad1eec127df709c400", "commitAfterChange": "8b8285e360aa3c4ce7b223a60c5075eba9d98439", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Object addHighlight(int p0, int p1, Highlighter.HighlightPainter p) throws BadLocationException", "signatureAfterChange": "   public Object addHighlight(int p0, int p1, Highlighter.HighlightPainter p) throws BadLocationException", "diff": ["-    int insertPos = 0;", "-    if ((!(p instanceof DefaultFrameHighlightPainter)) && (!(p instanceof DefaultUnderlineHighlightPainter))) {", "+    int insertPos = highlights.size();", "+    /*if ((!(p instanceof DefaultFrameHighlightPainter)) && (!(p instanceof DefaultUnderlineHighlightPainter))) {", "-      for(HighlightInfo hli: highlights) {", "+      while (insertPos>0) {", "+        HighlightInfo hli = highlights.elementAt( insertPos-1 );", "-        ++insertPos;", "+        --insertPos;", "+    }*/", "+    if (p instanceof DrJavaHighlightPainter) {", "+      while (insertPos>0) {", "+        HighlightInfo hli = highlights.elementAt( insertPos-1 );", "+        if (hli.getPainter() instanceof DrJavaHighlightPainter)", "+          --insertPos;", "+        else break;", "+      }", "+    } else if (p instanceof DefaultHighlightPainter) {", "+      while (insertPos>0) {", "+        HighlightInfo hli = highlights.elementAt( insertPos-1 );", "+        if (hli.getPainter() instanceof DefaultHighlightPainter)", "+          --insertPos;", "+        else break;", "+      }", "+    } else if (p instanceof DefaultFrameHighlightPainter) {", "+      while (insertPos>0) {", "+        HighlightInfo hli = highlights.elementAt( insertPos-1 );", "+        if (hli.getPainter() instanceof DefaultHighlightPainter || hli.getPainter() instanceof DefaultFrameHighlightPainter)", "+          --insertPos;", "+        else break;", "+      }", "+    } else {", "+      insertPos = 0;", "+    //_log.log(p.toString() + \", pos: \" + insertPos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f73b22364c09c21339ad8d477c7d49f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ReverseHighlighter.java", "commitBeforeChange": "2aadb81a716e2a196f82baa127c28e3225664fab", "commitAfterChange": "c4ec4fbaa86590f5d9d73c067159d69b14149c37", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Object addHighlight(int p0, int p1, Highlighter.HighlightPainter p) throws BadLocationException", "signatureAfterChange": "   public Object addHighlight(int p0, int p1, Highlighter.HighlightPainter p) throws BadLocationException", "diff": ["-    i.painter = p;", "+    i._painter = p;", "-    int insertPos = highlights.size();", "-    /*if ((!(p instanceof DefaultFrameHighlightPainter)) && (!(p instanceof DefaultUnderlineHighlightPainter))) {", "-     // insert solid painters after the frame and underline painters", "-     while (insertPos>0) {", "-     HighlightInfo hli = highlights.elementAt( insertPos-1 );", "-     if ((! (hli.getPainter() instanceof DefaultFrameHighlightPainter)) && ", "-     (! (hli.getPainter() instanceof DefaultUnderlineHighlightPainter))) {", "-     break;", "-     }", "-     --insertPos;", "-     }", "-     }*/", "+    int insertPos = _highlights.size();", "+", "-      while (insertPos>0) {", "-        HighlightInfo hli = highlights.elementAt( insertPos-1 );", "+      while (insertPos > 0) {", "+        HighlightInfo hli = _highlights.get( insertPos-1 );", "-      while (insertPos>0) {", "-        HighlightInfo hli = highlights.elementAt( insertPos-1 );", "+      while (insertPos > 0) {", "+        HighlightInfo hli = _highlights.get( insertPos-1 );", "-      while (insertPos>0) {", "-        HighlightInfo hli = highlights.elementAt( insertPos-1 );", "+      while (insertPos > 0) {", "+        HighlightInfo hli = _highlights.get( insertPos-1 );", "-    highlights.add(insertPos, i);", "+    _highlights.add(insertPos, i);"]}], "num": 29565}