{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89175016ed64e83171a2d95a44dcd87e", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fdb5f7cfddb6de3766cf7b4df3c2f50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/MainFrame.java", "commitBeforeChange": "1a9af627ea69f691af32f9a422290b5017b0703d", "commitAfterChange": "8d34579e0c7e80db1371da26e8172a594bf3d48e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Action getSaveAction()", "signatureAfterChange": "      public void actionPerformed(ActionEvent ae)", "diff": ["-", "-\tpublic Action getSaveAction() {", "-\t\treturn _saveAction;", "-\t}", "+", "+    public void actionPerformed(ActionEvent ae)", "+    {", "+      boolean modified = _definitionsView.modifiedSinceSave();", "+", "+      if (modified) {", "+        // file was not saved -- tell user they must save before compiling", "+        String msg = \"The definitions must be saved before compiling. \" + ", "+                     \"Would you like to save and compile now?\";", "+        int rc = JOptionPane.showConfirmDialog(MainFrame.this,", "+                                               msg,", "+                                               \"File not saved\",", "+                                               JOptionPane.YES_NO_OPTION);", "+        if (rc == JOptionPane.YES_OPTION) {", "+\t    save();", "+          // Check if they cancelled the save. If they did, exit!", "+          if (_definitionsView.modifiedSinceSave()) {", "+            return;", "+          }", "+        }", "+        else {", "+          return; // user wants to do nothing", "+        }", "+      }", "+      compile();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "916a78444dd8193e4e018112d10ddaad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1a9af627ea69f691af32f9a422290b5017b0703d", "commitAfterChange": "8d34579e0c7e80db1371da26e8172a594bf3d48e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Action getSaveAction()", "signatureAfterChange": "      public void actionPerformed(ActionEvent ae)", "diff": ["-", "-\tpublic Action getSaveAction() {", "-\t\treturn _saveAction;", "-\t}", "+", "+    public void actionPerformed(ActionEvent ae)", "+    {", "+      boolean modified = _definitionsView.modifiedSinceSave();", "+", "+      if (modified) {", "+        // file was not saved -- tell user they must save before compiling", "+        String msg = \"The definitions must be saved before compiling. \" + ", "+                     \"Would you like to save and compile now?\";", "+        int rc = JOptionPane.showConfirmDialog(MainFrame.this,", "+                                               msg,", "+                                               \"File not saved\",", "+                                               JOptionPane.YES_NO_OPTION);", "+        if (rc == JOptionPane.YES_OPTION) {", "+\t    save();", "+          // Check if they cancelled the save. If they did, exit!", "+          if (_definitionsView.modifiedSinceSave()) {", "+            return;", "+          }", "+        }", "+        else {", "+          return; // user wants to do nothing", "+        }", "+      }", "+      compile();", "+    }"]}], "num": 27646}