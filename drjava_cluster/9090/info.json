{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4058730303584b0e6383ea7b80e643af", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63f277a57ee771db096b6fb49d2ccfc6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AWTExceptionHandler.java", "commitBeforeChange": "701cda038bdbb4505f738d5f2728e5888b8608b3", "commitAfterChange": "a2c3a24c2af61d289658b8fde0de718a948c97d9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public void handle(Throwable thrown)", "signatureAfterChange": "    public void handle(Throwable thrown)", "diff": ["-    if (frame == null) {", "-      frame = new JFrame();", "-    }", "-    new UncaughtExceptionWindow(frame,thrown);", "+    if (frame == null) frame = new JFrame();", "+    new UncaughtExceptionWindow(frame, thrown);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3c435010ee77b00df69ed50f3b2f7ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/CustomSystemClassLoader.java", "commitBeforeChange": "701cda038bdbb4505f738d5f2728e5888b8608b3", "commitAfterChange": "a2c3a24c2af61d289658b8fde0de718a948c97d9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Class<?> loadClass(String name) throws ClassNotFoundException", "signatureAfterChange": "   public Class<?> loadClass(String name) throws ClassNotFoundException", "diff": ["-      }else if(fileName.startsWith(\"edu/rice/cs/util/newjvm/SlaveJVMRunner.class\")){", "+      }", "+      else if(fileName.startsWith(\"edu/rice/cs/util/newjvm/SlaveJVMRunner.class\")){", "-        try {", "-          return defineClass(name, data, 0, data.length);", "-        }", "-        catch (Error t) {", "-          throw t;", "-        }", "+        try { return defineClass(name, data, 0, data.length); }", "+        catch (Error t) { throw t; }", "-    }catch(ClassNotFoundException e){", "-      // the system couldn't find it, so let's try something else", "-    }catch(IOException e){", "-      // the system couldn't find it, so let's try something else", "+    catch(ClassNotFoundException e) { /* the system couldn't find it, so let's try something else */ }", "+    catch(IOException e) { /* the system couldn't find it, so let's try something else */ }", "-    try{", "-      if(_master != null){", "+    try {", "+      if (_master != null) {", "-        }else{", "-          byte[] data = FileOps.readStreamAsBytes(resource.openStream());", "-          try {", "-            return defineClass(name, data, 0, data.length);", "-          }", "-          catch (Error t) {", "-            throw t;", "-          }", "-      }else{", "-        throw new ClassNotFoundException();", "+        else {", "+          byte[] data = FileOps.readStreamAsBytes(resource.openStream());", "+          try { return defineClass(name, data, 0, data.length); }", "+          catch (Error t) { throw t; }", "+        }", "-    }catch(RemoteException e){", "-      throw new ClassNotFoundException();", "-    }catch(IOException e){", "-      throw new ClassNotFoundException();", "+      else throw new ClassNotFoundException();", "+    catch(RemoteException e) { throw new ClassNotFoundException(); }", "+    catch(IOException e) { throw new ClassNotFoundException(); }"]}], "num": 9090}