{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4bb0764997a7c8b6c313896e9e497244", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4412000db0b75af98d1ddcf7921619d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "commitAfterChange": "7bd20caf83d6124a213367b39b105aa050de6539", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 35, "signatureBeforeChange": "     public Component getTreeCellRendererComponent(                             JTree tree,                             Object value,                             boolean sel,                             boolean expanded,                             boolean leaf,                             int row,                             boolean hasFocus)", "signatureAfterChange": "     public Component getTreeCellRendererComponent(                             JTree tree,                             Object value,                             boolean sel,                             boolean expanded,                             boolean leaf,                             int row,                             boolean hasFocus)", "diff": ["-", "-            super.getTreeCellRendererComponent(", "-                            tree, value, sel,", "-                            expanded, leaf, row,", "-                            hasFocus);", "-            DefaultMutableTreeNode node = (DefaultMutableTreeNode)value;", "-            if (node instanceof RootNode) {", "-              setIcon(_projectIcon);", "-            }else", "-            if(node.getUserObject() instanceof INavigatorItem){", "-              INavigatorItem doc = (INavigatorItem)(node.getUserObject());", "-              _filename = doc.toString();", "-              if (leaf) {", "-                if (_javaIcon != null && _filename.endsWith(\".java  \")) {", "-                  setIcon(_javaIcon);", "-                }", "-                else if (_javaMIcon != null && _filename.endsWith(\".java *\")) {", "-                  setIcon(_javaMIcon);", "-                }", "-                else if (_elementaryIcon != null && _filename.endsWith(\".dj0  \")) {", "-                  setIcon(_elementaryIcon);", "-                }", "-                else if (_elementaryMIcon != null && _filename.endsWith(\".dj0 *\")) {", "-                  setIcon(_elementaryMIcon);", "-                }", "-                else if (_intermediateIcon != null && _filename.endsWith(\".dj1  \")) {", "-                  setIcon(_intermediateIcon);", "-                }", "-                else if (_intermediateMIcon != null && _filename.endsWith(\".dj1 *\")) {", "-                  setIcon(_intermediateMIcon);", "-                }", "-                else if (_intermediateIcon != null && _filename.endsWith(\".dj2  \")) {", "-                  setIcon(_advancedIcon);", "-                }", "-                else if (_advancedMIcon != null && _filename.endsWith(\".dj2 *\")) {", "-                  setIcon(_advancedMIcon);", "-                }", "-                else if (_otherMIcon != null && _filename.endsWith(\" *\")) {", "-                  setIcon(_otherMIcon);", "-                }", "-                else if (_otherIcon != null) {", "-                  setIcon(_otherIcon);", "-                }", "-              }", "-            }else if(value instanceof String){", "-              // a directory", "-            }", "-            ", "-            return this;", "+      ", "+      super.getTreeCellRendererComponent(", "+                                         tree, value, sel,", "+                                         expanded, leaf, row,", "+                                         hasFocus);", "+      DefaultMutableTreeNode node = (DefaultMutableTreeNode)value;", "+      if (node instanceof RootNode) {", "+        setIcon(_projectIcon);", "+      }else if(node.getUserObject() instanceof INavigatorItem){", "+        INavigatorItem doc = (INavigatorItem)(node.getUserObject());", "+        if (leaf) {", "+          if (_displayManager != null) {", "+            setIcon(_displayManager.getIcon(doc));", "+          }", "+        }", "+      }else if(value instanceof String){", "+        // a directory", "+      }", "+      return this;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f067505dd527bba0bc3ce9c071c9ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 40, "signatureBeforeChange": "   private SymbolData _getSymbolData_Primitive(String className)", "signatureAfterChange": "           public void execute()", "diff": ["-    */", "-  private SymbolData _getSymbolData_Primitive(String className) {", "-    if (className.equals(\"boolean\")) {", "-      return SymbolData.BOOLEAN_TYPE;", "-    }", "-    else if (className.equals(\"char\")) {", "-      return SymbolData.CHAR_TYPE;", "-    }", "-    else if (className.equals(\"byte\")) {", "-      return SymbolData.BYTE_TYPE;", "-    }", "-    else if (className.equals(\"short\")) {", "-      return SymbolData.SHORT_TYPE;", "-    }", "-    else if (className.equals(\"int\")) {", "-      return SymbolData.INT_TYPE;", "-    }", "-    else if (className.equals(\"long\")) {", "-      return SymbolData.LONG_TYPE;", "-    }", "-    else if (className.equals(\"float\")) {", "-      return SymbolData.FLOAT_TYPE;", "-    }", "-    else if (className.equals(\"double\")) {", "-      return SymbolData.DOUBLE_TYPE;", "-    }", "-    else if (className.equals(\"void\")) {", "-      return SymbolData.VOID_TYPE;", "-    }", "-    else if (className.equals(\"null\")) {", "-      return SymbolData.NULL_TYPE;", "-    }", "-    return null;", "-  }", "+        Command fixUp = new Command() {", "+          public void execute() { ", "+            SymbolData newSd = _identifyType(typeName, si, enclosingClassName);", "+            assert newSd != null && newSd != SymbolData.NOT_FOUND;  // TODO !!!: Expand to error message?", "+            varData[j].setType(newSd);", "+          }"]}], "num": 31002}