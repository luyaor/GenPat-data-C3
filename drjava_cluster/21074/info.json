{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66e69a03adf2f3b1b708e7226d22143a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e81dfc645df7c2a26225b7764f13db4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 412, "methodNumberAfterChange": 412, "signatureBeforeChange": "\r \r   public void forLabeledCase(LabeledCase that)", "signatureAfterChange": "    public void forLabeledCase(LabeledCase that)", "diff": ["-\r", "-  public void forLabeledCase(LabeledCase that) {\r", "-    forLabeledCaseDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getLabel().visit(this);\r", "-    that.getCode().visit(this);\r", "-    forLabeledCaseOnly(that);\r", "-  }\r", "+", "+  public void forLabeledCase(LabeledCase that) {", "+    forLabeledCaseDoFirst(that);", "+    if (prune(that)) return;", "+    that.getLabel().visit(this);", "+    that.getCode().visit(this);", "+    forLabeledCaseOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22c2ba4d28a4679f932cfb28c5c7a9e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 378, "methodNumberAfterChange": 378, "signatureBeforeChange": "\r \r   public void forLabeledStatement(LabeledStatement that)", "signatureAfterChange": "    public void forLabeledStatement(LabeledStatement that)", "diff": ["-\r", "-  public void forLabeledStatement(LabeledStatement that) {\r", "-    forLabeledStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getLabel().visit(this);\r", "-    that.getStatement().visit(this);\r", "-    forLabeledStatementOnly(that);\r", "-  }\r", "+", "+  public void forLabeledStatement(LabeledStatement that) {", "+    forLabeledStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getLabel().visit(this);", "+    that.getStatement().visit(this);", "+    forLabeledStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c4a2b94d3d5b647c739b3c97d2570ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 384, "signatureBeforeChange": "\r \r   public void forWhileStatement(WhileStatement that)", "signatureAfterChange": "    public void forWhileStatement(WhileStatement that)", "diff": ["-\r", "-  public void forWhileStatement(WhileStatement that) {\r", "-    forWhileStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getCondition().visit(this);\r", "-    that.getCode().visit(this);\r", "-    forWhileStatementOnly(that);\r", "-  }\r", "+", "+  public void forWhileStatement(WhileStatement that) {", "+    forWhileStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getCondition().visit(this);", "+    that.getCode().visit(this);", "+    forWhileStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97c0392a29711da954e784ba717d0073", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 382, "methodNumberAfterChange": 382, "signatureBeforeChange": "\r \r   public void forIfThenStatement(IfThenStatement that)", "signatureAfterChange": "    public void forIfThenStatement(IfThenStatement that)", "diff": ["-\r", "-  public void forIfThenStatement(IfThenStatement that) {\r", "-    forIfThenStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getTestExpression().visit(this);\r", "-    that.getThenStatement().visit(this);\r", "-    forIfThenStatementOnly(that);\r", "-  }\r", "+", "+  public void forIfThenStatement(IfThenStatement that) {", "+    forIfThenStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getTestExpression().visit(this);", "+    that.getThenStatement().visit(this);", "+    forIfThenStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd6673f21e5422857526e4bd28bcfd89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 385, "signatureBeforeChange": "\r \r   public void forDoStatement(DoStatement that)", "signatureAfterChange": "    public void forDoStatement(DoStatement that)", "diff": ["-\r", "-  public void forDoStatement(DoStatement that) {\r", "-    forDoStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getCode().visit(this);\r", "-    that.getCondition().visit(this);\r", "-    forDoStatementOnly(that);\r", "-  }\r", "+", "+  public void forDoStatement(DoStatement that) {", "+    forDoStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getCode().visit(this);", "+    that.getCondition().visit(this);", "+    forDoStatementOnly(that);", "+  }"]}], "num": 21074}