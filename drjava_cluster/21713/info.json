{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2e7ebc68b0bab9d5dd6759ab8a76e77", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61e85197c8a717c6fabe57f6f9f929a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "commitAfterChange": "62776e907e3e6dddd6b4161559ae3b70f27cc2e5", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      public void testPromptListClearedOnReset() throws Exception", "signatureAfterChange": "      public void testPromptListClearedOnReset() throws Exception", "diff": ["+  ", "-    //Can't use the fields declared in setUp - it doesn't use a real InteractionsModel", "+    // Can't use the fields declared in setUp - it doesn't use a real InteractionsModel", "+    ", "+    final Object _resetLock = new Object();", "-    _pane.resetPrompts();", "+    ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() { _pane.resetPrompts(); }", "+    });", "-    Utilities.clearEventQueue();", "-    _pane.setCaretPosition(_doc.getLength());", "-    Utilities.clearEventQueue();", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() { _pane.setCaretPosition(_doc.getLength()); }", "+    });", "+    ", "-    _pane.setCaretPosition(_doc.getLength());", "-    Utilities.clearEventQueue();", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() { ", "+        _pane.setCaretPosition(_doc.getLength());", "+        _firstPrompt = (int) _pane.getPromptList().get(0); // cast prevents ambiguity", "+        _secondPrompt = (int) _pane.getPromptList().get(1); // cast prevents ambiguity", "+      }", "+    });", "+    ", "-   (int) _pane.getPromptList().get(0)); //needs cast to prevent ambiguity", "+                 _firstPrompt); ", "-                 (int)_pane.getPromptList().get(1)); //needs cast to prevent ambiguity", "+                 _secondPrompt); ", "+    synchronized(_resetLock) { _resetDone = false; }", "+    _model.addListener(new DummyGlobalModelListener() {", "+      public void interpreterReady(File wd) {", "+        synchronized(_resetLock) {", "+          _resetDone = true;", "+          _resetLock.notifyAll();", "+        }", "+      }});", "+      ", "+    _model.resetInterpreter(FileOption.NULL_FILE);", "+ ", "+    /* Wait until reset has finished. */", "+    synchronized(_resetLock) { while (! _resetDone) _resetLock.wait(); }", "-    synchronized(_model) {", "-      // Reset should clear", "-      _model.setWaitingForFirstInterpreter(false);", "-      //this adds the \"Resetting Interactions\" ", "-      _model.resetInterpreter(FileOption.NULL_FILE);  // restarting the interpreter since argument is not null", "-      _model.interpreterResetting();", "-    }", "-    Utilities.clearEventQueue();", "-    synchronized(_model) {", "-      assertEquals(\"PromptList after reset should contain no elements\", 0, _pane.getPromptList().size());", "-    }  ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() { _size = _pane.getPromptList().size(); }", "+    });", "+    ", "+//    System.err.println(_pane.getPromptList());", "+    ", "+    assertEquals(\"PromptList after reset should contain one element\", 1, _size);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c19b2c2a6bec433238783e51d93bf2fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4e444cf3e45665116a56b367a272fb6465e0e2ab", "commitAfterChange": "4cc061cda0dcd0210fc21018c1746064dc52e5d0", "methodNumberBeforeChange": 348, "methodNumberAfterChange": 348, "signatureBeforeChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "signatureAfterChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "diff": ["+    doc.addDocumentListener(new DocumentUIListener() {", "+      public void changedUpdate(DocumentEvent e) {", "+        Utilities.invokeLater(new Runnable() {", "+          public void run() {", "+            revalidateLineNums();", "+          }", "+        });", "+      }", "+      public void insertUpdate(DocumentEvent e) {", "+        Utilities.invokeLater(new Runnable() {", "+          public void run() {", "+            revalidateLineNums();", "+          }", "+        });", "+      }", "+      public void removeUpdate(DocumentEvent e) {", "+        Utilities.invokeLater(new Runnable() {", "+          public void run() {", "+            revalidateLineNums();", "+          }", "+        });", "+      }", "+    });", "+    ", "-    JScrollPane scroll = new BorderlessScrollPane(pane,", "+    final JScrollPane scroll = new BorderlessScrollPane(pane,"]}], "num": 21713}