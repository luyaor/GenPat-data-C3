{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb5d4735f48253ec625b2e84be1b22ef", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "789cdd153430f82a34f90d29e49c24b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 32, "signatureBeforeChange": "     @Override public Type visit(AnonymousAllocation node)", "signatureAfterChange": "     @Override public Type visit(AnonymousAllocation node)", "diff": ["-      Iterable<? extends Expression> args = IterUtil.empty();", "-      if (node.getArguments() != null) { args = node.getArguments(); checkList(args); }", "+      Iterable<? extends Expression> args = node.getArguments();", "+      checkList(args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbb7a7e2dec9436be9ddbb894e00ee89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 33, "signatureBeforeChange": "     @Override public Type visit(InnerAllocation node)", "signatureAfterChange": "     @Override public Type visit(InnerAllocation node)", "diff": ["-        Iterable<? extends Expression> args = IterUtil.empty();", "-        if (node.getArguments() != null) { args = node.getArguments(); checkList(args); }", "+        Iterable<? extends Expression> args = node.getArguments();", "+        checkList(args);"]}], "num": 4519}