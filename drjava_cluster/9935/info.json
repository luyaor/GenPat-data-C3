{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0e0c64ce8ec5668f4a2c7baa67965da", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4056150596fba94593d2ead39598b3f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "09bec3d114e78a39aad7410d5a4ed3ab2cdf1dc4", "commitAfterChange": "8ece0edfbf0fa97c28d74f8231f220f413cd26e5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected ReferenceType _getReferenceTypeForField(String field, Context context)", "signatureAfterChange": "     protected ReferenceType _getReferenceTypeForField(String field, Context context)", "diff": ["-    int index = _indexOfWithinBoundaries(_thisClassName, field);", "+    int index = _indexOfWithinBoundaries(_getFullyQualifiedClassNameForThis(), field);", "-      // field may be of form outerClass$innerClass. ", "+      // field may be of form outerClass$innerClass or", "+      // package.innerClass. ", "+      int lastDot = field.lastIndexOf(\".\");", "+      else {", "+        if (lastDot != -1) {", "+          field = field.substring(lastDot + 1, field.length());", "+        }", "+      }", "-      StringTokenizer st = new StringTokenizer(_thisClassName, \"$\");", "+      StringTokenizer st = new StringTokenizer(_getFullyQualifiedClassNameForThis(), \"$.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dd7158529ef75d2553ee9c8e945158c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "0eaebdce24bcfe2760ebc5f3cb035431d62003fc", "commitAfterChange": "998d49ab48c08c55f388485512c281814a54c029", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public String getMainClassName() throws ClassNameNotFoundException", "signatureAfterChange": "   public String getMainClassName() throws ClassNameNotFoundException", "diff": ["+        final int indexOfEnum = _findKeywordAtToplevel(\"enum\", text, 0);", "-        if (indexOfPublic == -1)  return getFirstClassName(indexOfClass, indexOfInterface);", "+        if (indexOfPublic == -1)  return getFirstClassName(indexOfClass, indexOfInterface, indexOfEnum);", "+        int indexOfPublicEnum = _findKeywordAtToplevel(\"enum\", subText, afterPublic); // relative offset", "+        if (indexOfPublicEnum != -1) indexOfPublicEnum += afterPublic;", "-        return getFirstClassName(indexOfPublicClass, indexOfPublicInterface);", "+        return getFirstClassName(indexOfPublicClass, indexOfPublicInterface, indexOfPublicEnum);"]}], "num": 9935}