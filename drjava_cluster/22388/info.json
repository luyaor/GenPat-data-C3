{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff4bed7f79ca4940230804a879355086", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8333c8c72201234a6e4a617e73ca19bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public Object visit(TryStatement node)", "signatureAfterChange": "   public Node visit(TryStatement node)", "diff": ["+   */", "+  public Node visit(TryStatement node) {", "+    node.getTryBlock().acceptVisitor(this);", "+    Iterator<Node> it = node.getCatchStatements().iterator();", "+    while (it.hasNext()) {", "+      it.next().acceptVisitor(this);", "+    }", "+    Node n = node.getFinallyBlock();", "+    if (n != null) {", "+      n.acceptVisitor(this);", "+    }", "+    return null;", "+  }", "-     */", "-    public Object visit(TryStatement node) {", "-        node.getTryBlock().acceptVisitor(this);", "-        Iterator it = node.getCatchStatements().iterator();", "-        while (it.hasNext()) {", "-            ((Node)it.next()).acceptVisitor(this);", "-        }", "-        Node n;", "-        if ((n = node.getFinallyBlock()) != null) {", "-            n.acceptVisitor(this);", "-        }", "-        return null;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca759a55c20778bfcb4b3ed960bfff35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Class visit(TryStatement node)", "signatureAfterChange": "   public Class<?> visit(TryStatement node)", "diff": ["-  public Class visit(TryStatement node) {", "+  public Class<?> visit(TryStatement node) {", "-    Iterator it = node.getCatchStatements().iterator();", "+    Iterator<CatchStatement> it = node.getCatchStatements().iterator();", "-      ((Node)it.next()).acceptVisitor(this);", "+      it.next().acceptVisitor(this);", "-    Node n;", "-    if ((n = node.getFinallyBlock()) != null) {", "+    Node n = node.getFinallyBlock();", "+    if (n != null) {"]}], "num": 22388}