{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "901e0eadedc8c25ccbc30f724d570cee", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c81e77dd63fa634fd7545e61be55cd6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public Class<?> visit(StaticMethodCall node)", "signatureAfterChange": "   public Type visit(StaticMethodCall node)", "diff": ["-  public Class<?> visit(StaticMethodCall node) {", "+  public Type visit(StaticMethodCall node) {", "-        cargs[i++] = it.next().acceptVisitor(this);", "+        cargs[i++] = (Class<?>)it.next().acceptVisitor(this);", "-    Class<?>  c = n.acceptVisitor(this);", "-", "-    try {", "-      m = context.lookupMethod(n, node.getMethodName(), cargs);", "-    } catch (NoSuchMethodException e) {", "+    Type  c1 = n.acceptVisitor(this);", "+    Class<?> c = (Class<?>)c1;", "+    ", "+    try { m = context.lookupMethod(n, node.getMethodName(), cargs); } ", "+    catch (NoSuchMethodException e) {", "-      if (cargs.length > 0) {", "-        sargs += cargs[cargs.length-1].getName();", "-      }", "+      if (cargs.length > 0) sargs += cargs[cargs.length-1].getName();", "+      ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec108f1a43affbc2594c4e7d58df8028", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public Type visit(StaticMethodCall node)", "signatureAfterChange": "   public Class<?> visit(StaticMethodCall node)", "diff": ["-  public Type visit(StaticMethodCall node) {", "+  public Class<?> visit(StaticMethodCall node) {", "-        cargs[i++] = (Class<?>)it.next().acceptVisitor(this);", "+        cargs[i++] = it.next().acceptVisitor(this);", "-    Type  c1 = n.acceptVisitor(this);", "-    Class<?> c = (Class<?>)c1;", "-    ", "-    try { m = context.lookupMethod(n, node.getMethodName(), cargs); } ", "-    catch (NoSuchMethodException e) {", "+    Class<?>  c = n.acceptVisitor(this);", "+", "+    try {", "+      m = context.lookupMethod(n, node.getMethodName(), cargs);", "+    } catch (NoSuchMethodException e) {", "-      if (cargs.length > 0) sargs += cargs[cargs.length-1].getName();", "-      ", "+      if (cargs.length > 0) {", "+        sargs += cargs[cargs.length-1].getName();", "+      }", "-    ", "+"]}], "num": 27949}