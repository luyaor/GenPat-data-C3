{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9d26af0197719298547c0550b3290ad", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "069db107e12032b109f77125a18f57ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsEventNotifier.java", "commitBeforeChange": "7c2b459760724c8e0af7c91f77f7fa41e315edc6", "commitAfterChange": "c9b6668252c82575b56cf423d4fca817498241b6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void interpreterReady()", "signatureAfterChange": "   public void interpreterReady()", "diff": ["-   */", "+  /** Called when the interactions window is reset. */", "-      for (int i = 0; i < size; i++) {", "-        _listeners.get(i).interpreterReady();", "-      }", "+      for (int i = 0; i < size; i++) _listeners.get(i).interpreterReady();", "-    finally {", "-      _lock.endRead();", "-    }", "+    finally { _lock.endRead(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42d1211465689370887184e3906768ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugEventNotifier.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void currThreadResumed()", "signatureAfterChange": "   public void currThreadResumed()", "diff": ["-   */", "+  /** Called when the current thread is resumed.  Must be executed in event thread. */", "-      for (int i = 0; i < size; i++) {", "-        _listeners.get(i).currThreadResumed();", "-      }", "+      for (int i = 0; i < size; i++) _listeners.get(i).currThreadResumed();", "-    finally {", "-      _lock.endRead();", "-    }", "+    finally { _lock.endRead(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5332e825b8f8d09da0253a8bc1c70def", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsEventNotifier.java", "commitBeforeChange": "7c2b459760724c8e0af7c91f77f7fa41e315edc6", "commitAfterChange": "c9b6668252c82575b56cf423d4fca817498241b6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void interactionIncomplete()", "signatureAfterChange": "   public void interactionIncomplete()", "diff": ["-   */", "+  /** Notifies the view that the current interaction is incomplete. */", "-      for (int i = 0; i < size; i++) {", "-        _listeners.get(i).interactionIncomplete();", "-      }", "+      for (int i = 0; i < size; i++)  _listeners.get(i).interactionIncomplete();", "-    finally {", "-      _lock.endRead();", "-    }", "+    finally { _lock.endRead(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78785b4392ee416b43ec080cc47785b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugEventNotifier.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void currThreadSuspended()", "signatureAfterChange": "   public void currThreadSuspended()", "diff": ["-   */", "+  /** Called when the current thread is suspended.  */", "-      for (int i = 0; i < size; i++) {", "-        _listeners.get(i).currThreadSuspended();", "-      }", "+      for (int i = 0; i < size; i++) _listeners.get(i).currThreadSuspended();", "-    finally {", "-      _lock.endRead();", "-    }", "+    finally { _lock.endRead(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92cfe1e14d60f603a0020c036dd63fdc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugEventNotifier.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void stepRequested()", "signatureAfterChange": "   public void stepRequested()", "diff": ["-   */", "+  /** Called when a step is requested on the current thread. Must be executed in event thread. */", "-      for (int i = 0; i < size; i++) {", "-        _listeners.get(i).stepRequested();", "-      }", "+      for (int i = 0; i < size; i++) _listeners.get(i).stepRequested();", "-    finally {", "-      _lock.endRead();", "-    }", "+    finally { _lock.endRead(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9473f26c1a352583e8d61e8ba6a1df26", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugEventNotifier.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void nonCurrThreadDied()", "signatureAfterChange": "   public void nonCurrThreadDied()", "diff": ["-   */", "+  /** Called when any thread other than the current thread dies. Must be executed in event thread. */", "-      for (int i = 0; i < size; i++) {", "-        _listeners.get(i).nonCurrThreadDied();", "-      }", "+      for (int i = 0; i < size; i++) _listeners.get(i).nonCurrThreadDied();", "-    finally {", "-      _lock.endRead();", "-    }", "+    finally { _lock.endRead(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b11a004f712780280b8465f4b45f584f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugEventNotifier.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void threadStarted()", "signatureAfterChange": "   public void threadStarted()", "diff": ["-   */", "+  /** Called when a thread starts. Must be executed in event thread. */", "-      for (int i = 0; i < size; i++) {", "-        _listeners.get(i).threadStarted();", "-      }", "+      for (int i = 0; i < size; i++) _listeners.get(i).threadStarted();", "-    finally {", "-      _lock.endRead();", "-    }", "+    finally { _lock.endRead(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc757d47e669669f841a400d54c0ecd3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugEventNotifier.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void currThreadDied()", "signatureAfterChange": "   public void currThreadDied()", "diff": ["-   */", "+  /** Called when the current thread dies. Must be executed in event thread. */", "-      for (int i = 0; i < size; i++) {", "-        _listeners.get(i).currThreadDied();", "-      }", "+      for (int i = 0; i < size; i++) _listeners.get(i).currThreadDied();", "-    finally {", "-      _lock.endRead();", "-    }", "+    finally { _lock.endRead(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dadc72f626589aabc31cf65e2458cd7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsEventNotifier.java", "commitBeforeChange": "7c2b459760724c8e0af7c91f77f7fa41e315edc6", "commitAfterChange": "c9b6668252c82575b56cf423d4fca817498241b6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void interactionStarted()", "signatureAfterChange": "   public void interactionStarted()", "diff": ["-   */", "+  /** Called after an interaction is started by the GlobalModel. */", "-      for (int i = 0; i < size; i++) {", "-        _listeners.get(i).interactionStarted();", "-      }", "+      for (int i = 0; i < size; i++)  _listeners.get(i).interactionStarted();", "-    finally {", "-      _lock.endRead();", "-    }", "+    finally { _lock.endRead(); }"]}], "num": 13805}