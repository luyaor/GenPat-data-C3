{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64e969e8a734c6a607152b2166e6092f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3686906195256a4ee6dfe0010064613", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "a6ad77fef884f528ddfb31a18f08f168fcd5e3f2", "commitAfterChange": "20e19df5b6c16c841aeff102df396402e35bacf3", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public void testSuiteEnded(JUnitError[] errors)", "signatureAfterChange": "   public void testSuiteEnded(JUnitError[] errors)", "diff": ["+    ", "+    List<OpenDefinitionsDocument> docs = _model.getOpenDefinitionsDocuments();", "+    List<File> files = new ArrayList<File>();", "+    for(OpenDefinitionsDocument odd: docs){", "+      File f = odd.getRawFile();", "+      if (f.getName().endsWith(\".dj0\") ||", "+          f.getName().endsWith(\".dj1\") ||", "+          f.getName().endsWith(\".dj2\")) files.add(f); ", "+    }", "+    for(JUnitError e: errors){", "+      e.setStackTrace(_compilerModel.getLLSTM().replaceStackTrace(e.stackTrace(),files));", "+      File f = e.file();", "+      if (f.getName().endsWith(\".dj0\") ||", "+          f.getName().endsWith(\".dj1\") ||", "+          f.getName().endsWith(\".dj2\")) {", "+        String dn = f.getName();", "+        dn = dn.substring(0, dn.lastIndexOf('.'))+\".java\";", "+        StackTraceElement ste = new StackTraceElement(e.className(), \"\", dn, e.lineNumber());", "+        ste = _compilerModel.getLLSTM().replaceStackTraceElement(ste, f);", "+        e.setLineNumber(ste.getLineNumber());", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca1f6a7858c5be95b48520f55f99c5cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e16fd9dc1aa815e303a7aa80be407f3a031e237d", "commitAfterChange": "97f3497fff8964fcbfb5676986b962bdda4668d8", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": "   void _gotoFileUnderCursor()", "signatureAfterChange": "   void _gotoFileUnderCursor()", "diff": ["-    List<OpenDefinitionsDocument> docs = _model.getOpenDefinitionsDocuments();", "-    if ((docs == null) || (docs.size() == 0)) return; // do nothing", "-    ", "-    GoToFileListEntry currentEntry = null;", "-    ArrayList<GoToFileListEntry> list;", "-    list = new ArrayList<GoToFileListEntry>(docs.size());", "-    for(OpenDefinitionsDocument d: docs) {", "-      GoToFileListEntry entry = new GoToFileListEntry(d, d.toString());", "-      if (d.equals(_model.getActiveDocument())) currentEntry = entry;", "-      list.add(entry);", "-    }", "-    ", "-    PredictiveInputModel<GoToFileListEntry> pim =", "-      new PredictiveInputModel<GoToFileListEntry>(true, new PrefixStrategy<GoToFileListEntry>(), list);", "-        pim.setMask(mask);", "+    gotoFileMatchingMask(mask);", "+  }"]}], "num": 7548}