{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da55e86ec8ec704f92cbade6b4741c86", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ef2e7c555095b4cc729367c8dcc4b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "875709ea758d694dda7555b8eeb2e15fa58e98c5", "commitAfterChange": "d29db164117e7452d6023bc6a73abe9d53f7d65b", "methodNumberBeforeChange": 451, "methodNumberAfterChange": 461, "signatureBeforeChange": "     public EmptyVarargInferenceChecker(Iterable<? extends Type> params, Iterable<? extends Expression> args,                                         Iterable<? extends VariableType> tparams)", "signatureAfterChange": "     public EmptyVarargInferenceChecker(Iterable<? extends Type> params, Iterable<? extends Expression> args,                                         Iterable<? extends VariableType> tparams,                                        Type returned, Option<Type> expected)", "diff": ["-                                       Iterable<? extends VariableType> tparams) {", "-      super(params, args, tparams);", "+                                       Iterable<? extends VariableType> tparams,", "+                                       Type returned, Option<Type> expected) {", "+      super(params, args, tparams, returned, expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d190d41b5c18918995bd88af0e1eb107", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "875709ea758d694dda7555b8eeb2e15fa58e98c5", "commitAfterChange": "d29db164117e7452d6023bc6a73abe9d53f7d65b", "methodNumberBeforeChange": 459, "methodNumberAfterChange": 469, "signatureBeforeChange": "     public MultiVarargInferenceChecker(Iterable<? extends Type> params, Iterable<? extends Expression> args,                                         Iterable<? extends VariableType> tparams)", "signatureAfterChange": "     public MultiVarargInferenceChecker(Iterable<? extends Type> params, Iterable<? extends Expression> args,                                         Iterable<? extends VariableType> tparams,                                        Type returned, Option<Type> expected)", "diff": ["-                                       Iterable<? extends VariableType> tparams) {", "-      super(params, args, tparams);", "+                                       Iterable<? extends VariableType> tparams,", "+                                       Type returned, Option<Type> expected) {", "+      super(params, args, tparams, returned, expected);"]}], "num": 8893}