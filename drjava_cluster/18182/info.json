{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae4d7764fdbe22639b9d0f33719aeaf8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac1393afff00f520807e92a4d56e940", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeLibrary.java", "commitBeforeChange": "e664df55ae0a7bd09b3050ad4027139ea59836cd", "commitAfterChange": "41fd33d17362a9b484003b73b5562d87a9b206fa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public TreeLibrary(Iterable<CompilationUnit> cus, ClassLoader parentLoader, Options opt)", "signatureAfterChange": "   public TreeLibrary(Iterable<CompilationUnit> cus, ClassLoader parentLoader, Options opt)", "diff": ["-    TreeClassLoader loader = new TreeClassLoader(parentLoader, opt); ", "+    _loader = new TreeClassLoader(parentLoader, opt); ", "-          DJClass c = new TreeClass(fullName, null, ast, loader, opt);", "+          DJClass c = new TreeClass(fullName, null, ast, _loader, opt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ea9eee6b24c7f25fee14e9d1338141b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private TypeContext handleTypeDeclaration(TypeDeclaration node)", "signatureAfterChange": "      private TypeContext handleTypeDeclaration(TypeDeclaration node)", "diff": ["-    DJClass c = new TreeClass(context.makeClassName(node.getName()), null, node, loader, opt);", "+    DJClass c = new TreeClass(context.makeClassName(node.getName()), null, context.accessModule(), node, loader, opt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ace1d9e7afec41971fc82fe570a230a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 35, "signatureBeforeChange": "     @Override public Type visit(AnonymousAllocation node)", "signatureAfterChange": "     @Override public Type visit(AnonymousAllocation node)", "diff": ["-          // TODO: Check accessibility of constructor", "+          checkAccessibility(inv.constructor(), node);", "-      TreeClass c = new TreeClass(context.makeAnonymousClassName(), null, node, loader, opt);", "+      TreeClass c = new TreeClass(context.makeAnonymousClassName(), null, context.accessModule(), node, loader, opt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3fe9aec1fe7144566252833dccc9e7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeLibrary.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public TreeLibrary(Iterable<CompilationUnit> cus, ClassLoader parentLoader, Options opt)", "signatureAfterChange": "   public TreeLibrary(Iterable<CompilationUnit> cus, ClassLoader parentLoader, Options opt)", "diff": ["-          DJClass c = new TreeClass(fullName, null, ast, _loader, opt);", "+          DJClass c = new TreeClass(fullName, null, null, ast, _loader, opt);"]}], "num": 18182}