{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fdce09e0649cac72ab408bf53b049a61", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1262e7c1ef750849b84b188e974670d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "1ca22d8d9e892abbe72cd6aa5627cc7ce0e56b03", "commitAfterChange": "024873f55ad7ba6280213fee7183c6688ba3b395", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private String _processReturnValue(Object o)", "signatureAfterChange": "      private String _processReturnValue(Object o)", "diff": ["-    if (o instanceof String) {", "-      return \"\\\"\" + o + \"\\\"\";", "-    }", "-    else if (o instanceof Character) {", "-      return \"'\" + o + \"'\";", "-    }", "-    else {", "-      return o.toString();", "-    }", "+    if (o instanceof String) return \"\\\"\" + o + \"\\\"\";", "+    if (o instanceof Character) return \"'\" + o + \"'\";", "+    return o.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cc82723e61e4adda31b6360299d27f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeClass.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public TreeClass(String fullName, DJClass declaring, Node ast, final TreeClassLoader loader,                    Options opt)", "signatureAfterChange": "   public TreeClass(String fullName, DJClass declaring, Node ast, final TreeClassLoader loader,                    Options opt)", "diff": ["-    if (_ast instanceof TypeDeclaration) { _accessFlags = ((TypeDeclaration) _ast).getAccessFlags(); }", "-    else { _accessFlags = 0; }", "+    if (_ast instanceof TypeDeclaration) { _mods = ((TypeDeclaration) _ast).getModifiers(); }", "+    else { _mods = ModifierSet.make(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9bf0b81931751ed42ac452461ad9648", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/FunctionContext.java", "commitBeforeChange": "7c0f2c9147393f8cef6c7d3001b98a8817827537", "commitAfterChange": "98199cff1a4c3f1ef86520681f1e57a0f8ce3066", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Override public Type getReturnType()", "signatureAfterChange": "      @Override public Type getReturnType()", "diff": ["-    if (_f instanceof LocalFunction) { return ((LocalFunction) _f).returnType(); }", "-    else if (_f instanceof DJMethod) { return ((DJMethod) _f).returnType(); }", "-    else { return null; }", "+    if (_f instanceof DJConstructor) { return TypeSystem.VOID; }", "+    else { return _f.returnType(); }"]}], "num": 38}