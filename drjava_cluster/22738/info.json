{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c74aec78243487068ebdbc641ab662c6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d49d7dc56264dd44057f5ad7c9af79e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "     public Object visit(ConstructorDeclaration node)", "signatureAfterChange": "     public Node visit(ConstructorDeclaration node)", "diff": ["-    public Object visit(ConstructorDeclaration node) {", "-      LinkedList parameters = new LinkedList(); // Add parameterization <Node>.", "-      Iterator it = node.getParameters().iterator();", "-      while (it.hasNext()) {", "-        parameters.add((Node)((Node)it.next()).acceptVisitor(this));", "+    public Node visit(ConstructorDeclaration node) {", "+      LinkedList<FormalParameter> parameters = new LinkedList<FormalParameter>(); // Add parameterization <Node>.", "+      Iterator<FormalParameter> it1 = node.getParameters().iterator();", "+      while (it1.hasNext()) {", "+        parameters.add((FormalParameter)it1.next().acceptVisitor(this));", "-      LinkedList statements = new LinkedList(); // Add parameterization <Node>.", "-      it = node.getStatements().iterator();", "-      while (it.hasNext()) {", "-        statements.add((Node)((Node)it.next()).acceptVisitor(this));", "+      LinkedList<Node> statements = new LinkedList<Node>(); // Add parameterization <Node>.", "+      Iterator<Node> it2 = node.getStatements().iterator();", "+      while (it2.hasNext()) {", "+        statements.add(it2.next().acceptVisitor(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "659171b2934be0e666d3a95cd04184b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "     public Object visit(ConstructorDeclaration node)", "signatureAfterChange": "     public Node visit(ConstructorDeclaration node)", "diff": ["-    public Object visit(ConstructorDeclaration node) {", "-      LinkedList parameters = new LinkedList(); // Add parameterization <Node>.", "-      Iterator it = node.getParameters().iterator();", "-      while (it.hasNext()) {", "-        parameters.add((Node)((Node)it.next()).acceptVisitor(this));", "+    public Node visit(ConstructorDeclaration node) {", "+      LinkedList<FormalParameter> parameters = new LinkedList<FormalParameter>(); // Add parameterization <Node>.", "+      Iterator<FormalParameter> it1 = node.getParameters().iterator();", "+      while (it1.hasNext()) {", "+        parameters.add((FormalParameter)it1.next().acceptVisitor(this));", "-      LinkedList statements = new LinkedList(); // Add parameterization <Node>.", "-      it = node.getStatements().iterator();", "-      while (it.hasNext()) {", "-        statements.add((Node)((Node)it.next()).acceptVisitor(this));", "+      LinkedList<Node> statements = new LinkedList<Node>(); // Add parameterization <Node>.", "+      Iterator<Node> it2 = node.getStatements().iterator();", "+      while (it2.hasNext()) {", "+        statements.add(it2.next().acceptVisitor(this));"]}], "num": 22738}