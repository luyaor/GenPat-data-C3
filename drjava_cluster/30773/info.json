{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9800521d9902c791fdde0d4549b40889", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "549f57419fd171015790aa4520eaeef3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TypeParameter.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public TypeParameter(SourceInfo in_sourceInfo, List<IdentifierToken> ids, ReferenceTypeName in_bound, List<ReferenceTypeName> in_interfaceBounds)", "signatureAfterChange": "   public TypeParameter(List<IdentifierToken> ids, ReferenceTypeName in_bound,                        List<ReferenceTypeName> in_interfaceBounds, SourceInfo in_sourceInfo)", "diff": ["-  public TypeParameter(SourceInfo in_sourceInfo, List<IdentifierToken> ids, ReferenceTypeName in_bound, List<ReferenceTypeName> in_interfaceBounds) {", "-    super(ids, in_sourceInfo.getFilename(), in_sourceInfo.getStartLine(),", "-          in_sourceInfo.getStartColumn(), in_sourceInfo.getEndLine(), in_sourceInfo.getEndColumn());", "+  public TypeParameter(List<IdentifierToken> ids, ReferenceTypeName in_bound,", "+                       List<ReferenceTypeName> in_interfaceBounds, SourceInfo in_sourceInfo) {", "+    super(ids, in_sourceInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d683763f4e1c786b476c66b53c45e56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      @Override public TypeContext visit(ExpressionStatement node)", "signatureAfterChange": "      @Override public TypeContext visit(ExpressionStatement node)", "diff": ["-            SourceInfo si = node.getSourceInfo();", "-            Node decl = new VariableDeclaration(false, null, name, assign.getRightExpression(),", "-                                                si.getFilename(), si.getStartLine(), si.getStartColumn(),", "-                                                si.getEndLine(), si.getEndColumn());", "+            Node decl = new VariableDeclaration(false, null, name, assign.getRightExpression(), node.getSourceInfo());"]}], "num": 30773}