{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1438b560e8905b8edfe442880fb96697", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43e9da990063e5f42eef1628a08cb21e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SymbolData.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 119, "signatureBeforeChange": "          public void testCheckDifferentReturnTypes()", "signatureAfterChange": "          public void testCheckDifferentReturnTypes()", "diff": ["-      assertTrue(\"There should be a conflict in 1.4\", checkDifferentReturnTypes(md8, _sd, JavaVersion.JAVA_1_4));", "-      assertEquals(\"There should now be 4 errors\", 4, TypeChecker.errors.size());", "-      assertEquals(\"The error message should be correct\", TypeChecker.errors.getLast().getFirst(), ", "-                   \"superSuperMethodName(char) in superClass cannot override superSuperMethodName(char) in \" + ", "-                   superSuperSd.getName() + \"; attempting to use different return types\");", "+      /* Java 1.4 is not supported. */", "+//      assertTrue(\"There should be a conflict in 1.4\", checkDifferentReturnTypes(md8, _sd, JavaVersion.JAVA_1_4));", "+//      assertEquals(\"There should now be 4 errors\", 4, TypeChecker.errors.size());", "+//      assertEquals(\"The error message should be correct\", TypeChecker.errors.getLast().getFirst(), ", "+//                   \"superSuperMethodName(char) in superClass cannot override superSuperMethodName(char) in \" + ", "+//                   superSuperSd.getName() + \"; attempting to use different return types\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e111b9b18fabce94883c2e9bdb22261", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void testWriteFile() throws IOException, MalformedProjectFileException", "signatureAfterChange": "    public void testWriteFile() throws IOException, MalformedProjectFileException", "diff": ["-    assertEquals(\"first source filename\", new File(parent,\"/dir1/testfile1.java\").getPath(), ", "-                 pfir.getSourceFiles()[0].getPath());", "-    assertEquals(\"last source filename\", new File(parent,\"/dir3/testfile5.java\").getPath(), ", "-                 pfir.getSourceFiles()[4].getPath());", "+//    assertEquals(\"first source filename\", new File(parent,\"/dir1/testfile1.java\").getPath(), ", "+//                 pfir.getSourceFiles()[0].getPath());", "+//    assertEquals(\"last source filename\", new File(parent,\"/dir3/testfile5.java\").getPath(), ", "+//                 pfir.getSourceFiles()[4].getPath());"]}], "num": 30535}