{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0702f0f3ddc66099037bdae023211fa7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "477d43506a611078340a57c7a9ef9129", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "5cb9931cd4d17d4bcf0e028e2763a314647f8344", "commitAfterChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "   public Void visit(ConstructorDeclaration node)", "signatureAfterChange": "   public Void visit(ConstructorDeclaration node)", "diff": ["-    Iterator it = node.getParameters().iterator();", "-    while (it.hasNext()) {", "-      ((Node)it.next()).acceptVisitor(this);", "+    for (Node n : node.getParameters()) {", "+      n.acceptVisitor(this);", "-    it = node.getExceptions().iterator();", "-    while (it.hasNext()) {", "-      ((Node)it.next()).acceptVisitor(this);", "+    for (Node n : node.getExceptions()) {", "+      n.acceptVisitor(this);", "-    it = node.getStatements().iterator();", "-    while (it.hasNext()) {", "-      ((Node)it.next()).acceptVisitor(this);", "+    for (Node n : node.getStatements()) {", "+      n.acceptVisitor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd07da2ad33325194aa7bc7185e9ec37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "6d55d86705248616cac5b324a7c528485ceb6104", "commitAfterChange": "d9483f6c228cd09f3431ad6b50a3d96bdaf83832", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      public void testDocumentPaneMemoryLeak()  throws InterruptedException, java.io.IOException", "signatureAfterChange": "      public void testDocumentPaneMemoryLeak()  throws InterruptedException, java.io.IOException", "diff": ["-    // make sure that the event queue is empty (can we explicity test this condition?)", "-    Utilities.clearEventQueue();", "-    Utilities.clearEventQueue();", "+    _ct = 0;", "+    do { _cleanup(); }", "+    while (_finalDocCount != 6 || _finalCount != 6);", "-    System.gc();", "-    Utilities.clearEventQueue(); ", "-    System.runFinalization();", "+    if (_ct > 1) System.err.println(\"testDocumentPaneMemoryLeak required \" + _ct + \" iterations\");", "-    Utilities.clearEventQueue();   ", "-    Utilities.clearEventQueue(); ", "-    ", "-    System.gc();", "-    Utilities.clearEventQueue(); ", "-    System.runFinalization();", "-    Utilities.clearEventQueue(); "]}], "num": 27121}