{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f4d8cbd548df704ee523c1934b59652", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3285c7890bfa031fb992a173241b7a6e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "bdf0d961e3094e45012183b3b2277f169c5827d7", "commitAfterChange": "8782e19ccfa5357f9b140c38d08e98757ee04270", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private boolean isUnmanaged()", "signatureAfterChange": "     private boolean isUnmanagedOrUntitled()", "diff": ["-    private boolean isUnmanaged() { return _stat == UNMANAGED; }", "+    private boolean isUnmanagedOrUntitled() { return (_stat & 0x1) != 0; }  // tests if _stat is odd"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a7c430e9b6e92c4abf13f2c229f003b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "     void setOut()", "signatureAfterChange": "     void closingKickOut()", "diff": ["+     *  @pre lock for this already held. */", "+    void closingKickOut() { kickOut(true); }", "-    void setFirst() { _stat = FIRST_IN_LRU; }", "-    void setOut()   { _stat = NOT_IN_LRU; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac70b05b7ba33e23aca9335b809393a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "          void setFirst()", "signatureAfterChange": "     private void setNotInQueue()", "diff": ["+    private void setUnmanaged() { _stat = UNMANAGED; }", "+    private void setNotInQueue() { _stat = NOT_IN_QUEUE; }", "-    ", "-    void setFirst() { _stat = FIRST_IN_LRU; }"]}], "num": 2754}