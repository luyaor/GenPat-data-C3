{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65a4e63b3aa9d3044281c7753aa38a45", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43f79e3d2a197f24fa9e81fa82d7d6ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "481944e3395dcc7a19e81902c59977be65ba633a", "commitAfterChange": "c682fca099b13e765e0e1f201629222d04fb1339", "methodNumberBeforeChange": 333, "methodNumberAfterChange": 337, "signatureBeforeChange": "   private void addDocToNavigator(OpenDefinitionsDocument doc) throws IOException", "signatureAfterChange": "   private void addDocToNavigator(final OpenDefinitionsDocument doc)", "diff": ["-  private void addDocToNavigator(OpenDefinitionsDocument doc) throws IOException{", "-    // INavigatorItem idoc = makeIDocFromODD(doc);", "+  private void addDocToNavigator(final OpenDefinitionsDocument doc) {", "+    try {", "+      Utilities.invokeAndWait(new Runnable() {", "+        public void run() {", "+          try {", "+            if (doc.isUntitled()) _documentNavigator.addDocument(doc);", "+            else {", "+              String path = doc.getFile().getCanonicalPath();", "+              _documentNavigator.addDocument(doc, fixPathForNavigator(path)); ", "+            }", "+          }", "+          catch(IOException e) { _documentNavigator.addDocument(doc); }", "+        }});", "+    }", "+    catch(InterruptedException e) { throw new UnexpectedException(e); }", "-    String path = doc.getFile().getCanonicalPath();", "-    _documentNavigator.addDocument(doc, fixPathForNavigator(path));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "538d610d4fbcf4802bc0f4ec66c58cce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "d331e9af4b7210b21c235397f4a55183e132c12e", "commitAfterChange": "4a4ec2d05d53f85461639265168dfd632b3bdad1", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "     public TestResult startJUnit() throws IOException", "signatureAfterChange": "     public TestResult startJUnit() throws IOException", "diff": ["-        TestRunner testRunner = getTestRunner();", "+        JUnitTestRunner testRunner = getTestRunner();", "-        Test suite= testRunner.getTest(testFilename);", "+        try {", "+          if (! testRunner.isTestCase(testFilename)) {", "+            notifyListeners(new EventNotifier() {", "+              public void notifyListener(GlobalModelListener l) {", "+              l.nonTestCase();", "+              l.junitEnded();", "+            }", "+            });", "+            return null;", "+          }", "+        }", "+        catch (ClassNotFoundException e) {", "+          throw new UnexpectedException(e);", "+        }", "+        ", "+        Test suite = testRunner.getTest(testFilename);", "-      } catch (IllegalStateException e) {", "+      } ", "+      catch (IllegalStateException e) {"]}], "num": 27082}