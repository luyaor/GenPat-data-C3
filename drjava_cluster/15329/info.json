{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "305b3c674e6db9f0bb6a3a901604857b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07d3e794266b860582ee39b58a42db62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "1018be24b33ba74b1be6da8d72dc97e6545e20b1", "commitAfterChange": "c0c2e54a62410a429f0ffcedb26fd38c6f82937b", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public void testCancelSaveAlreadySaved()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCancelSaveAlreadySaved()     throws BadLocationException, IOException", "diff": ["-        assertEquals(\"saved file name\", file, f);", "-        saveCount++;", "+        try {", "+          assertEquals(\"saved file\", file.getCanonicalFile(),", "+                       f.getCanonicalFile());", "+          saveCount++;", "+        }", "+        catch (IOException ioe) {", "+          fail(\"could not get canonical file\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f98b06caf0ef2c0117db26d0a60c8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "69464949f304455efe72f78ee854438cff27207a", "commitAfterChange": "17600b9f1362dad642f89cf0296e45c7ada70a5d", "methodNumberBeforeChange": 481, "methodNumberAfterChange": 481, "signatureBeforeChange": "   private boolean _saveProjectAs()", "signatureAfterChange": "   private boolean _saveProjectAs()", "diff": ["-      if ((file != null) && (! file.exists() || MainFrameStatics.verifyOverwrite(MainFrame.this, file))) { ", "-        _model.setProjectFile(file);", "-        _currentProjFile = file;", "+      try {", "+        // by getting the canonical file, we make sure that we get an IOException if the filename is illegal", "+        if ((file != null) && (! file.getCanonicalFile().exists() || MainFrameStatics.verifyOverwrite(MainFrame.this, file))) { ", "+          _model.setProjectFile(file);", "+          _currentProjFile = file;", "+        }", "+      }", "+      catch(IOException e) {", "+        MainFrameStatics.showIOError(MainFrame.this, e);", "+        return false;"]}], "num": 15329}