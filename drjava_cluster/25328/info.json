{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1be79c095a364624253e1bf60f0addd4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ec572ca3cb32c113d4bab536b5ae5a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelControl.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public Vector<HighlightStatus> getHighlightStatus(final int start, final int length)", "signatureAfterChange": "   public Vector<HighlightStatus> getHighlightStatus(final int start, final int length)", "diff": ["-    curLength = cursor.current().getSize() - rmc.getBlockOffset();", "-    curState = cursor.current().getHighlightState();", "+    curLength = !cursor.atEnd() ? cursor.current().getSize() - rmc.getBlockOffset() : start + length;", "+    curState = !cursor.atEnd()  ? cursor.current().getHighlightState() : 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "462bca991642338aa050c02aeef3cece", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "fa3002b037df55391c4f74b18fce7cb5d20b82f3", "commitAfterChange": "5f12d16bf856e43a5e3999099b39d12f17d7ad32", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 53, "signatureBeforeChange": "   private boolean _isCurrentBraceMatchable( \t\tModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private boolean _isCurrentBraceMatchable( \t\tModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-  {", "-    String type = copyCursor.current().getType();", "+\t\t{", "+\t\t\tString type = copyCursor.current().getType();", "-    return !(type.equals(\"/\")  ||", "-             type.equals(\"*\")  ||", "-             type.equals(\"\\n\") ||", "-             type.equals(\"//\"));", "-  }", "+\t\t\treturn (!copyCursor.current().isGap() &&", "+\t\t\t\t\t\t\t!(type.equals(\"/\")  ||", "+\t\t\t\t\t\t\t\ttype.equals(\"*\")  ||", "+\t\t\t\t\t\t\t\ttype.equals(\"\\n\") ||", "+\t\t\t\t\t\t\t\ttype.equals(\"//\")) &&", "+\t\t\t\t\t\t\t!copyCursor.current().isShadowed());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64ace45611150362204c9dbeeec3748e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "    @Override public TypeContext visit(ExpressionStatement node)", "signatureAfterChange": "    @Override public TypeContext visit(ExpressionStatement node)", "diff": ["-    if (node.getExpression() instanceof SimpleAssignExpression) {", "+    if (node.getExpression() instanceof SimpleAssignExpression &&", "+        !opt.requireVariableType() && (node.getHasSemicolon() || !opt.requireSemicolon())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9715f648411005a60fc1ebffe5d72d2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "9492cfc4c7a2fa5a757c3f8cff89dccdb4a82cef", "commitAfterChange": "2f086150330979ff4c62e4d5f92d3a639145eafa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private boolean _isJUnitTest(Class c)", "signatureAfterChange": "   private boolean _isJUnitTest(Class c)", "diff": ["-    return Test.class.isAssignableFrom(c);", "+", "+    return Test.class.isAssignableFrom(c) && !Modifier.isAbstract(c.getModifiers()) && !Modifier.isInterface(c.getModifiers());"]}], "num": 25328}