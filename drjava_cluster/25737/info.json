{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d3a5b1eda7a024fc2915ad2928dc7a7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0403aea838facd2e966602fc64ed6623", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "1ecc95c0c60f2dabd3e5d52eee223ff564461e48", "commitAfterChange": "a7a03ce246432b4e0ab5d61753312842c1cd49c1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public MainJVM(final GlobalModel model) throws RemoteException", "signatureAfterChange": "    public MainJVM(final GlobalModel model) throws RemoteException", "diff": ["-    super(InterpreterJVM.class.getName());", "+    super();", "-    startInterpreterJVM();", "-  }", "+    _startNameServiceIfNeeded();", "+    _identifier = _createIdentifier();", "+    try {", "+      Naming.rebind(_identifier, this);", "+    }", "+    catch (Exception e) {", "+      throw new edu.rice.cs.util.UnexpectedException(e);", "+    }", "+", "+    restartInterpreterJVM();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1708c8e051cdf60cc320a3c7cc88c550", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "commitAfterChange": "42161d6697319e0431a875a1f8336eb6cdd1fe73", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   synchronized void scrollToSource(LocatableEvent e)", "signatureAfterChange": "   synchronized void scrollToSource(LocatableEvent e)", "diff": ["-      String className = rt.name();", "-      String ps = System.getProperty(\"file.separator\");", "-      // replace periods with the System's file separator", "-      className = StringOps.replace(className, \".\", ps);", "-      ", "-      // crop off the $ if there is one and anything after it", "-      int indexOfDollar = className.indexOf('$');    ", "-      if (indexOfDollar > -1) {", "-        className = className.substring(0, indexOfDollar);", "+      String filename = \"\";", "+      try {", "+        filename = rt.sourceName();", "+      catch (AbsentInformationException aie) {", "+        // Don't know real source name:", "+        //   assume source name is same as file name", "+        String className = rt.name();", "+        String ps = System.getProperty(\"file.separator\");", "+        // replace periods with the System's file separator", "+        className = StringOps.replace(className, \".\", ps);", "+        ", "+        // crop off the $ if there is one and anything after it", "+        int indexOfDollar = className.indexOf('$');    ", "+        if (indexOfDollar > -1) {", "+          className = className.substring(0, indexOfDollar);", "+        }", "-      String filename = className + \".java\";", "-      // If not on sourcepath, check source root set (open files)", "+        filename = className + \".java\";", "+      }", "+        ", "+      // Check source root set (open files)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cc33105aae0b9676fa0580b870b1952", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "commitAfterChange": "46e11d94aab488b0f851c712b65caea9a087e829", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void setPosition(int pos)", "signatureAfterChange": "    public void setPosition(int pos)", "diff": ["+  public void setPosition(int pos) {", "+    try { _current = _doc.createPosition(pos); }", "+    catch (BadLocationException ble) { throw new UnexpectedException(ble); }", "+  }", "-    public void setPosition(int pos)  { _state.setPosition(pos); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20d460264d013346b55c14e149daf746", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          public void saveBeforeCompile()", "signatureAfterChange": "          public void saveBeforeCompile()", "diff": ["-      saveAllFiles(_model, new FileSaveSelector() {", "-        public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "-        public boolean warnFileOpen(File f) { return false; }", "-        public boolean verifyOverwrite() { return true; }", "-        public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "-      });", "+      try {", "+        _model.saveAllFiles(new FileSaveSelector() {", "+          public File getFile() { throw new UnexpectedException (\"Test should not ask for save file name\"); }", "+          public boolean warnFileOpen(File f) { return false; }", "+          public boolean verifyOverwrite() { return true; }", "+          public boolean shouldSaveAfterFileMoved(OpenDefinitionsDocument doc, File oldFile) { return false; }", "+        });", "+      }", "+      catch(IOException e) { throw new UnexpectedException(e); }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21e33278c3d23da24e3bc3736d868e4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "b2d820b253c15b02ecb50e43e9a336a56dadd45e", "commitAfterChange": "a80c6de11e537b6579c447ea812ef2f4f98b5f2f", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 63, "signatureBeforeChange": "   private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className,                               final boolean shouldHighlight)", "signatureAfterChange": "   private void openAndScroll(final OpenDefinitionsDocument doc, int line, String className,                               final boolean shouldHighlight)", "diff": ["-  private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className, ", "+  private void openAndScroll(final OpenDefinitionsDocument doc, int line, String className, ", "+      if (LanguageLevelStackTraceMapper.isLLFile(doc.getRawFile())) {", "+        // map J", "+      }", "+      final int llLine = line;", "-      EventQueue.invokeLater(new Runnable() { public void run() { _notifier.threadLocationUpdated(doc, line, shouldHighlight); } });", "+      EventQueue.invokeLater(new Runnable() { public void run() { _notifier.threadLocationUpdated(doc, llLine, shouldHighlight); } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22d614477ef91d328c7ed3230718d60d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentFileManager.java", "commitBeforeChange": "c5840283da06690e8676e5b395b239a18a3908bb", "commitAfterChange": "b126c48fb6e642ca409d0fdb5b704f90178a8277", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void updateOpenFiles(final File file)", "signatureAfterChange": "   public void updateOpenFiles(final File file)", "diff": ["+    try {", "+      newItem.setToolTipText(file.getCanonicalPath());", "+    }", "+    catch(IOException e) {", "+      // don't worry about it at this point", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29bd1992f73945c24182424bba60b1e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "dab739e9c0a893840c19d552b534083722093495", "commitAfterChange": "9d7de430d203354a52d3faa0378a92c50af92fb7", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "      private void _junit()", "signatureAfterChange": "      private void _junit()", "diff": ["+    catch (ClassNotFoundException cnfe) {", "+      _showClassNotFoundError(cnfe);", "+    }", "+    catch (NoClassDefFoundError ncde) {", "+      _showNoClassDefError(ncde);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b763db6ef85a9787b8a6b3cf2e35615", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "667a3b3eeb7df33831045c52d97320979614b89d", "commitAfterChange": "1b2c230a180a408e07fefa4999fd97bfd19485a5", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "diff": ["-    final File projectRoot = ir.getProjectRoot();", "+    File pr = ir.getProjectRoot();", "+    try {", "+      pr = pr.getCanonicalFile();", "+    }", "+    catch(IOException ioe) { /* could not canonize file, we'll take what we have */ }", "+    final File projectRoot = pr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ed45b1592613d236118a0fa6c26918c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfig.java", "commitBeforeChange": "bd115d85e858b9ca09ebbbacbcf2bcab93ec2746", "commitAfterChange": "74f91d4ab1bc60eb8b5e8fd35cfb982ee9101049", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void save(File f)", "signatureAfterChange": "   public void save(File f)", "diff": ["+    FileOutputStream fos = null;", "-      save(new FileOutputStream(f));", "+      fos = new FileOutputStream(f);", "+      save(fos);", "+    finally {", "+      try {", "+        if (fos!=null) fos.close();", "+      }", "+      catch(IOException ioe) { /* ignore exception when closing */ }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52c9d3607fce9a231a8776156390798a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementEvaluator.java", "commitBeforeChange": "b2d2046328b12720e786659c0fc4f52e88a58d32", "commitAfterChange": "0fe874dd6d2f82ba868df35578fd530c5227b9f2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "    @Override public Result visit(final ForEachStatement node)", "signatureAfterChange": "    @Override public Result visit(final ForEachStatement node)", "diff": ["-        iter = (Iterator<?>) getIterator.invoke(iterable, getIterator, node);", "+        try { getIterator.setAccessible(true); }", "+        catch (SecurityException e) { /* made a best attempt */ }", "+        iter = (Iterator<?>) getIterator.invoke(iterable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54e9f54ed2b1a66c2bcda5a904224d61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ClassAndInterfaceFinder.java", "commitBeforeChange": "bd115d85e858b9ca09ebbbacbcf2bcab93ec2746", "commitAfterChange": "74f91d4ab1bc60eb8b5e8fd35cfb982ee9101049", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ClassAndInterfaceFinder(File f)", "signatureAfterChange": "   public ClassAndInterfaceFinder(File f)", "diff": ["-    Reader r;", "-    try { r = new FileReader(f); }", "-    catch(FileNotFoundException e) { /* create a Reader for an \"empty\" file */", "-      r = new StringReader(\"\");", "+    Reader r = null;", "+    try {", "+      try { r = new FileReader(f); }", "+      catch(FileNotFoundException e) { /* create a Reader for an \"empty\" file */", "+        r = new StringReader(\"\");", "+      }", "+      initialize(r);", "-    initialize(r);", "+    finally {", "+      try {", "+        if (r!=null) r.close();", "+      }", "+      catch(IOException ioe) { /* ignore exception on close */ }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "555fdb2eb9602bf0f544743059ee3631", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "a452bc1c75053221683fa7723a55972e27a5b54c", "commitAfterChange": "9bce8671af84f7e65989f2592fb3cf5b37102c42", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   private boolean wholeWordFoundAtCurrent(OpenDefinitionsDocument doc, int foundOffset)", "signatureAfterChange": "   private boolean wholeWordFoundAtCurrent(OpenDefinitionsDocument doc, int foundOffset)", "diff": ["-      catch (BadLocationException e) { leftOutOfBounds = true; }", "+      catch (BadLocationException e) { leftOutOfBounds = true; } ", "+      catch (IndexOutOfBoundsException e) { leftOutOfBounds = true; }", "-      catch (BadLocationException e) { rightOutOfBounds = true; }", "+      catch (BadLocationException e) { rightOutOfBounds = true; } ", "+      catch (IndexOutOfBoundsException e) { rightOutOfBounds = true; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d7dd9d6f92f56a7c5654fc0ec05fb2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "commitAfterChange": "62776e907e3e6dddd6b4161559ae3b70f27cc2e5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static void main(final String[] args)", "signatureAfterChange": "   public static void main(final String[] args)", "diff": ["-    createAndShowGUI(args); ", "+//    Utilities.showDebug(\"Calling configureAndLoadDrJavaRoot with args = \" + args);", "+    configureAndLoadDrJavaRoot(args); ", "-    SwingUtilities.invokeLater(new Runnable() { public void run() { splash.dispose(); } });", "+    SwingUtilities.invokeLater(new Runnable() { ", "+      public void run() { ", "+        try { Thread.currentThread().sleep(PAUSE_TIME); }", "+        catch(InterruptedException e) { }", "+        splash.dispose(); ", "+      }});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61e5f9e2d0afe808c3ba91d41c13412b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "commitAfterChange": "46e11d94aab488b0f851c712b65caea9a087e829", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void makeCurrentOffsetStart()", "signatureAfterChange": "    public void makeCurrentOffsetStart()", "diff": ["+  public void makeCurrentOffsetStart() {", "+    try { _start = _doc.createPosition(getCurrentOffset()); }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "+  }", "-    public void makeCurrentOffsetStart() { _state.makeCurrentOffsetStart(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a506474b157d17bb981a9b4d9dcb563", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "297e294cfcf774f3823ebb2c52e578d9d54f8165", "commitAfterChange": "577b4a8bad3187067d1f7c3df5ccf6c439482a05", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ConfigFrame (MainFrame frame)", "signatureAfterChange": "   public ConfigFrame (MainFrame frame)", "diff": ["-        boolean successful = saveSettings();", "+        boolean successful = true;", "+        try{", "+          successful = saveSettings();", "+        }", "+        catch (IOException ioe) {}", "-        saveSettings();", "+        try {", "+          saveSettings();", "+        }", "+        catch (IOException ioe) {}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ba7f927ede2222b33f9eda467078ab0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "91734830bfc37ccb85bb6b7693b74ec1fa3e1c29", "commitAfterChange": "29114a3ab27f49e46885f181f9f058e018ee6b61", "methodNumberBeforeChange": 176, "methodNumberAfterChange": 185, "signatureBeforeChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "diff": ["+    //if in source folder, add to black list", "+    else { ", "+      try { ", "+        _state.addExcludedFile(doc.getFile()); ", "+      }", "+      catch (Exception e) {}", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c01cfbb53a2f38366fee9793d2d104f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "5c952c5847e3008cec3ed5ff89d03d335c050f54", "commitAfterChange": "e3e56a8c058b51612dfa6f1f21259a37eadcdcbb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public boolean hasErrorsWithPositions(OpenDefinitionsDocument odd)", "signatureAfterChange": "   public boolean hasErrorsWithPositions(OpenDefinitionsDocument odd)", "diff": ["-    } catch (IllegalStateException ise) {", "+    }", "+    catch (IllegalStateException ise) {", "-    } catch (FileMovedException fme) {", "+    }", "+    catch (FileMovedException fme) {", "-    if (file == null){", "+    if (file == null) {", "+    }", "+    ", "+    // Try to use the canonical file", "+    try {", "+      file = file.getCanonicalFile();", "+    }", "+    catch (IOException ioe) {", "+      // Oh well, look for the file as is."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c5e78ebb09134d30ddabb3e463800d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f9b0aacda7d0b19ff2541b10e4df48c67eef3bf5", "commitAfterChange": "51d1f2e57f80c21afa7918fd2fa925d58d67589d", "methodNumberBeforeChange": 263, "methodNumberAfterChange": 263, "signatureBeforeChange": "      public void setUpDrJavaProperties()", "signatureAfterChange": "      public void setUpDrJavaProperties()", "diff": ["-    final String DEF_DIR = _model.getInteractionsModel().getWorkingDirectory().toString();", "+    final String DEF_DIR = \"${drjava.working.dir}\";", "+          try {", "+            f = f.getCanonicalFile();", "+          }", "+          catch(IOException ioe) { }", "+            try {", "+              f = f.getCanonicalFile();", "+            }", "+            catch(IOException ioe) { }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dd8716deea2b55a4835b6f20cc8e9a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 81, "signatureBeforeChange": "   public void resetInteractionsClassPath()", "signatureAfterChange": "   public void resetInteractionsClassPath()", "diff": ["-          System.out.println(\"File \" + f + \" in your extra classpath could not be parsed to a URL, maybe it contains un-URL-encodable characters?\");", "+          System.out.println(\"File \" + f + \" in your extra classpath could not be parsed to a URL; \" +", "+                             \"it may contain un-URL-encodable characters.\");", "-    List<OpenDefinitionsDocument> odds = getProjectDocuments();", "+    List<OpenDefinitionsDocument> odds = getAuxiliaryDocuments();", "+    ", "+    // add project source root to projectFilesClassPath.  All files in project tree have this root.", "+    ", "+    try { _interactionsModel.addProjectFilesClassPath(getProjectRoot().toURL()); }", "+    catch(MalformedURLException murle) { /* fail silently */ } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "807370be48eb8d231f52c2342319ab9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectMenuTest.java", "commitBeforeChange": "7ddee5dc15678210d67bde01004f3a1d7919cf7b", "commitAfterChange": "1a6fd1a0e7e181e52da6f98c6b2f1cab31c48798", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["-    ", "-    // create temp directory for this test", "-    _base = new File(System.getProperty(\"java.io.tmpdir\")).getCanonicalFile();", "-    _parent = IOUtil.createAndMarkTempDirectory(\"proj\", \"\", _base);", "-    _srcDir = new File(_parent, \"src\");", "-    _srcDir.mkdir(); // create the src directory", "-", "-    // create project in a directory with an auxiliary file outside of it", "-    _auxFile = File.createTempFile(\"aux\", \".java\").getCanonicalFile();", "-    File auxFileParent = _auxFile.getParentFile();", "-    _projFile = new File(_parent, \"test.pjt\");", "-    ", "-    _file1 = new File(_srcDir, \"test1.java\");", "-    IOUtil.writeStringToFile(_file1, \"\");  // create dummy file", "-    _file2 = new File(_srcDir, \"test2.java\");", "-    IOUtil.writeStringToFile(_file2, \"\");// create dummy file", "-    ", "+    // Perform Swing setup in event thread because the event thread is ALREADY running", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        try {", "+      ", "+          // create temp directory for this test", "+          _base = new File(System.getProperty(\"java.io.tmpdir\")).getCanonicalFile();", "+          _parent = IOUtil.createAndMarkTempDirectory(\"proj\", \"\", _base);", "+          _srcDir = new File(_parent, \"src\");", "+          _srcDir.mkdir(); // create the src directory", "+          ", "+          // create project in a directory with an auxiliary file outside of it", "+          _auxFile = File.createTempFile(\"aux\", \".java\").getCanonicalFile();", "+          File auxFileParent = _auxFile.getParentFile();", "+          _projFile = new File(_parent, \"test.pjt\");", "+          ", "+          _file1 = new File(_srcDir, \"test1.java\");", "+          IOUtil.writeStringToFile(_file1, \"\");  // create dummy file", "+          _file2 = new File(_srcDir, \"test2.java\");", "+          IOUtil.writeStringToFile(_file2, \"\");// create dummy file", "+          ", "-    ", "-//    // generate the relative path names for the files in the project file", "-//    String temp = _file1.getParentFile().getCanonicalPath();", "-//    _file1RelName = _file1.getCanonicalPath().substring(temp.length() + 1);", "-//    temp = _file2.getParentFile().getCanonicalPath();", "-//    _file2RelName = _file2.getCanonicalPath().substring(temp.length() + 1);", "-", "-    _projFileText =", "-      \";; DrJava project file.  Written with build: 20040623-1933\\n\" +", "-      \"(source ;; comment\\n\" +", "-      \"   (file (name \\\"src/test1.java\\\")(select 32 32))\" +", "-      \"   (file (name \\\"src/test2.java\\\")(select 32 32)))\";", "-    ", "-    IOUtil.writeStringToFile(_projFile, _projFileText);", "-    ", "-    _frame = new MainFrame();", "-", "-    Utilities.invokeAndWait(new Runnable() { public void run() { _frame.pack(); } });", "-    _model = _frame.getModel();", "+          ", "+          _projFileText =", "+            \";; DrJava project file.  Written with build: 20040623-1933\\n\" +", "+            \"(source ;; comment\\n\" +", "+            \"   (file (name \\\"src/test1.java\\\")(select 32 32))\" +", "+            \"   (file (name \\\"src/test2.java\\\")(select 32 32)))\";", "+          ", "+          IOUtil.writeStringToFile(_projFile, _projFileText);", "+          ", "+          _frame = new MainFrame();", "+          _frame.pack();", "+          _model = _frame.getModel();", "+        }", "+        catch(IOException e) { throw new UnexpectedException(e); }", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84006fdcf9393f730da94038f81cdd89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FileSelectorComponent.java", "commitBeforeChange": "b16026d5fe4acb095ed4ec1ea1fedc39476af093", "commitAfterChange": "09e3a1c7c173cb9a37ed9ad28a39b257011828e6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void setFileField(File file)", "signatureAfterChange": "   public void setFileField(File file)", "diff": ["-    _fileField.setText(file.getAbsolutePath());", "+    try {", "+    _fileField.setText(file.getCanonicalPath());", "+    }", "+    catch(IOException e) {", "+      //handle it gracefully", "+      _fileField.setText(file.getAbsolutePath());      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87570a1ad91e0a9dfb293c7d310a6b67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "5c952c5847e3008cec3ed5ff89d03d335c050f54", "commitAfterChange": "e3e56a8c058b51612dfa6f1f21259a37eadcdcbb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public T getErrorAtOffset(OpenDefinitionsDocument odd, int offset)", "signatureAfterChange": "   public T getErrorAtOffset(OpenDefinitionsDocument odd, int offset)", "diff": ["-    } catch (IllegalStateException e) {", "+    }", "+    catch (IllegalStateException e) {", "-    } catch (FileMovedException e) {", "+    }", "+    catch (FileMovedException e) {", "+    }", "+    ", "+    // Use the canonical file if possible", "+    try {", "+      file = file.getCanonicalFile();", "+    }", "+    catch (IOException ioe) {", "+      // Oh well, we'll look for it as is."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fde8115154e61d65ef601868564d587", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "4009de7b28d2df87c05fce5746e7b354468d763f", "commitAfterChange": "ef6fbf4282520a8a1b7a89050b6be023e72a81a6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testDocLocationAfterSwitch() throws BadLocationException", "signatureAfterChange": "   public void testDocLocationAfterSwitch() throws BadLocationException", "diff": ["+    ", "+    /**", "+     * NOTE: This has been added because MainFrameTest hangs randomly (about every other time) without this line.", "+     * It is still unknown why this occurs - being that the above method calls are all accessors, this shouldn't be a situation", "+     * where the document is being accessed by insertString before it is ready to be accessed.", "+     * Added 5/19/2004 by pakruse ", "+     */ /**/", "+    try {", "+      Thread.sleep(1000); ", "+    }", "+    catch(java.lang.InterruptedException e) {", "+    ", "+    }", "+        ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d4c8e5a66c7b599d95c82f278dca479", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 381, "signatureBeforeChange": "   private OpenDefinitionsDocument _rawOpenFile(File file) throws IOException, AlreadyOpenException", "signatureAfterChange": "   private OpenDefinitionsDocument _rawOpenFile(File file) throws IOException, AlreadyOpenException", "diff": ["-    if (openDoc != null) throw new AlreadyOpenException(openDoc);", "+    if (openDoc != null) throw new AlreadyOpenException(openDoc); // handled in MainFrame.openFile(...)", "-      doc.setPackage(df.getPackage());", "+      String pkg = df.getPackage();", "+      doc.setPackage(pkg);  // Trust information in the project file; if it is wrong, _packageName invariant is broken", "+    else {", "+//      Utilities.show(\"Opened a file \" + file.getName() + \" that is not a DocFile\");", "+      doc.setPackage(doc.getPackageNameFromDocument()); // get the package name from the file; forces file to be read", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dbfd61c0db5f70dcd2309fea50819d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected void doCompile(OpenDefinitionsDocument doc, File file)     throws IOException, InterruptedException", "signatureAfterChange": "   protected void doCompile(OpenDefinitionsDocument doc, File file)     throws IOException, InterruptedException", "diff": ["+    // Perform a mindless interpretation to force interactions to reset.", "+    //  (only to simplify this method)", "+    try {", "+      interpret(\"2+2\");", "+    }", "+    catch (DocumentAdapterException e) {", "+      throw new UnexpectedException(e);", "+    }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2a5e273433f1637ea5817194aa3dd1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "310f2e2e5bd03b1be3d582b8bb080b976b35e862", "commitAfterChange": "5ac038fd2393232341f24ed3abaede1deb4e977a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void junitAll(List<String> qualifiedClassnames, List<File> files)", "signatureAfterChange": "   public void junitAll(List<String> qualifiedClassnames, List<File> files)", "diff": ["-      try {", "-        List<String> testClasses = _jvm.findTestClasses(qualifiedClassnames, files);", "-        if (testClasses.isEmpty()) {", "-          nonTestCase(true);", "-          return;", "-        } ", "-        _notifier.junitAllStarted(); ", "-        _jvm.runTestSuite();", "+      List<String> testClasses;", "+      try { testClasses = _jvm.findTestClasses(qualifiedClassnames, files); }", "+      catch(IOException e) { throw new UnexpectedException(e); }", "+      ", "+      if (testClasses.isEmpty()) {", "+        nonTestCase(true);", "+        return;", "+      _notifier.junitAllStarted(); ", "+      try { _jvm.runTestSuite(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac4a42d004ff1c92aafe4f033fa135b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public void dispose()", "signatureAfterChange": "   public void dispose()", "diff": ["-    _jvm.killInterpreter(null);", "+    _jvm.killInterpreter(null); ", "+    try { _jvm.dispose(); }", "+    catch(RemoteException e) { /* ignore */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae886be2dbdafc62383e0c22bd3a697d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "d012414100e088dfd0a2ea6e642cc05f11fbf32b", "commitAfterChange": "762f9487498790edfa8d7b58c3d83cb6592af447", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public InterpreterJVM(String url) throws RemoteException,                                            NotBoundException,                                            MalformedURLException", "signatureAfterChange": "    public InterpreterJVM(String url) throws RemoteException,                                            NotBoundException,                                            MalformedURLException", "diff": ["+      private boolean _masterPossiblyDead = false;", "+      ", "+            _masterPossiblyDead = false;", "-            // not there anymore. quit!", "-            System.exit(0);", "+            if (_masterPossiblyDead) {", "+              // not there anymore, and we've given it a chance. quit!", "+              System.exit(0);", "+            }", "+            else {", "+              // Set a flag and give it another chance", "+              //  (in case machine was merely asleep)", "+              _masterPossiblyDead = true;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b24b8127d9873aaab56497cb16b0eaa9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/EagerFileListProperty.java", "commitBeforeChange": "f9b0aacda7d0b19ff2541b10e4df48c67eef3bf5", "commitAfterChange": "51d1f2e57f80c21afa7918fd2fa925d58d67589d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void update()", "signatureAfterChange": "   public void update()", "diff": ["+        try {", "+          f = f.getCanonicalFile();", "+        }", "+        catch(IOException ioe) { }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2ce6cdf78824eebcf2ce57e1eda9dff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "aa7731dd2e1401d2d7a2138058a2aae91b7b3cb6", "commitAfterChange": "442c59b932709a9e16b8bf4afb9e7306f5a80d8b", "methodNumberBeforeChange": 513, "methodNumberAfterChange": 513, "signatureBeforeChange": "   private void _showConfigException()", "signatureAfterChange": "   private void _showConfigException()", "diff": ["+      try {", "+        DrJava.getConfig().saveConfiguration();", "+      }", "+      catch(IOException ioe) { /* ignore */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb42197005988ac3ab69032783abf3e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDABreakpoint.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean isEnabled, JPDADebugger manager)     throws DebugException", "signatureAfterChange": "   public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean isEnabled, JPDADebugger manager)     throws DebugException", "diff": ["+    ", "+    try { _position = doc.createPosition(offset); }", "+    catch(BadLocationException e) { throw new UnexpectedException(e); }", "+    ", "-    catch (BadLocationException ble) { throw new UnexpectedException(ble); }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "-    if ((_manager != null) && (_manager.isReady())) {", "+    if (_manager != null && _manager.isReady()) {", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1f8259d06747241163a8b818f671fd0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "commitAfterChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void dispose()", "signatureAfterChange": "   public void dispose()", "diff": ["-    // dispose() was previously commented out, with a note simply saying it called UnicastRemoteObject.unexport().", "-    // If there's some problem with unexport(), this call can be replaced with killInterpreterJVM(null).", "+    try { _jvmStarter.join(); } // some tests were reach this point before _jvmStarter has completed", "+    catch (InterruptedException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d490fb2254073b9bf27f76ad955badea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "commitAfterChange": "46e11d94aab488b0f851c712b65caea9a087e829", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void setStart(int pos)", "signatureAfterChange": "    public void setStart(int pos)", "diff": ["+  public void setStart(int pos) {", "+    try {", "+      _start = _doc.createPosition(pos);", "+      _found = false;", "+      _wrapped = false;", "+    catch (BadLocationException ble) {", "+      throw new UnexpectedException(ble);", "+    }", "+  }", "-    public void setStart(int pos)  { _state.setStart(pos); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6b1315fd5ad05b48008222b34141329", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "commitAfterChange": "f938008597ce54d16e4a865d30f8ef062ea55d2f", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 65, "signatureBeforeChange": "   public void setVisible(boolean vis)", "signatureAfterChange": "   public void setVisible(boolean vis)", "diff": ["+      try { _props = PropertyMaps.TEMPLATE.clone(); } catch(CloneNotSupportedException e) {", "+        throw new edu.rice.cs.util.UnexpectedException(e);", "+      }", "-      _javaDocumentListener.changedUpdate(null);", "-      _javaWorkDirDocumentListener.changedUpdate(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e38d7f85a9198be04979fc9573468ecb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void testOutOfSyncAfterModification()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testOutOfSyncAfterModification()     throws BadLocationException, IOException", "diff": ["-    assertTrue(!doc.checkIfClassFileInSync());", "+    assertTrue(\"should not be in sync before compile\", ", "+               !doc.checkIfClassFileInSync());", "-    assertTrue(doc.checkIfClassFileInSync());", "+    assertTrue(\"should be in sync after compile\", ", "+               doc.checkIfClassFileInSync());", "-    assertTrue(!doc.checkIfClassFileInSync());", "+    assertTrue(\"should not be in sync after modification\",", "+               !doc.checkIfClassFileInSync());", "+", "+    // Have to wait 1 second so file will have a different timestamp", "+    try {", "+      Thread.sleep(1000);", "+    }", "+    catch (InterruptedException ie) {}", "+", "-    assertTrue(!doc.checkIfClassFileInSync());", "+    assertTrue(\"should not be in sync after save\", ", "+               !doc.checkIfClassFileInSync());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb66b82b9ee668a8574d481ad770c59b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "e40cad149a4b39a1583fd59c835dddf03689cb71", "commitAfterChange": "93940c21f6995f648e815e21c209f78be7209afc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public static boolean classLoadersCanFindDebugger()", "signatureAfterChange": "   public static boolean classLoadersCanFindDebugger()", "diff": ["+      catch (UnsupportedClassVersionError ucve) {", "+        return false;", "+      }", "+      return false;", "+    }", "+    catch (UnsupportedClassVersionError ucve) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1747a665a374c7511d096dc8c6ed1d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public synchronized void startup() throws DebugException", "signatureAfterChange": "   public synchronized void startUp() throws DebugException", "diff": ["-  public synchronized void startup() throws DebugException {", "+  public synchronized void startUp() throws DebugException {", "-      _attachToVM();", "+      try { _attachToVM(); }", "+      catch(DebugException e1) {  // We sometimes see ConnectExceptions stating that the connection was refused", "+        try { _attachToVM(); }", "+        catch(DebugException e2) { _attachToVM(); }  // if we throw another exception, three strikes and we're out", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe6f69a50c4eb7e116e6bf49145ab4cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "5c952c5847e3008cec3ed5ff89d03d335c050f54", "commitAfterChange": "e3e56a8c058b51612dfa6f1f21259a37eadcdcbb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private void _calculatePositions()", "signatureAfterChange": "   private void _calculatePositions()", "diff": ["-        //Remember the indexes in the _errors and _positions arrays that are for errors in this file", "+        //Remember the indexes in the _errors and _positions arrays that ", "+        // are for the errors in this file", "-        if (fileEndIndex != fileStartIndex){", "+        if (fileEndIndex != fileStartIndex) {", "+          // Try to use the canonical file if possible", "+          try {", "+            file = file.getCanonicalFile();", "+          }", "+          catch (IOException ioe) {", "+            // Oh well, store it as is", "+          }", "-    } catch (BadLocationException ble) {", "+    }", "+    catch (BadLocationException ble) {"]}], "num": 25737}