{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "962c62fd95bc9b30e1de81f8f2035cdd", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a6c7e5591ef5bbe2eaa726793a31878", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "commitAfterChange": "ead43466202abb204c90f7ee2c316fec230d4415", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 34, "signatureBeforeChange": "       @Override protected Thunk<? extends TypeSystem> typeSystemFactory()", "signatureAfterChange": "       @Override protected Thunk<? extends TypeSystem> typeSystemFactory()", "diff": ["+      protected abstract TypeSystem makeTypeSystem();", "+      @Override protected Thunk<? extends TypeSystem> typeSystemFactory() {", "+        return LambdaUtil.valueLambda(makeTypeSystem());", "+      }", "-    _options.put(\"ext\", new Options() {", "-      @Override protected Thunk<? extends TypeSystem> typeSystemFactory() {", "-        TypeSystem result = new ExtendedTypeSystem(this);", "-        return LambdaUtil.valueLambda(result);", "-      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8567f8e867c4c77215b76ab7863a6b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "69a380647f3d586f130ea02ad1e8381a390045e3", "commitAfterChange": "739371db1261b11c3be5fd70233012a49b45b7ca", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "     @Override public Type visit(AddExpression node)", "signatureAfterChange": "     @Override public Type visit(AddExpression node)", "diff": ["-          return setType(node, TypeSystem.STRING);", "+          setType(node, TypeSystem.STRING);", "+          evaluateConstantExpression(node);", "+          return TypeSystem.STRING;", "-          return setType(node, getType(promoted.first()));", "+          Type result = setType(node, getType(promoted.first()));", "+          evaluateConstantExpression(node);", "+          return result;"]}], "num": 9646}