{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "628777b3799d11eadcc1a6ec1e96dc01", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bcde64c3c94b570e2fba499eb32a5eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeClass.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void tagSignature()", "signatureAfterChange": "   private void tagSignature()", "diff": ["-      TypeParameter[] tparams;", "-      if (td instanceof GenericClassDeclaration) {", "-        tparams = ((GenericClassDeclaration) td).getTypeParameters();", "-      }", "-      else if (td instanceof GenericInterfaceDeclaration) {", "-        tparams = ((GenericInterfaceDeclaration) td).getTypeParameters();", "-      }", "-      else { tparams = new TypeParameter[0]; }", "+      List<TypeParameter> tparams = td.getTypeParams().unwrap(Collections.<TypeParameter>emptyList());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a668f51296b341a7975f18623b8d44f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeClass.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public Iterable<VariableType> declaredTypeParameters()", "signatureAfterChange": "   public Iterable<VariableType> declaredTypeParameters()", "diff": ["-    Iterable<TypeParameter> paramAsts = IterUtil.empty();", "-    if (_ast instanceof GenericClassDeclaration) {", "-      paramAsts = IterUtil.asIterable(((GenericClassDeclaration)_ast).getTypeParameters());", "-    }", "-    else if (_ast instanceof GenericInterfaceDeclaration) {", "-      paramAsts = IterUtil.asIterable(((GenericInterfaceDeclaration)_ast).getTypeParameters());", "+    List<TypeParameter> paramAsts = Collections.emptyList();", "+    if (_ast instanceof TypeDeclaration) {", "+      paramAsts = ((TypeDeclaration) _ast).getTypeParams().unwrap(paramAsts);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8a211c71b2c370220edefaacd9c47b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeClass.java", "commitBeforeChange": "fa20bbad84f51c844e01bca2b3fd5eacb2aa37bd", "commitAfterChange": "90ca22f045f683896f275759514c21a8010630fa", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public Iterable<VariableType> declaredTypeParameters()", "signatureAfterChange": "   public Iterable<VariableType> declaredTypeParameters()", "diff": ["-      paramAsts = IterUtil.make(((GenericClassDeclaration)_ast).getTypeParameters());", "+      paramAsts = IterUtil.asIterable(((GenericClassDeclaration)_ast).getTypeParameters());", "-      paramAsts = IterUtil.make(((GenericClassDeclaration)_ast).getTypeParameters());", "+      paramAsts = IterUtil.asIterable(((GenericClassDeclaration)_ast).getTypeParameters());"]}], "num": 21586}