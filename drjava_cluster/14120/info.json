{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "802ac351a3b972c6d153cd5d7dc469ac", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1de4b80ac864119d9a3d738bd6511b3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DrJavaPropertySetup.java", "commitBeforeChange": "1e77c64ba83c36855cc971f17dd702002ed1f841", "commitAfterChange": "7f1dfe0049dc6481ecb6545fa089b139bb9c72af", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static void setup()", "signatureAfterChange": "   public static void setup()", "diff": ["-      \"Remove the specified file or directory, recursively if desired. Evaluates to the empty string \\\"\\\" if successful.\\n\" +", "-      \"Required attributes:\\n\" +", "+      \"Remove the specified file or directory, recursively if desired. Evaluates to the empty string \\\"\\\" \" + ", "+      \"if successful.\\n\" + \"Required attributes:\\n\" +", "-      \"Returns the current time in milliseconds since 01/01/1970, unless other format is specified by the fmt attribute.\\n\" +", "-      \"Optional attributes:\\n\" +", "+      \"Returns the current time in milliseconds since 01/01/1970, \" + ", "+      \"unless other format is specified by the fmt attribute.\\n\" + \"Optional attributes:\\n\" + ", "-    PropertyMaps.TEMPLATE.setProperty(\"Misc\", new BinaryOpProperty", "-                                        <Double,Double,Double>(\"sub\",", "-                                                               \"Returns the difference between the two operands (op1-op2).\\n\" +", "-                                                               \"Required attributes:\\n\" +", "-                                                               \"\\top1=\\\"<string evaluating to a number>\\\"\\n\" +", "-                                                               \"\\top2=\\\"<string evaluating to a number>\\\"\",", "-                                                               lam27,", "-                                                               UnaryOpProperty.PARSE_DOUBLE,", "-                                                               UnaryOpProperty.PARSE_DOUBLE,", "-                                                               UnaryOpProperty.FORMAT_DOUBLE));", "+    PropertyMaps.TEMPLATE.", "+      setProperty(\"Misc\", new BinaryOpProperty", "+                    <Double,Double,Double>(\"sub\",", "+                                           \"Returns the difference between the two operands (op1-op2).\\n\" +", "+                                           \"Required attributes:\\n\" +", "+                                           \"\\top1=\\\"<string evaluating to a number>\\\"\\n\" +", "+                                           \"\\top2=\\\"<string evaluating to a number>\\\"\",", "+                                           lam27,", "+                                           UnaryOpProperty.PARSE_DOUBLE,", "+                                           UnaryOpProperty.PARSE_DOUBLE,", "+                                           UnaryOpProperty.FORMAT_DOUBLE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e925119b5ed5da249eab92b95846fdf0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/JavacCompiler.java", "commitBeforeChange": "f3a8fa36f90d84b678d1e7797a339a1e459f6100", "commitAfterChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public static String transformRunCommand(String s)", "signatureAfterChange": "   public static String transformRunCommand(String s)", "diff": ["-      \"  edu.rice.cs.plt.swing.SwingUtil.showApplet(new {0}({1}), 400, 300);\\n\" +", "+      \"  edu.rice.cs.plt.swing.SwingUtil.showApplet(java.applet.Applet.class.cast(new {0}({1})), 400, 300);\\n\" +", "+      \"  java.lang.reflect.Method m = null;\\n\" +", "-      \"    java.lang.reflect.Method m = {0}.class.getMethod(\\\"main\\\", java.lang.String[].class);\\n\" +", "+      \"    m = {0}.class.getMethod(\\\"main\\\", java.lang.String[].class);\\n\" +", "-      \"  {0}.main(args);\\n\"+", "+      \"  m.invoke(null, new Object[] '{' args '}');\\n\"+"]}], "num": 14120}