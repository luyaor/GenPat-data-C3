{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1fc0165afc8917815c7b7bb07395d1e3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "966f72b80ddce66c1657aa96597cd560", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "6c31f49b491d4a01bd2ddbae62b5ee4f76d52129", "commitAfterChange": "b17c3d3d0edf27a5d35f38839287840198b5808d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private int _moveRight(int count, int currentOffset)", "signatureAfterChange": "     private int _moveRight(int count, int currentOffset)", "diff": ["-      if (this.atStart()) {", "+      // Standardize initial position", "+      if (atStart()) {", "-        this.next();", "+        next();", "-      if (this.atEnd()) {", "-        throw new IllegalArgumentException(\"At end\");", "-      }", "-      while (count >= this.current().getSize() - currentOffset) {", "-        count = count - this.current().getSize() + currentOffset;", "-        this.next();", "+      if (atEnd()) throw new IllegalArgumentException(\"At end\");", "+      while (count >= current().getSize() - currentOffset) {", "+        count = count - current().getSize() + currentOffset;", "+        next();", "-        if (this.atEnd()) {", "+        if (atEnd()) {", "-          else {", "-            throw new IllegalArgumentException(\"At end\");", "-          }", "+          else throw new IllegalArgumentException(\"At end\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc1b8e558917c02c93050dae26ed9fd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "6c31f49b491d4a01bd2ddbae62b5ee4f76d52129", "commitAfterChange": "b17c3d3d0edf27a5d35f38839287840198b5808d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     void insertBraceToGap(String text)", "signatureAfterChange": "     void insertBraceToGap(String text)", "diff": ["-     */", "+      */", "-      this.current().shrink(this.getBlockOffset());", "-      this.insert(Brace.MakeBrace(text, getStateAtCurrent()));", "+      current().shrink(getBlockOffset());", "+      insert(Brace.MakeBrace(text, getStateAtCurrent()));", "-      if (this.getBlockOffset() > 0) {", "-        this.insert(new Gap(this.getBlockOffset(), getStateAtCurrent()));", "-        this.next(); //now point at new brace", "+      if (getBlockOffset() > 0) {", "+        insert(new Gap(getBlockOffset(), getStateAtCurrent()));", "+        next(); //now point at new brace", "-      this.next(); // now pointing at second half of gap", "-      this.setBlockOffset(0);", "+      next(); // now pointing at second half of gap", "+      setBlockOffset(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec9a3bd449c97485ecedfb6129665bdd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "155978805098b6e2a3078df6585b1402e5c7705e", "commitAfterChange": "25a10abeda1945066d6766970fef196b893518a9", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public static String replaceVariables(String str, PropertyMaps props, Lambda<String,DrJavaProperty> getter)", "signatureAfterChange": "   public static String replaceVariables(String str, PropertyMaps props, Lambda<String,DrJavaProperty> getter)", "diff": ["+                  atok.addQuotes(\"${\", \"}\");", "-                      throw new IllegalArgumentException(\"Unknown attribute list format for property \"+key);", "+                      throw new IllegalArgumentException(\"Unknown attribute list format for property \"+key+\"; expected name, but was \"+n);", "-                      throw new IllegalArgumentException(\"Unknown attribute list format for property \"+key);", "+                      throw new IllegalArgumentException(\"Unknown attribute list format for property \"+key+\"; expected =, but was \"+n);", "-                      throw new IllegalArgumentException(\"Unknown attribute list format for property \"+key);", "+                      throw new IllegalArgumentException(\"Unknown attribute list format for property \"+key+\"; expected \\\", but was \"+n);"]}], "num": 7797}