{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2188cd483decd1aae8bd05f07652082", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "202803cd47cc9907a8d6ebacb9fba9d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 168, "signatureBeforeChange": "   public static <T1, T2, T3, T4, R> Lambda<T4, Lambda3<T1, T2, T3, R>>      curryFourth(final Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda)", "signatureAfterChange": "   public static <T1, T2, T3, T4, R> Lambda3<T1, T3, T4, R>      bindSecond(Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda, T2 arg2)", "diff": ["+  /** Bind a fixed argument to the given quaternary lambda, producing a ternary lambda. */", "+  public static <T1, T2, T3, T4, R> Lambda3<T1, T3, T4, R> ", "+    bindSecond(Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda, T2 arg2) {", "+    return new BindSecondLambda3<T1, T2, T3, T4, R>(lambda, arg2);", "+  }", "-   */", "-  public static <T1, T2, T3, T4, R> Lambda<T4, Lambda3<T1, T2, T3, R>> ", "-    curryFourth(final Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda) {", "-    return new Lambda<T4, Lambda3<T1, T2, T3, R>>() {", "-      public Lambda3<T1, T2, T3, R> value(final T4 a4) {", "-        return new Lambda3<T1, T2, T3, R>() {", "-          public R value(T1 a1, T2 a2, T3 a3) { return lambda.value(a1, a2, a3, a4); }", "-        };", "-      }", "-    };", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f94ebdac57b673e0998b61c2aed01619", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 174, "signatureBeforeChange": "   public static <T1, T2, T3, T4, R> Lambda<T3, Lambda3<T1, T2, T4, R>>      curryThird(final Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda)", "signatureAfterChange": "   public static <T1, T2, T3, T4, R> Lambda3<T1, T2, T3, R>      bindFourth(Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda, T4 arg4)", "diff": ["+  /** Bind a fixed argument to the given quaternary lambda, producing a ternary lambda. */", "+  public static <T1, T2, T3, T4, R> Lambda3<T1, T2, T3, R> ", "+    bindFourth(Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda, T4 arg4) {", "+    return new BindFourthLambda3<T1, T2, T3, T4, R>(lambda, arg4);", "+  }", "-   */", "-  public static <T1, T2, T3, T4, R> Lambda<T3, Lambda3<T1, T2, T4, R>> ", "-    curryThird(final Lambda4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> lambda) {", "-    return new Lambda<T3, Lambda3<T1, T2, T4, R>>() {", "-      public Lambda3<T1, T2, T4, R> value(final T3 a3) {", "-        return new Lambda3<T1, T2, T4, R>() {", "-          public R value(T1 a1, T2 a2, T4 a4) { return lambda.value(a1, a2, a3, a4); }", "-        };", "-      }", "-    };"]}], "num": 27671}