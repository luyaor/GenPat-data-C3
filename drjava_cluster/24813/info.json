{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32411c9808ff71b6cdf111d0df32b509", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "570490a280fc007d1067190395ae4f9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "      public void testForNormalTryCatchStatement()", "signatureAfterChange": "      public void testForNormalTryCatchStatement()", "diff": ["-      BracedBody emptyBody = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]);", "-      BracedBody bb = new BracedBody(SourceInfo.NO_INFO, ", "+      BracedBody emptyBody = new BracedBody(SourceInfo.NONE, new BodyItemI[0]);", "+      BracedBody bb = new BracedBody(SourceInfo.NONE, ", "-        new ThrowStatement(SourceInfo.NO_INFO, ", "-        new SimpleNamedClassInstantiation(SourceInfo.NO_INFO, ", "-                                         new ClassOrInterfaceType(SourceInfo.NO_INFO, ", "+        new ThrowStatement(SourceInfo.NONE, ", "+        new SimpleNamedClassInstantiation(SourceInfo.NONE, ", "+                                         new ClassOrInterfaceType(SourceInfo.NONE, ", "-                                          new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[]{new StringLiteral(SourceInfo.NO_INFO, \"boo\")})))});", "+                                          new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[]{new StringLiteral(SourceInfo.NONE, \"boo\")})))});", "-      Block b = new Block(SourceInfo.NO_INFO, bb);", "-      Block b2 = new Block(SourceInfo.NO_INFO, emptyBody);", "+      Block b = new Block(SourceInfo.NONE, bb);", "+      Block b2 = new Block(SourceInfo.NONE, emptyBody);", "-      NormalTryCatchStatement tcfs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[0]);", "+      NormalTryCatchStatement tcfs = new NormalTryCatchStatement(SourceInfo.NONE, b, new CatchBlock[0]);", "-      NormalTryCatchStatement inner = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[0]);", "-      NormalTryCatchStatement nested = new NormalTryCatchStatement(SourceInfo.NO_INFO, new Block(SourceInfo.NO_INFO, new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {inner})), new CatchBlock[0]);", "+      NormalTryCatchStatement inner = new NormalTryCatchStatement(SourceInfo.NONE, b, new CatchBlock[0]);", "+      NormalTryCatchStatement nested = new NormalTryCatchStatement(SourceInfo.NONE, new Block(SourceInfo.NONE, new BracedBody(SourceInfo.NONE, new BodyItemI[] {inner})), new CatchBlock[0]);", "-      UninitializedVariableDeclarator uvd1 = new UninitializedVariableDeclarator(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.util.prefs.BackingStoreException\", new Type[0]), new Word(SourceInfo.NO_INFO, \"e\"));", "-      FormalParameter fp1 = new FormalParameter(SourceInfo.NO_INFO, uvd1, false);", "+      UninitializedVariableDeclarator uvd1 = new UninitializedVariableDeclarator(SourceInfo.NONE, new ClassOrInterfaceType(SourceInfo.NONE, \"java.util.prefs.BackingStoreException\", new Type[0]), new Word(SourceInfo.NONE, \"e\"));", "+      FormalParameter fp1 = new FormalParameter(SourceInfo.NONE, uvd1, false);", "-      CatchBlock cb = new CatchBlock(SourceInfo.NO_INFO, fp1, b2);", "-      NormalTryCatchStatement nested2 = new NormalTryCatchStatement(SourceInfo.NO_INFO, new Block(SourceInfo.NO_INFO, new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {inner})), new CatchBlock[] {cb});", "+      CatchBlock cb = new CatchBlock(SourceInfo.NONE, fp1, b2);", "+      NormalTryCatchStatement nested2 = new NormalTryCatchStatement(SourceInfo.NONE, new Block(SourceInfo.NONE, new BracedBody(SourceInfo.NONE, new BodyItemI[] {inner})), new CatchBlock[] {cb});", "-      BracedBody reb = new BracedBody(SourceInfo.NO_INFO, ", "+      BracedBody reb = new BracedBody(SourceInfo.NONE, ", "-        new ThrowStatement(SourceInfo.NO_INFO, ", "-        new SimpleNamedClassInstantiation(SourceInfo.NO_INFO, ", "-                                         new ClassOrInterfaceType(SourceInfo.NO_INFO, ", "+        new ThrowStatement(SourceInfo.NONE, ", "+        new SimpleNamedClassInstantiation(SourceInfo.NONE, ", "+                                         new ClassOrInterfaceType(SourceInfo.NONE, ", "-                                         new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0])))});", "+                                         new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0])))});", "-      NormalTryCatchStatement inner3 = new NormalTryCatchStatement(SourceInfo.NO_INFO, new Block(SourceInfo.NO_INFO, reb), new CatchBlock[0]);", "-      NormalTryCatchStatement nested3 = new NormalTryCatchStatement(SourceInfo.NO_INFO, new Block(SourceInfo.NO_INFO, new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {inner3})), new CatchBlock[0]);", "+      NormalTryCatchStatement inner3 = new NormalTryCatchStatement(SourceInfo.NONE, new Block(SourceInfo.NONE, reb), new CatchBlock[0]);", "+      NormalTryCatchStatement nested3 = new NormalTryCatchStatement(SourceInfo.NONE, new Block(SourceInfo.NONE, new BracedBody(SourceInfo.NONE, new BodyItemI[] {inner3})), new CatchBlock[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c74d23680522cf2cbedd545eb975bd69", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "          public void testGetQualifiedSymbolData()", "signatureAfterChange": "          public void testGetQualifiedSymbolData()", "diff": ["-                   testLLVisitor.getQualifiedSymbolData(\"int\", SourceInfo.NO_INFO, true, true, true));", "+                   testLLVisitor.getQualifiedSymbolData(\"int\", SourceInfo.NONE, true, true, true));", "-                   testLLVisitor.getQualifiedSymbolData(\"byte\", SourceInfo.NO_INFO, false, false, false));", "+                   testLLVisitor.getQualifiedSymbolData(\"byte\", SourceInfo.NONE, false, false, false));", "-      ArrayData ad = new ArrayData(SymbolData.INT_TYPE, testLLVisitor, SourceInfo.NO_INFO);", "-      SymbolData result = testLLVisitor.getQualifiedSymbolData(\"int[]\", SourceInfo.NO_INFO, true, true, true);", "+      ArrayData ad = new ArrayData(SymbolData.INT_TYPE, testLLVisitor, SourceInfo.NONE);", "+      SymbolData result = testLLVisitor.getQualifiedSymbolData(\"int[]\", SourceInfo.NONE, true, true, true);", "-                   testLLVisitor.getQualifiedSymbolData(\"java.lang.System\", SourceInfo.NO_INFO, false, true, true));", "+                   testLLVisitor.getQualifiedSymbolData(\"java.lang.System\", SourceInfo.NONE, false, true, true));", "-                   testLLVisitor.getQualifiedSymbolData(\"java.lang.System\", SourceInfo.NO_INFO, true, false, true));", "+                   testLLVisitor.getQualifiedSymbolData(\"java.lang.System\", SourceInfo.NONE, true, false, true));", "-      ClassDef cd = new ClassDef(SourceInfo.NO_INFO, ", "+      ClassDef cd = new ClassDef(SourceInfo.NONE, ", "-                                 new Word(SourceInfo.NO_INFO, \"Qwerty\"),", "+                                 new Word(SourceInfo.NONE, \"Qwerty\"),", "-                                 new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]),", "+                                 new ClassOrInterfaceType(SourceInfo.NONE, \"java.lang.Object\", new Type[0]),", "-                                 new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                 new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-                   bv.getSymbolData(\"Qwerty\", SourceInfo.NO_INFO, true, true));", "+                   bv.getSymbolData(\"Qwerty\", SourceInfo.NONE, true, true));", "-                   bv.getQualifiedSymbolData(\"fully.qualified.Qwerty\", SourceInfo.NO_INFO, false, false, true));", "+                   bv.getQualifiedSymbolData(\"fully.qualified.Qwerty\", SourceInfo.NONE, false, false, true));", "-                   testLLVisitor.getQualifiedSymbolData(\"a.b.c\", SourceInfo.NO_INFO, false, true, true));", "+                   testLLVisitor.getQualifiedSymbolData(\"a.b.c\", SourceInfo.NONE, false, true, true));", "-      result = testLLVisitor.getQualifiedSymbolData(\"fully.qualified.Woah\", SourceInfo.NO_INFO, true, false, true);", "+      result = testLLVisitor.getQualifiedSymbolData(\"fully.qualified.Woah\", SourceInfo.NONE, true, false, true);", "-//      SourceInfo.NO_INFO, true, true, true));", "+//      SourceInfo.NONE, true, true, true));", "-      result = testLLVisitor.getQualifiedSymbolData(\"fully.qualified.Woah\", SourceInfo.NO_INFO, false, false, true);", "+      result = testLLVisitor.getQualifiedSymbolData(\"fully.qualified.Woah\", SourceInfo.NONE, false, false, true);", "-      result = testLLVisitor.getQualifiedSymbolData(\"fully.qualified.Woah\", SourceInfo.NO_INFO, false, false, true);", "+      result = testLLVisitor.getQualifiedSymbolData(\"fully.qualified.Woah\", SourceInfo.NONE, false, false, true);", "-      result = testLLVisitor.getQualifiedSymbolData(\"fully.qualified.Woah\", SourceInfo.NO_INFO, true, false, true);", "+      result = testLLVisitor.getQualifiedSymbolData(\"fully.qualified.Woah\", SourceInfo.NONE, true, false, true);", "-                   testLLVisitor.getQualifiedSymbolData(\"fully.qualified.Woah\", SourceInfo.NO_INFO, false, false, true));", "+                   testLLVisitor.getQualifiedSymbolData(\"fully.qualified.Woah\", SourceInfo.NONE, false, false, true));", "-      result = testLLVisitor.getQualifiedSymbolData(\"fully.qualified.Woah\", SourceInfo.NO_INFO, true, false, true);", "+      result = testLLVisitor.getQualifiedSymbolData(\"fully.qualified.Woah\", SourceInfo.NONE, true, false, true);", "-      SymbolData newsd1 = testLLVisitor.getQualifiedSymbolData(\"java.lang.String\", SourceInfo.NO_INFO, true, true, true);", "+      SymbolData newsd1 = testLLVisitor.getQualifiedSymbolData(\"java.lang.String\", SourceInfo.NONE, true, true, true);", "-      result = testLLVisitor.getSymbolData(\"String\", SourceInfo.NO_INFO);", "+      result = testLLVisitor.getSymbolData(\"String\", SourceInfo.NONE);"]}], "num": 24813}