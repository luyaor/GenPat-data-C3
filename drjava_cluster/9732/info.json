{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ec15d49d50d4f96a77edf1571ebc276", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "072dbc95c5e1b75916d9b9d73b24afb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-    //synchronized(listener) {", "-      doc.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener.wait();", "-    //}", "+    doc.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5497e7a25a657a26c595fe18c2c92f28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-    //synchronized(listener) {", "-      doc.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener.wait();", "-    //}", "+    doc.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad7507e71c73dbbf289b5c05917c3b3f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testCompileAllWithNoFiles()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllWithNoFiles()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-    //synchronized(listener) {", "+    _model.compileAll();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "+    assertCompileErrorsPresent(_name(), false);", "+    listener.checkCompileOccurred();", "+  }", "-      //listener.wait();", "-    //}", "-", "-    _model.setResetAfterCompile(true);"]}], "num": 9732}