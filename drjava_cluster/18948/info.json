{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e8a7fcc1f5a4afe8cd8373dc87d3a37", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73f3179594d39497220e06047c852b00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindAnyOccurrenceState.java", "commitBeforeChange": "f26f93ad5e4b158c960a6cefd64cf99f7137ecbc", "commitAfterChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private FindResult _findNextInAllDocs(Document docToSearch) throws BadLocationException", "signatureAfterChange": "   private FindResult _findNextInAllDocs(Document docToSearch) throws BadLocationException", "diff": ["-    if (docToSearch == _doc) {", "-      return new FindResult(_doc, -1, false);", "-    }", "+    if (docToSearch == _doc) return new FindResult(_doc, -1, false);", "-        if (!_searchBackwards) {", "-          index += findWord.length();", "-        }", "+        if (!_searchBackwards) index += findWord.length();", "-      else {", "+      else", "-                                  _docIterator.getPrevDocument(docToSearch));", "-      }", "+                                    _docIterator.getPrevDocument(docToSearch));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b9f6f7d3b96c0225e2b8be6489d66b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "80409edd2937e2ffd25d6f924b225a912cebbe30", "commitAfterChange": "24d7e06348270bf19caad633e3b0f236f8140fab", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public FindResult findNext()", "signatureAfterChange": "   public FindResult findNext()", "diff": ["+      if (_skipOneFind) {", "+        int wordLength = _lastFindWord.length();", "+        if (!_searchBackwards) {", "+          setPosition(getCurrentOffset() + wordLength);", "+        }", "+        else {", "+          setPosition(getCurrentOffset() - wordLength);", "+        }", "+        positionChanged();  ", "+      }", "-      } else {", "+      } ", "+      else {", "-", "+        ", "-", "+        ", "-                                        : findSpace.lastIndexOf(findWord);", "-", "+          : findSpace.lastIndexOf(findWord);", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4fe1477590afc022019e8731aebc870", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "1502cfa27280e1c7a53d8bd6dee788f17c33dc23", "commitAfterChange": "f3485582e7c13f9ae164de3e45280fa4f5c05b3e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   private FindResult _findNext(int start, int end)", "signatureAfterChange": "   private FindResult _findNext(int start, int end)", "diff": ["-          AbstractDocumentInterface nextDocToSearch = (!_searchBackwards ? _docIterator.getNextDocument(_doc) :", "-                                                         _docIterator.getPrevDocument(_doc));", "+          AbstractDocumentInterface nextDocToSearch;", "+          ", "+          nextDocToSearch = (!_searchBackwards ? _docIterator.getNextDocument(_doc) :", "+                                                 _docIterator.getPrevDocument(_doc));"]}], "num": 18948}