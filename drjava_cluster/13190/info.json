{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae75a0b77bf1709ae6817096972cb24b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f7add77f862e400cd4bc551bc4ba8ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "3138149e59af557581689e53b212f79d04dd8105", "commitAfterChange": "2fc1b48ae47904f12ff70a4157426a6f949b079b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testOldDocumentsInAndOutOfTheCache() throws BadLocationException, IOException", "signatureAfterChange": "      public void testOldDocumentsInAndOutOfTheCache() throws BadLocationException, IOException", "diff": ["-    doc1.getLength();  // forces document to be read into memory", "+    doc1.getCurrentLine();  // forces document to be read into memory", "-    doc2.getLength();  // forces document to be read into memory", "+    doc2.getCurrentLine();  // forces document to be read into memory", "-    doc3.getLength();  // forces document to be read into memory", "+    doc3.getCurrentLine();  // forces document to be read into memory", "-    doc4.getLength();  // forces document to be read into memory", "+    doc4.getCurrentLine();  // forces document to be read into memory", "-    doc5.getLength();  // forces document to be read into memory", "+    doc5.getCurrentLine();  // forces document to be read into memory", "-    doc6.getLength();  // forces document to be read into memory", "+    doc6.getCurrentLine();  // forces document to be read into memory", "-    doc1.getLength();", "-    doc2.getLength();", "-    doc3.getLength();", "-    doc4.getLength();", "+    doc1.getCurrentLine();", "+    doc2.getCurrentLine();", "+    doc3.getCurrentLine();", "+    doc4.getCurrentLine();", "-    doc5.getLength();", "+    doc5.getCurrentLine();", "-    doc6.getLength();", "+    doc6.getCurrentLine();", "-    doc1.getLength(); // 4 5 6 1", "+    doc1.getCurrentLine(); // 4 5 6 1", "-    doc2.getLength(); // 5 6 1 2", "+    doc2.getCurrentLine(); // 5 6 1 2", "-    doc3.getLength(); // 6 1 2 3", "+    doc3.getCurrentLine(); // 6 1 2 3", "-    doc4.getLength(); // 1 2 3 4", "+    doc4.getCurrentLine(); // 1 2 3 4", "-    doc5.getLength(); // 2 3 4 5", "+    doc5.getCurrentLine(); // 2 3 4 5", "-    doc6.getLength(); // 3 4 5 6", "+    doc6.getCurrentLine(); // 3 4 5 6", "-    doc4.getLength(); // 3 4 5 6", "+    doc4.getCurrentLine(); // 3 4 5 6", "-    doc5.getLength(); // 3 4 5 6", "+    doc5.getCurrentLine(); // 3 4 5 6", "-    doc3.getLength(); // 3 4 5 6", "+    doc3.getCurrentLine(); // 3 4 5 6", "-    doc4.getLength(); // 3 4 5 6", "+    doc4.getCurrentLine(); // 3 4 5 6", "-    doc2.getLength(); // 3 4 5 6 2", "+    doc2.getCurrentLine(); // 3 4 5 6 2"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a129c4d690ef09a6bf9ad1e4bdc15fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "b97db40bea671594a37f7cabd8d363cab45e0154", "commitAfterChange": "fab79f2f445044e7a60a89e228042164713428d9", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 21, "signatureBeforeChange": "   private int getRelativeLine( int currLoc )", "signatureAfterChange": "   private int _getRelativeLine()", "diff": ["-  private int getRelativeLine( int currLoc ){", "-    // we moved backwards", "+  private int _getRelativeLine(){", "+    int currLoc = getCurrentLocation();", "+    ", "+    ", "-      int distPrevNewLine = _reduced.getDistToPreviousNewline( 0 );", "-      while (distPrevNewLine != -1 && getCurrentLocation()>currLoc) {", "-        setCurrentLocation( getCurrentLocation()-distPrevNewLine-1 );", "+      // we moved backward", "+      int prevLineLoc = getLineStartPos( _cachedLocation );", "+      while( prevLineLoc > currLoc ){", "-        distPrevNewLine = _reduced.getDistToPreviousNewline( 0 );", "+        prevLineLoc = getLineStartPos( prevLineLoc - 1 );", "+        // temporary performance optimization", "+        setCurrentLocation(prevLineLoc);", "-      // this and the similar test in the other case", "-      // account for the fact that our loop condition guarantees", "-      // one extraneous loop through the document.", "-      if( getCurrentLocation() != currLoc ){ count++; }", "-   }", "-   // we moved forwards", "-   else{", "-     int distNextNewLine = _reduced.getDistToNextNewline();", "-     while (distNextNewLine != -1 && getCurrentLocation()<currLoc) {", "-       try{", "-         setCurrentLocation( getCurrentLocation()+distNextNewLine+1 );", "-         distNextNewLine = _reduced.getDistToNextNewline();", "-       }", "-       catch( IllegalArgumentException iae ){", "-         setCurrentLocation( currLoc );", "-         distNextNewLine = -1;", "-       }", "-       count++;", "-     }", "-     if( getCurrentLocation() != currLoc ){ count--; }", "-   }", "-     setCurrentLocation( currLoc );", "-     return count;", "-   }", "+    }", "+    ", "+    else{", "+      // we moved forward", "+      int nextLineLoc = getLineEndPos( _cachedLocation );", "+      while( nextLineLoc < currLoc ){", "+        count++;", "+        nextLineLoc = getLineEndPos( nextLineLoc + 1 );", "+        // temporary performance optimization", "+        setCurrentLocation(nextLineLoc);", "+      }", "+    }", "+    setCurrentLocation( currLoc );", "+    return count;"]}], "num": 13190}