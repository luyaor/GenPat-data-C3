{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7eeef8d59061c3c7d9ecb6de5749d192", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e0bb9e46a53be2d9b59f6cf93d61ee3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void gotoLine(int line)", "signatureAfterChange": "   public void gotoLine(int line)", "diff": ["-//    acquireReadLock();", "+    acquireReadLock();", "-//    try {", "-//    synchronized(_reduced) {", "-      _setCurrentLocation(0);", "-      for (int i = 1; (i < line) && (_currentLocation < len); i++) {", "-        dist = _reduced.getDistToNextNewline();", "-        if (_currentLocation + dist < len) dist++;", "-        actualLine++;", "-        _move(dist);  // updates _currentLocation", "+    try {", "+      synchronized(_reduced) {", "+        _setCurrentLocation(0);", "+        for (int i = 1; (i < line) && (_currentLocation < len); i++) {", "+          dist = _reduced.getDistToNextNewline();", "+          if (_currentLocation + dist < len) dist++;", "+          actualLine++;", "+          _move(dist);  // updates _currentLocation", "+        }", "+        _cachedLineNum = actualLine;", "+        _cachedLocation = _currentLocation;", "+        _cachedPrevLineLoc = _getLineStartPos(_currentLocation);", "+        _cachedNextLineLoc = _getLineEndPos(_currentLocation);", "-      _cachedLineNum = actualLine;", "-      _cachedLocation = _currentLocation;", "-      _cachedPrevLineLoc = _getLineStartPos(_currentLocation);", "-      _cachedNextLineLoc = _getLineEndPos(_currentLocation);", "-//    }", "-//    }", "-//    finally { releaseReadLock(); }", "+    }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19d54952ea9ca13b769e010deb58df10", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "5497ac60fa563e6e67c580081d99fbd842e52332", "commitAfterChange": "5fa866685226be5aebbebdfba9d7d34d29108e50", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "   public void remove(int offset, int len) throws BadLocationException", "signatureAfterChange": "   public void remove(int offset, int len) throws BadLocationException", "diff": ["-    // Clear the helper method cache", "-    clearCache();", "-    super.remove(offset, len);", "+    writeLock();", "+    try {", "+      synchronized(_reduced) {", "+        clearCache();     // Clear the helper method cache", "+        super.remove(offset, len);", "+      }", "+    }", "+    finally { writeUnlock(); }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f1558a022cba87204d57f212b0cf7d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public int commentLines(int selStart, int selEnd)", "signatureAfterChange": "   public int commentLines(int selStart, int selEnd)", "diff": ["-//      acquireWriteLock(); ", "-//      try {", "-//      synchronized(_reduced) {", "-        _setCurrentLocation(_getLineStartPos(selStart));", "+      acquireWriteLock(); ", "+      try {", "+        synchronized(_reduced) {", "+          _setCurrentLocation(_getLineStartPos(selStart));", "-        _commentLine();", "-        toReturn += WING_COMMENT_OFFSET;", "-//      }", "-//      }", "-//      finally { releaseWriteLock(); }", "+          _commentLine();", "+          toReturn += WING_COMMENT_OFFSET;", "+        }", "+      }", "+      finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40042233c70dcc50321cf52ce87e3dae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocument.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public boolean _inBlockComment()", "signatureAfterChange": "   public boolean _inBlockComment()", "diff": ["-//    acquireReadLock();", "-//    try {", "-//      synchronized(_reduced) {", "+    acquireReadLock();", "+    try {", "+      synchronized(_reduced) {", "-//      }", "-//    }", "-//    finally { releaseReadLock(); }", "+      }", "+    }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fe68ce26a7da950c1872b6ce47bcf42", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "7cfeeaf9345ca550653b259e08abe84024ba9934", "commitAfterChange": "193d12982052662ec0e78a136e3a67b8a2ade2e4", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public int getCurrentLine()", "signatureAfterChange": "   public int getCurrentLine()", "diff": ["-    // throwErrorHuh();", "-    int here = _currentLocation;", "-    if (_cachedLocation > getLength()) {", "-      // we can't know the last line number after a delete; starting over.", "-      _cachedLocation = 0;", "-      _cachedLineNum = 1;", "-    }", "-    if (_cachedNextLineLoc > getLength()) _cachedNextLineLoc = -1;", "-    // let's see if we get off easy", "-    if ( ! (_cachedPrevLineLoc < here && here < _cachedNextLineLoc )) {", "-", "-      // this if improves performance when moving from the end of the document to the beginnning.", "-      // in essence, it calculates the line number from scratch", "-      if (_cachedLocation - here > here) {", "-        _cachedLocation = 0;", "-        _cachedLineNum = 1;", "+    acquireReadLock();", "+    try {", "+      synchronized(_reduced) {", "+        int here = _currentLocation;", "+        if (_cachedLocation > getLength()) {", "+          // we can't know the last line number after a delete; starting over.", "+          _cachedLocation = 0;", "+          _cachedLineNum = 1;", "+        }", "+        if (_cachedNextLineLoc > getLength()) _cachedNextLineLoc = -1;", "+        // let's see if we get off easy", "+        if ( ! (_cachedPrevLineLoc < here && here < _cachedNextLineLoc )) {", "+          ", "+          // this if improves performance when moving from the end of the document to the beginnning.", "+          // in essence, it calculates the line number from scratch", "+          if (_cachedLocation - here > here) {", "+            _cachedLocation = 0;", "+            _cachedLineNum = 1;", "+          }", "+          int lineOffset = _getRelativeLine();", "+          _cachedLineNum = _cachedLineNum + lineOffset;", "+          ", "+        }", "+        _cachedLocation = here;", "+        _cachedPrevLineLoc = getLineStartPos(here);", "+        _cachedNextLineLoc = getLineEndPos(here);", "+        return _cachedLineNum;", "-      int lineOffset = _getRelativeLine();", "-      _cachedLineNum = _cachedLineNum + lineOffset;", "-", "-    _cachedLocation = here;", "-    _cachedPrevLineLoc = getLineStartPos(here);", "-    _cachedNextLineLoc = getLineEndPos(here);", "-    return _cachedLineNum;", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60cff6ffb57fd7e3de6089e716b5f992", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "5497ac60fa563e6e67c580081d99fbd842e52332", "commitAfterChange": "5fa866685226be5aebbebdfba9d7d34d29108e50", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "   public void insertString(int offset, String str, AttributeSet a) throws BadLocationException", "signatureAfterChange": "   public void insertString(int offset, String str, AttributeSet a) throws BadLocationException", "diff": ["-    // Clear the helper method cache", "-    clearCache();", "-", "-    super.insertString(offset,str,a);", "+    ", "+    writeLock();", "+    try {", "+      synchronized(_reduced) {    // Prevent updates to the reduced model during this change", "+        clearCache();      // Clear the helper method cache", "+        super.insertString(offset,str,a);", "+      }", "+    }", "+    finally { writeUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76419bd545a3e100bd8733445687523a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void setCurrentLocation(int loc)", "signatureAfterChange": "   public void setCurrentLocation(int loc)", "diff": ["-//    acquireReadLock();", "-//    try { ", "-//    synchronized(_reduced) {", "-      _setCurrentLocation(loc); ", "-//    } ", "-//    }", "-//    finally { releaseReadLock(); }", "+    acquireReadLock();", "+    try { synchronized(_reduced) {_setCurrentLocation(loc); } }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e72f0564ccb40a8fb9afa1b9978529c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void move(int dist)", "signatureAfterChange": "   public void move(int dist)", "diff": ["-//    acquireReadLock();", "-//    try { ", "-//    synchronized(_reduced) { ", "-      _move(dist); ", "-//    }", "-//    }", "-//    finally { releaseReadLock(); } ", "+    acquireReadLock();", "+    try { synchronized(_reduced) { _move(dist); }}", "+    finally { releaseReadLock(); } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b343aa65e0421297696620ef6cd0ebe5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public int balanceForward()", "signatureAfterChange": "   public int balanceForward()", "diff": ["-//    acquireReadLock();", "-//    try { ", "-//    synchronized(_reduced) { ", "-      return _balanceForward(); ", "-//    } ", "-//    }", "-//    finally { releaseReadLock(); }  ", "+    acquireReadLock();", "+    try { synchronized(_reduced) { return _balanceForward(); } }", "+    finally { releaseReadLock(); }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cff14961e1fb83a27231c9bb2d3d31ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public int balanceBackward()", "signatureAfterChange": "   public int balanceBackward()", "diff": ["-//    acquireReadLock();", "-//    try { ", "-//    synchronized(_reduced) { ", "-      return _balanceBackward(); ", "-//    } ", "-//    }", "-//    finally { releaseReadLock(); }  ", "+    acquireReadLock();", "+    try { synchronized(_reduced) { return _balanceBackward(); } }", "+    finally { releaseReadLock(); }  "]}], "num": 16910}