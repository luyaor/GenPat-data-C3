{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5cb4f61e4a928c1280d6df706946427e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9c6ee6084d201e72c6cdced56cb682a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "commitAfterChange": "b24b0a9d39ea5edde092f4dd2f0cce709847f77c", "methodNumberBeforeChange": 391, "methodNumberAfterChange": 560, "signatureBeforeChange": "    final private boolean jj_3R_100()", "signatureAfterChange": "    final private boolean jj_3R_97()", "diff": ["-  final private boolean jj_3R_100() {", "-    if (jj_3R_145()) {", "-    if (jj_3R_146()) return true;", "+", "+  final private boolean jj_3R_97() {", "+    if (jj_3R_139()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_140()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_141()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_142()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_143()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_144()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_145()) {", "+    jj_scanpos = xsp;", "+    if (jj_3R_146()) return true;", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf5e2b6a3ab48e95a7199afdae35f428", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "a6b0a623369310bca609596a45d42dfc11ddae97", "commitAfterChange": "f0c06f4ecb55d3ad2147a0571c9f9cb7a469ab29", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   static void ventBuffers(BufferedReader jdOut, BufferedReader jdErr,                           LinkedList outLines, LinkedList errLines)     throws IOException", "signatureAfterChange": "   static void ventBuffers(BufferedReader jdOut, BufferedReader jdErr,                           LinkedList outLines, LinkedList errLines)     throws IOException", "diff": ["-    output = jdOut.readLine();", "-    while (jdOut.ready() && (output != null)) {", "-      System.out.println(\"[stdout]: \" + output);", "-      outLines.add(output);", "+    ", "+    if (jdOut.ready()) {", "-    }", "-    output = jdErr.readLine();", "-    while (jdErr.ready() && (output != null)) {", "-      System.out.println(\"[stderr] \" + output);", "-      errLines.add(output);", "+      while (jdOut.ready() && (output != null)) {", "+//        System.out.println(\"[stdout]: \" + output);", "+        outLines.add(output);", "+        if (jdOut.ready()) {", "+          output = jdOut.readLine();", "+        }", "+        else {", "+          output = null;", "+        }", "+      }", "+    }", "+    ", "+    if (jdErr.ready()) {", "+      while (jdErr.ready() && (output != null)) {", "+//        System.out.println(\"[stderr] \" + output);", "+        errLines.add(output);", "+        if (jdErr.ready()) {", "+          output = jdErr.readLine();", "+        }", "+        else {", "+          output = null;", "+        }", "+      }"]}], "num": 5036}