{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f651a70ae5ffbfe9cbb0980f975d652", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23147dc66182fe589ad9aafeef2736d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ImmutableRelation.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public <T> T[] toArray(T[] a)", "signatureAfterChange": "   public boolean addAll(Collection<? extends Pair<T1, T2>> c)", "diff": ["-  public Object[] toArray() { return _relation.toArray(); }", "-  public <T> T[] toArray(T[] a) { return _relation.toArray(a); }", "+  public boolean remove(Object o) { throw new UnsupportedOperationException(); }", "+  public boolean addAll(Collection<? extends Pair<T1, T2>> c) { throw new UnsupportedOperationException(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23dc08e6898675753992147aa27ac2ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "d43aa0dddfca5bd508283f6af1dfc42f0f92a186", "commitAfterChange": "0e1d09dde6936169177bd564168991351deb65d8", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": "   public static <T> Runnable bindFirst(Runnable1<? super T> runnable, T arg)", "signatureAfterChange": "   public static <T1, T2> Predicate<T2> bindFirst(Predicate2<? super T1, ? super T2> pred, T1 arg1)", "diff": ["+  /** Bind a fixed argument to the given binary predicate, producing a unary prediate. */", "+  public static <T1, T2> Predicate<T2> bindFirst(Predicate2<? super T1, ? super T2> pred, T1 arg1) {", "+    return new BindFirstPredicate<T1, T2>(pred, arg1);", "+  }"]}], "num": 9779}