{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fa83f8cb1e4cd61e9d23254d210139d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d4122643490b7fc32f43ddc67a86e8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 39, "signatureBeforeChange": "          public void testForClassDef()", "signatureAfterChange": "          public void testForClassDef()", "diff": ["-      ClassDef cd0 = new ClassDef(SourceInfo.NO_INFO, _packageMav, new Word(SourceInfo.NO_INFO, \"Lisa\"),", "+      ClassDef cd0 = new ClassDef(SourceInfo.NO_INFO, PACKAGE_MAV, new Word(SourceInfo.NO_INFO, \"Lisa\"),", "-                                  new ClassOrInterfaceType(SourceInfo.NO_INFO, \"Object\", new Type[0]), new ReferenceType[0], ", "+                                  new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), new ReferenceType[0], ", "-                       _publicMav, ", "+                       PUBLIC_MAV, ", "-                       new VariableData[] { new VariableData(_iv.getSymbolData(\"Object\", ", "-                                                                               _iv._makeSourceInfo(\"java.lang.Object\"))) },", "+                       new VariableData[] { new VariableData(_iv.getSymbolData(\"java.lang.Object\", ", "+                                                                               SourceInfo.make(\"java.lang.Object\"))) },", "-      ClassDef cd1 = new ClassDef(SourceInfo.NO_INFO, _abstractMav, new Word(SourceInfo.NO_INFO, \"Bart\"),", "-                                  new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"System\", new Type[0]), new ReferenceType[0], ", "+      ClassDef cd1 = new ClassDef(SourceInfo.NO_INFO, ", "+                                  ABSTRACT_MAV, ", "+                                  new Word(SourceInfo.NO_INFO, \"Bart\"),", "+                                  new TypeParameter[0],", "+                                  new ClassOrInterfaceType(SourceInfo.NO_INFO, \"System\", new Type[0]), ", "+                                  new ReferenceType[0], ", "-      assertTrue(\"Should have resolved java.lang.System\", LanguageLevelConverter.symbolTable.containsKey(\"java.lang.System\"));", "-      assertFalse(\"Should not be a continuation\", LanguageLevelConverter.symbolTable.get(\"java.lang.System\").isContinuation());", "+      assertTrue(\"Should have resolved java.lang.System\", ", "+                 LanguageLevelConverter.symbolTable.containsKey(\"java.lang.System\"));", "+      assertFalse(\"Should not be a continuation\", ", "+                  LanguageLevelConverter.symbolTable.get(\"java.lang.System\").isContinuation());", "-                                                    _packageMav, ", "+                                                    PACKAGE_MAV, ", "-      ClassDef cd3 = new ClassDef(SourceInfo.NO_INFO, _abstractMav, new Word(SourceInfo.NO_INFO, \"TestSuper2\"),", "-                                  new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"TestCase\", new Type[0]), new ReferenceType[0], ", "-                                  new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {cmd}));", "+      ClassDef cd3 = new ClassDef(SourceInfo.NO_INFO, ", "+                                  ABSTRACT_MAV, ", "+                                  new Word(SourceInfo.NO_INFO, \"TestSuper2\"),", "+                                  new TypeParameter[0], ", "+                                  new ClassOrInterfaceType(SourceInfo.NO_INFO, \"TestCase\", new Type[0]), ", "+                                  new ReferenceType[0], ", "+                                  new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] { cmd }));", "-                                                     _packageMav, ", "+                                                     PACKAGE_MAV, ", "-      ClassDef cd4 = new ClassDef(SourceInfo.NO_INFO, _abstractMav, new Word(SourceInfo.NO_INFO, \"TestVoidNoTestMethod\"),", "-                                  new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"junit.framework.TestCase\", new Type[0]), new ReferenceType[0], ", "-                                  new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {cmd2}));", "+      ClassDef cd4 = new ClassDef(SourceInfo.NO_INFO, ", "+                                  ABSTRACT_MAV, ", "+                                  new Word(SourceInfo.NO_INFO, \"TestVoidNoTestMethod\"),", "+                                  new TypeParameter[0], ", "+                                  new ClassOrInterfaceType(SourceInfo.NO_INFO, \"junit.framework.TestCase\", new Type[0]), ", "+                                  new ReferenceType[0], ", "+                                  new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] { cmd2 }));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91d11c04a6c37cc67948424142e4b97f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 29, "signatureBeforeChange": "          public void testForClassDef()", "signatureAfterChange": "          public void testForClassDef()", "diff": ["-                                 new TypeParameter[0], ", "+                                  new TypeParameter[0], ", "-      ", "-      assertTrue(\"Should have resolved java.lang.Object\", symbolTable.containsKey(\"java.lang.Object\"));", "-      assertFalse(\"Should not be a continuation\", symbolTable.get(\"java.lang.Object\").isContinuation());", "-      SymbolData sd = symbolTable.get(\"myPackage.Lisa\");", "-      assertTrue(\"Lisa should be in _newSDs\", _newSDs.containsKey(sd));", "-      MethodData md2 = new MethodData(\"equals\",", "-                                   _publicMav, ", "-                                   new TypeParameter[0], ", "-                                   SymbolData.BOOLEAN_TYPE, ", "-                                     new VariableData[] { new VariableData(_iv.getSymbolData(\"Object\", _iv._makeSourceInfo(\"java.lang.Object\"))) },", "-                                   new String[0], ", "-                                   sd,", "-                                   null);", "-                                   ", "+      assertTrue(\"Should have resolved java.lang.Object\", ", "+                 LanguageLevelConverter.symbolTable.containsKey(\"java.lang.Object\"));", "+      assertFalse(\"Should not be a continuation\", ", "+                  LanguageLevelConverter.symbolTable.get(\"java.lang.Object\").isContinuation());", "+      SymbolData sd = LanguageLevelConverter.symbolTable.get(\"myPackage.Lisa\");", "+      assertTrue(\"Lisa should be in _newSDs\", LanguageLevelConverter._newSDs.containsKey(sd));", "+      MethodData md2 = ", "+        new MethodData(\"equals\",", "+                       _publicMav, ", "+                       new TypeParameter[0], ", "+                       SymbolData.BOOLEAN_TYPE, ", "+                       new VariableData[] { new VariableData(_iv.getSymbolData(\"Object\", ", "+                                                                               _iv._makeSourceInfo(\"java.lang.Object\"))) },", "+                       new String[0], ", "+                       sd,", "+                       null);", "+      ", "-                             ", "+      ", "-      assertTrue(\"Should have resolved java.lang.System\", symbolTable.containsKey(\"java.lang.System\"));", "-      assertFalse(\"Should not be a continuation\", symbolTable.get(\"java.lang.System\").isContinuation());", "-      sd = symbolTable.get(\"Bart\");", "+      assertTrue(\"Should have resolved java.lang.System\", LanguageLevelConverter.symbolTable.containsKey(\"java.lang.System\"));", "+      assertFalse(\"Should not be a continuation\", LanguageLevelConverter.symbolTable.get(\"java.lang.System\").isContinuation());", "+      sd = LanguageLevelConverter.symbolTable.get(\"Bart\");", "-", "+      ", "-", "-", "+      ", "-      symbolTable.put(\"junit.framework.TestCase\", new SymbolData(\"junit.framework.TestCase\"));", "+      LanguageLevelConverter.symbolTable.put(\"junit.framework.TestCase\", new SymbolData(\"junit.framework.TestCase\"));", "-      assertNotNull(\"Should have looked up TestSuper2\", symbolTable.get(\"TestSuper2\"));", "+      assertNotNull(\"Should have looked up TestSuper2\", LanguageLevelConverter.symbolTable.get(\"TestSuper2\"));", "-      //Check a method with void return, but name not starting with test, so it's not okay.", "+      // Check a method with void return, but name not starting with test, but it's still okay.", "-                                                    _packageMav, ", "-                                                    new TypeParameter[0], ", "-                                                    new VoidReturn(SourceInfo.NO_INFO, \"void\"), ", "-                                                    new Word(SourceInfo.NO_INFO, \"uhOh\"),", "-                                                    new FormalParameter[0],", "-                                                    new ReferenceType[0], ", "-                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-", "+                                                     _packageMav, ", "+                                                     new TypeParameter[0], ", "+                                                     new VoidReturn(SourceInfo.NO_INFO, \"void\"), ", "+                                                     new Word(SourceInfo.NO_INFO, \"uhOh\"),", "+                                                     new FormalParameter[0],", "+                                                     new ReferenceType[0], ", "+                                                     new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+      ", "-", "-", "-", "+      ", "+      ", "+      ", "-", "+      "]}], "num": 7378}