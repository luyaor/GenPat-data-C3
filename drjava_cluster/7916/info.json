{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f38cb1698c89200ca00613e774330477", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e22ec82291e48dd53f0342d49ffc896", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "fa036878036cfa9b3fdfb0b92616499d17bb99f7", "commitAfterChange": "dedfa81500269a8e5b265cbcc3d07ed24185cf9c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DebugPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public DebugPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    boolean advancedMode = ", "-      DrJava.CONFIG.getSetting(DEBUGGER_ADVANCED).booleanValue();", "-    if (advancedMode && CodeStatus.DEVELOPMENT) {", "-      add(_inputField, BorderLayout.SOUTH);", "-    ", "-      // Listen for enter key", "-      _inputField.addActionListener(_performAction);", "+    if (CodeStatus.DEVELOPMENT) {", "+      boolean advancedMode = ", "+        DrJava.CONFIG.getSetting(DEBUGGER_ADVANCED).booleanValue();", "+      if (advancedMode) {", "+        add(_inputField, BorderLayout.SOUTH);", "+        ", "+        // Listen for enter key", "+        _inputField.addActionListener(_performAction);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "657065bbc9bf4be28c136074fb9679fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "signatureAfterChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "diff": ["-      if(!dCompName.equals(OptionConstants.COMPILER_PREFERENCE_CONTROL.NO_PREFERENCE) && compilerNames.contains(dCompName))", "-        _active = _compilers.get(compilerNames.indexOf(dCompName));", "+      if (!dCompName.equals(OptionConstants.COMPILER_PREFERENCE_CONTROL.NO_PREFERENCE)) {", "+        // preference was set", "+        if (compilerNames.contains(dCompName)) {", "+          _active = _compilers.get(compilerNames.indexOf(dCompName));", "+        }", "+      }"]}], "num": 7916}