{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33ea0771f6fc994a88ba3120b46b9b0d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1904a5323e44377b25ba18ab6e88f124", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "   public Type visit(ConditionalExpression node)", "signatureAfterChange": "   public Class<?> visit(ConditionalExpression node)", "diff": ["-  public Type visit(ConditionalExpression node) {", "+  public Class<?> visit(ConditionalExpression node) {", "-    Type type = condExp.acceptVisitor(this);", "+    Class<?> type = condExp.acceptVisitor(this);", "-    ", "+", "-    ", "+", "-    Type c1A = exp1.acceptVisitor(this);", "-    Type c2B = exp2.acceptVisitor(this);", "-    Type ec = null;", "-    ", "-    Class<?> c1 = (Class<?>)c1A;", "-    Class<?> c2 = (Class<?>)c2B;", "-    ", "+    Class<?> c1 = exp1.acceptVisitor(this);", "+    Class<?> c2 = exp2.acceptVisitor(this);", "+    Class<?> ec = null;", "+", "-             exp2.hasProperty(NodeProperties.VALUE) && c2 == int.class) {", "+               exp2.hasProperty(NodeProperties.VALUE) && c2 == int.class) {", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e015757350986399f824381e63771dae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "   public Class<?> visit(ConditionalExpression node)", "signatureAfterChange": "   public Type visit(ConditionalExpression node)", "diff": ["-  public Class<?> visit(ConditionalExpression node) {", "+  public Type visit(ConditionalExpression node) {", "-    Class<?> type = condExp.acceptVisitor(this);", "+    Type type = condExp.acceptVisitor(this);", "-", "+    ", "-", "+    ", "-    Class<?> c1 = exp1.acceptVisitor(this);", "-    Class<?> c2 = exp2.acceptVisitor(this);", "-    Class<?> ec = null;", "-", "+    Type c1A = exp1.acceptVisitor(this);", "+    Type c2B = exp2.acceptVisitor(this);", "+    Type ec = null;", "+    ", "+    Class<?> c1 = (Class<?>)c1A;", "+    Class<?> c2 = (Class<?>)c2B;", "+    ", "-               exp2.hasProperty(NodeProperties.VALUE) && c2 == int.class) {", "+             exp2.hasProperty(NodeProperties.VALUE) && c2 == int.class) {", "-", "+    "]}], "num": 10050}