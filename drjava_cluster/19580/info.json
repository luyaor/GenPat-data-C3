{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6378c3c578e0cf635f0519aec48f48db", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a94ad10d9651dd31903a1a5f6e39eec7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "25c6efa4fee666f10304502f8f42fa30cbab79a2", "commitAfterChange": "e193e4674aaab3350b36cbc521ecf3bf9c098bc6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private int _move(int count, int currentOffset)", "signatureAfterChange": "     private int _move(int count, int currentOffset)", "diff": ["-     */", "+      */", "-      int retval = currentOffset;", "-      if (count == 0)  return retval;", "-", "-      TokenList.Iterator it = this._copy();", "+      if (count == 0) return currentOffset;", "+      int retval = currentOffset; // default value if an exception is thrown in _moveRight/_moveLeft", "+      ", "+// Note commented out phrase in next statement", "+      TokenList.Iterator it = this /*._copy() */;", "-      this.setTo(it);", "-      it.dispose();", "+//      this.setTo(it);", "+//      it.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f42519d5b4bf532fa645a077d79c8b33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CompoundUndoManager.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void endCompoundEdit(int key)", "signatureAfterChange": "   public void endCompoundEdit(int key)", "diff": ["-    if(_keys.size() > 0) {", "-      if(_keys.get(0).intValue() == key) {", "+    if (_keys.size() > 0) {", "+      if (_keys.get(0).intValue() == key) {", "-          else {", "-            _compoundEdits.get(0).addEdit(compoundEdit);", "-          }", "+          else _compoundEdits.get(0).addEdit(compoundEdit);", "-      else {", "-        throw new IllegalStateException(\"Improperly nested compound edits.\");", "-      }", "+      else throw new IllegalStateException(\"Improperly nested compound edits.\");"]}], "num": 19580}