{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20853ddd3e251600e70e0278bd9f5cbb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55b8e5304f49d05c121649e8fea15c06", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": "          public void testShouldBreak()", "signatureAfterChange": "          public void testShouldBreak()", "diff": ["-        new LeftShiftAssignmentExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), ", "-                                          new NullLiteral(SourceInfo.NO_INFO));", "+        new LeftShiftAssignmentExpression(SourceInfo.NONE, new NullLiteral(SourceInfo.NONE), ", "+                                          new NullLiteral(SourceInfo.NONE));", "-        new RightUnsignedShiftAssignmentExpression(SourceInfo.NO_INFO, ", "-                                                   new NullLiteral(SourceInfo.NO_INFO), ", "-                                                   new NullLiteral(SourceInfo.NO_INFO));", "+        new RightUnsignedShiftAssignmentExpression(SourceInfo.NONE, ", "+                                                   new NullLiteral(SourceInfo.NONE), ", "+                                                   new NullLiteral(SourceInfo.NONE));", "-        new RightSignedShiftAssignmentExpression(SourceInfo.NO_INFO, ", "-                                                 new NullLiteral(SourceInfo.NO_INFO), ", "-                                                 new NullLiteral(SourceInfo.NO_INFO));", "+        new RightSignedShiftAssignmentExpression(SourceInfo.NONE, ", "+                                                 new NullLiteral(SourceInfo.NONE), ", "+                                                 new NullLiteral(SourceInfo.NONE));", "-        new BitwiseAndAssignmentExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), ", "-                                           new NullLiteral(SourceInfo.NO_INFO));", "+        new BitwiseAndAssignmentExpression(SourceInfo.NONE, new NullLiteral(SourceInfo.NONE), ", "+                                           new NullLiteral(SourceInfo.NONE));", "-        new BitwiseOrAssignmentExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), ", "-                                          new NullLiteral(SourceInfo.NO_INFO));", "+        new BitwiseOrAssignmentExpression(SourceInfo.NONE, new NullLiteral(SourceInfo.NONE), ", "+                                          new NullLiteral(SourceInfo.NONE));", "-        new BitwiseXorAssignmentExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), ", "-                                           new NullLiteral(SourceInfo.NO_INFO));", "+        new BitwiseXorAssignmentExpression(SourceInfo.NONE, new NullLiteral(SourceInfo.NONE), ", "+                                           new NullLiteral(SourceInfo.NONE));", "-        new BitwiseAndExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), ", "-                                 new NullLiteral(SourceInfo.NO_INFO));", "+        new BitwiseAndExpression(SourceInfo.NONE, new NullLiteral(SourceInfo.NONE), ", "+                                 new NullLiteral(SourceInfo.NONE));", "-        new BitwiseOrExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), ", "-                                new NullLiteral(SourceInfo.NO_INFO));", "+        new BitwiseOrExpression(SourceInfo.NONE, new NullLiteral(SourceInfo.NONE), ", "+                                new NullLiteral(SourceInfo.NONE));", "-        new BitwiseXorExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), ", "-                                 new NullLiteral(SourceInfo.NO_INFO));", "+        new BitwiseXorExpression(SourceInfo.NONE, new NullLiteral(SourceInfo.NONE), ", "+                                 new NullLiteral(SourceInfo.NONE));", "-        new BitwiseNotExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO));", "+        new BitwiseNotExpression(SourceInfo.NONE, new NullLiteral(SourceInfo.NONE));", "-        new LeftShiftExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), ", "-                                new NullLiteral(SourceInfo.NO_INFO));", "+        new LeftShiftExpression(SourceInfo.NONE, new NullLiteral(SourceInfo.NONE), ", "+                                new NullLiteral(SourceInfo.NONE));", "-        new RightUnsignedShiftExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), ", "-                                         new NullLiteral(SourceInfo.NO_INFO));", "+        new RightUnsignedShiftExpression(SourceInfo.NONE, new NullLiteral(SourceInfo.NONE), ", "+                                         new NullLiteral(SourceInfo.NONE));", "-        new RightSignedShiftExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), ", "-                                       new NullLiteral(SourceInfo.NO_INFO));", "+        new RightSignedShiftExpression(SourceInfo.NONE, new NullLiteral(SourceInfo.NONE), ", "+                                       new NullLiteral(SourceInfo.NONE));", "-      EmptyExpression e = new EmptyExpression(SourceInfo.NO_INFO);", "+      EmptyExpression e = new EmptyExpression(SourceInfo.NONE);", "-        new NoOpExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), ", "-                           new NullLiteral(SourceInfo.NO_INFO));", "+        new NoOpExpression(SourceInfo.NONE, new NullLiteral(SourceInfo.NONE), ", "+                           new NullLiteral(SourceInfo.NONE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd5d9957ff1803469e78c77224affc95", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": "               public void testForSimpleAnonymousClassInstantiation()", "signatureAfterChange": "               public void testForSimpleAnonymousClassInstantiation()", "diff": ["-      ClassOrInterfaceType objType = new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]);", "+      ClassOrInterfaceType objType = new ClassOrInterfaceType(SourceInfo.NONE, \"java.lang.Object\", new Type[0]);", "-        new SimpleAnonymousClassInstantiation(SourceInfo.NO_INFO, ", "+        new SimpleAnonymousClassInstantiation(SourceInfo.NONE, ", "-                                              new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]),", "-                                              new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                              new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0]),", "+                                              new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-      VariableDeclaration vdecl = new VariableDeclaration(SourceInfo.NO_INFO,", "+      VariableDeclaration vdecl = new VariableDeclaration(SourceInfo.NONE,", "-        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                            new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                            new Word (SourceInfo.NO_INFO, \"field1\")),", "-          new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                              new PrimitiveType(SourceInfo.NO_INFO, \"boolean\"), ", "-                                              new Word (SourceInfo.NO_INFO, \"field2\"))});      ", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                            new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                            new Word (SourceInfo.NONE, \"field1\")),", "+          new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                              new PrimitiveType(SourceInfo.NONE, \"boolean\"), ", "+                                              new Word (SourceInfo.NONE, \"field2\"))});      ", "-      PrimitiveType intt = new PrimitiveType(SourceInfo.NO_INFO, \"int\");", "-      UninitializedVariableDeclarator uvd = new UninitializedVariableDeclarator(SourceInfo.NO_INFO, intt, new Word(SourceInfo.NO_INFO, \"i\"));", "-      FormalParameter param = new FormalParameter(SourceInfo.NO_INFO, new UninitializedVariableDeclarator(SourceInfo.NO_INFO, intt, new Word(SourceInfo.NO_INFO, \"j\")), false);", "-      BracedBody bb = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {new VariableDeclaration(SourceInfo.NO_INFO,  _packageMav, new UninitializedVariableDeclarator[]{uvd}), new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 5))});", "+      PrimitiveType intt = new PrimitiveType(SourceInfo.NONE, \"int\");", "+      UninitializedVariableDeclarator uvd = ", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, intt, new Word(SourceInfo.NONE, \"i\"));", "+      FormalParameter param = ", "+        new FormalParameter(SourceInfo.NONE, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NONE, intt, ", "+                                                                new Word(SourceInfo.NONE, \"j\")), false);", "+      BracedBody bb = ", "+        new BracedBody(SourceInfo.NONE, ", "+                       new BodyItemI[] {new VariableDeclaration(SourceInfo.NONE,  _packageMav, ", "+                                                                new UninitializedVariableDeclarator[]{uvd}), ", "+                         new ValueReturnStatement(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 5))});", "-      ConcreteMethodDef cmd1 = new ConcreteMethodDef(SourceInfo.NO_INFO, _publicMav, new TypeParameter[0], ", "-                                                     intt, new Word(SourceInfo.NO_INFO, \"myMethod\"), new FormalParameter[] {param}, ", "-                                                     new ReferenceType[0], bb);", "-      BracedBody classBb = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] { vdecl, cmd1 });", "+      ConcreteMethodDef cmd1 = ", "+        new ConcreteMethodDef(SourceInfo.NONE, _publicMav, new TypeParameter[0], ", "+                              intt, new Word(SourceInfo.NONE, \"myMethod\"), new FormalParameter[] {param}, ", "+                              new ReferenceType[0], bb);", "+      BracedBody classBb = new BracedBody(SourceInfo.NONE, new BodyItemI[] { vdecl, cmd1 });", "-      SimpleAnonymousClassInstantiation  complicated = new SimpleAnonymousClassInstantiation(SourceInfo.NO_INFO, ", "-                                                                                             new ClassOrInterfaceType(SourceInfo.NO_INFO, \"name\", new Type[0]), ", "-                                                                                             new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]), ", "-                                                                                             classBb);", "+      SimpleAnonymousClassInstantiation  complicated = ", "+        new SimpleAnonymousClassInstantiation(SourceInfo.NONE, ", "+                                              new ClassOrInterfaceType(SourceInfo.NONE, \"name\", new Type[0]), ", "+                                              new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0]), ", "+                                              classBb);", "-        new VariableDeclaration(SourceInfo.NO_INFO, _publicMav, new VariableDeclarator[] { ", "-        new InitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                          new ClassOrInterfaceType(SourceInfo.NO_INFO, \"name\", new Type[0]), ", "-                                          new Word(SourceInfo.NO_INFO, \"myAnon\"), complicated)});", "+        new VariableDeclaration(SourceInfo.NONE, _publicMav, new VariableDeclarator[] { ", "+        new InitializedVariableDeclarator(SourceInfo.NONE, ", "+                                          new ClassOrInterfaceType(SourceInfo.NONE, \"name\", new Type[0]), ", "+                                          new Word(SourceInfo.NONE, \"myAnon\"), complicated)});", "-        new ComplexMethodInvocation(SourceInfo.NO_INFO, ", "+        new ComplexMethodInvocation(SourceInfo.NONE, ", "-                                    new Word(SourceInfo.NO_INFO, \"myMethod\"),", "-                                    new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[] { ", "-        new IntegerLiteral(SourceInfo.NO_INFO, 5)}));", "+                                    new Word(SourceInfo.NONE, \"myMethod\"),", "+                                    new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[] { ", "+        new IntegerLiteral(SourceInfo.NONE, 5)}));", "-//      //Test that we can get a field from an anonymous inner class", "+      // Test that we can get a field from an anonymous inner class", "-      Expression nr = new ComplexNameReference(SourceInfo.NO_INFO, complicated, new Word(SourceInfo.NO_INFO, \"field1\"));", "+      Expression nr = new ComplexNameReference(SourceInfo.NONE, complicated, new Word(SourceInfo.NONE, \"field1\"));", "-//      // Now, what if the implemented sd is abstract, and it has an abstract method that our instantiation doesn't override.  Should throw an error.", "+      // Let sd be abstract with an abstract method that our instantiation doesn't override.  Should throw an error.", "-        new SimpleAnonymousClassInstantiation(SourceInfo.NO_INFO, ", "-                                              new ClassOrInterfaceType(SourceInfo.NO_INFO, \"A.B\", new Type[0]), ", "-                                              new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]), ", "-                                              new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+        new SimpleAnonymousClassInstantiation(SourceInfo.NONE, ", "+                                              new ClassOrInterfaceType(SourceInfo.NONE, \"A.B\", new Type[0]), ", "+                                              new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0]), ", "+                                              new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-      a.setMav(new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[] {\"public\"}));", "-      b.setMav(new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[] {\"public\"}));", "+      a.setMav(new ModifiersAndVisibility(SourceInfo.NONE, new String[] {\"public\"}));", "+      b.setMav(new ModifiersAndVisibility(SourceInfo.NONE, new String[] {\"public\"}));"]}], "num": 1196}