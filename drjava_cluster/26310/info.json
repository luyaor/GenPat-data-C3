{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb3ad8e477bc79b371b83b4b487b7758", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00b24a9780de40d815d6c7404b991579", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses() throws Exception", "signatureAfterChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses() throws Exception", "diff": ["-    if (printMessages) System.out.println(\"----testBreakpointsAndStepsInNonPublicClasses----\");", "+    if (printMessages) printStream.println(\"----testBreakpointsAndStepsInNonPublicClasses----\");", "-    _debugger.toggleBreakpoint(doc,DEBUG_CLASS.indexOf(\"Baz Line 1\"), 14);", "+    _debugger.toggleBreakpoint(doc,DEBUG_CLASS.indexOf(\"Baz Line 1\"), 14,true);", "-    if (printMessages) System.out.println(\"----After breakpoint:\\n\" + getInteractionsText());", "+    if (printMessages) printStream.println(\"----After breakpoint:\\n\" + getInteractionsText());", "-    if (printMessages) System.out.println(\"adding another breakpoint\");", "+    if (printMessages) printStream.println(\"adding another breakpoint\");", "-    _debugger.toggleBreakpoint(doc, DEBUG_CLASS.indexOf(\"System.out.println(\\\"Bar Line 2\\\")\"), 9);", "+    _debugger.toggleBreakpoint(doc, DEBUG_CLASS.indexOf(\"System.out.println(\\\"Bar Line 2\\\")\"), 9,true);", "-    if (printMessages) System.out.println(\"****\"+getInteractionsText());", "+    if (printMessages) printStream.println(\"****\"+getInteractionsText());", "-      if (printMessages) System.out.println(\"resuming\");", "+      if (printMessages) printStream.println(\"resuming\");", "-    if (printMessages) System.out.println(\"----After one resume:\\n\" + getInteractionsText());", "+    if (printMessages) printStream.println(\"----After one resume:\\n\" + getInteractionsText());", "-    if ( printMessages ) System.out.println(\"-------- Adding interpret listener --------\");", "+    if ( printMessages ) printStream.println(\"-------- Adding interpret listener --------\");", "-      if ( printMessages ) System.out.println(\"-------- resuming --------\");", "+      if ( printMessages ) printStream.println(\"-------- resuming --------\");", "-    if (printMessages) System.out.println(\"----After second resume:\\n\" + getInteractionsText());", "+    if (printMessages) printStream.println(\"----After second resume:\\n\" + getInteractionsText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a9d425b7625a344d874cdf2c19b2acc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 31, "signatureBeforeChange": "    private synchronized void _stepHelper(int flag, boolean shouldNotify) throws DebugException", "signatureAfterChange": "   private synchronized void _stepHelper(int flag, boolean shouldNotify)     throws DebugException", "diff": ["-  private synchronized void _stepHelper(int flag, boolean shouldNotify) throws DebugException{", "-    if (!isReady() || (_suspendedThreads.size() <= 0)) return;", "+   */", "+  private synchronized void _stepHelper(int flag, boolean shouldNotify)", "+    throws DebugException", "+  {", "+    if (_suspendedThreads.size() <= 0) {", "+      throw new IllegalStateException(\"Cannot step if no threads are suspended.\");", "+    }", "-    if( printMessages ) System.out.println(\"About to peek...\");", "+    if (printMessages) System.out.println(\"About to peek...\");", "-    if( printMessages ) System.out.println(\"Stepping \" + thread.toString());", "+    if (printMessages) System.out.println(\"Stepping \" + thread.toString());", "-    _doCopyBack();", "+    _copyVariablesFromInterpreter();", "-    if( printMessages ) System.out.println(\"Deleting pending requests...\");", "+    if (printMessages) System.out.println(\"Deleting pending requests...\");", "-    // don't allow the creation of a new StepRequest if there's already one for", "-    // the current thread", "+    // If there's already a step request for the current thread, delete", "+    //  it first", "-        ", "-    if( printMessages ) System.out.println(\"Issued step request\");", "+    ", "+    if (printMessages) System.out.println(\"Issued step request\");", "-    if( shouldNotify ){", "+    if (shouldNotify) {", "-    if( printMessages ) System.out.println(\"About to resume\");", "-    resumeNoCopy();", "+    if (printMessages) System.out.println(\"About to resume\");", "+    _resumeWithoutCopyingVariables();"]}], "num": 26310}