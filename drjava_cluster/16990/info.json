{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c3b938aab20985584bf32fcde6177bb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21d0f8da5a26129ad77a3d029bec59a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DefaultInteractionsModel.java", "commitBeforeChange": "eb8f1a08f585431afff35aec705cfd9169bfce44", "commitAfterChange": "b2d820b253c15b02ecb50e43e9a336a56dadd45e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public StackTraceElement[] replaceLLException(StackTraceElement[] stackTrace)", "signatureAfterChange": "   public StackTraceElement[] replaceLLException(StackTraceElement[] stackTrace)", "diff": ["-    LanguageLevelStackTraceMapper LLSTM = new LanguageLevelStackTraceMapper(_model);", "-    List<OpenDefinitionsDocument> docs = _model.getOpenDefinitionsDocuments();", "-    List<File> files = new ArrayList<File>();", "-    for(OpenDefinitionsDocument odd: docs){", "-      File f = odd.getRawFile();", "-      if (f.getName().endsWith(\".dj0\") ||", "-          f.getName().endsWith(\".dj1\") ||", "-          f.getName().endsWith(\".dj2\")) files.add(f); ", "-    }", "+    // use LLSTM from compiler model.", "+    LanguageLevelStackTraceMapper LLSTM = _model.getCompilerModel().getLLSTM();", "+    final List<File> files = new ArrayList<File>();", "+    for(OpenDefinitionsDocument odd: _model.getLLOpenDefinitionsDocuments()) { files.add(odd.getRawFile()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "233dcf433f19878770dd2c8187e0b48a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "eb8f1a08f585431afff35aec705cfd9169bfce44", "commitAfterChange": "b2d820b253c15b02ecb50e43e9a336a56dadd45e", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public void testSuiteEnded(JUnitError[] errors)", "signatureAfterChange": "   public void testSuiteEnded(JUnitError[] errors)", "diff": ["-    List<OpenDefinitionsDocument> docs = _model.getOpenDefinitionsDocuments();", "-    for(OpenDefinitionsDocument odd: docs){", "-      File f = odd.getRawFile();", "-      if (f.getName().endsWith(\".dj0\") ||", "-          f.getName().endsWith(\".dj1\") ||", "-          f.getName().endsWith(\".dj2\")) files.add(f); ", "-    }", "+    for(OpenDefinitionsDocument odd: _model.getLLOpenDefinitionsDocuments()){ files.add(odd.getRawFile()); }", "-      if (f.getName().endsWith(\".dj0\") ||", "-          f.getName().endsWith(\".dj1\") ||", "-          f.getName().endsWith(\".dj2\")) {", "+      if (LanguageLevelStackTraceMapper.isLLFile(f)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3f0724c366dd7a77f35fab5f6422900", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "b2d820b253c15b02ecb50e43e9a336a56dadd45e", "commitAfterChange": "a80c6de11e537b6579c447ea812ef2f4f98b5f2f", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public ArrayList<DebugStackData> getCurrentStackFrameData() throws DebugException", "signatureAfterChange": "   public ArrayList<DebugStackData> getCurrentStackFrameData() throws DebugException", "diff": ["-        int lineNum = f.location().lineNumber();", "-        String sourceName = null;", "-        try {", "-          sourceName = f.location().sourceName();", "-        }", "-        catch(com.sun.jdi.AbsentInformationException aie) { sourceName = null; }", "-        StackTraceElement ste = new StackTraceElement(f.location().declaringType().name(),", "-                                                      f.location().method().name(),", "-                                                      sourceName,", "-                                                      f.location().lineNumber());", "-        ste = getLLSTM().replaceStackTraceElement(ste, files);", "+        StackTraceElement ste = getLLStackTraceElement(f.location(), files);"]}], "num": 16990}