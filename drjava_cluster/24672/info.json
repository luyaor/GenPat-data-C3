{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cfb0bd84c39f8aa125125aa96a12dc83", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59e9e40609b5376ef8daa95d89b431c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public Object getValueAt(int row, int col)", "signatureAfterChange": "          public Object getValueAt(int row, int col)", "diff": ["-    public int getColumnCount() { return _columnNames.length; }", "-    public Object getValueAt(int row, int col) { ", "-      StackFrame frame = _frames.elementAt(row);", "-      switch(col) {", "-        case 0: return new Integer(row);", "-        case 1: return frame.location().declaringType().name() + \".\" + frame.location().method().name();", "-        case 2: return new Integer (frame.location().lineNumber());", "-      return null;", "+    ", "+    public Object getValueAt(int row, int col) { ", "+      StackFrame frame = _stackFrames.elementAt(row);", "+      String method = \"(unknown)\";", "+      String line = \"(unknown)\";", "+      if (_debugger.isReady()) {", "+        method = frame.location().declaringType().name() + \".\" +", "+          frame.location().method().name();", "+        line = \"\" + frame.location().lineNumber();", "+      }", "+      switch(col) {", "+        //case 0: return new Integer(row);", "+        case 0: return method;", "+        case 1: return line;", "+      }", "+      return null;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f96d71411ea7f471f362c9f25ad486d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public Object getValueAt(int row, int col)", "signatureAfterChange": "          public Object getValueAt(int row, int col)", "diff": ["+    ", "-      switch(col) {", "-        case 0: return new Long(threadRef.uniqueID());", "-        case 1: return threadRef.name();", "-        case 2: switch (threadRef.status()) {", "+      String name = \"(unknown)\";", "+      String status = \"(unknown)\";", "+      if (_debugger.isReady()) {", "+        name = threadRef.name();", "+        switch (threadRef.status()) {", "-            return \"MONITOR\";", "+            status = \"MONITOR\"; break;", "-            return \"NOT STARTED\";", "+            status = \"NOT STARTED\"; break;", "-            return \"RUNNING\";", "+            status = \"RUNNING\"; break;", "-            return \"SLEEPING\";", "+            status = \"SLEEPING\"; break;", "-            return \"UNKNOWN\";", "+            status = \"UNKNOWN\"; break;", "-            return \"WAIT\";", "+            status = \"WAIT\"; break;", "-            return \"ZOMBIE\";", "+            status = \"ZOMBIE\"; break;", "+      }", "+      switch(col) {", "+        //case 0: return new Long(threadRef.uniqueID());", "+        case 0: return name;", "+        case 1: return status;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3e790b91a996829ada3b2344a187d8d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Object getValueAt(int row, int col)", "signatureAfterChange": "     public Object getValueAt(int row, int col)", "diff": ["-    public Object getValueAt(int row, int col) { ", "-      DebugManager.WatchpointData watchpoint = _watchpoints.elementAt(row);", "-      switch(col) {", "-        case 0: return watchpoint.getName();", "-        case 1: return watchpoint.getValue();", "-        case 2: return watchpoint.getType();", "+    public Object getValueAt(int row, int col) {", "+      if (row < _watches.size()) {", "+        DebugManager.WatchData watch = _watches.elementAt(row);", "+        switch(col) {", "+          case 0: return watch.getName();", "+          case 1: return watch.getValue();", "+          case 2: return watch.getType();", "+        }", "+        return null;", "-      return null;", "+      else {", "+        // Last row blank", "+        return \"\";", "+      }"]}], "num": 24672}