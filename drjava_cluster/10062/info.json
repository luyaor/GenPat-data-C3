{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f89cdc4a9524383ed0ad501133b030d0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ae1e0a62b728625f39b10a1b865b79a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 99, "signatureBeforeChange": "               public void testGetSymbolDataHelper()", "signatureAfterChange": "               public void testGetSymbolDataHelper()", "diff": ["+      sd2.setIsContinuation(false);", "-      assertEquals(\"should find the resolved symbol data in the symbol table\", sd2, ", "-                   _llv.getSymbolDataHelper(\"Woah\", JExprParser.NO_SOURCE_INFO, true, false, true, true));", "+      result = _llv.getSymbolDataHelper(\"Woah\", JExprParser.NO_SOURCE_INFO, true, false, true, true);", "+//      System.err.println(\"result for 'fully.qualifed.Woah' is \" + result);", "+      assertEquals(\"should find the resolved symbol data in the symbol table\", sd2, result);", "-      result = _llv.getSymbolDataHelper(\"Woah\", JExprParser.NO_SOURCE_INFO, false, true, true, true);", "+//      System.err.println(\"_llv.getSymbolData for fully.qualified.Woah = \" +", "+//                         _llv.getSymbolDataHelper(\"fully.qualified.Woah\", JExprParser.NO_SOURCE_INFO, true, true, true, true));", "+     ", "+      result = _llv.getSymbolDataHelper(\"Woah\", JExprParser.NO_SOURCE_INFO, false, false, true, true);", "-      result = _llv.getSymbolDataHelper(\"Woah\", JExprParser.NO_SOURCE_INFO, false, true, true, true);", "+      result = _llv.getSymbolDataHelper(\"Woah\", JExprParser.NO_SOURCE_INFO, false, false, true, true);", "-      result = _llv.getSymbolDataHelper(\"Woah\", JExprParser.NO_SOURCE_INFO, true, true, true, true);", "-      assertEquals(\"Should return sd2, now resolved.\", sd2, result);", "-      assertFalse(\"sd2 should now be resolved\", sd2.isContinuation());", "+      // The following \"test\" forces the definition of \"Woah\" to be retrieved from the file system but THERE IS NO CLASS", "+      // FILE so the file system search returns null!", "+//      result = _llv.getSymbolDataHelper(\"Woah\", JExprParser.NO_SOURCE_INFO, true, false, true, true);", "+//      assertEquals(\"Should return sd2, now resolved.\", sd2, result);", "+//      assertFalse(\"sd2 should now be resolved\", sd2.isContinuation());", "+      ", "+      sd2.setIsContinuation(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4fa9438efce190d56c14dfa7095a780", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionBracePlusTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       public void testSpaceSuffix() throws BadLocationException", "signatureAfterChange": "       public void testSpaceSuffix() throws BadLocationException", "diff": ["-    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText(0, _doc.getLength()));", "+    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText());", "-    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText(0, _doc.getLength()));", "+    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText());", "-    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText(0, _doc.getLength()));", "+    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText());", "-    assertEquals(\"Line aligned to open bracket.\", _aligned, _doc.getText(0, _doc.getLength())); ", "+    assertEquals(\"Line aligned to open bracket.\", _aligned, _doc.getText()); "]}], "num": 10062}