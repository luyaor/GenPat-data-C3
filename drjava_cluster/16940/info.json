{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b66b6501397a901dfbcaa11e569f036", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c5edad6c309cd4068fdf4828f4b4115", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 68, "signatureBeforeChange": "         public void testNoParameters() throws BadLocationException", "signatureAfterChange": "         public void testNoParameters() throws BadLocationException", "diff": ["-    doc.insertString(0, _text, null);", "-    assertEquals(\"START has no brace.\", _text.length(), doc.getLength());", "-    doc.indentLines(0, 7); // Does nothing.", "-    assertEquals(\"START has no brace.\", _text.length(), doc.getLength());", "+    _doc.insertString(0, _text, null);", "+    assertEquals(\"START has no brace.\", _text.length(), _doc.getLength());", "+    indentLines(0, 7); // Does nothing.", "+    assertEquals(\"START has no brace.\", _text.length(), _doc.getLength());", "-    doc.indentLines(0, doc.getLength()); // Aligns second line, a second time.", "+    indentLines(0, _doc.getLength()); // Aligns second line, a second time.", "-    _assertContents(_aligned, doc);", "-    assertEquals(\"Line aligned to open paren.\", _aligned.length(), doc.getLength());", "+    _assertContents(_aligned, _doc);", "+    assertEquals(\"Line aligned to open paren.\", _aligned.length(), _doc.getLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75cacfd18bcc92c6a64edd49ba58387e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void xtestNoDDocInCache()", "signatureAfterChange": "   public void testNoDDocInCache()", "diff": ["-  public void xtestNoDDocInCache(){", "+  public void testNoDDocInCache(){", "-   assertTrue(\"The document should now be closed\", _model.closeFile(doc1));", "-   try{", "-     doc1.getLength();", "-     fail(\"the open defintions document should not be in the cache\");", "-   }catch(NoSuchDocumentException e){     ", "-   }", "+   _model.closeFile(doc1);", "+   assertFalse(\"The document should now be closed\", _adapterTable.get(doc1).isReady());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a555f00b44e0dce1f29b93c59b7810a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "df472bcb2bf0d8ba296911d59ac250fe6e447811", "commitAfterChange": "896d23e2fc31ecf410625227cad5c5d61f4d6309", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": "     public void runMain() throws ClassNameNotFoundException, IOException", "signatureAfterChange": "     public void runMain() throws ClassNameNotFoundException, IOException", "diff": ["-        DefinitionsDocument doc = getDocument();", "-        String className = doc.getQualifiedClassName();", "+        String className = _doc.getQualifiedClassName();", "-        */", "+", "+        */", "-        ", "+          if (!checkIfClassFileInSync()) {", "+            iDoc.insertBeforeLastPrompt(DOCUMENT_OUT_OF_SYNC_MSG, InteractionsDocument.ERROR_STYLE);", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf1d78b85d39ac79398acd51a3b7ce6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException,      InterruptedException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException,      InterruptedException", "diff": ["-        try { doc2.saveFile(new FileSelector(file2)); }", "-        catch (IOException ioe) { fail(\"Save produced exception: \" + ioe); }", "+        saveFile(doc2, new FileSelector(file2)); ", "-    doc.saveFile(new FileSelector(file));", "+    saveFile(doc, new FileSelector(file));", "-    doc.startCompile();", "+    testStartCompile(doc);", "+    _log.log(\"testCompileActiveSavedAnyUnsavedButSaveWhenAsked complete\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2330ef541e609c2fca4f33abe8770f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testDisplayFilename()     throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   public void testDisplayFilename()     throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["-    DefaultSingleDisplayModel sdm = getSDModel();", "-", "-    OpenDefinitionsDocument doc = sdm.getActiveDocument();", "+    OpenDefinitionsDocument doc = _sdModel.getActiveDocument();", "-                 sdm.getDisplayFilename(doc));", "+                 _sdModel.getDisplayFilename(doc));", "-    doc = sdm.openFile(new FileSelector(file));", "+    doc = _sdModel.openFile(new FileSelector(file));", "-                 sdm.getDisplayFilename(doc));", "+                 _sdModel.getDisplayFilename(doc));", "-    doc = sdm.openFile(new FileSelector(file));", "-    assertEquals(\".txt display filename\",", "-                 name,", "-                 sdm.getDisplayFilename(doc));", "+    doc = _sdModel.openFile(new FileSelector(file));", "+    assertEquals(\".txt display filename\", name,", "+                 _sdModel.getDisplayFilename(doc));", "-    doc = sdm.openFile(new FileSelector(file));", "-    assertEquals(\".java.txt display filename\",", "-                 name,", "-                 sdm.getDisplayFilename(doc));", "+    doc = _sdModel.openFile(new FileSelector(file));", "+    assertEquals(\".java.txt display filename\", name,", "+                 _sdModel.getDisplayFilename(doc));"]}], "num": 16940}