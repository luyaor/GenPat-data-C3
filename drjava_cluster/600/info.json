{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65deb837a73cb257b6294e23093b3252", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0778318f598ba252a6b9865ba1f963c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "5b8db3ab6ffa6e60a3e348c2f56419eeafa67e87", "commitAfterChange": "bdf0d961e3094e45012183b3b2277f169c5827d7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testSaveButtonEnabled() throws IOException", "signatureAfterChange": "   public void testSaveButtonEnabled() throws IOException", "diff": ["-     String user = System.getProperty(\"user.name\");", "-     _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "-     File forceOpenClass1_file = new File(_tempDir, \"ForceOpenClass1.java\");", "-     String forceOpenClass1_string =", "-       \"public class ForceOpenClass1 {\\n\" +", "-       \"  ForceOpenClass2 class2;\\n\" +", "-       \"  ForceOpenClass3 class3;\\n\\n\" +", "-       \"  public ForceOpenClass1() {\\n\" +", "-       \"    class2 = new ForceOpenClass2();\\n\" +", "-       \"    class3 = new ForceOpenClass3();\\n\" +", "-       \"  }\\n\" +", "-       \"}\";", "-     FileOps.writeStringToFile(forceOpenClass1_file, forceOpenClass1_string);", "-     forceOpenClass1_file.deleteOnExit();", "-", "-     //_frame.setVisible(true);", "-     _frame.pack();", "-     _frame.open(new FileOpenSelector() {", "-       public File[] getFiles() {", "-         File[] return_me = new File[1];", "-         return_me[0] = new File(_tempDir, \"ForceOpenClass1.java\");", "-         return return_me;", "-       }", "-     });", "-     assertTrue(\"the save button should not be enabled after opening a document\", !_frame.saveEnabledHuh());", "+    String user = System.getProperty(\"user.name\");", "+    _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "+    File forceOpenClass1_file = new File(_tempDir, \"ForceOpenClass1.java\");", "+    String forceOpenClass1_string =", "+      \"public class ForceOpenClass1 {\\n\" +", "+      \"  ForceOpenClass2 class2;\\n\" +", "+      \"  ForceOpenClass3 class3;\\n\\n\" +", "+      \"  public ForceOpenClass1() {\\n\" +", "+      \"    class2 = new ForceOpenClass2();\\n\" +", "+      \"    class3 = new ForceOpenClass3();\\n\" +", "+      \"  }\\n\" +", "+      \"}\";", "+    FileOps.writeStringToFile(forceOpenClass1_file, forceOpenClass1_string);", "+    forceOpenClass1_file.deleteOnExit();", "+    ", "+    //_frame.setVisible(true);", "+    try {", "+      Utilities.invokeAndWait(new Runnable() { ", "+        public void run() {", "+          _frame.pack();", "+          _frame.open(new FileOpenSelector() {", "+            public File[] getFiles() {", "+              File[] return_me = new File[1];", "+              return_me[0] = new File(_tempDir, \"ForceOpenClass1.java\");", "+              return return_me;", "+            }", "+          });", "+        }", "+      });", "+    }", "+    catch(InterruptedException e) { throw new UnexpectedException(e); }                      ", "+    ", "+    assertTrue(\"the save button should not be enabled after opening a document\", !_frame.saveEnabledHuh());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d0e0f3a32410611601357dfe2814b28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "fcb52146fe5952d46eb1cf9b67172e0f75de7a52", "commitAfterChange": "fbab2bd705dc6109a68454696cb8f397eb070aa2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testDancingUIFileClosed() throws IOException", "signatureAfterChange": "   public void testDancingUIFileClosed() throws IOException", "diff": ["-     String user = System.getProperty(\"user.name\");", "-     _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "-     File forceOpenClass1_file = new File(_tempDir, \"ForceOpenClass1.java\");", "-     String forceOpenClass1_string =", "-       \"public class ForceOpenClass1 {\\n\" +", "-       \"  ForceOpenClass2 class2;\\n\" +", "-       \"  ForceOpenClass3 class3;\\n\\n\" +", "-       \"  public ForceOpenClass1() {\\n\" +", "-       \"    class2 = new ForceOpenClass2();\\n\" +", "-       \"    class3 = new ForceOpenClass3();\\n\" +", "-       \"  }\\n\" +", "-       \"}\";", "-", "-     FileOps.writeStringToFile(forceOpenClass1_file, forceOpenClass1_string);", "-     forceOpenClass1_file.deleteOnExit();", "-     ", "-     final ComponentAdapter listener = new ComponentAdapter() {", "-       public void componentResized(ComponentEvent event) {", "-         _testFailed = true;", "-         fail(\"testDancingUI: Open Documents List danced!\");", "-       }", "-     };", "-     final SingleDisplayModelFileClosedListener closeListener = new SingleDisplayModelFileClosedListener();", "-     ", "-     Utilities.invokeLater(new Runnable() { public void run() {", "+    String user = System.getProperty(\"user.name\");", "+    _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "+    File forceOpenClass1_file = new File(_tempDir, \"ForceOpenClass1.java\");", "+    String forceOpenClass1_string =", "+      \"public class ForceOpenClass1 {\\n\" +", "+      \"  ForceOpenClass2 class2;\\n\" +", "+      \"  ForceOpenClass3 class3;\\n\\n\" +", "+      \"  public ForceOpenClass1() {\\n\" +", "+      \"    class2 = new ForceOpenClass2();\\n\" +", "+      \"    class3 = new ForceOpenClass3();\\n\" +", "+      \"  }\\n\" +", "+      \"}\";", "+    ", "+    FileOps.writeStringToFile(forceOpenClass1_file, forceOpenClass1_string);", "+    forceOpenClass1_file.deleteOnExit();", "+    ", "+    final ComponentAdapter listener = new ComponentAdapter() {", "+      public void componentResized(ComponentEvent event) {", "+        _testFailed = true;", "+        fail(\"testDancingUI: Open Documents List danced!\");", "+      }", "+    };", "+    final SingleDisplayModelFileClosedListener closeListener = new SingleDisplayModelFileClosedListener();", "+    ", "+    try {", "+      Utilities.invokeAndWait(new Runnable() { public void run() {", "-       _frame.pack();", "-       _frame.addComponentListenerToOpenDocumentsList(listener);", "-       ", "-       _frame.open(new FileOpenSelector() {", "-         public File[] getFiles() {", "-           File[] return_me = new File[1];", "-           return_me[0] = new File(_tempDir, \"ForceOpenClass1.java\");", "-           return return_me;", "-         }", "-       });", "-       ", "-       _frame.getModel().addListener(closeListener);", "-       _closeDone = false;", "-       ", "-       _frame.getCloseButton().doClick();", "-     }});", "-", "+        _frame.pack();", "+        _frame.addComponentListenerToOpenDocumentsList(listener);", "+        ", "+        _frame.open(new FileOpenSelector() {", "+          public File[] getFiles() {", "+            File[] return_me = new File[1];", "+            return_me[0] = new File(_tempDir, \"ForceOpenClass1.java\");", "+            return return_me;", "+          }", "+        });", "+        ", "+        _frame.getModel().addListener(closeListener);", "+        _closeDone = false;", "+        ", "+        _frame.getCloseButton().doClick();", "+      }});", "+    }", "+    catch(InterruptedException e) { fail(e.toString()); }", "+    ", "-     ", "-     synchronized(_closeLock) {", "-       try { while (! _closeDone) _closeLock.wait(); }", "-       catch(InterruptedException exception) { fail(exception.toString()); }", "-     }", "-", "-     if (! FileOps.deleteDirectory(_tempDir)) {", "-       System.err.println(\"Couldn't fully delete directory \" + _tempDir.getAbsolutePath() +", "-                          \"\\nDo it by hand.\\n\");", "-     }", "+    ", "+    synchronized(_closeLock) {", "+      try { while (! _closeDone) _closeLock.wait(); }", "+      catch(InterruptedException e) { fail(e.toString()); }", "+    }", "+    ", "+    if (! FileOps.deleteDirectory(_tempDir)) {", "+      System.err.println(\"Couldn't fully delete directory \" + _tempDir.getAbsolutePath() +", "+                         \"\\nDo it by hand.\\n\");", "+    }"]}], "num": 600}