{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e32734cd4b411652a1cac6374163820d", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0db23cf1fba112ea11669826f53de534", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "7a16360ed3db92a5068288b3b626cc549d236342", "commitAfterChange": "5a85b19daac40f9227c1d37126d83286ba866a85", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   private void _indent()", "signatureAfterChange": "   private void _indent()", "diff": ["-    _doc.indentLinesInDefinitions(selStart, selEnd);", "-    setCaretPosition(_doc.getCurrentDefinitionsLocation());", "+    ", "+    // Show a wait cursor for reasonable sized blocks", "+    boolean showWaitCursor = selEnd > (selStart + 100);", "+", "+    // Temporary hack because of slow indent...", "+    //  Prompt if more than 2000 characters to be indented", "+    boolean doIndent = true;", "+    if (selEnd > (selStart + 2000)) {", "+      Object[] options = {\"Yes\",\"No\"};", "+      int n = JOptionPane.showOptionDialog", "+        (_mainFrame,", "+         \"Re-indenting this block may take a very long time.  Are you sure?\",", "+         \"Confirm Re-indent\",", "+         JOptionPane.YES_NO_OPTION,", "+         JOptionPane.QUESTION_MESSAGE,", "+         null,", "+         options,", "+         options[1]);", "+      if (n==JOptionPane.NO_OPTION) { doIndent = false; }", "+    }", "+    ", "+    // Do the indent", "+    if (doIndent) {", "+      if (showWaitCursor) {", "+        _mainFrame.hourglassOn();", "+      }", "+      _doc.indentLinesInDefinitions(selStart, selEnd);", "+      setCaretPosition(_doc.getCurrentDefinitionsLocation());", "+      if (showWaitCursor) {", "+        _mainFrame.hourglassOff();", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b65fa1f2869d0e22b5b9a93cc7c2202", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "11baa8cf53a286506909ee582997234b834f9358", "commitAfterChange": "f9b63c51c7bc39c2ca858a18aa7508745f80cf7d", "methodNumberBeforeChange": 372, "methodNumberAfterChange": 372, "signatureBeforeChange": "   private void _warnFileOpen()", "signatureAfterChange": "   private boolean _warnFileOpen(File f)", "diff": ["-  private void _warnFileOpen() {", "-    // If we'd like to change to an error message for this, instead", "-    // of a warning, change both incidents of WARNING to ERROR.", "-    JOptionPane.showMessageDialog(MainFrame.this,", "-                                  \"This file is open in DrJava.  You may not overwrite it.\",", "-                                  \"File Open Warning\", JOptionPane.WARNING_MESSAGE);", "+  private boolean _warnFileOpen(File f) {", "+    Object[] options = {\"Yes\",\"No\"};", "+    int choice = JOptionPane.showOptionDialog(MainFrame.this,", "+                                  \"This file already exists and is open in DrJava.  Do you wish to overwrite it?\",", "+                                  \"File Open Warning\",", "+                                 JOptionPane.YES_NO_OPTION,", "+                                 JOptionPane.QUESTION_MESSAGE,", "+                                 null,", "+                                 options,", "+                                 options[1]);", "+    if(choice == JOptionPane.YES_OPTION) {", "+      List<OpenDefinitionsDocument> l = new LinkedList<OpenDefinitionsDocument>();", "+      try {", "+        l.add(_model.getDocumentForFile(f));", "+      }", "+      catch(IOException ioe) {", "+        _showIOError(ioe);", "+      }", "+      _model.closeFiles(l);", "+      return true;", "+    }", "+    return false;"]}], "num": 12554}