{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8338097ca0fad4e5ed5484ba2f32422e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c93c31365333d28d1bae77d72ad5a46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "b400b9a6647834c824c840f4cbeb6ad51c113120", "commitAfterChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t public void testInsertGapBeforeGap()", "signatureAfterChange": "  \t public void testInsertGapBeforeGap()", "diff": ["-\t\t\tassertTrue(\"#0.0.0\", model1._cursor.atEnd());", "-\t\t\tmodel1._cursor.prev();", "+\t\t\tassertTrue(\"#0.0.0\", model1.getCursor().atEnd());", "+\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertTrue(\"#0.0\", model1._cursor.current().isGap());", "-\t\t\tassertEquals(\"#0.1\", 3, model1._offset);", "-\t\t\tassertEquals(\"#0.2\", 6, model1._cursor.current().getSize());", "-\t\t\tassertTrue(\"#0.3\", model1._cursor.atFirstItem());", "-\t\t\tassertTrue(\"#0.4\", model1._cursor.atLastItem());", "-\t\t\tmodel1._cursor.prev();", "-\t\t\tmodel1._offset = 0; // now pointing to head.  move(int) will take", "+\t\t\tassertTrue(\"#0.0\", model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#0.1\", 3, model1.getBlockOffset());", "+\t\t\tassertEquals(\"#0.2\", 6, model1.getCursor().current().getSize());", "+\t\t\tassertTrue(\"#0.3\", model1.getCursor().atFirstItem());", "+\t\t\tassertTrue(\"#0.4\", model1.getCursor().atLastItem());", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.setBlockOffset(0); // now pointing to head.  move(int) will take", "-\t\t\tassertTrue(\"#1.0\", model1._cursor.current().isGap());", "-\t\t\tassertEquals(\"#1.1\", 2, model1._offset);", "-\t\t\tassertEquals(\"#1.2\", 8, model1._cursor.current().getSize());", "-\t\t\tassertTrue(\"#1.3\", model1._cursor.atFirstItem());", "-\t\t\tassertTrue(\"#1.4\", model1._cursor.atLastItem());\t\t\t", "+\t\t\tassertTrue(\"#1.0\", model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#1.1\", 2, model1.getBlockOffset());", "+\t\t\tassertEquals(\"#1.2\", 8, model1.getCursor().current().getSize());", "+\t\t\tassertTrue(\"#1.3\", model1.getCursor().atFirstItem());", "+\t\t\tassertTrue(\"#1.4\", model1.getCursor().atLastItem());\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d2a9abf8d0a84acc77417bf1fac0c7b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "b400b9a6647834c824c840f4cbeb6ad51c113120", "commitAfterChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t public void testInsertGapBeforeGap()", "signatureAfterChange": "  \t public void testInsertGapBeforeGap()", "diff": ["-\t\t\tassertTrue(\"#0.0.0\", model1._cursor.atEnd());", "-\t\t\tmodel1._cursor.prev();", "+\t\t\tassertTrue(\"#0.0.0\", model1.getCursor().atEnd());", "+\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertTrue(\"#0.0\", model1._cursor.current().isGap());", "-\t\t\tassertEquals(\"#0.1\", 3, model1._offset);", "-\t\t\tassertEquals(\"#0.2\", 6, model1._cursor.current().getSize());", "-\t\t\tassertTrue(\"#0.3\", model1._cursor.atFirstItem());", "-\t\t\tassertTrue(\"#0.4\", model1._cursor.atLastItem());", "-\t\t\tmodel1._cursor.prev();", "-\t\t\tmodel1._offset = 0; // now pointing to head.  move(int) will take", "+\t\t\tassertTrue(\"#0.0\", model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#0.1\", 3, model1.getBlockOffset());", "+\t\t\tassertEquals(\"#0.2\", 6, model1.getCursor().current().getSize());", "+\t\t\tassertTrue(\"#0.3\", model1.getCursor().atFirstItem());", "+\t\t\tassertTrue(\"#0.4\", model1.getCursor().atLastItem());", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tmodel1.setBlockOffset(0); // now pointing to head.  move(int) will take", "-\t\t\tassertTrue(\"#1.0\", model1._cursor.current().isGap());", "-\t\t\tassertEquals(\"#1.1\", 2, model1._offset);", "-\t\t\tassertEquals(\"#1.2\", 8, model1._cursor.current().getSize());", "-\t\t\tassertTrue(\"#1.3\", model1._cursor.atFirstItem());", "-\t\t\tassertTrue(\"#1.4\", model1._cursor.atLastItem());\t\t\t", "+\t\t\tassertTrue(\"#1.0\", model1.getCursor().current().isGap());", "+\t\t\tassertEquals(\"#1.1\", 2, model1.getBlockOffset());", "+\t\t\tassertEquals(\"#1.2\", 8, model1.getCursor().current().getSize());", "+\t\t\tassertTrue(\"#1.3\", model1.getCursor().atFirstItem());", "+\t\t\tassertTrue(\"#1.4\", model1.getCursor().atLastItem());\t\t\t"]}], "num": 7486}