{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46feff9554b16632ccfee1b3e0db230c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23243264b0f1d0bd6fefa1f8666bd0d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "7c4507413beb0e75cdce1379ffec8d0279bed992", "commitAfterChange": "d1bf0f940bc3d914d8d8293a0e85760984d7b371", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void _init()", "signatureAfterChange": "     private void _init()", "diff": ["-      public Boolean itemCase(OpenDefinitionsDocument doc) {", "+      public Boolean itemCase(OpenDefinitionsDocument doc, Object... p) {", "+        Boolean modelInitiated = (Boolean)p[0];", "+//        if (!modelInitiated) {", "+//          IDocumentNavigator.LOG.log(\"_gainVisitor; modelInitiated = false\");", "+//        }", "+        if (!modelInitiated) { addToBrowserHistory(); }", "+        if (!modelInitiated) { addToBrowserHistory(); }", "-      public Boolean fileCase(File f) {", "+      public Boolean fileCase(File f, Object... p) {", "-      public Boolean stringCase(String s) { return Boolean.valueOf(false); }", "+      public Boolean stringCase(String s, Object... p) { return Boolean.valueOf(false); }", "-      public void gainedSelection(NodeData<? extends OpenDefinitionsDocument> dat) { dat.execute(_gainVisitor); }", "-      public void lostSelection(NodeData<? extends OpenDefinitionsDocument> dat) {", "-      // not important, only one document selected at a time", "-      }", "+      public void gainedSelection(NodeData<? extends OpenDefinitionsDocument> dat, boolean modelInitiated) {", "+        dat.execute(_gainVisitor, modelInitiated); }", "+      public void lostSelection(NodeData<? extends OpenDefinitionsDocument> dat, boolean modelInitiated) {", "+        /* not important, only one document selected at a time */ }", "-    clipboardHistorySizeListener.optionChanged(new OptionEvent<Integer>(CLIPBOARD_HISTORY_SIZE,", "-                                                                        DrJava.getConfig().getSetting(CLIPBOARD_HISTORY_SIZE).intValue()));", "+    ClipboardHistoryModel.singleton().resize(DrJava.getConfig().getSetting(CLIPBOARD_HISTORY_SIZE).intValue());", "+    ", "+    // setup option listener for browser history", "+    OptionListener<Integer> browserHistoryMaxSizeListener = new OptionListener<Integer>() {", "+      public void optionChanged(OptionEvent<Integer> oce) {", "+        AbstractGlobalModel.this.getBrowserHistoryManager().setMaximumSize(oce.value);", "+      }", "+    };", "+    DrJava.getConfig().addOptionListener(BROWSER_HISTORY_MAX_SIZE, browserHistoryMaxSizeListener);", "+    getBrowserHistoryManager().setMaximumSize(DrJava.getConfig().getSetting(BROWSER_HISTORY_MAX_SIZE).intValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b91365f5d4a887f183997e12bec8edf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "065b1e3954d46e1086ba2f867744163daf14462d", "commitAfterChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    // The OptionListener for LIGHTWEIGHT_PARSING_ENABLED.", "-    OptionListener<Boolean> parsingEnabledListener = new OptionListener<Boolean>() {", "-      public void optionChanged(OptionEvent<Boolean> oce) {", "-        if (oce.value) {", "-          _model.getParsingControl().addListener(new LightWeightParsingListener() {", "-            public void enclosingClassNameUpdated(OpenDefinitionsDocument doc, String old, String updated) {", "-              if (doc==_model.getActiveDocument()) { updateFileTitle(); }", "-            }", "-          });", "-        }", "-        _model.getParsingControl().reset();", "-        _model.getParsingControl().setAutomaticUpdates(oce.value);", "-        updateFileTitle();", "-      }", "-    };", "-    DrJava.getConfig().addOptionListener(LIGHTWEIGHT_PARSING_ENABLED, parsingEnabledListener);", "-    parsingEnabledListener.optionChanged(new OptionEvent<Boolean>(LIGHTWEIGHT_PARSING_ENABLED, ", "-                                                                  DrJava.getConfig().getSetting(LIGHTWEIGHT_PARSING_ENABLED).booleanValue()));", "+// Any lightweight parsing has been disabled until we have something that is beneficial and works better in the background.", "+//    // The OptionListener for LIGHTWEIGHT_PARSING_ENABLED.", "+//    OptionListener<Boolean> parsingEnabledListener = new OptionListener<Boolean>() {", "+//      public void optionChanged(OptionEvent<Boolean> oce) {", "+//        if (oce.value) {", "+//          _model.getParsingControl().addListener(new LightWeightParsingListener() {", "+//            public void enclosingClassNameUpdated(OpenDefinitionsDocument doc, String old, String updated) {", "+//              if (doc==_model.getActiveDocument()) { updateFileTitle(); }", "+//            }", "+//          });", "+//        }", "+//        _model.getParsingControl().reset();", "+//        _model.getParsingControl().setAutomaticUpdates(oce.value);", "+//        updateFileTitle();", "+//      }", "+//    };", "+//    DrJava.getConfig().addOptionListener(LIGHTWEIGHT_PARSING_ENABLED, parsingEnabledListener);", "+//    parsingEnabledListener.optionChanged(new OptionEvent<Boolean>(LIGHTWEIGHT_PARSING_ENABLED, ", "+//                                                                  DrJava.getConfig().getSetting(LIGHTWEIGHT_PARSING_ENABLED).booleanValue()));"]}], "num": 1758}