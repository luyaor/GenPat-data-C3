{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e03c9730e2b658d52d258592ea69c34", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6834ef170270c821c023b5ed31728bf5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileBuilder.java", "commitBeforeChange": "dd27d69f437c114ad258abba00f7d581b096ce79", "commitAfterChange": "1e852b550a8b69787c9e44248d928487d0bf9f6e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException", "signatureAfterChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative, boolean hasDate) throws IOException", "diff": ["-  private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException {", "+  private String encodeDocFile(DocFile df, String prefix, boolean relative, boolean hasDate) throws IOException {", "-    ", "+    long modDate = df.lastModified();", "+    }", "+    if (hasDate && modDate > 0) {", "+      String s = new SimpleDateFormat(\"dd-MMM-yyyy HH:mm:ss\").format(new Date(modDate));", "+      ret += \"(mod-date \" + convertToLiteral(s) + \")\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3423ec06775d960d774f2668108bd6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "e7660fffdb51451a3d4a61981945f6529addb874", "commitAfterChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 49, "signatureBeforeChange": "   private String encodeBookmarkRelative(DocumentRegion bp, String prefix) throws IOException", "signatureAfterChange": "   private String encodeBookmarkRelative(DocumentRegion bm, String prefix) throws IOException", "diff": ["-  private String encodeBookmarkRelative(DocumentRegion bp, String prefix) throws IOException {", "+  private String encodeBookmarkRelative(DocumentRegion bm, String prefix) throws IOException {", "-    String path = FileOps.makeRelativeTo(bp.getDocument().getFile(), _projectRoot).getPath();", "+    String path = FileOps.makeRelativeTo(bm.getFile(), _projectRoot).getPath();", "-    int startOffset = bp.getStartOffset();", "-    int endOffset = bp.getEndOffset();", "+    int startOffset = bm.getStartOffset();", "+    int endOffset = bm.getEndOffset();"]}], "num": 28093}