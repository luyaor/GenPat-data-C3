{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "639dd998ea631113afa74fb43d331a7c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c7efd059202c58f8677a541c6d81105", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 121, "signatureBeforeChange": "   public void quit()", "signatureAfterChange": "   public void quit()", "diff": ["-  /** Exits the program.  Only quits if all documents are successfully closed. */", "+  /** Exits the program.  Quits regardless of whether all documents are successfully closed. */", "-    if (closeAllFilesOnQuit()) {", "-      dispose();  // kills the interpreter", "-", "-      if (DrJava.getSecurityManager() != null) DrJava.getSecurityManager().exitVM(0);", "-      else System.exit(0); // If we are being debugged by another copy of DrJava,", "-                           // then we have no security manager.  Just exit cleanly.", "-        ", "-    }", "+    closeAllFilesOnQuit();", "+    dispose();  // kills the interpreter", "+    ", "+    if (DrJava.getSecurityManager() != null) DrJava.getSecurityManager().exitVM(0);", "+    else System.exit(0); // If we are being debugged by another copy of DrJava,", "+    // then we have no security manager.  Just exit cleanly."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6534f1d168b1781fe39f504b95f6e66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "481944e3395dcc7a19e81902c59977be65ba633a", "commitAfterChange": "c682fca099b13e765e0e1f201629222d04fb1339", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 128, "signatureBeforeChange": "   public OpenDefinitionsDocument getODDForDocument(AbstractDocumentInterface doc)", "signatureAfterChange": "   public OpenDefinitionsDocument getODDForDocument(AbstractDocumentInterface doc)", "diff": ["-    if (doc instanceof OpenDefinitionsDocument) return (OpenDefinitionsDocument)doc;", "-    if (! (doc instanceof DefinitionsDocument) ) {", "-      throw new IllegalStateException(\"Could not get the OpenDefinitionsDocument for Document: \" + doc);", "-    }", "-    return ((DefinitionsDocument)doc).getOpenDefDoc();", "+    if (doc instanceof OpenDefinitionsDocument) return (OpenDefinitionsDocument) doc;", "+    if  (doc instanceof DefinitionsDocument) return ((DefinitionsDocument) doc).getOpenDefDoc();", "+    throw new IllegalStateException(\"Could not get the OpenDefinitionsDocument for Document: \" + doc);"]}], "num": 7037}