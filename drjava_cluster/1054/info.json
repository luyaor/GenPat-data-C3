{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42b35bc7ef083ee382f489987a01b729", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f5222939ab778037bfa816f4d618950", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c3686d18afe86d8459a6ef71e5f779589d915dd8", "commitAfterChange": "1e5237b2401d25a04c08b7b54162568a6d55c836", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 183, "signatureBeforeChange": "     private void _setUpPanes()", "signatureAfterChange": "     private void _setUpPanes()", "diff": ["-        _debugPanel.setPreferredSize(_debugPanel.getMinimumSize());", "+        ", "+        // Set the panel's size.", "+        int debugHeight = ", "+          DrJava.getConfig().getSetting(DEBUG_PANEL_HEIGHT).intValue();", "+        Dimension debugMinSize = _debugPanel.getMinimumSize();", "+        ", "+        // TODO: check bounds compared to entire window.", "+        if ((debugHeight > debugMinSize.height)) {", "+          debugMinSize.height = debugHeight;", "+        }", "+        _debugPanel.setPreferredSize(debugMinSize);", "-    _mainSplit.setDividerLocation(2*getHeight()/3);", "+//    int tabHeight = DrJava.getConfig().getSetting(TABS_HEIGHT).intValue();", "+    ", "+    // 2*getHeight()/3", "+    _mainSplit.setDividerLocation(_mainSplit.getHeight() - 132);", "+//    _mainSplit.setDividerLocation(_mainSplit.getHeight() - tabHeight);", "-    _docSplitPane.setDividerLocation(DOC_LIST_WIDTH);", "+    ", "+    int docListWidth = DrJava.getConfig().getSetting(DOC_LIST_WIDTH).intValue();", "+    ", "+    // TODO: Check bounds.", "+    _docSplitPane.setDividerLocation(docListWidth);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65347710e22ed55849e828ddd70cfe9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a64d259eb205583970c69af64c3cca967dd81a0f", "commitAfterChange": "9be84f23a860532e5852c80be2ef2d01c63b33b7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DefinitionsDocument(GlobalEventNotifier notifier)", "signatureAfterChange": "   public DefinitionsDocument(GlobalEventNotifier notifier)", "diff": ["-  public DefinitionsDocument(GlobalEventNotifier notifier) {", "-    this(DefaultGlobalModel.INDENTER, notifier);", "+   */", "+  public DefinitionsDocument(GlobalEventNotifier notifier) {", "+", "+    _notifier = notifier;", "+", "+    // Create the indenter from the config values", "+    int ind = DrJava.getConfig().getSetting(INDENT_LEVEL).intValue();", "+    _indenter = new Indenter(ind);", "+    DrJava.getConfig().addOptionListener(INDENT_LEVEL,", "+                                         new OptionListener<Integer>() {", "+      public void optionChanged(OptionEvent<Integer> oce) {", "+        _indenter.buildTree(oce.value.intValue());", "+      }", "+    });", "+    DrJava.getConfig().addOptionListener(AUTO_CLOSE_COMMENTS,", "+                                         new OptionListener<Boolean>() {", "+      public void optionChanged(OptionEvent<Boolean> oce) {", "+        _indenter.buildTree(DrJava.getConfig().getSetting(INDENT_LEVEL).intValue());", "+      }", "+    });", "+", "+    _init();", "+  }"]}], "num": 1054}