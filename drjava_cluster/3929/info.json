{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61614c649e29aecf9b10be93e9d02186", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cb1189ac50a992ad826863cc4af0d46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "e69ba1eec2cb635c70a9fe0a1398fd66d2a7ddb9", "commitAfterChange": "521b5a6ad4ead519c4e7d942bbf2dde99a3dae4b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 34, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["+      final boolean docChanged = ! matchDoc.equals(openDoc);", "-         if (! matchDoc.equals(openDoc)) _model.setActiveDocument(matchDoc);  // set active doc if matchDoc != openDoc", "+         if (docChanged) _model.setActiveDocument(matchDoc);  // set active doc if matchDoc != openDoc", "-        // defer executing this code until after active document switch (if any) is complete", "-        SwingUtilities.invokeLater(new Runnable() {", "+        final Runnable command = new Runnable() {", "-          }});", "+          } };", "+        ", "+        if (docChanged)", "+          // defer executing this code until after active document switch is complete", "+          SwingUtilities.invokeLater(command);", "+        else command.run();", "-    if (!DrJava.getConfig().getSetting(OptionConstants.FIND_REPLACE_FOCUS_IN_DEFPANE).booleanValue()) {", "+    if (! DrJava.getConfig().getSetting(OptionConstants.FIND_REPLACE_FOCUS_IN_DEFPANE).booleanValue()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4f182b7de94558ad84402e87c8a0ebe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 468, "methodNumberAfterChange": 464, "signatureBeforeChange": "   public void scrollToDocumentAndOffset(final OpenDefinitionsDocument doc, final int offset,                                          final boolean shouldHighlight, final boolean shouldAddToHistory)", "signatureAfterChange": "   public void scrollToDocumentAndOffset(final OpenDefinitionsDocument doc, final int offset,                                          final boolean shouldHighlight, final boolean shouldAddToHistory)", "diff": ["-    if (!_model.getActiveDocument().equals(doc)) {", "+    boolean toSameDoc = _model.getActiveDocument().equals(doc);", "+    ", "+    if (! toSameDoc) {", "-    SwingUtilities.invokeLater(new Runnable() {  ", "+    Runnable command = new Runnable() {  ", "-        ", "-        /* The execution of this block of code is deferred using SwingUtilties to fix bug #1243993.", "-         * It is not clear why this deferral works.", "-         * Comment by mgricken: Probably because the _currentDefPane hasn't been created yet for", "-         * a new document. That's why I had to move the code above into this Runnable. If this", "-         * method was called for a yet unseen document, the document would be switched, but the cursor", "-         * would not be positioned correctly. */", "+               ", "-    });", "+    };", "+    ", "+    /* Comment by mgricken: If ! toSameDoc, the _currentDefPane hasn't been created yet for a new document.   ", "+     * Consequently, we need to use SwingUtilities.invokeLater if ! toSameDoc. */", "+    if (toSameDoc) Utilities.invokeLater(command);  ", "+    else SwingUtilities.invokeLater(command);"]}], "num": 3929}