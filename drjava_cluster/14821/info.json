{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d2b0d8e41a2c80b3b9922fb5fd16b1a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56de7a841947c0e0da14ebb38479485e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "3128b34625edff5cab8d9e6ffbefd636ec646e03", "commitAfterChange": "199e047b938086cdc5d6842c124eb2c446a7e7b1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public FindReplaceDialog(MainFrame frame, SingleDisplayModel model)", "signatureAfterChange": "   public FindReplaceDialog(MainFrame frame, SingleDisplayModel model)", "diff": ["+    _mainframe = frame;", "+    /********* Lower Button Panel Initialization ********/", "-    _message = new JLabel(\"\");", "+    _message = new JLabel(\"\"); // JL", "-", "-    Font font = DrJava.getConfig().getSetting(FONT_MAIN);", "-    setFieldFont(font);", "-", "+    /******** Text Field Initializations ********/", "+    // Sets font for the \"Find\" field", "+    Font font = DrJava.getConfig().getSetting(FONT_MAIN);", "+    setFieldFont(font);", "+    ", "+    // Create the Labels", "-    JLabel matchLabel = new JLabel(\"Match\", SwingConstants.LEFT);", "-    matchLabel.setHorizontalAlignment(SwingConstants.LEFT);", "+    //JLabel matchLabel = new JLabel(\"Match\", SwingConstants.LEFT); // JL", "+    //matchLabel.setHorizontalAlignment(SwingConstants.LEFT);  // JL", "-    _labelPanel = new JPanel(new GridLayout(0,1));", "+    _labelPanel = new JPanel(new GridLayout(2,1));", "-    _labelPanel.add(matchLabel);", "+    // _labelPanel.add(matchLabel); // JL", "+    ", "+    /******** Listeners for the right-hand check boxes ********/", "-    _matchCase = new JCheckBox(\"Match Case\", true);", "+    _matchCase = new JCheckBox(\"Match Case \", true);", "-    _searchBackwards = new JCheckBox(\"Search Backwards\", false);", "+    _searchBackwards = new JCheckBox(\"Search Backwards  \", false);", "-", "+    ", "-    _matchWholeWord = new JRadioButton(\"Whole Word\");", "-    _matchWholeWord.addActionListener(mwwl);", "+    _matchWholeWord = new JCheckBox(\"Whole Word\");// new JRadioButton(\"Whole Word\"); // JL", "+    _matchWholeWord.addItemListener(mwwl);", "-    FindAnyOccurrenceListener faol = new FindAnyOccurrenceListener();", "-    _findAnyOccurrence = new JRadioButton(\"Any Occurrence\");", "-    _findAnyOccurrence.addActionListener(faol);", "+    //FindAnyOccurrenceListener faol = new FindAnyOccurrenceListener(); // JL", "+    //_findAnyOccurrence = new JRadioButton(\"Any Occurrence\"); // JL", "+    //_findAnyOccurrence.addActionListener(faol); // JL", "+    ", "+    /******** Initialize the panels containing the checkboxes ********/", "-", "-    _radioButtonPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0));", "-    _radioButtonPanel.add(_matchWholeWord);", "-    _radioButtonPanel.add(_findAnyOccurrence);", "+    _lowerCheckPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0));", "+    _lowerCheckPanel.add(_matchWholeWord);", "+    _lowerCheckPanel.add(_searchAllDocuments); // JL (added)", "+    //_lowerCheckPanel.add(_findAnyOccurrence); // JL", "-    _radioButtonGroup = new ButtonGroup();", "-    _radioButtonGroup.add(_matchWholeWord);", "-    _radioButtonGroup.add(_findAnyOccurrence);", "+    //_radioButtonGroup = new ButtonGroup(); // JL", "+    //_radioButtonGroup.add(_matchWholeWord); // JL", "+    //_radioButtonGroup.add(_findAnyOccurrence); // JL", "-    _matchCaseAndClosePanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 0, 0));", "-    _matchCaseAndClosePanel.add(_matchCase);", "-    _matchCaseAndClosePanel.add(_searchBackwards);", "-    _matchCaseAndClosePanel.add(_searchAllDocuments);", "+    _matchCaseAndClosePanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0));", "+    _matchCaseAndClosePanel.add(_matchCase); // JL", "+    _matchCaseAndClosePanel.add(_searchBackwards); // JL", "+    //_matchCaseAndClosePanel.add(_searchAllDocuments); // JL - moved to _radioButtonGroup", "-    //_matchCaseAndClosePanel.add(_findAnyOccurrence);", "+    //_matchCaseAndClosePanel.add(_findAnyOccurrence); ", "+    //_findAnyOccurrence.setSelected(true); // JL", "-    _findAnyOccurrence.setSelected(true);", "-", "-//    _rightPanel = new JPanel(new GridLayout(1,2,5,0));", "-    JPanel midPanel = new JPanel(new GridLayout(3,1));", "+    ", "+    /******** Set up the Panel containing the Text Fields ********/", "+    //_rightPanel = new JPanel(new GridLayout(1,2,5,0));", "+    JPanel midPanel = new JPanel(new GridLayout(2,1));", "-    midPanel.add(wrap(_radioButtonPanel));", "+    //midPanel.add(_message); // JL", "+    // midPanel.add(wrap(_lowerCheckPanel)); // JL", "+    /******** Set up the Panel containing both rows of checkboxes ********/", "-    farRightPanel.add(_message);", "+    farRightPanel.add(_lowerCheckPanel); // JL", "+    //farRightPanel.add(_message); // JL", "+    ", "+    ", "+    /******** Set upt the Panel containing the two above main panels ********/", "-    //_rightPanel.add(_radioButtonPanel, BorderLayout.SOUTH);", "+    //_rightPanel.add(_lowerCheckPanel, BorderLayout.SOUTH);", "+    ", "+    /******* Put all the main panels onto the Find/Replace tab ********/", "+    ", "+    ", "+    /******** Set the Tab order ********/", "-    _searchBackwards.setNextFocusableComponent(_searchAllDocuments);", "-    _searchAllDocuments.setNextFocusableComponent(_matchWholeWord);", "-    _matchWholeWord.setNextFocusableComponent(_findAnyOccurrence);", "-    _findAnyOccurrence.setNextFocusableComponent(_findNextButton);", "+    _searchBackwards.setNextFocusableComponent(_matchWholeWord); // JL (edited)", "+    _matchWholeWord.setNextFocusableComponent(_searchAllDocuments); // JL (edited)", "+    _searchAllDocuments.setNextFocusableComponent(_findNextButton); // JL (edited)", "+    //_findAnyOccurrence.setNextFocusableComponent(_findNextButton); // JL", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a3c0958fac8a6d5c5e0099fcf9d0fbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 77, "signatureBeforeChange": "          public void testForClassDef()", "signatureAfterChange": "          public void testForClassDef()", "diff": ["-                                 new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"Object\", new Type[0]), new ReferenceType[0], ", "+                                 new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), new ReferenceType[0], ", "-      Lisa.setSuperClass(new SymbolData(\"super\", _publicMav, new TypeParameter[0], null, new LinkedList<SymbolData>(), null));", "+      Lisa.setSuperClass(new SymbolData(\"super\", _publicMav, new TypeParameter[0], null, new ArrayList<SymbolData>(), null));", "-      sd2.setIsContinuation(false);", "-      sd2.setMav(_publicMav);", "-      sd2.setPackage(\"java.lang\");", "-      MethodData objMd = new MethodData(\"Object\", _publicMav, new TypeParameter[0], sd2, new VariableData[0], new String[0], sd2, cd);", "+//      sd2.setIsContinuation(false);", "+//      sd2.setMav(_publicMav);", "+//      sd2.setPackage(\"java.lang\");", "+      MethodData objMd = new MethodData(\"java.lang.Object\", _publicMav, new TypeParameter[0], sd2, new VariableData[0], new String[0], sd2, cd);", "-      sd.setInterfaces(new LinkedList<SymbolData>());", "+      sd.setInterfaces(new ArrayList<SymbolData>());", "-      SymbolData t = new SymbolData(\"junit.framework.TestCase\");", "-      t.setIsContinuation(false);", "-      t.setMav(_publicMav);", "-      t.setPackage(\"junit.framework\");", "-      symbolTable.remove(\"junit.framework.TestCase\");", "-      symbolTable.put(\"junit.framework.TestCase\", t);", "-      sd.setSuperClass(t);", "+      ", "+      SymbolData testCase = defineTestCaseClass();", "+      sd.setSuperClass(testCase);", "+      ", "-      _btc._file=new File(\"Hspia.dj0\");", "+      _btc._file = new File(\"Hspia.dj0\");", "-      t = new SymbolData(\"junit.framework.TestCase\");", "-      t.setIsContinuation(false);", "-      t.setMav(_publicMav);", "-      t.setPackage(\"junit.framework\");", "-      symbolTable.remove(\"junit.framework.TestCase\");", "-      symbolTable.put(\"junit.framework.TestCase\", t);", "-      sd.setSuperClass(t);", "+      ", "+//      SymbolData testCase = defineTestCase();", "+//      symbolTable.put(\"junit.framework.TestCase\", testCase);", "+//      sd.setSuperClass(testCase);", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdcef00dad52c3eee9125f07aab6235b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/PreviewFrame.java", "commitBeforeChange": "5eee0c89bee0b23fafd1958419240f8dd5f380ee", "commitAfterChange": "0c95fc4366bd5654ddd2a4c942b1634c96be89c8", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 30, "signatureBeforeChange": "   private void _setUpToolBar()", "signatureAfterChange": "   private void _setUpToolBar()", "diff": ["-    zoomSlider.setPaintLabels(true);", "+    _zoomSlider.setPaintLabels(true);", "+    _zoomSlider.setLabelTable(_zoomSlider.createStandardLabels(100));", "-    Hashtable<Integer, JLabel> table = new Hashtable<Integer, JLabel>();", "-    table.put (  0, new JLabel(\"0\"));", "-    table.put ( 25, new JLabel(\"25\"));", "-    table.put ( 50, new JLabel(\"50\"));", "-    table.put ( 75, new JLabel(\"75\"));", "-    table.put (100, new JLabel(\"100\"));", "-    table.put (125, new JLabel(\"125\"));", "-    table.put (150, new JLabel(\"150\"));", "-    table.put (175, new JLabel(\"175\"));", "-    table.put (200, new JLabel(\"200\"));", "-    zoomSlider.setLabelTable (table);", "-    ", "-    zoomSlider.addChangeListener(new ChangeListener() {", "+    _zoomSlider.addChangeListener(new ChangeListener() {", "-        if (!slider.getValueIsAdjusting()) {", "-          smoothZoom(slider.getValue());", "-        } else {", "-          fastZoom(slider.getValue());", "-        }", "+        setZoom(slider.getValue(), slider.getValueIsAdjusting());", "-    _toolBar.add(zoomSlider);", "+    _toolBar.add(_zoomSlider);"]}], "num": 14821}