{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45bd579e341a4cfb889ef1e6dece6067", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "264c3c1f0491b51c1515915ee84abdf8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ConstructorDeclaration.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ConstructorDeclaration(int flags, String name,                                 List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                 ConstructorInvocation eci, List<Node> stmts,                                 String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ConstructorDeclaration(int flags, String name,                                 List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                 ConstructorCall eci, List<Node> stmts,                                 String fn, int bl, int bc, int el, int ec)", "diff": ["-                                ConstructorInvocation eci, List<Node> stmts,", "+                                ConstructorCall eci, List<Node> stmts,", "-    exceptions            = new LinkedList<String>();", "-", "-    ListIterator<? extends ReferenceTypeName> it = excepts.listIterator();", "-    while (it.hasNext()) {", "-      exceptions.add(it.next().getRepresentation());", "-    }", "+    exceptions            = excepts;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fafbd59a7451543d104ab0ac36c2fbd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk16/edu/rice/cs/drjava/model/compiler/Javac160Compiler.java", "commitBeforeChange": "0d0c5947e7ead7115690128690c9c431a119fb4d", "commitAfterChange": "e65e40659fdfd375a763123b318964023ee18036", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public List<? extends CompilerError> compile(List<? extends File> files, List<? extends File> classPath,                                                 List<? extends File> sourcePath, File destination,                                                 List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "signatureAfterChange": "   public List<? extends CompilerError> compile(List<? extends File> files, List<? extends File> classPath,                                                 List<? extends File> sourcePath, File destination,                                                 List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "diff": ["+    if (_filterExe) {", "+      FileFilter filter = IOUtil.extensionFileFilter(\"exe\");", "+      Iterator<? extends File> i = classPath.iterator();", "+      while (i.hasNext()) {", "+        if (filter.accept(i.next())) { i.remove(); }", "+      }", "+    }"]}], "num": 22240}