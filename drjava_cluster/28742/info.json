{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d1f3fd81f695521efc69bfea3574279", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e735b8346331bd7565910f955032c13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "      public String toString()", "diff": ["-  public String toString() { return _model.toString(); } ", "+  ", "+  public String toString() { synchronized (_model) { return _model.toString(); } }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "243403278b62e750fd4b96f8f3b692ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public synchronized INavigatorItem getPrevious(INavigatorItem doc)", "signatureAfterChange": "   public INavigatorItem getPrevious(INavigatorItem doc)", "diff": ["-  public synchronized INavigatorItem getPrevious(INavigatorItem doc) {", "-    DefaultMutableTreeNode node = _doc2node.get(doc);", "-    // TODO: check for \"package\" case", "-    DefaultMutableTreeNode prev = node.getPreviousLeaf();", "-    if (prev == null || prev == _model.getRoot()) return doc;", "-    return  (INavigatorItem) prev.getUserObject();", "+  public INavigatorItem getPrevious(INavigatorItem doc) {", "+    ", "+    synchronized (_model) {", "+      DefaultMutableTreeNode node = _doc2node.get(doc);", "+      // TODO: check for \"package\" case", "+      DefaultMutableTreeNode prev = node.getPreviousLeaf();", "+      if (prev == null || prev == _model.getRoot()) return doc;", "+      return  (INavigatorItem) prev.getUserObject();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4061208d820365bea4d005eb765b6afe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "f5e6f060cad653c11888e30b69842047d7693a32", "commitAfterChange": "dba0ccac56f5e3245b525afd7781147d259a9d94", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void addNavigationListener(INavigationListener listener)", "signatureAfterChange": "   public void addNavigationListener(INavigationListener listener)", "diff": ["-  public void addNavigationListener(INavigationListener listener) { navListeners.add(listener); }", "+  public void addNavigationListener(INavigationListener listener) { ", "+    synchronized(_model) { navListeners.add(listener); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4314b69a71e81bb87f473a5d33cc5730", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public synchronized void clear()", "signatureAfterChange": "   public void clear()", "diff": ["-  public synchronized void clear() { ", "-    _doc2node.clear();", "-    ((DefaultMutableTreeNode)_model.getRoot()).removeAllChildren();", "+  public void clear() { ", "+    synchronized (_model) {", "+      _doc2node.clear();", "+      ((DefaultMutableTreeNode)_model.getRoot()).removeAllChildren();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ef0ab345a6d2baef74cd071e51e3342", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "8a6aa1a4952b620a2a0738d8a36f5b0059482f99", "commitAfterChange": "ddbef72a194d17966584ef9d18603b05f8480094", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "       private LeafNode getNodeForDoc(INavigatorItem doc)", "signatureAfterChange": "       private LeafNode getNodeForDoc(INavigatorItem doc)", "diff": ["-  private LeafNode getNodeForDoc(INavigatorItem doc) { return _doc2node.get(doc); }", "+  private LeafNode getNodeForDoc(INavigatorItem doc) { ", "+    synchronized(_model) { return _doc2node.get(doc); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52f639802af7db0f1e4f9449f739eb85", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public synchronized boolean contains(INavigatorItem doc)", "signatureAfterChange": "   public boolean contains(INavigatorItem doc)", "diff": ["-  public synchronized boolean contains(INavigatorItem doc) { return _doc2node.containsKey(doc); }", "+  public boolean contains(INavigatorItem doc) { ", "+    synchronized (_model) {", "+      return _doc2node.containsKey(doc); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "560e1db88e992f3489f25f3398a1a161", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void clear()", "signatureAfterChange": "   public void clear()", "diff": ["-  public void clear() { _model.clear(); }", "+  public void clear() { ", "+    synchronized(_model) { _model.clear(); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64093876809f4bd86c81f8daff067293", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public synchronized void requestSelectionUpdate(INavigatorItem ini)", "signatureAfterChange": "   public void requestSelectionUpdate(INavigatorItem ini)", "diff": ["-   */", "-  public synchronized void requestSelectionUpdate(INavigatorItem ini) {", "-    if (getCurrentSelectedLeaf() == null) { // the currently selected node is not a leaf", "-      setActiveDoc(ini);", "+  /** If the currently selected item is not an INavigatorItem, select the one given. */", "+  public void requestSelectionUpdate(INavigatorItem ini) {", "+    synchronized (_model) {", "+      if (getCurrentSelectedLeaf() == null) { // the currently selected node is not a leaf", "+        setActiveDoc(ini);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6be3f09df10e0ae957ca2c7c27f9ced3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public synchronized boolean isGroupSelected()", "signatureAfterChange": "   public boolean isGroupSelected()", "diff": ["-   */", "-  public synchronized boolean isGroupSelected() {", "-    TreePath p = getSelectionPath();", "-    TreeNode n = (TreeNode) p.getLastPathComponent();", "-    return (n instanceof InnerNode);", "+  /** @return true if a group if INavigatorItems selected */", "+  public boolean isGroupSelected() {", "+    synchronized (_model) {", "+      TreePath p = getSelectionPath();", "+      TreeNode n = (TreeNode) p.getLastPathComponent();", "+      return (n instanceof InnerNode);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c35bdbe229c1e939f9f591863770332", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 47, "signatureBeforeChange": "      synchronized void collapsePaths(HashSet<String> paths)", "signatureAfterChange": "      void collapsePaths(HashSet<String> paths)", "diff": ["-  synchronized void collapsePaths(HashSet<String> paths) {", "-    DefaultMutableTreeNode rootNode = (DefaultMutableTreeNode)_model.getRoot();", "-    Enumeration<TreeNode> nodes = rootNode.depthFirstEnumeration(); /** This warning is expected **/", "-    ArrayList<String> list = new ArrayList<String>();", "-    while (nodes.hasMoreElements()) {", "-      DefaultMutableTreeNode tn = (DefaultMutableTreeNode)nodes.nextElement();", "-      if (tn instanceof InnerNode) {", "-        TreePath tp = new TreePath(tn.getPath());", "-        String s = generatePathString(tp);", "-        boolean shouldCollapse = paths.contains(s);", "-        if (shouldCollapse) { ", "-          collapsePath(tp);", "+  void collapsePaths(HashSet<String> paths) {", "+    synchronized (_model) {", "+      DefaultMutableTreeNode rootNode = (DefaultMutableTreeNode)_model.getRoot();", "+      Enumeration<TreeNode> nodes = rootNode.depthFirstEnumeration(); /** This warning is expected **/", "+      ArrayList<String> list = new ArrayList<String>();", "+      while (nodes.hasMoreElements()) {", "+        DefaultMutableTreeNode tn = (DefaultMutableTreeNode)nodes.nextElement();", "+        if (tn instanceof InnerNode) {", "+          TreePath tp = new TreePath(tn.getPath());", "+          String s = generatePathString(tp);", "+          boolean shouldCollapse = paths.contains(s);", "+          if (shouldCollapse) { ", "+            collapsePath(tp);", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70c44f9ed33ae12a73ca434215fbed7b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void addDocument(INavigatorItem doc)", "signatureAfterChange": "   public void addDocument(INavigatorItem doc)", "diff": ["-  public void addDocument(INavigatorItem doc) { _model.addElement(doc); }", "+  public void addDocument(INavigatorItem doc) { ", "+    synchronized(_model) { _model.addElement(doc); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7220be55b12c7bd3f56789b3bdb6dde1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public synchronized void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "signatureAfterChange": "   public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "diff": ["-  public synchronized void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException {", "+  public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException {", "-    LeafNode node = getNodeForDoc(doc);", "-    if (node == null) addDocument(doc, path);", "-    ", "-    InnerNode oldParent = (InnerNode)node.getParent();", "-    // Check to see if the new parent (could be same) exists already", "-    String newPath = path;", "-    if (newPath.length() > 0) {", "-      if (newPath.substring(0,1).equals(\"/\")) newPath = newPath.substring(1);", "-      if (!newPath.substring(newPath.length()-1).equals(\"/\")) newPath = newPath + \"/\";", "-    }", "-    InnerNode newParent = _path2node.getValue(newPath); // node that should be parent", "-    ", "-    //    System.out.println(\"path=\"+path);", "-    //    System.out.println(\"newPath=\"+newPath);", "-    //    System.out.println(\"oldParent=\"+oldParent);", "-    //    System.out.println(\"newParent=\"+newParent);", "-    //    System.out.println(_path2node);", "-    ", "-    if (newParent == oldParent) { ", "-      if (!node.toString().equals(doc.getName())) {", "-        LeafNode newLeaf= new LeafNode(doc);", "-        _doc2node.put(doc,newLeaf);", "-        insertNodeSortedInto(newLeaf, newParent);", "-        _model.removeNodeFromParent(node);", "-      }", "-      // don't do anything if its name or parents haven't changed", "-    } else {", "-      removeNode(node);", "-      addDocument(doc, path);", "-    }", "-  }", "+    synchronized(_model) {", "+      LeafNode node = getNodeForDoc(doc);", "+      if (node == null) addDocument(doc, path);", "+      InnerNode oldParent = (InnerNode)node.getParent();", "+      // Check to see if the new parent (could be same) exists already", "+      String newPath = path;", "+      if (newPath.length() > 0) {", "+        if (newPath.substring(0,1).equals(\"/\")) newPath = newPath.substring(1);", "+        if (!newPath.substring(newPath.length()-1).equals(\"/\")) newPath = newPath + \"/\";", "+      }", "+      InnerNode newParent = _path2node.getValue(newPath); // node that should be parent", "+      ", "+      //    System.out.println(\"path=\"+path);", "+      //    System.out.println(\"newPath=\"+newPath);", "+      //    System.out.println(\"oldParent=\"+oldParent);", "+      //    System.out.println(\"newParent=\"+newParent);", "+      //    System.out.println(_path2node);", "+      ", "+      if (newParent == oldParent) { ", "+        if (!node.toString().equals(doc.getName())) {", "+          LeafNode newLeaf= new LeafNode(doc);", "+          _doc2node.put(doc,newLeaf);", "+          insertNodeSortedInto(newLeaf, newParent);", "+          _model.removeNodeFromParent(node);", "+        }", "+        // don't do anything if its name or parents haven't changed", "+      } else {", "+        removeNode(node);", "+        addDocument(doc, path);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e21faf68d5ece1612bccc7d529b3b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void addTopLevelGroupToRoot(InnerNode parent)", "signatureAfterChange": "      private void addTopLevelGroupToRoot(InnerNode parent)", "diff": ["-  private void addTopLevelGroupToRoot(InnerNode parent){", "-", "-    int indexInRoots = _roots.indexOf(parent);", "-    int num = _model.getChildCount(_model.getRoot());", "-    int i;", "-    for (i = 0; i < num; i++) {", "-      TreeNode n = (TreeNode)_model.getChild(_model.getRoot(), i);", "-      if(_roots.indexOf(n) > indexInRoots) break;", "+  private void addTopLevelGroupToRoot(InnerNode parent) {", "+    ", "+    synchronized(_model) {", "+      ", "+      int indexInRoots = _roots.indexOf(parent);", "+      int num = _model.getChildCount(_model.getRoot());", "+      int i;", "+      for (i = 0; i < num; i++) {", "+        TreeNode n = (TreeNode)_model.getChild(_model.getRoot(), i);", "+        if(_roots.indexOf(n) > indexInRoots) break;", "+      }", "+      _model.insertNodeInto(parent, (MutableTreeNode)_model.getRoot(), i);", "-    _model.insertNodeInto(parent, (MutableTreeNode)_model.getRoot(), i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78a0f288475511fcd802e14257f487e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public synchronized void setActiveDoc(INavigatorItem doc)", "signatureAfterChange": "   public void setActiveDoc(INavigatorItem doc)", "diff": ["-  /** sets the input document to be active */", "-  public synchronized void setActiveDoc(INavigatorItem doc){", "-    ", "-    DefaultMutableTreeNode node = _doc2node.get(doc);", "-    if (this.contains(doc)) {", "-      TreeNode[] nodes = node.getPath();", "-      TreePath path = new TreePath(nodes);", "-      this.expandPath(path);", "-      this.setSelectionPath(path);", "-      this.scrollPathToVisible(path);", "+  /** Sets the input document to be active */", "+  public void setActiveDoc(INavigatorItem doc){", "+    ", "+    synchronized (_model) {", "+      DefaultMutableTreeNode node = _doc2node.get(doc);", "+      if (this.contains(doc)) {", "+        TreeNode[] nodes = node.getPath();", "+        TreePath path = new TreePath(nodes);", "+        this.expandPath(path);", "+        ", "+        this.setSelectionPath(path);", "+        this.scrollPathToVisible(path);", "+      }", "+    }", "+  }    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "818fbae92c638122fa43e70d8715315c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListSortNavigator.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "      public String toString()", "diff": ["-  public String toString() { return _model.toString(); }", "+  public String toString() { ", "+    synchronized(_model) { return _model.toString(); } ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fd7efa232f046a4cbe7e29600162619", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public synchronized INavigatorItem removeDocument(INavigatorItem doc) throws IllegalArgumentException", "signatureAfterChange": "   public INavigatorItem removeDocument(INavigatorItem doc) throws IllegalArgumentException", "diff": ["-  public synchronized INavigatorItem removeDocument(INavigatorItem doc) throws IllegalArgumentException {", "-    return removeNode(getNodeForDoc(doc));", "+  public INavigatorItem removeDocument(INavigatorItem doc) throws IllegalArgumentException {", "+    synchronized(_model) {", "+      return removeNode(getNodeForDoc(doc));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a407c3905e87b908e42bc35d6adaa6ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public synchronized String getNameOfSelectedTopLevelGroup() throws GroupNotSelectedException", "signatureAfterChange": "   public String getNameOfSelectedTopLevelGroup() throws GroupNotSelectedException", "diff": ["-  public synchronized String getNameOfSelectedTopLevelGroup() throws GroupNotSelectedException{", "-    TreePath p = getSelectionPath();", "-    TreeNode n = (TreeNode) p.getLastPathComponent();", "-    ", "-    if(n == _model.getRoot())", "-      throw new GroupNotSelectedException(\"there is no top level group for the root of the tree\");", "-    ", "-    while(!_roots.contains(n)) { n = n.getParent(); }", "-    ", "-    return ((GroupNode)n).getData();", "+  public String getNameOfSelectedTopLevelGroup() throws GroupNotSelectedException {", "+    synchronized (_model) {", "+      TreePath p = getSelectionPath();", "+      TreeNode n = (TreeNode) p.getLastPathComponent();", "+      ", "+      if (n == _model.getRoot())", "+        throw new GroupNotSelectedException(\"there is no top level group for the root of the tree\");", "+      ", "+      while(!_roots.contains(n)) { n = n.getParent(); }", "+      ", "+      return ((GroupNode)n).getData();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b523d79b38df4fbb62a09f2e035b345d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "f5e6f060cad653c11888e30b69842047d7693a32", "commitAfterChange": "dba0ccac56f5e3245b525afd7781147d259a9d94", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void removeNavigationListener(INavigationListener listener)", "signatureAfterChange": "   public void removeNavigationListener(INavigationListener listener)", "diff": ["-  public void removeNavigationListener(INavigationListener listener) { navListeners.remove(listener); }", "+  public void removeNavigationListener(INavigationListener listener) { ", "+    synchronized (_model) { navListeners.remove(listener); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b99079dbc8c03119bebf78bef5f5b4eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public synchronized void removeNavigationListener(INavigationListener listener)", "signatureAfterChange": "   public void removeNavigationListener(INavigationListener listener)", "diff": ["-  public synchronized void removeNavigationListener(INavigationListener listener) {", "-    navListeners.remove(listener);", "+  public void removeNavigationListener(INavigationListener listener) {", "+    synchronized (_model) { navListeners.remove(listener); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfb58eadf5c362ee9391ded388d743f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public boolean selectDocumentAt(final int x, final int y)", "signatureAfterChange": "   public boolean selectDocumentAt(final int x, final int y)", "diff": ["-    final int idx = locationToIndex(new java.awt.Point(x,y));", "-    java.awt.Rectangle rect = getCellBounds(idx, idx);", "-    if (rect.contains(x, y)) {", "-      setActiveDoc((INavigatorItem) _model.getElementAt(idx));", "-      return true;", "+    synchronized (_model) {", "+      final int idx = locationToIndex(new java.awt.Point(x,y));", "+      java.awt.Rectangle rect = getCellBounds(idx, idx);", "+      if (rect.contains(x, y)) {", "+        setActiveDoc((INavigatorItem) _model.getElementAt(idx));", "+        return true;", "+      }", "+      return false;", "-    return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c794c3c84e9c9ab3857a997a1ccb7f33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public synchronized INavigatorItem getNext(INavigatorItem doc)", "signatureAfterChange": "   public INavigatorItem getNext(INavigatorItem doc)", "diff": ["-  public synchronized INavigatorItem getNext(INavigatorItem doc) {", "-    DefaultMutableTreeNode node = _doc2node.get(doc);", "-    // TODO: check for \"package\" case", "-    DefaultMutableTreeNode next = node.getNextLeaf();", "-    if (next == null || next == _model.getRoot()) return doc;", "-    return  (INavigatorItem) next.getUserObject();", "+  public INavigatorItem getNext(INavigatorItem doc) {", "+    synchronized (_model) {", "+      DefaultMutableTreeNode node = _doc2node.get(doc);", "+      // TODO: check for \"package\" case", "+      DefaultMutableTreeNode next = node.getNextLeaf();", "+      if (next == null || next == _model.getRoot()) return doc;", "+      return  (INavigatorItem) next.getUserObject();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d35c8e986e9097897e0942dbdb009051", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public boolean contains(INavigatorItem doc)", "signatureAfterChange": "   public boolean contains(INavigatorItem doc)", "diff": ["-  public boolean contains(INavigatorItem doc) { return _model.contains(doc); }", "+  public boolean contains(INavigatorItem doc) { ", "+    synchronized(_model) { return _model.contains(doc); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3dfaca6110eebb8c75baf43d2e6f6c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public synchronized void addNavigationListener(INavigationListener listener)", "signatureAfterChange": "   public void addNavigationListener(INavigationListener listener)", "diff": ["-  public synchronized void addNavigationListener(INavigationListener listener) {", "-    navListeners.add(listener);", "+  public void addNavigationListener(INavigationListener listener) {", "+    synchronized (_model) { navListeners.add(listener); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e16c29f8d02ad22cb79a522ff572b329", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public <T extends INavigatorItem> Enumeration<T> getDocuments()", "signatureAfterChange": "   public <T extends INavigatorItem> Enumeration<T> getDocuments()", "diff": ["-    return (Enumeration<T>) _model.elements();  // Cast forced by lousy generic typing of DefaultListModel in Java 1.5", "+    synchronized (_model) {", "+      return (Enumeration<T>) _model.elements();  // Cast forced by lousy generic typing of DefaultListModel in Java 1.5", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e28dd85bc2d81b62f000f19cd5da19dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public synchronized boolean selectDocumentAt(int x, int y)", "signatureAfterChange": "   public boolean selectDocumentAt(int x, int y)", "diff": ["-  public synchronized boolean selectDocumentAt(int x, int y) {", "-    TreePath path = getPathForLocation(x, y);", "-    if (path == null) return false;", "-    else {", "-      DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();", "-      if (node instanceof LeafNode) {", "-        this.expandPath(path);", "-        this.setSelectionPath(path);", "-        this.scrollPathToVisible(path);", "-        return true;", "-      } ", "-      else if (node instanceof InnerNode) {", "-        this.expandPath(path);", "-        this.setSelectionPath(path);", "-        this.scrollPathToVisible(path);", "-        return true;", "-      } ", "-      else if (node instanceof RootNode) {", "-        this.expandPath(path);", "-        this.setSelectionPath(path);", "-        this.scrollPathToVisible(path);", "-        return true;", "-      } ", "-      else return false;", "+  public boolean selectDocumentAt(int x, int y) {", "+    synchronized (_model) {", "+      TreePath path = getPathForLocation(x, y);", "+      if (path == null) return false;", "+      else {", "+        DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();", "+        if (node instanceof LeafNode) {", "+          this.expandPath(path);", "+          this.setSelectionPath(path);", "+          this.scrollPathToVisible(path);", "+          return true;", "+        } ", "+        else if (node instanceof InnerNode) {", "+          this.expandPath(path);", "+          this.setSelectionPath(path);", "+          this.scrollPathToVisible(path);", "+          return true;", "+        } ", "+        else if (node instanceof RootNode) {", "+          this.expandPath(path);", "+          this.setSelectionPath(path);", "+          this.scrollPathToVisible(path);", "+          return true;", "+        } ", "+        else return false;", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7673e10cf41460666517d95242e646e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public synchronized boolean isSelectedInGroup(INavigatorItem i)", "signatureAfterChange": "   public boolean isSelectedInGroup(INavigatorItem i)", "diff": ["-   */", "-  public synchronized boolean isSelectedInGroup(INavigatorItem i){", "-    TreePath p = getSelectionPath();", "-    TreeNode n = (TreeNode) p.getLastPathComponent();", "-    TreeNode l = _doc2node.get(i);", "-    ", "-    if (n == _model.getRoot()) return true;", "-    ", "-    while (l.getParent() != _model.getRoot()) {", "-      if(l.getParent() == n) return true;", "-      l = l.getParent();", "+  /** @return true if the INavigatorItem is in the selected group. */", "+  public boolean isSelectedInGroup(INavigatorItem i) {", "+    synchronized (_model) {", "+      TreePath p = getSelectionPath();", "+      TreeNode n = (TreeNode) p.getLastPathComponent();", "+      TreeNode l = _doc2node.get(i);", "+      ", "+      if (n == _model.getRoot()) return true;", "+      ", "+      while (l.getParent() != _model.getRoot()) {", "+        if(l.getParent() == n) return true;", "+        l = l.getParent();", "+      }", "+      ", "+      return false;", "-    ", "-    return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7d281aa72556fed40b858b43825962b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void cleanFolderNode(DefaultMutableTreeNode node)", "signatureAfterChange": "   private void cleanFolderNode(DefaultMutableTreeNode node)", "diff": ["-    if (node instanceof InnerNode && node.getChildCount() == 0) {", "-      DefaultMutableTreeNode parent = (DefaultMutableTreeNode)node.getParent();", "-      _model.removeNodeFromParent(node);", "-      _path2node.removeKey((InnerNode)node);", "-      cleanFolderNode(parent);", "+    synchronized(_model) {", "+      if (node instanceof InnerNode && node.getChildCount() == 0) {", "+        DefaultMutableTreeNode parent = (DefaultMutableTreeNode)node.getParent();", "+        _model.removeNodeFromParent(node);", "+        _path2node.removeKey((InnerNode)node);", "+        cleanFolderNode(parent);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8bd263faef860fb0dca5715b9b77458", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public synchronized boolean isTopLevelGroupSelected()", "signatureAfterChange": "   public boolean isTopLevelGroupSelected()", "diff": ["-   */", "-  public synchronized boolean isTopLevelGroupSelected(){", "-    TreePath p = getSelectionPath();", "-    TreeNode n = (TreeNode) p.getLastPathComponent();", "-    return (n instanceof GroupNode);", "+  /** Returns true if a top level group is selected */", "+  public boolean isTopLevelGroupSelected() {", "+    synchronized (_model) {", "+      TreePath p = getSelectionPath();", "+      TreeNode n = (TreeNode) p.getLastPathComponent();", "+      return (n instanceof GroupNode);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbbdd2501a1473285a9642be8c13667f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public synchronized INavigatorItem getCurrentSelectedLeaf()", "signatureAfterChange": "   public INavigatorItem getCurrentSelectedLeaf()", "diff": ["-  public synchronized INavigatorItem getCurrentSelectedLeaf(){", "-    if (_current == null) return null;", "-    return _current.execute(_leafVisitor);", "+  public INavigatorItem getCurrentSelectedLeaf() {", "+    synchronized (_model) {", "+      if (_current == null) return null;", "+      return _current.execute(_leafVisitor);", "+    }"]}], "num": 28742}