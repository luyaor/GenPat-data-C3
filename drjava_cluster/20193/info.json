{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec2c1ebbdaba82b81e0a39d93f5ce00b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abffc6add9fe949dd2ffb9a8f4d2d7ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "1a20ac05e52f9ee0a88d470513f2a7fe1aa1939e", "commitAfterChange": "d0895d1ac641d5855832b6d42c1c1052f9c47c9f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 16, "signatureBeforeChange": "   private static Method _loadMainMethod()      throws NoSuchMethodException, SecurityException", "signatureAfterChange": "   public static boolean classLoadersCanFindDebugger()", "diff": ["-   */", "-  private static Method _loadMainMethod() ", "-    throws NoSuchMethodException, SecurityException ", "-  {", "-    Class c = DrJava.class;", "-    ", "-    /* for this version, don't use the custom classloader yet.", "-     *  Neither the URLClassLoader nor the DrJavaClassLoader", "-     *  appears to work correctly-- this is a project to be taken...", "-     * (Motivation: We want the debugger classes to be available", "-     *  if we know where tools.jar is, but it has to be on the", "-     *  classpath of the classloader to work.)", "-    try {", "-      //File toolsLoc = getConfig().getSetting(JAVAC_LOCATION);", "-      //if(toolsLoc != FileOption.NULL_FILE) {", "-        //URL[] urls = new URL[] {fLoc.toURL()};", "-        //ClassLoader sys = ClassLoader.getSystemClassLoader();", "-        //ClassLoader dcl = new URLClassLoader(urls);", "-        ClassLoader dcl = new DrJavaClassLoader();", "-        ", "-        // test code", "-        //Class uDj, dDj, uBs, dBs;", "-        //String djn = \"edu.rice.cs.drjava.Drjava\",", "-        //  bsn = \"com.sun.jdi.Bootstrap\";", "-        //uDj = loadClass(cl,djn);", "-        //dDj = loadClass(dcl,djn);", "-        //uBs = loadClass(cl,bsn);", "-        //dBs = loadClass(dcl,bsn);", "-        //testCL(sys);", "-        //testCL(cl);", "-        //testCL(dcl);", "-        // end test code", "-        ", "-        c = dcl.loadClass(\"edu.rice.cs.drjava.DrJava\");", "-      //}", "-    } ", "-    catch (Exception e) {", "-      // Couldn't load the class", "-      System.err.println(e.toString());", "-    }", "-    */", "-    return c.getMethod(\"beginProgram\",new Class[] {String[].class});", "-  }", "+   */", "+  public static boolean classLoadersCanFindDebugger() {", "+    // First check the specified location", "+    File jar = getConfig().getSetting(JAVAC_LOCATION);", "+    if (jar != FileOption.NULL_FILE) {", "+      try {", "+        URL[] urls = new URL[] { jar.toURL() };", "+        URLClassLoader loader = new URLClassLoader(urls);", "+        loader.loadClass(TEST_DEBUGGER_CLASS);", "+        return true;", "+      }", "+      catch (ClassNotFoundException e) {", "+        // no debugger in this jar file; try ToolsJarClasLoader", "+      }", "+      catch (MalformedURLException e) {", "+        // specified jar invalid; try ToolsJarClassLoader", "+      }", "+    }", "+", "+    // If not, try to guess tools.jar location", "+    ToolsJarClassLoader loader = new ToolsJarClassLoader();", "+    try {", "+      loader.loadClass(\"com.sun.jdi.Bootstrap\");", "+      return true;", "+    }", "+    catch (ClassNotFoundException cnfe) {", "+      return false;", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbc22b7054d488630820b8d8f9d7f830", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "405d8485f59d23db7a6700d259e1bbcaf9fe742c", "commitAfterChange": "2ee5f2b93eccde81f983b764d9c9f4b543211f8b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private static Method loadMainMethod()      throws NoSuchMethodException, SecurityException", "signatureAfterChange": "   private static Method _loadMainMethod()      throws NoSuchMethodException, SecurityException", "diff": ["-  private static Method loadMainMethod() ", "-    throws NoSuchMethodException, SecurityException {", "+   */", "+  private static Method _loadMainMethod() ", "+    throws NoSuchMethodException, SecurityException ", "+  {", "+    ", "+    /* for this version, don't use the custom classloader yet.", "+     *  Neither the URLClassLoader nor the DrJavaClassLoader", "+     *  appears to work correctly-- this is a project to be taken...", "+     * (Motivation: We want the debugger classes to be available", "+     *  if we know where tools.jar is, but it has to be on the", "+     *  classpath of the classloader to work.)", "-      //File fLoc = getConfig().getSetting(JAVAC_LOCATION);", "-      //if(fLoc != FileOption.NULL_FILE) {", "+      //File toolsLoc = getConfig().getSetting(JAVAC_LOCATION);", "+      //if(toolsLoc != FileOption.NULL_FILE) {", "-        /**", "-        Class uDj, dDj, uBs, dBs;", "-        String djn = \"edu.rice.cs.drjava.Drjava\",", "-          bsn = \"com.sun.jdi.Bootstrap\";", "-        uDj = loadClass(cl,djn);", "-        dDj = loadClass(dcl,djn);", "-        uBs = loadClass(cl,bsn);", "-        dBs = loadClass(dcl,bsn);", "-        testCL(sys);", "-        testCL(cl);", "-        testCL(dcl);", "-        **/", "-        // c = ", "-        // for this version, don't use the custom classloader yet.", "-        dcl.loadClass(\"edu.rice.cs.drjava.DrJava\");", "+        ", "+        // test code", "+        //Class uDj, dDj, uBs, dBs;", "+        //String djn = \"edu.rice.cs.drjava.Drjava\",", "+        //  bsn = \"com.sun.jdi.Bootstrap\";", "+        //uDj = loadClass(cl,djn);", "+        //dDj = loadClass(dcl,djn);", "+        //uBs = loadClass(cl,bsn);", "+        //dBs = loadClass(dcl,bsn);", "+        //testCL(sys);", "+        //testCL(cl);", "+        //testCL(dcl);", "+        // end test code", "+        ", "+        c = dcl.loadClass(\"edu.rice.cs.drjava.DrJava\");", "-    } catch(Exception e) {", "+    } ", "+    catch (Exception e) {", "+      // Couldn't load the class", "+    */"]}], "num": 20193}