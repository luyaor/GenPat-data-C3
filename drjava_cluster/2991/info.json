{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d346a3955a20d64ecce84a4ba86bef10", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dbd19ac6efec5097a3b209b5aabc2e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "734866577ba652e258c158eef25bcbc68a43749a", "commitAfterChange": "06c097879b27ffb8ca08a54a4961265ba5907f07", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "     @Override public Type visit(AnonymousInnerAllocation node)", "signatureAfterChange": "     @Override public Type visit(AnonymousInnerAllocation node)", "diff": ["-          setErrorStrings(node, node.getClassName(), ts.userRepresentation(getType(node.getExpression())));", "+          setErrorStrings(node, node.getClassName(), ts.typePrinter().print(getType(node.getExpression())));", "-          setErrorStrings(node, ts.userRepresentation(t));", "+          setErrorStrings(node, ts.typePrinter().print(t));", "-        setErrorStrings(node, ts.userRepresentation(enclosing), node.getClassName());", "+        setErrorStrings(node, ts.typePrinter().print(enclosing), node.getClassName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b45bba8e44e25627d39a0505aa97d520", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "734866577ba652e258c158eef25bcbc68a43749a", "commitAfterChange": "06c097879b27ffb8ca08a54a4961265ba5907f07", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     @Override public Type visit(InnerAllocation node)", "signatureAfterChange": "     @Override public Type visit(InnerAllocation node)", "diff": ["-          setErrorStrings(node, node.getClassName(), ts.userRepresentation(getType(node.getExpression())));", "+          setErrorStrings(node, node.getClassName(), ts.typePrinter().print(getType(node.getExpression())));", "-          setErrorStrings(node, ts.userRepresentation(t));", "+          setErrorStrings(node, ts.typePrinter().print(t));", "-        setErrorStrings(node, ts.userRepresentation(enclosing), node.getClassName());", "+        setErrorStrings(node, ts.typePrinter().print(enclosing), node.getClassName());"]}], "num": 2991}