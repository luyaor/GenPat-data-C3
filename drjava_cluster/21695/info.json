{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "751754766341922d1477e62f067e6836", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2846a2bd6225be8727e310d0362d2768", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/TypeDeclaration.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public List getInterfaces()", "signatureAfterChange": "   public List<String> getInterfaces()", "diff": ["-  public List getInterfaces() {", "+  public List<String> getInterfaces() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e1a891770b1f7efa6d562c8cd6e7ccc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected StaticMethodCall _getStaticMethodCallForFunction(MethodCall method, Context context)", "signatureAfterChange": "   protected StaticMethodCall _getStaticMethodCallForFunction(MethodCall method, Context context)", "diff": ["-    List args = method.getArguments();", "+    List<Expression> args = method.getArguments();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "488497a0e13bb11aada0f1e00be950e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected ObjectMethodCall _getObjectMethodCallForFunction(MethodCall method, Context context)", "signatureAfterChange": "   protected ObjectMethodCall _getObjectMethodCallForFunction(MethodCall method, Context context)", "diff": ["-    List args = method.getArguments();", "+    List<Expression> args = method.getArguments();"]}], "num": 21695}