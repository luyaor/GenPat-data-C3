{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "337a05920abac06d80320910a86d9cef", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09fe9c7a3968a4b5b25bb3efb506db97", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/EventHandlerThread.java", "commitBeforeChange": "27f4730bb628f4f21b5ace9b8592e93a615017f8", "commitAfterChange": "08f616afaebe02cc02ba5da4da4990852caead81", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 17, "signatureBeforeChange": "   private void _cleanUp(Event e) throws DebugException", "signatureAfterChange": "   private void _cleanUp(Event e) throws DebugException", "diff": ["-    synchronized(_debugger) {", "-      _connected = false;", "-      if (_debugger.isReady()) {", "-        // caused crash if \"Run Document's Main Method\" was invoked while debugging", "-        // if (_debugger.hasSuspendedThreads()) _debugger.currThreadDied();", "-        _debugger.shutdown();", "+//    synchronized(_debugger) {", "+    SwingUtilities.invokeLater(new Runnable() {", "+      public void run() {", "+        _connected = false;", "+        if (_debugger.isReady()) {", "+          // caused crash if \"Run Document's Main Method\" was invoked while debugging", "+          // if (_debugger.hasSuspendedThreads()) _debugger.currThreadDied();", "+          _debugger.shutdown();", "+        }", "+//    }", "-    }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58b72dea2d21a426246f6d1a799e5390", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/OrderedBidirectionalHashMap.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void remove()", "signatureAfterChange": "     public void remove()", "diff": ["-//     synchronized(OBHMthis) {", "-        it.remove();                 /* throws exception if lastValue is null */", "-        lastKey = OBHMthis.getKey(lastValue);", "-        forward.remove(lastKey);     /* cannot fail because lastKey is not null */", "-        backward.remove(lastValue);  /* cannot fail because lastValue is not null */", "-        lastValue = null;", "-//      }", "+      it.remove();                 /* throws exception if lastValue is null */", "+      lastKey = backward.get(lastValue);", "+      forward.remove(lastKey);     /* cannot fail because lastKey is not null */", "+      backward.remove(lastValue);  /* cannot fail because lastValue is not null */", "+      lastValue = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4e1ddfabce1d617ed09e5341ade1448", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["-      if (pos >= 0) {", "-        _selectFoundItem();", "-        ", "-        _replaceAction.setEnabled(true);", "-        _replaceFindNextAction.setEnabled(true);", "-        _replaceFindPreviousAction.setEnabled(true);", "-        _machine.setLastFindWord();", "+      if (pos >= 0) {  // defer executing this code until after active document switch (if any) is complete", "+        SwingUtilities.invokeLater(new Runnable() {", "+          public void run() {", "+            _selectFoundItem();", "+            _replaceAction.setEnabled(true);", "+            _replaceFindNextAction.setEnabled(true);", "+            _replaceFindPreviousAction.setEnabled(true);", "+            _machine.setLastFindWord();", "+          }});"]}], "num": 17614}