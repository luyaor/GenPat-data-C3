{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ac2ead946bc3a1706f8f1ba9906ad9b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "792024270a08a85419616d3bf9eec6e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "5efc9f9b9b2d5a254886d093c84fc9dff908700a", "commitAfterChange": "b4994c0f88d432c30b9a33dae371fbe69a371425", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void delete(int count)", "signatureAfterChange": "   public void delete(int count)", "diff": ["-    TokenList.Iterator copyCursor = _cursor.copy();", "-    // from = the _cursor", "-    // to = _cursor.copy()", "-    _cursor.setBlockOffset(_delete(count, _cursor, copyCursor));", "-    copyCursor.dispose();", "+    _cursor.delete(count);", "+", "+    // Changes in ReducedModelComment can entail state changes in the ", "+    // document.  For this reason, we have to call ", "+    // _updateBasedOnCurrentState because there is no need to call it", "+    // in ReducedModelBrace, and factoring it out would be stupid and", "+    // wasteful.", "+    ", "+    // Move back 2 or as far back as the document will allow", "+    // update state information", "+    // restore the cursor"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d971576ade26cb64ede6708c60d7b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelBrace.java", "commitBeforeChange": "5efc9f9b9b2d5a254886d093c84fc9dff908700a", "commitAfterChange": "b4994c0f88d432c30b9a33dae371fbe69a371425", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void delete( int count )", "signatureAfterChange": "   public void delete( int count )", "diff": ["-    TokenList.Iterator copyCursor = _cursor.copy();", "-    // from = the _cursor", "-    // to = _cursor.copy()", "-    _cursor.setBlockOffset(_delete(count, _cursor, copyCursor));", "-    copyCursor.dispose();", "+    _cursor.delete(count);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83b89f016622aaa7f61b9d64f667d764", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "5efc9f9b9b2d5a254886d093c84fc9dff908700a", "commitAfterChange": "b4994c0f88d432c30b9a33dae371fbe69a371425", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void delete( int count )", "signatureAfterChange": "   public void delete( int count )", "diff": ["-    TokenList.Iterator copyCursor = _cursor.copy();", "-    // from = the _cursor", "-    // to = _cursor.copy()", "-    _cursor.setBlockOffset(_delete(count, _cursor, copyCursor));", "-    copyCursor.dispose();", "+    _cursor.delete(count);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "916bb701855e8e345db734a58c2d8d99", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "5efc9f9b9b2d5a254886d093c84fc9dff908700a", "commitAfterChange": "b4994c0f88d432c30b9a33dae371fbe69a371425", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void delete(int count)", "signatureAfterChange": "   public void delete(int count)", "diff": ["-    TokenList.Iterator copyCursor = _cursor.copy();", "-    // from = the _cursor", "-    // to = _cursor.copy()", "-    _cursor.setBlockOffset(_delete(count, _cursor, copyCursor));", "-    copyCursor.dispose();", "+    _cursor.delete(count);", "+", "+    // Changes in ReducedModelComment can entail state changes in the ", "+    // document.  For this reason, we have to call ", "+    // _updateBasedOnCurrentState because there is no need to call it", "+    // in ReducedModelBrace, and factoring it out would be stupid and", "+    // wasteful.", "+    ", "+    // Move back 2 or as far back as the document will allow", "+    // update state information", "+    // restore the cursor"]}], "num": 10905}