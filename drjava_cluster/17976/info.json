{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58facda12eb71f2d356044cf147d02ed", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24d4c9d827de66217322b031a8e381d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": "   private Type visitRelationalExpression(BinaryExpression node)", "signatureAfterChange": "   private Class<?> visitRelationalExpression(BinaryExpression node)", "diff": ["-  private Type visitRelationalExpression(BinaryExpression node) {", "+  private Class<?> visitRelationalExpression(BinaryExpression node) {", "-    Type lc1 = leftExp.acceptVisitor(this);", "-    Type rc1 = rightExp.acceptVisitor(this);", "-    Class<?> lc = (Class<?>)lc1;", "-    Class<?> rc = (Class<?>)rc1;", "+    Class<?> lc = leftExp.acceptVisitor(this);", "+    Class<?> rc = rightExp.acceptVisitor(this);", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61e5457ab7375c303d6f645fefd6c8e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "   private Type visitShiftExpression(BinaryExpression node)", "signatureAfterChange": "   private Class<?> visitShiftExpression(BinaryExpression node)", "diff": ["-  private Type visitShiftExpression(BinaryExpression node) {", "+  private Class<?> visitShiftExpression(BinaryExpression node) {", "-    Type lc1 = leftExp.acceptVisitor(this);", "-    Type rc1 = rightExp.acceptVisitor(this);", "-    Type c  = null;", "-    Class<?> lc = (Class<?>)lc1;", "-    Class<?> rc = (Class<?>)rc1;", "-    ", "+    Class<?> lc = leftExp.acceptVisitor(this);", "+    Class<?> rc = rightExp.acceptVisitor(this);", "+    Class<?> c  = null;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe67624824982837ad9235818541208c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "   private Type visitBitwiseExpression(BinaryExpression node)", "signatureAfterChange": "   private Class<?> visitBitwiseExpression(BinaryExpression node)", "diff": ["-  private Type visitBitwiseExpression(BinaryExpression node) {", "+  private Class<?> visitBitwiseExpression(BinaryExpression node) {", "-    Type lc1 = leftExp.acceptVisitor(this);", "-    Type rc1 = rightExp.acceptVisitor(this);", "-    Type c = null;", "-    Class<?> lc = (Class<?>)lc1;", "-    Class<?> rc = (Class<?>)rc1;", "+    Class<?> lc = leftExp.acceptVisitor(this);", "+    Class<?> rc = rightExp.acceptVisitor(this);", "+    Class<?> c = null;"]}], "num": 17976}