{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09d119dbf9e8488a1c7b4ebc937f8f9e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e51a00c3088e761e59ff82e79987a41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tprivate int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcopyCursor, int offset)", "signatureAfterChange": "   private int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator                                         copyCursor, int offset)", "diff": ["+  private int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator", "+                                        copyCursor, int offset)", "+  {", "+    int walkcount = offset;", "+    if (!copyCursor.atStart()) {", "+      copyCursor.prev();", "+    }", "+    while ((!copyCursor.atStart()) &&", "+           (!(copyCursor.current().getType().equals(\"\\n\"))))", "+           {", "+             //  copyCursor.current().getState() == ReducedToken.FREE))){", "+             walkcount += copyCursor.current().getSize();", "+             copyCursor.prev();", "+           }", "+    ", "+    if (copyCursor.atStart()) {", "+      return -1;", "+    }", "+    return walkcount;", "+  }", "-\t */", "-\tprivate int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcopyCursor, int offset)", "-\t\t{", "-\t\t\tint walkcount = offset;", "-\t\t\tif (!copyCursor.atStart())", "-\t\t\t\tcopyCursor.prev();", "-\t\t\t", "-\t\t\twhile ((!copyCursor.atStart()) &&", "-\t\t\t\t\t\t (!(copyCursor.current().getType().equals(\"\\n\")))){", "-\t\t\t\t//\tcopyCursor.current().getState() == ReducedToken.FREE))){", "-\t\t\t\twalkcount += copyCursor.current().getSize();", "-\t\t\t\tcopyCursor.prev();", "-\t\t\t}", "-", "-\t\t\tif(copyCursor.atStart())", "-\t\t\t\treturn -1;", "-\t\t\treturn walkcount;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "781c7e0d0330c25fe8f94afcc281875a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tprivate int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcopyCursor, int offset)", "signatureAfterChange": "   private int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator                                         copyCursor, int offset)", "diff": ["+  private int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator", "+                                        copyCursor, int offset)", "+  {", "+    int walkcount = offset;", "+    if (!copyCursor.atStart()) {", "+      copyCursor.prev();", "+    }", "+    while ((!copyCursor.atStart()) &&", "+           (!(copyCursor.current().getType().equals(\"\\n\"))))", "+           {", "+             //  copyCursor.current().getState() == ReducedToken.FREE))){", "+             walkcount += copyCursor.current().getSize();", "+             copyCursor.prev();", "+           }", "+    ", "+    if (copyCursor.atStart()) {", "+      return -1;", "+    }", "+    return walkcount;", "+  }", "-\t */", "-\tprivate int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcopyCursor, int offset)", "-\t\t{", "-\t\t\tint walkcount = offset;", "-\t\t\tif (!copyCursor.atStart())", "-\t\t\t\tcopyCursor.prev();", "-\t\t\t", "-\t\t\twhile ((!copyCursor.atStart()) &&", "-\t\t\t\t\t\t (!(copyCursor.current().getType().equals(\"\\n\")))){", "-\t\t\t\t//\tcopyCursor.current().getState() == ReducedToken.FREE))){", "-\t\t\t\twalkcount += copyCursor.current().getSize();", "-\t\t\t\tcopyCursor.prev();", "-\t\t\t}", "-", "-\t\t\tif(copyCursor.atStart())", "-\t\t\t\treturn -1;", "-\t\t\treturn walkcount;", "-\t\t}"]}], "num": 10552}