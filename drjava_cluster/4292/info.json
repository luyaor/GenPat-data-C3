{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93c5d087cc31aefc4d021362e59b6be0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e755edb8a91dcb4b15f1601756f1cfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public synchronized void addBuildDirectoryClassPath(File f)", "signatureAfterChange": "   public void addBuildDirectoryClassPath(File f)", "diff": ["-   */", "-  public synchronized void addBuildDirectoryClassPath(File f) {", "-    if (_classPath.contains(f)) return;  // Don't add it again", "-    ", "-    // Add to the default interpreter, if it is a JavaInterpreter", "-    if (_defaultInterpreter.getInterpreter() instanceof JavaInterpreter) {", "-      ((JavaInterpreter)_defaultInterpreter.getInterpreter()).addBuildDirectoryClassPath(f);", "-    }", "-    ", "-    // Add to any named JavaInterpreters to be consistent", "-    Enumeration<InterpreterData> interpreters = _interpreters.elements();", "-    while (interpreters.hasMoreElements()) {", "-      Interpreter interpreter = interpreters.nextElement().getInterpreter();", "-      if (interpreter instanceof JavaInterpreter) {", "-        ((JavaInterpreter)interpreter).addBuildDirectoryClassPath(f);", "-      }", "-    }", "-    ", "-    // Keep this entry on the accumulated classpath", "-    _classPath.add(f);", "-  }", "+  public void addProjectClassPath(File f) { _classPathManager.addProjectCP(f); }", "+  public void addBuildDirectoryClassPath(File f) { _classPathManager.addBuildDirectoryCP(f); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d490be11d9cadc32a5513002e4e10f89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public synchronized void addProjectClassPath(File f)", "signatureAfterChange": "   public void addProjectClassPath(File f)", "diff": ["-   */", "-  public synchronized void addProjectClassPath(File f) {", "-    if (_classPath.contains(f)) return;  // Don't add it again", "-    ", "-    // Add to the default interpreter, if it is a JavaInterpreter", "-    if (_defaultInterpreter.getInterpreter() instanceof JavaInterpreter) {", "-      ((JavaInterpreter)_defaultInterpreter.getInterpreter()).addProjectClassPath(f);", "-    }", "-    ", "-    // Add to any named JavaInterpreters to be consistent", "-    Enumeration<InterpreterData> interpreters = _interpreters.elements();", "-    while (interpreters.hasMoreElements()) {", "-      Interpreter interpreter = interpreters.nextElement().getInterpreter();", "-      if (interpreter instanceof JavaInterpreter) {", "-        ((JavaInterpreter)interpreter).addProjectClassPath(f);", "-      }", "-    }", "-    ", "-    // Keep this entry on the accumulated classpath", "-    _classPath.add(f);", "-  }", "+  public void addExtraClassPath(File f) { _classPathManager.addExtraCP(f); }", "+  public void addProjectClassPath(File f) { _classPathManager.addProjectCP(f); }"]}], "num": 4292}