{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20c974a82ccd9a78ce25a10300beeb39", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "807370be48eb8d231f52c2342319ab9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectMenuTest.java", "commitBeforeChange": "7ddee5dc15678210d67bde01004f3a1d7919cf7b", "commitAfterChange": "1a6fd1a0e7e181e52da6f98c6b2f1cab31c48798", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["-    ", "-    // create temp directory for this test", "-    _base = new File(System.getProperty(\"java.io.tmpdir\")).getCanonicalFile();", "-    _parent = IOUtil.createAndMarkTempDirectory(\"proj\", \"\", _base);", "-    _srcDir = new File(_parent, \"src\");", "-    _srcDir.mkdir(); // create the src directory", "-", "-    // create project in a directory with an auxiliary file outside of it", "-    _auxFile = File.createTempFile(\"aux\", \".java\").getCanonicalFile();", "-    File auxFileParent = _auxFile.getParentFile();", "-    _projFile = new File(_parent, \"test.pjt\");", "-    ", "-    _file1 = new File(_srcDir, \"test1.java\");", "-    IOUtil.writeStringToFile(_file1, \"\");  // create dummy file", "-    _file2 = new File(_srcDir, \"test2.java\");", "-    IOUtil.writeStringToFile(_file2, \"\");// create dummy file", "-    ", "+    // Perform Swing setup in event thread because the event thread is ALREADY running", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        try {", "+      ", "+          // create temp directory for this test", "+          _base = new File(System.getProperty(\"java.io.tmpdir\")).getCanonicalFile();", "+          _parent = IOUtil.createAndMarkTempDirectory(\"proj\", \"\", _base);", "+          _srcDir = new File(_parent, \"src\");", "+          _srcDir.mkdir(); // create the src directory", "+          ", "+          // create project in a directory with an auxiliary file outside of it", "+          _auxFile = File.createTempFile(\"aux\", \".java\").getCanonicalFile();", "+          File auxFileParent = _auxFile.getParentFile();", "+          _projFile = new File(_parent, \"test.pjt\");", "+          ", "+          _file1 = new File(_srcDir, \"test1.java\");", "+          IOUtil.writeStringToFile(_file1, \"\");  // create dummy file", "+          _file2 = new File(_srcDir, \"test2.java\");", "+          IOUtil.writeStringToFile(_file2, \"\");// create dummy file", "+          ", "-    ", "-//    // generate the relative path names for the files in the project file", "-//    String temp = _file1.getParentFile().getCanonicalPath();", "-//    _file1RelName = _file1.getCanonicalPath().substring(temp.length() + 1);", "-//    temp = _file2.getParentFile().getCanonicalPath();", "-//    _file2RelName = _file2.getCanonicalPath().substring(temp.length() + 1);", "-", "-    _projFileText =", "-      \";; DrJava project file.  Written with build: 20040623-1933\\n\" +", "-      \"(source ;; comment\\n\" +", "-      \"   (file (name \\\"src/test1.java\\\")(select 32 32))\" +", "-      \"   (file (name \\\"src/test2.java\\\")(select 32 32)))\";", "-    ", "-    IOUtil.writeStringToFile(_projFile, _projFileText);", "-    ", "-    _frame = new MainFrame();", "-", "-    Utilities.invokeAndWait(new Runnable() { public void run() { _frame.pack(); } });", "-    _model = _frame.getModel();", "+          ", "+          _projFileText =", "+            \";; DrJava project file.  Written with build: 20040623-1933\\n\" +", "+            \"(source ;; comment\\n\" +", "+            \"   (file (name \\\"src/test1.java\\\")(select 32 32))\" +", "+            \"   (file (name \\\"src/test2.java\\\")(select 32 32)))\";", "+          ", "+          IOUtil.writeStringToFile(_projFile, _projFileText);", "+          ", "+          _frame = new MainFrame();", "+          _frame.pack();", "+          _model = _frame.getModel();", "+        }", "+        catch(IOException e) { throw new UnexpectedException(e); }", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db6b59b40291da85fab1c10b07dd19bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectMenuTest.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["+    ", "+    // create temp directory for this test", "+    _base = new File(System.getProperty(\"java.io.tmpdir\")).getCanonicalFile();", "+    _parent = FileOps.createTempDirectory(\"proj\", _base);", "+    _srcDir = new File(_parent, \"src\");", "+    _srcDir.mkdir(); // create the src directory", "-    _projDir = new File(auxFileParent, \"project-dir\");", "-    _projDir.mkdir();", "-    _projFile = File.createTempFile(\"test\", \".pjt\", _projDir);", "-    _file1 = File.createTempFile(\"test1\",\".java\", _projDir);", "-    _file2 = File.createTempFile(\"test2\",\".java\", _projDir);", "+    _projFile = new File(_parent, \"test.pjt\");", "-    // generate the relative path names for the files in the project file", "-    String temp = _file1.getParentFile().getCanonicalPath();", "-    _file1RelName = _file1.getCanonicalPath().substring(temp.length()+1);", "-    temp = _file2.getParentFile().getCanonicalPath();", "-    _file2RelName = _file2.getCanonicalPath().substring(temp.length()+1);", "+    _file1 = new File(_srcDir, \"test1.java\");", "+    FileOps.writeStringToFile(_file1, \"\");  // create dummy file", "+    _file2 = new File(_srcDir, \"test2.java\");", "+    FileOps.writeStringToFile(_file2, \"\");// create dummy file", "+    ", "+//    System.err.println(\"test1.java and test1.java created\");", "+    ", "+//    // generate the relative path names for the files in the project file", "+//    String temp = _file1.getParentFile().getCanonicalPath();", "+//    _file1RelName = _file1.getCanonicalPath().substring(temp.length() + 1);", "+//    temp = _file2.getParentFile().getCanonicalPath();", "+//    _file2RelName = _file2.getCanonicalPath().substring(temp.length() + 1);", "-      \"   (file (name \\\"\"+ _file1RelName +\"\\\")(select 32 32)(active)))\\n\";", "+      \"   (file (name \\\"src/test1.java\\\")(select 32 32)(active)))\";", "+//      \"   (file (name \\\"src/test2.java\\\")(select 32 32)(active)))\";", "-    reader = new BufferedReader(new FileReader(_projFile));", "-    BufferedWriter w = new BufferedWriter(new FileWriter(_projFile));", "-    w.write(_projFileText);", "-    w.close();", "+    FileOps.writeStringToFile(_projFile, _projFileText);"]}], "num": 8981}