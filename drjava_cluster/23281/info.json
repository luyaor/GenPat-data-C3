{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f242a7847db33960583a31df74417eb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4303b39b9cb1735c7313ff4d55e504d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "8907059ef43f15e7b338686159e3333fd997b238", "commitAfterChange": "191c3e4b63ea8ecc780014db5fc908a6ccd9ee7a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void _removePreviousHighlight()", "signatureAfterChange": "   public void stopListening()", "diff": ["+    */", "+  public void stopListening() {", "+    if(_defPane!=null) {", "+      _defPane.removeCaretListener(_caretListener);", "+      _defPane = null;", "+    } else {", "+      throw new UnexpectedException(new RuntimeException(\"FindReplaceDialog should be listening to something\"));", "+    }", "+", "+  }", "-   */", "-  private void _removePreviousHighlight() {", "-    if (_previousHighlightTag != null) {", "-      _defPane.getHighlighter().removeHighlight(_previousHighlightTag);", "-      _previousHighlightTag = null;", "-    }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcb4c97f9f93efc8cfa7429ff31f16ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "8bdb35d64cb05e3140d2e418cebfe8458ce4a718", "commitAfterChange": "f17292abd95ea16429a4af0b9a7c5f4c918cbe33", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "   private File[] getChosenFiles(JFileChooser fc, int choice)     throws OperationCanceledException", "signatureAfterChange": "   private File[] getChosenFiles(JFileChooser fc, int choice)     throws OperationCanceledException", "diff": ["-        if (chosen.length == 0) chosen = new File[] { null };", "-", "-        if (chosen[0] == null)", "-          chosen[0] = fc.getSelectedFile();", "+        // Following code reviewed for bug 70902-- JVF", "+        ", "+        // this new File[] { null } is totally unaccounted for in originating", "+        // method calls", "+        //if (chosen.length == 0) chosen = new File[] { null };", "+        if (chosen.length == 0) { throw new OperationCanceledException(); }", "+        ", "+        if (chosen[0] == null) { ", "+          // why was this here? we shouldn't expect to get", "+          // something totally new from fc.", "+          //chosen[0] = fc.getSelectedFile();", "+          throw new OperationCanceledException();", "+        }"]}], "num": 23281}