{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47d5bc20b096015c95c7c65250e07e59", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "092032ca8e5730ae9a46e041f59b0f8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 206, "signatureBeforeChange": "      private void openFilesInFolder(File dir, boolean recursive)", "signatureAfterChange": "   private void _openFolder(File dir, boolean rec)", "diff": ["-  private void openFilesInFolder(File dir, boolean recursive) {", "-    ArrayList<File> files;", "-    if (dir != null && dir.isDirectory()) {", "-      files = FileOps.getFilesInDir(dir, recursive, new FileFilter() {", "-        public boolean accept(File f) { ", "-          return f.isDirectory() ||", "-            f.isFile() && ", "-            f.getName().endsWith(DrJava.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)]);", "-        }", "-      });", "-      ", "-      if (_model.isProjectActive())", "-        Collections.sort(files, new Comparator<File>() {", "-        public int compare(File o1,File o2) {", "-          return - o1.getAbsolutePath().compareTo(o2.getAbsolutePath());", "-        }", "-      });", "-      else", "-        Collections.sort(files, new Comparator<File>() {", "-        public int compare(File o1,File o2) {", "-          return - o1.getName().compareTo(o2.getName());", "-        }", "-      });", "-      ", "-      final File[] sfiles = files.toArray(new File[files.size()]);", "-      ", "-      ", "-      open(new FileOpenSelector() {", "-        public File[] getFiles() {", "-          return sfiles;", "-        }", "-      });", "-    }else{", "-      // our directory was bad, so don't open anything.", "-    }", "+   */", "+  private void _openFolder(File dir, boolean rec) {", "+    hourglassOn();", "+    try { _model.openFolder(dir, rec); }", "+    catch(AlreadyOpenException e) { /* do nothing */ }", "+    catch(IOException e) { _showIOError(e); }", "+    catch(OperationCanceledException oce) { /* do nothing */ }", "+    finally { hourglassOff(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7907010ce53ac5fe526b462c8704b49", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ab929f2517998893e7ac2a2baadc6213c733962b", "commitAfterChange": "0fe56dbec731a045fe28e9c5bc1a9260c7157f46", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 149, "signatureBeforeChange": "   public void openFolder(DirectorySelector openSelector)", "signatureAfterChange": "   public void openFolder(DirectorySelector openSelector)", "diff": ["+      ArrayList<File> files;", "-        final File[] files = getFilesInDir(dir, openSelector.isRecursive());", "+        files = FileOps.getFilesInDir(dir, openSelector.isRecursive(), new FileFilter(){", "+          public boolean accept(File f){ ", "+            return f.isDirectory() ||", "+              f.isFile() && ", "+              f.getName().endsWith(DrJava.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)]);", "+          }", "+        });", "+        ", "+        if(_model.isProjectActive()){", "+          Collections.sort(files, new Comparator<File>(){", "+            public int compare(File o1,File o2){", "+              return - o1.getAbsolutePath().compareTo(o2.getAbsolutePath());", "+            }", "+            public boolean equals(Object o){", "+              return false;", "+            }", "+          });", "+        }else{", "+          Collections.sort(files, new Comparator<File>(){", "+            public int compare(File o1,File o2){", "+              return - o1.getName().compareTo(o2.getName());", "+            }", "+            public boolean equals(Object o){", "+              return false;", "+            }", "+          });", "+        }", "+        ", "+        final File[] sfiles = files.toArray(new File[0]);", "+        ", "-            return files;", "+            return sfiles;"]}], "num": 12021}