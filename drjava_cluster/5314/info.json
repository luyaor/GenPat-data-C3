{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c41259836032bae1c9f86bb02f431da", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93b78b29b04a31c052e283954579b352", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "1a20ac05e52f9ee0a88d470513f2a7fe1aa1939e", "commitAfterChange": "d0895d1ac641d5855832b6d42c1c1052f9c47c9f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 19, "signatureBeforeChange": "   static void setupCompilerIfNeeded()", "signatureAfterChange": "   public static boolean promptForToolsJar(boolean needCompiler,                                           boolean needDebugger)", "diff": ["-  static void setupCompilerIfNeeded() {", "-    if (CompilerRegistry.ONLY.isNoCompilerAvailable()) {", "-      // no compiler available; let's try to let the user pick one.", "-        \"DrJava can not find any Java compiler. Would you \",", "-        \"like to configure the location of the compiler? \",", "-        \"The compiler is generally located in 'tools.jar', \",", "-        \"in the 'lib' subdirectory under your JDK \",", "-        \"installation directory. (If you say 'No', DrJava \",", "-        \"will be unable to compile programs.)\"", "-      ", "-      int result = JOptionPane.showConfirmDialog(null,", "-                                                 text,", "-                                                 \"Compiler not found\",", "-      ", "-      if (result == JOptionPane.YES_OPTION) {", "-        JFileChooser chooser = new JFileChooser();", "-        ", "-        do {", "-          if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {", "-            File jar = chooser.getSelectedFile();", "-            ", "-            // set the javac property", "-            getConfig().setSetting(JAVAC_LOCATION,", "-                              jar);//.getAbsolutePath());", "-            ", "-            // need to re-call getAvailable for it to re-check availability", "-            CompilerInterface[] compilers", "-              = CompilerRegistry.ONLY.getAvailableCompilers();", "-            ", "-            if (compilers[0] != NoCompilerAvailable.ONLY) {", "-              CompilerRegistry.ONLY.setActiveCompiler(compilers[0]);", "-              try {", "-                getConfig().saveConfiguration();", "-              } catch(IOException e) {", "-                // for now, do nothing", "-              }", "-            }", "-          }", "-        }", "-        while (CompilerRegistry.ONLY.isNoCompilerAvailable() &&", "-               _userWantsToPickAgain());", "+   */", "+  public static boolean promptForToolsJar(boolean needCompiler,", "+                                          boolean needDebugger) {", "+    boolean restartRequired = false;", "+      \"DrJava cannot find the Java SDK's 'tools.jar' file. \",", "+      \"This file is necessary to compile files and use the \",", "+      \"debugger.  It is generally located in the 'lib' \",", "+      \"subdirectory of your Java installation directory. \",", "+      \"Would you like to specify its location? \",", "+      \"(If you say 'No', DrJava might be unable to compile \",", "+      \"or debug programs.)\"", "+                                               \"Locate 'tools.jar'?\",", "+                                               JOptionPane.YES_NO_OPTION);", "+    ", "+    if (result == JOptionPane.YES_OPTION) {", "+      JFileChooser chooser = new JFileChooser();", "+      // TO DO: add a file filter", "+      ", "+      // Loop until we find a good tools.jar or the user gives up", "+      do {", "+        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {", "+          File jar = chooser.getSelectedFile();", "+          ", "+          if (jar != null) {", "+            // set the tools.jar property", "+            getConfig().setSetting(JAVAC_LOCATION, jar);", "+            ", "+            // Adjust if we needed a compiler", "+            if (needCompiler) {", "+              // need to re-call getAvailable for it to re-check availability", "+              CompilerInterface[] compilers", "+                = CompilerRegistry.ONLY.getAvailableCompilers();", "+              ", "+              if (compilers[0] != NoCompilerAvailable.ONLY) {", "+                needCompiler = false;", "+                CompilerRegistry.ONLY.setActiveCompiler(compilers[0]);", "+                _saveConfig();", "+              }", "+            }", "+            ", "+            // Adjust if we need a debugger", "+            if (needDebugger) {", "+              if (classLoadersCanFindDebugger()) {", "+                needDebugger = false;", "+                restartRequired = true;", "+                _saveConfig();", "+              }", "+            }", "+          }", "+        }", "+      }", "+      while ((needCompiler || needDebugger) && _userWantsToPickAgain());", "+    }", "+    ", "+    return restartRequired;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc45317e3610a074f359b0d77d8f6f32", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "commitAfterChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "               public static ImageIcon getIcon(String name)", "signatureAfterChange": "   public boolean selectDocumentAt(int x, int y)", "diff": ["-  ", "-  public static ImageIcon getIcon(String name) {", "-    URL url = JTreeSortNavigator.class.getResource(ICON_PATH + name);", "-    if (url != null) {", "-      return new ImageIcon(url);", "+   */", "+  public boolean selectDocumentAt(int x, int y) {", "+    TreePath path = getPathForLocation(x, y);", "+    if(path == null){", "+      return false;", "+    }else{", "+      DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();", "+      if(node.getUserObject() instanceof INavigatorItem){", "+        this.expandPath(path);", "+        this.setSelectionPath(path);", "+        return true;", "+      }else{", "+        return false;", "+      }", "-    return null;"]}], "num": 5314}