{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2827668f3b49659fd4a4574a44f519a5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "585605bb6b4202f0099d3a8dd1346e0d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b43f29e50ad9a747c307023da2022e85812a7a06", "commitAfterChange": "f9bd2a484c4505cc2dff97c8f9bad6e0c712ff50", "methodNumberBeforeChange": 665, "methodNumberAfterChange": 665, "signatureBeforeChange": "          public void interpreterResetting()", "signatureAfterChange": "          public void interpreterResetting()", "diff": ["+      assert duringInit() || EventQueue.isDispatchThread();", "-//      Runnable command = new Runnable() {", "-//        public void run() {", "-//          Debugger dm = _model.getDebugger();", "-//          if (dm.isAvailable() && dm.isReady()) dm.shutdown();", "-//          _resetInteractionsAction.setEnabled(false);", "+", "-//        }", "-//      };", "-//      Utilities.invokeLater(command);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a529d868961cad98438e2024cf35258d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b43f29e50ad9a747c307023da2022e85812a7a06", "commitAfterChange": "f9bd2a484c4505cc2dff97c8f9bad6e0c712ff50", "methodNumberBeforeChange": 662, "methodNumberAfterChange": 662, "signatureBeforeChange": "               public void javadocEnded(final boolean success, final File destDir, final boolean allDocs)", "signatureAfterChange": "               public void javadocEnded(final boolean success, final File destDir, final boolean allDocs)", "diff": ["-//      Runnable command = new Runnable() {", "-//        public void run() {", "+      assert EventQueue.isDispatchThread();", "-          // If there is no class name, pass the empty string as a flag.", "-          // We don't want to blow up here.", "+          // If there is no class name, pass the empty string as a flag.  We don't want to blow up here.", "-//        }", "-//      };", "-//      Utilities.invokeLater(command);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff6253cb1d9076010f8e3ec75c60f9d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b43f29e50ad9a747c307023da2022e85812a7a06", "commitAfterChange": "f9bd2a484c4505cc2dff97c8f9bad6e0c712ff50", "methodNumberBeforeChange": 666, "methodNumberAfterChange": 666, "signatureBeforeChange": "          public void interpreterReady(File wd)", "signatureAfterChange": "          public void interpreterReady(File wd)", "diff": ["-      // Only change GUI from event-dispatching thread", "-//      Runnable command = new Runnable() {", "-//        public void run() {", "+      assert duringInit() || EventQueue.isDispatchThread();", "+", "-      if (_showDebugger) {", "-        _toggleDebuggerAction.setEnabled(true);", "-      }", "+      if (_showDebugger) _toggleDebuggerAction.setEnabled(true);", "+      ", "-//        }", "-//      };", "-//      Utilities.invokeLater(command);"]}], "num": 12555}