{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e2d53ee7444d3bf1c5fb75601172071", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c1d36b9cee90f230264c4ef7d7f0440", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractSlaveJVM.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public final synchronized void quit()", "signatureAfterChange": "   public final synchronized void quit()", "diff": ["-    _log.log(this + \".quit() called\");", "+//    _log.log(this + \".quit() called\");", "+//    _master = null;", "+    ", "-              _log.log(\"Waiting for \" + AbstractSlaveJVM.this + \".quit() to exit\");", "+//              _log.log(\"Waiting for \" + AbstractSlaveJVM.this + \".quit() to exit\");", "-          Thread.sleep(100);  // This is kluge to allow the parent RMI calling thread to exit", "-    _log.log(this + \".quit() RMI call exited\");", "+//    _log.log(this + \".quit() RMI call exited\");", "-      _slaveJVMLock.notify();", "+      _slaveJVMLock.notify();  // There does not appear to be any constraint forcing this thread to exit before shutdown"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9cc9395a16ef67ce446f3ef0e49737a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractSlaveJVM.java", "commitBeforeChange": "bd322aadf7a22d1a4ec86b0a862694fe4a7061a2", "commitAfterChange": "3d4d8a63fa83bcea4096f34b202c50c11c830e2e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public final synchronized void quit()", "signatureAfterChange": "   public final synchronized void quit()", "diff": ["-          // wait for parent thread to exit ", "+          // wait for parent RMI calling thread to exit ", "-          _log.log(AbstractSlaveJVM.this + \" calling System.exit(0)\");", "-          System.exit(0);", "+          Thread.sleep(100);  // This is kluge to allow the parent RMI calling thread to exit", "+          shutdown();", "+    _log.log(this + \".quit() RMI call exited\");", "-    _log.log(this + \".quit() RMI call exited\");"]}], "num": 22790}