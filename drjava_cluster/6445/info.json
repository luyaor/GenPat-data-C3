{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d53e742f86595941acd91f3640368fe9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35f29271ae10112c8aeaa08d994b233b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d55b82d942f5baa7bd5bf3a1d9f1f1f9dce04a39", "commitAfterChange": "b0fb26e6e176051c073760a8c566e0370a4f5dd8", "methodNumberBeforeChange": 293, "methodNumberAfterChange": 293, "signatureBeforeChange": "   private void _setUpKeyBindingMaps()", "signatureAfterChange": "   private void _setUpKeyBindingMaps()", "diff": ["-    KeyBindingManager.Singleton.put(KEY_COMMENT_LINES,", "-                                    _commentLinesAction, null, \"Comment Out Line(s)\");", "-    KeyBindingManager.Singleton.put(KEY_UNCOMMENT_LINES,", "-                                    _uncommentLinesAction, null, \"Uncomment Line(s)\");", "-                                    _actionMap.get(DefaultEditorKit.deleteNextCharAction), null, \"Delete Next\");", "-    KeyBindingManager.Singleton.put(KEY_FIND_NEXT,", "-                                    _findNextAction, null, \"Find Next\");", "-", "-    // For now, _switchToPreviousPaneAction only switches the focus from the interactions pane to the definitions pane.", "-    // Change this when the behavior is updated. Same for _switchToNextPaneAction.", "-    KeyBindingManager.Singleton.put(KEY_PREVIOUS_PANE, _switchToPreviousPaneAction,", "-                                    null, \"Switch Focus To Previous Pane\");", "-    KeyBindingManager.Singleton.put(KEY_NEXT_PANE, _switchToNextPaneAction,", "-                                    null, \"Switch Focus To Next Pane\");", "+                                    _actionMap.get(DefaultEditorKit.deleteNextCharAction), null, \"Delete Next\");    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e86ae1777c3b3d4edbf71de63a14695", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 192, "signatureBeforeChange": "   private void _setUpKeyBindingMaps()", "signatureAfterChange": "   private void _setUpKeyBindingMaps()", "diff": ["-    if (CodeStatus.DEVELOPMENT) {  // no configurable keystrokes in stable", "-      ActionMap _actionMap = _currentDefPane.getActionMap();", "- ", "-      KeyBindingManager.Singleton.put(KEY_BACKWARD, _actionMap.get(DefaultEditorKit.backwardAction),null, \"Backward\");", "-      KeyBindingManager.Singleton.addShiftAction(KEY_BACKWARD,", "-                                        DefaultEditorKit.selectionBackwardAction);", "-      ", "-      KeyBindingManager.Singleton.put(KEY_BEGIN_DOCUMENT, _actionMap.get(DefaultEditorKit.beginAction), null, \"Begin Document\");", "-      KeyBindingManager.Singleton.addShiftAction(KEY_BEGIN_DOCUMENT, ", "-                                        DefaultEditorKit.selectionBeginAction);", "-      ", "-      KeyBindingManager.Singleton.put(KEY_BEGIN_LINE, _actionMap.get(DefaultEditorKit.beginLineAction), null, \"Begin Line\");", "-      KeyBindingManager.Singleton.addShiftAction(KEY_BEGIN_LINE, ", "-                                        DefaultEditorKit.selectionBeginLineAction);", "-      ", "-      KeyBindingManager.Singleton.put(KEY_BEGIN_PARAGRAPH, ", "-                             _actionMap.get(DefaultEditorKit.beginParagraphAction), null, \"Begin Paragraph\");", "-      KeyBindingManager.Singleton.addShiftAction(KEY_BEGIN_PARAGRAPH, ", "-                                        DefaultEditorKit.selectionBeginParagraphAction); ", "-      ", "-      KeyBindingManager.Singleton.put(KEY_PREVIOUS_WORD, ", "-                             _actionMap.get(DefaultEditorKit.previousWordAction), null, \"Previous Word\");", "-      KeyBindingManager.Singleton.addShiftAction(KEY_PREVIOUS_WORD, ", "-                                        DefaultEditorKit.selectionPreviousWordAction);", "-      ", "-      ", "-      KeyBindingManager.Singleton.put(KEY_DOWN, ", "-                             _actionMap.get(DefaultEditorKit.downAction), null, \"Down\");", "-      KeyBindingManager.Singleton.addShiftAction(KEY_DOWN, ", "-                                        DefaultEditorKit.selectionDownAction);", "-      ", "-      KeyBindingManager.Singleton.put(KEY_END_DOCUMENT, ", "-                             _actionMap.get(DefaultEditorKit.endAction), null, \"End Document\");", "-      KeyBindingManager.Singleton.addShiftAction(KEY_END_DOCUMENT, ", "-                                        DefaultEditorKit.selectionEndAction);", "-      ", "-      KeyBindingManager.Singleton.put(KEY_END_LINE, ", "-                             _actionMap.get(DefaultEditorKit.endLineAction), null, \"End Line\");", "-      KeyBindingManager.Singleton.addShiftAction(KEY_END_LINE, ", "-                                        DefaultEditorKit.selectionEndLineAction);", "-      ", "-      KeyBindingManager.Singleton.put(KEY_END_PARAGRAPH, ", "-                             _actionMap.get(DefaultEditorKit.endParagraphAction), null, \"End Paragraph\");", "-      KeyBindingManager.Singleton.addShiftAction(KEY_END_PARAGRAPH, ", "-                                        DefaultEditorKit.selectionEndParagraphAction);", "-      ", "-      KeyBindingManager.Singleton.put(KEY_NEXT_WORD, ", "-                             _actionMap.get(DefaultEditorKit.nextWordAction), null, \"Next Word\");", "-      KeyBindingManager.Singleton.addShiftAction(KEY_NEXT_WORD, ", "-                                        DefaultEditorKit.selectionNextWordAction);", "-      ", "-      KeyBindingManager.Singleton.put(KEY_FORWARD, ", "-                             _actionMap.get(DefaultEditorKit.forwardAction), null, \"Forward\");", "-      KeyBindingManager.Singleton.addShiftAction(KEY_FORWARD,", "-                                        DefaultEditorKit.selectionForwardAction);", "-      ", "-      KeyBindingManager.Singleton.put(KEY_UP, ", "-                             _actionMap.get(DefaultEditorKit.upAction), null, \"Up\");", "-      KeyBindingManager.Singleton.addShiftAction(KEY_UP, ", "-                                        DefaultEditorKit.selectionUpAction); ", "-      ", "-      // These last methods have no default selection methods", "-      KeyBindingManager.Singleton.put(KEY_PAGE_DOWN, ", "-                             _actionMap.get(DefaultEditorKit.pageDownAction), null, \"Page Down\");", "-      KeyBindingManager.Singleton.put(KEY_PAGE_UP, ", "-                             _actionMap.get(DefaultEditorKit.pageUpAction), null, \"Page Up\");", "-      KeyBindingManager.Singleton.put(KEY_CUT_LINE, ", "-                             _cutLineAction, null, \"Cut Line\");", "-      KeyBindingManager.Singleton.put(KEY_DELETE_PREVIOUS, ", "-                             _actionMap.get(DefaultEditorKit.deletePrevCharAction), null, \"Delete Previous\");", "-      KeyBindingManager.Singleton.put(KEY_DELETE_NEXT, ", "-                             _actionMap.get(DefaultEditorKit.deleteNextCharAction), null, \"Delete Next\");", "-      KeyBindingManager.Singleton.put(KEY_FIND_NEXT,", "-                             new AbstractAction(\"FindNext\") {", "-        public void actionPerformed(ActionEvent ae) {", "-          if(!_findReplace.isDisplayed()) {", "-            showTab(_findReplace);", "-            _findReplace.beginListeningTo(_currentDefPane);", "-          }", "-          _findReplace.findNext();", "-          _currentDefPane.requestFocus();", "+    ActionMap _actionMap = _currentDefPane.getActionMap();", "+    ", "+    KeyBindingManager.Singleton.put(KEY_BACKWARD, _actionMap.get(DefaultEditorKit.backwardAction),null, \"Backward\");", "+    KeyBindingManager.Singleton.addShiftAction(KEY_BACKWARD,", "+                                               DefaultEditorKit.selectionBackwardAction);", "+    ", "+    KeyBindingManager.Singleton.put(KEY_BEGIN_DOCUMENT, _actionMap.get(DefaultEditorKit.beginAction), null, \"Begin Document\");", "+    KeyBindingManager.Singleton.addShiftAction(KEY_BEGIN_DOCUMENT, ", "+                                               DefaultEditorKit.selectionBeginAction);", "+    ", "+    KeyBindingManager.Singleton.put(KEY_BEGIN_LINE, _actionMap.get(DefaultEditorKit.beginLineAction), null, \"Begin Line\");", "+    KeyBindingManager.Singleton.addShiftAction(KEY_BEGIN_LINE, ", "+                                               DefaultEditorKit.selectionBeginLineAction);", "+    ", "+    // Wasn't a useful action", "+    //KeyBindingManager.Singleton.put(KEY_BEGIN_PARAGRAPH, ", "+    //                       _actionMap.get(DefaultEditorKit.beginParagraphAction), null, \"Begin Paragraph\");", "+    //KeyBindingManager.Singleton.addShiftAction(KEY_BEGIN_PARAGRAPH, ", "+    //                                  DefaultEditorKit.selectionBeginParagraphAction); ", "+    ", "+    KeyBindingManager.Singleton.put(KEY_PREVIOUS_WORD, ", "+                                    _actionMap.get(DefaultEditorKit.previousWordAction), null, \"Previous Word\");", "+    KeyBindingManager.Singleton.addShiftAction(KEY_PREVIOUS_WORD, ", "+                                               DefaultEditorKit.selectionPreviousWordAction);", "+    ", "+    ", "+    KeyBindingManager.Singleton.put(KEY_DOWN, ", "+                                    _actionMap.get(DefaultEditorKit.downAction), null, \"Down\");", "+    KeyBindingManager.Singleton.addShiftAction(KEY_DOWN, ", "+                                               DefaultEditorKit.selectionDownAction);", "+    ", "+    KeyBindingManager.Singleton.put(KEY_END_DOCUMENT, ", "+                                    _actionMap.get(DefaultEditorKit.endAction), null, \"End Document\");", "+    KeyBindingManager.Singleton.addShiftAction(KEY_END_DOCUMENT, ", "+                                               DefaultEditorKit.selectionEndAction);", "+    ", "+    KeyBindingManager.Singleton.put(KEY_END_LINE, ", "+                                    _actionMap.get(DefaultEditorKit.endLineAction), null, \"End Line\");", "+    KeyBindingManager.Singleton.addShiftAction(KEY_END_LINE, ", "+                                               DefaultEditorKit.selectionEndLineAction);", "+    ", "+    // Wasn't a useful action", "+    //KeyBindingManager.Singleton.put(KEY_END_PARAGRAPH, ", "+    //                       _actionMap.get(DefaultEditorKit.endParagraphAction), null, \"End Paragraph\");", "+    //KeyBindingManager.Singleton.addShiftAction(KEY_END_PARAGRAPH, ", "+    //                                  DefaultEditorKit.selectionEndParagraphAction);", "+    ", "+    KeyBindingManager.Singleton.put(KEY_NEXT_WORD, ", "+                                    _actionMap.get(DefaultEditorKit.nextWordAction), null, \"Next Word\");", "+    KeyBindingManager.Singleton.addShiftAction(KEY_NEXT_WORD, ", "+                                               DefaultEditorKit.selectionNextWordAction);", "+    ", "+    KeyBindingManager.Singleton.put(KEY_FORWARD, ", "+                                    _actionMap.get(DefaultEditorKit.forwardAction), null, \"Forward\");", "+    KeyBindingManager.Singleton.addShiftAction(KEY_FORWARD,", "+                                               DefaultEditorKit.selectionForwardAction);", "+    ", "+    KeyBindingManager.Singleton.put(KEY_UP, ", "+                                    _actionMap.get(DefaultEditorKit.upAction), null, \"Up\");", "+    KeyBindingManager.Singleton.addShiftAction(KEY_UP, ", "+                                               DefaultEditorKit.selectionUpAction); ", "+    ", "+    // These last methods have no default selection methods", "+    KeyBindingManager.Singleton.put(KEY_PAGE_DOWN, ", "+                                    _actionMap.get(DefaultEditorKit.pageDownAction), null, \"Page Down\");", "+    KeyBindingManager.Singleton.put(KEY_PAGE_UP, ", "+                                    _actionMap.get(DefaultEditorKit.pageUpAction), null, \"Page Up\");", "+    KeyBindingManager.Singleton.put(KEY_CUT_LINE, ", "+                                    _cutLineAction, null, \"Cut Line\");", "+    KeyBindingManager.Singleton.put(KEY_DELETE_PREVIOUS, ", "+                                    _actionMap.get(DefaultEditorKit.deletePrevCharAction), null, \"Delete Previous\");", "+    KeyBindingManager.Singleton.put(KEY_DELETE_NEXT, ", "+                                    _actionMap.get(DefaultEditorKit.deleteNextCharAction), null, \"Delete Next\");", "+    KeyBindingManager.Singleton.put(KEY_FIND_NEXT,", "+                                    new AbstractAction(\"FindNext\") {", "+      public void actionPerformed(ActionEvent ae) {", "+        if(!_findReplace.isDisplayed()) {", "+          showTab(_findReplace);", "+          _findReplace.beginListeningTo(_currentDefPane);", "-      }, null, \"Find Next\");", "-      ", "-    }", "+        _findReplace.findNext();", "+        _currentDefPane.requestFocus();", "+      }", "+    }, null, \"Find Next\");"]}], "num": 6445}