{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c47458df7221cf7b49ae04745b49095", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13e1349d1dc9b6cf73ed4cff256cf63b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "          public void testForIfThenElseStatementOnly()", "signatureAfterChange": "          public void testForIfThenElseStatementOnly()", "diff": ["-      IfThenElseStatement ites1 = new IfThenElseStatement(JExprParser.NO_SOURCE_INFO,", "-                                                          new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 1),", "-                                                          new ValueReturnStatement(JExprParser.NO_SOURCE_INFO, new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 4)),", "-                                                          new ValueReturnStatement(JExprParser.NO_SOURCE_INFO, new CharLiteral(JExprParser.NO_SOURCE_INFO, 'j')));", "+      IfThenElseStatement ites1 = new IfThenElseStatement(SourceInfo.NO_INFO,", "+                                                          new IntegerLiteral(SourceInfo.NO_INFO, 1),", "+                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 4)),", "+                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new CharLiteral(SourceInfo.NO_INFO, 'j')));", "-      IfThenElseStatement ites2 = new IfThenElseStatement(JExprParser.NO_SOURCE_INFO,", "-                                                          new BooleanLiteral(JExprParser.NO_SOURCE_INFO, true),", "-                                                          new ValueReturnStatement(JExprParser.NO_SOURCE_INFO, new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 4)),", "-                                                          new ValueReturnStatement(JExprParser.NO_SOURCE_INFO, new BooleanLiteral(JExprParser.NO_SOURCE_INFO, true)));", "+      IfThenElseStatement ites2 = new IfThenElseStatement(SourceInfo.NO_INFO,", "+                                                          new BooleanLiteral(SourceInfo.NO_INFO, true),", "+                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 4)),", "+                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new BooleanLiteral(SourceInfo.NO_INFO, true)));", "-      IfThenElseStatement ites3 = new IfThenElseStatement(JExprParser.NO_SOURCE_INFO,", "-                                                          new BooleanLiteral(JExprParser.NO_SOURCE_INFO, true),", "-                                                          new ValueReturnStatement(JExprParser.NO_SOURCE_INFO, new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 4)),", "-                                                          new ValueReturnStatement(JExprParser.NO_SOURCE_INFO, new CharLiteral(JExprParser.NO_SOURCE_INFO, 'f')));", "+      IfThenElseStatement ites3 = new IfThenElseStatement(SourceInfo.NO_INFO,", "+                                                          new BooleanLiteral(SourceInfo.NO_INFO, true),", "+                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 4)),", "+                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new CharLiteral(SourceInfo.NO_INFO, 'f')));", "-      IfThenElseStatement ites4 = new IfThenElseStatement(JExprParser.NO_SOURCE_INFO,", "-                                                          new BooleanLiteral(JExprParser.NO_SOURCE_INFO, true),", "-                                                          new EmptyStatement(JExprParser.NO_SOURCE_INFO),", "-                                                          new EmptyStatement(JExprParser.NO_SOURCE_INFO));", "+      IfThenElseStatement ites4 = new IfThenElseStatement(SourceInfo.NO_INFO,", "+                                                          new BooleanLiteral(SourceInfo.NO_INFO, true),", "+                                                          new EmptyStatement(SourceInfo.NO_INFO),", "+                                                          new EmptyStatement(SourceInfo.NO_INFO));", "-      IfThenElseStatement ites5 = new IfThenElseStatement(JExprParser.NO_SOURCE_INFO,", "-                                                          new BooleanLiteral(JExprParser.NO_SOURCE_INFO, true),", "-                                                          new EmptyStatement(JExprParser.NO_SOURCE_INFO),", "-                                                          new ValueReturnStatement(JExprParser.NO_SOURCE_INFO, new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 3)));", "+      IfThenElseStatement ites5 = new IfThenElseStatement(SourceInfo.NO_INFO,", "+                                                          new BooleanLiteral(SourceInfo.NO_INFO, true),", "+                                                          new EmptyStatement(SourceInfo.NO_INFO),", "+                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 3)));", "-      IfThenElseStatement ites6 = new IfThenElseStatement(JExprParser.NO_SOURCE_INFO,", "-                                                          new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"boolean\")),", "-                                                          new ValueReturnStatement(JExprParser.NO_SOURCE_INFO, new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 4)),", "-                                                          new ValueReturnStatement(JExprParser.NO_SOURCE_INFO, new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 4)));", "+      IfThenElseStatement ites6 = new IfThenElseStatement(SourceInfo.NO_INFO,", "+                                                          new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"boolean\")),", "+                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 4)),", "+                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 4)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a835590154fc998c60ed9dfb32eeb4b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "      public void testForNormalTryCatchStatement()", "signatureAfterChange": "      public void testForNormalTryCatchStatement()", "diff": ["-      SymbolData eb = llv.getSymbolData(\"java.util.prefs.BackingStoreException\", JExprParser.NO_SOURCE_INFO, true);", "-      SymbolData re = llv.getSymbolData(\"java.lang.RuntimeException\", JExprParser.NO_SOURCE_INFO, true);", "+      SymbolData eb = llv.getSymbolData(\"java.util.prefs.BackingStoreException\", SourceInfo.NO_INFO, true);", "+      SymbolData re = llv.getSymbolData(\"java.lang.RuntimeException\", SourceInfo.NO_INFO, true);", "-      BracedBody emptyBody = new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]);", "-      BracedBody bb = new BracedBody(JExprParser.NO_SOURCE_INFO, ", "+      BracedBody emptyBody = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]);", "+      BracedBody bb = new BracedBody(SourceInfo.NO_INFO, ", "-        new ThrowStatement(JExprParser.NO_SOURCE_INFO, ", "-        new SimpleNamedClassInstantiation(JExprParser.NO_SOURCE_INFO, ", "-                                         new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, ", "+        new ThrowStatement(SourceInfo.NO_INFO, ", "+        new SimpleNamedClassInstantiation(SourceInfo.NO_INFO, ", "+                                         new ClassOrInterfaceType(SourceInfo.NO_INFO, ", "-                                          new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[]{new StringLiteral(JExprParser.NO_SOURCE_INFO, \"boo\")})))});", "+                                          new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[]{new StringLiteral(SourceInfo.NO_INFO, \"boo\")})))});", "-      Block b = new Block(JExprParser.NO_SOURCE_INFO, bb);", "-      Block b2 = new Block(JExprParser.NO_SOURCE_INFO, emptyBody);", "+      Block b = new Block(SourceInfo.NO_INFO, bb);", "+      Block b2 = new Block(SourceInfo.NO_INFO, emptyBody);", "-      NormalTryCatchStatement tcfs = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, b, new CatchBlock[0]);", "+      NormalTryCatchStatement tcfs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[0]);", "-      NormalTryCatchStatement inner = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, b, new CatchBlock[0]);", "-      NormalTryCatchStatement nested = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, new Block(JExprParser.NO_SOURCE_INFO, new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {inner})), new CatchBlock[0]);", "+      NormalTryCatchStatement inner = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[0]);", "+      NormalTryCatchStatement nested = new NormalTryCatchStatement(SourceInfo.NO_INFO, new Block(SourceInfo.NO_INFO, new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {inner})), new CatchBlock[0]);", "-      UninitializedVariableDeclarator uvd1 = new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.util.prefs.BackingStoreException\", new Type[0]), new Word(JExprParser.NO_SOURCE_INFO, \"e\"));", "-      FormalParameter fp1 = new FormalParameter(JExprParser.NO_SOURCE_INFO, uvd1, false);", "+      UninitializedVariableDeclarator uvd1 = new UninitializedVariableDeclarator(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.util.prefs.BackingStoreException\", new Type[0]), new Word(SourceInfo.NO_INFO, \"e\"));", "+      FormalParameter fp1 = new FormalParameter(SourceInfo.NO_INFO, uvd1, false);", "-      CatchBlock cb = new CatchBlock(JExprParser.NO_SOURCE_INFO, fp1, b2);", "-      NormalTryCatchStatement nested2 = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, new Block(JExprParser.NO_SOURCE_INFO, new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {inner})), new CatchBlock[] {cb});", "+      CatchBlock cb = new CatchBlock(SourceInfo.NO_INFO, fp1, b2);", "+      NormalTryCatchStatement nested2 = new NormalTryCatchStatement(SourceInfo.NO_INFO, new Block(SourceInfo.NO_INFO, new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {inner})), new CatchBlock[] {cb});", "-      BracedBody reb = new BracedBody(JExprParser.NO_SOURCE_INFO, ", "+      BracedBody reb = new BracedBody(SourceInfo.NO_INFO, ", "-        new ThrowStatement(JExprParser.NO_SOURCE_INFO, ", "-        new SimpleNamedClassInstantiation(JExprParser.NO_SOURCE_INFO, ", "-                                         new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, ", "+        new ThrowStatement(SourceInfo.NO_INFO, ", "+        new SimpleNamedClassInstantiation(SourceInfo.NO_INFO, ", "+                                         new ClassOrInterfaceType(SourceInfo.NO_INFO, ", "-                                         new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[0])))});", "+                                         new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0])))});", "-      NormalTryCatchStatement inner3 = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, new Block(JExprParser.NO_SOURCE_INFO, reb), new CatchBlock[0]);", "-      NormalTryCatchStatement nested3 = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, new Block(JExprParser.NO_SOURCE_INFO, new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {inner3})), new CatchBlock[0]);", "+      NormalTryCatchStatement inner3 = new NormalTryCatchStatement(SourceInfo.NO_INFO, new Block(SourceInfo.NO_INFO, reb), new CatchBlock[0]);", "+      NormalTryCatchStatement nested3 = new NormalTryCatchStatement(SourceInfo.NO_INFO, new Block(SourceInfo.NO_INFO, new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {inner3})), new CatchBlock[0]);"]}], "num": 19793}