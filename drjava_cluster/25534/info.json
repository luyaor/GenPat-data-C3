{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b582703950604d2705b74acdad6040c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "463ac748d5dfaa32d86cabb51dcb0306", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "79727931e016d65bd6dc6c61b777e0998bf7636b", "commitAfterChange": "b0cd47f114771356118cb3166386257fa0295851", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   private void _javadocAllWorker(File destDirFile, FileSaveSelector saver, String classPath)", "signatureAfterChange": "   private void _javadocAllWorker(File destDirFile, FileSaveSelector saver, String classPath)", "diff": ["-            File[] javaFiles = sourceRoot.listFiles(FileOps.JAVA_FILE_FILTER);", "-            if (javaFiles!=null) { // listFiles may return null if there's an IO error", "-              for (File f: javaFiles) { docUnits.add(f.getAbsolutePath());}", "-            }", "+            Iterable<File> javaFiles = IOUtil.attemptListFilesAsIterable(sourceRoot, IOUtil.extensionFileFilter(\"java\"));", "+            for (File f: javaFiles) { docUnits.add(f.getAbsolutePath());}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e358a777545865c32a81e342a4717910", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "    public void testGetSourceRootPackageThreeDeepInvalid() throws BadLocationException, IOException", "signatureAfterChange": "    public void testGetSourceRootPackageThreeDeepInvalid() throws BadLocationException, IOException", "diff": ["-    File[] roots = _model.getSourceRootSet();", "-    assertEquals(\"number of source roots\", 0, roots.length);", "+    Iterable<File> roots = _model.getSourceRootSet();", "+    assertEquals(\"number of source roots\", 0, IterUtil.sizeOf(roots));"]}], "num": 25534}