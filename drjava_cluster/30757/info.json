{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff809b39847a8359dac2ac7ebb945e7a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dc517da2d0c37d062271f4375e671a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 479, "methodNumberAfterChange": 479, "signatureBeforeChange": "\r \r   public void forComplexSuperReference(ComplexSuperReference that)", "signatureAfterChange": "    public void forComplexSuperReference(ComplexSuperReference that)", "diff": ["-\r", "-  public void forComplexSuperReference(ComplexSuperReference that) {\r", "-    forComplexSuperReferenceDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getEnclosing().visit(this);\r", "-    forComplexSuperReferenceOnly(that);\r", "-  }\r", "+", "+  public void forComplexSuperReference(ComplexSuperReference that) {", "+    forComplexSuperReferenceDoFirst(that);", "+    if (prune(that)) return;", "+    that.getEnclosing().visit(this);", "+    forComplexSuperReferenceOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a166314dd2f074040293e78b9124da6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 478, "methodNumberAfterChange": 478, "signatureBeforeChange": "\r \r   public void forSimpleSuperReference(SimpleSuperReference that)", "signatureAfterChange": "    public void forSimpleSuperReference(SimpleSuperReference that)", "diff": ["-\r", "-  public void forSimpleSuperReference(SimpleSuperReference that) {\r", "-    forSimpleSuperReferenceDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forSimpleSuperReferenceOnly(that);\r", "-  }\r", "+", "+  public void forSimpleSuperReference(SimpleSuperReference that) {", "+    forSimpleSuperReferenceDoFirst(that);", "+    if (prune(that)) return;", "+    forSimpleSuperReferenceOnly(that);", "+  }"]}], "num": 30757}