{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e17a8e203bccb4e9861fe1efa7e6e271", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "729cce1f638ce5e93d661bf88172bea2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/tuple/Option.java", "commitBeforeChange": "cfd4689ec89c3908ea0306a11510c85ea5436de0", "commitAfterChange": "d75f8c4199bcbc3343c2ad391d599295e4ed6fb7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public static <T> T unwrap(Option<T> opt, final T forNone)", "signatureAfterChange": "   public static <T> T unwrap(Option<T> opt, T forNone)", "diff": ["-  public static <T> T unwrap(Option<T> opt, final T forNone) {", "-    return opt.apply(new OptionVisitor<T, T>() {", "-      public T forSome(T value) { return value; }", "-      public T forNone() { return forNone; }", "-    });", "+  public static <T> T unwrap(Option<T> opt, T forNone) {", "+    if (opt instanceof Wrapper<?>) { return ((Wrapper<T>)opt).value(); }", "+    else { return forNone; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1d0f5b39ce8dbca0b523aa25a964ee1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/tuple/Option.java", "commitBeforeChange": "cfd4689ec89c3908ea0306a11510c85ea5436de0", "commitAfterChange": "d75f8c4199bcbc3343c2ad391d599295e4ed6fb7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public static <T> T unwrap(Option<T> opt, final Thunk<? extends RuntimeException> forNone)", "signatureAfterChange": "   public static <T> T unwrap(Option<T> opt, final Thunk<? extends RuntimeException> forNone)", "diff": ["-    return opt.apply(new OptionVisitor<T, T>() {", "-      public T forSome(T value) { return value; }", "-      public T forNone() {", "-        RuntimeException e = forNone.value();", "-        e.fillInStackTrace();", "-        throw e;", "-      }", "-    });", "+    if (opt instanceof Wrapper<?>) { return ((Wrapper<T>)opt).value(); }", "+    else {", "+      RuntimeException e = forNone.value();", "+      e.fillInStackTrace();", "+      throw e;", "+    }"]}], "num": 17809}