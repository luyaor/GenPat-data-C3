{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c7fc95132bd8ff06293cfaa56c29176", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aee82c88cbfedc89795af56e19540280", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "commitAfterChange": "eb9337b4d6e2d2de4c1774413f08dfb947ae389c", "methodNumberBeforeChange": 315, "methodNumberAfterChange": 315, "signatureBeforeChange": "   private void _reenableScrollBar()", "signatureAfterChange": "   private void _reenableScrollBar()", "diff": ["-   */", "+  /** Addresses Mac OS X bug where the scrollbars are disabled in one document after opening another. */", "-    if (scroll == null) {", "+    if (scroll == null)", "-      ", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f25cf9c3c6f63c4c881c7d8e2fbe4fe2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public DefinitionsPane(MainFrame mf, final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public DefinitionsPane(MainFrame mf, final OpenDefinitionsDocument doc)", "diff": ["-    // Start the pane out with the NULL_DOCUMENT so that", "-    // it doesn't start out with a reference to the defdoc", "+    // Start the pane out with the NULL_DOCUMENT so that it doesn't start out with a reference to the defdoc", "+  ", "+//    this.setEditorKit(new StyledEditorKit());", "-     ", "-    //this.setEditorKit(new StyledEditorKit());", "+    if (CodeStatus.DEVELOPMENT) _antiAliasText = DrJava.getConfig().getSetting(TEXT_ANTIALIAS).booleanValue();", "-    if (CodeStatus.DEVELOPMENT) {", "-      _antiAliasText = DrJava.getConfig().getSetting(TEXT_ANTIALIAS).booleanValue();", "-    }", "-", "-    ", "-    ", "-        ", "-    // Setup the color listeners.", "-    // NOTE: the Foreground/Background listeners add themselves to ", "-    //   DrJava.getConfig() in their own constructors.", "-    //   Rather than refactor it, we decided to work with that ", "-    //   design decision.", "+      ", "+    // Setup the color listeners. NOTE: the Foreground/Background listeners add themselves to DrJava.getConfig() ", "+    // in their own constructors. Rather than refactor it, we decided to work with that design decision.", "-      public void focusLost(FocusEvent e) {", "-        setVisible(false);", "-      }", "+      public void focusLost(FocusEvent e) { setVisible(false); }", "-"]}], "num": 6727}