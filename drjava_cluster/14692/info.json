{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "441099f93b4d74994c45a0c57f8b99e6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6228836d59863d0e8c47ce25ddf263e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "d884ae55e9471d604870827048329b58394dd950", "commitAfterChange": "28bca5adabaaf178bdf954808155389f93ed51fa", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public synchronized void toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean isEnabled)      throws DebugException", "signatureAfterChange": "   public synchronized void toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean isEnabled)      throws DebugException", "diff": ["-    Breakpoint breakpoint = _model.getBreakpointManager().getRegionAt(doc, offset, offset);", "+    // ensure that offset is at line start and falls within the document", "+    offset = doc.getLineStartPos(offset);", "+    if (offset < 0 || offset > doc.getLength()) return;", "+    ", "+    Breakpoint breakpoint = _model.getBreakpointManager().getRegionAt(doc, offset);", "-      if (doc.getLineStartPos(offset) == doc.getLineEndPos(offset)) {", "+      if (offset == doc.getLineEndPos(offset)) {", "-        try { setBreakpoint(new JPDABreakpoint (doc, offset, lineNum, isEnabled, this)); }", "+        try { setBreakpoint(new JPDABreakpoint(doc, offset, lineNum, isEnabled, this)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72f247b8513cde47530fca45c6ca153c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "fc51b2245942e6d87f48245a9b8cdb4aedbcacc2", "commitAfterChange": "973271a114877f62b3cb122ffc9ab5f28c91b43a", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "   public int getLineEndPos(final int pos)", "signatureAfterChange": "   public int getLineEndPos(final int pos)", "diff": ["-      _storeInCache(key, newPos, newPos + 1);", "+      assert newPos == getLength() || _getText(newPos, 1).charAt(0) == '\\n';", "+      _storeInCache(key, newPos, newPos);"]}], "num": 14692}