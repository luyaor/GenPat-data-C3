{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51fc48b609719f063c45f80daf647bed", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab3a2b2ec290fed8a7890dc272a424ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "commitAfterChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public int getLineFirstCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   public int getLineFirstCharPos(int pos) throws BadLocationException", "diff": ["-   */", "+    */", "-      int startLinePos = getLineStartPos(pos);", "-      int endLinePos = getLineEndPos(pos);", "+      final int startLinePos = getLineStartPos(pos);", "+      final int endLinePos = getLineEndPos(pos);", "+      int nonWSPos = endLinePos;", "-          _storeInCache(key, startLinePos + walker);", "-          return startLinePos + walker;", "+          nonWSPos = startLinePos + walker;", "+          break;", "-      // No non-WS char found, so return last position on line", "-      _storeInCache(key, endLinePos);", "-      return endLinePos;", "+      _storeInCache(key, nonWSPos, nonWSPos);", "+      return nonWSPos;  // may equal lineEndPos"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b280b8ac6b8bbf1362733f6a1f824a65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "b42121281abc84b5922f4d3c2653d8341fced477", "commitAfterChange": "6b690d7e50bc9f782260d6c38aaf261dfe0715e0", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   private void _selectReplacedItem(int length)", "signatureAfterChange": "   private void _selectFoundOrReplacedItem(int length)", "diff": ["-  /** This method is used to select the item that has been inserted in a replacement. */", "-  private void _selectReplacedItem(int length) {", "+    * item; in a backwards search it is the LEFT edge. */", "+  private void _selectFoundOrReplacedItem(int length) {", "+    int offset = _machine.getCurrentOffset();", "-    to = _machine.getCurrentOffset();", "-    if (_machine.getSearchBackwards()) from = to + length;", "-    else                               from = to - length;", "-    _selectFoundItem(from, to);", "+", "+    if (_machine.getSearchBackwards()) {", "+      from = offset;", "+      to = offset + length;", "+    }", "+    else {                   ", "+      from = offset - length;", "+      to = offset;", "+    }", "+    _selectFoundOrReplacedItem(from, to);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc444cb5af86300fd097ffa7b973e328", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "commitAfterChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public int getLineStartPos(final int pos)", "signatureAfterChange": "   public int getLineStartPos(final int pos)", "diff": ["-   */", "+    */", "-      if (dist == -1) {", "-        // No previous newline was found; return DOCSTART", "-        _storeInCache(key, DOCSTART);", "-        return DOCSTART;", "-      }", "-      _storeInCache(key, pos - dist);", "+      int newPos = DOCSTART;", "+      if (dist >= 0)  newPos = pos - dist;", "+      _storeInCache(key, newPos, pos);", "+      return newPos;  // may equal DOCSTART", "-", "-    return pos - dist;"]}], "num": 6407}