{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4598435c28946b2da52ca03b3a00712", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e7af05569508f87ce5df87cfe01594d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "commitAfterChange": "32513407e5f8f41a21eb0336c92af1269f67953c", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 216, "signatureBeforeChange": "     protected DDReconstructor makeReconstructor()", "signatureAfterChange": "     protected DDReconstructor makeReconstructor()", "diff": ["+        // Weak hashmap that associates a WrappedPosition with its offset when saveDocInfo was called", "+        private WeakHashMap<DefinitionsDocument.WrappedPosition, Integer> _positions =", "+          new WeakHashMap<DefinitionsDocument.WrappedPosition, Integer>();", "+        ", "+          // re-create and update all positions", "+          tempDoc.setWrappedPositionOffsets(_positions);", "+          ", "+          ", "+          // save offsets of all positions", "+          _positions.clear();", "+          _positions = doc.getWrappedPositionOffsets();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94865935b0f191e4cc7285e4493b6a40", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e9a3c458e98ae55999f3ec08806738a9c9f668dc", "commitAfterChange": "a73e93a8edce9508179438ae19a8b11327258b2d", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": "     protected DDReconstructor makeReconstructor()", "signatureAfterChange": "     protected DDReconstructor makeReconstructor()", "diff": ["+", "+        private List<FinalizationListener<DefinitionsDocument>> _finalListeners =", "+          new LinkedList<FinalizationListener<DefinitionsDocument>>();", "-            tempDoc.setCurrentLocation(_loc);", "-            for(DocumentListener d : _list) {", "-              if (d instanceof DocumentUIListener) {", "-                tempDoc.addDocumentListener(d);", "-              }", "+          tempDoc.setCurrentLocation(_loc);", "+          for(DocumentListener d : _list) {", "+            if (d instanceof DocumentUIListener) {", "+              tempDoc.addDocumentListener(d);", "-            for(UndoableEditListener l: _undoListeners){", "-              tempDoc.addUndoableEditListener(l);", "-            }", "-            tempDoc.resetModification();", "-//            tempDoc.setUndoManager(_undo);", "+          }", "+          for(UndoableEditListener l: _undoListeners){", "+            tempDoc.addUndoableEditListener(l);", "+          }", "+          for(FinalizationListener<DefinitionsDocument> l: _finalListeners){", "+            tempDoc.addFinalizationListener(l);", "+          }", "+          tempDoc.resetModification();", "+          //            tempDoc.setUndoManager(_undo);", "+          _finalListeners = doc.getFinalizationListeners();"]}], "num": 21477}