{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e58bd3422b87c8f11a65809efefcb0d6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "222b523cf29378ad1131c431bf22b242", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "bf2319a0fd4ff0da05d171cf995d395154267897", "commitAfterChange": "ce944bab12f670cf565ac442d0f81c8cbf5e4ad0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testMetaKeyPress() throws BadLocationException", "signatureAfterChange": "   public void testMetaKeyPress() throws BadLocationException", "diff": ["-   */", "+  /** Tests that a simulated key press with the meta modifier is correct.  Reveals bug 676586. */", "-    final DefinitionsPane definitions = _frame.getCurrentDefPane();", "-    final OpenDefinitionsDocument doc = definitions.getOpenDefDocument();", "+    final DefinitionsPane defPane = _frame.getCurrentDefPane();", "+    final OpenDefinitionsDocument doc = defPane.getOpenDefDocument();", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_TYPED, (new Date()).getTime(),", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_TYPED, (new Date()).getTime(),", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_RELEASED, (new Date()).getTime(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "367ab0bd0d8bbbf877a05beae93b3a11", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "bf2319a0fd4ff0da05d171cf995d395154267897", "commitAfterChange": "ce944bab12f670cf565ac442d0f81c8cbf5e4ad0", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public void testBackspace()", "signatureAfterChange": "   public void testBackspace()", "diff": ["-    final DefinitionsPane definitions = _frame.getCurrentDefPane();", "-    final OpenDefinitionsDocument doc = definitions.getOpenDefDocument();", "+    final DefinitionsPane defPane = _frame.getCurrentDefPane();", "+    final OpenDefinitionsDocument doc = defPane.getOpenDefDocument();", "-        definitions.setCaretPosition(4);", "+        defPane.setCaretPosition(4);", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(), 0, ", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_PRESSED, (new Date()).getTime(), 0, ", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(), 0,", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_RELEASED, (new Date()).getTime(), 0,", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_TYPED, (new Date()).getTime(), 0,", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_TYPED, (new Date()).getTime(), 0,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d355272bdea2731b70baaf803e18948", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "bf2319a0fd4ff0da05d171cf995d395154267897", "commitAfterChange": "ce944bab12f670cf565ac442d0f81c8cbf5e4ad0", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public void testMatchBraceText()", "signatureAfterChange": "   public void testMatchBraceText()", "diff": ["-    final DefinitionsPane definitions = _frame.getCurrentDefPane();", "-    final OpenDefinitionsDocument doc = definitions.getOpenDefDocument();", "+    final DefinitionsPane defPane = _frame.getCurrentDefPane();", "+    final OpenDefinitionsDocument doc = defPane.getOpenDefDocument();", "-        definitions.setCaretPosition(4); ", "+        defPane.setCaretPosition(4); ", "-    Utilities.invokeAndWait(new Runnable() { public void run() {  definitions.setCaretPosition(115); } });", "+    Utilities.invokeAndWait(new Runnable() { public void run() {  defPane.setCaretPosition(115); } });", "-    Utilities.invokeAndWait(new Runnable() { public void run() { definitions.setCaretPosition(102);  } });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { defPane.setCaretPosition(102);  } });", "-    Utilities.invokeAndWait(new Runnable() { public void run() { definitions.setCaretPosition(119); } });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { defPane.setCaretPosition(119); } });", "-    Utilities.invokeAndWait(new Runnable() { public void run() { definitions.setCaretPosition(121); } });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { defPane.setCaretPosition(121); } });", "-    Utilities.invokeAndWait(new Runnable() { public void run() { definitions.setCaretPosition(122); } });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { defPane.setCaretPosition(122); } });"]}], "num": 14350}