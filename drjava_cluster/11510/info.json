{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "844323a3fc63577965808772e8e06b72", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa16903ced7a5fabed601d373710a1fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   protected String interpret(String input) throws BadLocationException", "signatureAfterChange": "   protected String interpret(String input) throws BadLocationException", "diff": ["+", "+    TestListener listener = new TestListener() {", "+      public void interactionStarted() {", "+        interactionStartCount++;", "+      }", "+", "+      public void interactionEnded() {", "+        assertInteractionStartCount(1);", "+", "+        synchronized(this) {", "+          interactionEndCount++;", "+          this.notify();", "+        }", "+      }", "+    };", "+", "+    _model.addListener(listener);", "+", "+    // wait for interpret over", "+    while (listener.interactionEndCount == 0) {", "+      synchronized(listener) {", "+        try {", "+          listener.wait();", "+        }", "+        catch (InterruptedException ie) {", "+          throw new UnexpectedException(ie);", "+        }", "+      }", "+    }", "+", "+    _model.removeListener(listener);", "+    listener.assertInteractionStartCount(1);", "+    listener.assertInteractionEndCount(1);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db1c5e3716fc997aa66e8f4a7ae27a42", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "5944dd2b12a74ebad6e3549d813d2dd557403c7e", "commitAfterChange": "53735c967d2add6a16ab5776bac9111426f41996", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "   public void testSaveClearAndLoadHistory() throws DocumentAdapterException,     BadLocationException, InterruptedException, IOException", "signatureAfterChange": "   public void testSaveClearAndLoadHistory() throws DocumentAdapterException,     BadLocationException, InterruptedException, IOException", "diff": ["+    String newLine = System.getProperty(\"line.separator\");", "+    String s3 = \"int y;\" + newLine + \"int z;\";", "+    interpretIgnoreResult(s3);", "+    while (listener.interactionEndCount == 2) {", "+      synchronized(listener) {", "+        try {", "+          listener.wait();", "+        }", "+        catch (InterruptedException ie) {", "+          throw new UnexpectedException(ie);", "+        }", "+      }", "+    }", "-                 s1+'\\n'+s2+'\\n',", "+                 s1 + newLine + s2 + newLine + s3 + newLine,", "-                 s1+\"\\n\"+s2+\";\\n\",", "+                 s1 + newLine + s2 + \";\" + newLine + s3 + newLine,", "-    listener.assertInteractionEndCount(2);", "-    listener.assertInteractionStartCount(2);", "+    listener.assertInteractionEndCount(3);", "+    listener.assertInteractionStartCount(3);", "-    //String newLine = System.getProperty(\"line.separator\");", "-                 History.HISTORY_FORMAT_VERSION_2 + s1 + \"\\n\" + s2 + \";\\n\",", "+                 History.HISTORY_FORMAT_VERSION_2 + ", "+                 s1 + newLine + s2 + \";\" + newLine + s3 + newLine,", "-    while (listener.interactionEndCount == 2) {", "+    while (listener.interactionEndCount == 3) {", "-    listener.assertInteractionStartCount(3);", "-    listener.assertInteractionEndCount(3);", "+    listener.assertInteractionStartCount(4);", "+    listener.assertInteractionEndCount(4);"]}], "num": 11510}