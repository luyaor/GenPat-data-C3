{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e70e0fda6fc0b88eac0d0a25a0cece91", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e363549d088412c47e2a8abaaeba7a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsParenOrBracketTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testCurly() throws BadLocationException", "signatureAfterChange": "      public void testCurly() throws BadLocationException", "diff": ["-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0));", "-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20));", "-      assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21));", "-      assertTrue(\"START is close brace.\", !_rule.applyRule(_doc, 23));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.OTHER));", "+      assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21, Indenter.OTHER));", "+      assertTrue(\"START is close brace.\", !_rule.applyRule(_doc, 23, Indenter.OTHER));", "-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0));", "-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20));", "-      assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21));", "-      assertTrue(\"START's brace is curly brace.\", !_rule.applyRule(_doc, 23));", "-      assertTrue(\"START is close curly brace.\", !_rule.applyRule(_doc, _text.length() - 1));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.OTHER));", "+      assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21, Indenter.OTHER));", "+      assertTrue(\"START's brace is curly brace.\", !_rule.applyRule(_doc, 23, Indenter.OTHER));", "+      assertTrue(\"START is close curly brace.\", !_rule.applyRule(_doc, _text.length() - 1, Indenter.OTHER));", "-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0));", "-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20));", "-      assertTrue(\"START is open curly brace.\", !_rule.applyRule(_doc, 21));", "-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 24));", "-      assertTrue(\"START's brace is open curly brace.\", !_rule.applyRule(_doc, _text.length() - 1)); ", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.OTHER));", "+      assertTrue(\"START is open curly brace.\", !_rule.applyRule(_doc, 21, Indenter.OTHER));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 24, Indenter.OTHER));", "+      assertTrue(\"START's brace is open curly brace.\", !_rule.applyRule(_doc, _text.length() - 1, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7193e0f6dc84bb38f523be6bdf75e4d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionHasCharPrecedingOpenBraceTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testIsIn2DArray() throws BadLocationException", "signatureAfterChange": "   public void testIsIn2DArray() throws BadLocationException", "diff": ["-    assertTrue(\"At DOCSTART.\", ! rule.applyRule(_doc, 0));", "-    assertTrue(\"At identifier.\",  ! rule.applyRule(_doc, 10));", "-    assertTrue(\"At start of outer array\", !rule.applyRule(_doc, 25));", "+    assertTrue(\"At DOCSTART.\", ! rule.applyRule(_doc, 0, Indenter.OTHER));", "+    assertTrue(\"At identifier.\",  ! rule.applyRule(_doc, 10, Indenter.OTHER));", "+    assertTrue(\"At start of outer array\", !rule.applyRule(_doc, 25, Indenter.OTHER));", "-    assertTrue(\"Before start of inner array\", rule.applyRule(_doc, 50));", "+    assertTrue(\"Before start of inner array\", rule.applyRule(_doc, 50, Indenter.OTHER));", "-    assertTrue(\"Same line as inner {.\", rule.applyRule(_doc, 54));", "-    assertTrue(\"Line after inner {.\", !rule.applyRule(_doc, 75));", "-    assertTrue(\"START is stil in first.\", !rule.applyRule(_doc, 180));", "+    assertTrue(\"Same line as inner {.\", rule.applyRule(_doc, 54, Indenter.OTHER));", "+    assertTrue(\"Line after inner {.\", !rule.applyRule(_doc, 75, Indenter.OTHER));", "+    assertTrue(\"START is stil in first.\", !rule.applyRule(_doc, 180, Indenter.OTHER));", "-    assertTrue(\"Second pseudo array element.\",  rule.applyRule(_doc, 230));", "-    assertTrue(\"In multi-line comment.\", ! rule.applyRule(_doc, 260));", "+    assertTrue(\"Second pseudo array element.\",  rule.applyRule(_doc, 230, Indenter.OTHER));", "+    assertTrue(\"In multi-line comment.\", ! rule.applyRule(_doc, 260, Indenter.OTHER));", "-    assertTrue(\"multi-line comment w/ = {.\",  ! rule.applyRule(_doc, 275));", "+    assertTrue(\"multi-line comment w/ = {.\",  ! rule.applyRule(_doc, 275, Indenter.OTHER));", "-    assertTrue(\"Line inside multi-line comment.\", !rule.applyRule(_doc, 300));", "-    assertTrue(\"Line closes multi-line comment.\", !rule.applyRule(_doc, 399));", "+    assertTrue(\"Line inside multi-line comment.\", !rule.applyRule(_doc, 300, Indenter.OTHER));", "+    assertTrue(\"Line closes multi-line comment.\", !rule.applyRule(_doc, 399, Indenter.OTHER));", "-    assertTrue(\"Last close brace\",  rule.applyRule(_doc, 400));", "-    assertTrue(\"At end of document.\",  rule.applyRule(_doc, 401));", "+    assertTrue(\"Last close brace\",  rule.applyRule(_doc, 400, Indenter.OTHER));", "+    assertTrue(\"At end of document.\",  rule.applyRule(_doc, 401, Indenter.OTHER));"]}], "num": 4483}