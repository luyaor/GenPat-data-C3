{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e75554028431f78ef01508e1bbabe486", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "740ef7745c0f0b067e696bb61744b996", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "95fc34f702728d19ab12beabcddae9a69d422c00", "commitAfterChange": "5607cf775ad2ef70ccd49a101fe31fb06f6903bb", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "      public void testForNormalTryCatchStatement()", "signatureAfterChange": "      public void testForNormalTryCatchStatement()", "diff": ["-      assertEquals(\"There should now be 2 errors\", 2, errors.size());", "-      assertEquals(\"Error message should be correct\", \"This statement throws the exception java.util.prefs.BackingStoreException which needs to be caught or declared to be thrown\", errors.get(1).getFirst());", "+      assertEquals(\"There should still be be 1 error\", 1, errors.size());  // Generated error is a duplicate!", "+      assertEquals(\"Error message should be correct\", ", "+                   \"This statement throws the exception java.util.prefs.BackingStoreException \" + ", "+                   \"which needs to be caught or declared to be thrown\", ", "+                   errors.get(0).getFirst());", "-      assertEquals(\"There should still be 2 errors\", 2, errors.size());", "+      assertEquals(\"There should still be 1 error\", 1, errors.size());", "-      assertEquals(\"There should still be 2 errors\", 2, errors.size());", "+      assertEquals(\"There should still be 1 error\", 1, errors.size());", "-      assertEquals(\"There should still be 2 errors!\", 2, errors.size());", "+      assertEquals(\"There should still be 1 error!\", 1, errors.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff5ac2f8e08b5b9b96b34d6eb326ca02", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "95fc34f702728d19ab12beabcddae9a69d422c00", "commitAfterChange": "5607cf775ad2ef70ccd49a101fe31fb06f6903bb", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "          public void testForClassDef()", "signatureAfterChange": "          public void testForClassDef()", "diff": ["-      assertEquals(\"The tenth error message should be correct\", \"Hspia extends TestCase and thus must be explicitly declared public\" , errors.get(9).getFirst());", "-      assertEquals(\"The eleventh error message should be correct\", \"Class Hspia does not have any valid test methods.  Test methods must be declared public, must return void, and must start with the word \\\"test\\\"\" , errors.get(10).getFirst());", "+      assertEquals(\"The tenth error message should be correct\", ", "+                   \"Hspia extends TestCase and thus must be explicitly declared public\" , ", "+                   errors.get(9).getFirst());", "+      assertEquals(\"The eleventh error message should be correct\", ", "+                   \"Class Hspia does not have any valid test methods.  Test methods must be declared public, \" +", "+                   \"must return void, and must start with the word \\\"test\\\"\" , ", "+                   errors.get(10).getFirst());", "-      assertEquals(\"There should now be 12 errors\", 12, errors.size());", "-      assertEquals(\"The 12th error message should be correct\", \"Class Hspia does not have any valid test methods.  Test methods must be declared public, must return void, and must start with the word \\\"test\\\"\" , errors.get(11).getFirst());", "+      assertEquals(\"There should still be 11 errors\", 11, errors.size());  // Generated duplicate error message", "+      assertEquals(\"The 12th error message should be correct\", ", "+                   \"Class Hspia does not have any valid test methods.  Test methods must be declared public, \" +", "+                   \"must return void, and must start with the word \\\"test\\\"\" , ", "+                   errors.get(10).getFirst());"]}], "num": 17875}