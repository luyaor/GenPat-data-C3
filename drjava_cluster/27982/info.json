{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20b9bb01b6d0bb63b8946b3f7ef851fb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2531c3ee5ae28c39b8a425e6c7e06d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "commitAfterChange": "ec06880aa408b928b2f252538b208a76154d8334", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   protected void readText(final boolean finish)", "signatureAfterChange": "   protected void readText(final boolean finish)", "diff": ["-    if (((_is!=null) || (_erris!=null)) &&", "-        (_updateNowButton.isEnabled())) {", "-      _updateNowButton.setEnabled(false);", "+    if (((_is!=null) || (_erris!=null))) {", "-        _sb.append(\"\\n\\nI/O Exception reading from process\\n\");", "+        if (_p!=null) {", "+          try {", "+            _p.exitValue();", "+            // if we get here, process has finished, and we don't display the I/O exception", "+          }", "+          catch(IllegalThreadStateException e) {", "+            // process has NOT finished yet, display the I/O exception", "+            _sb.append(\"\\n\\nI/O Exception reading from process\\n\");", "+          }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db5156bb8f360d0daec9d09cf8a76729", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "b68b258fee7c24e8a8c68fc2e7d3d99ccd585753", "commitAfterChange": "ec06880aa408b928b2f252538b208a76154d8334", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   protected void updateText()", "signatureAfterChange": "   protected void updateText()", "diff": ["-      try {", "-        if ((_is!=null) && (_p!=null) &&", "-            (_is.ready()) &&", "-            (_p.getInputStream().available()>0)) { readText(false); }", "-      }", "-      catch(IOException ioe) {", "-        _sb.append(\"\\n\\nI/O Exception reading from process\\n\");", "-        abortActionPerformed(null);", "-        ++_changeCount;", "-      }", "+//      try {", "+//        if ((_is!=null) && (_p!=null) &&", "+//            (_is.ready()) &&", "+//            (_p.getInputStream().available()>0)) { readText(false); }", "+//      }", "+//      catch(IOException ioe) {", "+//        try {", "+//          _p.exitValue();", "+//          // if we get here, process has finished, and we don't display the I/O exception", "+//        }", "+//        catch(IllegalThreadStateException e) {", "+//          // process has NOT finished yet, display the I/O exception", "+//          _sb.append(\"\\n\\nI/O Exception reading from process\\n\");", "+//        }", "+//        abortActionPerformed(null);", "+//        ++_changeCount;", "+//      }"]}], "num": 27982}