{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9254687c7ded71de998459ed4362bac2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22aeb04524b71840198eda4e843283c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   private LinkedList<CompilerError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpressionIF>> visitorErrors)", "signatureAfterChange": "   private LinkedList<DJError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpressionIF>> visitorErrors)", "diff": ["-  private LinkedList<CompilerError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpressionIF>> visitorErrors) {", "-    final LinkedList<CompilerError> errors = new LinkedList<CompilerError>();", "+  private LinkedList<DJError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpressionIF>> visitorErrors) {", "+    final LinkedList<DJError> errors = new LinkedList<DJError>();", "-      errors.addLast(new CompilerError(si.getFile(), si.getStartLine()-1, si.getStartColumn()-1, message, false));", "+      errors.addLast(new DJError(si.getFile(), si.getStartLine()-1, si.getStartColumn()-1, message, false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b6e579822289aaf4933f8721eace370", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "e40ff18c1268bc89011a62cf3020ee657be5c2f9", "commitAfterChange": "306d11e581599ee2cff211a0016c863bdb068462", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private LinkedList<CompilerError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpression>> visitorErrors)", "signatureAfterChange": "   private LinkedList<CompilerError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpressionIF>> visitorErrors)", "diff": ["-  private LinkedList<CompilerError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpression>> visitorErrors) {", "+  private LinkedList<CompilerError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpressionIF>> visitorErrors) {", "-    Iterator<Pair<String, JExpression>> iter = visitorErrors.iterator();", "+    Iterator<Pair<String, JExpressionIF>> iter = visitorErrors.iterator();", "-      Pair<String, JExpression> pair = iter.next();", "+      Pair<String, JExpressionIF> pair = iter.next();", "-      JExpression jexpr = pair.getSecond();", "+      JExpressionIF jexpr = pair.getSecond();"]}], "num": 13407}