{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a45fb2ac08efe44468f162230be948d4", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fde6bd68a1d0a8a11f7b8980c70942e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "303ddb2c47275a1e2c25f273f6ed234a39d50962", "commitAfterChange": "05170b9ac5bef61612128757c005ac85c724ec32", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public Document getPrevDocument(Document doc)", "signatureAfterChange": "   public Document getPrevDocument(Document doc)", "diff": ["-    OpenDefinitionsDocument prev = null;", "-    while(odds.hasNext())", "-    {", "-      OpenDefinitionsDocument odd = odds.next();", "-      if(doc == odd.getDocument())", "-      {", "-        if(prev != null)", "-        {", "-          return prev.getDocument();", "-        }", "-        else", "-        {", "-          while(odds.hasNext())", "-          {", "-            prev = odds.next();", "-          }", "-          return prev.getDocument();", "-        }", "-      }", "-      prev = odd;", "+    INavigatorItem item = getIDocGivenODD(getODDForDocument(doc));", "+    INavigatorItem nextitem = _documentNavigator.getPrevious(item);", "+    if(nextitem == item){", "+      // we're at the end, so we need to rewind", "+      // and return doc at the very beginning", "+      int i = -1;", "+      do{", "+        item=nextitem;", "+        nextitem = _documentNavigator.getNext(item);", "+        i++;", "+      }while(nextitem != item);", "+      return getODDGivenIDoc(nextitem).getDocument();", "+    }else{", "+      return getODDGivenIDoc(nextitem).getDocument();", "-    throw new UnexpectedException(new IllegalStateException(\"Could not get the previous Document for Document: \" + doc));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91a7cf7612b3bc6eec1b720a3cfe67cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "303ddb2c47275a1e2c25f273f6ed234a39d50962", "commitAfterChange": "05170b9ac5bef61612128757c005ac85c724ec32", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public Document getNextDocument(Document doc)", "signatureAfterChange": "   public Document getNextDocument(Document doc)", "diff": ["-    while(odds.hasNext())", "-    {", "-      OpenDefinitionsDocument odd = odds.next();", "-      if(doc == odd.getDocument())", "-      {", "-        if(odds.hasNext())", "-        {", "-          return odds.next().getDocument();", "-        }", "-        else", "-        {", "-          return _documentsRepos.valuesIterator().next().getDocument();", "-        }", "-      }", "+    INavigatorItem item = getIDocGivenODD(getODDForDocument(doc));", "+    INavigatorItem nextitem = _documentNavigator.getNext(item);", "+    if(nextitem == item){", "+      // we're at the end, so we need to rewind", "+      // and return doc at the very beginning", "+      int i = -1;", "+      do{", "+        item=nextitem;", "+        nextitem = _documentNavigator.getPrevious(item);", "+        i++;", "+      }while(nextitem != item);", "+      return getODDGivenIDoc(nextitem).getDocument();", "+    }else{", "+      return getODDGivenIDoc(nextitem).getDocument();", "-    throw new UnexpectedException(new IllegalStateException(\"Could not get the next Document for Document: \" + doc));"]}], "num": 653}