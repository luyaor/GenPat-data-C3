{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7726e5972150d3ff52ad57983dcb3560", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "085336e50d3ddeb68bd3be6e77ac27b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "37dab6b79fc3d4e6f7b2b5f0aa53a4ea9b7f7476", "commitAfterChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public synchronized void toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean enabled)      throws DebugException", "signatureAfterChange": "   public synchronized void toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean enabled)      throws DebugException", "diff": ["-    if (breakpoint == null)  setBreakpoint(new Breakpoint (doc, offset, lineNum, enabled, this));", "+    if (breakpoint == null) {", "+      if (doc.getLineStartPos(offset) == doc.getLineEndPos(offset)) {", "+        printMessage(\"Cannot set a breakpoint on an empty line.\");", "+      }", "+      else {", "+        try {", "+          setBreakpoint(new Breakpoint (doc, offset, lineNum, enabled, this));", "+        }", "+        catch(LineNotExecutableException lnee) {", "+          printMessage(lnee.getMessage());", "+        }", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60d9d6657701aac3c80d6f5ce3c26f36", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "cbb9f04386fdbcd6c82a6f2a5ae6b635359499fb", "commitAfterChange": "e77b9389e0feb3169a20412f8892f630db108f0e", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public boolean toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean isEnabled)      throws DebugException", "signatureAfterChange": "   public boolean toggleBreakpoint(OpenDefinitionsDocument doc, int offset, int lineNum, boolean isEnabled)      throws DebugException", "diff": ["-        assert EventQueue.isDispatchThread();", "+    assert EventQueue.isDispatchThread();", "-    if (offset < 0 || offset > doc.getLength()) return false;", "+    if (offset < 0) return false;", "-    if (breakpoint == null) {", "-      if (offset == doc._getLineEndPos(offset)) {", "+    if (breakpoint == null) {  // no breakpoint on this line", "+      if (offset == doc._getLineEndPos(offset)) {  // line is empty", "-      else {", "+      else {  // set breakpoint", "-    else {", "+    else { // breakpoint already set on this line"]}], "num": 12358}