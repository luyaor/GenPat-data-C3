{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8deac780192a595c3f3b36765c77f5f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4de2c635fd9de3dbae7383bb411e2365", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/KeyBindingManager.java", "commitBeforeChange": "2aadb81a716e2a196f82baa127c28e3225664fab", "commitAfterChange": "c4ec4fbaa86590f5d9d73c067159d69b14149c37", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public Enumeration getKeyStrokeData()", "signatureAfterChange": "      public Collection<KeyStrokeData> getKeyStrokeData()", "diff": ["-  public Enumeration getKeyStrokeData() { return _actionToDataMap.elements(); }", "+  public Collection<KeyStrokeData> getKeyStrokeData() { return _actionToDataMap.values(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e797284a64870cfb652f83bcf0928c6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/HookTypeName.java", "commitBeforeChange": "d29db164117e7452d6023bc6a73abe9d53f7d65b", "commitAfterChange": "30059ed25163a0d152720ce9c2edb44f030e5f3b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public boolean isSupered()", "signatureAfterChange": "   public Option<TypeName> getLowerBound()", "diff": ["+  public Option<TypeName> getUpperBound() { return upperBound; }", "+  public Option<TypeName> getLowerBound() { return lowerBound; }", "-  ", "-  public boolean isSupered() { return supered; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1f4d93f5318b34e91db2da11136e45b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public abstract boolean isStatic(Type t);", "signatureAfterChange": "   public abstract Option<Type> dynamicallyEnclosingType(Type t);", "diff": ["-   */", "-  public abstract boolean isStatic(Type t);", "+  /** Get the type of the object, if any, that dynamically encloses instances of {@code t}. */", "+  public abstract Option<Type> dynamicallyEnclosingType(Type t);"]}], "num": 17712}