{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91ed57411a57d8cd189dd14f05af92f6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66ab9617f650339863a3099166df8f2d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersionTest.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testParseFullVersionMint()", "signatureAfterChange": "      public void testParseFullVersionMint()", "diff": ["+    FullVersion v8 = parseFullVersion(\"1.7.0\",\"mint\",\"mint\");", "+    assertEquals(UNKNOWN, v8.vendor());", "+    assertEquals(\"7.0\", v8.versionString());", "+    ", "+    FullVersion v9 = parseFullVersion(\"1.7.0_11\",\"mint\",\"mint\");", "+    assertEquals(UNKNOWN, v9.vendor());", "+    assertEquals(\"7.0_11\", v9.versionString());", "+    ", "+    sorter.add(v8);", "+    sorter.add(v9);", "-    assertTrue(IterUtil.isEqual(sorter, IterUtil.make(v1, v2, v3, v4, v5, v6, v7)));", "+    assertTrue(IterUtil.isEqual(sorter, IterUtil.make(v1, v2, v3, v4, v5, v6, v7, v8, v9)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "738a5d8ac0cf2cde53c3525a31aa1e37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "615ff23a704e8a18c51abf1bd9015de115551141", "commitAfterChange": "512658e6d0ae282068e705a86d988618e9ce9c5f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   @Override public TypeContext visit(SwitchStatement node)", "signatureAfterChange": "   @Override public TypeContext visit(SwitchStatement node)", "diff": ["-    if (!ts.isEnum(t)) {", "+    boolean switchEnum = ts.isEnum(t);", "+    if (!switchEnum) {", "-      ", "-      bk.acceptVisitor(this);", "-      ", "-      ", "+      else if (switchEnum) {", "+        DJField val = new ExpressionChecker(context, opt).checkEnumSwitchCase(bk.getExpression(), t);", "+        if (values.contains(val)) {", "+          throw new ExecutionError(\"duplicate.switch.case\", bk);", "+        }", "+        values.add(val);", "+      }", "+        checkType(exp);", "-          throw new ExecutionError(\"duplicate.switch.case\", node);", "+          throw new ExecutionError(\"duplicate.switch.case\", bk);", "+      ", "+      if (bk.getStatements() != null) { checkList(bk.getStatements()); }", "-    ", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6f78027f13b2ce8f3141134ed8b3d20", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersionTest.java", "commitBeforeChange": "bffcae721f8dbc844dc8a667963f0caab39047ea", "commitAfterChange": "0af0c72004872701891228fa18659a3204fb6e2f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testParseFullVersionMint()", "signatureAfterChange": "      public void testParseFullVersionMint()", "diff": ["-    assertEquals(\"1.4.2_10-Mint\", v1.versionString());", "+    assertEquals(UNKNOWN, v1.vendor());", "+    assertEquals(\"1.4.2_10\", v1.versionString());", "-    assertEquals(\"1.4.3-Mint\", v2.versionString());", "+    assertEquals(UNKNOWN, v2.vendor());", "+    assertEquals(\"1.4.3\", v2.versionString());", "-    assertEquals(\"5.0_1-Mint\", v3.versionString());", "+    assertEquals(UNKNOWN, v3.vendor());", "+    assertEquals(\"5.0_1\", v3.versionString());", "-    assertEquals(\"5.1-beta-Mint\", v4.versionString());", "+    assertEquals(UNKNOWN, v4.vendor());", "+    assertEquals(\"5.1-beta\", v4.versionString());", "-    assertEquals(\"5.1-Mint\", v5.versionString());", "+    assertEquals(UNKNOWN, v5.vendor());", "+    assertEquals(\"5.1\", v5.versionString());", "-    assertEquals(\"6.0_2-Mint\", v6.versionString());", "+    assertEquals(UNKNOWN, v6.vendor());", "+    assertEquals(\"6.0_2\", v6.versionString());", "-    assertEquals(\"6.0_11-Mint\", v7.versionString());", "+    assertEquals(UNKNOWN, v7.vendor());", "+    assertEquals(\"6.0_11\", v7.versionString());"]}], "num": 8394}