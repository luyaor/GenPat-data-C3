{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6cb7f7b3c3bf764faa2fc32f10b37df0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "319c4df42d4004003fa0c2e0d479dfdf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "commitAfterChange": "46e11d94aab488b0f851c712b65caea9a087e829", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public FindResult findNext()", "signatureAfterChange": "   public FindResult findNext()", "diff": ["-    */", "-    public FindResult findNext() { return _state.findNext(); }", "+   */", "+  public FindResult findNext() {", "+//    Utilities.showDebug(\"DEBUG: findNext() in FindAnyOccurrenceState called\");", "+    ", "+    // If the user just found and toggled the \"Search Backwards\"", "+    // option, we should skip the first find.", "+    if (_skipOneFind) {", "+//      Utilities.showDebug(\"DEBUG: We should skip one\");", "+      int wordLength = _lastFindWord.length();", "+      if (!_searchBackwards) setPosition(getCurrentOffset() + wordLength);", "+      else setPosition(getCurrentOffset() - wordLength);", "+      positionChanged();", "+    }", "+    if (!_searchBackwards) return _findNext(_current.getOffset(), _doc.getLength()-_current.getOffset());", "+    return _findNext(0, _current.getOffset());", "+  }        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d997f7cceafe33ed377e6fc79fe3dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/MatchWholeWordState.java", "commitBeforeChange": "82f2ed0c10073d0b45d405a9ea26c9aa3f37c661", "commitAfterChange": "6bfab9f5cad6f12d0935dd59b83d99bfc86909eb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    private FindResult findNextHelp(String searchDocument, int       searchOriginLocation)", "signatureAfterChange": "    private FindResult findNextHelp(String searchDocument, int searchOriginLocation)", "diff": ["-  private FindResult findNextHelp(String searchDocument, int", "-      searchOriginLocation) {", "+  private FindResult findNextHelp(String searchDocument, int searchOriginLocation) {", "-    if (_searchBackwards) {", "-      setPosition(getCurrentOffset() - _findWord.length());", "-    }", "+    if (_searchBackwards) setPosition(getCurrentOffset() - _findWord.length());", "-    while (!hasLappedOriginalLocation(searchOriginLocation)) {", "+    while (! hasLappedOriginalLocation(searchOriginLocation)) {", "-        if (_wrapped) {", "-          break;", "-        }", "+        if (_wrapped) break;", "-          if (!_searchBackwards) {", "-            setPosition(getCurrentOffset() + _findWord.length());", "-          }", "-", "+          if (!_searchBackwards) setPosition(getCurrentOffset() + _findWord.length());"]}], "num": 8500}