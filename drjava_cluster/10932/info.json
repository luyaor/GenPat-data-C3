{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f007bf0817e31a60a66ab08325c2df6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e95b7eb4cfc0b9180204489a8ea35dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3c002733e6bec1f112ca58ec38806686ba48b477", "commitAfterChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "methodNumberBeforeChange": 204, "methodNumberAfterChange": 207, "signatureBeforeChange": "      public void interactionEnded()", "signatureAfterChange": "      public void interactionEnded()", "diff": ["-      // Only change GUI from event-dispatching thread", "-      Runnable doCommand = new Runnable() {", "-        public void run() {", "-          /**", "-           if (inDebugMode()) {", "-            _disableStepTimer();", "-            Debugger manager = _model.getDebugger();", "-            manager.clearCurrentStepRequest();", "-            _removeThreadLocationHighlight();", "-          }", "-          */", "-          ", "-          _interactionsPane.setCursor(Cursor.getPredefinedCursor(Cursor.TEXT_CURSOR));", "-          _interactionsPane.setEditable(true);", "-          _interactionsController.moveToEnd();", "-          if (_interactionsPane.hasFocus()) {", "-            _interactionsPane.getCaret().setVisible(true);", "-          }", "-        }", "-      };", "-      SwingUtilities.invokeLater(doCommand);", "+      _enableInteractionsPane();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f95fe04d2dd7f65c0b72183b3f4256e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "1333ad40debe120f6d8fd5fb5ff36c57ce6b1ccf", "commitAfterChange": "3907c0e8430f2d380a191d1ad8364cbfdd1d1b28", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void interpret(final String s)", "signatureAfterChange": "    public void interpret(final String s)", "diff": ["-    /*", "+    // Spawn thread on InterpreterJVM side", "+    //  (will receive result in the interpretResult(...) method)", "+    catch (java.rmi.UnmarshalException ume) {", "+      // Could not receive result from interpret; system probably exited.", "+      // We will silently fail and let the interpreter restart.", "+      _log.log(\"main.interp: UnmarshalException, so interpreter is dead:\\n\"", "+                 + ume);", "+    }", "-    */", "+    // Spawn thread on this side (receive result \"immediately\")", "+    /*", "+    */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a149a683b1e1454d02197635162beacb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3c002733e6bec1f112ca58ec38806686ba48b477", "commitAfterChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 206, "signatureBeforeChange": "          public void interactionStarted()", "signatureAfterChange": "          public void interactionStarted()", "diff": ["-      // Only change GUI from event-dispatching thread", "-      Runnable doCommand = new Runnable() {", "-        public void run() {", "-          _interactionsPane.setEditable(false);", "-          _interactionsPane.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));", "-        }", "-      };", "-      SwingUtilities.invokeLater(doCommand);", "+      _disableInteractionsPane();"]}], "num": 10932}