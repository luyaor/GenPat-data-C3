{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9d389518af0d5b600fc0f2236c19c90", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4664e50315424b94af3c617591fd8796", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "ab0ded3db9141ff4121c607c60b106535592b093", "commitAfterChange": "d74188241db90ffeca61708e1d5c82b1650e2c97", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public static void restartIfNecessary(boolean forToolsJar,                                          boolean forJSR14,                                         String[] args)", "signatureAfterChange": "   public static void restartIfNecessary(boolean forToolsJar, String[] args)", "diff": ["-  public static void restartIfNecessary(boolean forToolsJar, ", "-                                        boolean forJSR14,", "-                                        String[] args) {", "-    if (!forToolsJar && !forJSR14) {", "+  public static void restartIfNecessary(boolean forToolsJar, String[] args) {", "+    if (!forToolsJar) {", "-    }", "-    ", "-    if (forJSR14) {", "-      // Try to prepend JSR-14 to the bootclasspath", "-      File jsr14 = getConfig().getSetting(JSR14_LOCATION);", "-      if (jsr14 != FileOption.NULL_FILE) {", "-        String arg = \"-Xbootclasspath/p:\" + jsr14.getAbsolutePath();", "-        jvmArgs = new String[1];", "-        jvmArgs[0] = arg;", "-      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cbf200bc668c32b0a6f6277697cd4e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "c9e80bbae1d05915842b741e3f824da56b5b7a57", "commitAfterChange": "ecfa1b8571cf84d3fda1f3d6d93d5a8cea78d32a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public static void restartIfNecessary(boolean forToolsJar, String[] args)", "signatureAfterChange": "   public static void restartIfNecessary(boolean forToolsJar, String[] args)", "diff": ["+    //JOptionPane.showMessageDialog(null, \"forToolsJar = \" + forToolsJar);", "-      // Don't need to restart: just continue normally", "-      return;", "+      if (!_usingJSR14v20 || bootClasspathHasJSR14v20()) {", "+        return;", "+      }", "-    ", "+", "-    ", "+", "-    String[] jvmArgs = new String[0];", "+    String[] jvmArgs;", "+    ", "+    if (_usingJSR14v20) {", "+      //System.out.println(\"Using JSR14v20, appending bootclasspath\");", "+      String jsr14 = _config.getSetting(JSR14_LOCATION).getAbsolutePath();", "+      jvmArgs = new String[] { \"-Xbootclasspath/p:\" + jsr14 };", "+    }", "+    else {", "+      jvmArgs = new String[0];", "+    }"]}], "num": 2613}