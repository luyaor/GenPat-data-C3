{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75c3bfdf06b27b47027ca29fb6903200", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28940be1dcef4e08b13a4bd98a79ce6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/HelpFrame.java", "commitBeforeChange": "55616341e09a5f807767173122a231f2db20106c", "commitAfterChange": "ddcbad2909e9c9411b7283368e21d7790422a21d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void hyperlinkUpdate(HyperlinkEvent event)", "signatureAfterChange": "   public void hyperlinkUpdate(HyperlinkEvent event)", "diff": ["-      // TO DO: don't follow links to the net!", "-      displayPage(event.getURL());", "+      // Only follow links within the documentation", "+      URL url = event.getURL();", "+      String protocol = url.getProtocol();", "+      String path = url.getPath();", "+      if ((\"file\".equals(protocol) || \"jar\".equals(protocol))", "+            && path.indexOf(HELP_PATH) >= 0) {", "+        displayPage(url);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bbb18dc0c0205943e47997df8aee7c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "09e3a1c7c173cb9a37ed9ad28a39b257011828e6", "commitAfterChange": "bdfa5a75e18c9a41c7b54cf4b050565d5259c993", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "signatureAfterChange": "   public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "diff": ["-    synchronized(this){", "-      LeafNode node = getNodeForDoc(doc);", "+    Object lock = new Object();", "+    LeafNode node = getNodeForDoc(doc);", "+    // Check to see if it's already in the correct path.", "+    InnerNode parent = _path2node.getValue(path);", "+    String oldPath = _path2node.getKey(null);", "+    if (path.equals(oldPath)) {", "+      node.removeFromParent(); // doesn't cause a repaint.", "+      insertNodeSortedInto(node, parent); // causes a repaint.", "+    }", "+    ", "+    //System.out.println(\"refresh -> remove\");", "+    synchronized(lock) {", "+    }", "+    //System.out.println(\"refresh -> add\");", "+    synchronized(lock) {", "+    //System.out.println(\"refresh done\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab193b7ea39e13a81500a0805e8addb7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "99105223925683ee669479026ce3b62dfa0eda84", "commitAfterChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 35, "signatureBeforeChange": "   private String makeRelative(File f) throws IOException", "signatureAfterChange": "   private String encodeFileRelative(File f, String prefix, File base) throws IOException", "diff": ["+  private String encodeFileRelative(File f, String prefix, File base) throws IOException {", "+    String path = FileOps.makeRelativeTo(f, base).getPath();", "+    path = replace(path, File.separator, \"/\");", "+    return prefix + \"(file (name \" + convertToLiteral(path) + \"))\";", "+  }", "-   */", "-  private String makeRelative(File f) throws IOException { return makeRelativeTo(f, _projectFile).getPath(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc55d5f6e8f7ed4916653162bd068e17", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "1ff154e9eb4de7b8f07ce9a8120997b76e53aa3f", "commitAfterChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void _bookmark()", "signatureAfterChange": "   private void _bookmark()", "diff": ["-  private void _bookmark() {", "+  private void _bookmark() {  // TODO: consolidate with _toggleBookmark in MainFrame/AbstractGlobalModel?", "-//    _frame._bookmarksPanel.startChanging();", "-    for (final MovingDocumentRegion r: getSelectedRegions()) {", "-      if (! _model.getBookmarkManager().contains(r)) {", "-        OrderedDocumentRegion newR = ", "-          new DocumentRegion(r.getDocument(), r.getStartPosition(), r.getEndPosition());", "-        _model.getBookmarkManager().addRegion(newR);", "-      }", "+    RegionManager<OrderedDocumentRegion> bm = _model.getBookmarkManager();", "+    for (MovingDocumentRegion r: getSelectedRegions()) {", "+      Collection<OrderedDocumentRegion> conflictingRegions = ", "+        bm.getRegionsOverlapping(r.getDocument(), r.getStartOffset(), r.getEndOffset());", "+      for (OrderedDocumentRegion cr: conflictingRegions) bm.removeRegion(cr);", "+      OrderedDocumentRegion newR = new DocumentRegion(r.getDocument(), r.getStartPosition(), r.getEndPosition());", "+      bm.addRegion(newR);", "-//    _frame._bookmarksPanel.finishChanging();", "+    _frame.createBookmarks();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e55b12fc42b396bf9dffdac851b5033b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-windows/edu/rice/cs/drjava/platform/WindowsPlatform.java", "commitBeforeChange": "df01c8be1037a04090a700d45d88a837db8c2901", "commitAfterChange": "b58fba4c05c7b2fa2ddfeee6a4be5d11082f0498", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private boolean isFileExtensionRegistered(String extension, String progid)", "signatureAfterChange": "   private boolean isFileExtensionRegistered(String extension, String progid)", "diff": ["-      String oldDefault = WindowsRegistry.getKey(WindowsRegistry.HKEY_LOCAL_MACHINE, \"SOFTWARE\\\\Classes\\\\\"+extension, \"\");", "-      return (oldDefault!=null) && (progid.equals(oldDefault));", "+      // check the file extension", "+      String oldDefault = WindowsRegistry.getKey(WindowsRegistry.HKEY_CLASSES_ROOT, extension, \"\");", "+      if ((oldDefault==null) || (!progid.equals(oldDefault))) return false; // not set", "+      ", "+      // now check the command", "+      String cmdLine = getCommandLine()+\" \\\"%1\\\" %*\";", "+      String oldCmdLine = WindowsRegistry.getKey(WindowsRegistry.HKEY_CLASSES_ROOT, progid+\"\\\\shell\\\\open\\\\command\", \"\");", "+      return ((oldCmdLine!=null) && (cmdLine.equals(oldCmdLine)));", "+      return false;", "+    }", "+    catch(IOException ioe) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3eacdba6bb861c3eda0f110b79ee22f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ff65482ac0c34f9d18b211e3b1fa05371a07fb91", "commitAfterChange": "43bd3e08ba052e97e1d0271e7f1e324beac2ba86", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 125, "signatureBeforeChange": "   private OpenDefinitionsDocument _openFile(File file)     throws IOException, AlreadyOpenException", "signatureAfterChange": "   private OpenDefinitionsDocument _openFile(File file)     throws IOException, AlreadyOpenException", "diff": ["+      ", "+      ", "-      _definitionsDocs.addElement(doc);", "+      INavigatorItem idoc = makeIDocFromODD(doc);", "+      _documentsRepos.put(idoc, doc);", "+      ", "+      String path = doc.getFile().getCanonicalPath();", "+      path = path.substring(0, path.lastIndexOf(File.separator));", "+     ", "+      _documentNavigator.addDocument(idoc, path);"]}], "num": 22938}