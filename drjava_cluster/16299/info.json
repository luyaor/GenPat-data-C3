{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb91713b8ed8d72a2fda130f190f2859", "detectedBy": ["DIFF_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "833fb005aafa57d784d7b9f49f49f542", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "b432c2a5363ca609f111d7dec3ae5ed814c173ea", "commitAfterChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Void visit(ImportDeclaration node)", "signatureAfterChange": "     public Void visit(ImportDeclaration node)", "diff": ["-      // Declare the package or class importation", "-      if (node.isPackage()) {", "-        context.declarePackageImport(node.getName());", "-      } else {", "+      if(node.isStatic()) {       ", "+        TigerUtilities.assertTigerEnabled(\"Static Import is not supported before Java 1.5\");", "-          context.declareClassImport(node.getName());", "+          if(node.isStaticImportClass()) ", "+            context.declareClassStaticImport(node.getName());", "+          else ", "+            context.declareMemberStaticImport(node.getName());", "+          // Declare the package or class importation", "-          throw new CatchedExceptionError(e, node);", "-        } catch (PseudoError e) {", "+          throw new RuntimeException(\"Uncaught Class Not Found Exception\");", "+        }", "+      }", "+      else {", "+        if (node.isPackage()) {", "+          context.declarePackageImport(node.getName());", "+        } else {", "+          try {", "+            context.declareClassImport(node.getName());", "+          } catch (ClassNotFoundException e) {", "+            throw new CatchedExceptionError(e, node);", "+          } catch (PseudoError e) {", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "929d652d75c4bc9ea8aafc2c5efcbd02", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/GlobalContext.java", "commitBeforeChange": "b432c2a5363ca609f111d7dec3ae5ed814c173ea", "commitAfterChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 50, "signatureBeforeChange": "     public Boolean visit(ImportDeclaration node)", "signatureAfterChange": "     public Boolean visit(ImportDeclaration node)", "diff": ["-      // Declare the package or class importation", "-      if (node.isPackage()) {", "-        importationManager.declarePackageImport(node.getName());", "-      } else {", "+      if(node.isStatic()) {", "-          importationManager.declareClassImport(node.getName());", "+          TigerUtilities.assertTigerEnabled(\"Static Import is not supported before Java 1.5\");", "+          if(node.isStaticImportClass()) ", "+            importationManager.declareClassStaticImport(node.getName());", "+          else ", "+            importationManager.declareMemberStaticImport(node.getName());", "-          throw new CatchedExceptionError(e, node);", "-        } catch (PseudoError e) {", "+          throw new RuntimeException(\"Uncaught ClassNotFoundException has been thrown: \" + e.toString());", "+        }", "+      }        ", "+      else {", "+        // Declare the package or class importation", "+        if (node.isPackage()) {", "+          importationManager.declarePackageImport(node.getName());", "+        } else {", "+          try {", "+            importationManager.declareClassImport(node.getName());", "+          } catch (ClassNotFoundException e) {", "+            throw new CatchedExceptionError(e, node);", "+          } catch (PseudoError e) {", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef76bdff76910c33f7ed0a56ff368ae8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "b432c2a5363ca609f111d7dec3ae5ed814c173ea", "commitAfterChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Node visit(ImportDeclaration node)", "signatureAfterChange": "   public Node visit(ImportDeclaration node)", "diff": ["-    if (node.isPackage()) {", "-      context.declarePackageImport(node.getName());", "-    } else {", "-      try {", "-        context.declareClassImport(node.getName());", "-      } catch (ClassNotFoundException e) {", "-        throw new CatchedExceptionError(e, node);", "+    if(node.isStatic()){", "+      TigerUtilities.assertTigerEnabled(\"Static Import is not supported before Java 1.5\");", "+      try {  ", "+        if(node.isStaticImportClass()) ", "+          context.declareClassStaticImport(node.getName());", "+        else ", "+          context.declareMemberStaticImport(node.getName());", "+      }", "+      catch (ClassNotFoundException e) {", "+        throw new RuntimeException(\"Uncaught Class Not Found Exception\");", "+      }", "+    }", "+    else {      ", "+      if (node.isPackage()) {", "+        context.declarePackageImport(node.getName());", "+      } else {", "+        try {", "+          context.declareClassImport(node.getName());", "+        } catch (ClassNotFoundException e) {", "+          throw new CatchedExceptionError(e, node);", "+        }"]}], "num": 16299}