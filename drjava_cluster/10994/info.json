{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16ef9d3c7c689a40cc21d2b96c4cedc3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d03207770f822775ce6af8b6bf8458a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testDebugSourcepath()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testDebugSourcepath()      throws DebugException, BadLocationException, IOException, InterruptedException", "diff": ["-    //Remove listener at end", "+    // Shutdown the debugger and listen for the interpret call to end", "-    synchronized(_notifierLock) {", "-      _debugger.shutdown();", "-      _waitForNotifies(2);  // threadDied, shutdown", "-      _notifierLock.wait();", "+    InterpretListener interpretListener = new InterpretListener();", "+    _model.addListener(interpretListener);", "+    synchronized(interpretListener) {", "+      synchronized(_notifierLock) {", "+        _debugger.shutdown();", "+        interpretListener.wait();  // wait for interactionEnded", "+        _waitForNotifies(2);  // threadDied, shutdown", "+        _notifierLock.wait();", "+      }", "+    interpretListener.assertInteractionEndCount(1);", "+    _model.removeListener(interpretListener);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7bafe524fc5c7d9beb680c6ee61b4ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testStepOut()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testStepOut()      throws DebugException, BadLocationException, IOException, InterruptedException", "diff": ["-  public void testStepOut() ", "+  public synchronized void testStepOut() ", "-    //Remove listener at end", "+    // Shutdown the debugger and listen for the interpret call to end", "-    synchronized(_notifierLock) {", "-      _debugger.shutdown();", "-      _waitForNotifies(2);  // threadDied, shutdown", "-      _notifierLock.wait();", "+    InterpretListener interpretListener = new InterpretListener();", "+    _model.addListener(interpretListener);", "+    synchronized(interpretListener) {", "+      synchronized(_notifierLock) {", "+        _debugger.shutdown();", "+        interpretListener.wait();  // wait for interactionEnded", "+        _waitForNotifies(2);  // threadDied, shutdown", "+        _notifierLock.wait();", "+      }", "+    interpretListener.assertInteractionEndCount(1);", "+    _model.removeListener(interpretListener);", "+"]}], "num": 10994}