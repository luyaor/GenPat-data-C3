{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fdf12a22347c0fd04880b7f1efb2b12b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a514616e917f744fcfdedeb882af118a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "     public void testRandomExpressions()", "signatureAfterChange": "     public void testRandomExpressions()", "diff": ["-      PositiveExpression pe = new PositiveExpression(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 5));", "-      PositiveExpression pe2 = new PositiveExpression(SourceInfo.NO_INFO, pe);", "-      NegativeExpression pe3 = new NegativeExpression(SourceInfo.NO_INFO, pe2);", "-      PositiveExpression pe4 = new PositiveExpression(SourceInfo.NO_INFO, pe3);", "-      PositiveExpression pe5 = new PositiveExpression(SourceInfo.NO_INFO, pe4);", "-      NegativeExpression pe6 = new NegativeExpression(SourceInfo.NO_INFO, pe5);", "+      PositiveExpression pe = new PositiveExpression(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 5));", "+      PositiveExpression pe2 = new PositiveExpression(SourceInfo.NONE, pe);", "+      NegativeExpression pe3 = new NegativeExpression(SourceInfo.NONE, pe2);", "+      PositiveExpression pe4 = new PositiveExpression(SourceInfo.NONE, pe3);", "+      PositiveExpression pe5 = new PositiveExpression(SourceInfo.NONE, pe4);", "+      NegativeExpression pe6 = new NegativeExpression(SourceInfo.NONE, pe5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabcb503e5e1b97011e14ae7846cd0b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "     public void testRandomExpressions()", "signatureAfterChange": "     public void testRandomExpressions()", "diff": ["-      PositiveExpression pe = new PositiveExpression(JExprParser.NO_SOURCE_INFO, new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5));", "-      PositiveExpression pe2 = new PositiveExpression(JExprParser.NO_SOURCE_INFO, pe);", "-      NegativeExpression pe3 = new NegativeExpression(JExprParser.NO_SOURCE_INFO, pe2);", "-      PositiveExpression pe4 = new PositiveExpression(JExprParser.NO_SOURCE_INFO, pe3);", "-      PositiveExpression pe5 = new PositiveExpression(JExprParser.NO_SOURCE_INFO, pe4);", "-      NegativeExpression pe6 = new NegativeExpression(JExprParser.NO_SOURCE_INFO, pe5);", "+      PositiveExpression pe = new PositiveExpression(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 5));", "+      PositiveExpression pe2 = new PositiveExpression(SourceInfo.NO_INFO, pe);", "+      NegativeExpression pe3 = new NegativeExpression(SourceInfo.NO_INFO, pe2);", "+      PositiveExpression pe4 = new PositiveExpression(SourceInfo.NO_INFO, pe3);", "+      PositiveExpression pe5 = new PositiveExpression(SourceInfo.NO_INFO, pe4);", "+      NegativeExpression pe6 = new NegativeExpression(SourceInfo.NO_INFO, pe5);"]}], "num": 16300}