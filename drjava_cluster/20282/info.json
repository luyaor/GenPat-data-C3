{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5081eefc85b1954604a23bc38c27d03", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac912d40d0e5d9c9079a57410182a55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "787d67eb3d919fcaaf2b1a9e1122344cb4eabfb5", "commitAfterChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public synchronized void valueChanged(TreeSelectionEvent e)", "signatureAfterChange": "   public void valueChanged(TreeSelectionEvent e)", "diff": ["-  public synchronized void valueChanged(TreeSelectionEvent e) {", "-    Object treeNode = this.getLastSelectedPathComponent();", "-    if(treeNode == null || !(treeNode instanceof NodeData)) {", "-      return;", "-    }", "-    NodeData newSelection = (NodeData)treeNode;", "-    if(_current != newSelection) {", "-      for(INavigationListener listener : navListeners) {", "-        listener.lostSelection(_current);", "-        listener.gainedSelection(newSelection);", "+  public void valueChanged(TreeSelectionEvent e) {", "+    synchronized (_model) {", "+      Object treeNode = this.getLastSelectedPathComponent();", "+      if (treeNode == null || !(treeNode instanceof NodeData)) return;", "+      NodeData newSelection = (NodeData)treeNode;", "+      if(_current != newSelection) {", "+        for(INavigationListener listener : navListeners) {", "+          listener.lostSelection(_current);", "+          listener.gainedSelection(newSelection);", "+        }", "+        _current = newSelection;", "-      _current = newSelection;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f059d7ae671b397fe756ce565778a9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "0a93533cf1b555344278f97d8d989cd2f113c958", "commitAfterChange": "c950bf1122c303a9137db70374c1cd2e2fc01d08", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testEnded(final String testName, final boolean wasSuccessful,                         final boolean causedError)", "signatureAfterChange": "   public void testEnded(final String testName, final boolean wasSuccessful,                         final boolean causedError)", "diff": ["-    _notifier.junitTestEnded(testName, wasSuccessful, causedError);", "+    synchronized(_notifier) { // so that it's not called until junitStarted is fired", "+      _notifier.junitTestEnded(testName, wasSuccessful, causedError);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7151ec5e25317265848ecc8013d5f0f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "0a93533cf1b555344278f97d8d989cd2f113c958", "commitAfterChange": "c950bf1122c303a9137db70374c1cd2e2fc01d08", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void nonTestCase(final boolean isTestAll)", "signatureAfterChange": "   public void nonTestCase(final boolean isTestAll)", "diff": ["-    _isTestInProgress = false;", "-    _notifier.nonTestCase(isTestAll);", "-    _notifier.junitEnded();", "+    // NOTE: junitStarted is called in a different thread from the testing thread,", "+    //       so it is possible that this is called before the other thread calls ", "+    //       the junitStarted.  We want the test to terminate AFTER it starts. Otherwise", "+    //       any thread that starts waiting for the test to end after the firing of", "+    //       junitStarted will never be notified. (same with all terminal events)", "+    //       The synchronization over _notifier takes care of this problem.", "+    synchronized(_notifier) { ", "+      _notifier.nonTestCase(isTestAll);", "+      _isTestInProgress = false;", "+      _notifier.junitEnded();", "+    } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c06216b82dbc8a43cc6f0c36f14c101e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/OptionComponent.java", "commitBeforeChange": "c302d1db72cb508e0cec30d24e39d48cce8fd663", "commitAfterChange": "68d14b52468e7fad6eb9d5f26ee2e88ac93b395f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public abstract JComponent getComponent();", "signatureAfterChange": "   public C getComponent()", "diff": ["-  public abstract JComponent getComponent();", "+  public C getComponent() { return _guiComponent; }"]}], "num": 20282}