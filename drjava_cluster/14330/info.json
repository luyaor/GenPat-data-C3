{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61e28cfc9a172cad6d99ef460f50092f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba62d4bd135034e5b85f132eb3ead039", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public Class<?> visit(FunctionCall node)", "signatureAfterChange": "   public Type visit(FunctionCall node)", "diff": ["-  public Class<?> visit(FunctionCall node) {", "+  public Type visit(FunctionCall node) {", "-    Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;", "+    Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;       //LOOK HERE!!", "-        cargs[i++] = it.next().acceptVisitor(this);", "+        cargs[i++] = (Class<?>)it.next().acceptVisitor(this);", "+    ", "-    try {", "-      f = context.lookupFunction(node.getMethodName(), cargs);", "-    } catch (NoSuchFunctionException e) {", "+    try { f = context.lookupFunction(node.getMethodName(), cargs); } ", "+    catch (NoSuchFunctionException e) {", "-", "+    ", "-    Class<?> c;", "+    Type c;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1333a7b3a256d43ad4110221bc3bbef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public Type visit(FunctionCall node)", "signatureAfterChange": "   public Class<?> visit(FunctionCall node)", "diff": ["-  public Type visit(FunctionCall node) {", "+  public Class<?> visit(FunctionCall node) {", "-    Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;       //LOOK HERE!!", "+    Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;", "-        cargs[i++] = (Class<?>)it.next().acceptVisitor(this);", "+        cargs[i++] = it.next().acceptVisitor(this);", "-    ", "-    try { f = context.lookupFunction(node.getMethodName(), cargs); } ", "-    catch (NoSuchFunctionException e) {", "+    try {", "+      f = context.lookupFunction(node.getMethodName(), cargs);", "+    } catch (NoSuchFunctionException e) {", "-    ", "+", "-    Type c;", "+    Class<?> c;"]}], "num": 14330}