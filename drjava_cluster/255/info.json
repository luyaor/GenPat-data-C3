{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b823f4c2e5f3cd770488a2fdc7e641a2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "491cfd0f3cd30efdde1642551eaecee2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/JLSTypeSystem.java", "commitBeforeChange": "80debf5b9716524c576a71fc4929233c9637cd68", "commitAfterChange": "0dc6c4e6c51f7a1991368187e63e0eff0d7150ef", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 140, "signatureBeforeChange": "      protected Iterable<Type> captureTypeArgs(Iterable<? extends Type> targs,                                            Iterable<? extends VariableType> params)", "signatureAfterChange": "      protected Iterable<Type> captureTypeArgs(Iterable<? extends Type> targs,                                            Iterable<? extends VariableType> params)", "diff": ["-    Set<VariableType> remainingParams = CollectUtil.makeSet(params);", "+    Set<VariableType> remainingParams = new HashSet<VariableType>();", "+    CollectUtil.addAll(remainingParams, params);", "-            triple.first().initializeUpperBound(wildU.equals(OBJECT) ? paramU :", "-                                                  new IntersectionType(IterUtil.make(wildU, paramU)));", "+            Type captU = wildU.equals(OBJECT) ? paramU :", "+                         paramU.equals(OBJECT) ? wildU : new IntersectionType(IterUtil.make(wildU, paramU));", "+            triple.first().initializeUpperBound(captU);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5311814bb5809075ac2fd670f3aa898f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsController.java", "commitBeforeChange": "c36edada76ee9f3d9322b919e75fbcf066a0cd41", "commitAfterChange": "ec40b9684eedda5f12a01f89d69b3f935e227946", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected void _addDocumentStyles()", "signatureAfterChange": "   protected void _addDocumentStyles()", "diff": ["+    _colorPurple = new Color(display, 124, 0, 124);", "+", "+    // System.in", "+    SWTStyle in = new SWTStyle(_colorPurple, 0);", "+    _adapter.addDocStyle(InteractionsDocument.SYSTEM_IN_STYLE, in);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a81fe64cb5cc74cad725e92a1c9868", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1f1e1c194ec79b5577db174af86a812206a9ebf6", "commitAfterChange": "8470bac42027a288eff50252d965c363d15d41dc", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 138, "signatureBeforeChange": "    private void _setUpTabs()", "signatureAfterChange": "    private void _setUpTabs()", "diff": ["+    ", "+    _interactionsWithSyncPanel = new JPanel(new BorderLayout());", "+    _syncStatus = new JLabel(\"Testing\");", "+    _interactionsWithSyncPanel.add(new BorderlessScrollPane(_interactionsPane),", "+                                   BorderLayout.CENTER);", "+    //_interactionsWithSyncPanel.add(_syncStatus, BorderLayout.SOUTH);", "-    _tabbedPane.add(\"Interactions\", ", "-                    new BorderlessScrollPane(_interactionsPane));", "+    _tabbedPane.add(\"Interactions\", _interactionsWithSyncPanel);"]}], "num": 255}