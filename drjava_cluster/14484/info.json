{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "136a4fc88c02275720c4cb0412c49b89", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "429294b78f0ccca132263e37081f0f23", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/UncaughtExceptionWindow.java", "commitBeforeChange": "cfd8bfb1865d4fad4b92a33a577ef90b6209a355", "commitAfterChange": "fe0a017225a8b8d3dbd51265c876a1db2da058a1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public UncaughtExceptionWindow(JFrame frame, Throwable exception)", "signatureAfterChange": "   public UncaughtExceptionWindow(JFrame frame, Throwable exception)", "diff": ["+    String trace = StringOps.getStackTrace(_exception);", "+    if (_exception instanceof UnexpectedException) {", "+      Throwable t = ((UnexpectedException)_exception).getContainedThrowable();", "+      trace = trace + \"\\nCaused by:\\n\" + StringOps.getStackTrace(t);", "+    }", "+    ", "-    _stackTrace = new JTextArea(_getStackTraceString());", "+    _stackTrace = new JTextArea(trace);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6834ef170270c821c023b5ed31728bf5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileBuilder.java", "commitBeforeChange": "dd27d69f437c114ad258abba00f7d581b096ce79", "commitAfterChange": "1e852b550a8b69787c9e44248d928487d0bf9f6e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException", "signatureAfterChange": "   private String encodeDocFile(DocFile df, String prefix, boolean relative, boolean hasDate) throws IOException", "diff": ["-  private String encodeDocFile(DocFile df, String prefix, boolean relative) throws IOException {", "+  private String encodeDocFile(DocFile df, String prefix, boolean relative, boolean hasDate) throws IOException {", "-    ", "+    long modDate = df.lastModified();", "+    }", "+    if (hasDate && modDate > 0) {", "+      String s = new SimpleDateFormat(\"dd-MMM-yyyy HH:mm:ss\").format(new Date(modDate));", "+      ret += \"(mod-date \" + convertToLiteral(s) + \")\";"]}], "num": 14484}