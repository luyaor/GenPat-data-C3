{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5873169ee7ca2dca4636cdaaf25f69f9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2690e13c1c83ff7f5a96c369599fe1f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public synchronized ClassPathVector getAugmentedClassPath()", "signatureAfterChange": "      public Iterable<File> getAugmentedClassPath()", "diff": ["-   */", "-  public synchronized ClassPathVector getAugmentedClassPath() {", "-    ClassPathVector ret = new ClassPathVector();", "-", "-    for (ClassPathEntry e: _classPathManager.getProjectCP())  ret.add(e.getEntry().toString());", "-", "-    for (ClassPathEntry e: _classPathManager.getBuildDirectoryCP()) ", "-      ret.add(e.getEntry().toString());", "-    ", "-    for (ClassPathEntry e: _classPathManager.getProjectFilesCP())", "-      ret.add(e.getEntry().toString());", "-", "-    for (ClassPathEntry e: _classPathManager.getExternalFilesCP())", "-      ret.add(e.getEntry().toString());", "-", "-    for (ClassPathEntry e: _classPathManager.getExtraCP())", "-      ret.add(e.getEntry().toString());", "-", "-    return ret;", "+  public Iterable<File> getAugmentedClassPath() { return getClassPath(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47702e328530f21f8b2381230a033b57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "0a93533cf1b555344278f97d8d989cd2f113c958", "commitAfterChange": "c950bf1122c303a9137db70374c1cd2e2fc01d08", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public String getClasspathString()", "signatureAfterChange": "   public String getClasspathString()", "diff": ["-    List<ClasspathEntry> locpe = classpathManager.getProjectCP();", "-    for (ClasspathEntry e: locpe) {", "-      cp.append(e.getEntry().toString());", "-      cp.append(System.getProperty(\"path.separator\"));", "-    }", "-", "-    locpe = classpathManager.getBuildDirectoryCP();", "-    for (ClasspathEntry e: locpe) {", "-      cp.append(e.getEntry().toString());", "-      cp.append(System.getProperty(\"path.separator\"));", "-    }", "-", "-    locpe = classpathManager.getProjectFilesCP();", "-    for (ClasspathEntry e: locpe) {", "-      cp.append(e.getEntry().toString());", "-      cp.append(System.getProperty(\"path.separator\"));", "-    }", "-", "-    locpe = classpathManager.getExternalFilesCP();", "-    for (ClasspathEntry e: locpe) {", "-      cp.append(e.getEntry().toString());", "-      cp.append(System.getProperty(\"path.separator\"));", "-    }", "-", "-    locpe = classpathManager.getExtraCP();", "-    for (ClasspathEntry e: locpe) {", "-      cp.append(e.getEntry().toString());", "-      cp.append(System.getProperty(\"path.separator\"));", "-    }", "+    ", "+    appendAllClasspaths(classpathManager.getProjectCP(),        cp);", "+    appendAllClasspaths(classpathManager.getBuildDirectoryCP(), cp);", "+    appendAllClasspaths(classpathManager.getProjectFilesCP(),   cp);", "+    appendAllClasspaths(classpathManager.getExternalFilesCP(),  cp);", "+    appendAllClasspaths(classpathManager.getExtraCP(),          cp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4acf56a67a724014d4a0bdd4c9854b52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "10c44767bf3d5eefd230820d6106fe1ea2534e6f", "commitAfterChange": "c1c9eac4e19bc59469201ee2ac4b0d20897056f9", "methodNumberBeforeChange": 212, "methodNumberAfterChange": 212, "signatureBeforeChange": "   boolean _closeProject()", "signatureAfterChange": "   boolean _closeProject()", "diff": ["-  boolean _closeProject() {", "+  boolean _closeProject() { return _closeProject(false); }", "-      _model.closeProject();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5051942afc39a1b4f523f8af4fddafd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "d6e5a814c07284651f7c529a85f464592512b19a", "commitAfterChange": "7068b1b7376b1c3813644f4d8ea2780684ca5f7c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "signatureAfterChange": "\r   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "diff": ["-      msg(\"root: \"+root);\r", "-        msg(\"\\tsubdir: \"+subdir);\r", "-    for(JarJDKToolsLibrary javaLib: collapsed) {\r", "-      msg(\"JDK: \"+javaLib.version());\r", "-    }\r", "-    for(JarJDKToolsLibrary mintLib: mintCollapsed) {\r", "-      msg(\"Mint: \"+mintLib.version());\r", "-    }\r", "-    \r", "-      msg(\"Mint version \"+mintVersion.majorVersion()+\": \"+mintVersion);\r", "-        msg(\"\\tlooking for exact version: Java version \"+javaVersion.majorVersion()+\": \"+javaVersion);\r", "-          msg(\"\\tlooking for major version Java version \"+javaVersion.majorVersion()+\": \"+javaVersion);\r", "-        msg(\"\\t#### picked \"+found.version());\r", "-    Iterable<JarJDKToolsLibrary> composed =\r", "-      IterUtil.compose(collapsed,IterUtil.reverse(IterUtil.collapse(javaMintResults.values())));\r", "-\r", "-    for(JarJDKToolsLibrary composedLib: composed) {\r", "-      msg(\"Composed: \"+composedLib.version());\r", "-    }\r", "-    return composed;\r", "+    return IterUtil.compose(collapsed,IterUtil.reverse(IterUtil.collapse(javaMintResults.values())));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "589b83ad2948782e774328cbfc55a7a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "b796c376864058d232f1be02ccfb0bd7548b3f89", "commitAfterChange": "ba6275930e25f1b0898c45319a21c16860b3e177", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void _javadocWorker(File destDirFile, FileSaveSelector saver,                               List<String> classpaths,                               JavadocListener listener)", "signatureAfterChange": "   private void _javadocWorker(File destDirFile, FileSaveSelector saver,                               List<String> classpaths,                               JavadocListener listener)", "diff": ["-    StreamTokenizer st = new StreamTokenizer(new StringReader(custom));", "-//    st.ordinaryChar('\\'');", "-    st.ordinaryChar('\\\\');", "-    st.ordinaryChars('0','9');", "-    st.ordinaryChars('-', '.');", "-//    st.wordChars('\\'', '\\'');", "-    st.wordChars('\\\\', '\\\\');", "-    st.wordChars('0', '9');", "-    st.wordChars('-', '.');", "+    args.addAll(new ArgumentTokenizer().tokenize(custom));", "+/*    StreamTokenizer st = new StreamTokenizer(new StringReader(custom));", "+    st.ordinaryChars('\\u0021','\\u00ff');", "+    st.wordChars('\\u0021','\\u00ff');", "-    ", "+    */", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95a96ef40bebe86ae7998d96d012fff6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "             public void regionAdded(MovingDocumentRegion r)", "diff": ["+    _regionManager.addListener(new RegionManagerListener<MovingDocumentRegion>() {      ", "+      public void regionAdded(MovingDocumentRegion r) { addRegion(r); }", "-", "-    public String toString() {", "-      final String textFont = DrJava.getConfig().getSetting(OptionConstants.FONT_MAIN).toString();", "-      final String numFont = DrJava.getConfig().getSetting(OptionConstants.FONT_LINE_NUMBERS).toString();", "-      final StringBuilder sb = new StringBuilder(120);", "-      sb.append(\"<html>\");", "-      sb.append(lineNumber());", "-      sb.append(\": \");", "-      String text = _region.getString();", "-      sb.append(text);", "-      sb.append(StringOps.getBlankString(120 - text.length()));", "-      sb.append(\"</html>\");", "-      return sb.toString();", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d2d387c3a5fe4231d441da19e3abb82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/History.java", "commitBeforeChange": "772d55948f939a494c28e52313a1162cba5534b8", "commitAfterChange": "444cb9c318707ca2f9a6eaa5854ba2be0fcd383e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void writeToFile(FileSaveSelector selector, String editedVersion) throws IOException", "signatureAfterChange": "   public void writeToFile(FileSaveSelector selector) throws IOException", "diff": ["+   */", "+  public void writeToFile(FileSaveSelector selector) throws IOException {", "+    writeToFile(selector, getHistoryAsStringWithSemicolons());", "+  }", "-  public void writeToFile(FileSaveSelector selector, String editedVersion) throws IOException {", "-      if (c.getName().indexOf('.') == -1) {", "-        c = new File(c.getAbsolutePath() + \".\" +", "-                     InteractionsHistoryFilter.HIST_EXTENSION);", "-      FileOutputStream fos = new FileOutputStream(c);", "-      OutputStreamWriter osw = new OutputStreamWriter(fos);", "-      BufferedWriter bw = new BufferedWriter(osw);", "-      if (editedVersion == null) {", "-        editedVersion = getHistoryAsStringWithSemicolons();", "-      }", "-      bw.write(HISTORY_FORMAT_VERSION_2 + editedVersion, 0, HISTORY_FORMAT_VERSION_2.length() + editedVersion.length());", "-      bw.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a647455ba3e001ff58ddbb11df5be83d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2f4a42f54aaa74c25ba0a929e664640f896ec43a", "commitAfterChange": "d73d2cacf79884db0dae830f87bb3795eb5cd6ef", "methodNumberBeforeChange": 767, "methodNumberAfterChange": 767, "signatureBeforeChange": "   public static void openExtProcessJarFile(File file)", "signatureAfterChange": "   public static void openExtProcessJarFile(File file)", "diff": ["-    edu.rice.cs.util.GeneralProcessCreator.LOG.log(\"openExtProcessJarFile\");", "-      edu.rice.cs.util.GeneralProcessCreator.LOG.log(\"openExtProcessJarFile(file=\"+file+\")\");", "-      edu.rice.cs.util.GeneralProcessCreator.LOG.log(\"\\tJAR file opened\");", "-      edu.rice.cs.util.GeneralProcessCreator.LOG.log(\"\\tJAR entry found for \"+EXTPROCESS_FILE_NAME_INSIDE_JAR);", "-      edu.rice.cs.util.GeneralProcessCreator.LOG.log(\"\\tGot InputStream\");", "-      edu.rice.cs.util.GeneralProcessCreator.LOG.log(\"\\tXML file opened\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5fec6a1627524badbe544601356761f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "commitAfterChange": "32513407e5f8f41a21eb0336c92af1269f67953c", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 90, "signatureBeforeChange": "   void initCompleteFileDialog()", "signatureAfterChange": "   void initCompleteFileDialog()", "diff": ["-      PredictiveInputFrame.InfoSupplier<GoToFileListEntry> info = new PredictiveInputFrame.InfoSupplier<GoToFileListEntry>() {", "-        public String apply(GoToFileListEntry entry) {", "-          StringBuilder sb = new StringBuilder();", "-          ", "-          if (entry.doc != null) {", "-            try {", "-              try {", "-                sb.append(FileOps.makeRelativeTo(entry.doc.file(), entry.doc.getSourceRoot()));", "-              }", "-              catch(IOException e) {", "-                sb.append(entry.doc.getFile());", "-              }", "-            }", "-            catch(edu.rice.cs.drjava.model.FileMovedException e) {", "-              sb.append(entry + \" was moved\");", "-            }", "-            catch(java.lang.IllegalStateException e) {", "-              sb.append(entry);", "-            }", "-            catch(edu.rice.cs.drjava.model.definitions.InvalidPackageException e) { ", "-              sb.append(entry);", "-            }", "-          } else {", "-            sb.append(entry);", "-          }", "-          return sb.toString();", "-        }", "-      };", "-                                                    info,", "+                                                    null,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef1f6ec4075b62b16a6c85f2f88d40b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaSurveyPopup.java", "commitBeforeChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "commitAfterChange": "2f4a42f54aaa74c25ba0a929e664640f896ec43a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "    protected void yesAction()", "signatureAfterChange": "      protected void yesAction()", "diff": ["+  ", "-      final String DRJAVA_SURVEY_PAGE = \"http://www.drjava.org/submit-usage.php?\";", "-      StringBuilder sb = new StringBuilder();", "-      sb.append(DRJAVA_SURVEY_PAGE);", "-//    sb.append(\"date=\");", "-//    SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMdd\");", "-//    sdf.setTimeZone(TimeZone.getTimeZone(\"GMT\"));", "-//    sb.append(sdf.format(new Date()));", "-      boolean first = true;", "-      for(String k: DRJAVA_SURVEY_KEYS) {", "-        if (first) { first = false; } else { sb.append('&'); }", "-        sb.append(k);", "-        sb.append('=');", "-        sb.append(System.getProperty(k));", "-      }", "-      LOG.log(sb.toString());", "-      String result = sb.toString().replaceAll(\" \",\"%20\");", "+      String result = getSurveyURL();", "-      if (!(new java.util.Date().after(nextCheck)) &&", "-          (DrJava.getConfig().getSetting(OptionConstants.LAST_DRJAVA_SURVEY_RESULT).equals(result))) {", "-        // not enough days have passed, and the configuration has not changed, quietly terminate", "+      if (!maySubmitSurvey()) {", "+        // not enough days have passed, or the configuration has not changed, quietly terminate", "-        sb.setLength(0);", "+        StringBuilder sb = new StringBuilder();"]}], "num": 12754}