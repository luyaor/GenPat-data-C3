{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c21322122574af7df89cdeed7288ad2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a99bc1b1fbcf1c20f2121f07c8c72a30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 419, "methodNumberAfterChange": 419, "signatureBeforeChange": "\r \r   public void forDivideAssignmentExpression(DivideAssignmentExpression that)", "signatureAfterChange": "    public void forDivideAssignmentExpression(DivideAssignmentExpression that)", "diff": ["-\r", "-  public void forDivideAssignmentExpression(DivideAssignmentExpression that) {\r", "-    forDivideAssignmentExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getName().visit(this);\r", "-    that.getValue().visit(this);\r", "-    forDivideAssignmentExpressionOnly(that);\r", "-  }\r", "+", "+  public void forDivideAssignmentExpression(DivideAssignmentExpression that) {", "+    forDivideAssignmentExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getName().visit(this);", "+    that.getValue().visit(this);", "+    forDivideAssignmentExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa9931b88249977f407fd183297b9050", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 415, "methodNumberAfterChange": 415, "signatureBeforeChange": "\r \r   public void forSimpleAssignmentExpression(SimpleAssignmentExpression that)", "signatureAfterChange": "    public void forSimpleAssignmentExpression(SimpleAssignmentExpression that)", "diff": ["-\r", "-  public void forSimpleAssignmentExpression(SimpleAssignmentExpression that) {\r", "-    forSimpleAssignmentExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getName().visit(this);\r", "-    that.getValue().visit(this);\r", "-    forSimpleAssignmentExpressionOnly(that);\r", "-  }\r", "+", "+  public void forSimpleAssignmentExpression(SimpleAssignmentExpression that) {", "+    forSimpleAssignmentExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getName().visit(this);", "+    that.getValue().visit(this);", "+    forSimpleAssignmentExpressionOnly(that);", "+  }"]}], "num": 24336}