{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7550430619fe9b39fac4ebabff39735", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "092032ca8e5730ae9a46e041f59b0f8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 206, "signatureBeforeChange": "      private void openFilesInFolder(File dir, boolean recursive)", "signatureAfterChange": "   private void _openFolder(File dir, boolean rec)", "diff": ["-  private void openFilesInFolder(File dir, boolean recursive) {", "-    ArrayList<File> files;", "-    if (dir != null && dir.isDirectory()) {", "-      files = FileOps.getFilesInDir(dir, recursive, new FileFilter() {", "-        public boolean accept(File f) { ", "-          return f.isDirectory() ||", "-            f.isFile() && ", "-            f.getName().endsWith(DrJava.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)]);", "-        }", "-      });", "-      ", "-      if (_model.isProjectActive())", "-        Collections.sort(files, new Comparator<File>() {", "-        public int compare(File o1,File o2) {", "-          return - o1.getAbsolutePath().compareTo(o2.getAbsolutePath());", "-        }", "-      });", "-      else", "-        Collections.sort(files, new Comparator<File>() {", "-        public int compare(File o1,File o2) {", "-          return - o1.getName().compareTo(o2.getName());", "-        }", "-      });", "-      ", "-      final File[] sfiles = files.toArray(new File[files.size()]);", "-      ", "-      ", "-      open(new FileOpenSelector() {", "-        public File[] getFiles() {", "-          return sfiles;", "-        }", "-      });", "-    }else{", "-      // our directory was bad, so don't open anything.", "-    }", "+   */", "+  private void _openFolder(File dir, boolean rec) {", "+    hourglassOn();", "+    try { _model.openFolder(dir, rec); }", "+    catch(AlreadyOpenException e) { /* do nothing */ }", "+    catch(IOException e) { _showIOError(e); }", "+    catch(OperationCanceledException oce) { /* do nothing */ }", "+    finally { hourglassOff(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e10921241671018b29d7c21be18c041", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1de5cb95fee280565741d04f9d0c9ba9427f28c2", "commitAfterChange": "c12f68e3bc37fa5484d2cfb01f6ad9fc1d626551", "methodNumberBeforeChange": 184, "methodNumberAfterChange": 187, "signatureBeforeChange": "   public void openFolder(DirectoryChooser chooser)", "signatureAfterChange": "   public void openFolder(DirectoryChooser chooser)", "diff": ["+    openFilesInFolder(dir, _openRecursiveCheckBox.isSelected());", "+    ", "+  }", "-      files = FileOps.getFilesInDir(dir, _openRecursiveCheckBox.isSelected(), new FileFilter(){"]}], "num": 5520}