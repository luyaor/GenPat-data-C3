{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9b094bedfd9d2c51f7d6827769dbe85", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "474b7cd167722b69b4b5c2cac225ed8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "03dd354632fbfc12bf279640160bfd934404dc39", "commitAfterChange": "2714f88d04f312c23b21ec6a440193d44b7121ba", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "      void open(FileOpenSelector openSelector)", "signatureAfterChange": "      void open(FileOpenSelector openSelector)", "diff": ["+      catch (FileMovedException fme) {", "+        // File was deleted, but use the same name anyway", "+        filename = fme.getFile().getName();", "+      }", "-      _recentFileManager.updateOpenFiles(openDoc.getFile());", "+      try {", "+        _recentFileManager.updateOpenFiles(openDoc.getFile());", "+      }", "+      catch (IllegalStateException ise) {", "+        // Impossible: saved => has a file", "+        throw new UnexpectedException(ise);", "+      }", "+      catch (FileMovedException fme) {", "+        // Recover, show it in the list anyway", "+        _recentFileManager.updateOpenFiles(fme.getFile());", "+      }", "+    }", "+    catch (FileNotFoundException fnf) {", "+      _showFileNotFoundError(fnf);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eac1c4244c073116b0e775e8b892525", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 204, "signatureBeforeChange": "   void open(FileOpenSelector openSelector)", "signatureAfterChange": "   public void open(FileOpenSelector openSelector)", "diff": ["-  void open(FileOpenSelector openSelector) {", "+  public void open(FileOpenSelector openSelector) {", "-        if (! _model.isProjectFile(f)) _recentFileManager.updateOpenFiles(f);", "+        if (! _model.inProject(f)) _recentFileManager.updateOpenFiles(f);", "-        if (! _model.isProjectFile(f))", "+        if (! _model.inProject(f))", "+    }  ", "+    catch (OperationCanceledException oce) { /* do not open file */ }", "+    catch (FileNotFoundException fnf) { ", "+      _showFileNotFoundError(fnf); ", "-    catch (OperationCanceledException oce) {", "-      // Ok, don't open a file", "-    }", "-    catch (FileNotFoundException fnf) { _showFileNotFoundError(fnf); }"]}], "num": 8190}