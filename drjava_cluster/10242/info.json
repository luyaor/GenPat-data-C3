{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7662cc06485d5bcaf30d1f899a0d60a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e34ffeded5e086e4191fcec9698e029", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ea2763ecde4185a8c33fdd0462c9d12c206c7378", "commitAfterChange": "1ccb0f21abc2aaa138e57bd5c1add5c018ff34ef", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+    config.addOptionListener", "+      (JVM_ARGS, new OptionListener<String>() {", "+      public void optionChanged(OptionEvent<String> oe) {", "+        if(oe.value != \"\") {", "+          int result = JOptionPane.showConfirmDialog(_configFrame,", "+                                                     \"Changing JVM Args is an advanced option, bad command line arguments may break DrJava.\\n\"+", "+                                                     \"Are you sure you want to set this option?\\n\"+", "+                                                     \"(You will have to reset the interactions pane before changes take effect.)\",", "+                                                     \"Confirm JVM Arguments\", JOptionPane.YES_NO_OPTION);", "+          if(result!=JOptionPane.YES_OPTION) {", "+            config.setSetting(oe.option, \"\");", "+          }", "+        }", "+      }", "+    });", "+", "+    config.addOptionListener(ALLOW_PRIVATE_ACCESS, new OptionListener<Boolean>() {", "+      public void optionChanged(OptionEvent<Boolean> oce) {", "+        _model.getInteractionsModel().setPrivateAccessible(oce.value.booleanValue());", "+      }", "+    });", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d73832d50367234fc73e72705753bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+        boolean bootClasspathHasv24 = DrJava.bootClasspathHasJSR14v24();        ", "-          if (checkForV20 && !bootClasspathHasv2) {", "+          boolean checkForV24 = DrJava.checkForJSR14v24();", "+          if (checkForV24 && !bootClasspathHasv24) {", "-                                          \"You must restart DrJava to use the JSR-14 v2.x compiler.\",", "+                                          \"You must restart DrJava to use the JSR-14 v2.4 compiler.\",", "+                                          \"JSR14 Warning\", JOptionPane.WARNING_MESSAGE);", "+          }", "+          else if ((checkForV20 && !checkForV24) && (!bootClasspathHasv2 || bootClasspathHasv24)) {", "+            JOptionPane.showMessageDialog(_configFrame,", "+                                          \"You must restart DrJava to use the JSR-14 v2.0/2.2 compiler.\",", "-", "+    ", "+    config.addOptionListener(OptionConstants.ALLOW_PRIVATE_ACCESS, new OptionListener<Boolean>() {", "+      public void optionChanged(OptionEvent<Boolean> oce) {", "+        _model.getInteractionsModel().setPrivateAccessible(oce.value.booleanValue());", "+      }", "+    });", "+    "]}], "num": 10242}