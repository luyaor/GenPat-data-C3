{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c00f9a43141bb922c302906c104f35e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48f013203f721b913860ec0d062e2346", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyFullJavaVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "          public void testFormalParameters2VariableData()", "signatureAfterChange": "          public void testFormalParameters2VariableData()", "diff": ["-        new FormalParameter(SourceInfo.NO_INFO, ", "-                            new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                                                new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                                                new Word (SourceInfo.NO_INFO, \"field1\")),", "+        new FormalParameter(SourceInfo.NONE, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                                                new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                                                new Word (SourceInfo.NONE, \"field1\")),", "-          new FormalParameter(SourceInfo.NO_INFO, ", "-                              new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                                                  new PrimitiveType(SourceInfo.NO_INFO, \"boolean\"), ", "-                                                                  new Word (SourceInfo.NO_INFO, \"field2\")),", "+          new FormalParameter(SourceInfo.NONE, ", "+                              new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                                                  new PrimitiveType(SourceInfo.NONE, \"boolean\"), ", "+                                                                  new Word (SourceInfo.NONE, \"field2\")),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c121611fa01fa78352d0e3aa0a932f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 30, "signatureBeforeChange": "               public void testForInterfaceDef()", "signatureAfterChange": "          public void testForInterfaceDef()", "diff": ["-    ", "-                                                                                               new Word(SourceInfo.NO_INFO, \"myMethod\"), new FormalParameter[0], new ReferenceType[0]);", "+                                                    new Word(SourceInfo.NO_INFO, \"myMethod\"), new FormalParameter[0], new ReferenceType[0]);", "-                                                                                               new Word(SourceInfo.NO_INFO, \"myMethod\"), new FormalParameter[0], new ReferenceType[0]);", "+                                                     new Word(SourceInfo.NO_INFO, \"myMethod\"), new FormalParameter[0], new ReferenceType[0]);", "-                                         new BracedBody(SourceInfo.NO_INFO, ", "-                                                        new BodyItemI[] {amd2}));", "+                                          new BracedBody(SourceInfo.NO_INFO, ", "+                                                         new BodyItemI[] {amd2}));", "-", "+      ", "-", "+      ", "-", "+      ", "-      assertEquals(\"Should return the same symbol datas: id\", sd, symbolTable.get(\"id\"));", "-      assertEquals(\"Should return the same symbol datas:id2 \", sd2, symbolTable.get(\"id2\"));", "+      assertEquals(\"Should return the same symbol datas: id\", sd, LanguageLevelConverter.symbolTable.get(\"id\"));", "+      assertEquals(\"Should return the same symbol datas:id2 \", sd2, LanguageLevelConverter.symbolTable.get(\"id2\"));"]}], "num": 3241}