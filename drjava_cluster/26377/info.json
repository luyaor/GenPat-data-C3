{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e19f31ed7a1caad832de730936bb7a8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ab38594eea7631a552ab4b6702228e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected StaticMethodCall _getStaticMethodCallForFunction(MethodCall method, Context context)", "signatureAfterChange": "   protected StaticMethodCall _getStaticMethodCallForFunction(MethodCall method, Context context)", "diff": ["-    List args = method.getArguments();", "+    List<Expression> args = method.getArguments();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dff2679cfa7be2074759508c95778f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/AttributeOwnerComponent.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected AttributeOwnerComponent()", "signatureAfterChange": "   protected AttributeOwnerComponent()", "diff": ["-    attributes = new LinkedList();", "+    attributes = new LinkedList<AttributeInfo>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8c320b11a469a88f19738b4c7352339", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected ObjectMethodCall _getObjectMethodCallForFunction(MethodCall method, Context context)", "signatureAfterChange": "   protected ObjectMethodCall _getObjectMethodCallForFunction(MethodCall method, Context context)", "diff": ["-    List args = method.getArguments();", "+    List<Expression> args = method.getArguments();"]}], "num": 26377}