{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28528df305cde5c3308fadc9b63e35de", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b6d918f4fe90e76d878e7d69e1a1599", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "commitAfterChange": "e17ce492a90f16c44e47a7ccfb4b5860ab80d4db", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     @Override public Type visit(SimpleMethodCall node)", "signatureAfterChange": "     @Override public Type visit(SimpleMethodCall node)", "diff": ["-      ", "-      Iterable<Type> targs = IterUtil.empty();", "+      Iterable<Type> targs = checkTypeNameList(node.getTypeArgs().unwrap(Collections.<TypeName>emptyList())); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90a1627874680645772be5145d3734ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "875709ea758d694dda7555b8eeb2e15fa58e98c5", "commitAfterChange": "d29db164117e7452d6023bc6a73abe9d53f7d65b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   private Iterable<Type> checkList(Iterable<? extends Expression> l)", "signatureAfterChange": "      public Iterable<Type> checkList(Iterable<? extends Expression> l)", "diff": ["-   */", "-  private Iterable<Type> checkList(Iterable<? extends Expression> l) {", "-    return IterUtil.mapSnapshot(l, this);", "+  ", "+  public Iterable<Type> checkList(Iterable<? extends Expression> l) {", "+    return IterUtil.mapSnapshot(l, new ExpressionVisitor(Option.<Type>none()));", "+  }"]}], "num": 6081}