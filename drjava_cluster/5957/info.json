{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "614b062c9d1620587d88f7ce17b038b5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2446da2a72bf1692cd18247a268fea56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public SymbolData getSymbolData(String className, SourceInfo si, boolean resolve)", "signatureAfterChange": "   protected SymbolData getQualifiedSymbolData(String qualClassName, SourceInfo si, boolean resolve)", "diff": ["-  public SymbolData getSymbolData(String className, SourceInfo si, boolean resolve) {", "-    SymbolData sd = getSymbolData(className, si, resolve, false, true, true);", "-    return sd;", "+    * symbolTable with all of the requisite information about qualClassName. */", "+  protected SymbolData getQualifiedSymbolData(String qualClassName, SourceInfo si, boolean resolve) {", "+    return getQualifiedSymbolData(qualClassName, si, resolve, false, true);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1d449cdee0cbaaeaabb140b0b4a2922", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": "   public ProjectProfile _makeProjectProfile(File file, HashMap<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "signatureAfterChange": "   public ProjectProfile _makeProjectProfile(File file, HashMap<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "diff": ["-    ArrayList<DebugBreakpointData> l = new ArrayList<DebugBreakpointData>();", "-    RegionManager<Breakpoint> bm = getBreakpointManager();", "-    ", "-    for (OpenDefinitionsDocument odd: bm.getDocuments()) {", "-      for(Breakpoint bp: bm.getRegions(odd)) { l.add(bp); }", "+    ArrayList<DebugBreakpointData> l = new ArrayList<DebugBreakpointData>();  ", "+    for (OpenDefinitionsDocument odd: _breakpointManager.getDocuments()) {", "+      for(Breakpoint bp: _breakpointManager.getRegions(odd)) { l.add(bp); }", "-    builder.setBookmarks(_bookmarkManager.getRegions());", "+    builder.setBookmarks(_bookmarkManager.getFileRegions());"]}], "num": 5957}