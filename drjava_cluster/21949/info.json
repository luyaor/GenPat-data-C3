{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5a8afff455994498b494997e673183a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fe70ceda56dc82d0a36af6d7df6c33a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public int getFirstNonWSCharPos(int pos, char[] whitespace, boolean acceptComments)      throws BadLocationException", "signatureAfterChange": "   public int getFirstNonWSCharPos(int pos, char[] whitespace, boolean acceptComments)      throws BadLocationException", "diff": ["-    String key = \"getFirstNonWSCharPos:\" + pos;", "-    for (int i = 0; i < whitespace.length; i++) { key += \":\" + whitespace[i]; }", "+    StringBuffer keyBuf = new StringBuffer(\"getFirstNonWSCharPos:\").append(pos);", "+    for (char ch: whitespace) { keyBuf.append(':').append(ch); }", "+    String key = keyBuf.toString();", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad46e4713c188adf4c201c10059cc2a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public int findPrevCharPos(int pos, char[] whitespace)     throws BadLocationException", "signatureAfterChange": "   public int findPrevCharPos(int pos, char[] whitespace)     throws BadLocationException", "diff": ["-    String key = \"findPrevCharPos:\" + pos;", "-    for (int i = 0; i < whitespace.length; i++) { key += \":\" + whitespace[i]; }", "+    StringBuffer keyBuf = new StringBuffer(\"findPrevCharPos:\").append(pos);", "+    for (char ch: whitespace) { keyBuf.append( ':').append(ch); }", "+    String key = keyBuf.toString();"]}], "num": 21949}