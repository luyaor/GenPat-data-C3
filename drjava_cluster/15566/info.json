{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fdfe6815dcaad43b41ec8e7ae13e3a65", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02d2011b35471964613c01559c582e28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorFileOptionComponent.java", "commitBeforeChange": "ef93e6cc3a79f29ed28debb1108f1338b9a974ad", "commitAfterChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void setFileFilter(FileFilter fileFilter)", "signatureAfterChange": "   public JFileChooser getFileChooser()", "diff": ["-  /** Set the file filter for this vector option component. */", "-  public void setFileFilter(FileFilter fileFilter) {", "-    _fileFilter = fileFilter;", "-  }", "+  /**@ @return the file chooser */", "+  public JFileChooser getFileChooser() {", "+    return _jfc;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09ab0c9837c2807e82c46d6925ae96d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "1333ad40debe120f6d8fd5fb5ff36c57ce6b1ccf", "commitAfterChange": "3907c0e8430f2d380a191d1ad8364cbfdd1d1b28", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 43, "signatureBeforeChange": "   protected void assertInteractionsContains(String text) throws BadLocationException", "signatureAfterChange": "     public void interactionStarted()", "diff": ["-   */", "-  protected void assertInteractionsContains(String text) throws BadLocationException{", "-    _assertInteractionContainsHelper(text, true);", "-  }", "+  public class InterpretListener extends TestListener {", "+    public void interactionStarted() {", "+      interactionStartCount++;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c9d026f4e8e1e761dcda3b357015102", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "f1cdd8ab40ec812de32945f859fe4268e830f213", "commitAfterChange": "03b2d2796342d42693cf58d323df575cbd1df053", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "          protected void _interpret(String toEval)", "signatureAfterChange": "   public void testInterpretJavaSingleQuotedArgs() throws DocumentAdapterException", "diff": ["+   */", "+  public void testInterpretJavaSingleQuotedArgs() throws DocumentAdapterException {", "+    // java Foo 'asdf'", "+    _assertProcessedContents(\"java Foo 'asdf'\",", "+                             \"Foo.main(new String[]{\\\"'asdf'\\\"});\");", "+    // java Foo 'a b c'", "+    _assertProcessedContents(\"java Foo 'a b c'\",", "+                             \"Foo.main(new String[]{\\\"'a\\\",\\\"b\\\",\\\"c'\\\"});\");", "+  }", "-      fail(\"cannot interpret in a test\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "113659890ed1d1f7c795f562ef9b3dd8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ShadowingClassLoader.java", "commitBeforeChange": "24a4bd9b5af47fdf2b927852ef0f4a564c73861b", "commitAfterChange": "a0233fef3427e8ddd7241be47fe79cd3cd5d54bc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ShadowingClassLoader(ClassLoader parent, Iterable<? extends String> prefixes)", "signatureAfterChange": "   public static ShadowingClassLoader whiteList(ClassLoader parent, String... includePrefixes)", "diff": ["-   */", "-  public ShadowingClassLoader(ClassLoader parent, Iterable<? extends String> prefixes) {", "-    this(parent, true, prefixes);", "+   */", "+  public static ShadowingClassLoader whiteList(ClassLoader parent, String... includePrefixes) {", "+    return new ShadowingClassLoader(parent, false, IterUtil.asIterable(includePrefixes), false);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16208ff9b3680a9961432e6df8503baf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "e193e4674aaab3350b36cbc521ecf3bf9c098bc6", "commitAfterChange": "6c31f49b491d4a01bd2ddbae62b5ee4f76d52129", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "   public void insertString(int offset, String str, AttributeSet a) throws BadLocationException", "signatureAfterChange": "   public String getText()", "diff": ["-    */", "-  public void insertString(int offset, String str, AttributeSet a) throws BadLocationException {", "-    ", "-    acquireWriteLock();", "-    try {", "-      super.insertString(offset, str, a);", "-    }", "-    finally { releaseWriteLock(); }", "-  }", "+  /** Gets the document text; this method is threadsafe. */", "+    try { return _getText(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2510b4145c992681521427f978b0ebde", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DocumentDebugAction.java", "commitBeforeChange": "530cb3b64455d081e962324602750973729aa1fb", "commitAfterChange": "edb6c56f8ad5495255b4157f1e495f302271cd2d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected void _initializeRequest(ReferenceType ref) throws DebugException", "signatureAfterChange": "   protected void _initializeRequests(Vector<ReferenceType> refTypes)     throws DebugException", "diff": ["-  protected void _initializeRequest(ReferenceType ref) throws DebugException {", "-    if (ref != null) {", "-      createRequest(ref);", "+  protected void _initializeRequests(Vector<ReferenceType> refTypes)", "+    throws DebugException", "+  {", "+    if (refTypes.size() > 0) {", "+      createRequests(refTypes);", "-    if (_request == null) {", "+    //if (_request == null) {", "-      _manager.getPendingRequestManager().addPendingRequest(this);", "-    }", "+    ", "+    // Experiment: always add to pending request, to deal with multpile class loads", "+    _manager.getPendingRequestManager().addPendingRequest(this);", "+    //}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d12a6256d88a6fbcf81f3859843acf3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "e48d5f3129b8001e5afe1a32af197a9281189fe3", "commitAfterChange": "7c30ebf6c2ad7a3fa703d87cd5aaa9a3fff06bee", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected void goToRegion()", "signatureAfterChange": "   protected void goToRegion()", "diff": ["-    Breakpoint r = getSelectedRegion();", "-    if (r != null) {", "-      _debugger.scrollToSource(r);", "+    ArrayList<Breakpoint> bps = getSelectedRegions();", "+    if (bps.size() == 1) {", "+      _debugger.scrollToSource(bps.get(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "386bba41321f17d1b7d0782a1695670f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "e48d5f3129b8001e5afe1a32af197a9281189fe3", "commitAfterChange": "7c30ebf6c2ad7a3fa703d87cd5aaa9a3fff06bee", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected void goToRegion()", "signatureAfterChange": "   protected void goToRegion()", "diff": ["-    R r = getSelectedRegion();", "-    if (r != null) {", "-      _frame.scrollToDocumentAndOffset(r.getDocument(), r.getStartOffset(), false);", "+    ArrayList<R> r = getSelectedRegions();", "+    if (r.size() == 1) {", "+      _frame.scrollToDocumentAndOffset(r.get(0).getDocument(), r.get(0).getStartOffset(), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3de1f7eee14cc37cbd07a7cf8c0e3e37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FileDisplay.java", "commitBeforeChange": "55ffd5d461fa009444744f2527631191c6f9decc", "commitAfterChange": "0fed03351fa05790a48229380b62c5e4589b0332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void setFile(File f)", "signatureAfterChange": "      public File getParentFile()", "diff": ["-  public void setFile(File f) {", "-    _isNew = false;", "-    _file = f;", "-    _rep = _fdm.getName(f); ", "-  }", "+  public File getParentFile() { return _file.getParentFile(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4319f30a73e0457e16db5ebbd21e4447", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DocumentDebugAction.java", "commitBeforeChange": "530cb3b64455d081e962324602750973729aa1fb", "commitAfterChange": "edb6c56f8ad5495255b4157f1e495f302271cd2d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public boolean createRequest(ReferenceType rt) throws DebugException", "signatureAfterChange": "   public boolean createRequests(Vector<ReferenceType> refTypes)      throws DebugException", "diff": ["-  public boolean createRequest(ReferenceType rt) throws DebugException {", "-    if (!rt.isPrepared()) {", "-      // Can't create a request if class not prepared", "-      return false;", "-    }", "-    ", "-    _createRequest(rt);", "-    if (_request != null) {", "-      _prepareRequest(_request);", "+  public boolean createRequests(Vector<ReferenceType> refTypes) ", "+    throws DebugException", "+  {", "+    _createRequests(refTypes);", "+    if (_requests.size() > 0) {", "+      _prepareRequests(_requests);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4483b8d4f576fc620100a65a859a6c25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 27, "signatureBeforeChange": "              public Object forInterpreterBusy(InterpreterBusy that)", "signatureAfterChange": "        public Void forBusy()", "diff": ["-      public Object forInterpreterBusy(InterpreterBusy that) {", "+", "+      public Void forBusy() {", "+        debug.log();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60215a9e0d90e8df9b96cc4f4b71a26f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "e48d5f3129b8001e5afe1a32af197a9281189fe3", "commitAfterChange": "7c30ebf6c2ad7a3fa703d87cd5aaa9a3fff06bee", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected void enableDisableBreakpoint()", "signatureAfterChange": "   protected void enableDisableBreakpoint()", "diff": ["-    final Breakpoint r = getSelectedRegion();", "-    if (r != null) {", "-      _model.getBreakpointManager().changeRegion(r, new Lambda<Object, Breakpoint>() {", "-        public Object apply(Breakpoint bp) {", "-          bp.setEnabled(!bp.isEnabled());", "-          return null;", "-        }", "-      });", "+    final ArrayList<Breakpoint> bps = getSelectedRegions();", "+    if (bps.size()>0) {", "+      final boolean newState = !bps.get(0).isEnabled();", "+      for (Breakpoint bp: bps) {", "+        _model.getBreakpointManager().changeRegion(bp, new Lambda<Object, Breakpoint>() {", "+          public Object apply(Breakpoint bp) {", "+            bp.setEnabled(newState);", "+            return null;", "+          }", "+        });", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b75709dbf5abc11af386082d2d88e40", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "99e17181157667354a79af5fff7558664559fae9", "commitAfterChange": "0f014669daf60c46746e3e582159e95f94a3d43c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void addEnclosingClass(String className, Object o)", "signatureAfterChange": "   public Node processTree(Node node)", "diff": ["+  public Node processTree(Node node) {", "+    return (Node) node.acceptVisitor(_translationVisitor);", "-  public void addEnclosingClass(String className, Object o) {", "-    //_enclosingClasses.addElement(new Pair<String,Object>(className, o));", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e0a7476d086c6423db140bb1e24aa4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ShadowingClassLoader.java", "commitBeforeChange": "24a4bd9b5af47fdf2b927852ef0f4a564c73861b", "commitAfterChange": "a0233fef3427e8ddd7241be47fe79cd3cd5d54bc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ShadowingClassLoader(ClassLoader parent, boolean blackList, String... prefixes)", "signatureAfterChange": "   public static ShadowingClassLoader blackList(ClassLoader parent, String... excludePrefixes)", "diff": ["-   */", "-  public ShadowingClassLoader(ClassLoader parent, boolean blackList, String... prefixes) {", "-    this(parent, blackList, IterUtil.asIterable(prefixes));", "-  }", "+  public static ShadowingClassLoader blackList(ClassLoader parent, String... excludePrefixes) {", "+    return new ShadowingClassLoader(parent, true, IterUtil.asIterable(excludePrefixes), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76707b9b10291402d1c1d5c91b5774d6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "df2b79c4755a48b6d68cea0053ee5b504fa8b5d0", "commitAfterChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 117, "signatureBeforeChange": "     public int compareTo(JavaAPIListEntry other)", "signatureAfterChange": "     public String getClassName()", "diff": ["-    public int compareTo(JavaAPIListEntry other) {", "-      return str.toLowerCase().compareTo(other.str.toLowerCase());", "-    }", "+    public String getClassName() { return str; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87b52e57a8fa9a0cfedcdb873ca50019", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "bd2e852d4b09497531ae79af49475815d01d70b1", "commitAfterChange": "85b72c50d3f809a70141774d731cbef2c25b2f7f", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 41, "signatureBeforeChange": "          public void setFile(File f)", "signatureAfterChange": "   public boolean setSelectedFile(File f)", "diff": ["+   */", "+  public boolean setSelectedFile(File f) {", "+    if (f == null) return false;", "+    _defaultSelectedFile = f;", "+    return updateTreeSelectionPath();", "+  }", "-    ", "-    public void setFile(File f) {", "-      _isNew = false;", "-      _file = f;", "-      _rep = _jfc.getName(f);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "953f1cf31d8610b378164510fb37fc24", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AutoCompletePopup.java", "commitBeforeChange": "39a73399844d4efd2d2ebe97954e53d44db0a9b6", "commitAfterChange": "3144efa2bdaef7eb118336f3bc431cce43bf0ac2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 25, "signatureBeforeChange": "      private void addJavaAPIToSet(Set<ClassNameAndPackageEntry> s)", "signatureAfterChange": "      private void addJavaAPI()", "diff": ["-  private void addJavaAPIToSet(Set<ClassNameAndPackageEntry> s) {", "+  private void addJavaAPI() {", "-      s.addAll(apiSet);", "+      _apiEntries.clear();", "+      _apiEntries.addAll(apiSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a0c1c1b7c8b937e493a3f01a8d3b9b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 15, "signatureBeforeChange": "          void setStatus(int stat)", "signatureAfterChange": "     private boolean isUnmanaged()", "diff": ["+    private boolean notInQueue() { return ! _residentQueue.contains(this); }", "+    private boolean isUnmanaged() { return _stat == UNMANAGED; }", "-    ", "-    void setStatus(int stat) { _stat = stat; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9db33abb08a2f15e1f7b3c2edea9c68f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/HighlightManager.java", "commitBeforeChange": "c700f0baf9132c8d6ae724f82bf91ce8e4038f2f", "commitAfterChange": "da0a29e11c230fab76957a17e5a2991c9ab7978b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": "       public boolean matchesRegion( int from, int to)", "signatureAfterChange": "       public boolean matchesRegion(HighlightInfo h)", "diff": ["-      public boolean matchesRegion( int from, int to) {", "-        return (getStartOffset() == from && getEndOffset() == to);", "+      public boolean matchesRegion(HighlightInfo h) {", "+        return (getStartOffset() == h.getStartOffset() && getEndOffset() == h.getEndOffset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d35a81ba83982591de0c59bcacf30d4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "7100bfae3584eff8b8b1993fd999385d8f88ea13", "commitAfterChange": "6bcdef7d4202e06be1c5717fc181a0fdfcc7756a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      public void testGranularUndo() throws BadLocationException", "signatureAfterChange": "      public void testGranularUndo() throws BadLocationException", "diff": ["-    final KeyStroke ks = DrJava.getConfig().getSetting(OptionConstants.KEY_UNDO);", "-    final Action a = KeyBindingManager.ONLY.get(ks);", "+    final Vector<KeyStroke> ks = DrJava.getConfig().getSetting(OptionConstants.KEY_UNDO);", "+    final Action a = KeyBindingManager.ONLY.get(ks.get(0));", "-    final KeyEvent e = new KeyEvent(defPane, PRESSED, 0, ks.getModifiers(), ks.getKeyCode(), UNDEFINED);", "+    final KeyEvent e = new KeyEvent(defPane, PRESSED, 0, ks.get(0).getModifiers(), ks.get(0).getKeyCode(), UNDEFINED);", "-         SwingUtilities.notifyAction(a, ks, e, e.getSource(), e.getModifiers());", "+         SwingUtilities.notifyAction(a, ks.get(0), e, e.getSource(), e.getModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4997a7aeef0bfe7e2801a535c2fe466", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestRunner.java", "commitBeforeChange": "50fc18100c630eff6fad096902bce85c20d6d172", "commitAfterChange": "1ecc95c0c60f2dabd3e5d52eee223ff564461e48", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   protected void runFailed(String message)", "signatureAfterChange": "   public Test getTest(String testCase)", "diff": ["-  protected void runFailed(String message) {", "-    _docAppend(message);", "+   */", "+  public Test getTest(String testCase) {", "+    _currentTest = testCase;", "+    return super.getTest(_currentTest);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f29110b4b70680a5faa56db36f8b8c83", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListSortNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void setTopLevelPath(String path)", "signatureAfterChange": "       public String toString()", "diff": ["-   */", "-  public void setTopLevelPath(String path)", "-  {", "-  }", "+   public String toString() { return \"JListSortNavigator\" + _model.toString(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd7dda5eabb218bfdf07deb07499021b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "df2b79c4755a48b6d68cea0053ee5b504fa8b5d0", "commitAfterChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 90, "signatureBeforeChange": "     public NoDocumentFileListEntry(String fullPkg, String s)", "signatureAfterChange": "     public abstract String getClassName();", "diff": ["+    /** Return the simple class name, e.g. \"Integer\". */", "+    public abstract String getClassName();", "-  private static class NoDocumentFileListEntry extends GoToFileListEntry {", "-    public NoDocumentFileListEntry(String fullPkg, String s) {", "-      super(null, s);", "-      fullPackage = fullPkg;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff72507685580345a1868fccb6cf7d56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 280, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Breakpoint getBreakpointAt(int offset)", "signatureAfterChange": "   public RegionManager<Breakpoint> getBreakpointManager()", "diff": ["+  /** @return manager for breakpoint regions. */", "+  public RegionManager<Breakpoint> getBreakpointManager() { return _breakpointManager; }", "-    /** throws UnsupportedOperationException */", "-    public Breakpoint getBreakpointAt(int offset) {", "-      throw new UnsupportedOperationException(\"AbstractGlobalModel does not support debugger\");", "-    }"]}], "num": 15566}