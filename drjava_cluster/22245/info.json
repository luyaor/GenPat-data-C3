{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b97acb196e23f22570bf9ec66c15eb6a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04aadb7a0e2d042b84b9131948b7a709", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public boolean isOnMatch()", "signatureAfterChange": "   public boolean isOnMatch()", "diff": ["-    int len, off;", "+    int wordLen, off;", "-    len = findWord.length();", "-    if (!_searchBackwards) off = _current.getOffset() - len;", "-    else off = _current.getOffset();", "+    wordLen = findWord.length();", "+    if (_isForward) off = getCurrentOffset() - wordLen;", "+    else off = getCurrentOffset();", "-    _doc.acquireReadLock();", "+    _doc.readLock();", "-      if (off + len > _doc.getLength()) return false;", "-      matchSpace = _doc.getText(off, len);", "+      if (off + wordLen > _doc.getLength()) return false;", "+      matchSpace = _doc.getText(off, wordLen);", "-    finally { _doc.releaseReadLock(); }", "+    finally { _doc.readUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0699112bedf27b26cd5445ea7656309b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void updateListPane(boolean done)", "signatureAfterChange": "     protected void updateListPane(boolean done)", "diff": ["-     */", "-    public void updateListPane(boolean done) {", "+    /** Update the pane which holds the list of errors for the viewer. */", "+    protected void updateListPane(boolean done) {", "-        if (_numErrors == 0) {", "-          _updateNoErrors(done);", "-        }", "-        else {", "-          _updateWithErrors();", "-        }", "+        if (_numErrors == 0) _updateNoErrors(done);", "+        else _updateWithErrors();", "-      catch (BadLocationException e) {", "-        throw new UnexpectedException(e);", "-      }", "+      catch (BadLocationException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "909440db5b4ada71e2ae156e30ad7496", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/AFindReplaceMachineState.java", "commitBeforeChange": "f26f93ad5e4b158c960a6cefd64cf99f7137ecbc", "commitAfterChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public boolean isOnMatch()", "signatureAfterChange": "   public boolean isOnMatch()", "diff": ["-    if (!_searchBackwards) {", "-      off = _current.getOffset() - len;", "-    }", "-    else {", "-      off = _current.getOffset();", "-    }", "+    if (!_searchBackwards) off = _current.getOffset() - len;", "+    else off = _current.getOffset();", "-    if (off < 0) {", "-      return false;", "-    }", "-    else if (off + len > _doc.getLength()) {", "-      return false;", "-    }", "+    if (off < 0) return false;", "+    if (off + len > _doc.getLength()) return false;", "-    catch (BadLocationException e) {", "-      throw new UnexpectedException(e);", "-    }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }"]}], "num": 22245}