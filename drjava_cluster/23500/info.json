{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd7a54ca9e10eddc7cbfe82ca28e79a6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66e5d41b85824ee2e73ce56b9e8d5c7a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InnerAllocation.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public InnerAllocation(Expression exp, TypeName tp, List<Expression> args)", "signatureAfterChange": "   public InnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs, List<? extends Expression> args)", "diff": ["-  public InnerAllocation(Expression exp, TypeName tp, List<Expression> args) {", "-    this(exp, tp, args, null, 0, 0, 0, 0);", "+  public InnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs, List<? extends Expression> args) {", "+    this(exp, cn, ctargs, args, null, 0, 0, 0, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0e5014c8f32fbd44bf5f6034a0f9e4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicSimpleAllocation.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicSimpleAllocation(TypeName tp, List<Expression> args, List<TypeName> targs,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicSimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args,                                       List<TypeName> targs,                                      String fn, int bl, int bc, int el, int ec)", "diff": ["-  public PolymorphicSimpleAllocation(TypeName tp, List<Expression> args, List<TypeName> targs,", "-                          String fn, int bl, int bc, int el, int ec) {", "+  public PolymorphicSimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args, ", "+                                     List<TypeName> targs,", "+                                     String fn, int bl, int bc, int el, int ec) {"]}], "num": 23500}