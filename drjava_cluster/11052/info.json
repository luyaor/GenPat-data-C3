{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ec106c37657114ae7412a5e7c78e007", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9f87e65a2784a297ad05cd45b5af8bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "591ec87995880046281596623701cb5a561fc66e", "commitAfterChange": "ce73fdb27a8e7aa886580e240ca54bfd98e64031", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private void insert(Node<T> point, T item)", "signatureAfterChange": "   private void insert(Node<T> point, T item)", "diff": ["-   */", "+  /** Insert an item before a certain node in the list.  Can never be called on head node. */", "-    Node<T> ins = new Node<T>(item, point.pred, point);", "-    point.pred.succ = ins;", "-    point.pred = ins;", "+    Node<T> before = point.pred;", "+    Node<T> newNode = new Node<T>(item, before, point);", "+    before.succ = newNode;", "+    point.pred = newNode;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0c6cede4c3d8fc1f730a4e05604afc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelList.java", "commitBeforeChange": "591ec87995880046281596623701cb5a561fc66e", "commitAfterChange": "ce73fdb27a8e7aa886580e240ca54bfd98e64031", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private void remove(Node<T> point)", "signatureAfterChange": "   private void remove(Node<T> point)", "diff": ["-   */", "+  /** Remove a node from the list. Can't remove head or tail node - exception thrown. */", "-    if ((point == _head) || (point == _tail))", "-      throw new RuntimeException(\"Can't remove head.\");", "-    else", "-    {", "-      point.succ.pred = point.pred;", "-      point.pred.succ = point.succ;", "+    if ((point == _head) || (point == _tail)) throw new RuntimeException(\"Can't remove sentinel node.\");", "+    else {", "+      Node<T> before = point.pred;", "+      Node<T> after = point.succ;", "+      after.pred = before;", "+      before.succ = after;"]}], "num": 11052}