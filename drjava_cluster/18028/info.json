{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c948175ba951ce5078d8057ea880e7cd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d5f562ce93f22ff0230434578e07cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/NoCompilerAvailable.java", "commitBeforeChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "commitAfterChange": "2df7289d55456372fbaf4e3ab78549d8571648f8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public CompilerError[] compile(File sourceRoot, File[] files)", "signatureAfterChange": "   public List<? extends CompilerError> compile(List<? extends File> files, List<? extends File> classPath,                                                 List<? extends File> sourcePath, File destination,                                                 List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "diff": ["-  public CompilerError[] compile(File sourceRoot, File[] files) {", "-    File[] sourceRoots = new File[] { sourceRoot };", "-    return compile(sourceRoots, files);", "-  }", "+  */", "+  public List<? extends CompilerError> compile(List<? extends File> files, List<? extends File> classPath, ", "+                                               List<? extends File> sourcePath, File destination, ", "+                                               List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings) {", "+    return Arrays.asList(new CompilerError(MESSAGE, false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e258721b69066fd3613e7c817bf57c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerRegistryTest.java", "commitBeforeChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "commitAfterChange": "2df7289d55456372fbaf4e3ab78549d8571648f8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public CompilerError[] compile(File[] sourceRoots, File[] files)", "signatureAfterChange": "      public List<? extends CompilerError> compile(List<? extends File> files, List<? extends File> classPath,                                                   List<? extends File> sourcePath, File destination,                                                   List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "diff": ["-     public void addToBootClassPath(File s) { }", "-     public CompilerError[] compile(File[] sourceRoots, File[] files) { return null; }", "+    public List<? extends CompilerError> compile(List<? extends File> files, List<? extends File> classPath, ", "+                                                 List<? extends File> sourcePath, File destination, ", "+                                                 List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings) {", "+      return null;", "+    }"]}], "num": 18028}