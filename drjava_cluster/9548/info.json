{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "723a86ef81aebded7de91ceeeec7e699", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70a8ce3795af4e05a8e37fcb6a0f7e70", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/KeyBindingManager.java", "commitBeforeChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "commitAfterChange": "ba6205cad42ae00df3c37c5cbd4625770848df66", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "          public void optionChanged(OptionEvent<KeyStroke> oce)", "signatureAfterChange": "          public void optionChanged(OptionEvent<KeyStroke> oce)", "diff": ["-        KeyStrokeData data = (KeyStrokeData)_actionToDataMap.get(_a);", "-        _keyToDataMap.remove(_ks);", "+        KeyStrokeData data = _actionToDataMap.get(_a);", "+        if (data == null) {", "+          // Nothing to change", "+          return;", "+        }", "+", "+        // Only remove the old keystroke from the map if it", "+        //  is currently mapped to our data.  If not, our old", "+        //  keystroke has already been redefined and should not", "+        //  be removed!", "+        if (data.equals(_keyToDataMap.get(_ks))) {", "+          _keyToDataMap.remove(_ks);", "+        }", "-          KeyStrokeData conflictKSD = (KeyStrokeData)_keyToDataMap.get(oce.value);", "+          KeyStrokeData conflictKSD = _keyToDataMap.get(oce.value);", "-        Action shiftAction = (Action) data.getShiftAction();", "+        Action shiftAction = data.getShiftAction();", "-          KeyStrokeData shiftKSD = (KeyStrokeData) _actionToDataMap.get(shiftAction);", "+          KeyStrokeData shiftKSD = _actionToDataMap.get(shiftAction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8144b41d715b01658f53f9d685303b9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/NonNegativeIntegerOptionTest.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testFormat()", "signatureAfterChange": "      public void testFormat()", "diff": ["-    assertEquals(\"33\",  io1.format(new Integer(33)));", "-    assertEquals(\"33\",  io2.format(new Integer(33)));", "-    assertEquals(\"-11\", io1.format(new Integer(-11)));", "-    assertEquals(\"-11\", io2.format(new Integer(-11)));", "+    assertEquals(\"33\",  io1.format(Integer.valueOf(33)));", "+    assertEquals(\"33\",  io2.format(Integer.valueOf(33)));", "+    assertEquals(\"-11\", io1.format(Integer.valueOf(-11)));", "+    assertEquals(\"-11\", io2.format(Integer.valueOf(-11)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8486f390081e9b27e08d1b95efcc106d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelListTest.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public void testInsert()", "signatureAfterChange": "    public void testInsert()", "diff": ["-    itFull.insert(new Integer(5));", "+    itFull.insert(Integer.valueOf(5));", "-    assertEquals(\"#1.2\", new Integer(5), itFull.current());", "+    assertEquals(\"#1.2\", Integer.valueOf(5), itFull.current());", "-    itFull.insert(new Integer(4));", "+    itFull.insert(Integer.valueOf(4));", "-    assertEquals(\"#2.3\", new Integer(4), itFull.current());", "+    assertEquals(\"#2.3\", Integer.valueOf(4), itFull.current());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa65730961b24c5f6a07e1da84acd2d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ModelListTest.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "    public void testNotifyRemove()", "signatureAfterChange": "    public void testNotifyRemove()", "diff": ["-    itFull2.insert(new Integer(0));", "-    itFull2.insert(new Integer(1));", "+    itFull2.insert(Integer.valueOf(0));", "+    itFull2.insert(Integer.valueOf(1));", "-    assertEquals(\"#0.1\", new Integer(1), itFull.current());", "+    assertEquals(\"#0.1\", Integer.valueOf(1), itFull.current());", "-    assertEquals(\"#0.0\", new Integer(0), itFull.current());", "+    assertEquals(\"#0.0\", Integer.valueOf(0), itFull.current());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5e23cc840a20bf49e1a006a83a63eb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/IntegerOptionTest.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testFormat()", "signatureAfterChange": "      public void testFormat()", "diff": ["-    assertEquals(\"33\",  io1.format(new Integer(33)));", "-    assertEquals(\"33\",  io2.format(new Integer(33)));", "-    assertEquals(\"-11\", io1.format(new Integer(-11)));", "-    assertEquals(\"-11\", io2.format(new Integer(-11)));", "+    assertEquals(\"33\",  io1.format(Integer.valueOf(33)));", "+    assertEquals(\"33\",  io2.format(Integer.valueOf(33)));", "+    assertEquals(\"-11\", io1.format(Integer.valueOf(-11)));", "+    assertEquals(\"-11\", io2.format(Integer.valueOf(-11)));"]}], "num": 9548}