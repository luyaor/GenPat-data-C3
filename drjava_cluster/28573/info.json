{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05dee03fb3accd73b9df5b035b56cb2e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "109bb85bde4a08f4a2ec6e80203b80cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "d884ae55e9471d604870827048329b58394dd950", "commitAfterChange": "28bca5adabaaf178bdf954808155389f93ed51fa", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      public void testBookmark() throws Exception", "signatureAfterChange": "      public void testBookmark() throws Exception", "diff": ["-    assertEquals(\"Should be 1 bookmarks\", 1, bms.size());", "-    assertEquals(\"Start offset should be 3\", 8, bms.get(0).getStartOffset());", "-    assertEquals(\"End offset should be 6\", 12, bms.get(0).getEndOffset());", "+    assertEquals(\"Should be 3 bookmarks\", 3, bms.size());", "+    assertEquals(\"Start offset should be 3\", 3, bms.get(0).getStartOffset());", "+    assertEquals(\"End offset should be 6\", 6, bms.get(0).getEndOffset());", "+    assertEquals(\"Start offset should be 5\", 5, bms.get(1).getStartOffset());", "+    assertEquals(\"End offset should be 10\", 10, bms.get(1).getEndOffset());", "+    assertEquals(\"Start offset should be 8\", 8, bms.get(2).getStartOffset());", "+    assertEquals(\"End offset should be 12\", 12, bms.get(2).getEndOffset());", "-    assertEquals(\"Should be 0 bookmarks\", 0, bms.size());", "+    assertEquals(\"Should be 2 bookmarks\", 2, bms.size());", "+    assertEquals(\"Start offset should be 3\", 3, bms.get(0).getStartOffset());", "+    assertEquals(\"End offset should be 6\", 6, bms.get(0).getEndOffset());", "+    assertEquals(\"Start offset should be 5\", 5, bms.get(1).getStartOffset());", "+    assertEquals(\"End offset should be 10\", 10, bms.get(1).getEndOffset());", "-    assertEquals(\"Start offset should be 5\", 3, bms.get(0).getStartOffset());", "-    assertEquals(\"End offset should be 10\", 6, bms.get(0).getEndOffset());", "-    _model.toggleBookmark(3,3);", "+    assertEquals(\"Start offset should be 5\", 5, bms.get(0).getStartOffset());", "+    assertEquals(\"End offset should be 10\", 10, bms.get(0).getEndOffset());", "+    _model.toggleBookmark(10,5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f5e3e244fb41a2109df68d380ba1304", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "0ef216d80b2e9cc63f2ef7b2c23490480ef77851", "commitAfterChange": "c5aaf72fbd7fa889788e2cd72fe646345421a547", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testNonStaticWatches()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "signatureAfterChange": "   public void testNonStaticWatches()     throws DebugException, BadLocationException, DocumentAdapterException,     IOException, InterruptedException", "diff": ["-    _debugger.toggleBreakpoint(doc,MONKEY_WITH_INNER_CLASS.indexOf(\"innerMethodFoo = 12;\"), 9);", "+    _debugger.toggleBreakpoint(doc,MONKEY_WITH_INNER_CLASS.indexOf(\"innerMethodFoo = 12;\"), 10);", "+    _debugger.addWatch(\"nullString\");", "+    assertEquals(\"watch name incorrect\", \"nullString\", watches.elementAt(5).getName());", "+    assertEquals(\"watch value incorrect\", \"null\", watches.elementAt(5).getValue());", "+    assertEquals(\"watch type incorrect\", \"java.lang.String\", watches.elementAt(5).getType());", "+    assertEquals(\"watch name incorrect\", \"nullString\", watches.elementAt(5).getName());", "+    assertEquals(\"watch value incorrect\", \"null\", watches.elementAt(5).getValue());", "+    assertEquals(\"watch type incorrect\", \"java.lang.String\", watches.elementAt(5).getType());", "+    assertEquals(\"watch name incorrect\", \"nullString\", watches.elementAt(5).getName());", "+    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.elementAt(5).getValue());", "+    assertEquals(\"watch type incorrect\", DebugWatchData.NO_TYPE, watches.elementAt(5).getType());"]}], "num": 28573}