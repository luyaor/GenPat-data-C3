{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6786853ea53f51d987d96787928df499", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1798f6f2e7d2abc6b3c35267cd15e2f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelDeleteTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 10, "signatureBeforeChange": "   \tpublic void testDeleteSimple2()", "signatureAfterChange": "  \tpublic void testBlockCommentStartEatsEnd()", "diff": ["+", "+\tpublic void testBlockCommentStartEatsEnd()", "+\t\t{", "+\t\t\tmodel1.insertSlash();", "+\t\t\tassertEquals(\"#0.0\", 1, model1.absOffset());", "+\t\t\tassertEquals(\"#0.1\",ReducedToken.FREE, model1.getStateAtCurrent());", "+\t\t\t", "+\t\t\tmodel1.insertStar();", "+\t\t\tassertEquals(\"#1.0\", 2, model1.absOffset());", "+\t\t\tassertEquals(\"#1.1\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());\t\t\t\t\t\t\t\t\t ", "+", "+\t\t\tmodel1.insertGap(2);", "+\t\t\tassertEquals(\"#2.0\", 4, model1.absOffset());", "+\t\t\tassertEquals(\"#2.1\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());", "+", "+\t\t\tmodel1.insertStar();", "+\t\t\tassertEquals(\"#3.0\", 5, model1.absOffset());", "+\t\t\tassertEquals(\"#3.1\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());", "+\t\t\tassertEquals(\"#4.0\", 6, model1.absOffset());", "+\t\t\tassertEquals(\"#4.1\",ReducedToken.FREE, model1.getStateAtCurrent());", "+", "+\t\t\t", "+\t\t\tmodel1.move(-5);", "+\t\t\tassertEquals(\"#4.0\", 1, model1.absOffset());", "+\t\t\tassertEquals(\"#4.1\", \"/*\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#4.1\", ReducedToken.FREE, model1.getStateAtCurrent());", "+\t\t\t", "+\t\t\tmodel1.delete(3);", "+", "+\t\t\tassertEquals(\"#5.0\", 1, model1.absOffset());", "+\t\t\tassertEquals(\"#5.1\",\"/*\", model1.currentToken().getType());", "+", "+\t\t\tmodel1.move(1);", "+\t\t\tassertEquals(\"#6.0\", 2, model1.absOffset());", "+\t\t\tassertEquals(\"#6.1\",\"/\",model1.currentToken().getType());", "+\t\t\tassertEquals(\"#6.2\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());", "+\t\t\tassertEquals(\"#6.3\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+", "+\t\t\tmodel1.move(1);", "+\t\t\tassertEquals(\"#7.0\", 3, model1.absOffset());", "+\t\t\tassertEquals(\"#7.1\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());", "+\t\t}", "-", "-\tpublic void testDeleteSimple2()", "-\t\t{ ", "-\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.move(-1);", "-\t\t\t", "-\t\t\tassertEquals(\"#0.0\",\"//\",model1.getCursor().current().getType());", "-\t\t\tmodel1.delete(-1);", "-\t\t\t", "-\t\t\tassertEquals(\"#1.0\",\"/\",model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#1.1\",0,model1.getBlockOffset());", "-\t \t\tmodel1.insertSlash();", "-\t\t\tmodel1.delete(-1);   //This time delete the second slash", "-", "-\t\t\tassertEquals(\"#2.0\",\"/\",model1.getCursor().prevItem().getType());", "-\t\t\tassertTrue(\"#2.1\",model1.getCursor().atEnd());", "-\t\t\tassertEquals(\"#2.2\",0,model1.getBlockOffset());", "-", "-\t\t\t// /#", "-\t\t\tmodel1.delete(-1);", "-\t\t\tassertTrue(\"#3.0\",model1.getBraces().isEmpty());", "-", "-\t\t\tmodel1.insertGap(8);", "-\t\t\tmodel1.move(-3);", "-\t\t\tmodel1.delete(-3);", "-\t\t \tassertEquals(\"#4.0\",2,model1.getBlockOffset());", "-\t\t\tassertEquals(\"#4.1\",5,model1.getCursor().current().getSize());", "-", "-\t\t\tmodel1.move(3);", "-\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.insertStar();", "-\t\t\tmodel1.insertGap(6);", "-\t\t\tmodel1.move(-9);", "-\t\t\tassertEquals(\"#5.0\",5,model1.getCursor().current().getSize());", "-\t\t\tassertEquals(\"#5.1\",true,model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#5.2\",\"/*\",model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#5.3\",4,model1.getBlockOffset());", "-", "-\t\t\t//_____#_/*______", "-\t\t\t//System.out.println(model1.simpleString());", "-\t\t\tmodel1.move(5);", "-\t\t\tmodel1.delete(-5);", "-\t\t\tassertEquals(\"#6.0\",8,model1.getCursor().current().getSize());", "-\t\t\tassertEquals(\"#6.1\",true,model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#6.2\",4,model1.getBlockOffset());", "-\t\t\tassertTrue(\"#6.3\",model1.getCursor().atLastItem());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e57030febd1ceed95592741b9b113cd0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelDeleteTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 10, "signatureBeforeChange": "   \tpublic void testDeleteSimple2()", "signatureAfterChange": "  \tpublic void testBlockCommentStartEatsEnd()", "diff": ["+", "+\tpublic void testBlockCommentStartEatsEnd()", "+\t\t{", "+\t\t\tmodel1.insertSlash();", "+\t\t\tassertEquals(\"#0.0\", 1, model1.absOffset());", "+\t\t\tassertEquals(\"#0.1\",ReducedToken.FREE, model1.getStateAtCurrent());", "+\t\t\t", "+\t\t\tmodel1.insertStar();", "+\t\t\tassertEquals(\"#1.0\", 2, model1.absOffset());", "+\t\t\tassertEquals(\"#1.1\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());\t\t\t\t\t\t\t\t\t ", "+", "+\t\t\tmodel1.insertGap(2);", "+\t\t\tassertEquals(\"#2.0\", 4, model1.absOffset());", "+\t\t\tassertEquals(\"#2.1\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());", "+", "+\t\t\tmodel1.insertStar();", "+\t\t\tassertEquals(\"#3.0\", 5, model1.absOffset());", "+\t\t\tassertEquals(\"#3.1\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());", "+\t\t\tassertEquals(\"#4.0\", 6, model1.absOffset());", "+\t\t\tassertEquals(\"#4.1\",ReducedToken.FREE, model1.getStateAtCurrent());", "+", "+\t\t\t", "+\t\t\tmodel1.move(-5);", "+\t\t\tassertEquals(\"#4.0\", 1, model1.absOffset());", "+\t\t\tassertEquals(\"#4.1\", \"/*\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#4.1\", ReducedToken.FREE, model1.getStateAtCurrent());", "+\t\t\t", "+\t\t\tmodel1.delete(3);", "+", "+\t\t\tassertEquals(\"#5.0\", 1, model1.absOffset());", "+\t\t\tassertEquals(\"#5.1\",\"/*\", model1.currentToken().getType());", "+", "+\t\t\tmodel1.move(1);", "+\t\t\tassertEquals(\"#6.0\", 2, model1.absOffset());", "+\t\t\tassertEquals(\"#6.1\",\"/\",model1.currentToken().getType());", "+\t\t\tassertEquals(\"#6.2\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());", "+\t\t\tassertEquals(\"#6.3\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+", "+\t\t\tmodel1.move(1);", "+\t\t\tassertEquals(\"#7.0\", 3, model1.absOffset());", "+\t\t\tassertEquals(\"#7.1\",ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());", "+\t\t}", "-", "-\tpublic void testDeleteSimple2()", "-\t\t{ ", "-\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.move(-1);", "-\t\t\t", "-\t\t\tassertEquals(\"#0.0\",\"//\",model1.getCursor().current().getType());", "-\t\t\tmodel1.delete(-1);", "-\t\t\t", "-\t\t\tassertEquals(\"#1.0\",\"/\",model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#1.1\",0,model1.getBlockOffset());", "-\t \t\tmodel1.insertSlash();", "-\t\t\tmodel1.delete(-1);   //This time delete the second slash", "-", "-\t\t\tassertEquals(\"#2.0\",\"/\",model1.getCursor().prevItem().getType());", "-\t\t\tassertTrue(\"#2.1\",model1.getCursor().atEnd());", "-\t\t\tassertEquals(\"#2.2\",0,model1.getBlockOffset());", "-", "-\t\t\t// /#", "-\t\t\tmodel1.delete(-1);", "-\t\t\tassertTrue(\"#3.0\",model1.getBraces().isEmpty());", "-", "-\t\t\tmodel1.insertGap(8);", "-\t\t\tmodel1.move(-3);", "-\t\t\tmodel1.delete(-3);", "-\t\t \tassertEquals(\"#4.0\",2,model1.getBlockOffset());", "-\t\t\tassertEquals(\"#4.1\",5,model1.getCursor().current().getSize());", "-", "-\t\t\tmodel1.move(3);", "-\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.insertStar();", "-\t\t\tmodel1.insertGap(6);", "-\t\t\tmodel1.move(-9);", "-\t\t\tassertEquals(\"#5.0\",5,model1.getCursor().current().getSize());", "-\t\t\tassertEquals(\"#5.1\",true,model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#5.2\",\"/*\",model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#5.3\",4,model1.getBlockOffset());", "-", "-\t\t\t//_____#_/*______", "-\t\t\t//System.out.println(model1.simpleString());", "-\t\t\tmodel1.move(5);", "-\t\t\tmodel1.delete(-5);", "-\t\t\tassertEquals(\"#6.0\",8,model1.getCursor().current().getSize());", "-\t\t\tassertEquals(\"#6.1\",true,model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#6.2\",4,model1.getBlockOffset());", "-\t\t\tassertTrue(\"#6.3\",model1.getCursor().atLastItem());"]}], "num": 5228}