{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee8222f24edd8b6aa54adbada890ce6b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe93cb05e5bb4bef7482be980295f2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "05f7af6256ad9de7647a20e85e5cc81c388873cd", "commitAfterChange": "d2b9532b43d33848c589e184dd41f72fb998a545", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public String getIndentOfCurrStmt(int pos, char[] delims) throws BadLocationException", "signatureAfterChange": "   public String getIndentOfCurrStmt(int pos, char[] delims) throws BadLocationException", "diff": ["+    boolean ignoreParens;", "-      prevDelimiter = findPrevDelimiter(prevDelimiter, delims);", "+      ignoreParens = posInParenPhrase(prevDelimiter);", "+      prevDelimiter = findPrevDelimiter(prevDelimiter, delims, ignoreParens);", "+      try {", "+      if (getText(prevDelimiter,1).charAt(0) == '{') {", "+        break;", "+      }", "+      } catch (BadLocationException e) { }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5b22982358ee53d0400c41e68ab712", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlus.java", "commitBeforeChange": "a3941c1000ac76b7c7dfbe2e02df0072cee011b6", "commitAfterChange": "9dde008cc707b0b4af3c382ad06f25fcd30d66ce", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-    ", "+", "+    try {", "+      char delim = doc.getText(prevDelimiterPos, 1).charAt(0);", "+      char[] ws = {' ', '\\t', '\\n', ';'};", "+      if (delim == ';') {", "+        int testPos = doc.findPrevCharPos(prevDelimiterPos, ws);", "+        if (doc.getText(testPos,1).charAt(0) == '}') {", "+          prevDelimiterPos = testPos;", "+        }", "+      }", "+    } catch (BadLocationException e) {", "+      //do nothing", "+    }", "+", "+"]}], "num": 30781}