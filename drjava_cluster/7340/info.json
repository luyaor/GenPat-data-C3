{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84b2704d4aac000472b4263ac70e1195", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e5c3e41d57a8e9074ac23c679a4f2b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocument.java", "commitBeforeChange": "217c110d76e83e4661793b1b3dd648691e91b61d", "commitAfterChange": "d1b8a064222fec51f4a22f2414776e99e8ad8af0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void forceInsertText(int offs, String str, String style)", "signatureAfterChange": "   public void forceInsertText(int offs, String str, String style)", "diff": ["-    AttributeSet s = null;", "-    if (style != null) s = getDocStyle(style);", "-    /* Using a writeLock is unnecessary because insertString is already thread-safe */", "-    try { super.insertString(offs, str, s); }", "-    catch (BadLocationException e) { throw new EditDocumentException(e); }", "+    acquireWriteLock();", "+    try { _forceInsertText(offs, str, style); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60ada4932e24638a01e67d156ded7286", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentAdapter.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public String getDocText(int offs, int len) throws DocumentAdapterException", "signatureAfterChange": "   public String getDocText(int offs, int len)", "diff": ["-  public String getDocText(int offs, int len) throws DocumentAdapterException {", "-    try {", "-      return getText(offs, len);  // locking is unnecessary because getText is already thread-safe", "-    }", "-    catch (BadLocationException e) {", "-      throw new DocumentAdapterException(e);", "-    }", "+  public String getDocText(int offs, int len) {", "+    try { return getText(offs, len); }  // locking is unnecessary because getText is already thread-safe", "+    catch (BadLocationException e) { throw new DocumentAdapterException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7ad5c899d876fcddcdb913adc0ee587", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocumentAdapter.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void forceInsertText(int offs, String str, String style)     throws DocumentAdapterException", "signatureAfterChange": "   public void forceInsertText(int offs, String str, String style)", "diff": ["-  public void forceInsertText(int offs, String str, String style)", "-    throws DocumentAdapterException {", "+  public void forceInsertText(int offs, String str, String style) {", "-    try {", "-      super.insertString(offs, str, s);", "-    }", "-    catch (BadLocationException e) {", "-      throw new DocumentAdapterException(e);", "-    }", "+    try { super.insertString(offs, str, s); }", "+    catch (BadLocationException e) { throw new DocumentAdapterException(e); }"]}], "num": 7340}