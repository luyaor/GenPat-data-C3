{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92753f03e98badffd7ab13c55f14f454", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d88f25d288d8c5f7e576f2551003a7c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "       public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason)", "signatureAfterChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "diff": ["-      public void junitEnded() { junitEndCount++; }", "-      public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason) {", "-        assertEquals(\"should be JUNIT reason to save\", JUNIT_REASON, reason);", "-        assertModified(true, doc);", "-        assertSaveCount(0);", "-        assertCompileStartCount(0);", "-        assertCompileEndCount(0);", "-        ", "-        try {", "-          doc.saveFile(new FileSelector(file));", "-        }", "-        catch (IOException ioe) {", "-          fail(\"Save produced exception: \" + ioe);", "-        }", "-        ", "-        saveAllBeforeProceedingCount++;", "-      }", "+   */", "+  public void testUnsavedAndUnCompiledChanges() throws Exception {", "+    OpenDefinitionsDocument doc = setupDocument(MONKEYTEST_PASS_TEXT);", "+    final File file = new File(_tempDir, \"MonkeyTestPass.java\");", "+    doc.saveFile(new FileSelector(file));", "+    TestShouldSucceedListener listener = new TestShouldSucceedListener();", "+    _model.addListener(listener);", "+    synchronized(listener) {", "+      doc.startCompile();", "+      listener.wait();", "+    }", "+    changeDocumentText(MONKEYTEST_FAIL_TEXT, doc);", "+    synchronized(listener) {", "+      doc.startJUnit();", "+      listener.wait();", "+    }", "+    _model.removeListener(listener);", "+    ", "+    assertEquals(\"test case should have no errors reported after modifying\",", "+                 0,", "+                 doc.getJUnitErrorModel().getNumErrors());", "+    doc.saveFile(new FileSelector(file));", "+    doc.startJUnit();", "+    ", "+    assertEquals(\"test case should have no errors reported after saving\",", "+                 0,", "+                 doc.getJUnitErrorModel().getNumErrors());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c1977d7cc75416b39c9fb98329422db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "0a93533cf1b555344278f97d8d989cd2f113c958", "commitAfterChange": "c950bf1122c303a9137db70374c1cd2e2fc01d08", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testLanguageLevelJUnitErrorLine() throws Exception", "signatureAfterChange": "   public void testLanguageLevelJUnitErrorLine() throws Exception", "diff": ["-    /*", "+    ", "-    if(true) throw new RuntimeException(\"asdf\");", "-    if(true) throw new RuntimeException(\"asdf\");", "-    */", "+    "]}], "num": 12047}