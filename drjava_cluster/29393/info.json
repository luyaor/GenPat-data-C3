{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf9c105de16b2333643e85b6385a938f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a6c2b07b958184d7fd209761b26c062", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "commitAfterChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 34, "signatureBeforeChange": "   private void _setStackCellFont(Component renderer, int row)", "signatureAfterChange": "   public DebugStackData getSelectedStackItem()", "diff": ["-  private void _setStackCellFont(Component renderer, int row) {", "-    DebugStackData stackData = _stackFrames.elementAt(row);", "-    if (stackData.getMethod().equals(_currentStackMethod) && ", "-        stackData.getLine() == _currentStackLine) {", "-      renderer.setFont(getFont().deriveFont(Font.BOLD));", "-    }", "+   */", "+  public DebugStackData getSelectedStackItem() {", "+    return _stackFrames.elementAt(_stackTable.getSelectedRow());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d15690f0c3544dc583be764e02432e85", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public synchronized void registerInterpreterJVM(InterpreterJVMRemoteI remote)     throws RemoteException", "signatureAfterChange": "   private InterpreterJVMRemoteI _interpreterJVM()", "diff": ["-   */", "-  public synchronized void registerInterpreterJVM(InterpreterJVMRemoteI remote)", "-    throws RemoteException", "-  {", "-    if (_interpreterJVM != null) { ", "-      try {", "-        //DrJava.consoleOut().println(\"killing jvm! \" + i);", "-        remote.exitJVM();", "-      }", "-      catch (RemoteException re) {", "-      }", "-      return;", "-    }", "-    _timerThread.disable();", "-    _interpreterJVM = remote;", "-    // _model may be null if we're running a test on this", "-    if (_model != null) {", "-      _model.interactionsReady();", "-    }", "-    _startupInProgress = false;", "-    // wake up anyone waiting for an interpreter!", "-    notify();", "-  }", "+   */", "+  private InterpreterJVMRemoteI _interpreterJVM() {", "+    return (InterpreterJVMRemoteI) getSlave();", "+  }"]}], "num": 29393}