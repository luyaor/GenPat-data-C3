{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06a76a3cba37559c78c54a0d14c7773c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c499b5d24d653217ae3ee692b430bd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "cbdc405e8bd4373c383ad7cbc6a9a656b65ddd52", "commitAfterChange": "2c9a67ea7f4112fa7f99743281ac144c9f56d20a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testConstructOneDocWithBoth()", "signatureAfterChange": "   public void testConstructOneDocWithBoth()", "diff": ["-    errors = new CompilerError[]", "-    { new CompilerError(files[0], 2, 0, \"Test error with File and line\", false),", "+    errors = new CompilerError[] { ", "+      new CompilerError(files[0], 2, 0, \"Test error with File and line\", false),", "-      new CompilerError(files[0], 1, 0, \"Test error with File and line\", false) };", "+      new CompilerError(files[0], 1, 0, \"Test error with File and line\", false) ", "+    };", "-    for (int i = 0; i < errors.length; i++) {", "-      copy[i] = errors[i];", "-    }", "+    for (int i = 0; i < errors.length; i++) copy[i] = errors[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36565c3c9e353e28533d1ad918f3c0f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "cbdc405e8bd4373c383ad7cbc6a9a656b65ddd52", "commitAfterChange": "2c9a67ea7f4112fa7f99743281ac144c9f56d20a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testConstructOneDocWithLineNums()", "signatureAfterChange": "   public void testConstructOneDocWithLineNums()", "diff": ["-    errors = new CompilerError[]", "-    { new CompilerError(files[0], 2, 0, \"Test error with File and line\", false),", "+    errors = new CompilerError[] { ", "+      new CompilerError(files[0], 2, 0, \"Test error with File and line\", false),", "-      new CompilerError(files[0], 1, 0, \"Test error with File and line\", false) };", "+      new CompilerError(files[0], 1, 0, \"Test error with File and line\", false) ", "+    };", "-    for (int i = 0; i < errors.length; i++) {", "-      copy[i] = errors[i];", "-    }", "+    for (int i = 0; i < errors.length; i++) copy[i] = errors[i];"]}], "num": 30553}