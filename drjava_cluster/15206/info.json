{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de11d58884df658874b2e13f702d035f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f85df8218380bbae1d8d80652451696", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "b43f29e50ad9a747c307023da2022e85812a7a06", "commitAfterChange": "f9bd2a484c4505cc2dff97c8f9bad6e0c712ff50", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void testNodeStarAttrsStarDelegate() throws Exception", "signatureAfterChange": "\r   public void testNodeStarAttrsStarDelegate() throws Exception", "diff": ["-  }", "-  public void testNodeStarAttrsStarDelegate() throws Exception {", "-    XMLConfig xcParent = new XMLConfig(new StringReader(", "-                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><middle><foo a=\\\"foo.a\\\">\\n\"", "-                                                    + \"  <bar flubb=\\\"mno\\\">abc</bar>\\n\"", "-                                                    + \"  <fum fee=\\\"xyz\\\" fuz=\\\"zzz\\\" fiz=\\\"aaa\\\">def</fum>\\n\"", "-                                                    + \"</foo></middle>\"));", "-    XMLConfig xc = new XMLConfig(xcParent, xcParent.getNodes(\"middle\").get(0));", "-    List<String> r = xc.getMultiple(\"*.*\");", "-    assertEquals(1, r.size());", "-    assertEquals(\"foo.a\", r.get(0));", "-    ", "-    r = xc.getMultiple(\"foo/*.*\");", "-    assertEquals(4, r.size());", "-    assertEquals(\"mno\", r.get(0));", "-    assertEquals(\"xyz\", r.get(1));", "-    assertEquals(\"aaa\", r.get(2));", "-    assertEquals(\"zzz\", r.get(3));", "-  }", "+  }\r", "+  public void testNodeStarAttrsStarDelegate() throws Exception {\r", "+    XMLConfig xcParent = \r", "+      new XMLConfig(new StringReader(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><middle>\" +\r", "+                                     \"<foo a=\\\"foo.a\\\">\\n\"\r", "+                                       + \"  <bar flubb=\\\"mno\\\">abc</bar>\\n\"\r", "+                                       + \"  <fum fee=\\\"xyz\\\" fuz=\\\"zzz\\\" fiz=\\\"aaa\\\">def</fum>\\n\"\r", "+                                       + \"</foo></middle>\"));\r", "+    XMLConfig xc = new XMLConfig(xcParent, xcParent.getNodes(\"middle\").get(0));\r", "+    List<String> r = xc.getMultiple(\"*.*\");\r", "+    assertEquals(1, r.size());\r", "+    assertEquals(\"foo.a\", r.get(0));\r", "+    \r", "+    r = xc.getMultiple(\"foo/*.*\");\r", "+    assertEquals(4, r.size());\r", "+    assertEquals(\"mno\", r.get(0));\r", "+    assertEquals(\"xyz\", r.get(1));\r", "+    assertEquals(\"aaa\", r.get(2));\r", "+    assertEquals(\"zzz\", r.get(3));\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e8a54e0cdc23593e69b15debb4fc4f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public TypeData forSimpleNamedClassInstantiation(SimpleNamedClassInstantiation that)", "signatureAfterChange": "   public TypeData forSimpleNamedClassInstantiation(SimpleNamedClassInstantiation that)", "diff": ["-   */", "+    */", "-    //It is an error to instantiate a non-static inner class from a static context (i.e. new A.B() where B is not a static inner class).", "-    //Here, we make sure that if B is non-static, it is not an inner class of anything.", "+    // Cannot instantiate a non-static inner class from a static context (i.e. new A.B() where B is dynamic).", "+    // Here, we make sure that if B is non-static, it is not an inner class of anything.", "-      _addError(Data.dollarSignsToDots(type.getName()) + \" is not a static inner class, and thus cannot be instantiated from this context.  Perhaps you meant to use an instantiation of the form new \" + firstPart + \"().new \" + secondPart + \"()\", that);", "+      _addError(Data.dollarSignsToDots(type.getName()) + \" is not a static inner class, and thus cannot be \" + ", "+                \"instantiated from this context.  Perhaps you meant to use an instantiation of the form new \" + ", "+                firstPart + \"().new \" + secondPart + \"()\", that);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd9b26e6f65fbd4a2535e3c718d81a70", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "b43f29e50ad9a747c307023da2022e85812a7a06", "commitAfterChange": "f9bd2a484c4505cc2dff97c8f9bad6e0c712ff50", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void testNodesStarMiddleDelegate() throws Exception", "signatureAfterChange": "\r   public void testNodesStarMiddleDelegate() throws Exception", "diff": ["-  }", "-  public void testNodesStarMiddleDelegate() throws Exception {", "-    XMLConfig xcParent = new XMLConfig(new StringReader(", "-                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><foo a=\\\"foo.a\\\"><fum>\\n\"", "-                                                    + \"  <bar fee=\\\"xxx\\\" fuz=\\\"aaa\\\">abc</bar>\\n\"", "-                                                    + \"  <bar fee=\\\"yyy\\\" fuz=\\\"bbb\\\">ghi</bar>\\n\"", "-                                                    + \"  <fum fee=\\\"zzz\\\" fuz=\\\"ccc\\\">def</fum>\\n\"", "-                                                    + \"</fum></foo>\"));", "-    XMLConfig xc = new XMLConfig(xcParent, xcParent.getNodes(\"foo\").get(0));", "-    List<String> r = xc.getMultiple(\"fum/*.fee\");", "-    assertEquals(3, r.size());", "-    assertEquals(\"xxx\", r.get(0));", "-    assertEquals(\"yyy\", r.get(1));", "-    assertEquals(\"zzz\", r.get(2));", "-    ", "-    r = xc.getMultiple(\"fum/*.*\");", "-    assertEquals(6, r.size());", "-    assertEquals(\"xxx\", r.get(0));", "-    assertEquals(\"aaa\", r.get(1));", "-    assertEquals(\"yyy\", r.get(2));", "-    assertEquals(\"bbb\", r.get(3));", "-    assertEquals(\"zzz\", r.get(4));", "-    assertEquals(\"ccc\", r.get(5));", "-    ", "-    xcParent = new XMLConfig(new StringReader(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><foo><flub>\\n\"", "-                                          + \"  <foo/>\\n\"", "-                                          + \"  <fee/>\\n\"", "-                                          + \"  <fum foz=\\\"abc\\\"/>\"", "-                                          + \"</flub></foo>\"));", "-    xc = new XMLConfig(xcParent, xcParent.getNodes(\"foo\").get(0));", "-    r = xc.getMultiple(\"flub/*\");", "-    assertEquals(3, r.size());", "-  }", "+  }\r", "+  public void testNodesStarMiddleDelegate() throws Exception {\r", "+    XMLConfig xcParent = \r", "+      new XMLConfig(new StringReader(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><foo a=\\\"foo.a\\\">\" +\r", "+                                     \"<fum>\\n\" \r", "+                                       + \"  <bar fee=\\\"xxx\\\" fuz=\\\"aaa\\\">abc</bar>\\n\"\r", "+                                       + \"  <bar fee=\\\"yyy\\\" fuz=\\\"bbb\\\">ghi</bar>\\n\"\r", "+                                       + \"  <fum fee=\\\"zzz\\\" fuz=\\\"ccc\\\">def</fum>\\n\"\r", "+                                       + \"</fum></foo>\"));\r", "+    XMLConfig xc = new XMLConfig(xcParent, xcParent.getNodes(\"foo\").get(0));\r", "+    List<String> r = xc.getMultiple(\"fum/*.fee\");\r", "+    assertEquals(3, r.size());\r", "+    assertEquals(\"xxx\", r.get(0));\r", "+    assertEquals(\"yyy\", r.get(1));\r", "+    assertEquals(\"zzz\", r.get(2));\r", "+    \r", "+    r = xc.getMultiple(\"fum/*.*\");\r", "+    assertEquals(6, r.size());\r", "+    assertEquals(\"xxx\", r.get(0));\r", "+    assertEquals(\"aaa\", r.get(1));\r", "+    assertEquals(\"yyy\", r.get(2));\r", "+    assertEquals(\"bbb\", r.get(3));\r", "+    assertEquals(\"zzz\", r.get(4));\r", "+    assertEquals(\"ccc\", r.get(5));\r", "+    \r", "+    xcParent = \r", "+      new XMLConfig(new StringReader(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><foo><flub>\\n\"\r", "+                                       + \"  <foo/>\\n\"\r", "+                                       + \"  <fee/>\\n\"\r", "+                                       + \"  <fum foz=\\\"abc\\\"/>\"\r", "+                                       + \"</flub></foo>\"));\r", "+    xc = new XMLConfig(xcParent, xcParent.getNodes(\"foo\").get(0));\r", "+    r = xc.getMultiple(\"flub/*\");\r", "+    assertEquals(3, r.size());\r", "+  }\r"]}], "num": 15206}