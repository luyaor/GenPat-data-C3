{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf8c4bb2d6885ffcf5b8d20e9cc987ed", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5893d4a03940d0df89ad827661f50e1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "0bcb8da0b79cf218cc2712f201e3771599202c44", "commitAfterChange": "c34979036dca11c3afc06b42fcb087eaf85bc790", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public boolean closeFiles(List<OpenDefinitionsDocument> docList, boolean together)", "signatureAfterChange": "   public boolean closeFiles(List<OpenDefinitionsDocument> docList)", "diff": ["-  public boolean closeFiles(List<OpenDefinitionsDocument> docList, boolean together) {", "+  public boolean closeFiles(List<OpenDefinitionsDocument> docList) {", "-", "-    if (together) { // if together then do all prompting at once", "-      for (OpenDefinitionsDocument doc : docList) { if (!doc.canAbandonFile()) return false; }", "-    }", "-    // create new file before you start closing in order to have ", "-    // an active file that's not in the list of closing files.", "-    // If the current active document is closed before the MainFrame", "-    // can switch to a new file, drjava throws some unexpected exceptions", "-    // relating to the document not being found.", "+    /* Force the user to save or discard all modified files in docList */", "+    for (OpenDefinitionsDocument doc : docList) { if (!doc.canAbandonFile()) return false; }", "+    ", "+    // If all files are being closed, create a new file before starTing in order to have ", "+    // an active file that is not in the list of closing files.", "+    ", "+    // Set the active document to the document just after the last document or the document just before the ", "+    // first document in docList.", "-    // Close all files. If together, then don't let it prompt a 2nd time;", "-    // but, if not together, then call closeFile which may prompt the user.", "-    for (OpenDefinitionsDocument doc : docList) {", "-      if (together) closeFileWithoutPrompt(doc);", "-      else if (! closeFileHelper(doc)) {", "-        setActiveDocument(doc);", "-        if (newDoc != null) closeFileHelper(newDoc); // undo previous newFile() ", "-        return false;", "-      }", "-    }  ", "+    // Close the files in docList. ", "+    for (OpenDefinitionsDocument doc : docList) { closeFileWithoutPrompt(doc); }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a306367a35aab1e4904c4f305d072097", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "4276346051c6ab89c146c0041be28826e7dfbe12", "commitAfterChange": "86bed99990f6eb7fff2cb31d595e17b49135df26", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public synchronized boolean closeFiles(List<OpenDefinitionsDocument> docList)", "signatureAfterChange": "   public synchronized boolean closeFiles(List<OpenDefinitionsDocument> docList, boolean together)", "diff": ["-  public synchronized boolean closeFiles(List<OpenDefinitionsDocument> docList) {", "-    OpenDefinitionsDocument last = null;", "-    Iterator<OpenDefinitionsDocument> it = docList.iterator();", "-    while(it.hasNext()) {", "-      last = it.next();", "-      if(it.hasNext())", "-        closeFile(last);      ", "-    }", "-    if(last != null) {", "-      IDocumentNavigator nav = getDocumentNavigator();", "-      INavigatorItem switchTo = nav.getNext(getIDocGivenODD(last));", "-      /** if we can't move forward, go backwards */", "-      if( switchTo == getIDocGivenODD(last)) {", "-        switchTo = nav.getPrevious(switchTo);", "-      }", "-      ", "-      //close the last file", "-      if (closeFile(last))", "-      {        ", "-        if(getDocumentCount() == 1){", "-          setActiveFirstDocument();", "-        }", "-        else {", "-          /* this will select the active document in the navigator, which", "-           * will signal a listener to call _setActiveDoc(...)", "-           */", "-          nav.setActiveDoc(switchTo);", "-        }", "-      }", "-      else", "-      {", "-        nav.setActiveDoc(getIDocGivenODD(last)); ", "+  public synchronized boolean closeFiles(List<OpenDefinitionsDocument> docList, boolean together) {", "+    if (docList.size() == 0) return true;", "+", "+    if (together) { // if together then do all prompting at once", "+      for (OpenDefinitionsDocument doc : docList) {", "+        if (!doc.canAbandonFile()) return false;", "+    ", "+    // create new file before you start closing in order to have ", "+    // an active file that's not in the list of closing files.", "+    // If the current active document is closed before the MainFrame", "+    // can switch to a new file, drjava throws some unexpected exceptions", "+    // relating to the document not being found.", "+    OpenDefinitionsDocument newDoc = null;", "+    if (docList.size() == getDefinitionsDocumentsSize()) newDoc = newFile();", "+    _ensureNotActive(docList);", "+        ", "+    // Close all files. If together, then don't let it prompt a 2nd time;", "+    // but, if not together, then call closeFile which may prompt the user.", "+    for (OpenDefinitionsDocument doc : docList) {", "+      if (together) {", "+        super.closeFileWithoutPrompt(doc);", "+      }", "+      else if (!super.closeFile(doc)) {", "+        setActiveDocument(doc);", "+        if (newDoc != null) super.closeFile(newDoc); // undo previous newFile() ", "+        return false;", "+      }", "+    }", "+        "]}], "num": 30246}