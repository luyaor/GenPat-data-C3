{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4b6de0dd1202d6549d8187b8b252bde", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "832daf6eda1e4d972355ab12e28778d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 138, "signatureBeforeChange": "   private OpenDefinitionsDocument _openFile(File file)     throws IOException, AlreadyOpenException", "signatureAfterChange": "   private OpenDefinitionsDocument _openFile(File file)     throws IOException, AlreadyOpenException", "diff": ["-    try {", "-      ", "-      DefinitionsDocument tempDoc = (DefinitionsDocument) _editorKit.createNewDocument();", "-", "-      FileReader reader = new FileReader(file);", "-      _editorKit.read(reader, tempDoc, 0);", "-      reader.close(); // win32 needs readers closed explicitly!", "-", "-      tempDoc.setFile(file);", "-      tempDoc.resetModification();", "-      tempDoc.setCurrentLocation(0);", "-      ", "-      final OpenDefinitionsDocument doc = new DefinitionsDocumentHandler(tempDoc);", "+      final OpenDefinitionsDocument doc = new DefinitionsDocumentHandler(file);", "-    }", "-    catch (BadLocationException docFailed) {", "-      throw new UnexpectedException(docFailed);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0321dbf6d44165f69a330df34d16643", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "4128354c8729a4a5df76a578d72103228145ae8d", "commitAfterChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 55, "signatureBeforeChange": "   protected void removeUpdate(AbstractDocument.DefaultDocumentEvent chng)", "signatureAfterChange": "      protected void addUndoRedo(AbstractDocument.DefaultDocumentEvent chng, Runnable undoCommand, Runnable doCommand)", "diff": ["-   */", "-  protected void removeUpdate(AbstractDocument.DefaultDocumentEvent chng) {", "-    throwErrorHuh();", "-    // Clear the helper method cache", "-    if (_cacheInUse) _clearCache();", "-", "-    try {", "-      final int offset = chng.getOffset();", "-      final int length = chng.getLength();", "-      final String removedText = getText(offset, length);", "-            super.removeUpdate(chng);", "-", "-      Runnable doCommand = new RemoveCommand(offset, length);", "-      Runnable undoCommand = new InsertCommand(offset, removedText);", "-", "-      // add the undo/redo info", "-      chng.addEdit(new CommandUndoableEdit(undoCommand, doCommand));", "-", "-      // actually do the removal from the reduced model", "-      doCommand.run();", "-    }", "-    catch (BadLocationException ble) {", "-      throw new UnexpectedException(ble);", "-    }", "-", "+  ", "+  protected void addUndoRedo(AbstractDocument.DefaultDocumentEvent chng, Runnable undoCommand, Runnable doCommand) {", "+    chng.addEdit(new CommandUndoableEdit(undoCommand, doCommand));    ", "+  }"]}], "num": 15141}