{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3be653e5a800bbfd582c509cbbfb0115", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f41f3836e9ee9e24ae0b8e072794a57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "97f966af08ae6bec968f68d8b2fce6c5531a12b8", "commitAfterChange": "d4f8b5e1e15fc2c34ba6969d4ef7bdb04cc8916b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testClassFileSynchronizationAfterRename()     throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronizationAfterRename()     throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "diff": ["+    ", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();", "+    _model.addListener(listener);", "-    doc.startCompile();", "+    synchronized(listener) {", "+      doc.startCompile();", "+      if (_model.getNumErrors() > 0) {", "+        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "+      }", "+      listener.wait();", "+    }", "+    _model.removeListener(listener);", "+    listener.checkCompileOccurred();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a89aebf0433a8384f1800f3c6a6c939f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "97f966af08ae6bec968f68d8b2fce6c5531a12b8", "commitAfterChange": "d4f8b5e1e15fc2c34ba6969d4ef7bdb04cc8916b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testClassFileSynchronization()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronization()     throws BadLocationException, IOException, InterruptedException", "diff": ["+    ", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();", "+    _model.addListener(listener);", "-    doc.startCompile();", "-    assertTrue(\"should be in sync after compile\", ", "+    synchronized(listener) {", "+      doc.startCompile();", "+      if (_model.getNumErrors() > 0) {", "+        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "+      }", "+      listener.wait();", "+    }", "+    _model.removeListener(listener);", "+    listener.checkCompileOccurred();", "+    assertTrue(\"should be in sync after compile\","]}], "num": 7299}