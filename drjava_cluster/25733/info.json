{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71b679e191fa15c69fc3e5cd1efb3cf7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a337301e544b0a136da62e7ba4b434d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 30, "signatureBeforeChange": "   private void _gotoErrorSourceLocation(final int idx)", "signatureAfterChange": "     private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,                                           final int idx)", "diff": ["-   */", "-  private void _gotoErrorSourceLocation(final int idx) {", "-    if (idx < 0) return;", "-", "-    _highlightErrorInSource(idx);", "-", "-    int errPos = _errorPositions[idx].getOffset();", "-    // move caret to that position", "-    _definitionsPane.setCaretPosition(errPos);", "-    _definitionsPane.grabFocus();", "-  }", "+     */", "+    private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,", "+                                          final int idx) {", "+      CompilerErrorModel errorModel = doc.getCompilerErrorModel();", "+      Position[] positions = errorModel.getPositions();", "+", "+", "+      if ((idx < 0) || (idx >= positions.length)) return;", "+", "+      int errPos = positions[idx].getOffset();", "+", "+      // switch to correct def pane", "+      _model.setActiveDocument(doc);", "+", "+      // move caret to that position", "+      DefinitionsPane defPane = _frame.getCurrentDefPane();", "+      defPane.setCaretPosition(errPos);", "+      defPane.grabFocus();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bcf98f92feb83e2c48821aece9c60ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,                                           final int idx)", "signatureAfterChange": "    protected CompilerErrorModel<CompilerError> getErrorModel()", "diff": ["+", "+  protected CompilerErrorModel<CompilerError> getErrorModel(){", "+    return getModel().getCompilerErrorModel();", "+  }", "-     */", "-    private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,", "-                                          final int idx) {", "-      CompilerErrorModel errorModel = doc.getCompilerErrorModel();", "-      Position[] positions = errorModel.getPositions();", "-", "-", "-      if ((idx < 0) || (idx >= positions.length)) return;", "-", "-      Position pos = positions[idx];", "-      // switch to correct def pane", "-      _model.setActiveDocument(doc);", "-", "-      // move caret to that position", "-      DefinitionsPane defPane = _frame.getCurrentDefPane();", "-      if (pos != null) {", "-        int errPos = pos.getOffset();", "-        if (errPos >= 0 && errPos <= defPane.getText().length()) {", "-          defPane.setCaretPosition(errPos);", "-        }", "-      }", "-      defPane.requestFocus();", "-      defPane.getCaret().setVisible(true);", "-    }"]}], "num": 25733}