{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7595b4c75d6cd2dd1291b784dc431321", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18bf5a200b4ac28c82efc8985a898ebd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 210, "signatureBeforeChange": "   public static <S, T> SnapshotIterable<T> mapSnapshot(Iterable<? extends S> source, Lambda<? super S, ? extends T> map)", "signatureAfterChange": "   public static <T, R> SnapshotIterable<R> mapSnapshot(Iterable<? extends T> source,                                                        Lambda<? super T, ? extends R> map)", "diff": ["+  /** Immediately apply a map function to each element in an iterable. */", "+  public static <T, R> SnapshotIterable<R> mapSnapshot(Iterable<? extends T> source,", "+                                                       Lambda<? super T, ? extends R> map) {", "+    return new SnapshotIterable<R>(new MappedIterable<T, R>(source, map));", "-  public static <S, T> SnapshotIterable<T> mapSnapshot(Iterable<? extends S> source, Lambda<? super S, ? extends T> map) {", "-    return new SnapshotIterable<T>(new MappedIterable<S, T>(source, map));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb7aa6ebebe88bcb1881b380feffd0c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 209, "signatureBeforeChange": "   public static <S, T> MappedIterable<S, T> map(Iterable<? extends S> source, Lambda<? super S, ? extends T> map)", "signatureAfterChange": "   public static <T, R> SizedIterable<R> map(Iterable<? extends T> source, Lambda<? super T, ? extends R> map)", "diff": ["-  /** Create a {@code MappedIterable} with the given arguments */", "-  public static <S, T> MappedIterable<S, T> map(Iterable<? extends S> source, Lambda<? super S, ? extends T> map) {", "-    return new MappedIterable<S, T>(source, map);", "+  /** Lazily apply a map function to each element in an iterable. */", "+  public static <T, R> SizedIterable<R> map(Iterable<? extends T> source, Lambda<? super T, ? extends R> map) {", "+    return new MappedIterable<T, R>(source, map);", "+  }"]}], "num": 27971}