{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3ee1ef022cddc86a98d11b46837d8c0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ef8e663f7b44c0db3156ae168bb527f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 400, "methodNumberAfterChange": 400, "signatureBeforeChange": "\r \r   public void forFormalParameter(FormalParameter that)", "signatureAfterChange": "    public void forFormalParameter(FormalParameter that)", "diff": ["-\r", "-  public void forFormalParameter(FormalParameter that) {\r", "-    forFormalParameterDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getDeclarator().visit(this);\r", "-    forFormalParameterOnly(that);\r", "-  }\r", "+", "+  public void forFormalParameter(FormalParameter that) {", "+    forFormalParameterDoFirst(that);", "+    if (prune(that)) return;", "+    that.getDeclarator().visit(this);", "+    forFormalParameterOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ef1ad9064f4df54ddecc7c9c2cd1d78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 375, "methodNumberAfterChange": 375, "signatureBeforeChange": "\r \r   public void forPackageStatement(PackageStatement that)", "signatureAfterChange": "    public void forPackageStatement(PackageStatement that)", "diff": ["-\r", "-  public void forPackageStatement(PackageStatement that) {\r", "-    forPackageStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getCWord().visit(this);\r", "-    forPackageStatementOnly(that);\r", "-  }\r", "+", "+  public void forPackageStatement(PackageStatement that) {", "+    forPackageStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getCWord().visit(this);", "+    forPackageStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5739b0c8cfc3af37d5f9709702f1458", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 393, "methodNumberAfterChange": 393, "signatureBeforeChange": "\r \r   public void forThrowStatement(ThrowStatement that)", "signatureAfterChange": "    public void forThrowStatement(ThrowStatement that)", "diff": ["-\r", "-  public void forThrowStatement(ThrowStatement that) {\r", "-    forThrowStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getThrown().visit(this);\r", "-    forThrowStatementOnly(that);\r", "-  }\r", "+", "+  public void forThrowStatement(ThrowStatement that) {", "+    forThrowStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getThrown().visit(this);", "+    forThrowStatementOnly(that);", "+  }"]}], "num": 8351}