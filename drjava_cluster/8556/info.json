{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2316de4c69bfac37a8df6dc988b00f0f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "920df9f196832463b38aaf240e379ee7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InsertVariableDialog.java", "commitBeforeChange": "fee21edb1b15f1499b5409a250cdb90d3f204739", "commitAfterChange": "e100da4da75b9cbdfc04df45bf52679ed811f23a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   protected void updatePanes()", "signatureAfterChange": "   protected void updatePanes()", "diff": ["+    edu.rice.cs.plt.tuple.Pair<String,DrJavaProperty> sel = getSelected();", "+    String selCategory = null;", "+    if (sel!=null) {", "+      selCategory = _tabbedPane.getTitleAt(_tabbedPane.getSelectedIndex());", "+    }", "-    _tabbedPane.setSelectedIndex(0);", "-    String category = _tabbedPane.getTitleAt(_tabbedPane.getSelectedIndex());", "-    Map<String, DrJavaProperty> properties = PropertyMaps.ONLY.getProperties(category);", "-    _varTable.get(category).getSelectionModel().setSelectionInterval(0,0);", "-    String key = _varTableModel.get(category).getValueAt(_varTable.get(category).getSelectedRow(),0).toString();", "-    DrJavaProperty value = properties.get(key);", "-    _varValueField.setText(value.toString());", "-    _helpPane.setText(value.getHelp());", "-    _selected = new edu.rice.cs.plt.tuple.Pair<String,DrJavaProperty>(key, value);", "+    if (sel!=null) {", "+      if (selCategory==null) { sel = null; } else {", "+        int i;", "+        for (i=0; i<_tabbedPane.getTabCount(); ++i) {", "+          if (_tabbedPane.getTitleAt(i).equals(selCategory)) { _tabbedPane.setSelectedIndex(i); break; }", "+        }", "+        if (i==_tabbedPane.getTabCount()) { sel = null; } else {", "+          Map<String, DrJavaProperty> properties = PropertyMaps.ONLY.getProperties(selCategory);", "+          DefaultTableModel tm = _varTableModel.get(selCategory);", "+          for (i=0; i<tm.getRowCount(); ++i) {", "+            String key = tm.getValueAt(i,0).toString();", "+            if (key.equals(sel.second().getName())) {", "+              _varTable.get(selCategory).getSelectionModel().setSelectionInterval(i,i);", "+              break;", "+            }", "+          }", "+          if (i==tm.getRowCount()) {", "+            // not found, select first", "+            _varTable.get(selCategory).getSelectionModel().setSelectionInterval(0,0);", "+          }", "+          _varValueField.setText(sel.second().toString());", "+          _helpPane.setText(sel.second().getHelp());", "+          _selected = sel;", "+        }", "+      }", "+    }", "+    if (sel==null) {", "+      _tabbedPane.setSelectedIndex(0);", "+      String category = _tabbedPane.getTitleAt(_tabbedPane.getSelectedIndex());", "+      Map<String, DrJavaProperty> properties = PropertyMaps.ONLY.getProperties(category);", "+      _varTable.get(category).getSelectionModel().setSelectionInterval(0,0);", "+      String key = _varTableModel.get(category).getValueAt(_varTable.get(category).getSelectedRow(),0).toString();", "+      DrJavaProperty value = properties.get(key);", "+      _varValueField.setText(value.toString());", "+      _helpPane.setText(value.getHelp());", "+      _selected = new edu.rice.cs.plt.tuple.Pair<String,DrJavaProperty>(key, value);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d41706c153c4efcdcf64563e54e64d84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InsertVariableDialog.java", "commitBeforeChange": "91d926f5e8557085503ecb402ffa610f4022f505", "commitAfterChange": "97f4d18b1b96ab5f6fef892b2420a830c7869018", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private void initComponents()", "signatureAfterChange": "   private void initComponents()", "diff": ["-    _varValueField.setEditable(false);", "-    ", "-    JPanel bottom = new JPanel(new BorderLayout());    ", "-    bottom.add(_varValueField, BorderLayout.CENTER);    ", "-    bottom.add(buttons, BorderLayout.SOUTH);", "+    for (Map.Entry<String, Properties> p: _props.entrySet()) {", "+      _tabbedPane.addTab(p.getKey(), createPane(p.getKey(), p.getValue()));", "+    }", "+    _tabbedPane.addChangeListener(new ChangeListener() {", "+      public void stateChanged(ChangeEvent e) {", "+        String panelName = _props.keySet().toArray(new String[0])[_tabbedPane.getSelectedIndex()];", "+        String key = _varTableModel.get(panelName).getValueAt(_varTable.get(panelName).getSelectedRow(),0).toString();", "+        _varValueField.setText(_props.get(panelName).getProperty(key));", "+        _selected = new edu.rice.cs.plt.tuple.Pair<String,String>(key, _props.get(panelName).getProperty(key));", "+      }", "+    });", "+", "+    JPanel bottom = new JPanel(new BorderLayout());", "+    bottom.add(_varValueField, BorderLayout.CENTER);    ", "+    bottom.add(buttons, BorderLayout.SOUTH);", "+    new JPanel(new BorderLayout());", "-        ", "-    _varTableModel = new DefaultTableModel(0,1) {", "+    ", "+    String panelName = _props.keySet().toArray(new String[0])[0];", "+    String key = _varTableModel.get(panelName).getValueAt(_varTable.get(panelName).getSelectedRow(),0).toString();", "+    _varValueField.setText(_props.get(panelName).getProperty(key));", "+    _selected = new edu.rice.cs.plt.tuple.Pair<String,String>(key, _props.get(panelName).getProperty(key));", "+    ", "+    main.add(_tabbedPane, BorderLayout.CENTER);", "+    ", "+    //The following line enables to use scrolling tabs.", "+    _tabbedPane.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);", "+", "+    // do not allow preview to have focus", "+    _tabbedPane.addFocusListener(new FocusAdapter() {", "+      public void focusLost(FocusEvent e) {", "+        if (e.getOppositeComponent() == _varValueField) {", "+          _tabbedPane.getSelectedComponent().requestFocus();", "+        }", "+      }", "+    });", "+", "+    super.getContentPane().add(main);", "+    super.setResizable(false);", "+    pack();", "+", "+    MainFrame.setPopupLoc(this, _mainFrame);    ", "+  }", "-    };", "-    _varTable = new JTable(_varTableModel);", "-    JScrollPane varTableSP = new JScrollPane(_varTable);", "-    _varTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);", "-    _varTable.putClientProperty(\"JTable.autoStartsEdit\", Boolean.FALSE);", "-    ListSelectionModel lsm = _varTable.getSelectionModel();", "-        String key = _varTableModel.getValueAt(_varTable.getSelectedRow(),0).toString();", "-        _selected = new edu.rice.cs.plt.tuple.Pair<String,String>(key, _props.getProperty(key));", "-        _varValueField.setText(_props.getProperty(key));", "-    _varTable.setSelectionModel(lsm);", "-    // do not allow preview to have focus", "-    _varTable.addFocusListener(new FocusAdapter() {", "-      public void focusLost(FocusEvent e) {", "-        if (e.getOppositeComponent() == _varValueField) {", "-          _varTable.requestFocus();", "-        }", "-      }", "-    });", "-", "-    for(Object o: _props.keySet()) {", "-      _varTableModel.addRow(row);", "-    _varTable.setRowSelectionInterval(0,0);", "-    String key = _varTableModel.getValueAt(_varTable.getSelectedRow(),0).toString();", "-    _varValueField.setText(_props.getProperty(key));", "-    _selected = new edu.rice.cs.plt.tuple.Pair<String,String>(key, _props.getProperty(key));", "-    main.add(varTableSP, BorderLayout.CENTER);", "-    ", "-    super.getContentPane().add(main);", "-    super.setResizable(false);", "-    pack();", "-", "-    MainFrame.setPopupLoc(this, _mainFrame);    "]}], "num": 8556}