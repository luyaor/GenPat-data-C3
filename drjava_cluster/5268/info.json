{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24f1387bcc2f3462001e0ca0cc37727c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "050ab0b699277698b248b849cca4649a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "68d14b52468e7fad6eb9d5f26ee2e88ac93b395f", "commitAfterChange": "eecd5bf659bbe102ef241e14507e30064ca6f329", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public TypeData forInterfaceDef(InterfaceDef that)", "signatureAfterChange": "   public TypeData forInterfaceDef(InterfaceDef that)", "diff": ["-      if (!_file.getAbsolutePath().endsWith(fileName + \".dj0\") && !_file.getAbsolutePath().endsWith(fileName + \".dj1\") && !_file.getAbsolutePath().endsWith(fileName + \".dj2\")) {_addError(interfaceName + \" is public thus must be defined in a file with the same name.\", that.getName());}", "+      if (!_file.getAbsolutePath().endsWith(fileName + \".dj\") &&", "+          !_file.getAbsolutePath().endsWith(fileName + \".dj0\") &&", "+          !_file.getAbsolutePath().endsWith(fileName + \".dj1\") &&", "+          !_file.getAbsolutePath().endsWith(fileName + \".dj2\")) {", "+        _addError(interfaceName + \" is public thus must be defined in a file with the same name.\", that.getName());", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5576633bb4f76413bb033f38cc17751e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "68d14b52468e7fad6eb9d5f26ee2e88ac93b395f", "commitAfterChange": "eecd5bf659bbe102ef241e14507e30064ca6f329", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public TypeData forClassDef(ClassDef that)", "signatureAfterChange": "   public TypeData forClassDef(ClassDef that)", "diff": ["-      if (!_file.getAbsolutePath().endsWith(fileName + \".dj0\") && !_file.getAbsolutePath().endsWith(fileName + \".dj1\") && !_file.getAbsolutePath().endsWith(fileName + \".dj2\")) {_addError(className + \" is public thus must be defined in a file with the same name.\", that.getName());}", "+      if (!_file.getAbsolutePath().endsWith(fileName + \".dj\") && ", "+          !_file.getAbsolutePath().endsWith(fileName + \".dj0\") && ", "+          !_file.getAbsolutePath().endsWith(fileName + \".dj1\") && ", "+          !_file.getAbsolutePath().endsWith(fileName + \".dj2\")) {", "+        _addError(className + \" is public thus must be defined in a file with the same name.\", that.getName());", "+      }"]}], "num": 5268}