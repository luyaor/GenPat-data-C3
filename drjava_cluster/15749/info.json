{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c820a4a869528a3b45850643866d6d64", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52c3a651c88589b4a6761eb1869e0bf0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 322, "signatureBeforeChange": "    final private boolean jj_3R_492()", "signatureAfterChange": "    final private boolean jj_3R_273()", "diff": ["+  final private boolean jj_3R_273() {", "+    if (jj_scan_token(CLASS)) return true;", "+    if (jj_scan_token(IDENTIFIER)) return true;", "+    xsp = jj_scanpos;", "+    if (jj_3R_511()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_512()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_513()) jj_scanpos = xsp;", "+    if (jj_3R_482()) return true;", "-", "-  final private boolean jj_3R_492() {", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_505()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_506()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_507()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_508()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_509()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_510()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_511()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_512()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_513()) {", "-    jj_scanpos = xsp;", "-    if (jj_3R_514()) return true;", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    }", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99dc0ee5dfbcb42ba73854c1f4423f3f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "commitAfterChange": "62776e907e3e6dddd6b4161559ae3b70f27cc2e5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 7, "signatureBeforeChange": "   static void checkForCompilersAndDebugger(String[] args)", "signatureAfterChange": "   static void checkForCompilersAndDebugger(String[] args)", "diff": ["+   */", "+  static void checkForCompilersAndDebugger(String[] args) {", "+    ", "+    boolean needCompiler = ! hasAvailableCompiler();", "+    boolean needDebugger = ! hasAvailableDebugger();", "+", "+    // Try to make sure both compiler and debugger are available", "+    if (needCompiler || needDebugger) promptForToolsJar(needCompiler, needDebugger);", "-   */", "-  static void checkForCompilersAndDebugger(String[] args) {", "-    if (_attemptingAugmentedClassPath) {", "-      // We're on our second attempt-- just load DrJava", "-      return;", "-    }", "-", "-    boolean restartForToolsJar = false;", "-", "-    // Try to make sure both compiler and debugger are available", "-    if (hasAvailableCompiler()) {", "-      if (hasAvailableDebugger()) {", "-        // Everything is already on the classpath; start normally", "-        restartForToolsJar = false;", "-      }", "-      else if (classLoadersCanFindDebugger()) {", "-        // We know where tools.jar is, so restart with it on the classpath", "-        restartForToolsJar = true;", "-      }", "-      else {", "-        // Have a compiler (probably JSR14) but can't find JDI classes...", "-        // Prompt user for debugger (in tools.jar)", "-        restartForToolsJar = promptForToolsJar(false, true);", "-      }", "-    }", "-    else {", "-", "-      if (hasAvailableDebugger()) {", "-        // Debugger but no compiler => probably jpda on classpath.", "-        // Prompt user for compiler (in tools.jar)", "-        promptForToolsJar(true, false);", "-        // don't need to restart for tools.jar", "-      }", "-      else if (classLoadersCanFindDebugger()) {", "-        // Debugger if we restart, but no compiler => jpda in prefs?", "-        // Prompt use for compiler (in tools.jar)", "-//        promptForToolsJar(true, false);", "-        restartForToolsJar = true;", "-      }", "-      else {", "-        // No debugger or compiler", "-        // Prompt user for tools.jar", "-        restartForToolsJar = promptForToolsJar(true, true);", "-      }", "-    }", "-", "-    // Originally this also took in a flag if it was necessary to", "-    // restart to be able to use JSR-14 on OS X.  That is no longer", "-    // necessary, but I'll leave the contract like this for the time", "-    // being (in case another condition comes up).", "-    restartIfNecessary(restartForToolsJar, args);", "-  }"]}], "num": 15749}