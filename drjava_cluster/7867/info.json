{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0d405aad6944586378e44a6d369c8f3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15dca4cf4dd626c6dff375308625397f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 232, "signatureBeforeChange": "       public Boolean value(T arg)", "signatureAfterChange": "     public Boolean value(T arg)", "diff": ["-    return new Predicate<T>() {", "-      public Boolean value(T arg) {", "-        for (Predicate<? super T> p : preds) { if (!p.value(arg)) { return false; } }", "-        return true;", "-      }", "+    public AndPredicate(Iterable<? extends Predicate<? super T>> preds) { _preds = preds; }", "+    public Boolean value(T arg) {", "+      for (Predicate<? super T> p : _preds) { if (!p.value(arg)) { return Boolean.FALSE; } }", "+      return Boolean.TRUE;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac98902bab1838a9b73e285ad0ea880d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 218, "signatureBeforeChange": " public Boolean value(T arg)", "signatureAfterChange": "     public Boolean value(T arg)", "diff": ["-    return new Predicate<T>() { public Boolean value(T arg) { return !pred.value(arg); } };", "+    public NegationPredicate(Predicate<? super T> p) { _p = p; }", "+    public Boolean value(T arg) { return !_p.value(arg); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df2a502c946f9014c06bc0bcd0d890c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 305, "signatureBeforeChange": " public Boolean value(T arg)", "signatureAfterChange": "     public Boolean value(T arg)", "diff": ["-  public static <T> Predicate<T> asPredicate(final Lambda<? super T, ? extends Boolean> lambda) {", "-    return new Predicate<T>() { public Boolean value(T arg) { return lambda.value(arg); } };", "+    public LambdaPredicate(Lambda<? super T, ? extends Boolean> l) { _l = l; }", "+    public Boolean value(T arg) { return _l.value(arg); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb9bc2c11ebc020984311f22825fdacc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 290, "signatureBeforeChange": " public R value(T arg)", "signatureAfterChange": "     public R value(T arg)", "diff": ["-  public static <T, R> Lambda<T, R> asLambda(final Runnable1<? super T> r, final R result) {", "-    return new Lambda<T, R>() { public R value(T arg) { r.run(arg); return result; } };", "+    public RunnableLambda(Runnable1<? super T> r, R result) { _r = r; _result = result; }", "+    public R value(T arg) { _r.run(arg); return _result; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2fed7417e91fd95fa20a7c527b8e4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 252, "signatureBeforeChange": "       public Boolean value(T arg)", "signatureAfterChange": "     public Boolean value(T arg)", "diff": ["-    return new Predicate<T>() {", "-      public Boolean value(T arg) {", "-        for (Predicate<? super T> p : preds) { if (p.value(arg)) { return true; } }", "-        return false;", "-      }", "+    public OrPredicate(Iterable<? extends Predicate<? super T>> preds) { _preds = preds; }", "+    public Boolean value(T arg) {", "+      for (Predicate<? super T> p : _preds) { if (p.value(arg)) { return Boolean.TRUE; } }", "+      return Boolean.FALSE;", "+    }"]}], "num": 7867}