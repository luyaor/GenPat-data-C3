{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f209447fa82500a1acda10670760866d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d4eae76c559bd09fae0be9d0c322487", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "5293cb4cfbc2f45d6061ba4101ad60348aa251ed", "commitAfterChange": "f68f43e5a680bb235f87f6125c6c0de6d15a12f4", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 56, "signatureBeforeChange": "   synchronized void reachedBreakpoint(BreakpointRequest request)", "signatureAfterChange": "   synchronized void reachedBreakpoint(BreakpointRequest request)", "diff": ["-   */", "-  synchronized void reachedBreakpoint(BreakpointRequest request) {", "-//    Utilities.showDebug(\"JPDADebugger.reachedBreakPoint(\" + request + \") called\");", "-    Object property = request.getProperty(\"debugAction\");", "-    if ( (property != null) && (property instanceof JPDABreakpoint) ) {", "-      final JPDABreakpoint breakpoint = (JPDABreakpoint) property;", "-      printMessage(\"Breakpoint hit in class \" + breakpoint.getClassName() + \"  [line \" + breakpoint.getLineNumber() + \"]\");", "-", "-      Utilities.invokeLater(new Runnable() { public void run() { _notifier.breakpointReached(breakpoint); } });", "-    }", "-    else {", "-      // A breakpoint we didn't set??", "-      _log(\"Reached a breakpoint without a debugAction property: \" + request);", "-    }", "-  }", "+   */", "+  synchronized void reachedBreakpoint(BreakpointRequest request) {", "+//    Utilities.showDebug(\"JPDADebugger.reachedBreakPoint(\" + request + \") called\");", "+    Object property = request.getProperty(\"debugAction\");", "+    if ( (property != null) && (property instanceof JPDABreakpoint) ) {", "+      final JPDABreakpoint breakpoint = (JPDABreakpoint) property;", "+      printMessage(\"Breakpoint hit in class \" + breakpoint.getClassName() + \"  [line \" + breakpoint.getLineNumber() + \"]\");", "+", "+      Utilities.invokeLater(new Runnable() { public void run() { _notifier.breakpointReached(breakpoint); } });", "+    }", "+    else {", "+      // A breakpoint we didn't set??", "+      error.log(\"Reached a breakpoint without a debugAction property: \" + request);", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1491ac986c2e5e5b208043fe4c85ba8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "eee347fd3fa2c22c95183dc23b859e14d297bb1b", "commitAfterChange": "a72aa0a4c1f252999ab0a9a3163ec82bfbbfaea2", "methodNumberBeforeChange": 724, "methodNumberAfterChange": 725, "signatureBeforeChange": "     public void javadocStarted()", "signatureAfterChange": "     public void javadocStarted()", "diff": ["-      _disableJUnitActions();", "+      _guiAvailabilityNotifier.javadocStarted(); // JAVADOC and COMPILER"]}], "num": 28561}