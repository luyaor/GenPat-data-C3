{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c5a2c4b9414bc1a1d91303cba2c4d07", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ea54615eacd76ddaeda1f2d0e7906b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/JavaClass.java", "commitBeforeChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "commitAfterChange": "ead43466202abb204c90f7ee2c316fec230d4415", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "          public Object evaluate(Object outer, Iterable<Object> args, RuntimeBindings bindings, Options options)        throws EvaluatorException", "signatureAfterChange": "          public Object evaluate(Object outer, Iterable<Object> args, RuntimeBindings bindings, Options options)        throws EvaluatorException", "diff": ["+      Object[] argsArray = IterUtil.toArray(args, Object.class);", "-        return _k.newInstance(IterUtil.toArray(args, Object.class));", "+        return _k.newInstance(argsArray);", "+      }", "+      catch (Throwable t) {", "+        // Errors, etc., can be thrown and not caught during a class's static initialization", "+        throw new EvaluatorException(t, METHOD_EXTRA_STACK);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8275173673cfafff5ca326c2cb15304", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/JavaClass.java", "commitBeforeChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "commitAfterChange": "ead43466202abb204c90f7ee2c316fec230d4415", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "     public Object evaluate(Object receiver, Iterable<Object> args, RuntimeBindings bindings,                             Options options) throws EvaluatorException", "signatureAfterChange": "     public Object evaluate(Object receiver, Iterable<Object> args, RuntimeBindings bindings,                             Options options) throws EvaluatorException", "diff": ["+      Object[] argsArray = IterUtil.toArray(args, Object.class);", "-        return _m.invoke(receiver, IterUtil.toArray(args, Object.class));", "+        return _m.invoke(receiver, argsArray);", "+      catch (Throwable t) {", "+        // Errors, etc., can be thrown and not caught during a class's static initialization", "+        throw new EvaluatorException(t, METHOD_EXTRA_STACK);", "+      }"]}], "num": 19016}