{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a55b89871615455359917eb254ed689", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d476ba8f46f745183ec65fe3a43cc4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public Class<?> visit(ObjectMethodCall node)", "signatureAfterChange": "   public Type visit(ObjectMethodCall node)", "diff": ["-  public Class<?> visit(ObjectMethodCall node) {", "+  public Type visit(ObjectMethodCall node) {", "-    Class<?>      c   = exp.acceptVisitor(this);", "-    String     mn  = node.getMethodName();", "-", "-    if (!c.isArray() || (c.isArray() && !mn.equals(\"clone\"))) {", "+    Type      c1   = exp.acceptVisitor(this);", "+    Class<?>   c   = (Class<?>)c1;", "+    String    mn   = node.getMethodName();", "+    ", "+    if (!c.isArray() || c.isArray() && !mn.equals(\"clone\")) {", "-      Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;", "+      Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;        ", "-          cargs[i++] = it.next().acceptVisitor(this);", "+          cargs[i++] = (Class<?>)it.next().acceptVisitor(this);", "+        ", "+        ", "-", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f85d1b48b9d40c8ff612879a108a3bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public Type visit(ObjectMethodCall node)", "signatureAfterChange": "   public Class<?> visit(ObjectMethodCall node)", "diff": ["-  public Type visit(ObjectMethodCall node) {", "+  public Class<?> visit(ObjectMethodCall node) {", "-    Type      c1   = exp.acceptVisitor(this);", "-    Class<?>   c   = (Class<?>)c1;", "-    String    mn   = node.getMethodName();", "-    ", "-    if (!c.isArray() || c.isArray() && !mn.equals(\"clone\")) {", "+    Class<?>      c   = exp.acceptVisitor(this);", "+    String     mn  = node.getMethodName();", "+", "+    if (!c.isArray() || (c.isArray() && !mn.equals(\"clone\"))) {", "-      Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;        ", "+      Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;", "-          cargs[i++] = (Class<?>)it.next().acceptVisitor(this);", "+          cargs[i++] = it.next().acceptVisitor(this);", "-        ", "-        ", "-      ", "+"]}], "num": 16619}