{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d33f5e57e8b1f70da6fa4109481deae6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae4c21032661ff29d3e50f8f38d2f814", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4b6c56880670c4bb0f37de6a58c9d30d501c274a", "commitAfterChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 226, "signatureBeforeChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "signatureAfterChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["-          _switchDefScrollPane();", "-          ", "-          boolean isModified = active.isModifiedSinceSave();", "-          boolean canCompile = (!isModified && !active.isUntitled());", "-          _saveAction.setEnabled(isModified || active.isUntitled());", "-          _revertAction.setEnabled(!active.isUntitled());", "-          ", "-          // Update error highlights", "-          _compilerErrorPanel.getErrorListPane().selectNothing();", "-          _junitErrorPanel.getErrorListPane().selectNothing();", "-          _javadocErrorPanel.getErrorListPane().selectNothing();", "-          ", "-          int pos = _currentDefPane.getCaretPosition();", "-          _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "-          _currentDefPane.getJUnitErrorCaretListener().updateHighlight(pos);", "-          _currentDefPane.getJavadocErrorCaretListener().updateHighlight(pos);", "-          ", "-          // Update FileChoosers' directory", "-          _setCurrentDirectory(active);", "-          ", "-          // Update title and position", "-          updateFileTitle();", "-          _currentDefPane.requestFocus();", "-          _posListener.updateLocation();", "-          ", "-          // Check if modified (but only if we're not closing all files)", "-          if (!_model.isClosingAllFiles()) {", "-            try {", "-              active.revertIfModifiedOnDisk();", "-            }", "-            catch (FileMovedException fme) {", "-              _showFileMovedError(fme);", "-            }", "-            catch (IOException e) {", "-              _showIOError(e);", "-            }", "-          }", "-          ", "-          // Change Find/Replace to the new defpane", "-          if (_findReplace.isDisplayed()) {", "-            _findReplace.stopListening();", "-            _findReplace.beginListeningTo(_currentDefPane);", "-            //uninstallFindReplaceDialog(_findReplace);", "-            //installFindReplaceDialog(_findReplace);", "-          }", "+      _switchDefScrollPane();", "+      ", "+      boolean isModified = active.isModifiedSinceSave();", "+      boolean canCompile = (!isModified && !active.isUntitled());", "+      _saveAction.setEnabled(isModified || active.isUntitled());", "+      _revertAction.setEnabled(!active.isUntitled());", "+      ", "+      // Update error highlights          ", "+      int pos = _currentDefPane.getCaretPosition();", "+      _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "+      ", "+      // Update FileChoosers' directory", "+      _setCurrentDirectory(active);", "+      ", "+      // Update title and position", "+      updateFileTitle();", "+      _currentDefPane.requestFocus();", "+      _posListener.updateLocation();", "+      ", "+      // Check if modified (but only if we're not closing all files)", "+      if (!_model.isClosingAllFiles()) {", "+        try {", "+          active.revertIfModifiedOnDisk();", "+        }", "+        catch (FileMovedException fme) {", "+          _showFileMovedError(fme);", "+        }", "+        catch (IOException e) {", "+          _showIOError(e);", "+        }", "+      }", "+      ", "+      // Change Find/Replace to the new defpane", "+      if (_findReplace.isDisplayed()) {", "+        _findReplace.stopListening();", "+        _findReplace.beginListeningTo(_currentDefPane);", "+        //uninstallFindReplaceDialog(_findReplace);", "+        //installFindReplaceDialog(_findReplace);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e57f66a61d11aacfb9906314a5a820ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "0bbc4205cb6cdac938c33646446cffe67a254d86", "commitAfterChange": "32c1a96bda59745efd4d13dbac97b7a11f8d7d24", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   protected void indentLines(int selStart, int selEnd, int reason, ProgressMonitor pm)", "signatureAfterChange": "   protected void indentLines(int selStart, int selEnd, int reason, ProgressMonitor pm)", "diff": ["-      final int key = _doc.getUndoManager().startCompoundEdit();", "+      // final int key = _doc.getUndoManager().startCompoundEdit(); //Commented out in regards to French KeyBoard Fix", "-        _doc.getUndoManager().endCompoundEdit(key);", "+        //_doc.getUndoManager().endCompoundEdit(key); //commented out for french keyboard fix, replaced with endCompoundEdit", "+        endCompoundEdit();", "-        _doc.getUndoManager().endCompoundEdit(key);", "-        _doc.getUndoManager().undo(key);", "+        //        _doc.getUndoManager().endCompoundEdit(key); fixed for french keyboard fix", "+        endCompoundEdit();", "+        _doc.getUndoManager().undo();", "-        _doc.getUndoManager().endCompoundEdit(key);", "+", "+  // _doc.getUndoManager().endCompoundEdit(key); //commented out for french keyboard fix, replaced with endCompoundEdit()", "+        endCompoundEdit();"]}], "num": 19791}