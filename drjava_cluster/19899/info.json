{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfa328458eb271e57fa1f09f2d1aa84e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14730a958004d4dcb8760508d7e3e702", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "d1ffac675273323f7a1b9777462d16896d09a1af", "commitAfterChange": "c0ad820565377d42d023afeab71166682f497054", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testMultilineIndentAfterScroll() throws BadLocationException", "signatureAfterChange": "   public void testMultilineIndentAfterScroll() throws BadLocationException", "diff": ["-    DefinitionsPane pane = _frame.getCurrentDefPane();", "-    OpenDefinitionsDocument doc = pane.getOpenDefDocument();", "-", "+    ", "-", "-    int oldPos;", "-    int newPos = 20;", "-", "-    DrJava.getConfig().setSetting(OptionConstants.INDENT_LEVEL, new Integer(2));", "+    int oldPos;", "+    final int newPos = 20;", "+    ", "+    final DefinitionsPane pane = _frame.getCurrentDefPane();", "+    final OpenDefinitionsDocument doc = pane.getOpenDefDocument();", "+    ", "+    DrJava.getConfig().setSetting(OptionConstants.INDENT_LEVEL, new Integer(2));", "-    pane.endCompoundEdit();", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        pane.setCaretPosition(0);", "+        pane.endCompoundEdit(); } ", "+    });", "+    ", "-", "-    pane.setCaretPosition(0);", "+    ", "-", "-    pane.setCaretPosition(newPos);", "-    doc.getUndoManager().undo();", "-    assertEquals(\"Should have undone.\", text, doc.getText());", "-    assertEquals(\"Undo should have restored caret position.\", oldPos, pane.getCaretPosition());", "+    System.err.println(\"Old position is: \" + oldPos);", "-    pane.setCaretPosition(newPos);", "-    doc.getUndoManager().redo();", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        pane.setCaretPosition(newPos);", "+        System.err.println(\"New position is: \" + pane.getCaretPosition());", "+      }", "+    });", "+    doc.getUndoManager().undo();  ", "+    // Moving this statement inside the invokeAndWait above breaks \"Undo should have restored ...\"  Why?", "+    assertEquals(\"Should have undone.\", text, doc.getText());", "+    Utilities.clearEventQueue();", "+    ", "+    int rePos = pane.getCaretPosition();", "+    System.err.println(\"Restored position is: \" + rePos);", "+    assertEquals(\"Undo should have restored caret position.\", oldPos, rePos);", "+    ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        pane.setCaretPosition(newPos);", "+        doc.getUndoManager().redo();", "+      }", "+    });", "-//    _log.log(\"testMultilineIndentAfterScroll completed\");", "+    _log.log(\"testMultilineIndentAfterScroll completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39248a5f45239a534e196a6b0ff12ef7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void testDancingUIFileOpened() throws IOException", "signatureAfterChange": "   public void testDancingUIFileOpened() throws IOException", "diff": ["+    ", "+    _log.log(\"Starting testingDancingUIFileOpened\");", "+    ", "+    final GlobalModel _model = _frame.getModel();", "+    ", "+", "+     ", "+     _log.log(\"DancingUIFileOpened Set Up\");", "+     ", "+     // set up listeners and signal flags", "+     final SingleDisplayModelFileOpenedListener openListener = new SingleDisplayModelFileOpenedListener();", "+     ", "+     _openDone = false;", "-//     try {", "-       Utilities.invokeLater(new Runnable() { public void run() {", "-         _frame.pack();", "-         _frame.open(new FileOpenSelector() {", "+     Utilities.invokeAndWait(new Runnable() { ", "+      public void run() {", "+//       _frame.setVisible(true);", "+        _frame.pack();", "+        _frame.addComponentListenerToOpenDocumentsList(listener);", "+      }", "+     });", "+     ", "+     _model.addListener(openListener);", "+     ", "+     _log.log(\"opening file\");", "+     ", "+     Utilities.invokeLater(new Runnable() {", "+       public void run() {", "+        _frame.open(new FileOpenSelector() {", "-         _frame.getModel().addListener(compileListener);", "-         _frame.addComponentListenerToOpenDocumentsList(listener);", "-         _compileDone = false;", "+       }", "+     });", "+     ", "+     /* wait until file has been open and active document changed. */", "+     synchronized(_openLock) {", "+       try { while (! _openDone) _openLock.wait(); }", "+       catch(InterruptedException e) { fail(e.toString()); }", "+     }", "+     ", "+     _model.removeListener(openListener);", "+     ", "+     _log.log(\"File opened\");", "+     ", "+     _compileDone = false;", "+     _model.addListener(compileListener);", "+     ", "+     // save and compile the new file asynchronously", "+     ", "+     Utilities.invokeLater(new Runnable() { ", "+       public void run() { ", "+         _log.log(\"saving all files\");", "+         _frame._saveAll();", "+         _log.log(\"invoking compileAll action\");", "-       }});", "-//     }", "-//     catch(InterruptedException e) { fail(e.toString()); }", "+       }", "+     });", "+     _log.log(\"File saved and compiled\");", "-//     _log.log(\"testDancingUIFileOpened completed\");", "+     _log.log(\"testDancingUIFileOpened completed\");"]}], "num": 19899}