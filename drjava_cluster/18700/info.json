{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86376997f1528c884e4e749b8a15b375", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e54cf3a3dbd7df7e47c46af0e4b355", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public Map<String,V> getConstants()", "signatureAfterChange": "   public Map<String,Object> getConstants()", "diff": ["-  /** Creates a map that contains the constants in this context. */", "-  public Map<String,V> getConstants() {", "-    Map<String,V> result = new HashMap<String, V>(11);", "-    for (Link<V> l = scopes; l != null; l = l.next) {", "+   */", "+  public Map<String,Object> getConstants() {", "+    Map<String,Object> result = new HashMap<String,Object>(11);", "+    for (Link l = scopes; l != null; l = l.next) {", "-        try { result.put(s, l.cscope.get(s)); }", "-        catch(NoSuchKeyException e) { /* cannot be reached because s is a key */ }", "+        result.put(s, l.cscope.get(s));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b3d44f825034b493f1d2d022271fc63", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public Map<String,Object> getConstants()", "signatureAfterChange": "   public Map<String,V> getConstants()", "diff": ["-   */", "-  public Map<String,Object> getConstants() {", "-    Map<String,Object> result = new HashMap<String,Object>(11);", "-    for (Link l = scopes; l != null; l = l.next) {", "+  /** Creates a map that contains the constants in this context. */", "+  public Map<String,V> getConstants() {", "+    Map<String,V> result = new HashMap<String, V>(11);", "+    for (Link<V> l = scopes; l != null; l = l.next) {", "-        result.put(s, l.cscope.get(s));", "+        try { result.put(s, l.cscope.get(s)); }", "+        catch(NoSuchKeyException e) { /* cannot be reached because s is a key */ }"]}], "num": 18700}