{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18d6c8b89b27f813a86acd04f8cfe2cc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceae73d74ee84b56784853e19f837d73", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/RecursiveFileListProperty.java", "commitBeforeChange": "7fd25882874ad9a06ac74fda13ef9cc77e52813e", "commitAfterChange": "028b13db63615f9cda7227ddd738bbfc3e1c04ec", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected List<File> getList()", "signatureAfterChange": "   protected List<File> getList()", "diff": ["-    Iterable<File> it = edu.rice.cs.plt.io.IOUtil.listFilesRecursively(new File(start), fFilter, fDirFilter);", "+    File fStart = new File(start);", "+    // if the specified starting point is a directory, allow that directory", "+    if (fStart.isDirectory()) { fDirFilter.addIncludedFile(fStart); }", "+    Iterable<File> it = edu.rice.cs.plt.io.IOUtil.listFilesRecursively(fStart, fFilter, fDirFilter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e889a324df01193465685a2d7aed6a35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "commitAfterChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public synchronized void step(int flag) throws DebugException", "signatureAfterChange": "   public synchronized void step(int flag) throws DebugException", "diff": ["-      if (((StepRequest)steps.get(i)).thread().equals(_thread)) {", "-        //DrJava.consoleOut().println(\"There's already a StepRequest on the current thread\");", "-        //DrJava.consoleOut().println(\"suspendCount: \" + _thread.suspendCount());", "-        return;", "+      StepRequest step = (StepRequest)steps.get(i);", "+      if (step.thread().equals(_thread)) {", "+        if (!_thread.isSuspended())", "+          return;", "+        else {", "+          _eventManager.deleteEventRequest(step);", "+          break;", "+        }", "-    //System.out.println(\"_thread resumed\");"]}], "num": 24452}