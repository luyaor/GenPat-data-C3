{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f350766e8fdd978b0bd2fabc35dce71", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b58a6b81c353a414c743c0375c9bd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testConstructDoclessErrors()", "signatureAfterChange": "   public void testConstructDoclessErrors()", "diff": ["-    { new CompilerError(\"Test error without File\", false),", "+    { new CompilerError(\"Test error without File\",false),", "-      new CompilerError(\"Test error without File\", false) };", "+      new CompilerError(\"Test error without File\",false) };", "+    assertEquals(\"Should have 1 warning\" , 1, model.getNumWarnings());", "+    assertEquals(\"Should have 2 compiler errors\" , 2, model.getNumCompErrors());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a12c6c61f77dfe5896ee08af8a92f8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "5ac038fd2393232341f24ed3abaede1deb4e977a", "commitAfterChange": "a0db040e26a6b2489480a68886f9804fd65f5264", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testVerifyErrorHandledCorrectly() throws Exception", "signatureAfterChange": "   public void testVerifyErrorHandledCorrectly() throws Exception", "diff": ["-    // Run the test: a VerifyError will be thrown.", "+    // Run the test: a VerifyError will be thrown in Java 1.4", "-    listener.assertClassFileErrorCount(1);", "+    double version = Double.valueOf(System.getProperty(\"java.specification.version\"));", "+    if (version < 1.5) listener.assertClassFileErrorCount(1);", "+    else ", "+      assertEquals(\"Should report one error\", 1, _model.getJUnitModel().getJUnitErrorModel().getNumErrors());"]}], "num": 1873}