{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa48c4d4b91da648c04afae473e3e7f3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22aeb04524b71840198eda4e843283c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   private LinkedList<CompilerError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpressionIF>> visitorErrors)", "signatureAfterChange": "   private LinkedList<DJError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpressionIF>> visitorErrors)", "diff": ["-  private LinkedList<CompilerError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpressionIF>> visitorErrors) {", "-    final LinkedList<CompilerError> errors = new LinkedList<CompilerError>();", "+  private LinkedList<DJError> _visitorErrors2CompilerErrors(LinkedList<Pair<String, JExpressionIF>> visitorErrors) {", "+    final LinkedList<DJError> errors = new LinkedList<DJError>();", "-      errors.addLast(new CompilerError(si.getFile(), si.getStartLine()-1, si.getStartColumn()-1, message, false));", "+      errors.addLast(new DJError(si.getFile(), si.getStartLine()-1, si.getStartColumn()-1, message, false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d5289dc1326f1722f8f0a1e6d0b6f86", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private LinkedList<CompilerError> _parseExceptions2CompilerErrors(LinkedList<JExprParseException> pes)", "signatureAfterChange": "   private LinkedList<DJError> _parseExceptions2CompilerErrors(LinkedList<JExprParseException> pes)", "diff": ["-  private LinkedList<CompilerError> _parseExceptions2CompilerErrors(LinkedList<JExprParseException> pes) {", "-    final LinkedList<CompilerError> errors = new LinkedList<CompilerError>();", "+  private LinkedList<DJError> _parseExceptions2CompilerErrors(LinkedList<JExprParseException> pes) {", "+    final LinkedList<DJError> errors = new LinkedList<DJError>();", "-      errors.addLast(new CompilerError(pe.getFile(), pe.currentToken.beginLine-1, pe.currentToken.beginColumn-1, ", "+      errors.addLast(new DJError(pe.getFile(), pe.currentToken.beginLine-1, pe.currentToken.beginColumn-1, "]}], "num": 13308}