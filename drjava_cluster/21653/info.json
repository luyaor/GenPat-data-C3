{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a55336cc4552fc32615391cb9ebca20f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1dda93c67b0f27748b2a76fc0e89e3d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testFindReplaceInAllOpenFiles() throws BadLocationException", "signatureAfterChange": "   public void testFindReplaceInAllOpenFiles() throws BadLocationException", "diff": ["-  public void testFindReplaceInAllOpenFiles() throws BadLocationException {    ", "-    doc.insertString(0, EVIL_TEXT, null); ", "-    docPrev.insertString(0, EVIL_TEXT_PREV, null); ", "-    docNext.insertString(0, EVIL_TEXT_NEXT, null); ", "+  public void testFindReplaceInAllOpenFiles() throws BadLocationException {", "+    _doc.insertString(0, EVIL_TEXT, null);", "+    _docPrev.insertString(0, EVIL_TEXT_PREV, null);", "+    _docNext.insertString(0, EVIL_TEXT_NEXT, null);", "-    frm.setFindWord(\"evil\");", "-    frm.setMatchCase(false);", "-    frm.setSearchBackwards(false);", "-    frm.setSearchAllDocuments(true);", "-    _testFindNextSucceeds(frm, CONTINUE, 12, 12, docNext);", "-    _testFindNextSucceeds(frm, CONTINUE, 12, 29, docNext);", "-    _testFindNextSucceeds(frm, CONTINUE, 12, 48, docNext);", "-    _testFindNextSucceeds(frm, CONTINUE, 12, 12, docPrev);", "-    _testFindNextSucceeds(frm, CONTINUE, 12, 29, docPrev);", "-    _testFindNextSucceeds(frm, CONTINUE, 12, 48, docPrev);", "-    _testFindNextSucceeds(frm, CONTINUE, 12, 12, doc);", "-    _testFindNextSucceeds(frm, CONTINUE, 12, 25, doc);", "-    _testFindNextSucceeds(frm, CONTINUE, 12, 40, doc);", "-    _testFindNextSucceeds(frm, CONTINUE, 12, 12, docNext);", "-    frm.setLastFindWord();", "-    frm.setSearchBackwards(true);", "-    _testFindNextSucceeds(frm, CONTINUE, 36, 36, doc);", "-    _testFindNextSucceeds(frm, CONTINUE, 36, 21, doc);", "-    _testFindNextSucceeds(frm, CONTINUE, 36, 8, doc);", "-    _testFindNextSucceeds(frm, CONTINUE, 44, 44, docPrev);", "-    frm.setReplaceWord(\"monkey\"); ", "-    frm.replaceAll();", "-    assertEquals(\"revised text\", ", "-                 \"Hear no monkey, see no monkey, speak no monkey.\", ", "-                 doc.getText(0, doc.getLength()));", "-    assertEquals(\"revised text\", ", "-                 \"Hear no monkeyprev, see no monkeyprev, speak no monkeyprev.\", ", "-                 docPrev.getText(0, docPrev.getLength()));", "-    assertEquals(\"revised text\", ", "-                 \"Hear no monkeynext, see no monkeynext, speak no monkeynext.\", ", "-                 docNext.getText(0, docNext.getLength()));", "+    _frm.setFindWord(\"evil\");", "+    _frm.setMatchCase(false);", "+    _frm.setSearchBackwards(false);", "+    _frm.setSearchAllDocuments(true);", "+    _testFindNextSucceeds(_frm, CONTINUE, 12, 12, _docNext);", "+    _testFindNextSucceeds(_frm, CONTINUE, 12, 29, _docNext);", "+    _testFindNextSucceeds(_frm, CONTINUE, 12, 48, _docNext);", "+    _testFindNextSucceeds(_frm, CONTINUE, 12, 12, _docPrev);", "+    _testFindNextSucceeds(_frm, CONTINUE, 12, 29, _docPrev);", "+    _testFindNextSucceeds(_frm, CONTINUE, 12, 48, _docPrev);", "+    _testFindNextSucceeds(_frm, CONTINUE, 12, 12, _doc);", "+    _testFindNextSucceeds(_frm, CONTINUE, 12, 25, _doc);", "+    _testFindNextSucceeds(_frm, CONTINUE, 12, 40, _doc);", "+    _testFindNextSucceeds(_frm, CONTINUE, 12, 12, _docNext);", "+    _frm.setLastFindWord();", "+    _frm.setSearchBackwards(true);", "+    _testFindNextSucceeds(_frm, CONTINUE, 36, 36, _doc);", "+    _testFindNextSucceeds(_frm, CONTINUE, 36, 21, _doc);", "+    _testFindNextSucceeds(_frm, CONTINUE, 36, 8, _doc);", "+    _testFindNextSucceeds(_frm, CONTINUE, 44, 44, _docPrev);", "+    _frm.setReplaceWord(\"monkey\");", "+    _frm.replaceAll();", "+    assertEquals(\"revised text\",", "+                 \"Hear no monkey, see no monkey, speak no monkey.\",", "+                 _doc.getText(0, _doc.getLength()));", "+    assertEquals(\"revised text\",", "+                 \"Hear no monkeyprev, see no monkeyprev, speak no monkeyprev.\",", "+                 _docPrev.getText(0, _docPrev.getLength()));", "+    assertEquals(\"revised text\",", "+                 \"Hear no monkeynext, see no monkeynext, speak no monkeynext.\",", "+                 _docNext.getText(0, _docNext.getLength()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2291c12d071f5d4b9e88139f54b0823", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 23, "signatureBeforeChange": "       public void testWholeWordSearchOnTestString1() throws BadLocationException", "signatureAfterChange": "     public void testWholeWordSearchOnTestString1() throws BadLocationException", "diff": ["-    public void testWholeWordSearchOnTestString1() throws BadLocationException {", "-        doc.insertString(0, FIND_WHOLE_WORD_TEST_1, null);", "-        System.err.println(FIND_WHOLE_WORD_TEST_1);", "-        _initFrm(0);", "-        frm.setFindWord(\"bar\");", "-        frm.setMatchWholeWord();", "-        frm.setSearchBackwards(false);", "-        ", "-        _testFindNextSucceeds(frm, CONTINUE, 0, 91);", "-        _testFindNextSucceeds(frm, CONTINUE, 0, 128);", "-        _testFindNextSucceeds(frm, CONTINUE, 0, 166);", "-        frm.setLastFindWord();", "-        frm.setSearchBackwards(true);", "-        _testFindNextSucceeds(frm, CONTINUE, 0, 125);", "-        _testFindNextSucceeds(frm, CONTINUE, 0, 88);", "-        _testFindNextSucceeds(frm, CONTINUE, 0, 163);", "+  public void testWholeWordSearchOnTestString1() throws BadLocationException {", "+    _doc.insertString(0, FIND_WHOLE_WORD_TEST_1, null);", "+//        System.err.println(FIND_WHOLE_WORD_TEST_1);", "+    _initFrm(0);", "+    _frm.setFindWord(\"bar\");", "+    _frm.setMatchWholeWord();", "+    _frm.setSearchBackwards(false);", "-        frm.setFindWord(\"ubl\");", "-        _testFindNextFails(frm, CONTINUE, 0, 163);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 91);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 128);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 166);", "+    _frm.setLastFindWord();", "+    _frm.setSearchBackwards(true);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 125);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 88);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 163);", "-        frm.setSearchBackwards(false);", "-        frm.setFindWord(\"pub\");", "-        _testFindNextFails(frm, CONTINUE, 0, 163);", "+    _frm.setFindWord(\"ubl\");", "+    _testFindNextFails(_frm, CONTINUE, 0, 163);", "-        frm.setSearchBackwards(true);", "-        frm.setFindWord(\"pub\");", "-        _testFindNextFails(frm, CONTINUE, 0, 163);", "-    }", "+    _frm.setSearchBackwards(false);", "+    _frm.setFindWord(\"pub\");", "+    _testFindNextFails(_frm, CONTINUE, 0, 163);", "+", "+    _frm.setSearchBackwards(true);", "+    _frm.setFindWord(\"pub\");", "+    _testFindNextFails(_frm, CONTINUE, 0, 163);", "+  }"]}], "num": 21653}