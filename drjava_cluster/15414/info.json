{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "088e8ccc81ba1b056065a45e19372ce2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9482fe42bf193f1097e0db0adff71ef0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TypeNameChecker.java", "commitBeforeChange": "6b936f625ceea21472b90559f34694154e802e14", "commitAfterChange": "8d43ad99265fb94492eb304c2a9128684a27d753", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void setTypeParameterBounds(TypeParameter[] tparams)", "signatureAfterChange": "   public void checkTypeParameters(TypeParameter[] tparams)", "diff": ["-  public void setTypeParameterBounds(TypeParameter[] tparams) {", "+  /** Tag the given type parameters with a new VariableType, and set the bounds appropriately. */", "+  public void checkTypeParameters(TypeParameter[] tparams) {", "+    for (TypeParameter tparam : tparams) {", "+      setTypeVariable(tparam, new VariableType(new BoundedSymbol(tparam, tparam.getRepresentation())));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b190a82e9a876dea0a1605ab89c98c43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DetachedFrame.java", "commitBeforeChange": "b263b99edc1a8fc9521494e6572b87b01d16accc", "commitAfterChange": "378e279072139013d221fb34f1ba7c9988465f75", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void dispose()", "signatureAfterChange": "      public void dispose()", "diff": ["+      for(Map.Entry<PropertyChangeListener,JMenuItem> e: _listenersToRemoveWhenDisposed.entrySet()) {", "+        e.getValue().removePropertyChangeListener(e.getKey());", "+      }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8e56f9311e4aacd44aa53876a0046bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "6b936f625ceea21472b90559f34694154e802e14", "commitAfterChange": "8d43ad99265fb94492eb304c2a9128684a27d753", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   @Override public TypeContext visit(MethodDeclaration node)", "signatureAfterChange": "   @Override public TypeContext visit(MethodDeclaration node)", "diff": ["+    TypeContext sigContext = new FunctionSignatureContext(context, f);", "+    TypeNameChecker sigChecker = new TypeNameChecker(sigContext, opt);", "+", "-    for (TypeParameter param : tparams) {", "-      setTypeVariable(param, new VariableType(new BoundedSymbol(param, param.getRepresentation())));", "-    }", "-    ", "-    TypeContext sigContext = new FunctionSignatureContext(context, f);", "-    TypeNameChecker sigChecker = new TypeNameChecker(sigContext, opt);", "-    sigChecker.setTypeParameterBounds(tparams);", "+    sigChecker.checkTypeParameters(tparams);"]}], "num": 15414}