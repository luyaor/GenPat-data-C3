{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3b417ec95d3d794a04fa6da1e34a434", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d2e7865176376731b1c2f820d0025e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0edbfd0db2689eae3c61cbc9503a45692b491afc", "commitAfterChange": "3ec3975ac05203b775027960dbbfc339e26bb562", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 159, "signatureBeforeChange": "         private void _saveProjectAs()", "signatureAfterChange": "         private void _saveProjectAs()", "diff": ["-      _saveProjectHelper(file);", "-      try {", "-        if (file.getCanonicalPath().endsWith(\".pjt\")) {", "-          _openProjectHelper(file);", "+      if(!file.exists() || _verifyOverwrite()) {", "+        _saveProjectHelper(file);", "+        try {", "+          if (file.getCanonicalPath().endsWith(\".pjt\")) {", "+            _openProjectHelper(file);", "+          }", "+          else {", "+            _openProjectHelper(new File(file.getCanonicalPath() + \".pjt\"));", "+          }", "-        else {", "-          _openProjectHelper(new File(file.getCanonicalPath() + \".pjt\"));", "+        catch (IOException e) {", "+          throw new UnexpectedException(e);", "-      }", "-      catch (IOException e) {", "-        throw new UnexpectedException(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a93d6c60d4034d191fea03a8e7e44dba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/PathClassLoader.java", "commitBeforeChange": "65f321398af60af439b02583f002515a69ff1dba", "commitAfterChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override protected Class<?> findClass(String name) throws ClassNotFoundException", "signatureAfterChange": "      @Override protected Class<?> findClass(String name) throws ClassNotFoundException", "diff": ["-        byte[] bytes = IOUtil.toByteArray(resource.openStream());", "-        ", "-        // define package", "-        definePackageForClass(name);", "-      ", "-        return defineClass(name, bytes, 0, bytes.length);", "+        InputStream stream = resource.openStream();", "+        try {", "+          byte[] bytes = IOUtil.toByteArray(stream);", "+          Class<?> result = defineClass(name, bytes, 0, bytes.length);", "+          definePackageForClass(name);", "+          return result;", "+        }", "+        finally { stream.close(); }", "-      catch (IOException e) { throw new ClassNotFoundException(); }", "+      catch (IOException e) { throw new ClassNotFoundException(\"Can't access class file\", e); }"]}], "num": 10711}