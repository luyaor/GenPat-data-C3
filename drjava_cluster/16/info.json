{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9fcce2650d14df96083c2751deb46f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a6c00a90a64f56867e77ef24b792c00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "commitAfterChange": "530cb3b64455d081e962324602750973729aa1fb", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+    // Timer to display a message if a debugging step takes a long time", "+    _debugStepTimer = new Timer(DEBUG_STEP_TIMER_VALUE, new ActionListener() {", "+      public void actionPerformed(ActionEvent e) {", "+        _model.printDebugMessage(\"Stepping...\");", "+      }", "+    });", "+    _debugStepTimer.setRepeats(false);", "+", "+    ", "+    _promptBeforeQuit = DrJava.CONFIG.getSetting(QUIT_PROMPT).booleanValue();", "+    DrJava.CONFIG.addOptionListener( OptionConstants.QUIT_PROMPT, new QuitPromptOptionListener());", "-    // Set the configuration frame to null", "+    // Set cached frames and dialogs to null until they are created", "-    ", "+    _aboutDialog = null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec784f87a8b2ff0792231cdf3054d035", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "commitAfterChange": "530cb3b64455d081e962324602750973729aa1fb", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 166, "signatureBeforeChange": "     public void stepRequested()", "signatureAfterChange": "     public void stepRequested()", "diff": ["-      synchronized (_debugStepTimerLock) {", "-        // Wait 2 seconds", "-        _debugStepTimer = new Timer(2000, new ActionListener() {", "-          public void actionPerformed(ActionEvent e) {", "-            _model.printDebugMessage(\"Stepping...\");", "-          }", "-        });", "-        _debugStepTimer.setRepeats(false);", "-        _debugStepTimer.start();", "+      synchronized (_debugStepTimer) {", "+        if (!_debugStepTimer.isRunning()) {", "+          _debugStepTimer.start();", "+        }"]}], "num": 16}