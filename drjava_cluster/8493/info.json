{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "242f934933de24f02d636c383b63104a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "285417fc7aa64351af0f06c07ccbfbb6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "commitAfterChange": "ead43466202abb204c90f7ee2c316fec230d4415", "methodNumberBeforeChange": 331, "methodNumberAfterChange": 344, "signatureBeforeChange": "          private SignatureMatcher makeMatcher(Iterable<? extends VariableType> tparams,                                          Iterable<? extends Type> targs,                                          Iterable<? extends Type> params,                                          Iterable<? extends Expression> args,                                          Type returned, Option<Type> expected)", "signatureAfterChange": "          private SignatureMatcher makeMatcher(Iterable<? extends VariableType> tparams,                                          Iterable<? extends Type> targs,                                          Iterable<? extends Type> params,                                          Iterable<? extends Expression> args,                                          Type returned, Option<Type> expected)", "diff": ["-        else if (IterUtil.isEmpty(targs)) {", "+        else if (IterUtil.isEmpty(targs) || !_useExplicitTypeArgs) {", "-        else if (IterUtil.isEmpty(targs)) {", "+        else if (IterUtil.isEmpty(targs) || !_useExplicitTypeArgs) {", "-        else if (IterUtil.isEmpty(targs)) {", "+        else if (IterUtil.isEmpty(targs) || !_useExplicitTypeArgs) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b2b7e86eb68be9349b2351be53f1d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "c3686d18afe86d8459a6ef71e5f779589d915dd8", "commitAfterChange": "1e5237b2401d25a04c08b7b54162568a6d55c836", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public synchronized int getFirstNonWSCharPos(int pos,char[] whitespace)     throws BadLocationException", "signatureAfterChange": "   public synchronized int getFirstNonWSCharPos     (int pos, char[] whitespace, boolean acceptComments) throws BadLocationException", "diff": ["-  public synchronized int getFirstNonWSCharPos(int pos,char[] whitespace)", "-    throws BadLocationException", "+  public synchronized int getFirstNonWSCharPos", "+    (int pos, char[] whitespace, boolean acceptComments) throws BadLocationException", "-        // Check if non-ws char is in comment", "-        if((_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_LINE_COMMENT)) ||", "-           (_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_BLOCK_COMMENT))) {", "+        // Check if non-ws char is in comment, and we want to ignore them.", "+        if (!acceptComments &&", "+            ((_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_LINE_COMMENT)) ||", "+             (_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_BLOCK_COMMENT))))", "+        {", "-          /*", "-          int tokenSize = _reduced.currentToken().getSize();", "-          int offset = _reduced.getBlockOffset();", "-          //DrJava.consoleOut().println(\"     token len: \" + tokenSize +", "-          //                            \", offset: \" + offset);", "-          //DrJava.consoleOut().println(\"     token before: \" + _reduced.currentToken().getState());", "-          _reduced.move(tokenSize - offset);", "-          i += tokenSize - offset;", "-          //DrJava.consoleOut().println(\"     token after: \" + _reduced.currentToken().getState());", "-          */", "+//          int tokenSize = _reduced.currentToken().getSize();", "+//          int offset = _reduced.getBlockOffset();", "+//          //DrJava.consoleOut().println(\"     token len: \" + tokenSize +", "+//          //                            \", offset: \" + offset);", "+//          //DrJava.consoleOut().println(\"     token before: \" + _reduced.currentToken().getState());", "+//          _reduced.move(tokenSize - offset);", "+//          i += tokenSize - offset;", "+//          //DrJava.consoleOut().println(\"     token after: \" + _reduced.currentToken().getState());", "+", "-          if(_isStartOfComment(text, i - pos)) {", "+          if(!acceptComments && _isStartOfComment(text, i - pos)) {"]}], "num": 8493}