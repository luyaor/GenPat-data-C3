{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ee7642972571ae787eef3752e365ae1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c30b1e7fc1edf66b170a12c534fca0f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "commitAfterChange": "8417ddcfd5dbe91145435687b878857a28a6fc40", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "       private void tester(Pair[] cases)", "signatureAfterChange": "  \tprivate void tester(Pair[] cases)", "diff": ["-", "-    private void tester(Pair[] cases)", "+\tprivate void tester(Pair[] cases)", "-\tfor (int i = 0; i < cases.length; i++)", "-\t    {", "-\t\tObject out = _interpreter.interpret(cases[i].first() + \";\");", "-\t\tassertEquals(cases[i].first() + \" interpretation wrong!\",", "-\t\t\t     cases[i].second(),", "-\t\t\t     out);", "-\t    }", "+\t\t\tfor (int i = 0; i < cases.length; i++)", "+\t\t\t\t{", "+\t\t\t\t\tObject out = _interpreter.interpret(cases[i].first());", "+\t\t\t\t\tassertEquals(cases[i].first() + \" interpretation wrong!\",", "+\t\t\t\t\t\t\t\t\t\t\t cases[i].second(),", "+\t\t\t\t\t\t\t\t\t\t\t out);\t\t\t\t\t", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e2af32555798812fb7b2b8600bd06dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/JavaInterpreterTest.java", "commitBeforeChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "commitAfterChange": "8417ddcfd5dbe91145435687b878857a28a6fc40", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "       private void tester(Pair[] cases)", "signatureAfterChange": "  \tprivate void tester(Pair[] cases)", "diff": ["-", "-    private void tester(Pair[] cases)", "+\tprivate void tester(Pair[] cases)", "-\tfor (int i = 0; i < cases.length; i++)", "-\t    {", "-\t\tObject out = _interpreter.interpret(cases[i].first() + \";\");", "-\t\tassertEquals(cases[i].first() + \" interpretation wrong!\",", "-\t\t\t     cases[i].second(),", "-\t\t\t     out);", "-\t    }", "+\t\t\tfor (int i = 0; i < cases.length; i++)", "+\t\t\t\t{", "+\t\t\t\t\tObject out = _interpreter.interpret(cases[i].first());", "+\t\t\t\t\tassertEquals(cases[i].first() + \" interpretation wrong!\",", "+\t\t\t\t\t\t\t\t\t\t\t cases[i].second(),", "+\t\t\t\t\t\t\t\t\t\t\t out);\t\t\t\t\t", "+\t\t\t\t}"]}], "num": 31282}