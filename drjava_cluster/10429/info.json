{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a224207e6d9bc9327b7805414120f55", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bb8ec7727ba65336f9e59f20c5362fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "12434dc2dab84dfe1024e2e2b39fd8f27da62bbd", "commitAfterChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testInteractionsLiveUpdateClassPath() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsLiveUpdateClassPath() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "diff": ["-    File tempDir = new File(tempPath);", "-    tempDir.renameTo(new File(tempPath + \"a\"));", "+    File tempDir = FileOps.makeFile(tempPath);", "+    tempDir.renameTo(FileOps.makeFile(tempPath + \"a\"));", "-    cp.add(new File(tempPath + \"a\"));", "+    cp.add(FileOps.makeFile(tempPath + \"a\"));", "-    tempDir = new File(tempPath + \"a\");", "-    boolean renamed = tempDir.renameTo(new File(tempPath));", "+    tempDir = FileOps.makeFile(tempPath + \"a\");", "+    boolean renamed = tempDir.renameTo(FileOps.makeFile(tempPath));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be8be712d3f400e314b3e6738b9e2126", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 138, "signatureBeforeChange": "   private File[] _loadProject(ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(ProjectFileIR ir) throws IOException", "diff": ["-  private File[] _loadProject(ProjectFileIR ir) throws IOException {", "+  private void _loadProject(ProjectFileIR ir) throws IOException {", "-    ArrayList<File> projFiles = new ArrayList<File>();", "-    File active = null;", "+    ArrayList<DocFile> projFiles = new ArrayList<DocFile>();", "+    DocFile active = null;", "-      File file = f;", "-      if (f.lastModified() > f.getSavedModDate()) file = new File(f.getPath());", "-      if (f.isActive() && active == null) active = file;", "-      else projFiles.add(file);", "+      if (f.lastModified() > f.getSavedModDate()) f.setSavedModDate(f.lastModified());", "+      if (f.isActive() && active == null) active = f;", "+      else projFiles.add(f);", "-      File file = f;", "-      if (f.lastModified() > f.getSavedModDate()) file = new File(f.getPath());", "-      if (f.isActive() && active == null) active = file;", "-      else projFiles.add(file);", "+      if (f.lastModified() > f.getSavedModDate()) f.setSavedModDate(f.lastModified());", "+      if (f.isActive() && active == null) active = f;", "+      else projFiles.add(f);", "-    final List<OpenDefinitionsDocument> projDocs = getProjectDocuments();  // opened documents in the project source tree ", "+    final List<OpenDefinitionsDocument> projDocs = getProjectDocuments();  // project source files ", "-    // This code may be unnecessary; no files from the previous project (if any) can be open since it was already closed.  ", "-    // But all other files open at time this project is loaded are eligible for inclusion in the new project.  This", "+    // No files from the previous project (if any) can be open since it was already closed.  ", "+    // But all other files open at time this project is loaded are eligible for inclusion in the new project.  ", "-    final File[] filesToOpen = projFiles.toArray(new File[projFiles.size()]);", "+    final DocFile[] filesToOpen = projFiles.toArray(new DocFile[projFiles.size()]);", "-   ", "-    return srcFiles; // Unnecessarily returns src files in keeping with the previous interface."]}], "num": 10429}