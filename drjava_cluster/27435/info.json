{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2e286a93f3f0d71dc3cc99b29e1bc01", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dbb64f91ad217ace5f894d0c1ff6ad0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Class visit(ForStatement node)", "signatureAfterChange": "   public Class visit(ForEachStatement node)", "diff": ["+   */", "+  public Class visit(ForEachStatement node){", "+    /* to be filled in shortly */", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92303c5041681aad58abfd69707bf11c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ArrayCloneMethod.java", "commitBeforeChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "commitAfterChange": "ead43466202abb204c90f7ee2c316fec230d4415", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Object evaluate(Object receiver, Iterable<Object> args, RuntimeBindings bindings,                           Options options) throws EvaluatorException", "signatureAfterChange": "      protected Method implementation() throws NoSuchMethodException", "diff": ["-  public DJMethod declaredSignature() { return this; }", "-  public Object evaluate(Object receiver, Iterable<Object> args, RuntimeBindings bindings, ", "-                         Options options) throws EvaluatorException {", "-    if (receiver == null) {", "-      throw new WrappedException(new EvaluatorException(new NullPointerException()));", "-    }", "-    try {", "-      Method clone = Object.class.getDeclaredMethod(\"clone\");", "-      try { clone.setAccessible(true); /* override protected access */ }", "-      catch (SecurityException e) { debug.log(e); /* ignore -- we can't relax accessibility */ }", "-      return clone.invoke(receiver, IterUtil.toArray(args, Object.class));", "-    }", "-    catch (NoSuchMethodException e) { throw new RuntimeException(e); }", "-    catch (InvocationTargetException e) { throw new EvaluatorException(e.getCause(), EXTRA_STACK); }", "-    catch (IllegalAccessException e) { throw new RuntimeException(e); }", "+  protected Method implementation() throws NoSuchMethodException {", "+    return Object.class.getDeclaredMethod(\"clone\");"]}], "num": 27435}