{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c66de1ff5a103d125d6567a3c22364f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53b4fdf3ee51dacd648c721fa4e1b6cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "978434ebe6c8e1cfcaf0965ea54500f7e3e475c0", "commitAfterChange": "d82c4ab6a249467ad025941135ce9c4a462237a5", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": "   public void openFolder(DirectorySelector openSelector)", "signatureAfterChange": "   public void openFolder(JFileChooser chooser)", "diff": ["-  public void openFolder(DirectorySelector openSelector) {", "+  public void openFolder(JFileChooser chooser) {", "-      File opendir = null;", "+      File openDir = null;", "-        opendir = _model.getActiveDocument().getFile().getParentFile();", "+        openDir = _model.getActiveDocument().getFile().getParentFile();", "+      if (openDir != null && openDir.exists()) {", "+        // We were given a default - use it.", "+        chooser.setCurrentDirectory(openDir);", "+        chooser.setSelectedFile(openDir);", "+      }", "-      File dir = openSelector.getDirectory(opendir);", "+      File [] filesArray = getOpenFiles(chooser);", "+      DrJava.getConfig().setSetting(OptionConstants.OPEN_FOLDER_RECURSIVE, _openRecursiveCheckBox.isSelected());", "+      ", "+      if(filesArray == null || filesArray.length == 0)", "+        return;", "+      ", "+            ", "+      File dir = filesArray[0];", "+      ", "-        files = FileOps.getFilesInDir(dir, openSelector.isRecursive(), new FileFilter(){", "+        files = FileOps.getFilesInDir(dir, _openRecursiveCheckBox.isSelected(), new FileFilter(){", "+        ", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9c96c3459b20e5700fa510fb14a7ad0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "commitAfterChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private void _clearCache()", "signatureAfterChange": "   protected void _clearCache(int offset)", "diff": ["+    * document is modified. */", "+  protected void _clearCache(int offset) {", "+    synchronized(_reduced) {", "+      if (offset < 0) {", "+        _queryCache.clear();", "+        _offsetToQueries.clear();", "+        return;", "+      }", "+      ", "+      Integer[] deadOffsets = _offsetToQueries.tailMap(offset).keySet().toArray(new Integer[0]);", "+      for (int i: deadOffsets) {", "+        for (String query: _offsetToQueries.get(i)) {", "+          _queryCache.remove(query);  // remove query entry from cache", "+        }", "+        _offsetToQueries.remove(i);   // remove query bucket for i from offsetToQueries table", "+      }", "+    }", "-  /** Clears the helper method cache.  Should be called every time the document is modified. */", "-  private void _clearCache() {", "-    _helperCache.clear();", "-    _helperCacheHistory.clear();", "-    _cacheInUse = false;", "-  }"]}], "num": 15647}