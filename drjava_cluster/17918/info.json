{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e92d849041f4dca659061ad78c79db82", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ccb530c18c60bf909ab11e58b31fc4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedLevelTest.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testPackagedOrderMatters()", "signatureAfterChange": "   public void testPackagedOrderMatters()", "diff": ["-   */", "+    */", "-     File newDirectory = new File(directory.getAbsolutePath() + System.getProperty(\"file.separator\") + \"lists-dj2\" + System.getProperty(\"file.separator\") + \"src\" + System.getProperty(\"file.separator\") + \"listFW\");", "-     File[] testFiles = new File[]{new File(newDirectory, \"NEList.dj2\"),", "-                                   new File(newDirectory, \"MTList.dj2\"),", "-                                   new File(newDirectory, \"IList.dj2\")};", "+    _log.log(\"Running testPackagedOrderMatters\");", "+    dir2 = new File(dir1.getAbsolutePath() + System.getProperty(\"file.separator\") + \"lists-dj2\" + ", "+                    System.getProperty(\"file.separator\") + \"src\" + System.getProperty(\"file.separator\") + \"listFW\");", "+    File[] testFiles = ", "+      new File[]{ new File(dir2, \"NEList.dj2\"), new File(dir2, \"MTList.dj2\"), new File(dir2, \"IList.dj2\")};", "+    ", "+    System.err.println(\"testfiles = \" + Arrays.toString(testFiles));", "-          System.out.flush();", "-", "-      LanguageLevelConverter llc = new LanguageLevelConverter();", "-      Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>> result;", "-      result = llc.convert(testFiles, new Options(JavaVersion.JAVA_5, IterUtil.<File>empty()));", "-      ", "-      assertEquals(\"should be no parse exceptions\", new LinkedList<JExprParseException>(), result.getFirst());", "-      ", "-      assertEquals(\"should be no visitor exceptions\", new LinkedList<Pair<String, JExpressionIF>>(), result.getSecond());", "-", "-      //don't worry about checking the .java files for correctness...just make sure there weren't any exceptions", "+    LanguageLevelConverter llc = new LanguageLevelConverter();", "+    Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>> result;", "+    result = llc.convert(testFiles, new Options(JavaVersion.JAVA_5, IterUtil.<File>empty()));", "+    System.err.println(\"ParseExceptions: \" + result.getFirst());", "+    System.err.println(\"VisitorExceptions: \" + result.getSecond());", "+    ", "+    assertEquals(\"should be no parse exceptions\", new LinkedList<JExprParseException>(), result.getFirst());", "+    ", "+    assertEquals(\"should be no visitor exceptions\", new LinkedList<Pair<String, JExpressionIF>>(), result.getSecond());", "+    ", "+    //don't worry about checking the .java files for correctness...just make sure there weren't any exceptions"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6e9a32b4e54689b86d2541bdaaf63cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedLevelTest.java", "commitBeforeChange": "4cc63aff8a22c85ad1d78de9f4e0b9395e7d4e72", "commitAfterChange": "e330f3abbead97d3e3ac8751976bab81936096c2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r   public void testPackagedOrderMatters()", "signatureAfterChange": "   public void testPackagedOrderMatters()", "diff": ["-   */\r", "-  public void testPackagedOrderMatters() {\r", "-     File newDirectory = new File(directory.getAbsolutePath() + System.getProperty(\"file.separator\") + \"lists-dj2\" + System.getProperty(\"file.separator\") + \"src\" + System.getProperty(\"file.separator\") + \"listFW\");\r", "-     File[] testFiles = new File[]{new File(newDirectory, \"NEList.dj2\"),\r", "-                                   new File(newDirectory, \"MTList.dj2\"),\r", "-                                   new File(newDirectory, \"IList.dj2\")};\r", "-\r", "-          System.out.flush();\r", "-\r", "-      LanguageLevelConverter llc = new LanguageLevelConverter(JavaVersion.JAVA_5);\r", "-      Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>> result;\r", "-      result = llc.convert(testFiles);\r", "-      \r", "-      assertEquals(\"should be no parse exceptions\", new LinkedList<JExprParseException>(), result.getFirst());\r", "-      \r", "-      assertEquals(\"should be no visitor exceptions\", new LinkedList<Pair<String, JExpressionIF>>(), result.getSecond());\r", "-\r", "-      //don't worry about checking the .java files for correctness...just make sure there weren't any exceptions\r", "-      }\r", "+   */", "+  public void testPackagedOrderMatters() {", "+     File newDirectory = new File(directory.getAbsolutePath() + System.getProperty(\"file.separator\") + \"lists-dj2\" + System.getProperty(\"file.separator\") + \"src\" + System.getProperty(\"file.separator\") + \"listFW\");", "+     File[] testFiles = new File[]{new File(newDirectory, \"NEList.dj2\"),", "+                                   new File(newDirectory, \"MTList.dj2\"),", "+                                   new File(newDirectory, \"IList.dj2\")};", "+", "+          System.out.flush();", "+", "+      LanguageLevelConverter llc = new LanguageLevelConverter();", "+      Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>> result;", "+      result = llc.convert(testFiles, new Options(JavaVersion.JAVA_5, IterUtil.<File>empty()));", "+      ", "+      assertEquals(\"should be no parse exceptions\", new LinkedList<JExprParseException>(), result.getFirst());", "+      ", "+      assertEquals(\"should be no visitor exceptions\", new LinkedList<Pair<String, JExpressionIF>>(), result.getSecond());", "+", "+      //don't worry about checking the .java files for correctness...just make sure there weren't any exceptions", "+  }"]}], "num": 17918}