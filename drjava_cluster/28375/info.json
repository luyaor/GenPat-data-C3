{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ff5751e9fce41c29361c40d007f633f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cace6328a825134bd20a3478aa811ba8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6bd1f449c6b6476464bf38d05b5455668d0d2ac5", "commitAfterChange": "c6857a248a65e4dc52a9c98c57b551279861859d", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 189, "signatureBeforeChange": "   private void _close()", "signatureAfterChange": "   private void _close()", "diff": ["-//    LinkedList<OpenDefinitionsDocument> l = new LinkedList<OpenDefinitionsDocument>();", "-//    l.add(_model.getActiveDocument());", "-//    _model.closeFiles(l);", "-    ", "+    //    LinkedList<OpenDefinitionsDocument> l = new LinkedList<OpenDefinitionsDocument>();", "+    //    l.add(_model.getActiveDocument());", "+    //    _model.closeFiles(l);", "+    String filename = null;", "-      if(_model.getActiveDocument().isAuxiliaryFile() || ", "-         _model.getActiveDocument().isProjectFile()){", "-        String text = \"Closing this file will permanently remove it from the current project.\" + ", "-          \"\\nAre you sure that you want to close this file?\";", "-        ", "-        int rc = JOptionPane.showConfirmDialog(MainFrame.this,", "-                                             text,", "-                                             \"Close \" + ", "-                                               _model.getActiveDocument().getFile().getName() + ", "-                                               \"?\",", "-                                             JOptionPane.YES_NO_OPTION);", "-        if(rc != JOptionPane.YES_OPTION)", "-          return;", "-      }", "-      ", "-      //Either this is an external file or user actually wants to close it", "-      _model.closeFile(_model.getActiveDocument());", "-        ", "+      filename = _model.getActiveDocument().getFile().getName();", "-      //Not sure what exactly should be done.", "-      //For now, let's just say the error is unexpected.", "-      throw new UnexpectedException(e);", "+      filename = \"File\";", "+    if(_model.getActiveDocument().isAuxiliaryFile() || ", "+       _model.getActiveDocument().isProjectFile()){", "+      String text = \"Closing this file will permanently remove it from the current project.\" + ", "+        \"\\nAre you sure that you want to close this file?\";", "+      ", "+      Object[] options = {\"Yes\", \"No\"};", "+      int rc = JOptionPane.showOptionDialog(MainFrame.this,", "+                                            text,", "+                                            \"Close \" + filename + \"?\",", "+                                            JOptionPane.YES_NO_OPTION,", "+                                            JOptionPane.QUESTION_MESSAGE,", "+                                            null,", "+                                            options,", "+                                            options[1]);", "+      if(rc != JOptionPane.YES_OPTION)", "+        return;", "+    }", "+    ", "+    //Either this is an external file or user actually wants to close it", "+    _model.closeFile(_model.getActiveDocument());", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd4aeecf45e504edd0adb70267c38d2d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5fd3be9fe9ba8de5c8aa1fa3961e1d5624c85202", "commitAfterChange": "688e157c7573e27d29048be4b5c2986e80d14e52", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["-    // start remote control server if no server is running", "-    try {", "-      if (!edu.rice.cs.drjava.RemoteControlClient.isServerRunning()) {", "-        edu.rice.cs.drjava.RemoteControlServer rcServer =", "-          new edu.rice.cs.drjava.RemoteControlServer(this);", "+    if (DrJava.getConfig().getSetting(edu.rice.cs.drjava.config.OptionConstants.REMOTE_CONTROL_ENABLED)) {", "+      // start remote control server if no server is running", "+      try {", "+        if (!RemoteControlClient.isServerRunning()) {", "+          edu.rice.cs.drjava.RemoteControlServer rcServer =", "+            new edu.rice.cs.drjava.RemoteControlServer(this);", "+        }", "-    }", "-    catch(IOException ioe) {", "-      // ignore", "-    }", "+      catch(IOException ioe) {", "+        try {", "+          RemoteControlClient.openFile(null);", "+        }", "+        catch(IOException ignored) {", "+          // ignore", "+        }", "+        if (!System.getProperty(\"user.name\").equals(RemoteControlClient.getServerUser())) {", "+          Object[] options = {\"Disable\",\"Ignore\"};", "+          String msg = \"<html>Could not start DrJava's remote control server\";", "+          if (RemoteControlClient.getServerUser()!=null) {", "+            msg += \"<br>because user \"+RemoteControlClient.getServerUser()+\" is already using the same port\";", "+          }", "+          msg += \".<br>Please select an unused port in the Preferences dialog.<br>\"+", "+            \"In the meantime, do you want to disable the remote control feature?\";", "+          int n = JOptionPane.showOptionDialog(MainFrame.this,", "+                                               msg,", "+                                               \"Could Not Start Remote Control Server\",", "+                                               JOptionPane.YES_NO_OPTION,", "+                                               JOptionPane.QUESTION_MESSAGE,", "+                                               null,", "+                                               options,", "+                                               options[1]);", "+          if (n==JOptionPane.YES_OPTION) {", "+            DrJava.getConfig().setSetting(edu.rice.cs.drjava.config.OptionConstants.REMOTE_CONTROL_ENABLED, false);", "+          }", "+        }", "+      }", "+     }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9c6f315661ef9574c6973d7e350f960", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ea3de3bd50de8d728bdb5d615bd9b8838d2e94b4", "commitAfterChange": "c8bdd45b172c9714aba30b2edf20a9a7463e66ab", "methodNumberBeforeChange": 292, "methodNumberAfterChange": 298, "signatureBeforeChange": "   private void _close()", "signatureAfterChange": "   private void _close()", "diff": ["-    if ((_model.isProjectActive() && _model.getActiveDocument().inProjectPath()) ||", "-        _model.getActiveDocument().isAuxiliaryFile()) {", "-      ", "-      String fileName = null;", "-      OpenDefinitionsDocument doc = _model.getActiveDocument();", "-      try {", "-        if (doc.isUntitled()) fileName = \"File\";", "-        else fileName = _model.getActiveDocument().getFile().getName();", "+    // this works with multiple selected files now", "+    java.util.List<OpenDefinitionsDocument> l = _model.getDocumentNavigator().getSelectedDocuments();", "+    boolean queryNecessary = false; // is a query necessary because the files are project or auxiliary files?", "+    for (OpenDefinitionsDocument doc: l) {", "+      if ((_model.isProjectActive() && doc.inProjectPath()) || doc.isAuxiliaryFile()) {", "+        queryNecessary = true;", "+        break;", "-      catch(FileMovedException e) { fileName = e.getFile().getName(); }", "-      String text = \"Closing this file will permanently remove it from the current project.\" + ", "-        \"\\nAre you sure that you want to close this file?\";", "-      ", "+    }", "+    if (queryNecessary) {", "+      int rc;", "+      String fileName = null;", "-      int rc = ", "-        JOptionPane.showOptionDialog(MainFrame.this, text,\"Close \" + fileName + \"?\", JOptionPane.YES_NO_OPTION,", "-                                     JOptionPane.QUESTION_MESSAGE, null, options, options[1]);", "+      if (l.size()==1) {", "+        OpenDefinitionsDocument doc = l.get(0);", "+        try {", "+          if (doc.isUntitled()) fileName = \"File\";", "+          else fileName = _model.getActiveDocument().getFile().getName();", "+        }", "+        catch(FileMovedException e) { fileName = e.getFile().getName(); }", "+        String text = \"Closing this file will permanently remove it from the current project.\" + ", "+          \"\\nAre you sure that you want to close this file?\";", "+        ", "+        rc = JOptionPane.showOptionDialog(MainFrame.this, text,\"Close \" + fileName + \"?\", JOptionPane.YES_NO_OPTION,", "+                                          JOptionPane.QUESTION_MESSAGE, null, options, options[1]);", "+      }", "+      else {", "+        fileName = l.size()+\" files\";", "+        String text = \"Closing these \"+fileName+\" will permanently remove them from the current project.\" + ", "+          \"\\nAre you sure that you want to close these files?\";", "+        ", "+        rc = JOptionPane.showOptionDialog(MainFrame.this, text, \"Close \"+l.size()+\" files?\", JOptionPane.YES_NO_OPTION,", "+                                          JOptionPane.QUESTION_MESSAGE, null, options, options[1]);", "+      }", "-    //Either this is an external file or user actually wants to close it", "-    _model.closeFile(_model.getActiveDocument());", "+    // Either this is an external file or user actually wants to close it", "+    for(OpenDefinitionsDocument doc: l) {", "+      _model.closeFile(doc);", "+    }"]}], "num": 28375}