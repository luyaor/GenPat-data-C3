{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9d460dc1d214cca24e39114fe15a5ce", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c373ce6b31530178cf2143c42645dcd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 60, "signatureBeforeChange": "   synchronized void currThreadSuspended()", "signatureAfterChange": "   synchronized void currThreadSuspended()", "diff": ["-//     try {", "-//       /** ", "-//        * copy the variables in scope into an interpreter", "-//        * and switch the current interpreter to that interpreter", "-//        */", "-//        dumpVariablesIntoInterpreterAndSwitch();", "-//     }", "-//     catch(DebugException ex){", "-//       throw new UnexpectedException(ex);", "-//     }", "-    ", "+    // Also uncomment line 334, and the lines in currThreadResumed to make the new functionality work", "+    try{", "+      /** ", "+       * copy the variables in scope into an interpreter", "+       * and switch the current interpreter to that interpreter", "+       */", "+      dumpVariablesIntoInterpreterAndSwitch();", "+    }", "+    catch(DebugException ex){", "+      throw new UnexpectedException(ex);", "+    }    ", "+    _switchToSuspendedThread();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69ab555d72f3a8616672c737f2966091", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "c46b51159c995a9970485b3c515f743b3910e9fc", "commitAfterChange": "20a2512e394be5865ddd8dc1ebd648c5dfb08d0c", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 58, "signatureBeforeChange": "   public void compileAll() throws IOException", "signatureAfterChange": "   public void compileAll() throws IOException", "diff": ["-        _notifier.notifyListeners(new EventNotifier.Notifier() {", "-          public void notifyListener(GlobalModelListener l) {", "-            l.compileStarted();", "-          }", "-        });", "+        _notifier.compileStarted();", "-          _notifier.notifyListeners(new EventNotifier.Notifier() {", "-            public void notifyListener(GlobalModelListener l) {", "-              l.compileEnded();", "-            }", "-          });", "+          _notifier.compileEnded();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7785f6dd2a8b568576ac43799ed553f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "f1cdd8ab40ec812de32945f859fe4268e830f213", "commitAfterChange": "03b2d2796342d42693cf58d323df575cbd1df053", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testInterpretCurrentInteraction() throws DocumentAdapterException", "signatureAfterChange": "   public void testInterpretCurrentInteraction() throws DocumentAdapterException", "diff": ["-    TestInteractionsModel model = new TestInteractionsModel(_adapter) {", "-      protected void _interpret(String toEval) {", "-        this.toEval = toEval;", "-      }", "-    };", "-    InteractionsDocument doc = model.getDocument();", "-    model.interpretCurrentInteraction();", "+    InteractionsDocument doc = _model.getDocument();", "+    _model.interpretCurrentInteraction();", "-    model.replReturnedVoid();", "-    assertEquals(\"string being interpreted\", \"\", model.toEval);", "+    _model.replReturnedVoid();", "+    assertEquals(\"string being interpreted\", \"\", _model.toEval);", "-    model.interpretCurrentInteraction();", "+    _model.interpretCurrentInteraction();", "-    model.replReturnedVoid();", "-    assertEquals(\"string being interpreted\", code, model.toEval);", "+    _model.replReturnedVoid();", "+    assertEquals(\"string being interpreted\", code, _model.toEval);"]}], "num": 26477}