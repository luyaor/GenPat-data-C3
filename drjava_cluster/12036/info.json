{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f454f00f7fc454679702a137fa02da12", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "543e47b4bb397ae6b33c9e75755416b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionLineContainsTest.java", "commitBeforeChange": "5d2701667cf27d44a069ea945e7b8afcad461e22", "commitAfterChange": "0dc9a35e122071847260a9f3f7c5a7bac3c46105", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testLineDoesNotContainColonDueToComments() throws BadLocationException", "signatureAfterChange": "   public void testLineDoesNotContainColonDueToComments() throws BadLocationException", "diff": ["-        !rule.applyRule(_doc, Indenter.OTHER));", "+        !rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "-        !rule.applyRule(_doc, Indenter.OTHER));", "+        !rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "-    assertTrue(\"no colon, colon in multi-line comment\", !rule.applyRule(_doc, Indenter.OTHER));", "+    assertTrue(\"no colon, colon in multi-line comment\", !rule.applyRule(_doc, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62723415880b71eeee348a71c64d41ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionExistsCharInStmtTest.java", "commitBeforeChange": "5d2701667cf27d44a069ea945e7b8afcad461e22", "commitAfterChange": "0dc9a35e122071847260a9f3f7c5a7bac3c46105", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testColonNotInTernaryOpDueToQuestionMarkInCommentsOrQuotes() throws BadLocationException", "signatureAfterChange": "   public void testColonNotInTernaryOpDueToQuestionMarkInCommentsOrQuotes() throws BadLocationException", "diff": ["-        !rule.applyRule(_doc, Indenter.OTHER));", "+        !rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "-        !rule.applyRule(_doc, Indenter.OTHER));", "+        !rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "-        !rule.applyRule(_doc, Indenter.OTHER));", "+        !rule.applyRule(_doc, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c958487405676df0ba29dd749e6de4c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionLineContainsTest.java", "commitBeforeChange": "5d2701667cf27d44a069ea945e7b8afcad461e22", "commitAfterChange": "0dc9a35e122071847260a9f3f7c5a7bac3c46105", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testLineContainsColon() throws BadLocationException", "signatureAfterChange": "   public void testLineContainsColon() throws BadLocationException", "diff": ["-        rule.applyRule(_doc, Indenter.OTHER));", "+        rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "-        rule.applyRule(_doc, Indenter.OTHER));", "+        rule.applyRule(_doc, Indenter.IndentReason.OTHER));", "-        rule.applyRule(_doc, Indenter.OTHER));", "+        rule.applyRule(_doc, Indenter.IndentReason.OTHER));"]}], "num": 12036}