{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca8ffe68453199fb6e1c25eae7b84c83", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ce243064e27d2c4be406664ba9532a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "591f8aac4f79eab75475a3d9dd862c3b019f02a1", "commitAfterChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testInsertBraceInsideGap()", "signatureAfterChange": "   public void testInsertBraceInsideGap()", "diff": ["+    assertFalse(model1._rmb.openBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.closedBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.openBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.closedBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.openBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.closedBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.openBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.closedBraceImmediatelyLeft());", "+    assertTrue(model1._rmb.openBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.closedBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.openBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.closedBraceImmediatelyLeft());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e005a40fb7097d1a2511d61129b78555", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "591f8aac4f79eab75475a3d9dd862c3b019f02a1", "commitAfterChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testInsertBraceAtStartAndEnd()", "signatureAfterChange": "   public void testInsertBraceAtStartAndEnd()", "diff": ["+    assertFalse(model1._rmb.openBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.closedBraceImmediatelyLeft());", "+    assertTrue(model1._rmb.openBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.closedBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.openBraceImmediatelyLeft());", "+    assertFalse(model1._rmb.closedBraceImmediatelyLeft());", "+    assertFalse(model2._rmb.openBraceImmediatelyLeft());", "+    assertFalse(model2._rmb.closedBraceImmediatelyLeft());", "+    assertTrue(model2._rmb.closedBraceImmediatelyLeft());", "+    assertFalse(model2._rmb.openBraceImmediatelyLeft());", "+    assertFalse(model2._rmb.openBraceImmediatelyLeft());", "+    assertFalse(model2._rmb.closedBraceImmediatelyLeft());"]}], "num": 25051}