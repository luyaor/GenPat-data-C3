{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52cc16bf8d2955dffcb8b431d3288738", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ad1199d8ba0513ccb54d8c9345c86d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 56, "signatureBeforeChange": "     public void removeFromDebugger()", "signatureAfterChange": "     public void removeFromDebugger()", "diff": ["-      if (_debugger.isAvailable() && (_debugger.isReady())) {", "-        try {", "-          while (_breakpoints.size() > 0) {", "-            _debugger.removeBreakpoint(_breakpoints.get(0));", "-          }", "-        }", "-        catch (DebugException de) {", "-          // Shouldn't happen if debugger is active", "-          throw new UnexpectedException(de);", "-        }", "+      while (getBreakpointManager().getRegions().size() > 0) {", "+        Breakpoint bp = getBreakpointManager().getRegions().get(0);", "+        getBreakpointManager().removeRegion(bp);", "-      else clearBreakpoints();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8643fb6e974fe0fc6fa495218cabe61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOpsTest.java", "commitBeforeChange": "e16fd9dc1aa815e303a7aa80be407f3a031e237d", "commitAfterChange": "97f3497fff8964fcbfb5676986b962bdda4668d8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testMakeRelativeTo() throws IOException, SecurityException", "signatureAfterChange": "      public void testMakeRelativeTo() throws IOException, SecurityException", "diff": ["-                 fixPathFormat(FileOps.makeRelativeTo(abs,base).getPath()));", "+                 fixPathFormat(FileOps.stringMakeRelativeTo(abs,base)));", "-                 fixPathFormat(FileOps.makeRelativeTo(abs,base).getPath()));", "+                 fixPathFormat(FileOps.stringMakeRelativeTo(abs,base)));", "-                 fixPathFormat(FileOps.makeRelativeTo(abs,base).getPath()));", "+                 fixPathFormat(FileOps.stringMakeRelativeTo(abs,base)));", "-                 fixPathFormat(FileOps.makeRelativeTo(abs,base).getPath()));", "+                 fixPathFormat(FileOps.stringMakeRelativeTo(abs,base)));"]}], "num": 2988}