{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "811b4666050db3cdba61f5018c7357e1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33739bb7befbffeb2e360bdf100417cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "43b808b9e05f3378c0faae83fe4225562adc4c6e", "commitAfterChange": "723910d837b2fcdd9f4127559df4832f71fb62e8", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "     public void runMain()       throws ClassNameNotFoundException, IOException", "signatureAfterChange": "     public void runMain()       throws ClassNameNotFoundException, IOException", "diff": ["-        this.startCompile();", "+        // compile only if class file out of sync", "+        if (!checkIfClassFileInSync()) {", "+          startCompile();", "+        }", "-          ", "-          // Then clear the current interaction and replace it with a \"java X\" line.", "-          InteractionsDocument iDoc = _interactionsModel.getDocument();", "+        }", "+        // Then clear the current interaction and replace it with a \"java X\" line.", "+        InteractionsDocument iDoc = _interactionsModel.getDocument();", "+//        if (iDoc.inProgress()) {", "+//          addListener(_notifyListener);", "+//          _shouldRun = true;", "+//          synchronized(_notifyListener) {", "+//            try {", "+//              _notifyListener.wait();", "+//            }", "+//            catch(InterruptedException ie) {", "+//            }", "+//          }", "+//          removeListener(_notifyListener);", "+//          if (!_shouldRun) {", "+//            // The interactions pane was reset during another interaction.", "+//            //  Don't run the main method.", "+//            return;", "+//          }", "+//        }", "+        synchronized (_interpreterControl) {", "-          ", "+        ", "-          ", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94865935b0f191e4cc7285e4493b6a40", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e9a3c458e98ae55999f3ec08806738a9c9f668dc", "commitAfterChange": "a73e93a8edce9508179438ae19a8b11327258b2d", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": "     protected DDReconstructor makeReconstructor()", "signatureAfterChange": "     protected DDReconstructor makeReconstructor()", "diff": ["+", "+        private List<FinalizationListener<DefinitionsDocument>> _finalListeners =", "+          new LinkedList<FinalizationListener<DefinitionsDocument>>();", "-            tempDoc.setCurrentLocation(_loc);", "-            for(DocumentListener d : _list) {", "-              if (d instanceof DocumentUIListener) {", "-                tempDoc.addDocumentListener(d);", "-              }", "+          tempDoc.setCurrentLocation(_loc);", "+          for(DocumentListener d : _list) {", "+            if (d instanceof DocumentUIListener) {", "+              tempDoc.addDocumentListener(d);", "-            for(UndoableEditListener l: _undoListeners){", "-              tempDoc.addUndoableEditListener(l);", "-            }", "-            tempDoc.resetModification();", "-//            tempDoc.setUndoManager(_undo);", "+          }", "+          for(UndoableEditListener l: _undoListeners){", "+            tempDoc.addUndoableEditListener(l);", "+          }", "+          for(FinalizationListener<DefinitionsDocument> l: _finalListeners){", "+            tempDoc.addFinalizationListener(l);", "+          }", "+          tempDoc.resetModification();", "+          //            tempDoc.setUndoManager(_undo);", "+          _finalListeners = doc.getFinalizationListeners();"]}], "num": 15931}