{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59a946771fa54330e9c0d29bf1ad2ecc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ea923dce2a029267470ec0cfbafe02d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-windows/edu/rice/cs/drjava/platform/WindowsRegistry.java", "commitBeforeChange": "d6d5a09297d2787acc270fa60f0b9a354c352952", "commitAfterChange": "5c41d00536e620ff23bdba786a39108982cdff08", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public static byte[] stringToNullTerminated(String str)", "signatureAfterChange": "   public static byte[] stringToNullTerminated(String str)", "diff": ["-  /** @return this Java string as a null-terminated byte array */", "+  /** @return this Java string as a null-terminated byte array in the default Charset */", "-    byte[] result = new byte[str.length() + 1];", "-    for (int i = 0; i<str.length(); i++) {", "-      result[i] = (byte) str.charAt(i);", "-    }", "-    result[str.length()] = 0;", "-    return result;", "+    return stringToNullTerminated(str, java.nio.charset.Charset.defaultCharset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2deb04cc0afdff065096b84924b7c4d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Void forConstructorDef(ConstructorDef that)", "signatureAfterChange": "   public Void forConstructorDef(ConstructorDef that)", "diff": ["-    if (_isIntermediateFile()) { //if this is an Intermediate level file, want to check and see if the constructor has", "-    //   modifiers.  If not, make it public by default", "-      String[] modifiers = that.getMav().getModifiers();", "-      boolean hasVisibilityModifier = false;", "-      for (int i = 0; i<modifiers.length; i++) {", "-        if ((modifiers[i].equals(\"private\")) || (modifiers[i].equals(\"public\")) || (modifiers[i].equals(\"protected\"))) {", "-          hasVisibilityModifier = true;", "-          break;", "-        }", "-      }", "-      ", "-      if (! hasVisibilityModifier) _writeToFileOut(\"public \");", "-    }", "+    // Check and see if the constructor has modifiers.  If not, make it public by default", "+    String[] modifiers = that.getMav().getModifiers();", "+    if (! Utilities.hasVisibilityModifier(modifiers)) _writeToFileOut(\"public \");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e8382eb3a8281896cf0ec5d9d4b7756", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/InputStreamRedirector.java", "commitBeforeChange": "9390586c4a81d420b2ce238c494fbf61cf010b84", "commitAfterChange": "d187ef0ae751d72da55c4bc4f82be93731c1e46f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public int read() throws IOException", "signatureAfterChange": "   public int read() throws IOException", "diff": ["-    if(available() == 0) {", "-      String input = _getInput();", "-      for(int i = 0; i < input.length(); i++) {", "-        _os.write((int) input.charAt(i));", "-      }", "+    if (available() == 0) {", "+      _readInputIntoBuffer();", "-    return super.read();", "+    return (int) ((Character) _buffer.remove(0)).charValue();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "395d4a0040cbe7958c323304d01fd7d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/VariableData.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void setFinal()", "signatureAfterChange": "   public void setFinal()", "diff": ["-    if (!isFinal()) {", "-      String[] modifiers = _modifiersAndVisibility.getModifiers();", "-      String[] newModifiers = new String[modifiers.length + 1];", "-      newModifiers[0] = \"final\";", "-      for (int i = 1; i <= modifiers.length; i++) {", "-        newModifiers[i] = modifiers[i-1];", "-      }", "-      _modifiersAndVisibility = new ModifiersAndVisibility(SourceInfo.NO_INFO, newModifiers);", "-    }", "+    String[] newModifiers = Utilities.catenate(_modifiersAndVisibility.getModifiers(), new String[]{\"final\"});", "+//    System.err.println(\"modifiers with 'final' = \" + Arrays.toString(newModifiers));", "+    _modifiersAndVisibility = new ModifiersAndVisibility(SourceInfo.NO_INFO, newModifiers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3901e2c55b136d8976bb3a047fe857b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e74335063a2dc1cb98926543c84ea2e27a36e2a9", "commitAfterChange": "3bb036ab3161534d45eab93583296ad61d1878a0", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 106, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "diff": ["-    Vector<File> currentclasspaths = DrJava.getConfig().getSetting(OptionConstants.EXTRA_CLASSPATH);", "-    for(int i = 0; i<projectclasspaths.length; i++){", "-      currentclasspaths.remove(projectclasspaths[i].getAbsoluteFile());", "-      currentclasspaths.add(projectclasspaths[i].getAbsoluteFile());", "+    ClasspathVector extraClasspaths = new ClasspathVector();", "+    for(File f : projectclasspaths) {", "+      extraClasspaths.add(f);", "-    DrJava.getConfig().setSetting(OptionConstants.EXTRA_CLASSPATH, currentclasspaths);", "+    setProjectExtraClasspath(extraClasspaths);", "+    ", "+//    Vector<File> currentclasspaths = DrJava.getConfig().getSetting(OptionConstants.EXTRA_CLASSPATH);", "+//    for(int i = 0; i<projectclasspaths.length; i++){", "+//      currentclasspaths.remove(projectclasspaths[i].getAbsoluteFile());", "+//      currentclasspaths.add(projectclasspaths[i].getAbsoluteFile());", "+//    }", "+//    DrJava.getConfig().setSetting(OptionConstants.EXTRA_CLASSPATH, currentclasspaths);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1bada159dd2047401a6b47497e13ec5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public Void forMethodDef(MethodDef that)", "signatureAfterChange": "   public Void forMethodDef(MethodDef that)", "diff": ["-    ", "-    if (_isElementaryFile()) _writeToFileOut(\"public \");", "-    ", "-    if (_isIntermediateFile()) { ", "-      /* Check if the method has explicit modifiers.  Unfortunately, the information in that.getMav().getModifiers() ", "-       * is not reliable regarding what modifiers EXPLICITLY appear in a .dj1 file, so we have to do additional work. */", "-      String[] modifiers = that.getMav().getModifiers();", "-      String visibilityModifier = null;", "-      for (int i = 0; i < modifiers.length; i++) {", "-        if (modifiers[i].equals(\"private\") || modifiers[i].equals(\"public\") || modifiers[i].equals(\"protected\")) {", "-          visibilityModifier = modifiers[i];", "-          break;", "-        }", "-      }", "-      ", "-      if (visibilityModifier == null) {", "-        _writeToFileOut(\"public \");", "-      }", "-        ", "-    }", "+    if (! Utilities.hasVisibilityModifier(that.getMav().getModifiers())) _writeToFileOut(\"public \");"]}], "num": 10147}