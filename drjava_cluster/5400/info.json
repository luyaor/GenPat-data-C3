{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2998232941b44e80c413973c3b94589", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "174db654a8c4ddf194e16ab4d74438eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/LogTest.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r   @SuppressWarnings(\"deprecation\")\r   private static Date parse(String s)", "signatureAfterChange": "   @SuppressWarnings(\"deprecation\")   private static Date parse(String s)", "diff": ["-  /** Parses a date printed by Date.toString(); returns null if there is a parse error. */\r", "-  @SuppressWarnings(\"deprecation\")\r", "-  private static Date parse(String s) {\r", "-    try { return new Date(Date.parse(s.substring(0, DATE_END)));  }  // the undeprecated version of parse DOES NOT WORK\r", "-    catch(RuntimeException e) { return null; }  // either IllegalArgument or StringIndexOutOfBounds\r", "-  }\r", "+  /** Parses a date printed by Date.toString(); returns null if there is a parse error. */", "+  @SuppressWarnings(\"deprecation\")", "+  private static Date parse(String s) {", "+    try { return new Date(Date.parse(datePrefix(s)));  }  // the undeprecated version of parse DOES NOT WORK", "+    catch(RuntimeException e) { return null; }  // either IllegalArgument or StringIndexOutOfBounds", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2517b640e9003df7709ed928d9e40689", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/LogTest.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   @SuppressWarnings(\"deprecation\")   private static Date parse(String s)", "signatureAfterChange": "   private static Date parse(String s)", "diff": ["-  /** Parses a date printed by Date.toString(); returns null if there is a parse error. */", "-  @SuppressWarnings(\"deprecation\")", "+  /** Parses a date printed by Date.toString(); returns null if there is a parse error or if there is no date. */", "-    try { return new Date(Date.parse(datePrefix(s)));  }  // the undeprecated version of parse DOES NOT WORK", "-    catch(RuntimeException e) { return null; }  // either IllegalArgument or StringIndexOutOfBounds", "+    int pos = s.indexOf(\"GMT: \");", "+    if (pos==-1) { return null; }", "+    try {", "+      return Log.DATE_FORMAT.parse(s.substring(0,pos+3));", "+    }", "+    catch(ParseException pe) { return null; }"]}], "num": 5400}