{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31f4baa9bc16c53843fdd0326ae6545c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d42c9b34419a5f8feb5547a6991f100c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "25d973a9f45bdba84ad4514eba518ee94f041daf", "commitAfterChange": "fa5a46f3cc65ec85b9fa37599dc6542e75cee25e", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "   protected void indentLines(int selStart, int selEnd, int reason, ProgressMonitor pm)", "signatureAfterChange": "   protected void indentLines(int selStart, int selEnd, int reason, ProgressMonitor pm, int loc)", "diff": ["-  protected void indentLines(int selStart, int selEnd, int reason, ProgressMonitor pm) {", "+  protected void indentLines(int selStart, int selEnd, int reason, ProgressMonitor pm, int loc) {", "-      // final int key = _doc.getUndoManager().startCompoundEdit(); //Commented out in regards to French KeyBoard Fix", "-      try {", "-        _doc.indentLines(selStart, selEnd, reason, pm);", "-        //      _indentLines(reason, pm);", "-        //_doc.getUndoManager().endCompoundEdit(key); //commented out for french keyboard fix, replaced with endCompoundEdit", "-        endCompoundEdit();", "-      }", "-      catch (OperationCanceledException oce) {", "-        // if canceled, undo the indent; but first, end compound edit", "-        //        _doc.getUndoManager().endCompoundEdit(key); fixed for french keyboard fix", "-        endCompoundEdit();", "-        _doc.getUndoManager().undo();", "-        // pm = null, so cancel can't be pressed", "-        throw new UnexpectedException(oce);", "-      }", "-      catch (RuntimeException e) {", "-        //catches the exception to turn off the the hourglass", "-        //and close the compound edit before throwing out to", "-        //the main frame.", "-        //_mainFrame.hourglassOff();", "-        //pm.close();", "-", "-  // _doc.getUndoManager().endCompoundEdit(key); //commented out for french keyboard fix, replaced with endCompoundEdit()", "-        endCompoundEdit();", "-        throw e;", "-      }", "-", "-      //_doc.setCurrentLocation(caretPos);", "-      setCaretPosition(_doc.getCurrentLocation());", "+    // final int key = _doc.getUndoManager().startCompoundEdit(); //Commented out in regards to French KeyBoard Fix", "+    try {", "+      _doc.indentLines(selStart, selEnd, reason, pm, loc);", "+      //      _indentLines(reason, pm);", "+      //_doc.getUndoManager().endCompoundEdit(key); //commented out for french keyboard fix, replaced with endCompoundEdit", "+      endCompoundEdit();", "+    }", "+    catch (OperationCanceledException oce) {", "+      // if canceled, undo the indent; but first, end compound edit", "+      //        _doc.getUndoManager().endCompoundEdit(key); fixed for french keyboard fix", "+      endCompoundEdit();", "+      _doc.getUndoManager().undo();", "+      // pm = null, so cancel can't be pressed", "+      throw new UnexpectedException(oce);", "+    }", "+    catch (RuntimeException e) {", "+      //catches the exception to turn off the the hourglass", "+      //and close the compound edit before throwing out to", "+      //the main frame.", "-", "-      //        return null;", "-      //      }", "-      //    };", "-      //    worker.start();", "+      ", "+      // _doc.getUndoManager().endCompoundEdit(key); //commented out for french keyboard fix, replaced with endCompoundEdit()", "+      endCompoundEdit();", "+      throw e;", "+    }", "+    ", "+    //_doc.setCurrentLocation(caretPos);", "+    setCaretPosition(_doc.getCurrentLocation());", "+    //_mainFrame.hourglassOff();", "+    //pm.close();", "+    ", "+    //        return null;", "+    //      }", "+    //    };", "+    //    worker.start();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4aa3e9b9a4168bff59740929f0d1a7a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void interpret(final String s) throws RemoteException", "signatureAfterChange": "    public InterpretResult interpret(final String s)", "diff": ["+  public InterpretResult interpret(final String s) {", "+    try {", "+      _dialog(\"to interp: \" + s);", "+      Object result = _interpreter.interpret(s);", "+      _dialog(\"interp ret: \" + result);", "-  public void interpret(final String s) throws RemoteException {", "-    // fire off thread to interpret to keep from blocking the caller", "-    // it's all asynchronous anyhow ...", "-    Thread thread = new Thread() {", "-      public void run() {", "-        try {", "-          //_dialog(\"to interp: \" + s);", "-          Object result = _interpreter.interpret(s);", "-          //_dialog(\"interp ret: \" + result);", "-          if (result == JavaInterpreter.NO_RESULT) {", "-            _mainJVM.returnedVoid();", "-          }", "-          else {", "-            // we use String.valueOf because it deals with result = null!", "-            _mainJVM.returnedResult(String.valueOf(result));", "-          }", "-        }", "-        catch (RemoteException re) {", "-          // what do do? nothing I guess. main jvm is dead!", "-        }", "-        catch (ExceptionReturnedException e) {", "-          Throwable t = e.getContainedException();", "-", "-          try {", "-            //_dialog(\"before call to threwException\");", "-            _mainJVM.threwException(t.getClass().getName(),", "-                                    t.getMessage(),", "-                                    getStackTrace(t));", "-          }", "-          catch (RemoteException re) {", "-            // what do do? nothing I guess. main jvm is dead!", "-          }", "-        }", "-        catch (Throwable t) {", "-          // A toString method might throw anything, so we need to be careful", "-          //_dialog(\"thrown by toString: \" + t);", "-          try {", "-            _mainJVM.threwException(t.getClass().getName(),", "-                                    t.getMessage(),", "-                                    getStackTrace(t));", "-          }", "-          catch (RemoteException re) {", "-            // what do do? nothing I guess. main jvm is dead!", "-          }", "-        }", "+      if (result == JavaInterpreter.NO_RESULT) {", "+        return new VoidResult();", "-    };", "+      else {", "+        // we use String.valueOf because it deals with result = null!", "+        _dialog(\"about to tell main result was \" + result);", "+        return new ValueResult(String.valueOf(result));", "+      }", "+    }", "+    catch (ExceptionReturnedException e) {", "+      Throwable t = e.getContainedException();", "-    thread.start();", "+      //_dialog(\"before call to threwException\");", "+      return new ExceptionResult(t.getClass().getName(),", "+                                 t.getMessage(),", "+                                 getStackTrace(t));", "+    }", "+    catch (Throwable t) {", "+      // A user's toString method might throw anything, so we need to be careful", "+      //_dialog(\"thrown by toString: \" + t);", "+      return new ExceptionResult(t.getClass().getName(),", "+                                 t.getMessage(),", "+                                 getStackTrace(t));", "+    }"]}], "num": 28108}