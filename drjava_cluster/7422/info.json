{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "070e5bf09e162e83a3d1f79c94b70b05", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21910656515fb354c41c44c46158946e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/BalancingStreamTokenizer.java", "commitBeforeChange": "f9b0aacda7d0b19ff2541b10e4df48c67eef3bf5", "commitAfterChange": "51d1f2e57f80c21afa7918fd2fa925d58d67589d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "         protected String escape(String s)", "signatureAfterChange": "         protected String escape(String s)", "diff": ["+      if (i==0) { sb.append(s.charAt(0)); }", "+      else {", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43507e20cdd15fe81d5cfd3b1e151f28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "d3ca8d30db126f3de1352627e18f51d00a1bf339", "commitAfterChange": "1e619a02befaa7a99dc31172b2a007a2446ed2bd", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public static String unescapeFileName(String s)", "signatureAfterChange": "   public static String unescapeFileName(String s)", "diff": ["+          else if (next==':') { sb.append(':'); ++i; }", "-                                                    \"path separator, process separator, pipe or 1b hex\"); }", "+                                                    \"path separator, process separator, pipe, colon, or 1b hex\"); }", "-                                                    \"path separator, process separator, pipe or 1b hex\"); }", "+                                                    \"path separator, process separator, pipe, colon, or 1b hex\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "489fec3147500a1adb73a660809ddcb1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "commitAfterChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": "    private void _updateWatches()", "signatureAfterChange": "    private void _updateWatches()", "diff": ["-    //DrJava.consoleOut().println(\"stack frame: \" + frames);", "-    //DrJava.consoleOut().println(\"all fields: \" + rt.allFields());", "-        //DrJava.consoleOut().println(\"No line number information for this method\");", "-        // ReferenceType's scope, keep further out in scope.", "+        // ReferenceType's scope, keep going further out in scope.", "+          if (rt == null) {", "+            currWatch.setValue(null);", "+            currWatch.setType(null);", "+            break;", "+          }", "-            // check if the frame represents a native or static method and", "+            // Check if the frame represents a native or static method and", "-            // This is a hack, remove it to improve performance, it will", "-            // work sometimes, but not always.", "-            //DrJava.consoleOut().println(\"checking frames *\");", "+            // This is a hack, remove it to slightly improve performance but", "+            // at the loss of ever being able to watch outer instance", "+            // fields. If unremoved, this will work sometimes, but not always.", "-              //DrJava.consoleOut().println(\"outerFrame: \" + outerFrame);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7972833bb57b817399fb5e944b84111", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/BalancingStreamTokenizer.java", "commitBeforeChange": "f9b0aacda7d0b19ff2541b10e4df48c67eef3bf5", "commitAfterChange": "51d1f2e57f80c21afa7918fd2fa925d58d67589d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      protected String unescape(String s)", "signatureAfterChange": "      protected String unescape(String s)", "diff": ["+      if (i==0) { sb.append(s.charAt(0)); }", "+      else {", "+    }"]}], "num": 7422}