{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a8b61cb0e6f4ab592f5cc7ffe0eb455", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54a9712527c13cc2f5ba2519a184df46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testUndoEventsOccur()", "signatureAfterChange": "   public void testUndoEventsOccur() throws BadLocationException", "diff": ["-  public void testUndoEventsOccur() /* throws BadLocationException */ {", "-    ", "+  public void testUndoEventsOccur() throws BadLocationException {", "-    Utilities.invokeLater(new Runnable() {", "-      public void run() {", "-        // Have to add an undoable edit listener for Undo to work", "-        doc.addUndoableEditListener(new UndoableEditListener() {", "-          public void undoableEditHappened(UndoableEditEvent e) { doc.getUndoManager().addEdit(e.getEdit()); }", "-        });", "-      }", "+    ", "+    // Have to add an undoable edit listener for Undo to work", "+    doc.addUndoableEditListener(new UndoableEditListener() {", "+      public void undoableEditHappened(UndoableEditEvent e) { doc.getUndoManager().addEdit(e.getEdit()); }", "-    ", "-//        Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();", "+//    Utilities.showDebug(\"testUndoEvents finished\");", "-    _log.log(\"testUndoEventsOccur() completed\");", "-    ", "+//    _log.log(\"testUndoEventsOccur() completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7139fd0f19b52b0c81e3a0972304d517", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private void junitOpenDefDocs(final List<OpenDefinitionsDocument> lod, final boolean allTests)", "signatureAfterChange": "   private void junitOpenDefDocs(final List<OpenDefinitionsDocument> lod, final boolean allTests)", "diff": ["-    if (_testInProgress) return;", "+    if (_testInProgress) return; ", "-            SwingUtilities.invokeLater(new Runnable() {  // defer running this code; would prefer to waitForInterpreter", "-              public void run() { _rawJUnitOpenDefDocs(lod, allTests); }", "-            });", "+            _rawJUnitOpenDefDocs(lod, allTests);", "-      _testInProgress = true;", "-      _testInProgress = false;"]}], "num": 15656}