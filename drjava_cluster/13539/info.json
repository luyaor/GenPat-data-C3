{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "450992774a32bcb8d0a30bf4bb7433f2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d1c742b9173502039d4626d10b3827a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "25d973a9f45bdba84ad4514eba518ee94f041daf", "commitAfterChange": "fa5a46f3cc65ec85b9fa37599dc6542e75cee25e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public DefinitionsDocument getDocument() throws IOException, FileMovedException", "signatureAfterChange": "     public DefinitionsDocument getDocument() throws IOException, FileMovedException", "diff": ["-      boolean isResident = false;", "-      boolean makeUnmanaged = false;  // makeUnmanaged -> isResident", "-      synchronized(_dmLock) { // lock the document manageer so that its state can be updated", "-        isResident = _doc != null;", "-        if (isResident) {  // Document is in queue or \"unmanaged\" (a modified doc or a new doc with no file)", "-          if (isUnmanagedOrUntitled()) return _doc;", "-          makeUnmanaged = _doc.isModifiedSinceSave();", "-          if (makeUnmanaged)  { setUnmanaged(); }", "-        }", "-      }", "-      if (makeUnmanaged) remove(this); // remove this from queue", "-      if (isResident) return _doc;", "-        ", "-      boolean isUntitled = false;", "-      synchronized(_dmLock) {      // Lock dm so that the _doc field can be updated.", "-        isUntitled = isUntitled();  // This locking may be overkill; once titled, always titled", "+//      Utilities.showDebug(\"getDocument called on \" + this + \" with _stat = \" + _stat);", "+      DefinitionsDocument doc = _doc;", "+      if (doc != null) return doc;", "+      synchronized(_cacheLock) { // lock the cache so that this DocManager's state can be updated", "+        if (_doc != null) return _doc;  // _doc may have changed since test outside of _cacheLock", "-          if (_doc == null) throw new IllegalStateException(\"the reconstructor made a null document\");", "+          assert _doc != null;", "+//        Utilities.showDebug(\"Document \" + _doc + \" reconstructed; _stat = \" + _stat);", "+        if (_stat == NOT_IN_QUEUE) add();       // add this to queue ", "+        return _doc;", "-//      Utilities.showDebug(\"Document \" + _doc + \" reconstructed; _stat = \" + _stat);", "-      if (! isUntitled) addToQueue();  // add this to queue if corresponds to a disk file", "-      return _doc;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c37b4d844a8e1e726273b774615b4af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "commitAfterChange": "fbbca8c38fe9b7414801b8eeb32f639f83abb9c9", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public int getCurrentLine()", "signatureAfterChange": "   public int getCurrentLine()", "diff": ["-    try {", "-      synchronized(_reduced) {", "-        int here = _currentLocation;", "-        if (_cachedLocation > getLength()) {", "-          // we can't know the last line number after a delete; starting over.", "-          _cachedLocation = 0;", "-          _cachedLineNum = 1;", "-        }", "-        if (_cachedNextLineLoc > getLength()) _cachedNextLineLoc = -1;", "-        // let's see if we get off easy", "-        if ( ! (_cachedPrevLineLoc < here && here < _cachedNextLineLoc )) {", "-          ", "-          // this if improves performance when moving from the end of the document to the beginnning.", "-          // in essence, it calculates the line number from scratch", "-          if (_cachedLocation - here > here) {", "-            _cachedLocation = 0;", "-            _cachedLineNum = 1;", "-          }", "-          int lineOffset = _getRelativeLine();", "-          _cachedLineNum = _cachedLineNum + lineOffset;", "-          ", "-        }", "-        _cachedLocation = here;", "-        _cachedPrevLineLoc = getLineStartPos(here);", "-        _cachedNextLineLoc = getLineEndPos(here);", "-        return _cachedLineNum;", "-      }", "-    }", "+    try { return getDefaultRootElement().getElementIndex(_currentLocation) + 1; } // line indices are 1-based", "-  }"]}], "num": 13539}