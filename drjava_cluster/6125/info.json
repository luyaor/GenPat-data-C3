{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58c38a2c0ccd93a0cddab01b304073a1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24b4b6bfd5e170afb77d6de07c9e2cd2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelBrace.java", "commitBeforeChange": "5a2a5e61cb4a1ee4d053834c9eda949c73544637", "commitAfterChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate int _moveLeft(int count, \t\t\t\t\t\t\t\t\t\t\t\tModelList<ReducedToken>.Iterator copyCursor, \t\t\t\t\t\t\t\t\t\t\t\tint currentOffset)", "signatureAfterChange": "   private int _moveLeft(int count,                         ModelList<ReducedToken>.Iterator copyCursor,                         int currentOffset)", "diff": ["-\t */", "-\tprivate int _moveLeft(int count,", "-\t\t\t\t\t\t\t\t\t\t\t\tModelList<ReducedToken>.Iterator copyCursor,", "-\t\t\t\t\t\t\t\t\t\t\t\tint currentOffset)", "-\t\t{", "-\t\t\tif (copyCursor.atEnd()){", "-\t\t\t\tcopyCursor.prev();", "-\t\t\t\tif (!copyCursor.atStart()) //make sure list not empty", "-\t\t\t\t\tcurrentOffset = copyCursor.current().getSize();", "-\t\t\t}", "-\t\t\t", "-\t\t\tif (copyCursor.atStart())", "-\t\t\t\tthrow new IllegalArgumentException(\"At Start\");", "-\t\t", "-\t\t\twhile (count > currentOffset){", "-\t\t\t\tcount = count - currentOffset;", "-\t\t\t\tcopyCursor.prev();", "-\t\t\t\t", "-\t\t\t\tif (copyCursor.atStart()){", "-\t\t\t\t\tif (count > 0)", "-\t\t\t\t\t\tthrow new IllegalArgumentException(\"At Start\");", "-\t\t\t\t\telse {", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\tcurrentOffset = 0;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\telse {", "-\t\t\t\t\tcurrentOffset = copyCursor.current().getSize();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn currentOffset - count;", "-\t\t}\t\t ", "+   */", "+  private int _moveLeft(int count,", "+                        ModelList<ReducedToken>.Iterator copyCursor,", "+                        int currentOffset)", "+  {", "+    if (copyCursor.atEnd()) {", "+      copyCursor.prev();", "+      if (!copyCursor.atStart()) //make sure list not empty", "+        currentOffset = copyCursor.current().getSize();", "+    }", "+    ", "+    if (copyCursor.atStart()) {", "+      throw new IllegalArgumentException(\"At Start\");", "+    }", "+    while (count > currentOffset) {", "+      count = count - currentOffset;", "+      copyCursor.prev();", "+      ", "+      if (copyCursor.atStart()) {", "+        if (count > 0)", "+          throw new IllegalArgumentException(\"At Start\");", "+        else {", "+          copyCursor.next();", "+          currentOffset = 0;", "+        }", "+      }", "+      else {", "+        currentOffset = copyCursor.current().getSize();", "+      }", "+    }", "+    return currentOffset - count;", "+  } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a38c412a7ea0e3f80af1f7e49fd6b240", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "5a2a5e61cb4a1ee4d053834c9eda949c73544637", "commitAfterChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate int _moveLeft(int count, \t\t\t\t\t\t\t\t\t\t\t\tModelList<ReducedToken>.Iterator copyCursor, \t\t\t\t\t\t\t\t\t\t\t\tint currentOffset)", "signatureAfterChange": "   private int _moveLeft(int count,                         ModelList<ReducedToken>.Iterator copyCursor,                         int currentOffset)", "diff": ["-\t */", "-\tprivate int _moveLeft(int count,", "-\t\t\t\t\t\t\t\t\t\t\t\tModelList<ReducedToken>.Iterator copyCursor,", "-\t\t\t\t\t\t\t\t\t\t\t\tint currentOffset)", "-\t\t{", "-\t\t\tif (copyCursor.atEnd()){", "-\t\t\t\tcopyCursor.prev();", "-\t\t\t\tif (!copyCursor.atStart()) //make sure list not empty", "-\t\t\t\t\tcurrentOffset = copyCursor.current().getSize();", "-\t\t\t}", "-\t\t\t", "-\t\t\tif (copyCursor.atStart())", "-\t\t\t\tthrow new IllegalArgumentException(\"At Start\");", "-\t\t", "-\t\t\twhile (count > currentOffset){", "-\t\t\t\tcount = count - currentOffset;", "-\t\t\t\tcopyCursor.prev();", "-\t\t\t\t", "-\t\t\t\tif (copyCursor.atStart()){", "-\t\t\t\t\tif (count > 0)", "-\t\t\t\t\t\tthrow new IllegalArgumentException(\"At Start\");", "-\t\t\t\t\telse {", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\tcurrentOffset = 0;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\telse {", "-\t\t\t\t\tcurrentOffset = copyCursor.current().getSize();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn currentOffset - count;", "-\t\t}\t\t ", "+   */", "+  private int _moveLeft(int count,", "+                        ModelList<ReducedToken>.Iterator copyCursor,", "+                        int currentOffset)", "+  {", "+    if (copyCursor.atEnd()) {", "+      copyCursor.prev();", "+      if (!copyCursor.atStart()) //make sure list not empty", "+        currentOffset = copyCursor.current().getSize();", "+    }", "+    ", "+    if (copyCursor.atStart()) {", "+      throw new IllegalArgumentException(\"At Start\");", "+    }", "+    while (count > currentOffset) {", "+      count = count - currentOffset;", "+      copyCursor.prev();", "+      ", "+      if (copyCursor.atStart()) {", "+        if (count > 0)", "+          throw new IllegalArgumentException(\"At Start\");", "+        else {", "+          copyCursor.next();", "+          currentOffset = 0;", "+        }", "+      }", "+      else {", "+        currentOffset = copyCursor.current().getSize();", "+      }", "+    }", "+    return currentOffset - count;", "+  } "]}], "num": 6125}