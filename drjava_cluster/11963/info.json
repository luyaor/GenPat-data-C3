{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12eff2547b27bbbc35d442462d511e7d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81bfdc282f46776cb84820ad2de4e839", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "   public Object visit(FunctionCall node)", "signatureAfterChange": "   public Object visit(FunctionCall node)", "diff": ["-    Context c = new GlobalContext(context.getInterpreter());", "+    Context<Object> c = new GlobalContext<Object>(context.getInterpreter());", "-      ImportationManager im =", "-        (ImportationManager)md.getProperty(NodeProperties.IMPORTATION_MANAGER);", "-      Context ctx = new GlobalContext(context.getInterpreter());", "+      ImportationManager im = (ImportationManager)md.getProperty(NodeProperties.IMPORTATION_MANAGER);", "+      Context<Type> ctx = new GlobalContext<Type>(context.getInterpreter());", "+      Context<Type>typeCtx = new GlobalContext<Type>(context.getInterpreter());", "-      NameVisitor nv = new NameVisitor(ctx,ctx);", "+      NameVisitor nv = new NameVisitor(ctx,typeCtx);", "-      ctx = new GlobalContext(context.getInterpreter());", "-      ctx.setImportationManager(im);", "-      ctx.setFunctions((List<MethodDeclaration>)md.getProperty(NodeProperties.FUNCTIONS)); /* Type erasure bites */", "+      typeCtx = new GlobalContext<Type>(context.getInterpreter());", "+      typeCtx.setImportationManager(im);", "+      typeCtx.setFunctions((List<MethodDeclaration>)md.getProperty(NodeProperties.FUNCTIONS)); /* Type erasure bites */", "-      AbstractTypeChecker tc = AbstractTypeChecker.makeTypeChecker(ctx);", "+      AbstractTypeChecker tc = AbstractTypeChecker.makeTypeChecker(typeCtx);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc68a9b7638f59ad3312b50df1c11eff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "   public Object visit(FunctionCall node)", "signatureAfterChange": "   public Object visit(FunctionCall node)", "diff": ["-    Context<Object> c = new GlobalContext<Object>(context.getInterpreter());", "+    Context c = new GlobalContext(context.getInterpreter());", "-      ImportationManager im = (ImportationManager)md.getProperty(NodeProperties.IMPORTATION_MANAGER);", "-      Context<Type> ctx = new GlobalContext<Type>(context.getInterpreter());", "-      Context<Type>typeCtx = new GlobalContext<Type>(context.getInterpreter());", "+      ImportationManager im =", "+        (ImportationManager)md.getProperty(NodeProperties.IMPORTATION_MANAGER);", "+      Context ctx = new GlobalContext(context.getInterpreter());", "-      NameVisitor nv = new NameVisitor(ctx,typeCtx);", "+      NameVisitor nv = new NameVisitor(ctx,ctx);", "-      typeCtx = new GlobalContext<Type>(context.getInterpreter());", "-      typeCtx.setImportationManager(im);", "-      typeCtx.setFunctions((List<MethodDeclaration>)md.getProperty(NodeProperties.FUNCTIONS)); /* Type erasure bites */", "+      ctx = new GlobalContext(context.getInterpreter());", "+      ctx.setImportationManager(im);", "+      ctx.setFunctions((List<MethodDeclaration>)md.getProperty(NodeProperties.FUNCTIONS)); /* Type erasure bites */", "-      AbstractTypeChecker tc = AbstractTypeChecker.makeTypeChecker(typeCtx);", "+      AbstractTypeChecker tc = AbstractTypeChecker.makeTypeChecker(ctx);"]}], "num": 11963}