{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2939776c78618f18ae152dacf01ffd2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "984bd2cf4456eb365023de1d839e1021", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testCompileWithPackageStatementInsideClass() throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileWithPackageStatementInsideClass() throws BadLocationException, IOException,      InterruptedException", "diff": ["-  public void testCompileWithPackageStatementInsideClass() throws BadLocationException, IOException {", "+  public void testCompileWithPackageStatementInsideClass() throws BadLocationException, IOException, ", "+    InterruptedException {", "+    ", "-    _compileDone = false;", "-    _model.addListener(_failListener);", "+    CompileShouldFailListener listener = new CompileShouldFailListener();", "+    _model.addListener(listener);", "+    ", "-    _waitCompileDone();", "+    listener.waitCompileDone();", "-    _failListener.checkCompileOccurred();", "+    listener.checkCompileOccurred();", "-    _model.removeListener(_failListener);", "+    _model.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0572427aaaa097f43e96544719bda8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "1f1e1c194ec79b5577db174af86a812206a9ebf6", "commitAfterChange": "8470bac42027a288eff50252d965c363d15d41dc", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testCompileReferenceToNonPublicClass() throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileReferenceToNonPublicClass() throws BadLocationException, IOException, InterruptedException", "diff": ["-  public void testCompileReferenceToNonPublicClass() throws BadLocationException, IOException {", "+  public void testCompileReferenceToNonPublicClass() throws BadLocationException, IOException, InterruptedException {", "-    doc.startCompile();", "-    doc2.startCompile();", "+    synchronized(listener) {", "+      doc.startCompile();", "+      listener.wait();", "+    }", "+    _model.removeListener(listener);", "+    CompileShouldSucceedListener listener2 = new CompileShouldSucceedListener();", "+    _model.addListener(listener2);", "+    synchronized(listener2) {", "+      doc2.startCompile();", "+      listener2.wait();", "+    }", "+    listener2.checkCompileOccurred();"]}], "num": 9093}