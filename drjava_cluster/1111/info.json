{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bffaa04148c68202e83674ff92737d0b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20ee50e28c2fdbacd79c49e472f14fb7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "10c44767bf3d5eefd230820d6106fe1ea2534e6f", "commitAfterChange": "c1c9eac4e19bc59469201ee2ac4b0d20897056f9", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "     public File getWorkingDirectory()", "signatureAfterChange": "     public File getWorkingDirectory()", "diff": ["-      File workDir = getRawWorkingDirectory(); ", "-//      System.err.println(\"FlatFileGroupingState.getWorkingDirectory() called; IDE workDir field = \" + workDir);", "-      if (workDir != null && workDir != FileOption.NULL_FILE) return workDir;", "-      File[] roots = getSourceRootSet();", "+      ", "+      try { ", "+        File workDir = getRawWorkingDirectory();", "+//        System.err.println(\"FlatFileGroupingState.getWorkingDirectory() called; IDE workDir field = \" + workDir);", "+        if (workDir != null && workDir != FileOption.NULL_FILE) return workDir.getCanonicalFile();", "+        File[] roots = getSourceRootSet();", "-      if (roots.length == 0) return new File(System.getProperty(\"user.dir\"));", "-      try  { return roots[0].getCanonicalFile(); }", "+        if (roots.length == 0) return new File(System.getProperty(\"user.dir\"));", "+        return roots[0].getCanonicalFile(); ", "+      }", "-      return roots[0];  // a flat file configuration should have exactly one source root", "+      return new File(System.getProperty(\"user.dir\"));  // a flat file configuration should have exactly one source root"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4221330d246ba9082c5f9183242e83e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 350, "methodNumberAfterChange": 349, "signatureBeforeChange": "     public boolean checkIfClassFileInSync()", "signatureAfterChange": "     public boolean checkIfClassFileInSync()", "diff": ["-//        _log.log(\"checkIfClassFileInSync = false because isModifiedSinceSave()\");", "+        _log.log(\"checkIfClassFileInSync = false because isModifiedSinceSave()\");", "-//      _log.log(\"In checkIfClassFileInSync cacched value of classFile = \" + classFile);", "-      if (classFile == null) {", "+      _log.log(\"In checkIfClassFileInSync cacched value of classFile = \" + classFile);", "+      if (classFile == FileOps.NULL_FILE) {", "-//        _log.log(this + \": in checkIfClassFileInSync _locateClassFile() = \" + classFile);", "+        _log.log(this + \": in checkIfClassFileInSync _locateClassFile() = \" + classFile);", "-        if ((classFile == null) || (! classFile.exists())) {", "+        if ((classFile == FileOps.NULL_FILE) || (! classFile.exists())) {", "-//          _log.log(this + \": Could not find class file\");", "+          _log.log(this + \": Could not find class file\");", "-//        _log.log(this + \": File moved\");", "+        _log.log(this + \": File moved\");", "-//        _log.log(this + \": date stamps indicate modification\");", "+        _log.log(this + \": date stamps indicate modification\");"]}], "num": 1111}