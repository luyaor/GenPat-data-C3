{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0acf43273442b28714ad9a9c2946ea10", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2378086e32f3bf081e696ff74ce512da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Set<AbstractVariable> getCurrentScopeVariables()", "signatureAfterChange": "   public Set<AbstractVariable> getCurrentScopeVariables()", "diff": ["-   */", "+  /** Returns the current scope variables in a set. */", "-    while (it.hasNext()) {", "-      result.add(new Variable(it.next()));", "-    }", "+    while (it.hasNext()) result.add(new Variable(it.next()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f7087754965ffea418741bc573dbe4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerProxy.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public String getName()", "signatureAfterChange": "   public String getName()", "diff": ["-   */", "+  /** Returns the name of this compiler, appropriate to show to the user. */", "-    if (!isAvailable()) {", "-      return \"(unavailable)\";", "-    }", "-", "+    if (!isAvailable())  return \"(unavailable)\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a07f9c6d64420c9a654d17c52bdafb1c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Set<AbstractVariable> getCurrentScopeVariables()", "signatureAfterChange": "   public Set<AbstractVariable> getCurrentScopeVariables()", "diff": ["-  /** Returns the current scope variables in a set. */", "+   */", "-    while (it.hasNext()) result.add(new Variable(it.next()));", "+    while (it.hasNext()) {", "+      result.add(new Variable(it.next()));", "+    }"]}], "num": 13069}