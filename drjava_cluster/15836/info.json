{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4eda6f51dc4739772537b1a9c59e673c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c0a392ecaeaeba0c2c3a65d3be09d37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3b9696a707d284763f4bff7a7d587935d483984c", "commitAfterChange": "d63224548fc8865b0ab459659b530c0d39d21fc7", "methodNumberBeforeChange": 543, "methodNumberAfterChange": 544, "signatureBeforeChange": "   private JMenu _setUpToolsMenu(int mask)", "signatureAfterChange": "   private JMenu _setUpToolsMenu(int mask)", "diff": ["-    JMenu toolsMenu = new JMenu(\"Tools\");", "+    final JMenu toolsMenu = new JMenu(\"Tools\");", "+    final int runActionIndex = toolsMenu.getItemCount();", "+    // Add the listener that changes the \"Run Main\" menu item", "+    OptionListener<Boolean> runMainListener = new OptionListener<Boolean>() {", "+      public void optionChanged(final OptionEvent<Boolean> oce) {", "+        JMenuItem mi = toolsMenu.getItem(runActionIndex);", "+", "+        // change", "+        if (oce.value) {", "+          mi.setText(\"Run Document\");", "+          mi.setToolTipText(\"Run the current document, regardless of whether it is an applet, an ACM \" +", "+                            \"Java Task Force program, or a regular Java program with a main method.\"); ", "+        }", "+        else {", "+          mi.setText(\"Run Document's Main Method\");", "+          mi.setToolTipText(\"Run the main method of the current document\"); ", "+        }", "+      }", "+    };", "+    DrJava.getConfig().addOptionListener(OptionConstants.SMART_RUN_FOR_APPLETS_AND_PROGRAMS, runMainListener);", "+    runMainListener.optionChanged(new OptionEvent<Boolean>", "+                                  (OptionConstants.SMART_RUN_FOR_APPLETS_AND_PROGRAMS,", "+                                   DrJava.getConfig().getSetting(OptionConstants.SMART_RUN_FOR_APPLETS_AND_PROGRAMS)));", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ffdfd00602249e4c99a3e70dc48538", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/ConfigOptionListeners.java", "commitBeforeChange": "1635ebcc866330c5b8ab6470e164e0d8b3584d8f", "commitAfterChange": "df716c1c0097e3026300a60a646a72121f921c3d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @SuppressWarnings(\"fallthrough\")   public static void sanitizeSlaveJVMArgs(JFrame parent,                                           String value,                                           final OptionListener<String> l)", "signatureAfterChange": "    @SuppressWarnings(\"fallthrough\")   public static void sanitizeSlaveJVMArgs(JFrame parent,                                           String value,                                           final OptionListener<String> l)", "diff": ["-  ", "+", "+      long heapSizeMB = (heapSize / 1024) / 1024;", "+      // find the next bigger of the choices", "+      String newSetting = getNextBiggerHeapSize(heapSizeMB);", "-                           \"Would you like to copy the value\\n\\\"\"+size+\"\\\" into the \\\"Maximum Heap\\\" setting,\\n\"+", "+                           \"Would you like to copy the value \\\"\"+newSetting+\"\\\" into the \\\"Maximum Heap\\\" setting,\\n\"+", "-                           \"Would you like to clean up the \\\"JVM Args for Interactions JVM\\\", copy the value\\n\"+", "-                           \"\\\"\"+size+\"\\\" into the \\\"Maximum Heap\\\" setting,\\n\"+", "+                           \"Would you like to clean up the \\\"JVM Args for Interactions JVM\\\"\\n\"+", "-            DrJava.getConfig().removeOptionListener(SLAVE_JVM_ARGS, l);", "+            DrJava.getConfig().removeOptionListener(SLAVE_JVM_ARGS, this);", "-          DrJava.getConfig().setSetting(SLAVE_JVM_XMX, size);", "+          DrJava.getConfig().setSetting(SLAVE_JVM_XMX, newSetting);", "+        }", "+        else {", "+          JOptionPane.showMessageDialog(parent,", "+                                        \"You will have to reset the interactions pane before changes take effect.\");"]}], "num": 15836}