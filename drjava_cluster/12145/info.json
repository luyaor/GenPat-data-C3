{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01004c663b4c6c521c37c6bab8cdb1a1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9726ae8ee13d25b143042b0464937aab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilities.java", "commitBeforeChange": "e3e15711ffe62e7b19032f1eefe26e2aca48b4e2", "commitAfterChange": "816e415ebd3619964409d5b7c5a5d20fa993a7b5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected static Method selectTheMostSpecificMethod(List<Method> list)", "signatureAfterChange": "   protected static Method selectTheMostSpecificMethod(List<Method> list)", "diff": ["-      throw new AmbiguousMethodException(\"Both methods match: \" + best + \", and \" + ambiguous);", "+      boolean bestBridge = TigerUtilities.isBridge(best);", "+      boolean ambiBridge = TigerUtilities.isBridge(ambiguous);", "+      if (bestBridge && !ambiBridge) {", "+        return ambiguous;", "+      }", "+      else if (!bestBridge && ambiBridge) {", "+        return best;", "+      }", "+      throw new AmbiguousMethodException(best, ambiguous);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92112a5fa9b89f73c8ca01860f5bcb2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilities.java", "commitBeforeChange": "2d246c494fbb75a0c4f2511eff1e602e629e213d", "commitAfterChange": "dda1eca509a9b15531a1f437487ab6782b2e8d21", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected static Method selectTheMostSpecificMethod(List<Method> list)", "signatureAfterChange": "   protected static Method selectTheMostSpecificMethod(List<Method> list)", "diff": ["-    ", "+        ", "+      if(TigerUtilities.isBridge(curr)) continue; //If the method is a bridge method, dont consider it, go to the next", "+", "-      boolean bestBridge = TigerUtilities.isBridge(best);", "-      boolean ambiBridge = TigerUtilities.isBridge(ambiguous);", "-      if (bestBridge && !ambiBridge) {", "-        return ambiguous;", "-      }", "-      else if (!bestBridge && ambiBridge) {", "-        return best;", "-      }"]}], "num": 12145}