{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "257d507917b9d35ce4d8a0ed7fc8eeae", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f411780ac1045fdf17c4a1c525d8f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "d75bb4144501a8419376e0dc8dbe054c7511983f", "commitAfterChange": "a31b2c97ecb1660744788e96501356f9c0219d19", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected void getDistToEnclosingBrace(IndentInfo braceInfo)", "signatureAfterChange": "   protected void getDistToEnclosingBrace(IndentInfo braceInfo)", "diff": ["-    Stack<ReducedToken> braceStack = new Stack<ReducedToken>();", "+    Stack<Brace> braceStack = new Stack<Brace>();", "-    while (!iter.atStart()) {", "+    while (! iter.atStart()) {", "+            ", "+      ReducedToken curToken = iter.current();", "+      int size = curToken.getSize();", "+      distance += size;", "+      relDistance += size;", "-      distance += iter.current().getSize();", "-      relDistance += iter.current().getSize();", "-", "-      if (!iter.current().isGap()) {", "+      if (! curToken.isGap()) {", "+        ", "+        Brace curBrace = (Brace) curToken;", "-              if (iter.current().isOpenBrace()) {", "+              if (curBrace.isOpenBrace()) {", "-                  braceInfo.braceType = iter.current().getType();", "+                  braceInfo.braceType = curBrace.getType();", "-                ReducedToken popped = braceStack.pop();", "-                if (!iter.current().isMatch(popped)) {", "+                Brace popped = braceStack.pop();", "+                if (! curBrace.isMatch(popped)) {", "-              else {", "-                braceStack.push(iter.current());", "-              }", "+              else braceStack.push(curBrace);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84878351d9b881110a5ae0b2e52faee2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "d75bb4144501a8419376e0dc8dbe054c7511983f", "commitAfterChange": "a31b2c97ecb1660744788e96501356f9c0219d19", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   protected void getDistToEnclosingBraceCurrent(IndentInfo braceInfo)", "signatureAfterChange": "   protected void getDistToEnclosingBraceCurrent(IndentInfo braceInfo)", "diff": ["-    Stack<ReducedToken> braceStack = new Stack<ReducedToken>();", "+    Stack<Brace> braceStack = new Stack<Brace>();", "-      distance += iter.current().getSize();", "-      relDistance += iter.current().getSize();", "+      ReducedToken curToken = iter.current();", "+      int size = curToken.getSize();", "+      distance += size;", "+      relDistance += size;", "-      if (!iter.current().isGap()) {", "-", "+      if (! curToken.isGap()) {", "+        Brace curBrace = (Brace) curToken;", "-              if (iter.current().isOpenBrace()) {", "+              if (curBrace.isOpenBrace()) {", "-    braceInfo.braceTypeCurrent = iter.current().getType();", "+                  braceInfo.braceTypeCurrent = curBrace.getType();", "-                ReducedToken popped = braceStack.pop();", "-                if (!iter.current().isMatch(popped)) {", "+                Brace popped = braceStack.pop();", "+                if (! curBrace.isMatch(popped)) {", "-              else {", "-                braceStack.push(iter.current());", "-              }", "+              else braceStack.push(curBrace);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d6f3ce7920a0b4bb5cf25f783d408ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "   void initGotoFileDialog()", "signatureAfterChange": "   void initGotoFileDialog()", "diff": ["-          if (p.getItem()!=null) {", "-            boolean docChanged = !p.getItem().doc.equals(_model.getActiveDocument());", "-            if (docChanged) {", "-              addToBrowserHistory();", "-            }", "-            _model.setActiveDocument(p.getItem().doc);", "-            final int curLine = _model.getActiveDocument().getCurrentLine();", "-            String t = p.getText();", "-            if (t.lastIndexOf(':')>=0) {", "+          if (p.getItem() != null) {", "+            final OpenDefinitionsDocument newDoc = p.getItem().doc;", "+            final boolean docChanged = ! newDoc.equals(_model.getActiveDocument());", "+            if (docChanged) addToBrowserHistory();", "+            _model.setActiveDocument(newDoc);", "+            final int curLine = newDoc.getCurrentLine();", "+            final String t = p.getText();", "+            final int last = t.lastIndexOf(':');", "+            if (last >= 0) {", "-                String end = t.substring(t.lastIndexOf(':')+1);", "+                String end = t.substring(last + 1);", "-                    try {", "-                      _jumpToLine(lineNum);", "-                    }", "+                    try { _jumpToLine(lineNum); }", "+                    if (docChanged) addToBrowserHistory();", "-            if (docChanged) {", "-              // defer executing this code until after active document switch (if any) is complete", "-              SwingUtilities.invokeLater(new Runnable() {", "-                public void run() {", "-                  addToBrowserHistory();", "-                }", "-              });", "-            }", "+//            if (docChanged) {", "+//              // defer executing this code until after active document switch (if any) is complete", "+//              SwingUtilities.invokeLater(new Runnable() {", "+//                public void run() {", "+//                  addToBrowserHistory();", "+//                }", "+//              });", "+//            }", "-          hourglassOff();", "+          simpleHourglassOff();", "-          hourglassOff();", "+          simpleHourglassOff();", "-          if (b) { hourglassOff(); } else { hourglassOn(); }", "+          if (b) { simpleHourglassOff(); } else { simpleHourglassOn(); }"]}], "num": 7847}