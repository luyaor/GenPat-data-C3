{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b1d40670e33d679657d581ab7ea664c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b73cf9acde188854592b93fd59cb8b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "commitAfterChange": "35da9b77b7d75aca3d6277e27e3ba3dc86f3eaa9", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public String getEnclosingTopLevelClassName(int pos) throws ClassNameNotFoundException", "signatureAfterChange": "   public String getEnclosingTopLevelClassName(int pos) throws ClassNameNotFoundException", "diff": ["-    ", "+    readLock();", "-      int oldLocation = getCurrentLocation();", "-      ", "+      int oldLocation = _currentLocation;", "-        ", "-            topLevelBracePos = getCurrentLocation() - info.distToBraceCurrent;", "+            topLevelBracePos = _currentLocation - info.distToBraceCurrent;", "-        else {", "-          prevDelimPos++;", "-        }", "+        else prevDelimPos++;", "-      catch (BadLocationException ble) {", "-        // All positions here should be legal", "-        throw new UnexpectedException(ble);", "+      catch (BadLocationException ble) { throw new UnexpectedException(ble); }", "+      finally { ", "+        setCurrentLocation(oldLocation);", "+        readUnlock();", "-      finally { setCurrentLocation(oldLocation); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddf4e94c8311176e31fed782ffb5b63b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "commitAfterChange": "35da9b77b7d75aca3d6277e27e3ba3dc86f3eaa9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Vector<HighlightStatus> getHighlightStatus(int start, int end)", "signatureAfterChange": "   public Vector<HighlightStatus> getHighlightStatus(int start, int end)", "diff": ["-    synchronized (_reduced) {", "-      setCurrentLocation(start);", "-    ", "-      // Now ask reduced model for highlight status for chars till end", "-      v = _reduced.getHighlightStatus(start, end - start);", "-    }", "-    ", "-    // Go through and find any NORMAL blocks", "-    // Within them check for keywords", "-    for (int i = 0; i < v.size(); i++) {", "-      HighlightStatus stat = v.get(i);", "-      ", "-      if (stat.getState() == HighlightStatus.NORMAL) {", "-        i = _highlightKeywords(v, i);", "+    readLock();", "+    try {", "+      synchronized (_reduced) {", "+        setCurrentLocation(start);", "+        // Now ask reduced model for highlight status for chars till end", "+        v = _reduced.getHighlightStatus(start, end - start);", "+        ", "+        // Go through and find any NORMAL blocks", "+        // Within them check for keywords", "+        for (int i = 0; i < v.size(); i++) {", "+          HighlightStatus stat = v.get(i);", "+          if (stat.getState() == HighlightStatus.NORMAL) i = _highlightKeywords(v, i);", "+        }", "+    finally { readUnlock(); }"]}], "num": 17842}