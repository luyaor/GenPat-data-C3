{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2d63eb3da76afc8c9a4fa46ddfa9a1d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "048d1e31c207c82a61bede6ab4bb0b89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private String _getClassFromName(String name)", "signatureAfterChange": "      private String _getClassFromName(String name)", "diff": ["-      if ((paren > -1) && (paren < name.length())) {", "-        return name.substring(paren + 1, name.length() - 1);", "-      }", "-      else {", "-        throw new IllegalArgumentException(\"Name does not contain any parens: \" + name);", "-      }", "+      ", "+      if ((paren > -1) && (paren < name.length())) return name.substring(paren + 1, name.length() - 1);", "+      else throw new IllegalArgumentException(\"Name does not contain any parens: \" + name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42ab6e92b62dc41100d9536bbde47765", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private String _getTestFromName(String name)", "signatureAfterChange": "      private String _getTestFromName(String name)", "diff": ["-      if ((paren > -1) && (paren < name.length())) {", "-        return name.substring(0, paren);", "-      }", "-      else {", "-        throw new IllegalArgumentException(\"Name does not contain any parens: \" + name);", "-      }", "+      ", "+      if ((paren > -1) && (paren < name.length())) return name.substring(0, paren);", "+      ", "+      else throw new IllegalArgumentException(\"Name does not contain any parens: \" + name);"]}], "num": 13275}