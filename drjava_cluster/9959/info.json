{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae966d6a1c611b0aea97b3aab68955e3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c48a642e759d950c231b95d84bb4d16", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithTest.java", "commitBeforeChange": "5d2701667cf27d44a069ea945e7b8afcad461e22", "commitAfterChange": "0dc9a35e122071847260a9f3f7c5a7bac3c46105", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testCommentedPrefixDontSearchComment() throws BadLocationException", "signatureAfterChange": "   public void testCommentedPrefixDontSearchComment() throws BadLocationException", "diff": ["-    assertTrue(\"just before brace\", !rule.applyRule(_doc, 7, Indenter.OTHER));", "-    assertTrue(\"just after brace\", !rule.applyRule(_doc, 11, Indenter.OTHER));", "-    assertTrue(\"line after brace\", !rule.applyRule(_doc, 12, Indenter.OTHER));", "+    assertTrue(\"just before brace\", !rule.applyRule(_doc, 7, Indenter.IndentReason.OTHER));", "+    assertTrue(\"just after brace\", !rule.applyRule(_doc, 11, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after brace\", !rule.applyRule(_doc, 12, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf647b4d1433b8b0dd00ccd604ed0605", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartAfterOpenBraceTest.java", "commitBeforeChange": "5d2701667cf27d44a069ea945e7b8afcad461e22", "commitAfterChange": "0dc9a35e122071847260a9f3f7c5a7bac3c46105", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testNoBrace() throws BadLocationException", "signatureAfterChange": "      public void testNoBrace() throws BadLocationException", "diff": ["-    assertTrue(\"START has no preceding brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "-    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, 8, Indenter.OTHER));", "-    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, _text.length()-1, Indenter.OTHER));", "+    assertTrue(\"START has no preceding brace.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, 8, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, _text.length()-1, Indenter.IndentReason.OTHER));"]}], "num": 9959}