{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bddd212088880255fd09245f95e71e1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0843ebbedbc18808ae48ca47ac7bb6a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "1c6afe551331288ca825b92ecb3fda34bf325ee0", "commitAfterChange": "946c9827fd9c7515742a2a4508e6a7ac84a9f5a8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void safeJUnitAllWithNoValidTests() throws Exception", "signatureAfterChange": "   public void safeJUnitAllWithNoValidTests() throws Exception", "diff": ["-//    if (printMessages) System.err.println(\"-----testJUnitAllWithNoValidTests-----\");", "+    if (printMessages) System.err.println(\"-----testJUnitAllWithNoValidTests-----\");", "-//    System.err.println(\"-----> file = \" + file + \" -- canWrite() = \" + file.canWrite() + \" -- exists() = \" + file.exists());", "+    if (printMessages) System.err.println(\"-----> file = \" + file + \" -- canWrite() = \" + file.canWrite() + \" -- exists() = \" + file.exists());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "210f5b295e9a10b4f54e57ed6f29871a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "7dad2d86edcd09e4266e43b7304026dc7b0b3db7", "commitAfterChange": "1333ad40debe120f6d8fd5fb5ff36c57ce6b1ccf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testNoClassFile() throws Exception", "signatureAfterChange": "   public void testNoClassFile() throws Exception", "diff": ["+    _model.setResetAfterCompile(false);", "+    ", "+      if (printMessages) System.out.println(\"waiting for test\");", "+    if (printMessages) System.out.println(\"after test\");", "-                 ", "+    ", "+    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3db227b0d3eaebce21833dd91f6bfdad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "    public JavaInterpreter getJavaInterpreter(String name)", "signatureAfterChange": "    public JavaInterpreter getJavaInterpreter(String name)", "diff": ["+     if( printMessages ) System.err.println(\"Getting interpreter data\");", "+     if( printMessages ) System.out.println(\"Getting interpreter instance\");", "+     if( printMessages ) System.out.println(\"returning\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82f51f93ae275a23668595af0e9365c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "6d9f2ce37ba22041a5b2840cffbd0f66339165b6", "commitAfterChange": "b153c43e59717c98f32c67f14d61a00a81016991", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "   final public Expression literal() throws ParseException", "signatureAfterChange": "   final public Expression literal() throws ParseException", "diff": ["+        // if(t.image.equals(\"2147483648\")){t.image = \"-2147483648\";} // Introduced an error with int x = 2147483648", "+", "+", "-        {if (true) return new LongLiteral(t.image,", "-                               filename,", "-                               t.beginLine, t.beginColumn,", "-                               t.endLine,   t.endColumn);}", "+        if(t.image.endsWith(\"L\")) t.image=t.image.substring(0,t.image.length()-1);", "+           {if (true) return new LongLiteral(t.image, filename,", "+                                  t.beginLine, t.beginColumn,", "+                                  t.endLine,   t.endColumn);}", "-        jj_la1[125] = jj_gen;", "+        jj_la1[126] = jj_gen;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96e95b35aa9cd8d7004474aa7259b37f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "1c6afe551331288ca825b92ecb3fda34bf325ee0", "commitAfterChange": "946c9827fd9c7515742a2a4508e6a7ac84a9f5a8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void compileBeforeJUnit(final CompilerListener testAfterCompile, List<OpenDefinitionsDocument> outOfSync)", "signatureAfterChange": "     public void compileBeforeJUnit(final CompilerListener testAfterCompile, List<OpenDefinitionsDocument> outOfSync)", "diff": ["-//      System.err.println(\"compileBeforeJUnit called in listener \" + this);", "+      if (printMessages) System.err.println(\"compileBeforeJUnit called in listener \" + this);", "-//        Utilities.show(\"Calling _compileAll()\");", "+      if (printMessages) System.err.println(\"Calling _compileAll()\");", "-//        Utilities.show(\"Compilation finished\");", "+      if (printMessages) System.err.println(\"Compilation finished\");"]}], "num": 3508}