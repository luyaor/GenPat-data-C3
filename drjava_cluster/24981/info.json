{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9fcb89e4dc0a8b715feb5c00c7ed797", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c09680edbd9185aecbab7e4b3f27994", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public boolean findCharInStmtBeforePos(char findChar, int position)", "signatureAfterChange": "   public boolean findCharInStmtBeforePos(char findChar, int position)", "diff": ["+      String mesg = \"Argument endChar to QuestionExistsCharInStmt must be a char \" +", "+        \"that exists on the current line.\";", "-      throw new UnexpectedException(new", "-                                      IllegalArgumentException(\"Argument endChar to \" +", "-                                                               \"QuestionExistsCharInStmt must be a char \" +", "-                                                               \"that exists on the current line.\"));", "+      throw new UnexpectedException(new IllegalArgumentException(mesg));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d03ad927f39dff3ae9da4c7ec4b59d2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModel.java", "commitBeforeChange": "0d6a1751a06319b8d446186ea0aafba68239ee0c", "commitAfterChange": "50d54a2cc075d489d4814ce780949e6748ba1350", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   private JUnitError _makeJUnitError ( TestFailure tF, String theclass, boolean isError)", "signatureAfterChange": "   private JUnitError _makeJUnitError ( TestFailure tF, String theclass, boolean isError)", "diff": ["-       ", "+    ", "-      tFail.thrownException().toString() : ", "+      tFail.thrownException().toString(): ", "-    return new JUnitError(_file, lineNum, 0, exception,", "-                                 ! (tFail.thrownException() instanceof AssertionFailedError),", "-                                 tcFail.getName());", "+      return new JUnitError(_file, lineNum, 0, exception,", "+                            ! (tFail.thrownException() instanceof AssertionFailedError),", "+                            tcFail.getName(),", "+                            swFail.toString());"]}], "num": 24981}