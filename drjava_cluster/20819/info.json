{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6457fd3d6cc7116a6303293921178b23", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "177815ec276ae8ac85e2da18137e4ff2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "6bdcaa1031d63e5f58edf8d0e2313eac60ac2bdc", "commitAfterChange": "c6ab4cad3515b44035f93fe56438ef0ad4e6d24d", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": "     protected DefinitionsDocument getDocument()", "signatureAfterChange": "     protected DefinitionsDocument getDocument()", "diff": ["+", "+//      Utilities.showDebug(\"getDocument() called on \" + this);", "-      catch(IOException ioe) { ", "-        try { // file has evidently been moved since document was loaded", "-          if (isUntitled()) throw new UnexpectedException(ioe);", "-          _askUserToLocateFile(); ", "-          return _cacheAdapter.getDocument(); // will succeed if user located file", "-        }", "-        catch(IOException e) { throw new UnexpectedException(e); }", "+      catch(IOException ioe) {", "+//        Utilities.showDebug(\"getDocument() failed for \" + this);", "+        try {", "+          _notifier.documentNotFound(this, _file);", "+          if (! isUntitled())  ", "+            _documentNavigator.refreshDocument(this, _file.getCanonicalFile().getParent());", "+          else throw new UnexpectedException(ioe); // Is this line reachable?", "+          ", "+        } catch(Throwable t) { throw new UnexpectedException(t); }", "+        //  System.out.println(\"DefaultGlobalModel: 1432: IOException should be handled by box that fixes everything.\");", "-    }", "+      return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be9e280ada786c0a3e61aee94262d203", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 191, "signatureBeforeChange": "     protected DefinitionsDocument getDocument()", "signatureAfterChange": "     protected DefinitionsDocument getDocument()", "diff": ["-//      if (SHOW_GETDOC) { // SHOW_GETDOC's definitions is at _openFiles(...)", "-//        System.out.println(this);", "-//        Exception e = new Exception(\"\");", "-//        System.out.println(\"  \" + e.getStackTrace()[1]);", "-//        System.out.println(\"  \" + e.getStackTrace()[2]);", "-//        System.out.println(\"  \" + e.getStackTrace()[3]);", "-//        System.out.println(\"  \" + e.getStackTrace()[4]);", "-      //      }", "+", "+//      Utilities.showDebug(\"getDocument() called on \" + this);", "-      catch(IOException e) {", "-//        new Exception(\"* get document IOEx\").printStackTrace(System.out);", "+      catch(IOException ioe) {", "+//        Utilities.showDebug(\"getDocument() failed for \" + this);", "-          _notifier.documentNotFound(this,_file);", "-          if (!isUntitled()) ", "+          _notifier.documentNotFound(this, _file);", "+          if (! isUntitled())  ", "-          else return _cacheAdapter.getDocument();", "+          else throw new UnexpectedException(ioe); // Is this line reachable?", "-        } catch(IOException ioe) { throw new UnexpectedException(ioe); }", "+        } catch(Throwable t) { throw new UnexpectedException(t); }"]}], "num": 20819}