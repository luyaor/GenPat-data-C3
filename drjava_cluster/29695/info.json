{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "353d9b16536c94c9e0cb0f3318626300", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "469e1fc839383bddbc1751ae97eff8bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilities.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public static boolean hasVarArgsCompatibleSignatures(Class[] a1, Class[] a2, TigerUsage tu)", "signatureAfterChange": "   public static boolean hasVarArgsCompatibleSignatures(Class<?>[] a1, Class<?>[] a2, TigerUsage tu)", "diff": ["-  public static boolean hasVarArgsCompatibleSignatures(Class[] a1, Class[] a2, TigerUsage tu) {", "+  public static boolean hasVarArgsCompatibleSignatures(Class<?>[] a1, Class<?>[] a2, TigerUsage tu) {", "-    Class lastElt1 = a1[lastIdx1];", "+    Class<?> lastElt1 = a1[lastIdx1];", "-      Class varArgsType = lastElt1.getComponentType(); // Get the element type of the array", "+      Class<?> varArgsType = lastElt1.getComponentType(); // Get the element type of the array"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9790ce9c0f7256addd4ada4717deeadf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": "   private void checkCastStaticRules(Class tc, Class ec, CastExpression castExp)", "signatureAfterChange": "   private void checkCastStaticRules(Class<?> tc, Class<?> ec, CastExpression castExp)", "diff": ["-  private void checkCastStaticRules(Class tc, Class ec, CastExpression castExp) {", "+  private void checkCastStaticRules(Class<?> tc, Class<?> ec, CastExpression castExp) {", "-            Class tec = tc.getComponentType();", "-            Class eec = ec.getComponentType();", "+            Class<?> tec = tc.getComponentType();", "+            Class<?> eec = ec.getComponentType();"]}], "num": 29695}