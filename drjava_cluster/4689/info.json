{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc109c74ad69acc1d95457ed18fc3374", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03937003b6be6c1a1ab114248003ed21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   protected AttachingConnector _getAttachingConnector()     throws DebugException", "signatureAfterChange": "   protected AttachingConnector _getAttachingConnector()     throws DebugException", "diff": ["-    throws DebugException", "-  {", "+    throws DebugException {", "-    List<AttachingConnector> connectors = vmm.attachingConnectors();  // Added parameterization <AttachingConnector>. JDK 1.5 will eliminate this check", "+    List<AttachingConnector> connectors = vmm.attachingConnectors();  // Warning expected; Connector not yet generified.", "-    java.util.Iterator<AttachingConnector> iter = connectors.iterator();", "-    while (iter.hasNext()) {", "-      AttachingConnector conn = iter.next();", "-      if (conn.name().equals(\"com.sun.jdi.SocketAttach\")) {", "-        connector = conn;", "-      }", "+    for (AttachingConnector conn: connectors) {", "+      if (conn.name().equals(\"com.sun.jdi.SocketAttach\"))  connector = conn;", "-    if (connector == null) {", "-      throw new DebugException(\"Could not find an AttachingConnector!\");", "-    }", "+    if (connector == null) throw new DebugException(\"Could not find an AttachingConnector!\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4139ee6ecee8a9929e6b189df09288a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 8, "signatureBeforeChange": "   private void _attachToVM() throws DebugException", "signatureAfterChange": "   private void _attachToVM() throws DebugException", "diff": ["-    // Blocks until interpreter has registered itself", "+    // Blocks until the interpreter has registered if hasn't already", "-    VirtualMachineManager vmm = Bootstrap.virtualMachineManager();", "-    List connectors = vmm.attachingConnectors();", "-    AttachingConnector connector = null;", "-    java.util.Iterator iter = connectors.iterator();", "-    while (iter.hasNext()) {", "-      AttachingConnector conn = (AttachingConnector)iter.next();", "-      if (conn.name().equals(\"com.sun.jdi.SocketAttach\")) {", "-        connector = conn;", "-      }", "-    }", "-    if (connector == null) {", "-      throw new DebugException(\"Could not find an AttachingConnector!\");", "-    }", "+    AttachingConnector connector = _getAttachingConnector();", "-    // get the singleton instance of the interpreterJVM", "-    List referenceTypes = _vm.classesByName(\"edu.rice.cs.drjava.model.repl.newjvm.InterpreterJVM\");", "-    if (referenceTypes.size() <= 0) {", "+    _interpreterJVM = _getInterpreterJVMRef();", "+  }", "-    ReferenceType rt = (ReferenceType)referenceTypes.get(0);", "-    Field field = rt.fieldByName(\"ONLY\");", "-    _interpreterJVM = (ObjectReference)rt.getValue(field);"]}], "num": 4689}