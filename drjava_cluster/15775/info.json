{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e66ee93ce1dce2dc93f158f743c7bccc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "358ab11c497954694464a664e311ed16", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 68, "signatureBeforeChange": "     public Object forExceptionResult(ExceptionResult that)", "signatureAfterChange": "     public Void forException(String msg)", "diff": ["-     */", "-    public Object forExceptionResult(ExceptionResult that) { /**/", "-      _interactionsModel.replThrewException(that.getExceptionClass(), that.getExceptionMessage(), that.getStackTrace(),", "-                                            that.getSpecialMessage());", "+    /** Calls replThrewException() */", "+    public Void forException(String msg) {", "+      // TODO: restore location/syntax highlighting functionality", "+      _interactionsModel.replThrewException(msg);", "+      return null;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "467450dedeab4a39d654f75f0be76acb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 25, "signatureBeforeChange": "       public Object forExceptionResult(ExceptionResult that)", "signatureAfterChange": "              public Void forException(String msg)", "diff": ["-      }", "-      public Object forExceptionResult(ExceptionResult that) {", "-        synchronized(_testLock) {", "-          exceptionClassBuf = that.getExceptionClass();", "-          exceptionTraceBuf = that.getStackTrace();", "-          exceptionMsgBuf = that.getExceptionMessage();", "-", "-          //System.out.println(\"notify threw\");", "-          _testLock.notify();", "-          return null;", "-        }", "-      }", "+      public Void forException(String msg) {", "+        exceptionMsgBuf = msg;", "+        return null;", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72fae0e428e7c4db5b801387f9d0ebee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "       public Object forVoidResult(VoidResult that)", "signatureAfterChange": "       public Void forCharValue(Character c)", "diff": ["-    private class TestResultHandler implements InterpretResultVisitor<Object> {", "-      public Object forVoidResult(VoidResult that) {", "-        synchronized(_testLock) {", "-          voidReturnFlag = true;", "-          _log.log(\"NewJVMTest: void returned by interpretResult callback\");", "-          _testLock.notify();", "-          return null;", "-        }", "+      public Void forStringValue(String s) { handleValueResult('\"' + s + '\"'); return null; }", "+      public Void forCharValue(Character c) { handleValueResult(\"'\" + c + \"'\"); return null; }"]}], "num": 15775}