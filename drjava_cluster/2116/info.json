{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85cc61a8d94076afd5fa86c5d11bd59b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf2ebab6ced51be243332da8dbf426f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "commitAfterChange": "f631b97f7a46e37b22216cbc1b865ac25185f25a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void interpretCurrentInteraction()", "signatureAfterChange": "   public void interpretCurrentInteraction()", "diff": ["-      try {", "+//      try {", "-        toEval = _interactionsProcessor.preProcess(toEval);", "+//        toEval = _interactionsProcessor.preProcess(toEval);", "-        _prepareToInterpret(text);", "-        interpret(toEval);", "-      }", "-      catch (ParseException pe) {", "-        // A ParseException indicates a syntax error in the input window", "-        String errMsg = pe.getInteractionsMessage();", "-//        javax.swing.JOptionPane.showMessageDialog(null, \"ParseException:\\n\" + errMsg);", "-        if (errMsg.endsWith(\"<EOF>\\\"\")) {", "-          _notifyInteractionIncomplete();", "-        }", "-        else {", "-          _prepareToInterpret(text);", "-          replReturnedSyntaxError(errMsg, text, pe.getBeginLine(),", "-                                  pe.getBeginColumn(), pe.getEndLine(), pe.getEndColumn());", "-        }", "-      }", "-      catch (TokenMgrError tme) {", "-        // A TokenMgrError indicates some lexical difficulty with input.", "-//        javax.swing.JOptionPane.showMessageDialog(null, \"TokenMgrError:\\n\" + tme.getMessage());", "-        _prepareToInterpret(text);", "-        int row = tme.getErrorRow();", "-        int col = tme.getErrorColumn() - 1;", "-        replReturnedSyntaxError(tme.getMessage(), text, row, col, row, col);", "-      }", "+      ", "+////      boolean parserpassed = true;", "+////      JavaInterpreter interpreter = new DynamicJavaAdapter();", "+////      try {", "+////        interpreter.parse(toEval);", "+////      } catch(Throwable t){", "+////        parserpassed = false;", "+////      }", "+////", "+////      if(parserpassed) {", "+      _prepareToInterpret(text);", "+      interpret(toEval);", "+////      }", "+      ", "+//      }", "+//      catch (ParseException pe) {", "+//        // A ParseException indicates a syntax error in the input window", "+//        String errMsg = pe.getInteractionsMessage();", "+//        //javax.swing.JOptionPane.showMessageDialog(null, \"ParseException:\\n\" + errMsg);", "+//        if (errMsg.endsWith(\"<EOF>\\\"\")) {", "+//          _notifyInteractionIncomplete();", "+//        }", "+//        else {", "+//          _prepareToInterpret(text);", "+//          replReturnedSyntaxError(errMsg, text, pe.getBeginLine(),", "+//                                  pe.getBeginColumn(), pe.getEndLine(), pe.getEndColumn());", "+//        }", "+//      }", "+//      catch (TokenMgrError tme) {", "+//        // A TokenMgrError indicates some lexical difficulty with input.", "+//        //  javax.swing.JOptionPane.showMessageDialog(null, \"TokenMgrError:\\n\" + tme.getMessage());", "+//        _prepareToInterpret(text);", "+//        int row = tme.getErrorRow();", "+//        int col = tme.getErrorColumn() - 1;", "+//        replReturnedSyntaxError(tme.getMessage(), text, row, col, row, col);", "+//      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3d3b27f35c574044257b9b1e1386dd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "68370a69757582d1f4c25368b4758bfbfb8b4171", "commitAfterChange": "28ac8c168c57a4d2c1b2d9f0939cd3a5f7f7c65c", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": "   public void openFolder(File dir, boolean rec) throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   public void openFolder(File dir, boolean rec) throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["-    Log l = new Log(\"AbstractGlobalModel_openFolder.log\", false);", "-    l.log(String.format(\"Recursive Searching %s\", (rec ? \"Enabled\" : \"Disabled\")));", "-    ", "-      //HACK: the dot needs to be removed, otherwise", "-      //IOUtils.fileExtensionPredicate() will try to match ..<ext>", "-      if (extension.startsWith(\".\")) {", "-       extension = extension.substring(1);", "-       l.log(String.format(\"Extension tweaked to %s\", extension));", "-      }", "-", "-      l.log(String.format(\"Searching %s for *%s\", dir.getAbsolutePath(), extension));", "-      //What did we find?", "-      l.log(String.format(\"Found %d file(s):\", files.size()));", "-      for (File f : files) {", "-       l.log(f.getAbsolutePath()); ", "-      }", "-      "]}], "num": 2116}