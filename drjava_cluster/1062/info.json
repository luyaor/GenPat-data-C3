{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e2fa6440b3b4c4b74a50ac1a728a046", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "695768df2f34afd3a0e9862076e137f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Void forAbstractMethodDefDoFirst(AbstractMethodDef that)", "signatureAfterChange": "   public Void forAbstractMethodDefDoFirst(AbstractMethodDef that)", "diff": ["-  /*Make sure that this abstract method def is declared to be abstract*/", "+  /* Make sure that this abstract method def is declared to be abstract*/", "-    if (!_classData.hasModifier(\"abstract\")) {", "+    if (! _classData.hasModifier(\"abstract\")) {", "-    ModifiersAndVisibility mav = that.getMav();", "-    String[] modifiers = mav.getModifiers();", "-    // Concrete methods can now be public, private, protected at the Intermediate level.  They still cannot be static.", "-    for (int i = 0; i < modifiers.length; i++) {", "-      if (modifiers[i].equals(\"static\")) {", "-        _addError(\"Static methods cannot be used at the Intermediate level\", that);", "-        break;", "-      }", "-    }", "+//    ModifiersAndVisibility mav = that.getMav();", "+//    String[] modifiers = mav.getModifiers();", "+//    // Concrete methods can now be public, private, protected at the Intermediate level.  They still cannot be static.", "+//    for (int i = 0; i < modifiers.length; i++) {", "+//      if (modifiers[i].equals(\"static\")) {", "+//        _addError(\"Static methods cannot be used at the Intermediate level\", that);", "+//        break;", "+//      }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1cf4b55b67d936300a3df85e3d6d44f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "d63224548fc8865b0ab459659b530c0d39d21fc7", "commitAfterChange": "d8eee91536a378507eadfac2f106d06ff2703bff", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Void forAbstractMethodDefDoFirst(AbstractMethodDef that)", "signatureAfterChange": "   public Void forAbstractMethodDefDoFirst(AbstractMethodDef that)", "diff": ["-  /* Make sure that this abstract method def is declared to be abstract*/", "+  /** Ignore AbstractMake sure that this abstract method def is declared to be abstract. */", "-    if (! _classData.hasModifier(\"abstract\")) {", "-      _addError(\"Abstract methods can only be declared in abstract classes\", that);", "-    }", "+", "-//    // Concrete methods can now be public, private, protected at the Intermediate level.  They still cannot be static.", "-//    for (int i = 0; i < modifiers.length; i++) {", "-//      if (modifiers[i].equals(\"static\")) {", "-//        _addError(\"Static methods cannot be used at the Intermediate level\", that);", "-//        break;", "-//      }", "-//    }", "+    if (! _classData.isInterface() && ! _classData.hasModifier(\"abstract\")) { // interfaces not yet marked abstract", "+      _addError(\"Abstract methods can only be declared in abstract classes\", that);", "+    }"]}], "num": 1062}