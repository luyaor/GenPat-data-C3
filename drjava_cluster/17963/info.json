{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f282f1a3ecff744edc88e6a815598c2b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01dfac90b256e04e9a8b53ca43e18594", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MethodDeclaration.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public MethodDeclaration(ModifierSet mods, TypeName type, String name,                            List<FormalParameter> params, List<? extends ReferenceTypeName> excepts, BlockStatement body)", "signatureAfterChange": "   public MethodDeclaration(ModifierSet mods, TypeName type, String name,                            List<FormalParameter> params, List<? extends ReferenceTypeName> excepts, BlockStatement body)", "diff": ["-    this(mods, type, name, params, excepts, body, SourceInfo.NONE);", "+    this(mods, Option.<List<TypeParameter>>none(), type, name, params, excepts, body, SourceInfo.NONE);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0435073c85662d53a7e7ae078f1ce45d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ConstructorDeclaration.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ConstructorDeclaration(ModifierSet mods, String name,                                 List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                 ConstructorCall eci, List<Node> stmts)", "signatureAfterChange": "   public ConstructorDeclaration(ModifierSet mods, String name,                                 List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                 ConstructorCall eci, List<Node> stmts)", "diff": ["-    this(mods, name, params, excepts, eci, stmts, SourceInfo.NONE);", "+    this(mods, Option.<List<TypeParameter>>none(), name, params, excepts, eci, stmts, SourceInfo.NONE);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b62f4cd8e5d8acb9bdc1729d2e82a60", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SimpleAllocation.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args)", "signatureAfterChange": "   public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args)", "diff": ["-  public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args) {", "-    this(tp, args, SourceInfo.NONE);", "+  public SimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args) {", "+    this(Option.<List<TypeName>>none(), tp, args, SourceInfo.NONE);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "760cf3fc16dba2eb377a51ed88c35fb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/StaticMethodCall.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public StaticMethodCall(TypeName typ, String mn, List<? extends Expression> args)", "signatureAfterChange": "   public StaticMethodCall(TypeName typ, String mn, List<? extends Expression> args)", "diff": ["-    this(typ, mn, args, SourceInfo.NONE);", "+    this(typ, Option.<List<TypeName>>none(), mn, args, SourceInfo.NONE);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79eedb62cd59554af11bc1d453075f10", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SuperMethodCall.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public SuperMethodCall(Option<String> cn, String mn, List<? extends Expression> args)", "signatureAfterChange": "      public SuperMethodCall(Option<String> cn, String mn, List<? extends Expression> args)", "diff": ["+  ", "-    this(cn, mn, args, SourceInfo.NONE);", "+    this(cn, Option.<List<TypeName>>none(), mn, args, SourceInfo.NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2a9b7623c5c1ad31a577d1100c2fb95", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InterfaceDeclaration.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public InterfaceDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, List<Node> body)", "signatureAfterChange": "   public InterfaceDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, List<Node> body)", "diff": ["-    this(mods, name, impl, body, SourceInfo.NONE);", "+    this(mods, name, Option.<List<TypeParameter>>none(), impl, body, SourceInfo.NONE);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c93f752c5667dcca8fb5f9f59aa5e1ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ClassDeclaration.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ClassDeclaration(ModifierSet mods, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body)", "signatureAfterChange": "   public ClassDeclaration(ModifierSet mods, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body)", "diff": ["-    this(mods, name, ext, impl, body, SourceInfo.NONE);", "+    this(mods, name, Option.<List<TypeParameter>>none(), ext, impl, body, SourceInfo.NONE);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc6ee75aa766f18364c847ba52f67fa6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/AnonymousAllocation.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public AnonymousAllocation(ReferenceTypeName tp, List<? extends Expression> args, List<Node> memb)", "signatureAfterChange": "   public AnonymousAllocation(ReferenceTypeName tp, List<? extends Expression> args, List<Node> memb)", "diff": ["-    this(tp, args, memb, SourceInfo.NONE);", "+    this(Option.<List<TypeName>>none(), tp, args, memb, SourceInfo.NONE);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d81aff71c51f4f88a38106217540dcd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ObjectMethodCall.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args)", "signatureAfterChange": "   public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args)", "diff": ["-    this(exp, mn, args, SourceInfo.NONE);", "+    this(exp, Option.<List<TypeName>>none(), mn, args, SourceInfo.NONE);"]}], "num": 17963}