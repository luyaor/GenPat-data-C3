{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2cea0d36c809c37a04bc48bf5b6e37ce", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "912ef97f7eaa85d386cc6eebadd6f212", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/ConcreteRegionManager.java", "commitBeforeChange": "de413eda4232899a577fad80816630301e25a4de", "commitAfterChange": "1510cae783655f3e20fbad13671dbf97008c3ec2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void removeRegion(final R region)", "signatureAfterChange": "   public void removeRegion(final R region)", "diff": ["-    // if we're removing the current region, select a more recent region, if available", "-    // if a more recent region is not available, select a less recent region, if available", "-    // if a less recent region is not available either, set to null", "-    final R current = _current; // so we can verify if _current got changed", "+//    System.err.println(\"ODD for region \" + region + \" = \" + doc);", "+    System.err.println(\"doc regions for \" + doc + \" = \" + docRegions);", "-    ", "-    // only notify if the region was actually added", "+", "+    // only notify if the region was actually removed"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb7e40779a37f03dbd6e253e20f8d329", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "d9483f6c228cd09f3431ad6b50a3d96bdaf83832", "commitAfterChange": "f998596e58db467638fd2c5025aacbfb31d4199f", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 234, "signatureBeforeChange": "     protected void shrinkManager()", "signatureAfterChange": "     protected void shrinkManager()", "diff": ["-    /** Remove regions if there are more than the maximum number allowed. */", "+    /** Remove regions if there are more than the maximum number allowed. Typically used to remove one region. */", "-      if (_maxSize>0) {", "-        while(_regions.size()>_maxSize) {", "+      if (_maxSize > 0) {", "+        int size;", "+        while ((size = _regions.size()) > _maxSize) {", "-          if (index<=_regions.size()/2) {", "-            // in first half, remove last element", "-            removeRegion(_regions.lastElement());", "+          if (index <= (size - 1)/2) {", "+            // in first half, remove last element; distinct from index unless _maxSize = 1", "+            _regions.remove(size - 1);", "-            // in second half, remove first element", "-            removeRegion(_regions.firstElement());", "+            // in second half, remove first element; distinct from index", "+            _regions.remove(0);"]}], "num": 2870}