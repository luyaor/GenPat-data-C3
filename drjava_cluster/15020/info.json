{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef7e2e790a4ab0fdb7d2f7d5966f73b1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0404cd34caddf49abf15b236c3fbd1ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public String createUniqueName(String varName)", "signatureAfterChange": "   public String createUniqueName(String varName)", "diff": ["-    VariableData vd = TypeChecker.getFieldOrVariable(varName, this, getSymbolData(), new NullLiteral(JExprParser.NO_SOURCE_INFO), getVars(), true, false);", "+    VariableData vd = TypeChecker.getFieldOrVariable(varName, this, getSymbolData(), new NullLiteral(SourceInfo.NO_INFO), getVars(), true, false);", "-      vd = TypeChecker.getFieldOrVariable(newName, this, getSymbolData(), new NullLiteral(JExprParser.NO_SOURCE_INFO), getVars(), true, false);", "+      vd = TypeChecker.getFieldOrVariable(newName, this, getSymbolData(), new NullLiteral(SourceInfo.NO_INFO), getVars(), true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a33a24cdc77ee4f8a5e61d0012aae7b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 64, "signatureBeforeChange": "          public void testGetSymbolData()", "signatureAfterChange": "          public void testGetSymbolData()", "diff": ["-      assertEquals(\"Should get sd from the Symboltable.\", sd, _btc.getSymbolData(\"Object\", new NullLiteral(SourceInfo.NO_INFO), true, true));", "+      assertEquals(\"Should get sd from the Symboltable.\", sd, _btc.getSymbolData(\"java.lang.Object\", new NullLiteral(SourceInfo.NO_INFO), true, true));", "-      ", "-      _btc.getSymbolData(\"Object\", new NullLiteral(SourceInfo.NO_INFO), true, true);", "+      _btc.getSymbolData(\"java.lang.Object\", new NullLiteral(SourceInfo.NO_INFO), true, true);"]}], "num": 15020}