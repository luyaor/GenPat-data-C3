{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67f6b964c56ea5016ea495a29244a68e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d03b84177eeb3e1c26c007e061f9c12c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a3306545963d95b8e7f45728ebf6e03a4f716f60", "commitAfterChange": "cc830d3cfb835e44d2498e98729c28536d682aad", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public synchronized int getLineStartPos(int pos)", "signatureAfterChange": "   public synchronized int getLineStartPos(int pos)", "diff": ["-    int location = _reduced.absOffset();", "+    // Check cache", "+    String key = \"getLineStartPos:\" + pos;", "+    Integer cached = (Integer) _checkCache(key);", "+    if (cached != null) {", "+      return cached.intValue();", "+    }", "+    ", "+    int location = _currentLocation;", "+      _storeInCache(key, new Integer(DOCSTART));", "-    } else {", "+    }", "+    else {", "+      _storeInCache(key, new Integer(pos - dist));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6659206efe969e1225c0fe890cf25f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a3306545963d95b8e7f45728ebf6e03a4f716f60", "commitAfterChange": "cc830d3cfb835e44d2498e98729c28536d682aad", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public int getLineFirstCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   public int getLineFirstCharPos(int pos) throws BadLocationException", "diff": ["-  public int getLineFirstCharPos(int pos) throws BadLocationException {  ", "+  public int getLineFirstCharPos(int pos) throws BadLocationException {", "+    // Check cache", "+    String key = \"getLineFirstCharPos:\" + pos;", "+    Integer cached = (Integer) _checkCache(key);", "+    if (cached != null) {", "+      return cached.intValue();", "+    }", "+    ", "+        _storeInCache(key, new Integer(startLinePos + walker));", "+    _storeInCache(key, new Integer(endLinePos));"]}], "num": 9804}