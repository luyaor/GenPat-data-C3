{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4157ac44167f03fb3136bd76d534452", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e1cf09a9e93ae7570ac9246322706a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "c3a494eaa49a0afdbb5b72550dfe257e772377ca", "commitAfterChange": "3ed3053f161753fc80182783c4ecd7f0d8aa1ae2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testDoubleOps() throws InterpreterException", "signatureAfterChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testDoubleOps() throws InterpreterException", "diff": ["-    Pair<String,Object>[] cases = new Pair[] {", "+    Pair<String,Object>[] cases = new Pair[]{", "-      Pair.make(\"5.6 < 6.7\", Boolean.valueOf(5.6 < 6.7)),", "+      Pair.make(\"5.6 < 6.7\", (Object) Boolean.valueOf(5.6 < 6.7)),", "-      Pair.make(\"5.6 <= 5.6\", Boolean.valueOf(5.6 <= 5.6)),", "+      Pair.make(\"5.6 <= 5.6\", (Object) Boolean.valueOf(5.6 <= 5.6)),", "-      Pair.make(\"5.6 > 4.5\", Boolean.valueOf(5.6 > 4.5)),", "+      Pair.make(\"5.6 > 4.5\", (Object) Boolean.valueOf(5.6 > 4.5)),", "-      Pair.make(\"5.6 >= 56.4\", Boolean.valueOf(5.6 >= 56.4)),", "+      Pair.make(\"5.6 >= 56.4\", (Object) Boolean.valueOf(5.6 >= 56.4)),", "-      Pair.make(\"5.4 == 5.4\", Boolean.valueOf(5 == 5)),", "+      Pair.make(\"5.4 == 5.4\", (Object) Boolean.valueOf(5 == 5)),", "-      Pair.make(\"5.5 != 5.5\", Boolean.valueOf(5 != 5)),", "+      Pair.make(\"5.5 != 5.5\", (Object) Boolean.valueOf(5 != 5)),", "-      Pair.make(\" + 5.6\", new Double(+5.6)),", "+      Pair.make(\" + 5.6\", (Object) new Double(+5.6)),", "-      Pair.make(\"-5.6\", new Double(-5.6)),", "+      Pair.make(\"-5.6\", (Object) new Double(-5.6)),", "-      Pair.make(\"5.6 * 4.5\", new Double(5.6*4.5)),", "+      Pair.make(\"5.6 * 4.5\", (Object) new Double(5.6*4.5)),", "-      Pair.make(\"5.6 / 3.4\", new Double(5.6/3.4)),", "+      Pair.make(\"5.6 / 3.4\", (Object) new Double(5.6/3.4)),", "-      Pair.make(\"5.6 % 3.4\", new Double(5.6%3.4)),", "+      Pair.make(\"5.6 % 3.4\", (Object) new Double(5.6%3.4)),", "-      Pair.make(\"5.6 + 6.7\", new Double(5.6 + 6.7)),", "+      Pair.make(\"5.6 + 6.7\", (Object) new Double(5.6 + 6.7)),", "-      Pair.make(\"4.5 - 3.4\", new Double(4.5 - 3.4)),", "+      Pair.make(\"4.5 - 3.4\", (Object) new Double(4.5 - 3.4)),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d952ec604e9ad53eb522c358e84bdc5e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "c3a494eaa49a0afdbb5b72550dfe257e772377ca", "commitAfterChange": "3ed3053f161753fc80182783c4ecd7f0d8aa1ae2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testIntegerOps() throws InterpreterException", "signatureAfterChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testIntegerOps() throws InterpreterException", "diff": ["-      Pair.make(\"5+6\", new Integer(5 + 6)),", "+      Pair.make(\"5+6\", (Object) new Integer(5 + 6)),", "-      Pair.make(\"6-5\", new Integer(6 - 5)),", "+      Pair.make(\"6-5\", (Object) new Integer(6 - 5)),", "-      Pair.make(\"6*5\", new Integer(6*5)),", "+      Pair.make(\"6*5\", (Object) new Integer(6*5)),", "-      Pair.make(\"6/5\", new Integer(6/5)),", "+      Pair.make(\"6/5\", (Object) new Integer(6/5)),", "-      Pair.make(\"6%5\", new Integer(6%5)),", "+      Pair.make(\"6%5\", (Object) new Integer(6%5)),", "-      Pair.make(\"6&5\", new Integer(6 & 5)),", "+      Pair.make(\"6&5\", (Object) new Integer(6 & 5)),", "-      Pair.make(\"6 | 5\", new Integer(6 | 5)),", "+      Pair.make(\"6 | 5\", (Object) new Integer(6 | 5)),", "-      Pair.make(\"6^5\", new Integer(6 ^ 5)),", "+      Pair.make(\"6^5\", (Object) new Integer(6 ^ 5)),", "-      Pair.make(\"~6\", new Integer(~6)),", "+      Pair.make(\"~6\", (Object) new Integer(~6)),", "-      Pair.make(\" + 5\", new Integer(+5)),", "+      Pair.make(\" + 5\", (Object) new Integer(+5)),", "-      Pair.make(\"-5\", new Integer(-5)),", "+      Pair.make(\"-5\", (Object) new Integer(-5)),", "-      Pair.make(\"400 << 5\", new Integer(400 << 5)),", "+      Pair.make(\"400 << 5\", (Object) new Integer(400 << 5)),", "-      Pair.make(\"400 >> 5\", new Integer(400 >> 5)),", "+      Pair.make(\"400 >> 5\", (Object) new Integer(400 >> 5)),", "-      Pair.make(\"400 >>> 5\", new Integer(400 >>> 5)),", "+      Pair.make(\"400 >>> 5\", (Object) new Integer(400 >>> 5)),", "-      Pair.make(\"5 < 4\", Boolean.valueOf(5 < 4)),", "+      Pair.make(\"5 < 4\", (Object) Boolean.valueOf(5 < 4)),", "-      Pair.make(\"4 <= 4\", Boolean.valueOf(4 <= 4)), Pair.make(\"4 <= 5\", Boolean.valueOf(4 <= 5)),", "+      Pair.make(\"4 <= 4\", (Object) Boolean.valueOf(4 <= 4)), Pair.make(\"4 <= 5\", (Object) Boolean.valueOf(4 <= 5)),", "-      Pair.make(\"5 > 4\", Boolean.valueOf(5 > 4)), Pair.make(\"5 > 5\", Boolean.valueOf(5 > 5)),", "+      Pair.make(\"5 > 4\", (Object) Boolean.valueOf(5 > 4)), Pair.make(\"5 > 5\", (Object) Boolean.valueOf(5 > 5)),", "-      Pair.make(\"5 >= 4\", Boolean.valueOf(5 >= 4)), Pair.make(\"5 >= 5\", Boolean.valueOf(5 >= 5)),", "+      Pair.make(\"5 >= 4\", (Object) Boolean.valueOf(5 >= 4)), Pair.make(\"5 >= 5\", (Object) Boolean.valueOf(5 >= 5)),", "-      Pair.make(\"5 == 5\", Boolean.valueOf(5 == 5)), Pair.make(\"5 == 6\", Boolean.valueOf(", "-          5 == 6)),", "+      Pair.make(\"5 == 5\", (Object) Boolean.valueOf(5 == 5)), Pair.make(\"5 == 6\", (Object) Boolean.valueOf(5 == 6)),", "-      Pair.make(\"5 != 6\", Boolean.valueOf(5 != 6)), Pair.make(\"5 != 5\", Boolean.valueOf(5 != 5))", "+      Pair.make(\"5 != 6\", (Object) Boolean.valueOf(5 != 6)), Pair.make(\"5 != 5\", (Object) Boolean.valueOf(5 != 5))"]}], "num": 14793}