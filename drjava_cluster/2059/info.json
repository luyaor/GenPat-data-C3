{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1645cda4549afcd787100092510b6a03", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d18a318c218b4d1b3dc3219af22db34", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "c85becb760bfba1d758f97ed5b638fcefd6f6350", "commitAfterChange": "75c6ef317ddc6280ea7699f7367da5542d5fc400", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "signatureAfterChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "diff": ["+        try {", "+          File sourceRoot = doc.getSourceRoot(); // may throw an InvalidPackageException", "+          ", "+          // doc has valid package name; add it to list of open java source doc files", "+          openDocFiles.add(doc.getCanonicalPath());", "-        // doc has valid package name; add it to list of open java source doc files", "-        openDocFiles.add(doc.getCanonicalPath());", "-        ", "-        String packagePath = doc.getPackageName().replace('.', File.separatorChar);", "-        ", "-        // Add (canonical path name for) build directory for doc to classDirs", "-        ", "-        File sourceRoot = doc.getSourceRoot();", "-        File buildRoot = (buildDir == null) ? sourceRoot: buildDir;", "-        ", "-        File classFileDir = new File(IOUtil.attemptCanonicalFile(buildRoot), packagePath);", "-        ", "-        File sourceDir = ", "-          (buildDir == null) ? classFileDir : new File(IOUtil.attemptCanonicalFile(sourceRoot), packagePath);", "-        ", "-        if (! classDirsAndRoots.containsKey(classFileDir)) {", "-          classDirsAndRoots.put(classFileDir, sourceDir);", "+          String packagePath = doc.getPackageName().replace('.', File.separatorChar);", "+          ", "+          // Add (canonical path name for) build directory for doc to classDirs", "+          ", "+          File buildRoot = (buildDir == null) ? sourceRoot: buildDir;", "+          ", "+          File classFileDir = new File(IOUtil.attemptCanonicalFile(buildRoot), packagePath);", "+          ", "+          File sourceDir = ", "+            (buildDir == null) ? classFileDir : new File(IOUtil.attemptCanonicalFile(sourceRoot), packagePath);", "+          ", "+          if (! classDirsAndRoots.containsKey(classFileDir)) {", "+            classDirsAndRoots.put(classFileDir, sourceDir);", "+          }", "+        catch (InvalidPackageException e) { /* Skip the file, since it doesn't have a valid package */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "962222610b37c129890352d64b362720", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "c85becb760bfba1d758f97ed5b638fcefd6f6350", "commitAfterChange": "75c6ef317ddc6280ea7699f7367da5542d5fc400", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "     public void runMain() throws ClassNameNotFoundException, IOException", "signatureAfterChange": "     public void runMain() throws ClassNameNotFoundException, IOException", "diff": ["-      else workDir = getSourceRoot();  // use source root of current document", "-      ", "+      else {", "+        // use source root of current document", "+        try { workDir = getSourceRoot(); }", "+        catch (InvalidPackageException e) { workDir = null; }", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5f53c19044d9678fd3880e1e18c99a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public File[] getSourceRootSet() throws InvalidPackageException", "signatureAfterChange": "   public File[] getSourceRootSet()", "diff": ["-  public File[] getSourceRootSet() throws InvalidPackageException {", "+  public File[] getSourceRootSet() {", "-      OpenDefinitionsDocument doc = (OpenDefinitionsDocument)", "-        _definitionsDocs.get(i);", "-      File root = doc.getSourceRoot();", "+      OpenDefinitionsDocument doc", "+        = (OpenDefinitionsDocument) _definitionsDocs.get(i);", "-      // Don't add duplicate Files, based on path", "-      if (!roots.contains(root)) {", "-        roots.add(root);", "+      try {", "+        File root = doc.getSourceRoot();", "+", "+        // Don't add duplicate Files, based on path", "+        if (!roots.contains(root)) {", "+          roots.add(root);", "+        }", "+      }", "+      catch (InvalidPackageException e) {", "+        // oh well, invalid package statement for this one", "+        // can't add it to roots"]}], "num": 2059}