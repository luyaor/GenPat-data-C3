{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "387969a088e2f353eea2898e32d0e6ed", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "545cf106e65cb67335138022f698532b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public TypeData forCastExpressionOnly(CastExpression that, TypeData type_result, TypeData value_result)", "signatureAfterChange": "   public TypeData forCastExpressionOnly(CastExpression that, TypeData type_result, TypeData value_result)", "diff": ["-    if (type_result == null || value_result == null) {return null;}", "+    if (type_result == null || value_result == null)  return null; ", "-    if (!assertFound(value_result, that) || !assertFound(type_result, that)) {", "-      return null;", "-    }", "+    if (! assertFound(value_result, that) || ! assertFound(type_result, that)) return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e81549e6a7cb102928f4b51acc20f70b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "    public TypeData forSwitchStatementOnly(SwitchStatement that, TypeData test_result, TypeData[] cases_result, boolean sawDefault)", "signatureAfterChange": "    public TypeData forSwitchStatementOnly(SwitchStatement that, TypeData test_result, TypeData[] cases_result, boolean sawDefault)", "diff": ["-     /**If any of the blocks are KEEP_GOING, then the statement does not return.*/", "+     /**If any of the blocks are NOT_FOUND, then the statement does not return.*/", "-       if (cases_result[i] != null && cases_result[i].getSymbolData() == SymbolData.KEEP_GOING) {return null;}", "+       if (cases_result[i] != null && cases_result[i].getSymbolData() == SymbolData.NOT_FOUND) {return null;}"]}], "num": 21101}