{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1eeb53355dc213cd55475fe37fd8a476", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77b73c9cf6e05b151ce7204aff065b06", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "69a380647f3d586f130ea02ad1e8381a390045e3", "commitAfterChange": "739371db1261b11c3be5fd70233012a49b45b7ca", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "     private Type handleBitwiseExpression(BinaryExpression node)", "signatureAfterChange": "     private Type handleBitwiseExpression(BinaryExpression node)", "diff": ["-        ", "-        ", "-        return setType(node, getType(left));", "+        Type result = setType(node, getType(left));", "+        evaluateConstantExpression(node);", "+        return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8567f8e867c4c77215b76ab7863a6b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "69a380647f3d586f130ea02ad1e8381a390045e3", "commitAfterChange": "739371db1261b11c3be5fd70233012a49b45b7ca", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "     @Override public Type visit(AddExpression node)", "signatureAfterChange": "     @Override public Type visit(AddExpression node)", "diff": ["-          return setType(node, TypeSystem.STRING);", "+          setType(node, TypeSystem.STRING);", "+          evaluateConstantExpression(node);", "+          return TypeSystem.STRING;", "-          return setType(node, getType(promoted.first()));", "+          Type result = setType(node, getType(promoted.first()));", "+          evaluateConstantExpression(node);", "+          return result;"]}], "num": 10340}