{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f488b7fbff16e43c409fedd7160af37", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6d2f31e0e8e5dd8a96b00f3890e2216", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "8279bc33117c74621df6401dedd10a0cae247a2c", "commitAfterChange": "ce3350f89c936debb5fbaa8f27f501d1524368cf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "    public void killInterpreter()", "signatureAfterChange": "    public void killInterpreter()", "diff": ["-    synchronized(this) {", "-      if ((_interpreterProcess != null) && (_interpreterJVM != null)) {", "-        try {", "-          _interpreterJVM.exitJVM();", "-        }", "-        catch (RemoteException re) {", "-          // couldn't ask it to quit nicely. be mean and kill", "-          _interpreterProcess.destroy();", "-        }", "-", "-        _interpreterProcess = null;", "-        _interpreterJVM = null;", "-      }", "+    try {", "+      quitSlave();", "+    }", "+    catch (RemoteException re) {", "+      _threwException(re);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b1e5f27f6ab136ae0b968098ccee09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "117b8e1eefe7632ee450aed6c94318fa28bf80a4", "commitAfterChange": "67e7b92991e4e8f9e841666ccb236411356e233e", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 152, "signatureBeforeChange": "   private void _loadProject(ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(ProjectFileIR ir) throws IOException", "diff": ["-    final File buildDir = ir.getBuildDirectory();", "+    final File buildDir = ir.getBuildDirectory ();", "-    final File createJarFile  = ir.getCreateJarFile();", "+    final File createJarFile  = ir.getCreateJarFile ();", "-      try { ", "-        getDebugger().toggleBreakpoint(getDocumentForFile(dbd.getFile()), dbd.getOffset(), dbd.getLineNumber(), ", "-                                       dbd.isEnabled()); ", "+      try {", "+        getDebugger().toggleBreakpoint(getDocumentForFile( dbd.getFile()), dbd.getOffset(), dbd.getLineNumber(),", "+                                       dbd.isEnabled());", "-      try { getDebugger().addWatch(dwd.getName()); }", "+      try { getDebugger().addWatch( dwd.getName()); }", "-    for (final DocumentRegion bm: ir.getBookmarks()) {", "+    for (final DocumentRegion bm: ir.getBookmarks ()) {", "-          public int getEndOffset() { return bm.getEndOffset(); }", "+          public int getEndOffset() { return bm.getEndOffset (); }", "-    // Sets up the filters that cause documents to load in differentnsections of the tree.  The names of these ", "-    // sections are set from the methods such as getSourceBinTitle().  Changing this changes what is considered ", "+    // Sets up the filters that cause documents to load in differentnsections of the tree.  The names of these", "+    // sections are set from the methods such as getSourceBinTitle().  Changing this changes what is considered", "-    List<Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>> l = ", "+    List<Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>> l =", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getSourceBinTitle(), ", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getSourceBinTitle(),", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getAuxiliaryBinTitle(), ", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getAuxiliaryBinTitle(),", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getExternalBinTitle(), ", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getExternalBinTitle(),", "-    IDocumentNavigator<OpenDefinitionsDocument> newNav = ", "+    IDocumentNavigator<OpenDefinitionsDocument> newNav =", "-      if (f.lastModified() > f.getSavedModDate()) f.setSavedModDate(f.lastModified());", "-      if (f.isActive() && active == null) active = f;", "-      else projFiles.add(f);", "+      if (f.lastModified() > f.getSavedModDate()) f.setSavedModDate (f.lastModified());", "+//      if (f.isActive() && active == null) active = f;", "+//      else projFiles.add(f);", "+      projFiles.add(f);", "-      if (f.lastModified() > f.getSavedModDate()) f.setSavedModDate(f.lastModified());", "-      if (f.isActive() && active == null) active = f;", "-      else projFiles.add(f);", "+      if (f.lastModified() > f.getSavedModDate()) f.setSavedModDate (f.lastModified());", "+//      if (f.isActive() && active == null) active = f;", "+//      else projFiles.add(f);", "+      projFiles.add(f);", "-    if (active != null) projFiles.add(active); ", "+    if (active != null) projFiles.add(active);", "-    final List<OpenDefinitionsDocument> projDocs = getProjectDocuments();  // project source files ", "-    ", "+    final List<OpenDefinitionsDocument> projDocs = getProjectDocuments();  // project source files", "+   ", "-    if (! projDocs.isEmpty()) ", "+    if (! projDocs.isEmpty())", "+    //Set active document from project file", "+//    if(active != null) //TEMP", "+//      setActiveDocument(projDocs.get(projDocs.size() - 1));", "+    //OpenDefinitionsDocument.getCanonicalPath()", "+    //search for active document within opendefdocs", "+//    Utilities.show(\"Setting Active Document...\");", "+//    if(active != null) {", "+//      String path = projFiles.get(projFiles.size() - 1).getCanonicalPath();", "+//      Utilities.show(\"Active document path: \" + path);", "+//      for(OpenDefinitionsDocument doc: projDocs) {", "+//        Utilities.show(\"Searching path: \" + doc.getCanonicalPath());", "+//        if(doc.getCanonicalPath().compareTo(path) == 0) {", "+//          setActiveDocument(doc);", "+//          Utilities.show(\"New active document set\");", "+//          break;", "+//        }", "+//      }", "+//    }", "+     ", "-      ((JTreeSortNavigator<?>)_documentNavigator).collapsePaths(ir.getCollapsedPaths());", "+      ((JTreeSortNavigator<?>)_documentNavigator).collapsePaths( ir.getCollapsedPaths());"]}], "num": 4977}