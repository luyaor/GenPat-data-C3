{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "baedf41212ac93daeb04c1d0804f2a20", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217d039b1fc70ba95ad96f3fd2651746", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "e2dfab60fe06b4a75e9a9d17c0a9c2d622def7c7", "commitAfterChange": "9ee7f82d7f7234787f3748460b46ad8c5d1fc967", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     void switchToError(CompilerError error)", "signatureAfterChange": "     void switchToError(CompilerError error)", "diff": ["-      _frame.getCurrentDefPane().removeErrorHighlight();  // hide previous error highlight", "+      SingleDisplayModel model = getModel();", "-      ", "+      DefinitionsPane prevPane = _frame.getCurrentDefPane();", "+      prevPane.removeErrorHighlight();  // hide previous error highlight", "+      OpenDefinitionsDocument prevDoc = prevPane.getOpenDefDocument();", "-          OpenDefinitionsDocument doc = getModel().getDocumentForFile(error.file());", "+          OpenDefinitionsDocument doc = model.getDocumentForFile(error.file());", "-          getModel().setActiveDocument(doc);", "+          if (! prevDoc.equals(doc)) model.setActiveDocument(doc);", "+          else model.refreshActiveDocument();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "516f3438150fb92067a46f943a6c9d7b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileTest.java", "commitBeforeChange": "0c506ac270d6b542eb2c43fb49629be8c2634151", "commitAfterChange": "b79f1fd71b5b5ee0af9a3873de718f0b6e4d7b2c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testClasspathTag() throws Exception", "signatureAfterChange": "      public void testClasspathTag() throws Exception", "diff": ["+    ", "+    File classpath_1 = new File(CLASSPATH_1);", "+    File classpath_2 = new File(CLASSPATH_2);", "+    File classpath_3 = new File(CLASSPATH_3);", "+    ", "-    assertTrue(tag.entries()[0].getAbsolutePath().equals(CLASSPATH_1));", "-    assertTrue(tag.entries()[1].getAbsolutePath().equals(CLASSPATH_2));", "-    assertTrue(tag.entries()[2].getAbsolutePath().equals(CLASSPATH_3));", "+    assertTrue(tag.entries()[0].getAbsolutePath().equals(classpath_1.getAbsolutePath()));", "+    assertTrue(tag.entries()[1].getAbsolutePath().equals(classpath_2.getAbsolutePath()));", "+    assertTrue(tag.entries()[2].getAbsolutePath().equals(classpath_3.getAbsolutePath()));"]}], "num": 21988}