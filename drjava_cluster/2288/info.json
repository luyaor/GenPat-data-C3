{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33fff9fe8a3c2efcbaeed63b69eb5a9e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "450a67ff3109ba8f3f636f71e609edaa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testSuiteEnded(JUnitError[] errors)", "signatureAfterChange": "   public void testSuiteEnded(JUnitError[] errors)", "diff": ["-    if (_isTestInProgress) {", "-      _junitErrorModel = new JUnitErrorModel(errors, _getter, true);", "-      synchronized(this) { // so that it's not called until junitStarted is fired", "-        _isTestInProgress = false;", "-        _notifier.junitEnded();", "-      }", "-    }", "+//    new ScrollableDialog(null, \"DefaultJUnitModel.testSuiteEnded(...) called\", \"\", \"\").show();", "+    _junitErrorModel = new JUnitErrorModel(errors, _getter, true);", "+    _notifier.junitEnded();", "+    synchronized(this) { _testInProgress = false; }", "+//    new ScrollableDialog(null, \"DefaultJUnitModel.testSuiteEnded(...) finished\", \"\", \"\").show();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76c44a2a235c01be3627ebe2de447008", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void nonTestCase(final boolean isTestAll)", "signatureAfterChange": "   public void nonTestCase(final boolean isTestAll)", "diff": ["-    //       The synchronization over _notifier takes care of this problem.", "-    synchronized(this) { ", "+    //       The synchronization using _testInProgress takes care of this problem.", "-      _isTestInProgress = false;", "-      _notifier.junitEnded();", "-    } ", "+      // _notifier.junitEnded();", "+      synchronized (this) { _testInProgress = false;}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a26196cea2f02cdc291331b1252fcf0a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "306d11e581599ee2cff211a0016c863bdb068462", "commitAfterChange": "cea46dd993e521d96771e5cfebb7a88bf25bb742", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testSuiteEnded(JUnitError[] errors)", "signatureAfterChange": "   public void testSuiteEnded(JUnitError[] errors)", "diff": ["-    synchronized(_compilerModel) {", "-      if (_isTestInProgress) {", "-        _junitErrorModel = new JUnitErrorModel(errors, _getter, true);", "-", "-        _isTestInProgress = false;", "-        _notifier.junitEnded();", "-      }", "+    if (_isTestInProgress) {", "+      _junitErrorModel = new JUnitErrorModel(errors, _getter, true);", "+      ", "+      _isTestInProgress = false;", "+      _notifier.junitEnded();"]}], "num": 2288}