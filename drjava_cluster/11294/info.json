{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffb397e12f953c17a8bf1321b98e7255", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a8376db70832f19a334dc831e9e0f9c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 389, "methodNumberAfterChange": 389, "signatureBeforeChange": "\r \r   public void forLabeledContinueStatement(LabeledContinueStatement that)", "signatureAfterChange": "    public void forLabeledContinueStatement(LabeledContinueStatement that)", "diff": ["-\r", "-  public void forLabeledContinueStatement(LabeledContinueStatement that) {\r", "-    forLabeledContinueStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getLabel().visit(this);\r", "-    forLabeledContinueStatementOnly(that);\r", "-  }\r", "+", "+  public void forLabeledContinueStatement(LabeledContinueStatement that) {", "+    forLabeledContinueStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getLabel().visit(this);", "+    forLabeledContinueStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd3a7613a2160a86a162ed9d7d730758", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 387, "methodNumberAfterChange": 387, "signatureBeforeChange": "\r \r   public void forLabeledBreakStatement(LabeledBreakStatement that)", "signatureAfterChange": "    public void forLabeledBreakStatement(LabeledBreakStatement that)", "diff": ["-\r", "-  public void forLabeledBreakStatement(LabeledBreakStatement that) {\r", "-    forLabeledBreakStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getLabel().visit(this);\r", "-    forLabeledBreakStatementOnly(that);\r", "-  }\r", "+", "+  public void forLabeledBreakStatement(LabeledBreakStatement that) {", "+    forLabeledBreakStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getLabel().visit(this);", "+    forLabeledBreakStatementOnly(that);", "+  }"]}], "num": 11294}