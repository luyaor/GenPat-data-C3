{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f84fc884731ae3b431e7a8bfb44bc5e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e3048e04c045775727688687daf998e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public Object visit(IfThenStatement node)", "signatureAfterChange": "   public Node visit(IfThenStatement node)", "diff": ["+   */", "+  public Node visit(IfThenStatement node) {", "+    // Visits the components of this node", "+    Node n = node.getCondition();", "+    Node o = n.acceptVisitor(this);", "+    if (o != null) {", "+      rejectReferenceType(o,n);", "+      node.setCondition((Expression)o);", "+    }", "+    ", "+    n = node.getThenStatement();", "+    o = n.acceptVisitor(this);", "+    if (o != null) {", "+      rejectReferenceType(o,n);", "+      node.setThenStatement(o);", "+    }", "+    return null;", "+  }", "-     */", "-    public Object visit(IfThenStatement node) {", "-        // Visits the components of this node", "-\tNode   n = node.getCondition();", "-        Object o = n.acceptVisitor(this);", "-        if (o != null) {", "-            if (o instanceof ReferenceType) {", "-                throw new ExecutionError(\"malformed.expression\", n);", "-\t    }", "-\t    node.setCondition((Expression)o);", "-        }", "-\t", "-\tn = node.getThenStatement();", "-        o = n.acceptVisitor(this);", "-        if (o != null) {", "-            if (o instanceof ReferenceType) {", "-                throw new ExecutionError(\"malformed.expression\", n);", "-\t    }", "-\t    node.setThenStatement((Node)o);", "-        }", "-        return null;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f434e6be1eb8c5c4c8dabc4abf2006a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "d41b5de79662496f09ec590840d7e35134702a41", "commitAfterChange": "fd26cc12b714205eb66ef1427d78a124c29d57fc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void toggleBreakpoint(OpenDefinitionsDocument doc, int lineNumber)     throws IOException, ClassNotFoundException, DebugException", "signatureAfterChange": "   public void toggleBreakpoint(OpenDefinitionsDocument doc, int lineNumber)     throws IOException, ClassNotFoundException, DebugException", "diff": ["-    /**", "-    BreakpointManager bpManager = (BreakpointManager)_session.getManager(BreakpointManager.class);", "-", "-    _model.saveAllBeforeProceeding(GlobalModelListener.DEBUG_REASON);", "-", "-    if (_model.areAnyModifiedSinceSave()) return; // they cancelled the save.", "-", "-    String className = mapClassName(doc);", "-    if (className == null) {", "-      throw new ClassNotFoundException();", "+    Breakpoint breakpoint = doc.getBreakpointAt(lineNumber);", "+        ", "+    if (breakpoint != null) {", "+      removeBreakpoint( breakpoint);", "-", "-    Iterator i = bpManager.breakpoints(true);", "-    Object o;", "-    ResolvableBreakpoint rbp;", "-    ReferenceTypeSpec rts;", "+    else {", "+      setBreakpoint(doc, lineNumber);", "+    }", "-    while (i.hasNext()) {", "-      o = i.next();", "-      if (o instanceof ResolvableBreakpoint) {", "-        rbp = (ResolvableBreakpoint)o;", "-        rts = rbp.getReferenceTypeSpec();", "-        if (rts.matches(className) &&", "-            rbp instanceof LineBreakpoint &&", "-            ((LineBreakpoint)(rbp)).getLineNumber() == lineNumber) {", "-          // FOUND IT!", "-          removeBreakpoint((LineBreakpoint)rbp, className);", "-          return;", "-        }", "-      }", "-    }", "-", "-    setBreakpoint(className, lineNumber);", "-    */"]}], "num": 12590}