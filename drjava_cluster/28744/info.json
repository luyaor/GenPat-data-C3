{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15344148a3c6b341d51431ce92d9ca01", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "227e3cf944b7a9cd193dbcc8d213c8fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   protected InstanceData tryCatchLeastRestrictiveType(InstanceData tryBlock_result, InstanceData[] catchBlocks_result, InstanceData finallyBlock_result)", "signatureAfterChange": "   protected InstanceData tryCatchLeastRestrictiveType(InstanceData tryBlock_result, InstanceData[] catchBlocks_result, InstanceData finallyBlock_result)", "diff": ["-    if (tryBlock_result == null || tryBlock_result == SymbolData.KEEP_GOING.getInstanceData()) {return finallyBlock_result;}", "+    if (tryBlock_result == null || tryBlock_result == SymbolData.NOT_FOUND.getInstanceData()) {return finallyBlock_result;}", "-      if (catchBlocks_result[i] != SymbolData.KEEP_GOING.getInstanceData() && _isAssignableFrom(catchBlocks_result[i].getSymbolData(), leastRestrictiveType.getSymbolData())) {", "+      if (catchBlocks_result[i] != SymbolData.NOT_FOUND.getInstanceData() && _isAssignableFrom(catchBlocks_result[i].getSymbolData(), leastRestrictiveType.getSymbolData())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0e0dbee25cfd247c838141bc4c82be7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   protected SymbolData getCommonSuperType(SymbolData s1, SymbolData s2)", "signatureAfterChange": "   protected SymbolData getCommonSuperType(SymbolData s1, SymbolData s2)", "diff": ["-    if (s1 == SymbolData.KEEP_GOING && s2 != null) {return SymbolData.KEEP_GOING;}", "-    if (s2 == SymbolData.KEEP_GOING && s1 != null) {return SymbolData.KEEP_GOING;}", "+    if (s1 == SymbolData.NOT_FOUND && s2 != null) {return SymbolData.NOT_FOUND;}", "+    if (s2 == SymbolData.NOT_FOUND && s1 != null) {return SymbolData.NOT_FOUND;}", "-    if (s1 == null && s1 != SymbolData.KEEP_GOING) { return s2; }", "-    if (s2 == null && s1 != SymbolData.KEEP_GOING) {return s1;}", "+    if (s1 == null && s1 != SymbolData.NOT_FOUND) { return s2; }", "+    if (s2 == null && s1 != SymbolData.NOT_FOUND) {return s1;}"]}], "num": 28744}