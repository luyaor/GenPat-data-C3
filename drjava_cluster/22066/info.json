{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf31d16460868e701242c4ee06d10a68", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5515586d412f98fe100700a096d646af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 319, "methodNumberAfterChange": 353, "signatureBeforeChange": "           public StaticMethodInvocation value(DJMethod m, SignatureChecker checker)", "signatureAfterChange": "     protected DelegatingConstructor(DJConstructor delegate)", "diff": ["+                                                      implements DJConstructor {", "+    protected DelegatingConstructor(DJConstructor delegate) { super(delegate); }", "-          new Lambda2<DJMethod, SignatureChecker, StaticMethodInvocation>() {", "-          public StaticMethodInvocation value(DJMethod m, SignatureChecker checker) {", "-            Type returned = erase(m.returnType());", "-            // TODO: Handle the thrown types", "-            return new StaticMethodInvocation(m, returned, checker.typeArguments(), checker.arguments(),", "-                                              m.thrownTypes());", "-          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "629ade1928b6a0c88c965db54021ed6e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 306, "methodNumberAfterChange": 349, "signatureBeforeChange": "           public ObjectMethodInvocation value(DJMethod m, SignatureChecker checker)", "signatureAfterChange": "          public Type returnType()", "diff": ["+    ", "+    public Type returnType() { return substitute(_delegate.returnType(), _sigma); }", "-          new Lambda2<DJMethod, SignatureChecker, ObjectMethodInvocation>() {", "-          public ObjectMethodInvocation value(DJMethod m, SignatureChecker checker) {", "-            Type returned = erase(m.returnType());", "-            // TODO: Handle the thrown types", "-            return new ObjectMethodInvocation(m, returned, makeCast(t, object), checker.typeArguments(), ", "-                                              checker.arguments(), m.thrownTypes());", "-          }"]}], "num": 22066}