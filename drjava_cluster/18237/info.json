{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12ff1933743aaa28f205580d6b900a81", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a3c6c4c839640089a99bbe1f36678ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithSkipComments.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-        if (state.equals(ReducedModelState.INSIDE_LINE_COMMENT)) return false;", "-        if (state.equals(ReducedModelState.INSIDE_BLOCK_COMMENT)) {  // Handle case: ...*/*", "+        if (state.equals(INSIDE_LINE_COMMENT)) return false;", "+        if (state.equals(INSIDE_BLOCK_COMMENT)) {  // Handle case: ...*/*", "-        if (state.equals(ReducedModelState.FREE)) { // Can prefix still fit on the current line?", "+        if (state.equals(FREE)) { // Can prefix still fit on the current line?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f1272060e8c7f4efb714f01c3a763ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6d23d799552cf55313f22433cb12915906b19690", "commitAfterChange": "8a04e8e94a35e432777ebd444cf5fc70868fe9e4", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public int findPrevDelimiter(int pos, char[] delims) throws BadLocationException", "signatureAfterChange": "   public int findPrevDelimiter(int pos, char[] delims) throws BadLocationException", "diff": ["-    ", "+    return findPrevDelimiter(pos, delims, true);", "+  }", "-", "-          if((_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_LINE_COMMENT)) ||", "-             (_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_BLOCK_COMMENT)) ||", "-             (_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_SINGLE_QUOTE)) ||", "-             (_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_DOUBLE_QUOTE))) {", "-\t    // Ignore matching char", "-\t  } else {", "-\t    // Return position of matching char", "-\t    _reduced.move(origLocation - i);", "-\t    return i;", "-\t  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e26be3330e41e5e42dd6a87b301b2f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "611afcaf59528294d37f92105e692c81ac320af5", "commitAfterChange": "8714a43a313a1a0d2ca9cc83816dab7a08ff011b", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public int findCharOnLine(int pos, char findChar)", "signatureAfterChange": "   public int findCharOnLine(int pos, char findChar)", "diff": ["+    ", "+    // Move to start of line", "+    /*", "+    _reduced.move(lineStart - here);", "+    int reducedPos = lineStart;", "+    int prevI = 0;", "+    */", "+    ", "-      this.getReduced().move(i + lineStart - here);", "+      int matchIndex = i + lineStart;", "+      _reduced.move(matchIndex - here);", "+      //int dist = i - prevI;", "+      //_reduced.move(dist);", "+      //reducedPos = reducedPos + dist;", "-      if (!this.getReduced().getStateAtCurrent().equals(ReducedModelState.FREE)) {", "+      if (!_reduced.getStateAtCurrent().equals(ReducedModelState.FREE)) {", "-        this.getReduced().move(here - (i + lineStart));", "-        _storeInCache(key, new Integer(i + lineStart));", "-        return (i + lineStart);", "+        //_reduced.move(here - reducedPos);", "+        _reduced.move(here - matchIndex);", "+        _storeInCache(key, new Integer(matchIndex));", "+        return matchIndex;", "-      this.getReduced().move(here - (i + lineStart));", "+      _reduced.move(here - matchIndex);", "+      ", "+      //prevI = i;", "+    ", "+    //_reduced.move(here - reducedPos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f865688c07903458b1ded01ae7f29ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "0d293f065df295b40875d176fa985aae8404680f", "commitAfterChange": "1cb762451f589947c585a2a219ca59cd916faaa1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public int getFirstNonWSCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   public int getFirstNonWSCharPos(int pos) throws BadLocationException", "diff": ["-        // Return position of matching char", "-        _reduced.move(origLocation - i);", "-        return i;", "+\tif((_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_LINE_COMMENT)) ||", "+\t   (_reduced.getStateAtCurrent().equals(ReducedModelState.INSIDE_BLOCK_COMMENT))) {", "+\t  // Ignore matching char", "+\t} else { ", "+\t  if(_isStartOfComment(text, i - pos)) {", "+\t    // Move i past the start of comment characters", "+\t    // and continue searching", "+\t    i = i + 1;", "+\t    _reduced.move(1);", "+\t  } else {", "+\t  // Return position of matching char", "+\t  _reduced.move(origLocation - i);", "+\t  return i;", "+\t  }", "+\t}", "+\t_reduced.move(pos - i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfb94d1cc83d45d83af4b0ef93ef45e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "8b24a954c4ca31d0bfd4e6cf29968bdfd85074dd", "commitAfterChange": "7a16360ed3db92a5068288b3b626cc549d236342", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public int findCharOnLine(int pos, char findChar)", "signatureAfterChange": "   public int findCharOnLine(int pos, char findChar)", "diff": ["-      if((this.getReduced().getStateAtCurrent().equals(ReducedModelState.INSIDE_LINE_COMMENT)) ||", "-         (this.getReduced().getStateAtCurrent().equals(ReducedModelState.INSIDE_BLOCK_COMMENT)) ||", "-         (this.getReduced().getStateAtCurrent().equals(ReducedModelState.INSIDE_SINGLE_QUOTE)) ||", "-         (this.getReduced().getStateAtCurrent().equals(ReducedModelState.INSIDE_DOUBLE_QUOTE))) {", "-           // Ignore matching char", "-         } else {", "-           // Return position of matching char", "-           this.getReduced().move(reducedAbsOffset - (i + lineStart));", "-           return (i + lineStart);", "-         }", "+      if (!this.getReduced().getStateAtCurrent().equals(ReducedModelState.FREE)) {", "+        // Ignore matching char", "+      } else {", "+        // Return position of matching char", "+        this.getReduced().move(reducedAbsOffset - (i + lineStart));", "+        return (i + lineStart);", "+      }"]}], "num": 18237}