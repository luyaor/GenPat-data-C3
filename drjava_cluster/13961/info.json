{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b3fed570338e19cfb67a8c183a53a780", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0032c9685111b4e967876f1a828f22c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 321, "methodNumberAfterChange": 324, "signatureBeforeChange": "     public void optionChanged (OptionEvent<Vector<File>> oce)", "signatureAfterChange": "     public void optionChanged (OptionEvent<Vector<File>> oce)", "diff": ["-   private class ExtraClasspathOptionListener implements OptionListener<Vector<File>> {", "+  private class ExtraClasspathOptionListener implements OptionListener<Vector<File>> {", "-      if(cp!=null) {", "-        Enumeration<File> en = cp.elements();", "-        while(en.hasMoreElements()) {", "-        // this forwards directly to InterpreterJVM.addClassPath(String)", "-          try{", "-            _interactionsModel.addExtraClassPath(en.nextElement().toURL());", "-          }catch(MalformedURLException murle){", "-            // dont' add it", "+      if (cp != null) {", "+        for (File f: cp) {", "+          // this forwards directly to InterpreterJVM.addClassPath(String)", "+          try {", "+            _interactionsModel.addExtraClassPath(f.toURL());", "+          catch(MalformedURLException murle) { /* dont' add it */  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57c35d459a44aa033d01360ae720b326", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "5cb9931cd4d17d4bcf0e028e2763a314647f8344", "commitAfterChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public Void visit(SwitchStatement node)", "signatureAfterChange": "   public Void visit(SwitchStatement node)", "diff": ["-    Iterator it = node.getBindings().iterator();", "-    while (it.hasNext()) {", "-      ((Node)it.next()).acceptVisitor(this);", "+    for (Node n : node.getBindings()) {", "+      n.acceptVisitor(this);"]}], "num": 13961}