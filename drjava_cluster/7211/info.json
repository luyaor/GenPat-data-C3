{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "001646ccac3c9565a8d4e045239005eb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08da6b58800421d058e600f03bb76797", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "2e642f610914e71dfbf07fa65ccdb41022417e57", "commitAfterChange": "2428598fcac67ca69192eb4799bd933be0f3e972", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   private void _setupJUnitPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupJUnitPanel(ConfigPanel panel)", "diff": ["+    final BooleanOptionComponent junitLocEnabled =", "+      new BooleanOptionComponent(OptionConstants.JUNIT_LOCATION_ENABLED, \"Use external JUnit\", this,", "+                                 \"<html>If this is enabled, DrJava will use the JUnit configured<br>\"+", "+                                 \"below under 'JUnit/ConcJUnit Location'. If it is disabled,<br>\"+", "+                                 \"DrJava will use the JUnit that is built-in.</html>\", false)", "+      .setEntireColumn(true);", "+    addOptionComponent(panel, junitLocEnabled);", "+    final BooleanOptionComponent rtConcJUnitLocEnabled =", "+      new BooleanOptionComponent(OptionConstants.RT_CONCJUNIT_LOCATION_ENABLED, \"Use ConcJUnit Runtime\", this,", "+                                 \"<html>If this is enabled, DrJava will use the ConcJUnit Runtime<br>\"+", "+                                 \"configured below under 'ConcJUnit Runtime Location'. If it is<br>\"+", "+                                 \"disabled, DrJava will use the normal Java runtime.</html>\", false)", "+      .setEntireColumn(true);", "+    addOptionComponent(panel, rtConcJUnitLocEnabled);", "-        if ((f==null) || FileOps.NULL_FILE.equals(f) || !f.exists()) {", "+        if ((!junitLocEnabled.getComponent().isSelected()) || (f==null) || FileOps.NULL_FILE.equals(f) || !f.exists()) {", "-            if ((rtf!=null) && !FileOps.NULL_FILE.equals(rtf) && rtf.exists() &&", "+            if (rtConcJUnitLocEnabled.getComponent().isSelected() && (rtf!=null) && !FileOps.NULL_FILE.equals(rtf) && rtf.exists() &&", "+    junitLocEnabled.addChangeListener(junitStatusChangeListener);", "+    rtConcJUnitLocEnabled.addChangeListener(junitStatusChangeListener);", "+    addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f05c789a4a067b41ebaf587f4f8acfb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 39, "signatureBeforeChange": "   private void _setupFontPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupFontPanel(ConfigPanel panel)", "diff": ["-    addOptionComponent(panel, new FontOptionComponent(OptionConstants.FONT_MAIN, \"Main Font\", this,", "-                                               \"The font used for most text in DrJava.\"));", "-    addOptionComponent(panel, new FontOptionComponent(OptionConstants.FONT_LINE_NUMBERS, \"Line Numbers Font\", this,", "-                                               \"<html>The font for displaying line numbers on the left side of<br>\" +", "-                                               \"the Definitions Pane if Show All Line Numbers is enabled.<br>\" +", "-                                               \"Cannot be displayed larger than the Main Font.</html>\"));", "-    addOptionComponent(panel, new FontOptionComponent(OptionConstants.FONT_DOCLIST, \"Document List Font\", this,", "-                                               \"The font used in the list of open documents.\"));", "-    addOptionComponent(panel, new FontOptionComponent(OptionConstants.FONT_TOOLBAR, \"Toolbar Font\", this,", "-                                               \"The font used in the toolbar buttons.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.TEXT_ANTIALIAS, \"Use anti-aliased text\", this,", "-                                                    \"Whether to graphically smooth the text.\"));", "+    addOptionComponent(panel, newFontOptionComponent(OptionConstants.FONT_MAIN));", "+    addOptionComponent(panel, newFontOptionComponent(OptionConstants.FONT_LINE_NUMBERS));", "+    addOptionComponent(panel, newFontOptionComponent(OptionConstants.FONT_DOCLIST));", "+    addOptionComponent(panel, newFontOptionComponent(OptionConstants.FONT_TOOLBAR));", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.TEXT_ANTIALIAS));"]}], "num": 7211}