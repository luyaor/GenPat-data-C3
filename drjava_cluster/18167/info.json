{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2394ca7f05feffc78aaf7070b552946e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38c8070a57b281b7ea0c14c5d71e0c1c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "99105223925683ee669479026ce3b62dfa0eda84", "commitAfterChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ProjectProfile(File f)", "signatureAfterChange": "   public ProjectProfile(File f) throws IOException", "diff": ["-  public ProjectProfile(String fileName) { _projectFile = new File(fileName); }", "-  public ProjectProfile(File f) { ", "+   */", "+  public ProjectProfile(File f) throws IOException { ", "-//    Utilities.show(\"Initial Project Root is \" + _projRoot);", "-    assert _projectRoot != null;", "+    if (! _projectRoot.exists()) throw new IOException(\"Parent directory of project root \" + _projectRoot + ", "+                                                       \" does not exist\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "418383736f49b612aee9417700f4e292", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 461, "methodNumberAfterChange": 459, "signatureBeforeChange": "   protected ConcreteOpenDefDoc _createOpenDefinitionsDocument(File f) throws IOException", "signatureAfterChange": "   protected ConcreteOpenDefDoc _createOpenDefinitionsDocument(File f) throws IOException", "diff": ["+    if (! f.exists()) throw new FileNotFoundException(\"file \" + f + \" cannot be found\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f510d8cb1378ca3609aa53352d31b91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/Configuration.java", "commitBeforeChange": "2efb8b90f8e3f76407fe332eab9ae87cdba4cfb6", "commitAfterChange": "66f8b86cd898df76786096aa063e07831d5d9469", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private Configuration()", "signatureAfterChange": "    private Configuration()", "diff": ["+      // create empty props file if it doesn't exist", "+      if (! PROPERTIES_FILE.exists()) {", "+        new FileOutputStream(PROPERTIES_FILE).close();", "+      }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f8965dc43461f99bbc3c57bf592330d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/KeyStrokeOption.java", "commitBeforeChange": "86073a7fb314101fbea8399fc18b3a4415cbc887", "commitAfterChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public KeyStroke parse(String s)", "signatureAfterChange": "   public KeyStroke parse(String s)", "diff": ["+      if (s.equals(\"null\"))", "+        return NULL_KEYSTROKE;", "-        throw new IllegalArgumentException(\"Input must be a string that is a valid \" +", "+        throw new IllegalArgumentException(\"Input \"+s+\" must be a string that is a valid \" +", "-    else", "-      return null;", "+    else return NULL_KEYSTROKE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f53ae1560b298870f21dfc5f8b61fa78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   protected ConcreteOpenDefDoc _createOpenDefinitionsDocument(File f) throws IOException", "signatureAfterChange": "   protected ConcreteOpenDefDoc _createOpenDefinitionsDocument(File f) throws IOException", "diff": ["-  protected ConcreteOpenDefDoc _createOpenDefinitionsDocument(File f) throws IOException { return new ConcreteOpenDefDoc(f); }", "+  protected ConcreteOpenDefDoc _createOpenDefinitionsDocument(File f) throws IOException { ", "+    if (! f.exists()) throw new FileNotFoundException(\"file \" + f + \" cannot be found\");", "+    return new ConcreteOpenDefDoc(f); ", "+  }"]}], "num": 18167}