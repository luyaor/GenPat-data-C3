{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42a3bdfb87352a39905e9a8a0ee55e4a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b518ba04b1011a4d27e4c9a0e0f73c56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 239, "methodNumberAfterChange": 239, "signatureBeforeChange": "   public void open(FileOpenSelector openSelector)", "signatureAfterChange": "   public void open(FileOpenSelector openSelector)", "diff": ["-      OpenDefinitionsDocument openDoc = aoe.getOpenDocument();", "-      String fileName;", "-      try { fileName = openDoc.getFile().getName(); }", "-      catch (IllegalStateException ise) {", "-        // Can't happen: this open document must have a file", "-        throw new UnexpectedException(ise);", "-      }", "-      catch (FileMovedException fme) {", "-        // File was deleted, but use the same name anyway", "-        fileName = fme.getFile().getName();", "-      }", "-      ", "-      // Always switch to doc", "-      _model.setActiveDocument(openDoc);", "-      ", "-      // Prompt to revert if modified", "-      if (openDoc.isModifiedSinceSave()) {", "-        String title = \"Revert to Saved?\";", "-        String message = fileName + \" is already open and modified.\\n\" +", "-          \"Would you like to revert to the version on disk?\\n\";", "-        int choice = JOptionPane.showConfirmDialog(this, message, title, JOptionPane.YES_NO_OPTION);", "-        if (choice == JOptionPane.YES_OPTION) _revert();", "-      }", "-      try {", "-        File f = openDoc.getFile();", "-        if (! _model.inProject(f)) _recentFileManager.updateOpenFiles(f);", "-      }", "-      catch (IllegalStateException ise) {", "-        // Impossible: saved => has a file", "-        throw new UnexpectedException(ise);", "-      }", "-      catch (FileMovedException fme) {", "-        File f = fme.getFile();", "-        // Recover, show it in the list anyway", "-        if (! _model.inProject(f))", "-          _recentFileManager.updateOpenFiles(f);", "+      OpenDefinitionsDocument[] openDocs = aoe.getOpenDocuments();", "+      for(OpenDefinitionsDocument openDoc : openDocs) {", "+        String fileName;", "+        try { fileName = openDoc.getFile().getName(); }", "+        catch (IllegalStateException ise) {", "+          // Can't happen: this open document must have a file", "+          throw new UnexpectedException(ise);", "+        }", "+        catch (FileMovedException fme) {", "+          // File was deleted, but use the same name anyway", "+          fileName = fme.getFile().getName();", "+        }", "+        ", "+        try {", "+          File f = openDoc.getFile();", "+          if (! _model.inProject(f)) _recentFileManager.updateOpenFiles(f);", "+        }", "+        catch (IllegalStateException ise) {", "+          // Impossible: saved => has a file", "+          throw new UnexpectedException(ise);", "+        }", "+        catch (FileMovedException fme) {", "+          File f = fme.getFile();", "+          // Recover, show it in the list anyway", "+          if (! _model.inProject(f))", "+            _recentFileManager.updateOpenFiles(f);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6e2df45147576c1f144daa7f6a88365", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "e193e4674aaab3350b36cbc521ecf3bf9c098bc6", "commitAfterChange": "6c31f49b491d4a01bd2ddbae62b5ee4f76d52129", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   private void _findAll()", "signatureAfterChange": "   private void _findAll()", "diff": ["-      ", "+//      Utilities.show(\"Searching complete\");", "-      HashSet<OpenDefinitionsDocument> reverted = new HashSet<OpenDefinitionsDocument>();", "+//      HashSet<OpenDefinitionsDocument> reverted = new HashSet<OpenDefinitionsDocument>();", "-        if (reverted.contains(fr.getDocument())) {", "-          // skipping document because we have previously noticed that it has been modified,", "-          // i.e. the document is in the reverted list", "-          continue;", "-        }", "+//        if (reverted.contains(fr.getDocument())) {", "+//          // skipping document because we have previously noticed that it has been modified,", "+//          // i.e. the document is in the reverted list", "+//          continue;", "+//        }", "+//        final OpenDefinitionsDocument doc = fr.getDocument();", "+          ", "+          // The following were commented out because they require doc to be loaded as a Definitions (Swing) Document,", "+          // but results processing presumes this access in many places", "+// Text only alternative to preceding two statements commented out          ", "+//          String text = doc.getText();", "+//          final int len = text.length();", "+//          int i = endSel;", "+//          while (i < len && text.charAt(i) != '\\n') ++i;", "+//          final int excerptEndSel = i;", "+//          ", "+//          i = startSel;", "+//          while (i >= 0 && text.charAt(i) != '\\n') --i; // the end of the line", "+//          final int excerptStartSel = i + 1;              // either 0 or the beginning of the line", "+            ", "-          for(int i = 0; i < s.length(); ++i) {", "-            if (s.charAt(i) < ' ' || s.charAt(i) > 127) { sb.append(' '); } else { sb.append(s.charAt(i)); }", "+          for (int j = 0; j < s.length(); ++j) {", "+            sb.append((s.charAt(j) < ' ' || s.charAt(j) > 127) ? ' ' :  s.charAt(j));", "-          for(int i = 0; i < s.length(); ++i) {", "-            if (! Character.isWhitespace(s.charAt(i))) break;", "+          for (int j = 0; j < s.length(); ++j) {", "+            if (! Character.isWhitespace(s.charAt(j))) break;", "-        catch (FileMovedException fme) {", "-          throw new UnexpectedException(fme);", "-        }", "-        catch (BadLocationException ble) {", "-          throw new UnexpectedException(ble);", "-        }", "+        catch (FileMovedException fme) { throw new UnexpectedException(fme); }", "+        catch (BadLocationException ble) { throw new UnexpectedException(ble); }", "-          else {", "-            panel.freeResources();", "-          }", "+          else { panel.freeResources(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fddcc022df0d2a4fafb0dede6f7e3232", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "9c56cd9d9775329b3a5e6a7701ab0c05369850af", "commitAfterChange": "a7a439f9a53360ece86e113cdb8203e5c8b2acda", "methodNumberBeforeChange": 200, "methodNumberAfterChange": 205, "signatureBeforeChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "signatureAfterChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "diff": ["-        if ( openInOtherDoc ) {", "+        if (openInOtherDoc) shouldSave = com.warnFileOpen(file);", "-          shouldSave = com.warnFileOpen(file);", "-        }", "-        if ((shouldSave && openInOtherDoc) || (!openInOtherDoc && (!file.exists() || com.verifyOverwrite()))) {", "-//        // Check if file is already open in another document", "-//        if ( otherDoc != null && openDoc != otherDoc ) {", "-//          // Can't save over an open document", "-//          shouldSave = com.warnFileOpen(file);", "-//        }", "-//        ", "-//        // If the file exists, make sure it's ok to overwrite it", "-//        if (shouldSave || !file.exists() || com.verifyOverwrite()) {", "+        if ((shouldSave && openInOtherDoc) || ", "+            (!openInOtherDoc && (!file.exists() || com.verifyOverwrite()))) {", "+", "-          if (! file.getCanonicalFile().getName().equals(file.getName())) {", "-            file.renameTo(file);", "-          }", "+          if (! file.getCanonicalFile().getName().equals(file.getName())) file.renameTo(file);", "-          if (file.getAbsolutePath().indexOf(\"#\") != -1) {", "-            _notifier.filePathContainsPound();", "-          }", "+          if (file.getAbsolutePath().indexOf(\"#\") != -1) _notifier.filePathContainsPound();", "-              try {", "-                _editorKit.write(os, getDocument(), 0, getDocument().getLength());", "-              } catch (BadLocationException docFailed){", "-                // We don't expect this to happen", "-                throw new UnexpectedException(docFailed);", "-              }", "+              DefinitionsDocument doc = getDocument();", "+              try { _editorKit.write(os, doc, 0, doc.getLength()); } ", "+              catch (BadLocationException docFailed){ throw new UnexpectedException(docFailed); }", "+          ", "+//          ScrollableDialog sd = new ScrollableDialog(null, \"ready to fire fileSaved event in ConcreteOpenDefDoc.saveFile()\", \"\", \"\");", "+//          sd.show();", "+          ", "-              if (isProjectFile() || isAuxiliaryFile()) {", "+              if (isProjectFile() || isAuxiliaryFile())", "-              }", "-            catch(MalformedURLException murle) {", "-              // fail silently", "-            }", "+            catch(MalformedURLException murle) { /* fail silently */ }", "-          catch (InvalidPackageException e) {", "-            // Invalid package-- don't add to classpath", "-          }", "+          catch (InvalidPackageException e) { /* do nothing */ }", "-          "]}], "num": 8001}