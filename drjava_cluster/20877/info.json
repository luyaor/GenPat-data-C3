{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42fd71405ea7881b7baf9c0133145540", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f98b06caf0ef2c0117db26d0a60c8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "69464949f304455efe72f78ee854438cff27207a", "commitAfterChange": "17600b9f1362dad642f89cf0296e45c7ada70a5d", "methodNumberBeforeChange": 481, "methodNumberAfterChange": 481, "signatureBeforeChange": "   private boolean _saveProjectAs()", "signatureAfterChange": "   private boolean _saveProjectAs()", "diff": ["-      if ((file != null) && (! file.exists() || MainFrameStatics.verifyOverwrite(MainFrame.this, file))) { ", "-        _model.setProjectFile(file);", "-        _currentProjFile = file;", "+      try {", "+        // by getting the canonical file, we make sure that we get an IOException if the filename is illegal", "+        if ((file != null) && (! file.getCanonicalFile().exists() || MainFrameStatics.verifyOverwrite(MainFrame.this, file))) { ", "+          _model.setProjectFile(file);", "+          _currentProjFile = file;", "+        }", "+      }", "+      catch(IOException e) {", "+        MainFrameStatics.showIOError(MainFrame.this, e);", "+        return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f78b4797f6a7f8696678fe4873b602b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "69464949f304455efe72f78ee854438cff27207a", "commitAfterChange": "17600b9f1362dad642f89cf0296e45c7ada70a5d", "methodNumberBeforeChange": 176, "methodNumberAfterChange": 176, "signatureBeforeChange": "   public void _saveDocumentCopy(final edu.rice.cs.util.text.SwingDocument doc)", "signatureAfterChange": "   public void _saveDocumentCopy(final edu.rice.cs.util.text.SwingDocument doc)", "diff": ["-        final File file = selector.getFile().getCanonicalFile();", "-        if (! file.exists() || selector.verifyOverwrite(file)) {  // confirm that existing file can be overwritten        ", "+        final File file = selector.getFile();", "+        // by getting the canonical file, we make sure that we get an IOException if the filename is illegal", "+        if (! file.getCanonicalFile().exists() || selector.verifyOverwrite(file)) {  // confirm that existing file can be overwritten        "]}], "num": 20877}