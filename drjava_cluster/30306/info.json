{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e838a771087e042490366096d33be5f3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bb4f02fa723ea825628b1f544ec0ae4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f520b1b5f1b15642429d7c7844d7ac7a96f3e402", "commitAfterChange": "e7fa83968a0076b95166203c3ff9a5bddde8dfee", "methodNumberBeforeChange": 589, "methodNumberAfterChange": 589, "signatureBeforeChange": "   public void scrollToDocumentAndOffset(final OpenDefinitionsDocument doc, final int offset,                                          final boolean shouldHighlight, final boolean shouldAddToHistory)", "signatureAfterChange": "   public void scrollToDocumentAndOffset(final OpenDefinitionsDocument doc, final int offset,                                          final boolean shouldHighlight, final boolean shouldAddToHistory)", "diff": ["+    ", "+    assert duringInit() || EventQueue.isDispatchThread();", "-      _model.setActiveDocument(doc);", "+      _model.setActiveDocument(doc);  // blocks until active document is set internally", "-    ", "-    Runnable command = new Runnable() {  ", "-      public void run() {", "+   ", "+    /* The commented out code caused the debugger to deadlock in some situations.  After frame initialization, this", "+     * method is only called in event thread. */", "+//    Runnable command = new Runnable() {  ", "+//      public void run() {", "-      }", "-    };", "+//      }", "+//    };", "-    /* if (toSameDoc) Utilities.invokeLater(command);  ", "-     else */ EventQueue.invokeLater(command);", "+//    if (toSameDoc) Utilities.invokeLater(command);  ", "+//    else EventQueue.invokeLater(command);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69df3494d077036e0eb0ec78b20ecd0d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7228cea597c372946661a7e1f1db20fd24b9dee1", "commitAfterChange": "8bb2649bd077e2bf6ccaf611ff49da8ad083e7b7", "methodNumberBeforeChange": 477, "methodNumberAfterChange": 482, "signatureBeforeChange": "   public void scrollToDocumentAndOffset(final OpenDefinitionsDocument doc, final int offset,                                          final boolean shouldHighlight, final boolean shouldAddToHistory)", "signatureAfterChange": "   public void scrollToDocumentAndOffset(final OpenDefinitionsDocument doc, final int offset,                                          final boolean shouldHighlight, final boolean shouldAddToHistory)", "diff": ["-", "-        if (shouldHighlight) {", "+        ", "+        if (_showDebugger) {", "+//          System.err.println(\"Showing Interactions Tab\" );", "+          _updateDebugStatus();", "-        _updateDebugStatus();", "-     * Consequently, we need to use SwingUtilities.invokeLater if ! toSameDoc. */", "-    if (toSameDoc) Utilities.invokeLater(command);  ", "-    else SwingUtilities.invokeLater(command);", "+     * Consequently, we need to use EventQueue.invokeLater if ! toSameDoc. */", "+    /* if (toSameDoc) Utilities.invokeLater(command);  ", "+    else */ EventQueue.invokeLater(command);"]}], "num": 30306}