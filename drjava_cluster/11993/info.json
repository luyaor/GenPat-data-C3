{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45cd33abdfc127290cbaa998e9759df2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "283999fc140ca32b71450b0cfab24785", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public Type visit(MultiplyAssignExpression node)", "signatureAfterChange": "   public Class<?> visit(MultiplyAssignExpression node)", "diff": ["-  public Type visit(MultiplyAssignExpression node) {", "+  public Class<?> visit(MultiplyAssignExpression node) {", "-    Type lc1 = ln.acceptVisitor(this);", "-    Type rc1 = node.getRightExpression().acceptVisitor(this);", "-    Class<?> lc = (Class<?>)lc1;", "-    Class<?> rc = (Class<?>)rc1;", "+    Class<?> lc = ln.acceptVisitor(this);", "+    Class<?> rc = node.getRightExpression().acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e3de4fdd75d0df61c2a5a79f2829a7a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public Type visit(AddAssignExpression node)", "signatureAfterChange": "   public Class<?> visit(AddAssignExpression node)", "diff": ["-  public Type visit(AddAssignExpression node) {", "+  public Class<?> visit(AddAssignExpression node) {", "-    Type lc1 = ln.acceptVisitor(this);", "-    Type rc1 = node.getRightExpression().acceptVisitor(this);", "-    Class<?> lc = (Class<?>)lc1;", "-    Class<?> rc = (Class<?>)rc1;", "+    Class<?> lc = ln.acceptVisitor(this);", "+    Class<?> rc = node.getRightExpression().acceptVisitor(this);", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b95d5c4e93f0cad4615335bde311e9ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public Type visit(SubtractAssignExpression node)", "signatureAfterChange": "   public Class<?> visit(SubtractAssignExpression node)", "diff": ["-  public Type visit(SubtractAssignExpression node) {", "+  public Class<?> visit(SubtractAssignExpression node) {", "-    Type lc1 = ln.acceptVisitor(this);", "-    Type rc1 = node.getRightExpression().acceptVisitor(this);", "-    Class<?> lc = (Class<?>)lc1;", "-    Class<?> rc = (Class<?>)rc1;", "+    Class<?> lc = ln.acceptVisitor(this);", "+    Class<?> rc = node.getRightExpression().acceptVisitor(this);", "+", "+", "-    ", "+", "-    ", "+"]}], "num": 11993}