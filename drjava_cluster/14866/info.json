{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35b0f586eda4e71bc71eecc95e088dc1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c2c886be687ae82e187277079e2978b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classinfo/TreeClassInfo.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tMembersVisitor()", "signatureAfterChange": "     MembersVisitor()", "diff": ["+    MembersVisitor() {", "+      if (!isArray()) {", "+        Iterator<Node> it = classTree.getMembers().iterator();", "+        while (it.hasNext()) {", "+          ((Node)it.next()).acceptVisitor(this);", "+        }", "+        ", "+        if (!classTree.hasProperty(TREE_VISITED)) {", "+          ClassInfo dc = getDeclaringClass();", "+          if (dc != null && !Modifier.isStatic(getModifiers())) {", "+            // Add a reference to the outer instance", "+            FieldDeclaration fd;", "+            fd = new FieldDeclaration(Modifier.PUBLIC,", "+                                      new ReferenceType(dc.getName()),", "+                                      \"this$\" + getNestingLevel(),", "+                                      null);", "+            fd.acceptVisitor(this);", "+            classTree.getMembers().add(fd);", "+          }", "+          ", "+          if (constructors.size() == 0 &&", "+              !isInterface() &&", "+              !isPrimitive()) {", "+            ", "+            // Add a default constructor", "+            ConstructorInvocation  ci;", "+            ci = new ConstructorInvocation(null, null, true);", "+            ConstructorDeclaration cd;", "+            cd = new ConstructorDeclaration(Modifier.PUBLIC,", "+                                            classTree.getName(),", "+                                            new LinkedList<FormalParameter>(),", "+                                            new LinkedList<List<IdentifierToken>>(),", "+                                            ci,", "+                                            new LinkedList<Node>());", "+            cd.acceptVisitor(this);", "+            classTree.getMembers().add(cd);", "+          }", "+        }", "+      }", "-\t */", "-\tMembersVisitor() {", "-\t    if (!isArray()) {", "-\t\tIterator it = classTree.getMembers().iterator();", "-\t\twhile (it.hasNext()) {", "-\t\t    ((Node)it.next()).acceptVisitor(this);", "-\t\t}", "-", "-\t\tif (!classTree.hasProperty(TREE_VISITED)) {", "-\t\t    ClassInfo dc = getDeclaringClass();", "-\t\t    if (dc != null && !Modifier.isStatic(getModifiers())) {", "-\t\t\t// Add a reference to the outer instance", "-\t\t\tFieldDeclaration fd;", "-\t\t\tfd = new FieldDeclaration(Modifier.PUBLIC,", "-\t\t\t\t\t\t  new ReferenceType(dc.getName()),", "-\t\t\t\t\t\t  \"this$\" + getNestingLevel(),", "-\t\t\t\t\t\t  null);", "-\t\t\tfd.acceptVisitor(this);", "-\t\t\tclassTree.getMembers().add(fd);", "-\t\t    }", "-", "-\t\t    if (constructors.size() == 0 &&", "-\t\t\t!isInterface() &&", "-\t\t\t!isPrimitive()) {", "-\t\t    ", "-\t\t\t// Add a default constructor", "-\t\t\tConstructorInvocation  ci;", "-\t\t\tci = new ConstructorInvocation(null, null, true);", "-\t\t\tConstructorDeclaration cd;", "-\t\t\tcd = new ConstructorDeclaration(Modifier.PUBLIC,", "-\t\t\t\t\t\t\tclassTree.getName(),", "-\t\t\t\t\t\t\tnew LinkedList(),", "-\t\t\t\t\t\t\tnew LinkedList(),", "-\t\t\t\t\t\t\tci,", "-\t\t\t\t\t\t\tnew LinkedList());", "-\t\t\tcd.acceptVisitor(this);", "-\t\t\tclassTree.getMembers().add(cd);", "-\t\t    }", "-\t\t}", "-\t    }", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b49181d808bcc4a1fba359c7be021962", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "     ProjectFileGroupingState(File project)", "signatureAfterChange": "     ProjectFileGroupingState(File project)", "diff": ["-           IterUtil.<AbsRelFile>empty(), null, 0, false, null, new HashMap<OptionParser,String>());", "-      HashMap<OptionParser,String> defaultStoredPreferences = new HashMap<OptionParser,String>();", "+           IterUtil.<AbsRelFile>empty(), null, 0, false, null, new HashMap<OptionParser<?>,String>());", "+      HashMap<OptionParser<?>,String> defaultStoredPreferences = new HashMap<OptionParser<?>,String>();"]}], "num": 14866}