{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38800f573ba83d9ad9e45930803636de", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c7381e74aa6f2f6104dd6a9c1a49c07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "commitAfterChange": "56a5d7ef4f332df9b45adf95f71d664c61575e1a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testCompileFailsCorrectLineNumbers() throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileFailsCorrectLineNumbers() throws BadLocationException, IOException", "diff": ["-    final Object _lock = new Object();", "-    ", "-    CompileShouldFailListener listener = new CompileShouldFailListener() {", "-      public void compileEnded() {", "-        super.compileEnded();", "-        _compileDone = true;", "-        synchronized (_lock) { _lock.notify(); }", "-      }", "-    };", "-    ", "+    _model.addListener(_failListener);", "-    _model.addListener(listener);", "-    synchronized (_lock) {", "-      try { while (! _compileDone) _lock.wait(); }", "-      catch (InterruptedException ie) {", "-        fail(\"Unexpected interrupted exception: \" + ie.getMessage());", "-      }", "-    }", "+    _waitCompileDone();", "+    ", "-    listener.checkCompileOccurred();", "-    _model.removeListener(listener);", "+    _failListener.checkCompileOccurred();", "+    _model.removeListener(_failListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c9e650a85e27d82e1c38283eead402a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public synchronized void setCacheSize(int size)", "signatureAfterChange": "   public void setCacheSize(int size)", "diff": ["-  public synchronized void setCacheSize(int size) {", "+  public void setCacheSize(int size) {", "-    ", "-    CACHE_SIZE = size;", "-    DocManager current;", "-    if (_lru.size() > CACHE_SIZE) {", "-      ListIterator<DocManager> it = _lru.listIterator();", "-      int i = 1;", "-      while (it.hasNext()) {", "-        current = it.next();", "-        if (i > CACHE_SIZE) {", "-          current.kickOut();", "-          it.remove();", "-        }", "-        i++;", "+    int dist;", "+    DocManager[] removed = null;  // bogus initialization makes javac happy", "+    synchronized (this) {", "+      CACHE_SIZE = size;", "+      dist = _residentQueue.size() - CACHE_SIZE;", "+      if (dist > 0) { ", "+        removed = new DocManager[dist];", "+        for (int i = 0; i < dist; i++) removed[i] = _residentQueue.remove(0);", "+    if (dist > 0) kickOut(removed);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa16903ced7a5fabed601d373710a1fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   protected String interpret(String input) throws BadLocationException", "signatureAfterChange": "   protected String interpret(String input) throws BadLocationException", "diff": ["+", "+    TestListener listener = new TestListener() {", "+      public void interactionStarted() {", "+        interactionStartCount++;", "+      }", "+", "+      public void interactionEnded() {", "+        assertInteractionStartCount(1);", "+", "+        synchronized(this) {", "+          interactionEndCount++;", "+          this.notify();", "+        }", "+      }", "+    };", "+", "+    _model.addListener(listener);", "+", "+    // wait for interpret over", "+    while (listener.interactionEndCount == 0) {", "+      synchronized(listener) {", "+        try {", "+          listener.wait();", "+        }", "+        catch (InterruptedException ie) {", "+          throw new UnexpectedException(ie);", "+        }", "+      }", "+    }", "+", "+    _model.removeListener(listener);", "+    listener.assertInteractionStartCount(1);", "+    listener.assertInteractionEndCount(1);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edd458d42318e9c0ad7892abcfd7e342", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ReverseHighlighter.java", "commitBeforeChange": "2aadb81a716e2a196f82baa127c28e3225664fab", "commitAfterChange": "c4ec4fbaa86590f5d9d73c067159d69b14149c37", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     void paintLayeredHighlights(Graphics g, int p0, int p1,                                 Shape viewBounds, JTextComponent editor,                                 View view)", "signatureAfterChange": "     void paintLayeredHighlights(Graphics g, int p0, int p1, Shape viewBounds, JTextComponent editor, View view)", "diff": ["-    void paintLayeredHighlights(Graphics g, int p0, int p1,", "-                                Shape viewBounds, JTextComponent editor,", "-                                View view) {", "+    void paintLayeredHighlights(Graphics g, int p0, int p1, Shape viewBounds, JTextComponent editor, View view) {", "-      // Paint the appropriate region using the painter and union", "-      // the effected region with our bounds.", "-      union(((LayeredHighlighter.LayerPainter)painter).paintLayer", "-              (g, p0, p1, viewBounds, editor, view));", "+      // Paint the appropriate region using the painter and union the effected region with our bounds.", "+      LayeredHighlighter.LayerPainter lp = (LayeredHighlighter.LayerPainter) _painter;", "+      union(lp.paintLayer(g, p0, p1, viewBounds, editor, view));"]}], "num": 4150}