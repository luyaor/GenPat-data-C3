{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87e9295b3f9477dd0eae4167aa04258e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36743dacd349c72fb9e8fcb1001d90f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentDocFrame.java", "commitBeforeChange": "52434f6649577bc83989d279c33ddbe6369a078c", "commitAfterChange": "bfc3e0843658fe88dfa445991b253f3abfe88628", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void next()", "signatureAfterChange": "   public void next()", "diff": ["-   */", "-  public void next(){", "-    if(_docs.size() > 0){", "-      _current++;", "-      if(_current >= _docs.size()){", "-        _current = 0;", "-      }", "-      ", "+   */", "+  public void next(){", "+    if(_docs.size() > 0){", "+      _current++;", "+      if(_current >= _docs.size()){", "+        _current = 0;", "+      }", "+      show(_current);", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b212cdceb71105dc86817e218bc41c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/repl/EclipseInteractionsModel.java", "commitBeforeChange": "9e872e89ecbb011ef008c884ca8c25835ce56230", "commitAfterChange": "643b18bac8370f79aefcf668722f7c98ff72b6b4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   protected void _resetInteractionsClasspath()", "signatureAfterChange": "   protected void _resetInteractionsClasspath()", "diff": ["-        ", "-        // Get the project's location on disk", "-        IProject proj = jProj.getProject();", "-        IPath projRoot = proj.getDescription().getLocation();", "-        // Note: getLocation returns null if the default location is used", "-        //  (brilliant...)", "-        ", "-        // Get the resolved classpath entries - this should filter out", "-        //   all CPE_VARIABLE and CPE_CONTAINER entries.", "-        IClasspathEntry entries[] = jProj.getResolvedClasspath(true);", "-        ", "-        // For each of the classpath entries...", "-        for(int j = 0; j < entries.length; j++) {", "-          IClasspathEntry entry = entries[j];", "-          ", "-          // Check what kind of entry it is...", "-          int kind = entry.getEntryKind();", "-          ", "-          // And get the appropriate path.", "-          IPath path;", "-          switch (kind) {", "-            case IClasspathEntry.CPE_LIBRARY:", "-              // The raw location of a JAR.", "-              path = entry.getPath();", "-              //System.out.println(\"Adding library: \" + path.toOSString());", "-              addToClassPath(path.toOSString());", "-              break;", "-            case IClasspathEntry.CPE_SOURCE:", "-              // The output location of source.", "-              // Need to append it to the user's workspace directory.", "-              path = entry.getOutputLocation();", "-              if (path == null) {", "-                path = jProj.getOutputLocation();", "-                //System.out.println(\" output location from proj: \" + path);", "-              }", "-              ", "-              // At this point, the output location contains the project", "-              //  name followed by the actual output folder name", "-              ", "-              if (projRoot != null) {", "-                // We have a custom project location, so the project name", "-                //  is not part of the *actual* output directory.  We need", "-                //  to remove the project name (first segment) and then", "-                //  append the rest of the output location to projRoot.", "-                path = path.removeFirstSegments(1);", "-                path = projRoot.append(path);", "-              }", "-              else {", "-                // A null projRoot means use the default location, which", "-                //  *does* include the project name in the output directory.", "-                path = root.getLocation().append(path);", "-              }", "-              ", "-              //System.out.println(\"Adding source: \" + path.toOSString());", "-              addToClassPath(path.toOSString());", "-              break;", "-            case IClasspathEntry.CPE_PROJECT:", "-              // In this case, just the project name is given.", "-              // We don't actually need to add anything to the classpath,", "-              //  since the project is open and we will get its classpath", "-              //  on another pass.", "-              break;", "-            default:", "-              // This should never happen.", "-              throw new RuntimeException(\"Unsupported classpath entry type.\");", "-          }", "-        }", "+        _addProjectToClasspath(jProj, jModel, root);", "+    }", "+  }"]}], "num": 14750}