{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77342a4c71a24cee905189e28fa54dc2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cd4ec844ef69f3b57c8fc60e076dee3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "fa20bbad84f51c844e01bca2b3fd5eacb2aa37bd", "commitAfterChange": "90ca22f045f683896f275759514c21a8010630fa", "methodNumberBeforeChange": 226, "methodNumberAfterChange": 226, "signatureBeforeChange": "      private Expression unbox(Expression exp, String methodName)", "signatureAfterChange": "      private Expression unbox(Expression exp, String methodName)", "diff": ["-      result.setArguments(IterUtil.asList(inv.args()));", "+      result.setArguments(CollectUtil.makeList(inv.args()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7c932e506555ac4c7a23be611efbc18", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   @Override public Type visit(SimpleMethodCall node)", "signatureAfterChange": "   @Override public Type visit(SimpleMethodCall node)", "diff": ["-    if (node.getArguments() != null) { args = node.getArguments(); }", "-    for (Expression e : args) { e.acceptVisitor(this); }", "+    if (node.getArguments() != null) { args = node.getArguments(); checkList(args); }", "-      t = ts.makeClassType(new FunctionWrapperClass(matches));", "+      t = ts.makeClassType(new FunctionWrapperClass(context.getPackage(), matches));"]}], "num": 19716}