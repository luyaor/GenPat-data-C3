{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57c130ecd140338fc391a7eaf80fc9a0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "795e3a0bcfb2cf4527b4fb06ffe4da3d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 491, "methodNumberAfterChange": 491, "signatureBeforeChange": "\r \r   public void forUnbracedBody(UnbracedBody that)", "signatureAfterChange": "    public void forUnbracedBody(UnbracedBody that)", "diff": ["-\r", "-  public void forUnbracedBody(UnbracedBody that) {\r", "-    forUnbracedBodyDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    for (int i = 0; i < that.getStatements().length; i++) that.getStatements()[i].visit(this);\r", "-    forUnbracedBodyOnly(that);\r", "-  }\r", "+", "+  public void forUnbracedBody(UnbracedBody that) {", "+    forUnbracedBodyDoFirst(that);", "+    if (prune(that)) return;", "+    for (int i = 0; i < that.getStatements().length; i++) that.getStatements()[i].visit(this);", "+    forUnbracedBodyOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9aed5cba04c91eaef91729bbc740406", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 490, "methodNumberAfterChange": 490, "signatureBeforeChange": "\r \r   public void forBracedBody(BracedBody that)", "signatureAfterChange": "    public void forBracedBody(BracedBody that)", "diff": ["-\r", "-  public void forBracedBody(BracedBody that) {\r", "-    forBracedBodyDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    for (int i = 0; i < that.getStatements().length; i++) that.getStatements()[i].visit(this);\r", "-    forBracedBodyOnly(that);\r", "-  }\r", "+", "+  public void forBracedBody(BracedBody that) {", "+    forBracedBodyDoFirst(that);", "+    if (prune(that)) return;", "+    for (int i = 0; i < that.getStatements().length; i++) that.getStatements()[i].visit(this);", "+    forBracedBodyOnly(that);", "+  }"]}], "num": 17985}