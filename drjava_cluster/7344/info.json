{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "055ce58bb6e422e6bca2177a76b9fa68", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ea40d272c03edf3ffad78df9cb40bfb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionEvaluator.java", "commitBeforeChange": "6b388fb1877469cd91350296fabdf9fe8d522b74", "commitAfterChange": "b5cc61b9509dcda722d6dd7d5605a055e9915381", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "      @Override public Box<Object> visit(SimpleFieldAccess node)", "signatureAfterChange": "      @Override public Box<Object> visit(SimpleFieldAccess node)", "diff": ["-      return getField(node).boxForReceiver(_bindings.getThis(getDJClass(node)));", "+      Object receiver = hasDJClass(node) ? _bindings.getThis(getDJClass(node)) : null;", "+      return getField(node).boxForReceiver(receiver);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0563f1777e2fe75a7cfccef3ff52844", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 23, "signatureBeforeChange": "     @Override public Type visit(ObjectFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(ObjectFieldAccess node)", "diff": ["-        ObjectFieldReference ref = ts.lookupField(receiver, node.getFieldName());", "+        ObjectFieldReference ref = ts.lookupField(receiver, node.getFieldName(), context.accessModule());", "-        checkAccessibility(ref.field(), node);"]}], "num": 7344}