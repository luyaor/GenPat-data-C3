{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f6b0fa598ce64f56ccf0db06e550453", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a324b0ef352525ec7d29892583d404ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TypeNameChecker.java", "commitBeforeChange": "7d708b4318d2a7ffa9f01174e54dfcf52e139a3d", "commitAfterChange": "31c24a84c42340de320b817c6a38b98e08dac42c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     @Override public Type visit(GenericReferenceTypeName node)", "signatureAfterChange": "     @Override public Type visit(GenericReferenceTypeName node)", "diff": ["-      Iterator<List<? extends TypeName>> allTargs = node.getTypeArguments().iterator();", "+      Iterator<? extends List<? extends TypeName>> allTargs = node.getTypeArguments().iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9613134ebd207a92f46af7253ef047b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/GenericReferenceTypeName.java", "commitBeforeChange": "7d708b4318d2a7ffa9f01174e54dfcf52e139a3d", "commitAfterChange": "31c24a84c42340de320b817c6a38b98e08dac42c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       public List<List<? extends TypeName>> getTypeArguments()", "signatureAfterChange": "       public List<? extends List<? extends TypeName>> getTypeArguments()", "diff": ["-  public List<List<? extends TypeName>> getTypeArguments(){ return _typeArguments; }", "+  public List<? extends List<? extends TypeName>> getTypeArguments(){ return _typeArguments; }"]}], "num": 24546}