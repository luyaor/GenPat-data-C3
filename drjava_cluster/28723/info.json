{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "027b050c73e8efb12aab28d376c5f3a9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60931e9c7a9b947d15544a576a353241", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "    private void _setupResourceLocPanel ( ConfigPanel panel)", "signatureAfterChange": "    private void _setupResourceLocPanel ( ConfigPanel panel)", "diff": ["-    panel.addComponent( new FileOptionComponent( OptionConstants.JAVAC_LOCATION, \"Javac Location\", this));", "-    panel.addComponent( new FileOptionComponent( OptionConstants.JSR14_LOCATION, \"JSR14 Location\", this));", "-    panel.addComponent( new FileOptionComponent( OptionConstants.JSR14_COLLECTIONSPATH, \"JSR14 Collections Path\", this));", "+    FileOptionComponent javacLoc =", "+      new FileOptionComponent( OptionConstants.JAVAC_LOCATION, \"Javac Location\", this);", "+    javacLoc.setFileFilter(new ClasspathFilter());", "+    panel.addComponent( javacLoc );", "+    FileOptionComponent jsr14Loc =", "+      new FileOptionComponent( OptionConstants.JSR14_LOCATION, \"JSR14 Location\", this);", "+    jsr14Loc.setFileFilter(new ClasspathFilter());", "+    panel.addComponent( jsr14Loc );", "+    FileOptionComponent jsr14Col = ", "+      new FileOptionComponent( OptionConstants.JSR14_COLLECTIONSPATH, \"JSR14 Collections Path\", this);", "+    jsr14Col.setFileFilter(new ClasspathFilter());", "+    panel.addComponent( jsr14Col );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d522ff44d72216f98f3e0010824aa907", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 100, "signatureBeforeChange": "    protected Iterable<Type> captureTypeArgs(Iterable<? extends Type> targs,                                            Iterable<? extends VariableType> params)", "signatureAfterChange": "    protected Iterable<Type> captureTypeArgs(Iterable<? extends Type> targs,                                            Iterable<? extends VariableType> params)", "diff": ["+        Type argU = argW.symbol().upperBound();", "+        Type argL = argW.symbol().lowerBound();", "-        triple.first().initializeUpperBound(new IntersectionType(IterUtil.make(argW.symbol().upperBound(),", "-                                                                               paramU)));", "-        triple.first().initializeLowerBound(new UnionType(IterUtil.make(argW.symbol().lowerBound(), paramL)));", "+        Type captureU = argU.equals(paramU) ? argU : new IntersectionType(IterUtil.make(argU, paramU));", "+        Type captureL = argL.equals(paramL) ? argL : new UnionType(IterUtil.make(argL, paramL));", "+        triple.first().initializeUpperBound(captureU);", "+        triple.first().initializeLowerBound(captureL);"]}], "num": 28723}