{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f47a6049995a140342fada0909f2728f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b06259142a65478b67fbca77a40b127", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "f858bdc4a8556fa2d602de70e64361813405ec96", "commitAfterChange": "9a6ce0c2dd9939538b22d21a227d64c36bc636d3", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void setActiveCompiler(CompilerInterface compiler)", "signatureAfterChange": "   public void setActiveCompiler(CompilerInterface compiler)", "diff": ["-    CompilerRegistry.ONLY.setActiveCompiler(compiler);", "+    if (_compilers.isEmpty() && compiler.equals(NoCompilerAvailable.ONLY)) {", "+      // _active should be set correctly already", "+    }", "+    else if (_compilers.contains(compiler)) {", "+      _active = compiler;", "+    }", "+    else {", "+      throw new IllegalArgumentException(\"Compiler is not in the list of available compilers: \" + compiler);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad95a9e2e48a2f1e892367709818fc6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerRegistry.java", "commitBeforeChange": "149feb3f2af1920c19f6930f765f209a93ed7ca6", "commitAfterChange": "fe008ef5062ac4e4b569352517b1df11133d4fdd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public CompilerInterface getActiveCompiler()", "signatureAfterChange": "   public CompilerInterface getActiveCompiler()", "diff": ["-    if (_activeCompiler == NoCompilerAvailable.ONLY) {", "-      getAvailableCompilers();", "-    }", "+    if (_activeCompiler == NoCompilerAvailable.ONLY) getAvailableCompilers();", "-    if (_activeCompiler.isAvailable()) {", "-      return _activeCompiler;", "-    }", "-    else {", "-      return NoCompilerAvailable.ONLY;", "-    }", "+    if (_activeCompiler.isAvailable()) return _activeCompiler;", "+    return NoCompilerAvailable.ONLY;"]}], "num": 10121}