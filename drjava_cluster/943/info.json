{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ae01f244c613c89077cde96b36d8f6c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86514268f3d35c4809bf13226323cb2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "ae4333c8dd1b54b8a781008188f09b6786d95ae2", "commitAfterChange": "a42a1005ad3faca50638e0131df3bc7c45ba82de", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 79, "signatureBeforeChange": "   private void _copyBack(ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,     IncompatibleThreadStateException, AbsentInformationException,     InvocationException, DebugException", "signatureAfterChange": "   private void _copyBack(ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,     IncompatibleThreadStateException, AbsentInformationException,     InvocationException, DebugException", "diff": ["-    ObjectReference interpreter = _getDebugInterpreter(_getUniqueThreadName(threadRef), threadRef);", "-    ReferenceType rtInterpreter = interpreter.referenceType();", "-      Method method2Call = _getGetVariableMethod(rtInterpreter);", "-        List args = new LinkedList();", "-        args.add(_vm.mirrorOf(localVar.name()));", "-          Value v = interpreter.invokeMethod(threadRef, method2Call, args,", "-                                             ObjectReference.INVOKE_SINGLE_THREADED);", "-          if (v != null) {", "-            v = _convertToActualType(threadRef, localVar, v);", "-          }", "+          Value v = _getValueOfLocalVariable(localVar, threadRef);", "-      if (tries >= MAXINVOKETRIES)", "+      if (tries >= MAXINVOKETRIES) {", "-      ", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e6ddcf19782898c862e7f7895bad2cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 364, "methodNumberAfterChange": 367, "signatureBeforeChange": "   private void _setUpMenuBar()", "signatureAfterChange": "   private void _setUpMenuBar()", "diff": ["-    boolean showDebugger = (_model.getDebugger().isAvailable());", "-    ", "-    // Get proper cross-platform mask.", "-    int mask = Toolkit.getDefaultToolkit().getMenuShortcutKeyMask();", "-    ", "-    _menuBar = new MenuBar();", "-    _fileMenu = _setUpFileMenu(mask);", "-    _editMenu = _setUpEditMenu(mask);", "-    _toolsMenu = _setUpToolsMenu(mask);", "-    _projectMenu = _setUpProjectMenu(mask);", "-    if (showDebugger) _debugMenu = _setUpDebugMenu(mask);", "-    _languageLevelMenu = _setUpLanguageLevelMenu(mask);", "-    _helpMenu = _setUpHelpMenu(mask);", "-    ", "+ ", "-    if (showDebugger) _menuBar.add(_debugMenu);", "+    if (_showDebugger) _menuBar.add(_debugMenu);"]}], "num": 943}