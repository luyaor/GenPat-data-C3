{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4e6fe618c8d17aab9c3c8d5049bcf2f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "196fc7382b786497dcac65aedfd20452", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 15, "signatureBeforeChange": "    public void testGetLineEndPos() throws BadLocationException", "signatureAfterChange": "    public void testGetLineEndPos() throws BadLocationException", "diff": ["-                 _doc.getLineEndPos(5));", "+                 _getLineEndPos(5));", "-                 _doc.getLineEndPos(7));", "+                 _getLineEndPos(7));", "-                 _doc.getLineEndPos(9));", "+                 _getLineEndPos(9));", "-    _doc.getLineEndPos(5);", "+    _getLineEndPos(5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b61f70a98c0582dcf570ae3733fe0ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 16, "signatureBeforeChange": "    public void testGetLineFirstCharPos() throws BadLocationException", "signatureAfterChange": "    public void testGetLineFirstCharPos() throws BadLocationException", "diff": ["-                 _doc.getLineFirstCharPos(1));", "+                 _getLineFirstCharPos(1));", "-                 _doc.getLineFirstCharPos(1));", "+                 _getLineFirstCharPos(1));", "-                 _doc.getLineFirstCharPos(7));", "+                 _getLineFirstCharPos(7));", "-                 _doc.getLineFirstCharPos(16));", "+                 _getLineFirstCharPos(16));", "-                 _doc.getLineFirstCharPos(19));", "+                 _getLineFirstCharPos(19));", "-    _doc.getLineFirstCharPos(5);", "+    _getLineFirstCharPos(5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f1fcdfeff217468be4341fc4b58d8a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 14, "signatureBeforeChange": "    public void testGetLineStartPos() throws BadLocationException", "signatureAfterChange": "    public void testGetLineStartPos() throws BadLocationException", "diff": ["-    assertEquals(\"Returns position after the previous newline\", 4, _doc.getLineStartPos(6));", "+    assertEquals(\"Returns position after the previous newline\", 4, _getLineStartPos(6));", "-                 _doc.getLineStartPos(4));", "-    assertEquals(\"Returns 0 when there's no previous newline\", 0, _doc.getLineStartPos(2));", "-    assertEquals(\"Returns 0 when the cursor is at 0\", 0, _doc.getLineStartPos(0));", "+                 _getLineStartPos(4));", "+    assertEquals(\"Returns 0 when there's no previous newline\", 0, _getLineStartPos(2));", "+    assertEquals(\"Returns 0 when the cursor is at 0\", 0, _getLineStartPos(0));", "-    _doc.getLineStartPos(5);", "+    _getLineStartPos(5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2d9cf42ca0ab401422e9de5179be17d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 11, "signatureBeforeChange": "    public void testGetIndentOfCurrStmtMultipleLines()     throws BadLocationException", "signatureAfterChange": "    public void testGetIndentOfCurrStmtMultipleLines()     throws BadLocationException", "diff": ["-    assertEquals(\"start stmt on previous line, indent two spaces\", 2, _doc.getIndentOfCurrStmt(24));", "+    assertEquals(\"start stmt on previous line, indent two spaces\", 2, _getIndentOfCurrStmt(24));", "-                 _doc.getIndentOfCurrStmt(42));", "+                 _getIndentOfCurrStmt(42));", "-                 _doc.getIndentOfCurrStmt(56));", "-    assertEquals(\"start stmt before multi-line comment, indent two spaces\", 2, _doc.getIndentOfCurrStmt(88));", "+                 _getIndentOfCurrStmt(56));", "+    assertEquals(\"start stmt before multi-line comment, indent two spaces\", 2, _getIndentOfCurrStmt(88));"]}], "num": 24829}