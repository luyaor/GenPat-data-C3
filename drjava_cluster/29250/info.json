{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c5d1c413e79b2bde89c1a76e0dbc2de", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f4c751d080a3f6551c9762d5e98b3db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/PopupConsole.java", "commitBeforeChange": "297c6f7de2e895bf8eb6c301cb70d6927f0b7243", "commitAfterChange": "bd3609d73f910b773bb009bd9fec801547e38ce7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   protected String silentInput()", "signatureAfterChange": "   private String silentInput()", "diff": ["-  protected String silentInput() {", "+  private String silentInput() {", "-    final StringBuffer input = new StringBuffer();", "+    monitorNotified = false;", "+    final StringBuffer input = new StringBuffer();  /* shared variable guarded by commandLock */ ", "-          /* Runs inside synchronized(commandLock) */", "+          /* This Runnable only runs inside synchronized(commandLock) */", "-          synchronized (monitor) { monitor.notify(); }  // wake-up the enclosing thread waiting on monitor", "+          synchronized (monitor) { ", "+            monitorNotified = true;", "+            monitor.notify();   // wake-up the enclosing thread waiting on monitor", "+          }", "-      try { while (_interruptCommand != null) monitor.wait(); }   // wait until input is finished", "+      try { while (! monitorNotified) monitor.wait(); }   // wait until input is finished"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "831fb6505031021f6027f4c09e7fc04b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/HistorySaveDialog.java", "commitBeforeChange": "6bfab9f5cad6f12d0935dd59b83d99bfc86909eb", "commitAfterChange": "5aacfadc90765b33349d6f9aff91d50fefd76986", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public String editHistory(String history)", "signatureAfterChange": "   public String editHistory(String history)", "diff": ["-    synchronized(_historyLock) {", "-      _history = null; // make it null by default", "-      _textArea.setText(history);", "-      _textArea.setEditable(true);", "-", "-      // Block until the dialog is closed", "-      show();", "-", "-      // The save action will set the history field", "-      return _history;", "-    }", "+//    synchronized(_historyLock) {", "+    _history = null; // make it null by default", "+    _textArea.setText(history);", "+    _textArea.setEditable(true);", "+    ", "+    // Block until the dialog is closed", "+    show();", "+    ", "+    // The save action will set the history field", "+    return _history;", "+//    }"]}], "num": 29250}