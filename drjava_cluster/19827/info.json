{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59338d228b7ca22bc2ac6d0a39bf5f8c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a6c7e5591ef5bbe2eaa726793a31878", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "commitAfterChange": "ead43466202abb204c90f7ee2c316fec230d4415", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 34, "signatureBeforeChange": "       @Override protected Thunk<? extends TypeSystem> typeSystemFactory()", "signatureAfterChange": "       @Override protected Thunk<? extends TypeSystem> typeSystemFactory()", "diff": ["+      protected abstract TypeSystem makeTypeSystem();", "+      @Override protected Thunk<? extends TypeSystem> typeSystemFactory() {", "+        return LambdaUtil.valueLambda(makeTypeSystem());", "+      }", "-    _options.put(\"ext\", new Options() {", "-      @Override protected Thunk<? extends TypeSystem> typeSystemFactory() {", "-        TypeSystem result = new ExtendedTypeSystem(this);", "-        return LambdaUtil.valueLambda(result);", "-      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8cae78555e0bc365effe41a453b3f88", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "bb37c635695368e8cc96440bd6b6d051918112f8", "commitAfterChange": "4ebd25942c79fb901c720903ad892355732a9230", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "        public static void main(String... args)", "signatureAfterChange": "        public static void main(String... args)", "diff": ["-    Options opt = parsedArgs.hasOption(\"jls\") ? new Options(JLSTypeSystem.INSTANCE) : Options.DEFAULT;", "+    final TypeSystem ts = parsedArgs.hasOption(\"jls\") ? JLSTypeSystem.INSTANCE : ExtendedTypeSystem.INSTANCE;", "+    Options opt = new Options() {", "+      public TypeSystem typeSystem() { return ts; }", "+      public boolean enforceAllAccess() { return true; }", "+    };"]}], "num": 19827}