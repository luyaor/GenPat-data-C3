{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9187f0856dc1720bffb41f208f72c406", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e21ceb814957e20ef2676fbbed1d82c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "      public void replReturnedSyntaxError(String errorMessage, String interaction, int startRow, int startCol, int endRow,                                         int endCol)", "signatureAfterChange": "      @Override public void replReturnedSyntaxError(String errorMessage, String interaction, int startRow, int startCol, int endRow,                                                   int endCol)", "diff": ["-    public void replReturnedSyntaxError(String errorMessage, String interaction, int startRow, int startCol, int endRow,", "-                                        int endCol) {", "+    @Override public void replReturnedSyntaxError(String errorMessage, String interaction, int startRow, int startCol, int endRow,", "+                                                  int endCol) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef9144beedb39400588fe22e5ebbf8e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "a30a5503c4bed745d3bf75a4b449d026f5c00795", "commitAfterChange": "18853ae3d062d9694905fb3ffaa507db78319f52", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "   private void _copyVariablesFromInterpreter() throws DebugException", "signatureAfterChange": "   private void _copyVariablesFromInterpreter() throws DebugException", "diff": ["-  /** Assumes lock is already held. */", "+    * */", "-          (ArrayReference) _invokeMethod(_runningThread, _interpreterJVM, \"getVariable\",", "-                                         GET_VARIABLE_SIG, name);", "+          (ArrayReference) _invokeMethod(_runningThread, _interpreterJVM, \"getVariableValue\",", "+                                         GET_VARIABLE_VALUE_SIG, name);"]}], "num": 9851}