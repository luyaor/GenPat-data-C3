{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "264d6849a9fce1b334b41de1ff4d0c78", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "003462a98def2991a2a386ff3fa51cad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "          public void testForLabeledCase()", "signatureAfterChange": "          public void testForLabeledCase()", "diff": ["-      UnbracedBody emptyBody = new UnbracedBody(SourceInfo.NO_INFO, new BodyItemI[0]);", "+      UnbracedBody emptyBody = new UnbracedBody(SourceInfo.NONE, new BodyItemI[0]);", "-      LabeledCase lc = new LabeledCase(SourceInfo.NO_INFO, new CharLiteral(SourceInfo.NO_INFO, 'e'), emptyBody);", "+      LabeledCase lc = new LabeledCase(SourceInfo.NONE, new CharLiteral(SourceInfo.NONE, 'e'), emptyBody);", "-      lc = new LabeledCase(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 27), emptyBody);", "+      lc = new LabeledCase(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 27), emptyBody);", "-      UnbracedBody nonEmptyBody = new UnbracedBody(SourceInfo.NO_INFO, new BodyItemI[] {new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 5))});", "-      lc = new LabeledCase(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 27), nonEmptyBody);", "+      UnbracedBody nonEmptyBody = new UnbracedBody(SourceInfo.NONE, new BodyItemI[] {new ValueReturnStatement(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 5))});", "+      lc = new LabeledCase(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 27), nonEmptyBody);", "-      lc = new LabeledCase(SourceInfo.NO_INFO, new PlusExpression(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 5), new IntegerLiteral(SourceInfo.NO_INFO, 42)), emptyBody);", "+      lc = new LabeledCase(SourceInfo.NONE, new PlusExpression(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 5), new IntegerLiteral(SourceInfo.NONE, 42)), emptyBody);", "-      lc = new LabeledCase(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"dan\")), emptyBody);", "+      lc = new LabeledCase(SourceInfo.NONE, new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"dan\")), emptyBody);", "-      lc = new LabeledCase(SourceInfo.NO_INFO, new StringLiteral(SourceInfo.NO_INFO, \"hi!\"), emptyBody);", "+      lc = new LabeledCase(SourceInfo.NONE, new StringLiteral(SourceInfo.NONE, \"hi!\"), emptyBody);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d99dd3a89f2c8d239c34f13fa61f986c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyFullJavaVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "          public void testForTryCatchStatement()", "signatureAfterChange": "          public void testForTryCatchStatement()", "diff": ["-      BracedBody emptyBody = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]);", "-      Block b = new Block(SourceInfo.NO_INFO, emptyBody);", "+      BracedBody emptyBody = new BracedBody(SourceInfo.NONE, new BodyItemI[0]);", "+      Block b = new Block(SourceInfo.NONE, emptyBody);", "-      NormalTryCatchStatement ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[0]);", "-      TryCatchFinallyStatement tcfs = new TryCatchFinallyStatement(SourceInfo.NO_INFO, b, new CatchBlock[0], b);", "+      NormalTryCatchStatement ntcs = new NormalTryCatchStatement(SourceInfo.NONE, b, new CatchBlock[0]);", "+      TryCatchFinallyStatement tcfs = new TryCatchFinallyStatement(SourceInfo.NONE, b, new CatchBlock[0], b);", "-      BracedBody errorBody = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {", "-        new ExpressionStatement(SourceInfo.NO_INFO, ", "-                                new BitwiseOrExpression(SourceInfo.NO_INFO, ", "-                                                        new IntegerLiteral(SourceInfo.NO_INFO, 1), ", "-                                                        new IntegerLiteral(SourceInfo.NO_INFO, 2)))});", "-      Block errorBlock = new Block(SourceInfo.NO_INFO, errorBody);", "+      BracedBody errorBody = new BracedBody(SourceInfo.NONE, new BodyItemI[] {", "+        new ExpressionStatement(SourceInfo.NONE, ", "+                                new BitwiseOrExpression(SourceInfo.NONE, ", "+                                                        new IntegerLiteral(SourceInfo.NONE, 1), ", "+                                                        new IntegerLiteral(SourceInfo.NONE, 2)))});", "+      Block errorBlock = new Block(SourceInfo.NONE, errorBody);", "-      ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, errorBlock, new CatchBlock[0]);", "+      ntcs = new NormalTryCatchStatement(SourceInfo.NONE, errorBlock, new CatchBlock[0]);", "-        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                            new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                            new Word(SourceInfo.NO_INFO, \"i\"));", "-      FormalParameter fp = new FormalParameter(SourceInfo.NO_INFO, uvd, false);", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                            new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                            new Word(SourceInfo.NONE, \"i\"));", "+      FormalParameter fp = new FormalParameter(SourceInfo.NONE, uvd, false);", "-      tcfs = new TryCatchFinallyStatement(SourceInfo.NO_INFO, b, new CatchBlock[] {", "-        new CatchBlock(SourceInfo.NO_INFO, fp, errorBlock)}, b);", "+      tcfs = new TryCatchFinallyStatement(SourceInfo.NONE, b, new CatchBlock[] {", "+        new CatchBlock(SourceInfo.NONE, fp, errorBlock)}, b);"]}], "num": 3655}