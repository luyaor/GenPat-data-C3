{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5abed78580dbd37338bd3c2220d0d9ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41edecb03e70abf5427667fb0b6864dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-mint/edu/rice/cs/drjava/model/compiler/MintCompiler.java", "commitBeforeChange": "c1c33f1060f9022135b7f75a813b69c4045f6b46", "commitAfterChange": "0de85ca2b785d7ad489463f9a174133a91014910", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public java.util.List<? extends DJError> compile(java.util.List<? extends File> files,                                                    java.util.List<? extends File> classPath,                                                     java.util.List<? extends File> sourcePath,                                                    File destination,                                                     java.util.List<? extends File> bootClassPath,                                                    String sourceVersion,                                                    boolean showWarnings)", "signatureAfterChange": "   public java.util.List<? extends DJError> compile(java.util.List<? extends File> files,                                                    java.util.List<? extends File> classPath,                                                     java.util.List<? extends File> sourcePath,                                                    File destination,                                                     java.util.List<? extends File> bootClassPath,                                                    String sourceVersion,                                                    boolean showWarnings)", "diff": ["-    java.util.List<File> filteredClassPath = null;", "-    if (classPath!=null) {", "-      filteredClassPath = new LinkedList<File>(classPath);", "-      ", "-      if (_filterExe) {", "-        FileFilter filter = IOUtil.extensionFilePredicate(\"exe\");", "-        Iterator<? extends File> i = filteredClassPath.iterator();", "-        while (i.hasNext()) {", "-          if (filter.accept(i.next())) { i.remove(); }", "-        }", "-        if (_tempJUnit!=null) { filteredClassPath.add(_tempJUnit); }", "-      }", "-    }", "+    java.util.List<File> filteredClassPath = getFilteredClassPath(classPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f11f50c5bc5a6fab909ec711e6c88e75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk16/edu/rice/cs/drjava/model/compiler/Javac160Compiler.java", "commitBeforeChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "commitAfterChange": "51ac7cbc7782d911930f183c9cf811f53aba30d2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public List<? extends CompilerError> compile(List<? extends File> files, List<? extends File> classPath,                                                 List<? extends File> sourcePath, File destination,                                                 List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "signatureAfterChange": "   public List<? extends DJError> compile(List<? extends File> files, List<? extends File> classPath,                                                 List<? extends File> sourcePath, File destination,                                                 List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "diff": ["-  public List<? extends CompilerError> compile(List<? extends File> files, List<? extends File> classPath, ", "+  public List<? extends DJError> compile(List<? extends File> files, List<? extends File> classPath, ", "-    List<File> filteredClassPath = new LinkedList<File>(classPath);", "-    if (_filterExe) {", "-      FileFilter filter = IOUtil.extensionFilePredicate(\"exe\");", "-      Iterator<? extends File> i = filteredClassPath.iterator();", "-      while (i.hasNext()) {", "-\tif (filter.accept(i.next())) { i.remove(); }", "-      }", "-      if (_tempJUnit!=null) { filteredClassPath.add(_tempJUnit); }", "-    }", "-    Context context = _createContext(filteredClassPath, sourcePath, destination, bootClassPath, sourceVersion, showWarnings);", "-    LinkedList<CompilerError> errors = new LinkedList<CompilerError>();", "+    Context context = _createContext(classPath, sourcePath, destination, bootClassPath, sourceVersion, showWarnings);", "+    LinkedList<DJError> errors = new LinkedList<DJError>();", "-      errors.addFirst(new CompilerError(\"Compile exception: \" + t, false));", "+      errors.addFirst(new DJError(\"Compile exception: \" + t, false));"]}], "num": 9835}