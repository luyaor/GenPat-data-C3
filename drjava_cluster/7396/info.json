{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41bee1c5bdeefc3e544fefc8616aa609", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1798ac57b0b5ab42d0a2daa3b3d1da44", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected void handleInnerClassDef(InnerClassDef that, Data data, String name)", "signatureAfterChange": "   protected void handleInnerClassDef(InnerClassDef that, Data enclosing, String relName, String name)", "diff": ["-  protected void handleInnerClassDef(InnerClassDef that, Data data, String name) {", "-//    System.err.println(\"Processing InnerClassDef for \" + name);", "+  // and hoist this code into LanguageLevelVisitor", "+  protected void handleInnerClassDef(InnerClassDef that, Data enclosing, String relName, String name) {", "+//    System.err.println(\"Processing InnerClassDef for \" + name + \" defined in \" + enclosing.getName());", "+    ", "+    assert (enclosing instanceof SymbolData) || (enclosing instanceof MethodData);", "-    SymbolData sd = defineInnerSymbolData(that, name, data);", "-    if (sd != null) { // We have a symbol data to work with, so visit the body and augment", "-      that.getBody().visit(new ClassBodyIntermediateVisitor(sd, ", "+    SymbolData sd = defineInnerSymbolData(that, relName, name, enclosing);", "+    if (sd != null) { // We have a SymbolData to work with, so visit the body and augment", "+      that.getBody().visit(new ClassBodyIntermediateVisitor(sd,", "+                                                            sd.getName(),", "-                                                            _classNamesInThisFile, ", "-                                                            continuations));", "+                                                            _classesInThisFile, ", "+                                                            continuations,", "+                                                            fixUps));", "+      // The following methods are no-ops in FullJavaVisitor", "-    // Inner classes are not entered in _classesToBeParsed since they are parsed when their outer classes are parsed.", "+    // Inner classes are not entered in _classesInThisFile since they are parsed when their outer classes are parsed."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92b6cfc27b38fe0f53ed85d291b8fd8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "   protected void handleInnerInterfaceDef(InnerInterfaceDef that, Data data, String name)", "signatureAfterChange": "   protected void handleInnerInterfaceDef(InnerInterfaceDef that, Data enclosing, String relName, String name)", "diff": ["-  protected void handleInnerInterfaceDef(InnerInterfaceDef that, Data data, String name) {", "+  // and hoist this code into LanguageLevelVisitor", "+  protected void handleInnerInterfaceDef(InnerInterfaceDef that, Data enclosing, String relName, String name) {", "+    assert (enclosing instanceof SymbolData) || (enclosing instanceof MethodData);", "-    SymbolData sd = defineInnerSymbolData(that, name, data);", "+    SymbolData sd = defineInnerSymbolData(that, relName, name, enclosing);", "-                                                                _classNamesInThisFile, ", "-                                                                continuations));", "+                                                                _classesInThisFile, ", "+                                                                continuations,", "+                                                                fixUps));"]}], "num": 7396}