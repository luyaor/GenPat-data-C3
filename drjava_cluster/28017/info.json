{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a21d466fd62fc3446e05510af573f8b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2216b74788a17d79b7d5f79ef71ea856", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/BinaryOpProperty.java", "commitBeforeChange": "abaea23707eba81455db9185a249740d89273b85", "commitAfterChange": "0dda00089189758fcd0a0e6dab08cb8c08b0176d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public BinaryOpProperty(String name,                           String help,                           Lambda2<P,Q,R> op,                           Lambda<P,String> parse1,                           Lambda<Q,String> parse2,                           Lambda<String,R> format)", "signatureAfterChange": "   public BinaryOpProperty(String name,                           String help,                           Lambda2<P,Q,R> op,                           String op1Name,                           String op1Default,                           Lambda<P,String> parse1,                           String op2Name,                           String op2Default,                           Lambda<Q,String> parse2,                           Lambda<String,R> format)", "diff": ["+                          String op1Name,", "+                          String op1Default,", "+                          String op2Name,", "+                          String op2Default,", "+    _op1Name = op1Name;", "+    _op1Default = op1Default;", "+    _op2Name = op2Name;", "+    _op2Default = op2Default;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "510fc38dbdd6de9ec78684e26a778a4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 280, "methodNumberAfterChange": 279, "signatureBeforeChange": "     public void init()", "signatureAfterChange": "     private ConcreteOpenDefDoc(File f, File dir, long stamp)", "diff": ["+    /* General constructor.  Only used privately. */", "+    private ConcreteOpenDefDoc(File f, File dir, long stamp) {", "+ ", "+      _parentDir = dir;", "+      _timestamp = stamp;", "-    //----------- Initialization -----------//", "-    public void init() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f95beb909574224265d8b4d26097b5e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/PopupConsole.java", "commitBeforeChange": "701cda038bdbb4505f738d5f2728e5888b8608b3", "commitAfterChange": "a2c3a24c2af61d289658b8fde0de718a948c97d9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PopupConsole(Component owner)", "signatureAfterChange": "   public PopupConsole(Component owner, EditDocumentInterface doc, ConsoleDocument console, JTextArea inputBox,                        String title)", "diff": ["-   */", "-  public PopupConsole(Component owner) {", "-    this(owner, null, null);", "-  }", "+  public PopupConsole(Component owner, EditDocumentInterface doc, ConsoleDocument console, JTextArea inputBox, ", "+                      String title) {", "+    _doc = doc;", "+    _console = console;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0cb615a8d69bd084796cce22bacca17", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParseException.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public ParseException()", "signatureAfterChange": "       public ParseException(String message,                         Token currentTokenVal,                         int[][] expectedTokenSequencesVal,                         String[] tokenImageVal                           )", "diff": ["+   ", "+  public ParseException(String message,", "+                        Token currentTokenVal,", "+                        int[][] expectedTokenSequencesVal,", "+                        String[] tokenImageVal", "+                          )", "+  {", "+    super(message);", "+    customConstructor = true;", "+    currentToken = currentTokenVal;", "+    expectedTokenSequences = expectedTokenSequencesVal;", "+    tokenImage = tokenImageVal;", "+  }"]}], "num": 28017}