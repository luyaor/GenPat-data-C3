{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c8ad836ac0335fe4da65e4239a9898d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1713353f1a39bd60dc55f902d7839676", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void testReconstructor() throws IOException", "signatureAfterChange": "      public void testReconstructor() throws IOException", "diff": ["-        return null;", "+        return _saved;", "-    assertTrue(\"The document should start out in the cache\", _cache.isDDocInCache(doc1));", "-    _cache.update(doc1, d);", "-    assertFalse(\"The document should not be in the cache after an update\", _cache.isDDocInCache(doc1)); // force save", "-", "+    assertFalse(\"The document should not be in the cache\", _adapterTable.get(doc1).isReady());", "+    _saved = _adapterTable.get(doc1).getDocument();", "+    assertTrue(\"The document should be in the cache\", _adapterTable.get(doc1).isReady());", "-    _cache.get(doc1); // force the cache to reconstruct the document.", "+    _adapterTable.get(doc1).setReconstructor(d);", "+    assertFalse(\"The document should not be in the cache after an update\", _adapterTable.get(doc1).isReady());", "+    ", "+    _adapterTable.get(doc1).getDocument(); // force the cache to reconstruct the document.", "-    assertEquals(\"The make in the reconstructor was called once\", 1, _doc_made);", "-    assertEquals(\"The save in the reconstructor was called once\", 1, _doc_saved);", "+    assertEquals(\"The make in the reconstructor was called 1nce\", 1, _doc_made);", "+    assertEquals(\"The save in the reconstructor was not called\", 0, _doc_saved);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c35e26db4b42bb80740f7b8bd7241b67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "7159df222d88dee270188fe2cbffe74bb173d159", "commitAfterChange": "c73227da8024bfd14e7a2df3af6435d7a78133b3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testReconstructor() throws IOException", "signatureAfterChange": "      public void testReconstructor() throws IOException", "diff": ["-    assertFalse(\"The document should not start out in the cache\", _cache.isDDocInCache(doc1));", "+    assertTrue(\"The document should start out in the cache\", _cache.isDDocInCache(doc1));", "-    assertFalse(\"The document should not be in the cache after an update\", _cache.isDDocInCache(doc1));", "+    assertFalse(\"The document should not be in the cache after an update\", _cache.isDDocInCache(doc1)); // force save", "+", "-    assertEquals(\"The make in the reconstructor was called 1nce\", 1, _doc_made);", "-    assertEquals(\"The save in the reconstructor was not called\", 0, _doc_saved);", "+    assertEquals(\"The make in the reconstructor was called once\", 1, _doc_made);", "+    assertEquals(\"The save in the reconstructor was called once\", 1, _doc_saved);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eac0a759f06d03434c9ec40a8ec45290", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testReconstructor() throws IOException", "signatureAfterChange": "      public void testReconstructor() throws IOException", "diff": ["-    _adapterTable.get(doc1).setReconstructor(d);", "-    assertFalse(\"The document should not be in the cache after an update\", _adapterTable.get(doc1).isReady());", "-    ", "-    _adapterTable.get(doc1).getDocument(); // force the cache to reconstruct the document.", "-", "-    assertEquals(\"The make in the reconstructor was called 1nce\", 1, _doc_made);", "-    assertEquals(\"The save in the reconstructor was not called\", 0, _doc_saved);", "+//    _adapterTable.get(doc1).setReconstructor(d);", "+//    assertFalse(\"The document should not be in the cache after an update\", _adapterTable.get(doc1).isReady());", "+//    ", "+//    _adapterTable.get(doc1).getDocument(); // force the cache to reconstruct the document.", "+//", "+//    assertEquals(\"The make in the reconstructor was called 1nce\", 1, _doc_made);", "+//    assertEquals(\"The save in the reconstructor was not called\", 0, _doc_saved);"]}], "num": 24880}