{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8601935b92cda2fa78035a9a9c59a37", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03a39de175f2e7f4248e996aca949ab0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   private void init(boolean info)", "signatureAfterChange": "   private void init(boolean info)", "diff": ["-        if (_matchList.getModel().getSize()>0) {", "+        if (_matchList.getModel().getSize() > 0) {", "-          if (i>0) {", "-            _matchList.setSelectedIndex(i-1);", "-            _matchList.ensureIndexIsVisible(i-1);", "-            _pim.setCurrentItem(_pim.getMatchingItems().get(i-1));", "+          if (i > 0) {", "+            _matchList.setSelectedIndex(i - 1);", "+            _matchList.ensureIndexIsVisible(i - 1);", "+            _pim.setCurrentItem(_pim.getMatchingItems().get(i - 1));", "-          if (i<_matchList.getModel().getSize()-1) {", "-            _matchList.setSelectedIndex(i+1);", "-            _matchList.ensureIndexIsVisible(i+1);", "-            _pim.setCurrentItem(_pim.getMatchingItems().get(i+1));", "+          if (i < _matchList.getModel().getSize() - 1) {", "+            _matchList.setSelectedIndex(i + 1);", "+            _matchList.ensureIndexIsVisible(i + 1);", "+            _pim.setCurrentItem(_pim.getMatchingItems().get(i + 1));", "-        if (_matchList.getModel().getSize()>0) {", "+        if (_matchList.getModel().getSize() > 0) {", "-          if (i<0) {", "-            i = 0;", "-          }", "+          if (i < 0)  i = 0;", "-          if (i>=_matchList.getModel().getSize()) {", "-            i = _matchList.getModel().getSize()-1;", "+          if (i >= _matchList.getModel().getSize()) {", "+            i = _matchList.getModel().getSize() - 1;", "-//          String newMask = oldMask.substring(0, _textField.getCaretPosition()) + c + oldMask.substring(_textField.getCaretPosition());", "+//          String newMask = oldMask.substring(0, _textField.getCaretPosition()) + c + ", "+//            oldMask.substring(_textField.getCaretPosition());", "-        if ((e.getOppositeComponent()!=_strategyBox) && ", "-            (e.getOppositeComponent()!=_okButton) && ", "-            (e.getOppositeComponent()!=cancelButton)) {", "+        if ((e.getOppositeComponent() != _strategyBox) && ", "+            (e.getOppositeComponent() != _okButton) && ", "+            (e.getOppositeComponent() != cancelButton)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ed727e18b62414264bbcbdd14d8ba96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    super(frame, \"Compiler Output\");", "-    _model = model;", "+    super(model, frame, \"Compiler Output\");", "-    /*", "-    _showAllButton = new JButton(\"Show all\");", "-    _showAllButton.addActionListener(new ActionListener() {", "-        public void actionPerformed(ActionEvent e) {", "-          _showAllErrors();", "-        }", "-    });", "-", "-    _nextButton = new JButton(\"Next\");", "-    _nextButton.addActionListener(new ActionListener() {", "-        public void actionPerformed(ActionEvent e) {", "-          int index = _errorListPane.getSelectedIndex() + 1;", "-          if (index < _numErrors) {", "-            _errorListPane.switchToError(index);", "-          }", "-        }", "-    });", "-", "-    _previousButton = new JButton(\"Previous\");", "-    _previousButton.addActionListener(new ActionListener() {", "-        public void actionPerformed(ActionEvent e) {", "-          int index = _errorListPane.getSelectedIndex() -1 ;", "-          if (index >= 0) {", "-            _errorListPane.switchToError(index);", "-          }", "-        }", "-    });", "-    */", "-", "-    _errorListPane = new ErrorListPane();", "+    _errorListPane = new CompilerErrorListPane();", "-    _compilerChoiceBox = new JComboBox(_model.getAvailableCompilers());", "+    _compilerChoiceBox = new JComboBox(getModel().getAvailableCompilers());", "-    _compilerChoiceBox.setSelectedItem(_model.getActiveCompiler());", "+    _compilerChoiceBox.setSelectedItem(getModel().getActiveCompiler());", "-          _model.setActiveCompiler(compiler);", "+          getModel().setActiveCompiler(compiler);", "-          _model.setActiveCompiler(NoCompilerAvailable.ONLY);", "+          getModel().setActiveCompiler(NoCompilerAvailable.ONLY);", "-        _model.resetCompilerErrors();", "-        _frame.updateErrorListeners();", "+        getModel().resetCompilerErrors();", "-    // Disable buttons. They don't totally work and who needs em.", "-    /*", "-    JPanel buttonPanel = new JPanel();", "-    buttonPanel.setLayout(new BoxLayout(buttonPanel, BoxLayout.Y_AXIS));", "-    buttonPanel.add(_previousButton);", "-    buttonPanel.add(_nextButton);", "-    // Show all not yet implemented.", "-    // buttonPanel.add(_showAllButton);", "-    add(buttonPanel, BorderLayout.EAST);", "-    */", "-    ", "-        DefinitionsPane lastDefPane = _errorListPane.getLastDefPane();", "+        DefinitionsPane lastDefPane = getErrorListPane().getLastDefPane();", "-          _errorListPane.switchToError(_errorListPane.getSelectedIndex());", "+          getErrorListPane().switchToError(getErrorListPane().getSelectedIndex());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7696bdb4184c811359d982c560a1428c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorOptionComponent.java", "commitBeforeChange": "b59ea5c5062a947f96790df7fe854009e693434a", "commitAfterChange": "51e686ba41ead06ef0f1c4bec2b00eaf247dbe80", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public VectorOptionComponent(VectorOption<T> opt, String text, SwingFrame parent)", "signatureAfterChange": "   public VectorOptionComponent(VectorOption<T> opt, String text, SwingFrame parent)", "diff": ["+    this(opt, text, parent, new String[0]);", "+  }", "-    //set up list", "-    _listModel = new DefaultListModel();", "-    _list = _makeList(_listModel);", "-", "-    /*", "-    Vector v = DrJava.getConfig().getSetting(_option);", "-    String[] array = new String[v.size()];", "-    v.copyInto(array);", "-    //_list.setListData(array);", "-    for (int i = 0; i < array.length; i++) {", "-      _listModel.add(array[i]);", "-    }", "-    */", "-        if (!_list.isSelectionEmpty()) {", "-          int index = _list.getSelectedIndex();", "-          _listModel.remove(index);", "-          if (index == _listModel.getSize()) { // we removed the last element", "-            if (index > 0) // and there's more than one element in the list", "-            _list.setSelectedIndex(index - 1);", "-            notifyChangeListeners();", "-            _list.setSelectedIndex(index);", "-            notifyChangeListeners();", "-        if (!_list.isSelectionEmpty()) {", "-          int index = _list.getSelectedIndex();", "-          if (index > 0) {", "-            Object o = _listModel.getElementAt(index);", "-            _listModel.remove(index);", "-            _listModel.insertElementAt(o, index - 1);", "-            _list.setSelectedIndex(index - 1);", "-            notifyChangeListeners();", "-        if (!_list.isSelectionEmpty()) {", "-          int index = _list.getSelectedIndex();", "-          if (index < _listModel.getSize() - 1) {", "-            Object o = _listModel.getElementAt(index);", "-            _listModel.remove(index);", "-            _listModel.insertElementAt(o, index + 1);", "-            _list.setSelectedIndex(index + 1);", "-            notifyChangeListeners();", "-    ", "-    _listScrollPane = new JScrollPane(_list, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,", "-                                      JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);", "-    _panel.add(_listScrollPane, BorderLayout.CENTER);", "-    _listScrollPane.setPreferredSize(new Dimension(0, NUM_ROWS * PIXELS_PER_ROW));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85b54fe040b6c138658480ab0032aa2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorOptionComponent.java", "commitBeforeChange": "27c256ec9281e0464172656b15ccb73506c1cbc1", "commitAfterChange": "efe2cdfa860877c37343dbc5d29e380b33344492", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public VectorOptionComponent (VectorOption<File> opt, String text, Frame parent)", "signatureAfterChange": "   public VectorOptionComponent(VectorOption<T> opt, String text, Frame parent)", "diff": ["-  public VectorOptionComponent (VectorOption<File> opt, String text, Frame parent) {", "+   */", "+  public VectorOptionComponent(VectorOption<T> opt, String text, Frame parent) {", "-    _fileFilter = ClasspathFilter.ONLY;", "-    // set up JFileChooser", "-    File workDir = DrJava.getConfig().getSetting(WORKING_DIRECTORY);", "-    if (workDir == FileOption.NULL_FILE) {", "-      workDir = new File( System.getProperty(\"user.dir\"));", "-    }", "-    if (workDir.isFile() && workDir.getParent() != null) {", "-      workDir = workDir.getParentFile();", "-    }", "-    _jfc = new JFileChooser(workDir);", "-    _jfc.setDialogTitle(\"Select\");", "-    _jfc.setApproveButtonText(\"Select\");", "-    _jfc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);", "-    _jfc.setMultiSelectionEnabled(true);", "-", "-    _addButton = new JButton(\"Add\");", "-    _addButton.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent ae) {", "-        chooseFile();", "-        _list.setSelectedIndex(_listModel.getSize() - 1);", "-      }", "-    });", "-", "-    _removeButton = new JButton(\"Remove\");", "-    _removeButton.addActionListener(new ActionListener() {", "+    _addButton = new JButton(_getAddAction());", "+    _removeButton = new JButton(new AbstractAction(\"Remove\") {", "-          else", "+          else {", "-        }", "-      }", "-    });", "-", "-    _moveUpButton = new JButton(\"Move Up\");", "-    _moveUpButton.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent ae) {", "-        if (!_list.isSelectionEmpty()) {", "-          int index = _list.getSelectedIndex();", "-          if (index > 0) {", "-            Object o = _listModel.getElementAt(index);", "-            _listModel.remove(index);", "-            _listModel.add(index - 1, o);", "-            _list.setSelectedIndex(index - 1);", "-    _moveDownButton = new JButton(\"Move Down\");", "-    _moveDownButton.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent ae) {", "-        if (!_list.isSelectionEmpty()) {", "-          int index = _list.getSelectedIndex();", "-          if (index < _listModel.getSize() - 1) {", "-            Object o = _listModel.getElementAt(index);", "-            _listModel.remove(index);", "-            _listModel.add(index + 1, o);", "-            _list.setSelectedIndex(index + 1);", "-          }", "-        }", "-      }", "-    });", "-", "-    JPanel buttons = new JPanel();", "+    _buttonPanel = new JPanel();", "+    _buttonPanel.add(_addButton);", "+    _buttonPanel.add(_removeButton);", "-    buttons.add(_addButton);", "-    buttons.add(_removeButton);", "-    buttons.add(_moveUpButton);", "-    buttons.add(_moveDownButton);", "-    _panel.add(buttons, BorderLayout.SOUTH);", "+    _panel.add(_buttonPanel, BorderLayout.SOUTH);", "+", "+    _listScrollPane.setPreferredSize(new Dimension(0, NUM_ROWS * PIXELS_PER_ROW));"]}], "num": 14575}