{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d321a44c8d1f277da1e262c5d3e2c23c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "888f8383a7cc57f4495cb5f3e9a48fd0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ConstructorBodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "          public void testComplexSuperConstructorInvocationAllowed()", "signatureAfterChange": "          public void testComplexSuperConstructorInvocationAllowed()", "diff": ["-      ComplexSuperConstructorInvocation constr1 = new ComplexSuperConstructorInvocation(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"nonExistant\")), new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]));", "+      ComplexSuperConstructorInvocation constr1 = new ComplexSuperConstructorInvocation(SourceInfo.NONE, new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"nonExistant\")), new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0]));", "-      ComplexSuperConstructorInvocation constr2 = new ComplexSuperConstructorInvocation(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"zebra\")), new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]));", "+      ComplexSuperConstructorInvocation constr2 = new ComplexSuperConstructorInvocation(SourceInfo.NONE, new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"zebra\")), new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0]));", "-      ComplexSuperConstructorInvocation constr3 = new ComplexSuperConstructorInvocation(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"u.like.emu\")), new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]));", "+      ComplexSuperConstructorInvocation constr3 = new ComplexSuperConstructorInvocation(SourceInfo.NONE, new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"u.like.emu\")), new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0]));", "-      ComplexSuperConstructorInvocation constr4 = new ComplexSuperConstructorInvocation(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"var\")), new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]));", "+      ComplexSuperConstructorInvocation constr4 = new ComplexSuperConstructorInvocation(SourceInfo.NONE, new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"var\")), new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3d3638ec66c262f2c0182bd9f143d6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyFullJavaVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "          public void testForAbstractMethodDef()", "signatureAfterChange": "          public void testForAbstractMethodDef()", "diff": ["-      MethodDef mdef = new AbstractMethodDef(SourceInfo.NO_INFO, ", "+      MethodDef mdef = new AbstractMethodDef(SourceInfo.NONE, ", "-                                             new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                             new Word(SourceInfo.NO_INFO, \"methodName\"),", "+                                             new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                             new Word(SourceInfo.NONE, \"methodName\"),", "-      _ibfv._symbolData.setMav(_abstractMav);", "+      _ibfv._enclosing.setMav(_abstractMav);", "-      mdef = new AbstractMethodDef(SourceInfo.NO_INFO, ", "+      mdef = new AbstractMethodDef(SourceInfo.NONE, ", "-                                             new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                             new Word(SourceInfo.NO_INFO, \"MyInterface\"),", "+                                             new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                             new Word(SourceInfo.NONE, \"MyInterface\"),", "-      AbstractMethodDef amd3 = new AbstractMethodDef(SourceInfo.NO_INFO, ", "+      AbstractMethodDef amd3 = new AbstractMethodDef(SourceInfo.NONE, ", "-                                                     new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                                     new Word(SourceInfo.NO_INFO, \"methodName2\"),", "+                                                     new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                                     new Word(SourceInfo.NONE, \"methodName2\"),", "-      assertTrue(\"The method def should be public\", _ibfv._symbolData.getMethods().get(1).hasModifier(\"public\"));", "+      assertTrue(\"The method def should be public\", _ibfv._enclosing.getMethods().get(1).hasModifier(\"public\"));", "-      AbstractMethodDef amd4 = new AbstractMethodDef(SourceInfo.NO_INFO, ", "+      AbstractMethodDef amd4 = new AbstractMethodDef(SourceInfo.NONE, ", "-                                                     new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                                     new Word(SourceInfo.NO_INFO, \"methodName3\"),", "+                                                     new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                                     new Word(SourceInfo.NONE, \"methodName3\"),", "-      AbstractMethodDef amd5 = new AbstractMethodDef(SourceInfo.NO_INFO, ", "+      AbstractMethodDef amd5 = new AbstractMethodDef(SourceInfo.NONE, ", "-                                                     new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                                     new Word(SourceInfo.NO_INFO, \"methodName4\"),", "+                                                     new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                                     new Word(SourceInfo.NONE, \"methodName4\"),"]}], "num": 13808}