{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "177383c516645814c3409b35ec7ff4a2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bd18afd390de3f262206d4a0a645f84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/BrowserHistoryManager.java", "commitBeforeChange": "7abad9d4d237e1759bd098868c3fc80eb6e4365f", "commitAfterChange": "dcd05db97717868f3a1bba07cb5b1b9106d93c65", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private BrowserDocumentRegion _lower(TreeSet<BrowserDocumentRegion> regions, BrowserDocumentRegion r)", "signatureAfterChange": "   public static boolean similarRegions(BrowserDocumentRegion r1, BrowserDocumentRegion r2)", "diff": ["-    * which is null if _regions is empty. */", "-  private BrowserDocumentRegion _lower(TreeSet<BrowserDocumentRegion> regions, BrowserDocumentRegion r) {", "-    if (_regions.isEmpty()) return null;", "-    BrowserDocumentRegion least = _regions.first();", "-    SortedSet<BrowserDocumentRegion> lowerSet = regions.subSet(least, r);", "-//    Utilities.show(\"Given regions = \" + _regions + \", lowerSet = \" + lowerSet);", "-    if (lowerSet.isEmpty()) return _regions.first();", "-    return lowerSet.last();", "-  }", "+  /** Return true if the two regions are similar. */", "+  public static boolean similarRegions(BrowserDocumentRegion r1, BrowserDocumentRegion r2) {", "+    OpenDefinitionsDocument d = r1.getDocument();", "+    if (d!=r2.getDocument()) return false;", "+    int l1 = d.getLineOfOffset(r1.getStartOffset());", "+    int l2 = d.getLineOfOffset(r2.getStartOffset());", "+    return (Math.abs(l1-l2) <= DIFF_THRESHOLD);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29fab20c9ca7f7fe34605b3e11e839a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "f835199d645f480bb352cc51cff6dc5ae32e7dc4", "commitAfterChange": "f25bc20d2dd4058b4cf2bf5f693569e62fb40d6b", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 98, "signatureBeforeChange": "          public String toString()", "signatureAfterChange": "               public String toString()", "diff": ["-        result.append(\"{ \");", "-        boolean first = true;", "-        ", "-        for (Map.Entry<VariableType, Type> entry : _lowerBounds.entrySet()) {", "-          if (!first) { result.append(\", \"); }", "-          first = false;", "-          result.append(entry.getKey() + \" :> \" + userRepresentation(entry.getValue()));", "+        boolean firstScenario = true;", "+        for (ConstraintScenario s : scenarios()) {", "+          if (!firstScenario) { result.append(\" | \"); }", "+          firstScenario = false;", "+          result.append(\"{ \");", "+          boolean firstVar = true;", "+          for (VariableType var : s.boundVariables()) {", "+            if (firstVar) { result.append(\", \"); }", "+            firstVar = false;", "+            result.append(userRepresentation(s.lowerBound(var)));", "+            result.append(\" <: \");", "+            result.append(var.symbol().name());", "+            result.append(\" <: \");", "+            result.append(userRepresentation(s.upperBound(var)));", "+          }", "+          result.append(\" }\");", "-        for (Map.Entry<VariableType, Type> entry : _upperBounds.entrySet()) {", "-          if (!first) { result.append(\", \"); }", "-          first = false;", "-          result.append(entry.getKey() + \" <: \" + userRepresentation(entry.getValue()));", "-        }", "-        result.append(\" }\");"]}], "num": 25828}