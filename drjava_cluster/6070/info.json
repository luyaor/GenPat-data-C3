{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba3ec59c97f64292fb330c49a9afa2ab", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68de3072890edff31b61cd210f33d179", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public void setPrivateAccessible(boolean allow)", "signatureAfterChange": "   public void setPrivateAccessible(boolean allow)", "diff": ["-   */", "+  /** Sets the interpreter to allow access to private members. */", "-    if (!_enabled) {", "-      return;", "-    }", "+    if (!_enabled) return;", "-    try {", "-      _interpreterJVM().setPrivateAccessible(allow);", "-    }", "-    catch (RemoteException re) {", "-      _threwException(re);", "-    }", "+    try { _interpreterJVM().setPrivateAccessible(allow); }", "+    catch (RemoteException re) { _threwException(re); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2006a43e2b5b2d60e1193f17e648f76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "224d0c84f840f8ce41af8c46df98c9446d0323a9", "commitAfterChange": "23d1c475c29f1525fd3971f7ee4a6f8e9616fd8a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Object interpret(String s)", "signatureAfterChange": "   public Object interpret(String s)", "diff": ["-        return  result; ", "+        return result; ", "-        return  JavaInterpreter.NO_RESULT;", "-    } catch (InterpreterInterruptedException iie) {", "+        return JavaInterpreter.NO_RESULT;", "+    }", "+    catch (InterpreterInterruptedException iie) {", "-    } catch (Throwable ie) {", "+    }", "+    catch (ExitingNotAllowedException enae) {", "+      throw enae;", "+    }", "+    catch (Throwable ie) {"]}], "num": 6070}