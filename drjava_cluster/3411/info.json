{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d9d4a403a7c2353923a54e5f8a7d286", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ebe7827c450b522420d0da5ea8fe549", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "55fb98a726c0190aa8a7fbeee084f55def19ac79", "commitAfterChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void addDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "signatureAfterChange": "   public void addDocument(INavigatorItem doc, String path)", "diff": ["-   */", "-  public void addDocument(INavigatorItem doc, String path) throws IllegalArgumentException {", "-    GroupNode _root = null;", "-    ", "-      ", "-      for (GroupNode r: _roots){", "-      ", "+   */", "+  public void addDocument(INavigatorItem doc, String path) {", "+    ", "+    synchronized(_model) {", "+      ", "+      GroupNode root = null;", "+      ", "+      for (GroupNode r: _roots) {", "+        if (r.getFilter().accept(doc)) {", "+          root = r;", "+          break;", "+        }", "+      }", "+      ", "+      if (root == null) return;", "-      String pathSoFar=\"\";", "-      InnerNode lastNode = _root;", "+      StringBuffer pathSoFarBuf = new StringBuffer();", "+      InnerNode lastNode = root;", "-        pathSoFar += (element + \"/\");", "+        pathSoFarBuf.append(element).append('/');", "+        String pathSoFar = pathSoFarBuf.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fc500f8ed7e70240805e52526e01ec3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "d68c02cecc4cc58e597f55ca1d69f68604b75377", "commitAfterChange": "34921a1a3d031bdf7caa876f32f38a6fdc9dedda", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void addDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "signatureAfterChange": "   public void addDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "diff": ["-    ", "-    if (!path.equals(_topLevelPath) && !path.startsWith(_topLevelPath + File.separator) )", "-    {", "-      addDocument(doc);", "-      return;", "-    }   ", "-    // if the file is at the top level", "-    if (path.equals(_topLevelPath)) {", "-      LeafNode node = new LeafNode(doc);", "-      node.setUserObject(doc);", "-      insertNodeSortedInto(node, _root);", "-      _doc2node.put(doc, node);", "-      return;", "+    GroupNode _root = null;", "+", "+    for(GroupNode r: _roots){", "+      if(r.getFilter().accept(doc)) {", "+        _root = r;", "+        break;", "+      }", "-    // strip out the absolute path info", "-    path = path.substring(_topLevelPath.length());", "+    if(_root == null) {", "+      return;", "+    }", "+", "-        thisNode = new FileNode(new File(_topLevelPath + File.separator + pathSoFar));", "+        thisNode = new FileNode(new File(pathSoFar));"]}], "num": 3411}