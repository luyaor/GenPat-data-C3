{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd1964fd3f4594a072e7fbef45785498", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26d65e6ff9f0d5e5947e1489135e2c3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugStackData.java", "commitBeforeChange": "ba6275930e25f1b0898c45319a21c16860b3e177", "commitAfterChange": "1bd0fb2319802a0180bca30c066879626028c532", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DebugStackData(StackFrame frame)", "signatureAfterChange": "   public DebugStackData(StackFrame frame)", "diff": ["-    String method = \"(unknown)\";", "-    String line = \"(unknown)\";", "-    method = frame.location().declaringType().name() + \".\" +", "+    //String method = \"(unknown)\";", "+    //String line = \"(unknown)\";", "+    _method = frame.location().declaringType().name() + \".\" +", "-    _method = method;", "+    //_method = method;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3df9a02759ac05f6335bc58f372e1d5f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "signatureAfterChange": "   public synchronized void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "diff": ["-  public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException {", "+  public synchronized void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException {", "-     * since we are modifying the model of this tree, and in the middle of this modification,", "-     * we have an unstable model, we need to synchronize around it.", "-     * Note: this solved the bug where compile all with modified documents would throw an array", "+     * This operation is now synchronized which I think should eliminate the ", "+     * bug where compile all with modified documents would throw an array", "+    ", "-    if (node == null) {", "-      addDocument(doc, path);", "-    }", "+    if (node == null) addDocument(doc, path);", "-//    System.out.println(\"path=\"+path);", "-//    System.out.println(\"newPath=\"+newPath);", "-//    System.out.println(\"oldParent=\"+oldParent);", "-//    System.out.println(\"newParent=\"+newParent);", "-//    System.out.println(_path2node);", "+    //    System.out.println(\"path=\"+path);", "+    //    System.out.println(\"newPath=\"+newPath);", "+    //    System.out.println(\"oldParent=\"+oldParent);", "+    //    System.out.println(\"newParent=\"+newParent);", "+    //    System.out.println(_path2node);", "-//        System.out.print(\"sort of \");", "-//      System.out.println(\"fast\");", "-    }", "-    else {", "-      Object lock = new Object();", "-      synchronized(lock) {", "-        removeNode(node);", "-      }", "-      synchronized(lock) {", "-        addDocument(doc, path);", "-      }", "-//      System.out.println(\"slow\");", "+    } else {", "+      removeNode(node);", "+      addDocument(doc, path);"]}], "num": 15772}