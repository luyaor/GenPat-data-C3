{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3371a5668a8c36f3cdff56dbe7a6ec5e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3aa3292804436349746f7caf84edac1d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ff65482ac0c34f9d18b211e3b1fa05371a07fb91", "commitAfterChange": "43bd3e08ba052e97e1d0271e7f1e324beac2ba86", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public String getDisplayFullPath(OpenDefinitionsDocument doc)", "signatureAfterChange": "      public void saveProject(String filename) throws IOException", "diff": ["+  ", "+  public void saveProject(String filename) throws IOException {", "+    ", "+    String base = filename.substring(0, filename.lastIndexOf(File.separator));", "+    System.out.println(\"base is \" + base);", "+    ProjectFileBuilder builder = new ProjectFileBuilder(base);", "+    ", "+    // add opendefinitionsdocument", "+    Iterator<OpenDefinitionsDocument> odds = _documentsRepos.valuesIterator();", "+    while(odds.hasNext())", "+    {", "+      OpenDefinitionsDocument doc = odds.next();", "+      builder.addSourceFile(doc.getFile());", "+    }", "+    ", "+    // add classpath info", "+    Vector<File> currentclasspaths = DrJava.getConfig().getSetting(OptionConstants.EXTRA_CLASSPATH);", "+    for(int i = 0; i<currentclasspaths.size(); i++)", "+    {", "+      builder.addClasspathFile(currentclasspaths.get(i));", "+    }", "+    ", "+    // write to disk", "+    FileWriter fw = new FileWriter(filename);", "+    fw.write(builder.makeProjectFile());", "+    fw.close();", "+    ", "+    ", "-   */", "-  public String getDisplayFullPath(OpenDefinitionsDocument doc) {", "-    String path = \"(untitled)\";", "-    try {", "-      File file = doc.getFile();", "-      path = file.getAbsolutePath();", "-    }", "-    catch (IllegalStateException ise) {", "-      // No file, filename stays \"Untitled\"", "-    }", "-    catch (FileMovedException fme) {", "-      // Recover, even though file was deleted", "-      File file = fme.getFile();", "-      path = file.getAbsolutePath();", "-    }", "-", "-    // Mark if modified", "-    if (doc.isModifiedSinceSave()) {", "-      path = path + \" *\";", "-    }", "-", "-    return path;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5c3cd25b37e656e8c1deb74a1c6fb8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "a64d259eb205583970c69af64c3cca967dd81a0f", "commitAfterChange": "9be84f23a860532e5852c80be2ef2d01c63b33b7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 59, "signatureBeforeChange": "       public void optionChanged(OptionEvent<Integer> oce)", "signatureAfterChange": "   public String getDisplayFullPath(OpenDefinitionsDocument doc)", "diff": ["-                                         new OptionListener<Integer>() {", "-      public void optionChanged(OptionEvent<Integer> oce) {", "-        INDENTER.buildTree(oce.value.intValue());", "-      }", "+   */", "+  public String getDisplayFullPath(OpenDefinitionsDocument doc) {", "+", "+    String path = \"(untitled)\";", "+    try {", "+      File file = doc.getFile();", "+      path = file.getAbsolutePath();", "+    }", "+    catch (IllegalStateException ise) {", "+      // No file, filename stays \"Untitled\"", "+    }", "+    catch (FileMovedException fme) {", "+      // Recover, even though file was deleted", "+      File file = fme.getFile();", "+      path = file.getAbsolutePath();", "+    }", "+", "+    // Mark if modified", "+    if (doc.isModifiedSinceSave()) {", "+      path = path + \" *\";", "+    }", "+", "+    return path;", "+  }"]}], "num": 1261}