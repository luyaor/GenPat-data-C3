{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c82b87ec8a67d49170550f628ad5b9f9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f49bb2c1793716cc1eb66a44b7b7768", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaRoot.java", "commitBeforeChange": "34ce8483136d91f9eff46f1971dc8a612f363868", "commitAfterChange": "cfd4689ec89c3908ea0306a11510c85ea5436de0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          private static void _openCommandLineFiles(MainFrame mf, String[] filesToOpen, int len)", "signatureAfterChange": "          private static void _openCommandLineFiles(final MainFrame mf, String[] filesToOpen, int len, boolean jump)", "diff": ["-  private static void _openCommandLineFiles(MainFrame mf, String[] filesToOpen, int len) {", "+  private static void _openCommandLineFiles(final MainFrame mf, String[] filesToOpen, int len, boolean jump) {", "+    anyLineNumbersSpecified = false;", "+      ", "+      // check if the file contains a line number", "+      // the line number can be specified at the end of the file name,", "+      // separated by File.pathSeparator", "+      int lineNo = -1;", "+      int pathSepIndex = currFileName.indexOf(File.pathSeparatorChar);", "+      if (pathSepIndex>=0) {", "+        try {", "+          lineNo = new Integer(currFileName.substring(pathSepIndex+1));", "+          anyLineNumbersSpecified = true;", "+        }", "+        catch(NumberFormatException nfe) {", "+          lineNo = -1;", "+        }", "+        currFileName = currFileName.substring(0,pathSepIndex);", "+      }", "+      ", "-        if (isProjectFile) mf.openProject(command);", "-        else mf.getModel().openFile(command);", "+        if (isProjectFile) {", "+          mf.openProject(command);", "+        }", "+        else {", "+          if (jump && (lineNo>=0)) {", "+            // if a line number has been specified, open the file using MainFrame.open,", "+            // then use invokeLater to run MainFrame._jumpToLine.", "+            // note: this can only be done after MainFrame.start() has been called.", "+            mf.open(command);", "+            final int l = lineNo;", "+            edu.rice.cs.util.swing.Utilities.invokeLater(new Runnable() { ", "+              public void run() { mf._jumpToLine(l); }", "+            });", "+          }", "+          else {", "+            // without line number, use the model's openFile.", "+            mf.getModel().openFile(command);", "+          }", "+        }", "-      catch (Exception ex) { throw new UnexpectedException(ex); }  ", "+      catch (Exception ex) { throw new UnexpectedException(ex); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70a5c0c7ed125e2fec961dfca23ec2b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "63c14fb4387b2322a54bec21270f907efc3bbeb5", "commitAfterChange": "abcd28f90aa707a487bed59497ff45149a089bc9", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "   void initGotoFileDialog()", "signatureAfterChange": "   void initGotoFileDialog()", "diff": ["+            final int curLine = _model.getActiveDocument().getCurrentLine();", "+            String t = p.getText();", "+            System.out.println(\"Goto file: \"+t);", "+            if (t.lastIndexOf(':')>=0) {", "+              try {", "+                String end = t.substring(t.lastIndexOf(':')+1);", "+                final int lineNum = Integer.parseInt(end);", "+                System.out.println(\"Goto line: \"+lineNum);", "+                SwingUtilities.invokeLater(new Runnable() {", "+                  public void run() {", "+                    try {", "+                      _jumpToLine(lineNum);", "+                    }", "+                    catch (RuntimeException e) { _jumpToLine(curLine); }", "+                  }", "+                });", "+              }", "+              catch(RuntimeException e) { /* ignore */ }", "+            }", "-      strategies.add(new PredictiveInputModel.FragmentStrategy<GoToFileListEntry>());", "-      strategies.add(new PredictiveInputModel.PrefixStrategy<GoToFileListEntry>());", "-      strategies.add(new PredictiveInputModel.RegExStrategy<GoToFileListEntry>());", "+      strategies.add(new PredictiveInputModel.FragmentLineNumStrategy<GoToFileListEntry>());", "+      strategies.add(new PredictiveInputModel.PrefixLineNumStrategy<GoToFileListEntry>());", "+      strategies.add(new PredictiveInputModel.RegExLineNumStrategy<GoToFileListEntry>());"]}], "num": 7645}