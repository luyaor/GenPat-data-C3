{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b1e10fa6400bd5ad366e1cf47bb679a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f140d623bdeb9e9e5c01bc99bc510f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsListTest.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testMap()", "signatureAfterChange": "      public void testMap()", "diff": ["-    assertEquals(emptyStrings, map(emptyNumbers, Lambda.TO_STRING));", "-    assertEquals(singleton(\"23\"), map(singletonNumbers, Lambda.TO_STRING));", "-    assertEquals(cons(\"14.0\", singleton(\"11\")), map(twoNumbers, Lambda.TO_STRING));", "-    assertEquals(cons(\"-1\", cons(\"-2.0\", singleton(\"-3.0\"))), map(threeNumbers, Lambda.TO_STRING));", "+    assertEquals(emptyStrings, map(emptyNumbers, LambdaUtil.TO_STRING));", "+    assertEquals(singleton(\"23\"), map(singletonNumbers, LambdaUtil.TO_STRING));", "+    assertEquals(cons(\"14.0\", singleton(\"11\")), map(twoNumbers, LambdaUtil.TO_STRING));", "+    assertEquals(cons(\"-1\", cons(\"-2.0\", singleton(\"-3.0\"))), map(threeNumbers, LambdaUtil.TO_STRING));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6d6c28cbeec68abd9473ad4901f2750", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsListTest.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testIsEmpty()", "signatureAfterChange": "      public void testIsEmpty()", "diff": ["-    assertTrue(isEmpty(emptyStrings));", "-    assertFalse(isEmpty(singletonStrings));", "-    assertFalse(isEmpty(twoStrings));", "-    assertFalse(isEmpty(threeStrings));", "+    assertTrue(emptyStrings.isEmpty());", "+    assertFalse(singletonStrings.isEmpty());", "+    assertFalse(twoStrings.isEmpty());", "+    assertFalse(threeStrings.isEmpty());", "-    assertTrue(isEmpty(emptyNumbers));", "-    assertFalse(isEmpty(singletonNumbers));", "-    assertFalse(isEmpty(twoNumbers));", "-    assertFalse(isEmpty(threeNumbers));", "+    assertTrue(emptyNumbers.isEmpty());", "+    assertFalse(singletonNumbers.isEmpty());", "+    assertFalse(twoNumbers.isEmpty());", "+    assertFalse(threeNumbers.isEmpty());"]}], "num": 16543}