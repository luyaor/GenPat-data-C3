{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a7d8a7283b72372f670409a32053b9a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0790c501e8b3d3804be1a7bf12bfef4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public void ensureInterpreterConnected()", "signatureAfterChange": "   public void ensureInterpreterConnected()", "diff": ["+//    _log.log(\"ensureInterpreterConnected called by Main JVM\");", "-          //_log.logTime(\"interpreter is null, waiting for it to register\");", "+//          _log.log(\"interpreter is null in Main JVM, waiting for it to register\");", "-        //_log.logTime(\"interpreter registered; moving on\");", "+//        _log.log(\"interpreter registered in Main JVM; moving on\");", "-    catch (InterruptedException ie) { throw new edu.rice.cs.util.UnexpectedException(ie); }", "+    catch (InterruptedException ie) { throw new UnexpectedException(ie); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bfc251fb8d850f8a978e09186bd6efa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "701cda038bdbb4505f738d5f2728e5888b8608b3", "commitAfterChange": "a2c3a24c2af61d289658b8fde0de718a948c97d9", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void appendExceptionResult(String exceptionClass, String message, String stackTrace, String styleName)", "signatureAfterChange": "   public void appendExceptionResult(String exceptionClass, String message, String stackTrace, String styleName)", "diff": ["-    // the ConsoleInterface interface.  This cast and a similar one in ConsoleDocument must be removed because they", "-    // defeat the purpose of the ConsoleInterface interface.", "+    // the EditDocumentInterface interface.  This cast and a similar one in ConsoleDocument must be removed because they", "+    // defeat the purpose of the EditDocumentInterface interface.", "-    catch (DocumentAdapterException ble) { throw new UnexpectedException(ble); }", "+    catch (EditDocumentException ble) { throw new UnexpectedException(ble); }"]}], "num": 10396}