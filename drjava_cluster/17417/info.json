{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3debe59143caec6586afe97dbb053a04", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94e76c3512f4063b9823cc871b0252a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void registerSlave(SlaveRemote slave) throws RemoteException", "signatureAfterChange": "   public void registerSlave(SlaveRemote slave) throws RemoteException", "diff": ["+    ", "+    boolean quitSlavePending;  // flag used to move quitSlave() call out of synchronized block", "+    ", "-      _stubFile.delete();", "-      _stub = null;", "-      _classLoaderStub = null;", "-      _classLoaderStubFile.delete();", "+      quitSlavePending = _quitOnStartup;", "-        quitSlave();", "+    }", "+    if (quitSlavePending) {", "+      _log.log(this + \" Executing deferred quitSlave() that was called during startup\");", "+      quitSlave();  // not synchronized; _slave may be null when this code executes"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6ac00a93185f4f2b73d9dff3900215c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void dispose() throws RemoteException", "signatureAfterChange": "   public void dispose() throws RemoteException", "diff": ["+    _log.log(this + \".dispose() called; slaveRemote is \" + _slave);", "+    if (_startupInProgress) _log.log(this + \".dispose() is KILLing startup in process; dying slave reference does not yet exist\");", "-    if (dyingSlave != null) dyingSlave.quit();  // unsynchronized; may hasten the death of dyingSlave", "+    if (dyingSlave != null) { ", "+      _log.log(this + \".dispose() QUITing \" + dyingSlave);", "+      dyingSlave.quit();  // unsynchronized; may hasten the death of dyingSlave", "+    }"]}], "num": 17417}