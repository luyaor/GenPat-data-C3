{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74e6820dfbc64d81fb50373fdc8663d0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d15ee2b541af2c50c2fd830ef599d17", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/ScrollableListDialog.java", "commitBeforeChange": "998d49ab48c08c55f388485512c281814a54c029", "commitAfterChange": "a8b8b0a5cb85063013adcdf9293d0c9c540b8baa", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public List<T> getSelectedItems()", "signatureAfterChange": "\r   public List<T> getSelectedItems()", "diff": ["-  /** Return a list of the selected items. */", "-  public List<T> getSelectedItems() {", "-    ArrayList<T> l = new ArrayList<T>();", "-    for(int i: list.getSelectedIndices()) {", "-      l.add(listItems.get(i));", "-    }", "-    return l;", "-  }", "+  /** Return a list of the selected items. */\r", "+  public List<T> getSelectedItems() {\r", "+    ArrayList<T> l = new ArrayList<T>();\r", "+    for (int i: list.getSelectedIndices())  l.add(listItems.get(i));\r", "+\r", "+    return l;\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cac75e766aeeb94c9c203ab2b7abf21a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-nextgen/edu/rice/cs/drjava/model/compiler/NextGenCompiler.java", "commitBeforeChange": "a0fae01c3fc47347d8f40022743d4545d81cb1cb", "commitAfterChange": "7f27d4def62ff1bda42279f1d632d1636f2811d4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r   public Set<String> getSourceFileExtensions()", "signatureAfterChange": "   public Set<String> getSourceFileExtensions()", "diff": ["-    * @return the set of source file extensions that this compiler supports. */\r", "-  public Set<String> getSourceFileExtensions() {\r", "-    HashSet<String> extensions = new HashSet<String>();\r", "-    extensions.add(edu.rice.cs.drjava.config.OptionConstants.JAVA_FILE_EXTENSION);\r", "-    return extensions;\r", "-  }\r", "+    * @return the set of source file extensions that this compiler supports. */", "+  public Set<String> getSourceFileExtensions() {", "+    HashSet<String> extensions = new HashSet<String>();", "+    extensions.add(getSuggestedFileExtension());", "+    return extensions;", "+  }"]}], "num": 8570}