{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e50f82b9555f0d22770ec4055c45e132", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d509cdbd058de92033e38e9579c9161", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   public abstract StaticMethodInvocation lookupStaticMethod(Type t, String name,                                                             Iterable<? extends Type> typeArgs,                                                              Iterable<? extends Expression> args,                                                             Option<Type> expected)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "   public abstract StaticMethodInvocation lookupStaticMethod(Type t, String name,                                                             Iterable<? extends Type> typeArgs,                                                              Iterable<? extends Expression> args,                                                             Option<Type> expected, Access.Module accessModule)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-                                                            Option<Type> expected)", "+                                                            Option<Type> expected, Access.Module accessModule)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47f432442e4b64cc202067aba410ea83", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public abstract ConstructorInvocation lookupConstructor(Type t, Iterable<? extends Type> typeArgs,                                                            Iterable<? extends Expression> args,                                                           Option<Type> expected)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "signatureAfterChange": "   public abstract ConstructorInvocation lookupConstructor(Type t, Iterable<? extends Type> typeArgs,                                                            Iterable<? extends Expression> args,                                                           Option<Type> expected, Access.Module accessModule)     throws InvalidTypeArgumentException, UnmatchedLookupException;", "diff": ["-                                                          Option<Type> expected)", "+                                                          Option<Type> expected, Access.Module accessModule)"]}], "num": 9348}