{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bac6ef0eadad3b94f9d5a2b2501fc31", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "327c8cb20d5cb4422243c319b46af98f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "90ef69282c46168e0825e1541e1aac142b594af9", "commitAfterChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 55, "signatureBeforeChange": "   private ObjectReference getDebugInterpreter(String interpreterName)      throws InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, InvocationException", "signatureAfterChange": "    private ObjectReference getDebugInterpreter(String interpreterName, ThreadReference threadRef)      throws InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, InvocationException", "diff": ["-    int i = 0;", "+", "+  private ObjectReference getDebugInterpreter(String interpreterName, ThreadReference threadRef) ", "+    throws InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, InvocationException{", "+    int i = 0;", "+    if( printMessages ) System.out.println(\"Getting methods...\");", "+    if( printMessages ) System.out.println(\"Invoking \" + m.toString() + \" on \" + args.toString());", "+    if( printMessages ) System.out.println(\"Thread is \" + threadRef.toString() + \" <suspended = \" + threadRef.isSuspended() + \">\");", "-                                                                                     ObjectReference.INVOKE_SINGLE_THREADED);", "+                                                                                   ObjectReference.INVOKE_SINGLE_THREADED);", "+    if( printMessages ) System.out.println(\"Returning...\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a9bc37922b592e6cc3bd7f3736c4237", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "e1dcefe3e90273735b79612c3705804954f26ea0", "commitAfterChange": "9dc40dd0cbfd24b9ef61af3572708c18e3aeae2c", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "   private ObjectReference _getDebugInterpreter(String interpreterName,                                                ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,     IncompatibleThreadStateException, InvocationException, DebugException", "signatureAfterChange": "   private ObjectReference _getDebugInterpreter(String interpreterName, ThreadReference threadRef) throws      InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, InvocationException,      DebugException", "diff": ["-  private ObjectReference _getDebugInterpreter(String interpreterName,", "-                                               ThreadReference threadRef)", "-    throws InvalidTypeException, ClassNotLoadedException,", "-    IncompatibleThreadStateException, InvocationException, DebugException", "-  {", "+  private ObjectReference _getDebugInterpreter(String interpreterName, ThreadReference threadRef) throws ", "+    InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, InvocationException, ", "+    DebugException {", "+    ", "-      throw new IllegalStateException(\"threadRef must be suspended to \" +", "-                                      \"get a debug interpreter.\");", "+      throw new IllegalStateException(\"threadRef must be suspended to get a debug interpreter.\");", "-    Method m = _getMethod(_interpreterJVM.referenceType(),", "-                          \"getJavaInterpreter\");", "-", "+    Method m = _getMethod(_interpreterJVM.referenceType(), \"getJavaInterpreter\");"]}], "num": 5430}