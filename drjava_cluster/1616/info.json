{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e1e4b5529c4810f4ba72af841ff7a77", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd554a0edcd19decb427cd833e91cc15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-nextgen/edu/rice/cs/drjava/model/compiler/descriptors/NextGenDescriptor.java", "commitBeforeChange": "e8a0105912243dc0845b7fe1aad605d049915d0a", "commitAfterChange": "f5dccb0b4004cfd3f184330e53ba101eca68857c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r   public Iterable<File> getSearchFiles()", "signatureAfterChange": "   public Iterable<File> getSearchFiles()", "diff": ["-  }\r", "-  public Iterable<File> getSearchFiles() {\r", "-    Iterable<File> files = IterUtil.asIterable(new File[] {\r", "-      new File(\"/C:/Program Files/JavaPLT/nextgen2/nextgen2.jar\")\r", "-    });\r", "-    try {\r", "-      String ngc_home = System.getenv(\"NGC_HOME\");\r", "-      if (ngc_home!=null) {\r", "-        // JDKToolsLibrary.msg(\"NGC_HOME environment variable set to: \"+ngc_home);\r", "-        files = IterUtil.compose(files, new File(new File(ngc_home), \"nextgen2.jar\"));\r", "-      }\r", "-      else {\r", "-        // JDKToolsLibrary.msg(\"NGC_HOME not set\");\r", "-      }\r", "-    }\r", "-    catch(Exception e) { /* ignore NGC_HOME variable */ }\r", "-    \r", "-    // drjava.jar file itself; check if it's a combined Nextgen/DrJava jar\r", "-    files = IterUtil.compose(files, edu.rice.cs.util.FileOps.getDrJavaFile()); \r", "-    return files;\r", "-  }\r", "+  }", "+  public Iterable<File> getSearchFiles() {", "+    Iterable<File> files = IterUtil.asIterable(new File[] {", "+      new File(\"/C:/Program Files/JavaPLT/nextgen2/nextgen2.jar\"),", "+        new File(\"/C:/Program Files/JavaPLT/nextgen2/nextgen2.jar\"),", "+        new File(\"/usr/local/JavaMint/nextgen2/nextgen2.jar\"),", "+        new File(\"/home/mgricken/research/Misc/NextGen/nextgen2/nextgen2.jar\"),", "+        new File(edu.rice.cs.util.FileOps.getDrJavaFile().getParentFile(), \"nextgen2.jar\")", "+    });", "+    try {", "+      String ngc_home = System.getenv(\"NGC_HOME\");", "+      if (ngc_home!=null) {", "+        // JDKToolsLibrary.msg(\"NGC_HOME environment variable set to: \"+ngc_home);", "+        files = IterUtil.compose(files, new File(new File(ngc_home), \"nextgen2.jar\"));", "+      }", "+      else {", "+        // JDKToolsLibrary.msg(\"NGC_HOME not set\");", "+      }", "+    }", "+    catch(Exception e) { /* ignore NGC_HOME variable */ }", "+    ", "+    // drjava.jar file itself; check if it's a combined Nextgen/DrJava jar", "+    files = IterUtil.compose(files, edu.rice.cs.util.FileOps.getDrJavaFile()); ", "+    return files;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2f4ef0c07547ecdd6d665b0aea79ab0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "bffcae721f8dbc844dc8a667963f0caab39047ea", "commitAfterChange": "0af0c72004872701891228fa18659a3204fb6e2f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "signatureAfterChange": "   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "diff": ["-    LinkedHashMap<File,Set<CompoundJDKDescriptor>> roots = new LinkedHashMap<File,Set<CompoundJDKDescriptor>>();", "+    LinkedHashMap<File,Set<JDKDescriptor>> roots = new LinkedHashMap<File,Set<JDKDescriptor>>();", "-    LinkedHashMap<File,Set<CompoundJDKDescriptor>> jars = new LinkedHashMap<File,Set<CompoundJDKDescriptor>>();", "+    LinkedHashMap<File,Set<JDKDescriptor>> jars = new LinkedHashMap<File,Set<JDKDescriptor>>();", "-    addIfFile(edu.rice.cs.util.FileOps.getDrJavaFile(), (CompoundJDKDescriptor)null, jars);", "+    addIfFile(edu.rice.cs.util.FileOps.getDrJavaFile(), (JDKDescriptor)null, jars);", "-    Iterable<CompoundJDKDescriptor> descriptors = searchForCompoundJDKDescriptors(); ", "-    for(CompoundJDKDescriptor desc: descriptors) {", "+    Iterable<JDKDescriptor> descriptors = searchForJDKDescriptors(); ", "+    for(JDKDescriptor desc: descriptors) {", "-    for (Map.Entry<File,Set<CompoundJDKDescriptor>> root : roots.entrySet()) {", "+    for (Map.Entry<File,Set<JDKDescriptor>> root : roots.entrySet()) {", "-", "-    // JavaMint", "-//    addIfFile(new File(\"/C:/Program Files/JavaMint/langtools/dist/lib/classes.jar\"), jars);", "-//    addIfFile(new File(\"/C:/Program Files/JavaMint/langtools/dist/lib/tools.jar\"), jars);", "-//    addIfFile(new File(\"/usr/local/soylatte/lib/classes.jar\"), jars);", "-//    addIfFile(new File(\"/usr/local/soylatte/lib/tools.jar\"), jars);", "-//    addIfFile(new File(\"/usr/local/JavaMint/langtools/dist/lib/classes.jar\"), jars);", "-//    addIfFile(new File(\"/usr/local/JavaMint/langtools/dist/lib/tools.jar\"), jars);", "-//    try {", "-//      String mint_home = System.getenv(\"MINT_HOME\");", "-//      if (mint_home!=null) {", "-//        JDKToolsLibrary.msg(\"MINT_HOME environment variable set to: \"+mint_home);", "-//        addIfFile(new File(new File(mint_home), \"langtools/dist/lib/classes.jar\"), jars);", "-//        addIfFile(new File(new File(mint_home), \"langtools/dist/lib/tools.jar\"), jars);", "-//      }", "-//      else {", "-//        JDKToolsLibrary.msg(\"MINT_HOME not set\");", "-//      }", "-//    }", "-//    catch(Exception e) { /* ignore MINT_HOME variable */ }", "-    for (Map.Entry<File,Set<CompoundJDKDescriptor>> jar : jars.entrySet()) {", "-      for (CompoundJDKDescriptor desc : jar.getValue()) {", "+    for (Map.Entry<File,Set<JDKDescriptor>> jar : jars.entrySet()) {", "+      for (JDKDescriptor desc : jar.getValue()) {", "-          if (v.vendor().equals(JavaVersion.VendorType.COMPOUND)) { mapToAddTo = compoundResults; }", "+          if (v.vendor().equals(JavaVersion.VendorType.UNKNOWN)) { mapToAddTo = compoundResults; }"]}], "num": 1616}