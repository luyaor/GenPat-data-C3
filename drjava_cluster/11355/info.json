{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "986e8466f2da3f872da0a944b066021f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b615c2c1e7204971edfd04343a40cbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LazyThunk.java", "commitBeforeChange": "dba5d2158724820f410d4efff37289045b3aca4c", "commitAfterChange": "6db2338d4c58e83974c8e6232ba8e48286d65b5e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public R value()", "signatureAfterChange": "      public R value()", "diff": ["-    if (_thunk != null) {", "+    // double-checked locking is generally incorrect without \"volatile\"; in this case, though,", "+    // it works because we're setting a field to \"null\", not allocating a new object -- in the", "+    // worst case, threads don't see the null update and we call resolve() more than necessary", "+    if (_thunk != null) { resolve(); }", "+    return _val;", "+  }", "-    return _val;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57ade565f12cd82fb543b42a8eacae87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/TreeLog.java", "commitBeforeChange": "a8bdfee12d75aa9a066652d8f975838df6021bb2", "commitAfterChange": "73b7f0a42ebcf824c132189e958d58c40bbacf0e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "          public void write(final String time, final String thread, final String location,                       final SizedIterable<? extends String> messages)", "signatureAfterChange": "          public void write(final String time, final String thread, final String location,                       final SizedIterable<? extends String> messages)", "diff": ["+      if (System.currentTimeMillis() - _lastPainted > 200) {", "+        // Ensure that paint events are handled periodically.  Without this check,", "+        // expensive or frequent logging can lead to all paint events being", "+        // coalesced (and placed on the *back* of the queue) before they have a chance", "+        // to run.", "+        SwingUtil.attemptClearEventQueue();", "+      }"]}], "num": 11355}