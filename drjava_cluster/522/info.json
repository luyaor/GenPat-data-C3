{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c6fea4900ba40d2639bd7ca7c70f6a8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "262853aa0ceb2d929e1119ca43f49e91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 373, "signatureBeforeChange": "\r \r   public void forInstanceInitializer(InstanceInitializer that)", "signatureAfterChange": "    public void forInstanceInitializer(InstanceInitializer that)", "diff": ["-\r", "-  public void forInstanceInitializer(InstanceInitializer that) {\r", "-    forInstanceInitializerDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getCode().visit(this);\r", "-    forInstanceInitializerOnly(that);\r", "-  }\r", "+", "+  public void forInstanceInitializer(InstanceInitializer that) {", "+    forInstanceInitializerDoFirst(that);", "+    if (prune(that)) return;", "+    that.getCode().visit(this);", "+    forInstanceInitializerOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fe991aa91de034fa1d63c5fee4ba166", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 374, "signatureBeforeChange": "\r \r   public void forStaticInitializer(StaticInitializer that)", "signatureAfterChange": "    public void forStaticInitializer(StaticInitializer that)", "diff": ["-\r", "-  public void forStaticInitializer(StaticInitializer that) {\r", "-    forStaticInitializerDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getCode().visit(this);\r", "-    forStaticInitializerOnly(that);\r", "-  }\r", "+", "+  public void forStaticInitializer(StaticInitializer that) {", "+    forStaticInitializerDoFirst(that);", "+    if (prune(that)) return;", "+    that.getCode().visit(this);", "+    forStaticInitializerOnly(that);", "+  }"]}], "num": 522}