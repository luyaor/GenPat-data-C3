{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4777a0fdf07bd4912bdc225d19dd9acc", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d02e4c172ce1dd3dd85264552e5b475", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/modifier/ArrayModifier.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object prepare(Visitor v, Context ctx)", "signatureAfterChange": "   public Object prepare(Visitor<Object> v, Context ctx)", "diff": ["+   */", "+  public Object prepare(Visitor<Object> v, Context ctx) {", "+    arrays.add(0, array);", "+    cells.add(0, cell);", "+    ", "+    array = node.getExpression().acceptVisitor(v);", "+    Object o  = node.getCellNumber().acceptVisitor(v);", "+    if (o instanceof Character) {", "+      o = new Integer(((Character)o).charValue());", "-     */", "-    public Object prepare(Visitor v, Context ctx) {", "-\tarrays.add(0, array);", "-\tcells.add(0, cell);", "-", "-\tarray = node.getExpression().acceptVisitor(v);", "-\tObject o   = node.getCellNumber().acceptVisitor(v);", "-\tif (o instanceof Character) {", "-\t    o = new Integer(((Character)o).charValue());", "-\t}", "-\tcell = (Number)o;", "-\treturn Array.get(array, cell.intValue());", "+    cell = (Number) o;", "+    return Array.get(array, cell.intValue());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3c9485c0ce797c54bc27d9c3efb7f28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/modifier/ObjectFieldModifier.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object prepare(Visitor v, Context ctx)", "signatureAfterChange": "   public Object prepare(Visitor<Object> v, Context ctx)", "diff": ["+   */", "+  public Object prepare(Visitor<Object> v, Context ctx) {", "+    fields.add(0, fieldObject);", "+    ", "+    fieldObject = node.getExpression().acceptVisitor(v);", "+    try {", "+      return field.get(fieldObject);", "+    } catch (Exception e) {", "+      throw new CatchedExceptionError(e, node);", "-     */", "-    public Object prepare(Visitor v, Context ctx) {", "-\tfields.add(0, fieldObject);", "-", "-\tfieldObject = node.getExpression().acceptVisitor(v);", "-\ttry {", "-\t    return field.get(fieldObject);", "-\t} catch (Exception e) {", "-            throw new CatchedExceptionError(e, node);", "-\t}", "+  }"]}], "num": 28050}