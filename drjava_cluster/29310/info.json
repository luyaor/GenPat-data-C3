{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50ef388303cd588350f5237322205174", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bd4133779a7cda7c73039d22e61e075", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void testGetIndentOfCurrStmtDelimiters() throws BadLocationException", "signatureAfterChange": "     public void testGetIndentOfCurrStmtDelimiters() throws BadLocationException", "diff": ["-    assertEquals(\"prev delimiter 0, no indent\", 0, _doc.getIndentOfCurrStmt(3));", "+    assertEquals(\"prev delimiter 0, no indent\", 0, _getIndentOfCurrStmt(3));", "-    assertEquals(\"prev delimiter 0, indent two spaces\", 2, _doc.getIndentOfCurrStmt(7));", "+    assertEquals(\"prev delimiter 0, indent two spaces\", 2, _getIndentOfCurrStmt(7));", "-    assertEquals(\"prev delimiter ';', no indent\", 0, _doc.getIndentOfCurrStmt(7));", "+    assertEquals(\"prev delimiter ';', no indent\", 0, _getIndentOfCurrStmt(7));", "-    assertEquals(\"prev delimiter ';', indent two spaces\", 2, _doc.getIndentOfCurrStmt(9));", "+    assertEquals(\"prev delimiter ';', indent two spaces\", 2, _getIndentOfCurrStmt(9));", "-    assertEquals(\"prev delimiter '{', no indent\", 0, _doc.getIndentOfCurrStmt(13));", "+    assertEquals(\"prev delimiter '{', no indent\", 0, _getIndentOfCurrStmt(13));", "-    assertEquals(\"prev delimiter '{', indent two spaces\", 2, _doc.getIndentOfCurrStmt(13));", "+    assertEquals(\"prev delimiter '{', indent two spaces\", 2, _getIndentOfCurrStmt(13));", "-    assertEquals(\"prev delimiter '}', no indent\", 0, _doc.getIndentOfCurrStmt(2));", "+    assertEquals(\"prev delimiter '}', no indent\", 0, _getIndentOfCurrStmt(2));", "-    assertEquals(\"prev delimiter '}', indent two spaces\", 2, _doc.getIndentOfCurrStmt(2));", "+    assertEquals(\"prev delimiter '}', indent two spaces\", 2, _getIndentOfCurrStmt(2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37f9e7d38874253d16218ed81283bfa1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testGetIndentOfCurrStmtDelimiters() throws BadLocationException", "signatureAfterChange": "     public void testGetIndentOfCurrStmtDelimiters() throws BadLocationException", "diff": ["-    assertEquals(\"prev delimiter 0, no indent\",", "-                 \"\",", "-                 _doc.getIndentOfCurrStmt(3));", "+    assertEquals(\"prev delimiter 0, no indent\", 0, _doc.getIndentOfCurrStmt(3));", "-    assertEquals(\"prev delimiter 0, indent two spaces\",", "-                 \"  \",", "-                 _doc.getIndentOfCurrStmt(7));", "+    assertEquals(\"prev delimiter 0, indent two spaces\", 2, _doc.getIndentOfCurrStmt(7));", "-    assertEquals(\"prev delimiter ';', no indent\",", "-                 \"\",", "-                 _doc.getIndentOfCurrStmt(7));", "+    assertEquals(\"prev delimiter ';', no indent\", 0, _doc.getIndentOfCurrStmt(7));", "-    assertEquals(\"prev delimiter ';', indent two spaces\",", "-                 \"  \",", "-                 _doc.getIndentOfCurrStmt(9));", "+    assertEquals(\"prev delimiter ';', indent two spaces\", 2, _doc.getIndentOfCurrStmt(9));", "-    assertEquals(\"prev delimiter '{', no indent\",", "-                 \"\",", "-                 _doc.getIndentOfCurrStmt(13));", "+    assertEquals(\"prev delimiter '{', no indent\", 0, _doc.getIndentOfCurrStmt(13));", "-    assertEquals(\"prev delimiter '{', indent two spaces\",", "-                 \"  \",", "-                 _doc.getIndentOfCurrStmt(13));", "+    assertEquals(\"prev delimiter '{', indent two spaces\", 2, _doc.getIndentOfCurrStmt(13));", "-    assertEquals(\"prev delimiter '}', no indent\",", "-                 \"\",", "-                 _doc.getIndentOfCurrStmt(2));", "+    assertEquals(\"prev delimiter '}', no indent\", 0, _doc.getIndentOfCurrStmt(2));", "-    assertEquals(\"prev delimiter '}', indent two spaces\",", "-                 \"  \",", "-                 _doc.getIndentOfCurrStmt(2));", "+    assertEquals(\"prev delimiter '}', indent two spaces\", 2, _doc.getIndentOfCurrStmt(2));"]}], "num": 29310}