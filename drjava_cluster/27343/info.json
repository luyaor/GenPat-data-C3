{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5915203d039efdfe32260561e9e417aa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fd1c6992889b15b4142ed3ca39dd84f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7cfeeaf9345ca550653b259e08abe84024ba9934", "commitAfterChange": "193d12982052662ec0e78a136e3a67b8a2ade2e4", "methodNumberBeforeChange": 408, "methodNumberAfterChange": 408, "signatureBeforeChange": "          public void caretUpdate(final CaretEvent ce )", "signatureAfterChange": "          public void caretUpdate(final CaretEvent ce )", "diff": ["-      OpenDefinitionsDocument doc = _model.getActiveDocument();", "-      doc.setCurrentLocation(ce.getDot());  // locking is done by setCurrentLocation", "-      final int line = doc.getCurrentLine();", "-      final int col = doc.getCurrentCol();", "-      Utilities.invokeLater(new Runnable() { public void run() { updateLocation(line, col); } });", "+      final OpenDefinitionsDocument doc = _model.getActiveDocument();", "+      ", "+      Utilities.invokeLater(new Runnable() { ", "+        public void run() { ", "+          doc.setCurrentLocation(ce.getDot());  ", "+          int line = doc.getCurrentLine();", "+          int col = doc.getCurrentCol();", "+          updateLocation(line, col); ", "+        } ", "+      });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93e31f0e5b79b42e365ac2cebe56e3f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "f5f9e35c2a806ad9979915d514415944af196bab", "commitAfterChange": "720d6a91901cb3699fb981b0c6b71471d6bbb848", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void runBare() throws Throwable", "signatureAfterChange": "   public void runBare() throws Throwable", "diff": ["-    try {", "-      for (int i = 0; i < compilers.length; i++) {", "-        setUp();", "-        _model.setActiveCompiler(compilers[i]);", "+    for (int i = 0; i < compilers.length; i++) {", "+      setUp();", "+      _model.setActiveCompiler(compilers[i]);", "+", "+      try {", "-    }", "-    finally {", "-      tearDown();", "+      finally {", "+        tearDown();", "+      }"]}], "num": 27343}