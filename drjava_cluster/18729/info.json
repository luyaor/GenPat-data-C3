{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "215296511bd9902590fec0aa42347f5c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bd38953c5392955880b167711e4e087", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   protected void _updateInterpreterClassPath(JavaInterpreter interpreter)", "signatureAfterChange": "   protected void _updateInterpreterClassPath(JavaInterpreter interpreter)", "diff": ["-    for (ClassPathEntry e: _classPathManager.getProjectCP())", "-      interpreter.addProjectClassPath(e.getEntry());", "+    for (File f : _classPathManager.getProjectCP())", "+      interpreter.addProjectClassPath(f);", "-    for (ClassPathEntry e: _classPathManager.getBuildDirectoryCP())", "-      interpreter.addBuildDirectoryClassPath(e.getEntry());", "+    for (File f : _classPathManager.getBuildDirectoryCP())", "+      interpreter.addBuildDirectoryClassPath(f);", "-    for (ClassPathEntry e: _classPathManager.getProjectFilesCP())", "-      interpreter.addProjectFilesClassPath(e.getEntry());", "+    for (File f : _classPathManager.getProjectFilesCP())", "+      interpreter.addProjectFilesClassPath(f);", "-    for (ClassPathEntry e: _classPathManager.getExternalFilesCP())", "-      interpreter.addExternalFilesClassPath(e.getEntry());", "+    for (File f : _classPathManager.getExternalFilesCP())", "+      interpreter.addExternalFilesClassPath(f);", "-    for (ClassPathEntry e: _classPathManager.getExtraCP())", "-      interpreter.addExtraClassPath(e.getEntry());", "+    for (File f : _classPathManager.getExtraCP())", "+      interpreter.addExtraClassPath(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b335137ca596e12c4ce988604eabae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends S> list)", "signatureAfterChange": "     public ConsList<T> forNonempty(S first, ConsList<? extends S> rest)", "diff": ["-    public ConsList<? extends T> forEmpty(ConsList.Empty<? extends S> list) { return ConsList.empty(); }", "-    public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends S> list) {", "-      return ConsList.cons(_lambda.value(list.first()), list.rest().apply(this));", "+    public ConsList<T> forEmpty() { return ConsList.empty(); }", "+    public ConsList<T> forNonempty(S first, ConsList<? extends S> rest) {", "+      return ConsList.cons(_lambda.value(first), rest.apply(this));"]}], "num": 18729}