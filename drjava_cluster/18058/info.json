{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "532afc0706075fd226c5287a584ba648", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63c2c9538ba89dc366f9eecfa4427e5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/HookTypeName.java", "commitBeforeChange": "d29db164117e7452d6023bc6a73abe9d53f7d65b", "commitAfterChange": "30059ed25163a0d152720ce9c2edb44f030e5f3b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public HookTypeName(ReferenceTypeName type, boolean _supered, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public HookTypeName(Option<TypeName> up, Option<TypeName> low,                       String fn, int bl, int bc, int el, int ec)", "diff": ["-  public HookTypeName(ReferenceTypeName type, boolean _supered, String fn, int bl, int bc, int el, int ec) {", "-    super(Arrays.asList(new Identifier(\"?\")), fn, bl, bc, el, ec);", "+  public HookTypeName(Option<TypeName> up, Option<TypeName> low,", "+                      String fn, int bl, int bc, int el, int ec) {", "+    super(\"?\");", "-    if (type == null) throw new IllegalArgumentException(\"type == null\");", "-    hookedType = type;", "-    supered = _supered;", "+    if (up == null) throw new IllegalArgumentException(\"up == null\");", "+    if (low == null) throw new IllegalArgumentException(\"low == null\");", "+    upperBound = up;", "+    lowerBound = low;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cd76dd8726dafcb779e8b9580a42d1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a3306545963d95b8e7f45728ebf6e03a4f716f60", "commitAfterChange": "cc830d3cfb835e44d2498e98729c28536d682aad", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public synchronized boolean posInParenPhrase(int pos)", "signatureAfterChange": "   public synchronized boolean posInParenPhrase(int pos)", "diff": ["-    int here = _reduced.absOffset();", "+    // Check cache", "+    String key = \"posInParenPhrase:\" + pos;", "+    Boolean cached = (Boolean) _checkCache(key);", "+    if (cached != null) {", "+      return cached.booleanValue();", "+    }", "+    ", "+    int here = _currentLocation;", "-    IndentInfo info = _reduced.getIndentInformation();", "-    boolean inParenPhrase = info.braceTypeCurrent.equals(IndentInfo.openParen);", "+    boolean inParenPhrase = posInParenPhrase();", "+    _storeInCache(key, new Boolean(inParenPhrase));", "+  }"]}], "num": 18058}