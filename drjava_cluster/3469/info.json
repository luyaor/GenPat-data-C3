{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ad5630093c540277da7c671ef4041b8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "060def72003d939900dd199e14c08363", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "e7660fffdb51451a3d4a61981945f6529addb874", "commitAfterChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected JComponent[] makeButtons()", "signatureAfterChange": "   protected JComponent[] makeButtons()", "diff": ["+    // find the first available color, or choose \"None\"", "+    int smallestIndex = 0;", "+    int smallestUsage = DefinitionsPane.FIND_RESULTS_PAINTERS_USAGE[smallestIndex];", "+    for(_lastIndex=0; _lastIndex<OptionConstants.FIND_RESULTS_COLORS.length; ++_lastIndex) {", "+      if (DefinitionsPane.FIND_RESULTS_PAINTERS_USAGE[_lastIndex]<smallestUsage) {", "+        smallestIndex = _lastIndex;", "+        smallestUsage = DefinitionsPane.FIND_RESULTS_PAINTERS_USAGE[smallestIndex];", "+      }", "+    }", "+    _lastIndex = smallestIndex;", "+    ++DefinitionsPane.FIND_RESULTS_PAINTERS_USAGE[_lastIndex];", "-    // find the first available color, or choose \"None\"", "-    for(_lastIndex=0; _lastIndex<OptionConstants.FIND_RESULTS_COLORS.length; ++_lastIndex) {", "-      if (DefinitionsPane.FIND_RESULTS_PAINTERS_USAGE[_lastIndex]==0) break;", "-    }", "-    if (_lastIndex<OptionConstants.FIND_RESULTS_COLORS.length) {", "-      ++DefinitionsPane.FIND_RESULTS_PAINTERS_USAGE[_lastIndex];", "-    }", "+    _colorBox.setMaximumRowCount(OptionConstants.FIND_RESULTS_COLORS.length+1);", "+    _colorBox.addPopupMenuListener(new PopupMenuListener() {", "+      public void popupMenuCanceled(PopupMenuEvent e) { _colorBox.revalidate(); }", "+      public void popupMenuWillBecomeInvisible(PopupMenuEvent e) { _colorBox.revalidate(); }", "+      public void popupMenuWillBecomeVisible(PopupMenuEvent e) { _colorBox.revalidate(); }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "510f520978b477d6123909096f6097f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "11e630b08382faca40628146b7f40625d89f190c", "commitAfterChange": "4742de9e9abcc9abfbe963657e41dfd407aaaeee", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected JButton[] makeButtons()", "signatureAfterChange": "   protected JComponent[] makeButtons()", "diff": ["-  protected JButton[] makeButtons() {    ", "+  protected JComponent[] makeButtons() {    ", "-    ", "-    Action removeAllAction = new AbstractAction(\"Remove All\") {", "-      public void actionPerformed(ActionEvent ae) {", "-        _model.getFindResultsManager().clearRegions();", "+", "+    _colorBox = new JComboBox();    ", "+    for(int i=0; i<OptionConstants.FIND_RESULTS_COLORS.length; ++i) {", "+      _colorBox.addItem(DrJava.getConfig().getSetting(OptionConstants.FIND_RESULTS_COLORS[i]));", "+    }", "+    _colorBox.addItem(\"None\");", "+    _colorBox.setRenderer(new ColorComboRenderer());", "+    _colorBox.addActionListener(new ActionListener() {", "+      public void actionPerformed(ActionEvent e) {", "+        if (_lastIndex<OptionConstants.FIND_RESULTS_COLORS.length) {", "+          --DefinitionsPane.FIND_RESULTS_PAINTERS_USAGE[_lastIndex];", "+        }", "+        _lastIndex = _colorBox.getSelectedIndex();", "+        if (_lastIndex<OptionConstants.FIND_RESULTS_COLORS.length) {", "+          ++DefinitionsPane.FIND_RESULTS_PAINTERS_USAGE[_lastIndex];", "+        }", "+        _frame.refreshFindResultsHighlightPainter(FindResultsPanel.this, ", "+                                                  DefinitionsPane.FIND_RESULTS_PAINTERS[_lastIndex]);", "-    };", "-    _removeAllButton = new JButton(removeAllAction);", "+    });", "+    // find the first available color, or choose \"None\"", "+    for(_lastIndex=0; _lastIndex<OptionConstants.FIND_RESULTS_COLORS.length; ++_lastIndex) {", "+      if (DefinitionsPane.FIND_RESULTS_PAINTERS_USAGE[_lastIndex]==0) {", "+        break;", "+      }", "+    }", "+    if (_lastIndex<OptionConstants.FIND_RESULTS_COLORS.length) {", "+      ++DefinitionsPane.FIND_RESULTS_PAINTERS_USAGE[_lastIndex];", "+    }", "+    _colorBox.setSelectedIndex(_lastIndex);", "+    _frame.refreshFindResultsHighlightPainter(FindResultsPanel.this, ", "+                                              DefinitionsPane.FIND_RESULTS_PAINTERS[_lastIndex]);", "-    JButton[] buts = new JButton[] { ", "+    JComponent[] buts = new JComponent[] { ", "-        _removeAllButton", "+        new JLabel(\"Highlight:\"),", "+        _colorBox", "+  }"]}], "num": 3469}