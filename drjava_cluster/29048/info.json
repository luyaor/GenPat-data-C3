{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6dd68326edcee9f03cda5ca3d6db05c0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "306e40d3ba89ed9f0f88f750a8960c84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/GenericTreeTest.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void testBrackets()", "signatureAfterChange": "      public void testBrackets()", "diff": ["-    // left shift", "-    //assertEquals(new Integer(400 << 5),interpret(\"400 << 5;\"));", "-    ", "-      ", "+    ", "-      ", "-/*", "-      // less than", "-      Pair.make(\"5 < 4\", new Boolean(5 < 4)),", "-      // less than or equal to", "-      Pair.make(\"4 <= 4\", new Boolean(4 <= 4)), Pair.make(\"4 <= 5\", new Boolean(4 <= 5)),", "-      // greater than", "-      Pair.make(\"5 > 4\", new Boolean(5 > 4)), Pair.make(\"5 > 5\", new Boolean(5 > 5)),", "-      // greater than or equal to", "-      Pair.make(\"5 >= 4\", new Boolean(5 >= 4)), Pair.make(\"5 >= 5\", new Boolean(5 >= 5)),", "-      ", "-      _interpreter.interpret(\"(false) ? 2/0 : 1 \");", "- */   ", "+    ", "+    ", "+    // left shift", "+    assertEquals(new Integer(400 << 5),interpret(\"400 << 5;\"));", "+    ", "+    // less than", "+    assertEquals(new Boolean(5 < 4), interpret(\"5 < 4;\"));", "+    ", "+    // less than or equal to", "+    assertEquals(new Boolean(4 <= 4), interpret(\"4 <= 4;\"));", "+    assertEquals(new Boolean(4 <= 5), interpret(\"4 <= 5;\"));", "+    ", "+    // greater than", "+    assertEquals(new Boolean(5 > 4), interpret(\"5 > 4;\"));", "+    assertEquals(new Boolean(5 > 5), interpret(\"5 > 5;\"));", "+    ", "+    // greater than or equal to", "+    assertEquals(new Boolean(5 >= 4), interpret(\"5 >= 4;\"));", "+    assertEquals(new Boolean(5 >= 5), interpret(\"5 >= 5;\"));", "+    ", "+    //_interpreter.interpret(\"(false) ? 2/0 : 1 \");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d0547b3d317f78cf69a9e07a376536", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "041023bab0887f54ed814ccd2037595271522c8d", "commitAfterChange": "67e38f766289e5330a2b4079022fb56c6e08bd49", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testAccessFieldsAndMethodsOfOuterClasses()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "signatureAfterChange": "   public void testAccessFieldsAndMethodsOfOuterClasses()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "diff": ["-// TEMPORARILY commented out because this test is failing", "-//    interpret(\"foo = 123\");", "-//    assertEquals(\"foo should have been modified\" , \"123\", interpret(\"MonkeyStuff.this.foo\"));", "-//    interpret(\"int foo = 999;\");", "-//    assertEquals(\"foo should refer to defined foo\", \"999\", interpret(\"foo\"));", "-//    assertEquals(\"declaring foo should not change MonkeyStuff.this.foo\", \"123\", interpret(\"MonkeyStuff.this.foo\"));", "-//", "-//    assertEquals(\"call method of outer class #1\", \"-2\", interpret(\"getNegativeTwo()\"));", "-//    assertEquals(\"call method of outer class #2\", \"-2\", interpret(\"MonkeyTwoDeep.this.getNegativeTwo()\"));", "-//    assertEquals(\"call method of outer class #3\", \"-2\",", "-//                 interpret(\"MonkeyInner.MonkeyTwoDeep.this.getNegativeTwo()\"));", "-//    assertEquals(\"call method of outer class #4\", \"-2\",", "-//                 interpret(\"MonkeyStuff.MonkeyInner.MonkeyTwoDeep.this.getNegativeTwo()\"));", "+    interpret(\"foo = 123\");", "+    assertEquals(\"foo should have been modified\" , \"123\", interpret(\"MonkeyStuff.this.foo\"));", "+    interpret(\"int foo = 999;\");", "+    assertEquals(\"foo should refer to defined foo\", \"999\", interpret(\"foo\"));", "+    assertEquals(\"declaring foo should not change MonkeyStuff.this.foo\", \"123\", interpret(\"MonkeyStuff.this.foo\"));", "+", "+    assertEquals(\"call method of outer class #1\", \"-2\", interpret(\"getNegativeTwo()\"));", "+    assertEquals(\"call method of outer class #2\", \"-2\", interpret(\"MonkeyTwoDeep.this.getNegativeTwo()\"));", "+    assertEquals(\"call method of outer class #3\", \"-2\",", "+                 interpret(\"MonkeyInner.MonkeyTwoDeep.this.getNegativeTwo()\"));", "+    assertEquals(\"call method of outer class #4\", \"-2\",", "+                 interpret(\"MonkeyStuff.MonkeyInner.MonkeyTwoDeep.this.getNegativeTwo()\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6fc68aa5b8ca0585bb98d17e7acceb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "commitAfterChange": "b1b91197c778ee62ce767051b412c31f7bcdddb8", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["+    ", "+    _setUpAction(_quitAction, \"Quit\", \"Quit\", \"Exit DrJava\");", "+", "+    _setUpAction(_undoAction, \"Undo\", \"Undo previous command\");", "+    _setUpAction(_redoAction, \"Redo\", \"Redo last undo\");", "+    _undoAction.putValue(Action.NAME, \"Undo Previous Command\");", "+    _redoAction.putValue(Action.NAME, \"Redo Last Undo\");", "+    ", "+    _setUpAction(_indentLinesAction, \"Indent Lines\", \"Indent all selected lines\");", "+    _setUpAction(_commentLinesAction, \"Comment Lines\", \"Comment all selected lines\");", "+    _setUpAction(_uncommentLinesAction, \"Uncomment Lines\", \"Uncomment all selected lines\");", "-    _setUpAction(_switchToPrevAction, \"Back\", \"Previous Document\");", "-    _setUpAction(_switchToNextAction, \"Forward\", \"Next Document\");", "+    _setUpAction(_switchToPrevAction, \"Back\", \"Switch to the previous document\");", "+    _setUpAction(_switchToNextAction, \"Forward\", \"Switch to the next document\");", "+    _setUpAction(_switchToPreviousPaneAction, \"Previous Pane\", \"Switch the focus to the previous pane\");", "+    _setUpAction(_switchToNextPaneAction, \"Next Pane\", \"Switch the focus to the next pane\");", "+    _setUpAction(_gotoLineAction, \"Goto line\", \"Jump to a line in the document\");", "-    _setUpAction(_helpAction, \"Help\", \"Show the User Documentation\");", "-    _setUpAction(_aboutAction, \"About\", \"About DrJava\");", "-", "-    _setUpAction(_undoAction, \"Undo\", \"Undo previous command\");", "-    _setUpAction(_redoAction, \"Redo\", \"Redo last undo\");", "-", "-    _undoAction.putValue(Action.NAME, \"Undo Previous Command\");", "-    _redoAction.putValue(Action.NAME, \"Redo Last Undo\");", "-", "-    //_setUpAction(_abortInteractionAction, \"Break\", \"Abort the current interaction\");", "-    _setUpAction(_resetInteractionsAction, \"Reset\", \"Reset interactions\");", "+    _setUpAction(_runAction, \"Run Document\", \"Run the main method of the current document\");", "+    ", "+    _setUpAction(_loadHistoryAction, \"Load History\", \"Load a history of interactions from a file\");", "+    _setUpAction(_saveHistoryAction, \"Save History\", \"Save the history of interactions to a file\");", "+    _setUpAction(_clearHistoryAction, \"Clear History\", \"Clear the current history of interactions\");", "+    ", "+    //_setUpAction(_abortInteractionAction, \"Break\", \"Abort the current interaction\");", "+    _setUpAction(_resetInteractionsAction, \"Reset\", \"Reset the Interactions Pane\");", "+    _setUpAction(_viewInteractionsClasspathAction, \"View Interactions Classpath\", \"Display the classpath in use by the Interactions Pane\");", "+    _setUpAction(_copyInteractionToDefinitionsAction, \"Lift Current Interaction\", \"Copy the current interaction into the Definitions Pane\");", "+    ", "+    _setUpAction(_clearConsoleAction, \"Clear Console\", \"Clear all text in the Console Pane\");", "+    _setUpAction(_showDebugConsoleAction, \"Show DrJava Debug Console\", \"Show a console for debugging DrJava \" +", "+                 \"that defines \\\"mainFrame\\\", \\\"model\\\", and \\\"config\\\".\");", "+    ", "+    _setUpAction(_helpAction, \"Help\", \"Show the User Documentation\");", "+    _setUpAction(_aboutAction, \"About\", \"About DrJava\");", "+    "]}], "num": 29048}