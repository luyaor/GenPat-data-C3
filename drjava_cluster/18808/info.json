{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30e5ac31d3a5a345d99883fcf5f9a584", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be482172cbab67ad2a889523371170f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public Void forClassDef(ClassDef that)", "signatureAfterChange": "   public Void forClassDef(ClassDef that)", "diff": ["-    SymbolData sd = defineSymbolData(that, className); ", "+    System.err.println(\"Processing class \" + className);", "+    SymbolData sd = defineSymbolData(that, className);", "+    assert getQualifiedSymbolData(className, SourceInfo.NO_INFO, false) != null;", "+//    _enclosingClassName = className;", "+//    System.err.println(\"Setting _enclosingClassName to \" + className);", "+    ", "+    ", "+    if (sd != null) identifyInnerClasses(that);", "-                                                        _importedPackages, _classNamesInThisFile, continuations));", "+                                                        _importedPackages, _classesInThisFile, continuations, fixUps));", "-    _classesToBeParsed.remove(className);", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5753bd43d1f926cb815d40fff5fae97", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "d933be24919e2ab110f61a795910708e74f868c4", "commitAfterChange": "e58ae584c79a105cf065f585a2d99664f4ef8788", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public Void forInterfaceDef(InterfaceDef that)", "signatureAfterChange": "   public Void forInterfaceDef(InterfaceDef that)", "diff": ["-    SymbolData sd = defineSymbolData(that, className);  //TODO: should this statement follow interface processing in 345", "-  ", "+    ", "+    SymbolData sd = defineSymbolData(that, className);  ", "+    // TODO: should the preceding statement follow interface processing in 345", "+        ", "+    // Note: sd can only be null if an error occurs in defineSymbol", "+    if (sd != null) sd.setInterface(true);", "+    "]}], "num": 18808}