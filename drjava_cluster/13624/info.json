{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0b495b920b8253d8cbf4c317b55e5ae", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60160a4de6c746d6179a4d0dda6c070a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   private CompilerError _parseJavadocErrorLine(String line)", "signatureAfterChange": "   private CompilerError _parseJavadocErrorLine(String line)", "diff": ["-        error = new CompilerError(new File(filename), lineno, 0, errMessage, isWarning);", "+        error = new CompilerError(new File(filename), lineno, 0, errMessage, false);", "+          ", "-        error = new CompilerError(new File(filename), errMessage, isWarning);", "+        error = new CompilerError(new File(filename), errMessage, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c55edea6adf28c42a78daf86cf7d3117", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/javadoc/DefaultJavadocModel.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   private CompilerError _parseJavadocErrorLine(String line)", "signatureAfterChange": "   private DJError _parseJavadocErrorLine(String line)", "diff": ["-  /** Convert a line of Javadoc text to a CompilerError.  If unable to do so, returns {@code null}. */", "-  private CompilerError _parseJavadocErrorLine(String line) {", "+  /** Convert a line of Javadoc text to a DJError.  If unable to do so, returns {@code null}. */", "+  private DJError _parseJavadocErrorLine(String line) {", "-    if (lineno >= 0) { return new CompilerError(new File(fileName), lineno, 0, errMessage, isWarning); }", "-    else { return new CompilerError(new File(fileName), errMessage, isWarning); }", "+    if (lineno >= 0) { return new DJError(new File(fileName), lineno, 0, errMessage, isWarning); }", "+    else { return new DJError(new File(fileName), errMessage, isWarning); }"]}], "num": 13624}