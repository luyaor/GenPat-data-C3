{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1028a7fc3442fbb7e07e38d1dacf172", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84a1dfdef1dd8556a77591cb4b0dbda6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AbstractConsoleController.java", "commitBeforeChange": "8468328336764977b1a392d354ad9fa8332d6cf0", "commitAfterChange": "b5065bdb57d50a5108c714db64f9cb4417931362", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "          private int getNewCaretPos(DocumentEvent e, ConsoleDocument doc)", "signatureAfterChange": "          private int getNewCaretPos(ConsoleDocument doc, int promptPos, int insertPos, int insertLen)", "diff": ["-    private int getNewCaretPos(DocumentEvent e, ConsoleDocument doc) {", "+    private int getNewCaretPos(ConsoleDocument doc, int promptPos, int insertPos, int insertLen) {", "+", "-      if (! doc.hasPrompt()) return docLen;", "- ", "-      final int promptPos = doc.getPromptPos();", "-      if (promptPos == docLen) return docLen;", "+      if (! doc.hasPrompt() || promptPos == docLen) return docLen;", "-      final int insertPos = e.getOffset();", "-      final int insertLen = e.getLength();", "-      // Advance caret by insertion length (works both for echoed keyboard input and for writes to System.out", "+      // Advance caret by insertion length because it is sitting at or beyond the prompt"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92734c8e3c3c8ba4f7f5008f7eedd4ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "55616341e09a5f807767173122a231f2db20106c", "commitAfterChange": "ddcbad2909e9c9411b7283368e21d7790422a21d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public synchronized void step(int flag) throws DebugException", "signatureAfterChange": "   public synchronized void step(int flag) throws DebugException", "diff": ["-    if (!isReady()) return;", "-    ", "-    if (_thread == null) {", "-      throw new DebugException(\"Must have a thread to step.\");", "-    }", "+    if (!isReady() || (_thread == null)) return;", "-        DrJava.consoleOut().println(\"There's already a StepRequest on the current thread\");", "-        DrJava.consoleOut().println(\"suspendCount: \" + _thread.suspendCount());", "+        //DrJava.consoleOut().println(\"There's already a StepRequest on the current thread\");", "+        //DrJava.consoleOut().println(\"suspendCount: \" + _thread.suspendCount());", "+    notifyStepRequested();"]}], "num": 24346}