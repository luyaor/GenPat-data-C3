{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2af940bcf736643986fa599df8145e83", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4240895783d0f85b524fc8bca21d2600", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 425, "methodNumberAfterChange": 425, "signatureBeforeChange": "\r \r   public void forBitwiseOrAssignmentExpression(BitwiseOrAssignmentExpression that)", "signatureAfterChange": "    public void forBitwiseOrAssignmentExpression(BitwiseOrAssignmentExpression that)", "diff": ["-\r", "-  public void forBitwiseOrAssignmentExpression(BitwiseOrAssignmentExpression that) {\r", "-    forBitwiseOrAssignmentExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getName().visit(this);\r", "-    that.getValue().visit(this);\r", "-    forBitwiseOrAssignmentExpressionOnly(that);\r", "-  }\r", "+", "+  public void forBitwiseOrAssignmentExpression(BitwiseOrAssignmentExpression that) {", "+    forBitwiseOrAssignmentExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getName().visit(this);", "+    that.getValue().visit(this);", "+    forBitwiseOrAssignmentExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5149c17d3b4e297417463ee286f1711e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 424, "methodNumberAfterChange": 424, "signatureBeforeChange": "\r \r   public void forBitwiseAndAssignmentExpression(BitwiseAndAssignmentExpression that)", "signatureAfterChange": "    public void forBitwiseAndAssignmentExpression(BitwiseAndAssignmentExpression that)", "diff": ["-\r", "-  public void forBitwiseAndAssignmentExpression(BitwiseAndAssignmentExpression that) {\r", "-    forBitwiseAndAssignmentExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getName().visit(this);\r", "-    that.getValue().visit(this);\r", "-    forBitwiseAndAssignmentExpressionOnly(that);\r", "-  }\r", "+", "+  public void forBitwiseAndAssignmentExpression(BitwiseAndAssignmentExpression that) {", "+    forBitwiseAndAssignmentExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getName().visit(this);", "+    that.getValue().visit(this);", "+    forBitwiseAndAssignmentExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7523ee7536367d98597ba2cbdc81b82a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 426, "methodNumberAfterChange": 426, "signatureBeforeChange": "\r \r   public void forBitwiseXorAssignmentExpression(BitwiseXorAssignmentExpression that)", "signatureAfterChange": "    public void forBitwiseXorAssignmentExpression(BitwiseXorAssignmentExpression that)", "diff": ["-\r", "-  public void forBitwiseXorAssignmentExpression(BitwiseXorAssignmentExpression that) {\r", "-    forBitwiseXorAssignmentExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getName().visit(this);\r", "-    that.getValue().visit(this);\r", "-    forBitwiseXorAssignmentExpressionOnly(that);\r", "-  }\r", "+", "+  public void forBitwiseXorAssignmentExpression(BitwiseXorAssignmentExpression that) {", "+    forBitwiseXorAssignmentExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getName().visit(this);", "+    that.getValue().visit(this);", "+    forBitwiseXorAssignmentExpressionOnly(that);", "+  }"]}], "num": 6650}