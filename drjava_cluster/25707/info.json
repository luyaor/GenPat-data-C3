{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "60617b06235af6570bb7f3fe2c7d99fd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "283758f2e16ca34e7ae646e5cc3f2172", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "8a099b753fcfb83be248d39f70edd5788e8b1222", "commitAfterChange": "4701dc92d8eb3da9b7f829b98cf858de261361f6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public boolean isModifiedSinceSave()", "signatureAfterChange": "   public boolean isModifiedSinceSave()", "diff": ["-    return  _modifiedSinceSave;", "+    try {", "+      readLock();", "+      return  _modifiedSinceSave;", "+    }", "+    finally {", "+      readUnlock();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3608fca7f66e0a4792a7ff5981c7a95c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "commitAfterChange": "35da9b77b7d75aca3d6277e27e3ba3dc86f3eaa9", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   private int _findKeywordAtToplevel(String keyword, String text, int textOffset)", "signatureAfterChange": "   private int _findKeywordAtToplevel(String keyword, String text, int textOffset)", "diff": ["-   */", "-  private int _findKeywordAtToplevel(String keyword, String text, int textOffset) {", "-      int oldLocation = getCurrentLocation();", "-      ", "-      int index = 0;", "-      ", "-      while (true) {", "-        index = text.indexOf(keyword, index);", "-        if (index == -1) break; // not found", "-          // found a match, check quality", "-          setCurrentLocation(textOffset + index);", "-          ", "-          // check that the keyword is not in a comment and is followed by whitespace", "-          ReducedToken rt = _reduced.currentToken();", "-          int indexPastKeyword = index + keyword.length();", "-          if (indexPastKeyword < text.length()) {", "-            if (rt.getState() == ReducedModelStates.FREE &&", "-                Character.isWhitespace(text.charAt(indexPastKeyword))) {", "-              // found a match but may not be at top level", "-              if (!posNotInBlock(index)) index = -1; //in a paren phrase, gone too far", "-              break;", "-            }", "-            else index++;  //move past so we can search again", "-          }", "-          else { // No space found past the keyword", "-            index = -1;", "-      setCurrentLocation(oldLocation);", "-      return index;", "+  private int _findKeywordAtToplevel(String keyword, String text, int textOffset) {", "+    ", "+    readLock();", "+    synchronized (_reduced) {", "+      int oldLocation = _currentLocation;", "+      int index = 0;", "+      try {", "+        while (true) {", "+          index = text.indexOf(keyword, index);", "+          if (index == -1) break; // not found", "+          else {", "+            // found a match, check quality", "+            setCurrentLocation(textOffset + index);", "+            ", "+            // check that the keyword is not in a comment and is followed by whitespace", "+            ReducedToken rt = _reduced.currentToken();", "+            int indexPastKeyword = index + keyword.length();", "+            if (indexPastKeyword < text.length()) {", "+              if (rt.getState() == ReducedModelStates.FREE &&", "+                  Character.isWhitespace(text.charAt(indexPastKeyword))) {", "+                // found a match but may not be at top level", "+                if (!posNotInBlock(index)) index = -1; //in a paren phrase, gone too far", "+                break;", "+              }", "+              else index++;  //move past so we can search again", "+            }", "+            else { // No space found past the keyword", "+              index = -1;", "+              break;", "+            }", "+          }", "+        }", "+        setCurrentLocation(oldLocation);", "+        return index;", "+      }", "+      finally { readUnlock(); }", "+    }", "+  }"]}], "num": 25707}