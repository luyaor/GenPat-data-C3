{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa6056bdc3f817a1f115d3c443469349", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49184e96db2911f0256e224c900d834f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "df2b79c4755a48b6d68cea0053ee5b504fa8b5d0", "commitAfterChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 150, "signatureBeforeChange": "   void _completeWordUnderCursor()", "signatureAfterChange": "   void _completeWordUnderCursor()", "diff": ["-    GoToFileListEntry currentEntry = null;", "-    ArrayList<GoToFileListEntry> list;", "+    ClassNameAndPackageEntry currentEntry = null;", "+    ArrayList<ClassNameAndPackageEntry> list;", "-      list = _completeClassList;", "+      list = new ArrayList<ClassNameAndPackageEntry>(_completeClassList.size());", "+      list.addAll(_completeClassList);", "-      list = new ArrayList<GoToFileListEntry>(docs.size());", "+      list = new ArrayList<ClassNameAndPackageEntry>(docs.size());", "-    PredictiveInputModel<GoToFileListEntry> pim = ", "-      new PredictiveInputModel<GoToFileListEntry>(true, new PredictiveInputModel.PrefixStrategy<GoToFileListEntry>(),", "-                                                  list);", "+    PredictiveInputModel<ClassNameAndPackageEntry> pim = ", "+      new PredictiveInputModel<ClassNameAndPackageEntry>(true, new PredictiveInputModel.PrefixStrategy<ClassNameAndPackageEntry>(),", "+                                                         list);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7a9a85beccfc95f49883544386e9be2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/JLSTypeSystem.java", "commitBeforeChange": "80debf5b9716524c576a71fc4929233c9637cd68", "commitAfterChange": "0dc6c4e6c51f7a1991368187e63e0eff0d7150ef", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 139, "signatureBeforeChange": "   public Type meet(Iterable<? extends Type> ts)", "signatureAfterChange": "   public Type meet(Iterable<? extends Type> ts)", "diff": ["-    switch (sizeOf(ts)) {", "+    Set<? extends Type> toMeet = CollectUtil.asSet(ts);", "+    switch (toMeet.size()) {", "-      case 1: return IterUtil.first(ts);", "-      default: return new IntersectionType(ts);", "+      case 1: return IterUtil.first(toMeet);", "+      default: return new IntersectionType(IterUtil.snapshot(toMeet));"]}], "num": 8924}