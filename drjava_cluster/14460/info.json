{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05357b43200ca4d3dc02c8b0cb7f4fa7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55d52c9a9a753ca4bc486d5b35bc95ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-hj/edu/rice/cs/drjava/model/compiler/HjCompiler.java", "commitBeforeChange": "0d34688a453817a830dd6c41ef2406a8bf5a84d1", "commitAfterChange": "5a2208c5a083f8abb3c732362ff63b83a40e68a9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public java.util.List<? extends DJError> compile(java.util.List<? extends File> files,                                                    java.util.List<? extends File> classPath,                                                     java.util.List<? extends File> sourcePath,                                                    File destination,                                                     java.util.List<? extends File> bootClassPath,                                                    String sourceVersion,                                                    boolean showWarnings)", "signatureAfterChange": "   public java.util.List<? extends DJError> compile(java.util.List<? extends File> files,                                                    java.util.List<? extends File> classPath,                                                     java.util.List<? extends File> sourcePath,                                                    File destination,                                                     java.util.List<? extends File> bootClassPath,                                                    String sourceVersion,                                                    boolean showWarnings)", "diff": ["-    String [] testCommand = new String[11];    ", "-    testCommand[0] = \"-hj\";", "-    testCommand[1] = \"-info\";", "-    testCommand[2] = \"-sp\";", "-    testCommand[4] = \"-cp\";", "-    testCommand[5] = s;", "-    testCommand[6] = \"-d\";", "-    testCommand[8] = \"-w\";", "-    testCommand[9] = \"-pp\";    ", "+//    System.out.println(\"-------------------------------------\");", "+//    System.out.println(\"-------------------------------------\");", "+//    System.out.println(\"files = \"+files);", "+//    System.out.println(\"sourcePath = \"+sourcePath);", "+//    System.out.println(\"-------------------------------------\");", "+    ArrayList<String> testCommand = new ArrayList<String>();", "+    testCommand.add(\"-hj\");", "+    testCommand.add(\"-info\");", "+    testCommand.add(\"-sp\");", "+    int spIndex = testCommand.size();", "+    testCommand.add(\"<sp filled in here>\");", "+    testCommand.add(\"-cp\");", "+    testCommand.add(s);", "+    testCommand.add(\"-d\");", "+    int destIndex = testCommand.size();", "+    if (destination != null) {", "+      testCommand.add(destination.getAbsolutePath());", "+    }", "+    else {", "+      testCommand.add(\"<dest dir filled in here>\");", "+    }", "+    testCommand.add(\"-w\");", "+    testCommand.add(\"-pp\");", "+    int sourceFileIndex = testCommand.size();", "+    testCommand.add(\"<source file filled in here>\");", "-      testCommand[3] = next.getParentFile().getAbsolutePath();", "-      testCommand[7] = next.getParentFile().getAbsolutePath();", "-      testCommand[10] = next.getName();", "+      testCommand.set(spIndex, next.getParentFile().getAbsolutePath());", "+      if (destination == null) {", "+        testCommand.set(destIndex, next.getParentFile().getAbsolutePath());", "+      }", "+      testCommand.set(sourceFileIndex, next.getName());", "-      // for(String cmd: testCommand) System.out.print(\" \"+cmd);", "-      // System.out.println();", "+//      for(String cmd: testCommand) System.out.print(\" \"+cmd);", "+//      System.out.println();", "-        soot.Main.mainEntry(testCommand); ", "+        soot.Main.mainEntry(testCommand.toArray(new String[testCommand.size()])); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9958a6a021973c7045958b7e4016a0e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-hj/edu/rice/cs/drjava/model/compiler/HjCompiler.java", "commitBeforeChange": "a0957e8972dd51e027c20f0e7d4410268a6b47b8", "commitAfterChange": "d911293c92d7a3fb39bbc2ab054e9452132d9003", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public java.util.List<? extends DJError> compile(java.util.List<? extends File> files,                                                    java.util.List<? extends File> classPath,                                                     java.util.List<? extends File> sourcePath,                                                    File destination,                                                     java.util.List<? extends File> bootClassPath,                                                    String sourceVersion,                                                    boolean showWarnings)", "signatureAfterChange": "   public java.util.List<? extends DJError> compile(java.util.List<? extends File> files,                                                    java.util.List<? extends File> classPath,                                                     java.util.List<? extends File> sourcePath,                                                    File destination,                                                     java.util.List<? extends File> bootClassPath,                                                    String sourceVersion,                                                    boolean showWarnings)", "diff": ["-                                                   boolean showWarnings) {", "-   ", "-    java.util.List<File> filteredClassPath = null;", "-    if (classPath!=null) {", "-      filteredClassPath = new LinkedList<File>(classPath);", "-      ", "-      if (_filterExe) {", "-        FileFilter filter = IOUtil.extensionFilePredicate(\"exe\");", "-        Iterator<? extends File> i = filteredClassPath.iterator();", "-        while (i.hasNext()) {", "-          if (filter.accept(i.next())) { i.remove(); }", "-        }", "-        if (_tempJUnit!=null) { filteredClassPath.add(_tempJUnit); }", "-      }", "-    }", "+                                                   boolean showWarnings) {   ", "+    java.util.List<File> filteredClassPath = getFilteredClassPath(classPath);", "+    ", "-    Iterator<? extends File> ti = _defaultBootClassPath.listIterator();", "-    while(ti.hasNext()){", "-     s += \":\" + ti.next().getPath();", "+    if (bootClassPath == null) { bootClassPath = _defaultBootClassPath; }", "+    ", "+    for(File f: bootClassPath) {", "+      s += \":\" + f.getAbsolutePath();", "-    String [] testCommand = new String[11];", "-        ", "+    if (s.length()>0) { s = s.substring(1); }", "+    ", "+    String [] testCommand = new String[11];    ", "-    testCommand[9] = \"-pp\";", "+    testCommand[9] = \"-pp\";    ", "-    ", "-    Iterator<? extends File> it = files.listIterator();", "-    while(it.hasNext()){", "-     File next = it.next();", "-      testCommand[3] = next.getParent();", "-      Dir = testCommand[3];", "-      testCommand[7] = next.getParent();", "+    for(File next: files) {", "+      testCommand[3] = next.getParentFile().getAbsolutePath();", "+      testCommand[7] = next.getParentFile().getAbsolutePath();", "-      File path = new File(next.getParent());", "-     // File path = new File(\"/Users/triplezero163/Work/workspace/hj.trunk/Eclipse-license-code/hj/hj.release/lib/hjc.jar\");", "-      String name = next.getName().replace(\".hj\", \"\");", "+      ", "+      for(String cmd: testCommand) System.out.print(\" \"+cmd);", "+      System.out.println();", "+      ", "-      soot.Main.mainEntry(testCommand); ", "-     // new PathClassLoader(JarJDKToolsLibrary.class.getClassLoader(), path).loadClass(name);", "+        soot.Main.mainEntry(testCommand); ", "-       e.printStackTrace();", "+        e.printStackTrace();", "+        throw new edu.rice.cs.util.UnexpectedException(e);", "-", "-   ", "-", "-       return Collections.emptyList();", "+    return Collections.emptyList();"]}], "num": 14460}