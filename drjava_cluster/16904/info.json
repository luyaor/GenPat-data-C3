{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef8d0352b8a26aa7d7c41c6fda466619", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13743ef378b14bb693e998cc3ae380ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void testWriteFile() throws IOException, MalformedProjectFileException", "signatureAfterChange": "    public void testWriteFile() throws IOException, MalformedProjectFileException", "diff": ["-    File pf = _fillTempFile(\"test2.pjt\",\"\");", "+    File pf = _fillTempFile(\"test2.pjt\", \"\");", "-    fb.addSourceFile(makeGetter(0,0,0,0,  \"dir1/testfile1.java\",\"dir1\",false,false,pf));", "-    fb.addSourceFile(makeGetter(1,1,0,0,  \"dir1/testfile2.java\",\"dir1\",false,false,pf));", "-    fb.addSourceFile(makeGetter(20,22,0,0,\"dir2/testfile3.java\",\"dir2\",false,false,pf));", "-    fb.addSourceFile(makeGetter(1,1,0,0,  \"dir2/testfile4.java\",\"dir2\",true, false,pf));", "-    fb.addSourceFile(makeGetter(0,0,0,0,  \"dir3/testfile5.java\",\"\",false,false,pf));", "-    fb.addAuxiliaryFile(makeGetter(1,1,0,0, absp+\"test/testfile6.java\",\"/home/javaplt\",false, false,null));", "-    fb.addAuxiliaryFile(makeGetter(1,1,0,0, absp+\"test/testfile7.java\",\"/home/javaplt\",false, false,null));", "+    fb.addSourceFile(makeGetter(0, 0, 0, 0,  \"dir1/testfile1.java\", \"dir1\", false, false, pf));", "+    fb.addSourceFile(makeGetter(1, 1, 0, 0,  \"dir1/testfile2.java\", \"dir1\", false, false, pf));", "+    fb.addSourceFile(makeGetter(20, 22, 0, 0, \"dir2/testfile3.java\", \"dir2\", false, false, pf));", "+    fb.addSourceFile(makeGetter(1, 1, 0, 0,  \"dir2/testfile4.java\", \"dir2\", true, false, pf));", "+    fb.addSourceFile(makeGetter(0, 0, 0, 0,  \"dir3/testfile5.java\", \"\", false, false, pf));", "+    fb.addAuxiliaryFile(makeGetter(1, 1, 0, 0, absp + \"test/testfile6.java\", \"/home/javaplt\", false, false, null));", "+    fb.addAuxiliaryFile(makeGetter(1, 1, 0, 0, absp + \"test/testfile7.java\", \"/home/javaplt\", false, false, null));", "-    fb.addClasspathFile(new File(absp,\"drjava/lib\"));", "-    fb.setBuildDirectory(new File(absp,\"drjava/built\"));", "+    fb.addClassPathFile(new File(absp, \"drjava/lib\"));", "+    fb.setBuildDirectory(new File(absp, \"drjava/built\"));", "+    fb.setWorkingDirectory(new File(absp, \"drjava/src\"));", "-    assertEquals(\"number of classpaths\", 1, pfir.getClasspaths().length);", "+    assertEquals(\"number of classpaths\", 1, pfir.getClassPaths().length);", "-    assertEquals(\"classpath name\", new File(absp,\"drjava/lib\").getPath(), pfir.getClasspaths()[0].getCanonicalPath());", "+    assertEquals(\"work-dir name\", new File(absp,\"drjava/src\").getPath(), pfir.getWorkingDirectory().getCanonicalPath());", "+    assertEquals(\"classpath name\", new File(absp,\"drjava/lib\").getPath(), pfir.getClassPaths()[0].getCanonicalPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "594d8f94cd62d85b6476be3540d272b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "    public void testWriteFile() throws IOException, MalformedProjectFileException", "signatureAfterChange": "    public void testWriteFile() throws IOException, MalformedProjectFileException", "diff": ["-    File pf = _fillTempFile(\"test2.pjt\", \"\");", "+    File pf = new File(parent, \"test2.pjt\");", "+    FileOps.writeStringToFile(pf, \"\");", "-    fb.addClassPathFile(new File(absp, \"drjava/lib\"));", "-    fb.setBuildDirectory(new File(absp, \"drjava/built\"));", "-    fb.setWorkingDirectory(new File(absp, \"drjava/src\"));", "+    fb.addClassPathFile(new File(parent, \"lib\"));", "+    fb.setBuildDirectory(new File(parent, \"built\"));", "+    fb.setWorkingDirectory(new File(parent, \"src\"));", "-    assertEquals(\"first source filename\", new File(base,\"/dir1/testfile1.java\").getPath(), pfir.getSourceFiles()[0].getPath());", "-    assertEquals(\"last source filename\", new File(base,\"/dir3/testfile5.java\").getPath(), pfir.getSourceFiles()[4].getPath());", "-    assertEquals(\"first aux filename\", new File(absp,\"test/testfile6.java\").getPath(), pfir.getAuxiliaryFiles()[0].getPath());", "+    assertEquals(\"first source filename\", new File(parent,\"/dir1/testfile1.java\").getPath(), pfir.getSourceFiles()[0].getPath());", "+    assertEquals(\"last source filename\", new File(parent,\"/dir3/testfile5.java\").getPath(), pfir.getSourceFiles()[4].getPath());", "+    assertEquals(\"first aux filename\", new File(parent,\"test/testfile6.java\").getPath(), pfir.getAuxiliaryFiles()[0].getPath());", "-    assertEquals(\"build-dir name\", null, pfir.getBuildDirectory());", "-    assertEquals(\"work-dir name\", null, pfir.getWorkingDirectory());", "-    assertEquals(\"classpath name\", new File(absp,\"drjava/lib\").getPath(), pfir.getClassPaths()[0].getCanonicalPath());", "-    assertEquals(\"main-class name\", new File(base,\"/dir1/testfile1.java\").getCanonicalPath(), pfir.getMainClass().getCanonicalPath());", "+    assertEquals(\"build-dir name\", buildDir, pfir.getBuildDirectory());", "+    assertEquals(\"work-dir name\", srcDir, pfir.getWorkingDirectory());", "+    assertEquals(\"classpath name\", new File(parent,\"lib\"), pfir.getClassPaths()[0]);", "+    assertEquals(\"main-class name\", new File(parent,\"/dir1/testfile1.java\"), pfir.getMainClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b83c2812ce3f3c5b0afe8d8e4542adc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "bacc5763617209be5cfc431d0c6a4d3d11d90cf0", "commitAfterChange": "cf9808a938fc5315d4aeb4ec51fe1039c1a26dfa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testWriteFile() throws IOException, MalformedProjectFileException", "signatureAfterChange": "    public void testWriteFile() throws IOException, MalformedProjectFileException", "diff": ["-  ", "+", "-    ", "+", "-    fb.addAuxiliaryFile(makeGetter(1,1,0,0,  \"\"+absp+\"test/testfile6.java\",\"/home/javaplt\",false, false,null));", "-    fb.addAuxiliaryFile(makeGetter(1,1,0,0,  \"\"+absp+\"test/testfile7.java\",\"/home/javaplt\",false, false,null));", "+    fb.addAuxiliaryFile(makeGetter(1,1,0,0, absp+\"test/testfile6.java\",\"/home/javaplt\",false, false,null));", "+    fb.addAuxiliaryFile(makeGetter(1,1,0,0, absp+\"test/testfile7.java\",\"/home/javaplt\",false, false,null));", "-    fb.addClasspathFile(new File(\"\"+absp+\"drjava/lib\"));", "-    fb.setBuildDirectory(new File(\"\"+absp+\"drjava/built\"));", "+    fb.addClasspathFile(new File(absp,\"drjava/lib\"));", "+    fb.setBuildDirectory(new File(absp,\"drjava/built\"));", "-    ", "+", "-    ", "+", "-//    assertEquals(\"Make relative\", \"dir1/test.java\", ", "+//    assertEquals(\"Make relative\", \"dir1/test.java\",", "-    ", "+", "-    ", "+", "-    assertEquals(\"first source filename\", base+\"/dir1/testfile1.java\", pfir.getSourceFiles()[0].getPath());", "-    assertEquals(\"last source filename\", base+\"/dir3/testfile5.java\", pfir.getSourceFiles()[4].getPath());", "-    assertEquals(\"first aux filename\", \"\"+absp+\"test/testfile6.java\", pfir.getAuxiliaryFiles()[0].getPath());", "+    assertEquals(\"first source filename\", new File(base,\"/dir1/testfile1.java\").getPath(), pfir.getSourceFiles()[0].getPath());", "+    assertEquals(\"last source filename\", new File(base,\"/dir3/testfile5.java\").getPath(), pfir.getSourceFiles()[4].getPath());", "+    assertEquals(\"first aux filename\", new File(absp,\"test/testfile6.java\").getPath(), pfir.getAuxiliaryFiles()[0].getPath());", "-    assertEquals(\"build-dir name\", \"\"+absp+\"drjava/built\", pfir.getBuildDirectory().getPath());", "-    assertEquals(\"classpath name\", \"\"+absp+\"drjava/lib\", pfir.getClasspaths()[0].getPath());", "-    assertEquals(\"main-class name\", base+\"/dir1/testfile1.java\", pfir.getMainClass().getPath());", "+    assertEquals(\"build-dir name\", new File(absp,\"drjava/built\").getPath(), pfir.getBuildDirectory().getCanonicalPath());", "+    assertEquals(\"classpath name\", new File(absp,\"drjava/lib\").getPath(), pfir.getClasspaths()[0].getCanonicalPath());", "+    assertEquals(\"main-class name\", new File(base,\"/dir1/testfile1.java\").getCanonicalPath(), pfir.getMainClass().getCanonicalPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edf555e059ddce27b54841885e09b09c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "bacc5763617209be5cfc431d0c6a4d3d11d90cf0", "commitAfterChange": "cf9808a938fc5315d4aeb4ec51fe1039c1a26dfa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testParseProject() throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public void testParseProject() throws IOException, MalformedProjectFileException", "diff": ["-    String proj1 = ", "+    String proj1 =", "-      \"   (file (name \\\"\"+absp+\"junk/sexp/Tokens.java\\\")(select 32 32))\\n\" +", "-      \"   (file (name \\\"\"+absp+\"java/Linux-i686/jdk1.5.0/src/javax/swing/JScrollPane.java\\\")(select 9086 8516)))\\n\" +", "+      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"junk/sexp/Tokens.java\").getCanonicalPath()) +\")(select 32 32))\\n\" +", "+      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"jdk1.5.0/JScrollPane.java\").getCanonicalPath()) +\")(select 9086 8516)))\\n\" +", "-      \"   (file (name \\\"\"+absp+\"drjava/built\\\")))\\n\" +", "-      \"(classpaths\\n\" + ", "-      \"   (file (name \\\"\"+absp+\"drjava/src/edu/rice/cs/lib\\\")))\\n\" + ", "+      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"drjava/built\").getCanonicalPath()) + \")))\\n\" +", "+      \"(classpaths\\n\" +", "+      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"drjava/src/edu/rice/cs/lib\").getCanonicalPath()) + \")))\\n\" +", "-    ", "+", "-    assertEquals(\"first source filename\", base+\"/sexp/Atom.java\", pfir.getSourceFiles()[0].getPath());", "-    assertEquals(\"last source filename\", base+\"/sexp/SEList.java\", pfir.getSourceFiles()[6].getPath());", "-    assertEquals(\"first aux filename\", \"\"+absp+\"junk/sexp/Tokens.java\", pfir.getAuxiliaryFiles()[0].getPath());", "+    assertEquals(\"first source filename\", new File(base,\"/sexp/Atom.java\").getPath(), pfir.getSourceFiles()[0].getPath());", "+    assertEquals(\"last source filename\", new File(base,\"/sexp/SEList.java\").getPath(), pfir.getSourceFiles()[6].getPath());", "+    assertEquals(\"first aux filename\", new File(absp,\"junk/sexp/Tokens.java\").getPath(), pfir.getAuxiliaryFiles()[0].getCanonicalPath());", "-    assertEquals(\"build-dir name\", \"\"+absp+\"drjava/built\", pfir.getBuildDirectory().getPath());", "-    assertEquals(\"classpath name\", \"\"+absp+\"drjava/src/edu/rice/cs/lib\", pfir.getClasspaths()[0].getPath());", "-    assertEquals(\"main-class name\", base+\"/sexp/SEList.java\", pfir.getMainClass().getPath());", "-    ", "+    assertEquals(\"build-dir name\", new File(absp,\"drjava/built\").getPath(), pfir.getBuildDirectory().getCanonicalPath());", "+    assertEquals(\"classpath name\", new File(absp,\"drjava/src/edu/rice/cs/lib\").getPath(), pfir.getClasspaths()[0].getCanonicalPath());", "+    assertEquals(\"main-class name\", new File(base,\"/sexp/SEList.java\").getCanonicalPath(), pfir.getMainClass().getCanonicalPath());", "+"]}], "num": 16904}