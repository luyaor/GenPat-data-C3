{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78dac5dcd3f0c3a8c47dbc166ad2ffe6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0778318f598ba252a6b9865ba1f963c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "5b8db3ab6ffa6e60a3e348c2f56419eeafa67e87", "commitAfterChange": "bdf0d961e3094e45012183b3b2277f169c5827d7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testSaveButtonEnabled() throws IOException", "signatureAfterChange": "   public void testSaveButtonEnabled() throws IOException", "diff": ["-     String user = System.getProperty(\"user.name\");", "-     _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "-     File forceOpenClass1_file = new File(_tempDir, \"ForceOpenClass1.java\");", "-     String forceOpenClass1_string =", "-       \"public class ForceOpenClass1 {\\n\" +", "-       \"  ForceOpenClass2 class2;\\n\" +", "-       \"  ForceOpenClass3 class3;\\n\\n\" +", "-       \"  public ForceOpenClass1() {\\n\" +", "-       \"    class2 = new ForceOpenClass2();\\n\" +", "-       \"    class3 = new ForceOpenClass3();\\n\" +", "-       \"  }\\n\" +", "-       \"}\";", "-     FileOps.writeStringToFile(forceOpenClass1_file, forceOpenClass1_string);", "-     forceOpenClass1_file.deleteOnExit();", "-", "-     //_frame.setVisible(true);", "-     _frame.pack();", "-     _frame.open(new FileOpenSelector() {", "-       public File[] getFiles() {", "-         File[] return_me = new File[1];", "-         return_me[0] = new File(_tempDir, \"ForceOpenClass1.java\");", "-         return return_me;", "-       }", "-     });", "-     assertTrue(\"the save button should not be enabled after opening a document\", !_frame.saveEnabledHuh());", "+    String user = System.getProperty(\"user.name\");", "+    _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "+    File forceOpenClass1_file = new File(_tempDir, \"ForceOpenClass1.java\");", "+    String forceOpenClass1_string =", "+      \"public class ForceOpenClass1 {\\n\" +", "+      \"  ForceOpenClass2 class2;\\n\" +", "+      \"  ForceOpenClass3 class3;\\n\\n\" +", "+      \"  public ForceOpenClass1() {\\n\" +", "+      \"    class2 = new ForceOpenClass2();\\n\" +", "+      \"    class3 = new ForceOpenClass3();\\n\" +", "+      \"  }\\n\" +", "+      \"}\";", "+    FileOps.writeStringToFile(forceOpenClass1_file, forceOpenClass1_string);", "+    forceOpenClass1_file.deleteOnExit();", "+    ", "+    //_frame.setVisible(true);", "+    try {", "+      Utilities.invokeAndWait(new Runnable() { ", "+        public void run() {", "+          _frame.pack();", "+          _frame.open(new FileOpenSelector() {", "+            public File[] getFiles() {", "+              File[] return_me = new File[1];", "+              return_me[0] = new File(_tempDir, \"ForceOpenClass1.java\");", "+              return return_me;", "+            }", "+          });", "+        }", "+      });", "+    }", "+    catch(InterruptedException e) { throw new UnexpectedException(e); }                      ", "+    ", "+    assertTrue(\"the save button should not be enabled after opening a document\", !_frame.saveEnabledHuh());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "990f66720048b28b139ce2319a6ba01f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "481944e3395dcc7a19e81902c59977be65ba633a", "commitAfterChange": "c682fca099b13e765e0e1f201629222d04fb1339", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "diff": ["-      else", "+      else {", "-        INavigatorItem idoc = d;", "-        String path = fixPathForNavigator(d.getFile().getCanonicalPath());", "-        _documentNavigator.refreshDocument(idoc, path);", "-      }", "-      catch(IOException e) { ", "-      /* Do nothing; findbugs signals a bug unless this catch clause spans more than two lines */ ", "+          final INavigatorItem idoc = d;", "+          final String path = fixPathForNavigator(d.getFile().getCanonicalPath());", "+          Utilities.invokeAndWait(new Runnable() { ", "+            public void run() { _documentNavigator.refreshDocument(idoc, path); }", "+          });", "+        }", "+        catch(InterruptedException e) { throw new UnexpectedException(e); }", "+        catch(IOException e) { ", "+          /* Do nothing; findbugs signals a bug unless this catch clause spans more than two lines */ ", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3a7d4592faa1bd10f7c7663cb7a0939", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "481944e3395dcc7a19e81902c59977be65ba633a", "commitAfterChange": "c682fca099b13e765e0e1f201629222d04fb1339", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 123, "signatureBeforeChange": "   public void dispose()", "signatureAfterChange": "   public void dispose()", "diff": ["-    _documentNavigator.clear();  ", "+    try {", "+      Utilities.invokeAndWait(new Runnable() { ", "+        public void run() { _documentNavigator.clear(); }", "+      });", "+    }", "+    catch(InterruptedException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddf582b4233a4c4bddbcdcf9d613a1e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "481944e3395dcc7a19e81902c59977be65ba633a", "commitAfterChange": "c682fca099b13e765e0e1f201629222d04fb1339", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 119, "signatureBeforeChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "diff": ["-    _documentNavigator.removeDocument(doc);", "+    try {", "+      Utilities.invokeAndWait(new Runnable() { ", "+        public void run() { _documentNavigator.removeDocument(doc); }", "+      });", "+    }", "+    catch(InterruptedException e) { throw new UnexpectedException(e); }"]}], "num": 958}