{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e93c1226065cc471ba1ad2f9e344c440", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29fc45b97dafd9442c30885f24de8583", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "     public Object visit(BlockStatement node)", "signatureAfterChange": "     public Node visit(BlockStatement node)", "diff": ["-    public Object visit(BlockStatement node) {", "-      LinkedList statements = new LinkedList(); // Add parameterization <Node>.", "-      Iterator it = node.getStatements().iterator();", "+    public Node visit(BlockStatement node) {", "+      LinkedList<Node> statements = new LinkedList<Node>(); // Add parameterization <Node>.", "+      Iterator<Node> it = node.getStatements().iterator();", "-        statements.add((Node)((Node)it.next()).acceptVisitor(this));", "+        statements.add(it.next().acceptVisitor(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9eb4cf33cbefcdf955026e979385de5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "     public Object visit(BlockStatement node)", "signatureAfterChange": "     public Node visit(BlockStatement node)", "diff": ["-    public Object visit(BlockStatement node) {", "-      LinkedList statements = new LinkedList(); // Add parameterization <Node>.", "-      Iterator it = node.getStatements().iterator();", "+    public Node visit(BlockStatement node) {", "+      LinkedList<Node> statements = new LinkedList<Node>(); // Add parameterization <Node>.", "+      Iterator<Node> it = node.getStatements().iterator();", "-        statements.add((Node)((Node)it.next()).acceptVisitor(this));", "+        statements.add(it.next().acceptVisitor(this));"]}], "num": 10942}