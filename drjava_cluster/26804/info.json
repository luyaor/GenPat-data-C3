{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "458385a4f7c3df23fcdee7daa559c7b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74148c38be0638d5273f23f2a2a40461", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/swing/AppletComponent.java", "commitBeforeChange": "7f27d4def62ff1bda42279f1d632d1636f2811d4", "commitAfterChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void updateState()", "signatureAfterChange": "      private void updateState()", "diff": ["-      if (_state.equals(State.FRESH)) { _applet.init(); _state = State.PAUSED; }", "-      _applet.start();", "-      _state = State.RUNNING;", "+      if (_state.equals(State.FRESH)) {", "+        _state = State.PAUSED;", "+        // run Applet.init() outside teh event thread, as per bug report 3069101:", "+        // https://sourceforge.net/tracker/?func=detail&atid=438935&aid=3069101&group_id=44253", "+        edu.rice.cs.plt.concurrent.ConcurrentUtil.runInThread(new Runnable() {", "+          public void run() {", "+            _applet.init();", "+            _applet.start();", "+            _state = State.RUNNING;", "+            if (!_applet.getSize().equals(getSize())) { _applet.setSize(getSize()); }", "+            validate();", "+          }", "+        });", "+      }", "-    // lazily update size rather than trying to intercept all resizing methods", "-    if (!_applet.getSize().equals(getSize())) { _applet.setSize(getSize()); }", "+    if (_state.equals(State.RUNNING)) {", "+      // lazily update size rather than trying to intercept all resizing methods", "+      if (!_applet.getSize().equals(getSize())) { _applet.setSize(getSize()); }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "825dcd36e82e5a6fb9783d4571cf8351", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ToolbarOptionComponent.java", "commitBeforeChange": "9c5777f5c4beabc12e35e029719473305aed7334", "commitAfterChange": "6f3940face1890969eb276e9b92d09c044ad9646", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ToolbarOptionComponent(String title, Frame parent)", "signatureAfterChange": "   public ToolbarOptionComponent(String title, Frame parent)", "diff": ["+    _noneButton = new JRadioButton(NONE);", "+    _noneButton.setActionCommand(NONE);", "+    ", "+    _group.add(_noneButton);", "+    _buttonPanel.add(_noneButton);", "+    DrJava.getConfig().addOptionListener(OptionConstants.TOOLBAR_ENABLED,", "+                                         new OptionListener<Boolean>() {", "+      public void optionChanged(OptionEvent<Boolean> oe) { ", "+        resetToCurrent();", "+      }", "+    });", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ee84bfeb2c8ab9fb528eec703987c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7b6e3a6da13b7dd368ad89b9fff988959ce6f154", "commitAfterChange": "fa3177c8f1a9365cfe319bc8c57ed12beb180d00", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["+    int state = config.getSetting(WINDOW_STATE).intValue();", "+    //ensure that we don't set window state to minimized", "+    state &= ~Frame.ICONIFIED;", "+    ", "+    if (!Toolkit.getDefaultToolkit().isFrameStateSupported(state)) {", "+      //we have a bad state, so reset to default", "+      state = WINDOW_STATE.getDefault();", "+    }", "+", "+    ", "+    //Work-aroung for Java bug #6365898?", "+    //setExtendedState does not work until the window in shown on Linux.", "+    final int stateCopy = state;", "+    addWindowListener(new WindowAdapter() {", "+      public void windowOpened(WindowEvent e) {", "+        setExtendedState(stateCopy);", "+        //this is a one-off listener", "+        removeWindowListener(this);", "+      }", "+    });"]}], "num": 26804}