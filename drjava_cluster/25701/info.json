{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "031ead928870b4888e944f8415912eea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "797550033c073e4823a3e9a2c9d2c96c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "ade6daf6528722698c362806dd26e5adcee8870d", "commitAfterChange": "666cd0e1854560c3c8c100e519e7096ee8bf81c6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void javadocAll(DirectorySelector select, final FileSaveSelector saver, final String classpath)      throws IOException", "signatureAfterChange": "   public void javadocAll(DirectorySelector select, final FileSaveSelector saver, final String classpath)      throws IOException", "diff": ["-    ", "-    // Only javadoc if all are saved.", "-    _attemptSaveAllDocuments();", "-    if (_getter.hasModifiedDocuments()) { return; }  /* abort if files remain unsaved */", "+        ", "+    // Only javadoc if all are saved. Removed because it is already done inside suggestJavadocDestination (fixes bug where pop-up is shown twice)", "+//    _attemptSaveAllDocuments();", "+    if (_getter.hasModifiedDocuments() || _getter.hasUntitledDocuments()) { return; }  /* abort if files remain unsaved */", "-    ", "-    for (OpenDefinitionsDocument doc: docs) {", "-      if (doc.isUntitled()) return;  // ignore javadoc, since a document is still unsaved", "-    }", "-    ", "+       ", "+//    for (OpenDefinitionsDocument doc: docs) {", "+//      if (doc.isUntitled()) return;  // ignore javadoc, since a document is still unsaved", "+//    }", "+//    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89afc8d61ff8a997d94780289009530f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/HighlightManager.java", "commitBeforeChange": "d884ae55e9471d604870827048329b58394dd950", "commitAfterChange": "28bca5adabaaf178bdf954808155389f93ed51fa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean equals( Object o)", "signatureAfterChange": "     public boolean equals(Object o)", "diff": ["-    public boolean equals( Object o) {", "+    public boolean equals(Object o) {", "-      if (o == null) return false;", "+      if (o == null || ! (o instanceof HighlightInfo)) return false;", "-      if (o instanceof HighlightInfo) {", "-        HighlightInfo obj = (HighlightInfo)o;", "-        /*", "-         //System.out.println(\"p0: \"+p0+\"  obj.p0: \"+obj.p0);", "-         //System.out.println(\"p1: \"+p1+\"  obj.p1: \"+obj.p1);", "-         //System.out.println(\"p: \"+p+\"  obj.p: \"+obj.p);", "-         */", "-        boolean result = getStartOffset() == obj.getStartOffset() && ", "-          getEndOffset() == obj.getEndOffset() &&", "-          getPainter() == obj.getPainter();", "-        ", "-        //System.out.println(\"HighlightInfo.equals() = \"+result);", "-        return result;", "-      }", "-      else return false;", "+      HighlightInfo hi = (HighlightInfo)o;", "+      /*", "+       //System.out.println(\"p0: \"+p0+\"  obj.p0: \"+obj.p0);", "+       //System.out.println(\"p1: \"+p1+\"  obj.p1: \"+obj.p1);", "+       //System.out.println(\"p: \"+p+\"  obj.p: \"+obj.p);", "+       */", "+      boolean result = getStartOffset() == hi.getStartOffset() && ", "+        getEndOffset() == hi.getEndOffset() &&", "+        getPainter() == hi.getPainter();", "+      ", "+      //System.out.println(\"HighlightInfo.equals() = \"+result);", "+      return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f519b97e8ae1dbf8aee43ce569e5ca3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "8a844a8f24b61cc57420bdf2211acc634ec89fef", "commitAfterChange": "f22d0a1255bdf1029bb9a8ca3e33cbdaf890f9a0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public boolean isDefinedVariable(String name)", "signatureAfterChange": "   public boolean isDefinedVariable(String name)", "diff": ["-      if (l.scope.get(name) != Scope.NO_SUCH_KEY) {", "-        return true;", "-      } else if (l.cscope.get(name) != Scope.NO_SUCH_KEY) {", "+      if (l.scope.contains(name) || l.cscope.contains(name)) {"]}], "num": 25701}