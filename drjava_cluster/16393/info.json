{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15d68386cc76ced33f09fc3208ba1f97", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "244f7f9a28b5b36cd3d603da471d7a9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 440, "methodNumberAfterChange": 440, "signatureBeforeChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "signatureAfterChange": "   JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "diff": ["-    ", "-            if ((_breakpointsPanel!=null) && (_breakpointsPanel.isDisplayed())) { _breakpointsPanel.repaint(); }", "-            if ((_bookmarksPanel!=null) && (_bookmarksPanel.isDisplayed())) { _bookmarksPanel.repaint(); }", "+            if ((_breakpointsPanel != null) && (_breakpointsPanel.isDisplayed())) { _breakpointsPanel.repaint(); }", "+            if ((_bookmarksPanel != null) && (_bookmarksPanel.isDisplayed())) { _bookmarksPanel.repaint(); }", "-              if ((panel!=null) && (panel.isDisplayed())) { panel.repaint(); }", "+              if ((panel != null) && (panel.isDisplayed())) { panel.repaint(); }", "-      public void changedUpdate(DocumentEvent e) { updateUI(); }", "+      public void changedUpdate(DocumentEvent e) { /* updateUI(); */ }  // only attribute changes that matter are inserts and removes", "-                                                  JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "+                                                  JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59a4bc6ba645c24d8049cafb5f53f3e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersion.java", "commitBeforeChange": "bffcae721f8dbc844dc8a667963f0caab39047ea", "commitAfterChange": "0af0c72004872701891228fa18659a3204fb6e2f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public int compareTo(FullVersion v)", "signatureAfterChange": "     public int compareTo(FullVersion v)", "diff": ["-    public int compareTo(FullVersion v) {", "-      if ((_vendor==VendorType.COMPOUND) && (v._vendor!=VendorType.COMPOUND)) {", "-        // this is a Compound JVM, v is not: this before v", "-        return -1;", "-      }", "-      if ((v._vendor==VendorType.COMPOUND) && (_vendor!=VendorType.COMPOUND)) {", "-        // v is a Compound JVM, this is not: v before this", "-        return 1;", "-      }", "-      ", "+    public int compareTo(FullVersion v) {      ", "+                if (result == 0 && _vendor.equals(VendorType.UNKNOWN)) {", "+                  result = _java_runtime_name.compareTo(v._java_runtime_name);", "+                  if (result == 0) {", "+                    result = _java_vm_vendor.compareTo(v._java_vm_vendor);", "+                  }", "+                }", "+              }", "+              else if (result == 0 && _vendor.equals(VendorType.UNKNOWN)) {", "+                result = _java_runtime_name.compareTo(v._java_runtime_name);", "+                if (result == 0) {", "+                  result = _java_vm_vendor.compareTo(v._java_vm_vendor);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efad1fe4f172979057e1a01be4cd0c7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "          public int compareTo(VerDescPair o)", "signatureAfterChange": "          public int compareTo(LibraryKey o)", "diff": ["-    public int compareTo(VerDescPair o) {", "-      int result = _first.compareTo(o._first);", "+    public int compareTo(LibraryKey o) {", "+      int result = _priority - o._priority;", "-        result = System.identityHashCode(_second) - System.identityHashCode(o._second);", "+        result = _first.compareTo(o._first);", "+      }", "+      if (result == 0) {", "+        if (_second==JDKDescriptor.NONE) { // identity", "+          if (o._second==JDKDescriptor.NONE) { // identity", "+            result = 0;", "+          }", "+          else {", "+            // this is NONE, other is something else; prefer NONE", "+            result = 1;", "+          }", "+        }", "+        else if (o._second==JDKDescriptor.NONE) { // identity", "+          // other is NONE, this is something else; prefer NONE", "+          result = -1;", "+        }", "+        else {", "+          result = _second.toString().compareTo(o._second.toString());", "+        }"]}], "num": 16393}