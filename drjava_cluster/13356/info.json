{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67246580ef21023052cf05cc75c5d40c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fcb2c9f78409f4a97e8c2f2c8b231dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 368, "methodNumberAfterChange": 368, "signatureBeforeChange": "\r \r   public void forClassDef(ClassDef that)", "signatureAfterChange": "    public void forClassDef(ClassDef that)", "diff": ["-\r", "-  public void forClassDef(ClassDef that) {\r", "-    forClassDefDoFirst(that);\r", "-    if (prune(that)) { return; }    \r", "-    that.getMav().visit(this);\r", "-    that.getName().visit(this);\r", "-    for (int i = 0; i < that.getTypeParameters().length; i++) that.getTypeParameters()[i].visit(this);\r", "-    that.getSuperclass().visit(this);\r", "-    for (int i = 0; i < that.getInterfaces().length; i++) that.getInterfaces()[i].visit(this);\r", "-    that.getBody().visit(this);\r", "-    forClassDefOnly(that);\r", "-  }\r", "+", "+  public void forClassDef(ClassDef that) {", "+    forClassDefDoFirst(that);", "+    if (prune(that)) return;    ", "+    that.getMav().visit(this);", "+    that.getName().visit(this);", "+    for (int i = 0; i < that.getTypeParameters().length; i++) that.getTypeParameters()[i].visit(this);", "+    that.getSuperclass().visit(this);", "+    for (int i = 0; i < that.getInterfaces().length; i++) that.getInterfaces()[i].visit(this);", "+    that.getBody().visit(this);", "+    forClassDefOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f3d1956eb6b23a1be4f37b6452f04db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 367, "methodNumberAfterChange": 367, "signatureBeforeChange": "\r \r \r   public void forWord(Word that)", "signatureAfterChange": "     public void forWord(Word that)", "diff": ["-\r", "-  public void forWord(Word that) {\r", "-    forWordDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forWordOnly(that);\r", "-  }\r", "+", "+  public void forWord(Word that) {", "+    forWordDoFirst(that);", "+    if (prune(that)) return;", "+    forWordOnly(that);", "+  }"]}], "num": 13356}