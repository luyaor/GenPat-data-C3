{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cddbeea8564691a0498ed09179941fbe", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "935c8a91aa1035580a0cfa119abe464c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 101, "signatureBeforeChange": "          public void testGetSymbolData_FromFileSystem()", "signatureAfterChange": "          public void testGetSymbolData_FromFileSystem()", "diff": ["-      _llv._package=\"fully.qualified\";", "-      _llv._file = new File(\"testFiles/fully/qualified/Fake.dj0\");", "+      testLLVisitor._package=\"fully.qualified\";", "+      testLLVisitor._file = new File(\"testFiles/fully/qualified/Fake.dj0\");", "-      _llv.symbolTable.put(\"fully.qualified.Woah\", sd2);", "+      testLLVisitor.symbolTable.put(\"fully.qualified.Woah\", sd2);", "-        _llv._getSymbolData_FromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, false, true);", "+        testLLVisitor._getSymbolData_FromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, false, true);", "-      _llv.symbolTable.remove(\"fully.qualified.Woah\");", "-      _llv.visitedFiles.clear();", "-      _llv._package=\"another.package\";", "-      _llv._file = new File(\"testFiles/another/package/Wowsers.dj0\");", "+      testLLVisitor.symbolTable.remove(\"fully.qualified.Woah\");", "+      testLLVisitor.visitedFiles.clear();", "+      testLLVisitor._package=\"another.package\";", "+      testLLVisitor._file = new File(\"testFiles/another/package/Wowsers.dj0\");", "-      _llv.symbolTable.put(\"fully.qualified.Woah\", sd2);", "+      testLLVisitor.symbolTable.put(\"fully.qualified.Woah\", sd2);", "-      result = _llv._getSymbolData_FromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, false, true);", "+      result = testLLVisitor._getSymbolData_FromFileSystem(\"fully.qualified.Woah\", SourceInfo.NO_INFO, false, true);", "-      _llv._package = \"\";", "-      _llv._file = new File (\"testFiles/Cool.dj0\");  // non-existent file", "+      testLLVisitor._package = \"\";", "+      testLLVisitor._file = new File (\"testFiles/Cool.dj0\");  // non-existent file", "-      SymbolData obj = _llv._getSymbolData_FromFileSystem(\"java.lang.Object\", SourceInfo.NO_INFO, true, true);", "+      SymbolData obj = testLLVisitor._getSymbolData_FromFileSystem(\"java.lang.Object\", SourceInfo.NO_INFO, true, true);", "-      _llv.symbolTable.put(\"Wow\", sd1);", "+      testLLVisitor.symbolTable.put(\"Wow\", sd1);", "-      result = _llv._getSymbolData_FromFileSystem(\"Wow\", SourceInfo.NO_INFO, false, true);", "+      result = testLLVisitor._getSymbolData_FromFileSystem(\"Wow\", SourceInfo.NO_INFO, false, true);", "-      result = _llv._getSymbolData_FromFileSystem(\"Wow\", SourceInfo.NO_INFO, true, true);", "+      result = testLLVisitor._getSymbolData_FromFileSystem(\"Wow\", SourceInfo.NO_INFO, true, true);", "-      result = _llv._getSymbolData_FromFileSystem(\"Wow\", SourceInfo.NO_INFO, true, true);", "+      result = testLLVisitor._getSymbolData_FromFileSystem(\"Wow\", SourceInfo.NO_INFO, true, true);", "-      result = _llv._getSymbolData_FromFileSystem(\"James\", SourceInfo.NO_INFO, true, true);", "+      result = testLLVisitor._getSymbolData_FromFileSystem(\"James\", SourceInfo.NO_INFO, true, true);", "-      _llv._package = \"myPackage\";", "+      testLLVisitor._package = \"myPackage\";", "-                   _llv._getSymbolData_FromFileSystem(\"WrongPackage.className\", SourceInfo.NO_INFO, true, false));", "+                   testLLVisitor._getSymbolData_FromFileSystem(\"WrongPackage.className\", SourceInfo.NO_INFO, true, false));", "-      _llv._package = \"\";", "-      _llv._file = new File(\"testFiles/Fake.dj0\");", "+      testLLVisitor._package = \"\";", "+      testLLVisitor._file = new File(\"testFiles/Fake.dj0\");", "-      result = _llv._getSymbolData_FromFileSystem(\"Doh\", SourceInfo.NO_INFO, true, true);", "+      result = testLLVisitor._getSymbolData_FromFileSystem(\"Doh\", SourceInfo.NO_INFO, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e21cefbd43016320ca37e4269d4d7cc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 102, "signatureBeforeChange": "               public void testGetSymbolData_Primitive()", "signatureAfterChange": "               public void testGetSymbolData_Primitive()", "diff": ["-                   testLLVisitor._getSymbolData_Primitive(\"boolean\"));", "-      assertEquals(\"should be char type\", SymbolData.CHAR_TYPE, testLLVisitor._getSymbolData_Primitive(\"char\"));", "-      assertEquals(\"should be byte type\", SymbolData.BYTE_TYPE, testLLVisitor._getSymbolData_Primitive(\"byte\"));", "-      assertEquals(\"should be short type\", SymbolData.SHORT_TYPE, testLLVisitor._getSymbolData_Primitive(\"short\"));", "-      assertEquals(\"should be int type\", SymbolData.INT_TYPE, testLLVisitor._getSymbolData_Primitive(\"int\"));", "-      assertEquals(\"should be long type\", SymbolData.LONG_TYPE, testLLVisitor._getSymbolData_Primitive(\"long\"));", "-      assertEquals(\"should be float type\", SymbolData.FLOAT_TYPE, testLLVisitor._getSymbolData_Primitive(\"float\"));", "-      assertEquals(\"should be double type\", SymbolData.DOUBLE_TYPE, testLLVisitor._getSymbolData_Primitive(\"double\"));", "-      assertEquals(\"should be void type\", SymbolData.VOID_TYPE, testLLVisitor._getSymbolData_Primitive(\"void\"));", "-      assertEquals(\"should be null type\", SymbolData.NULL_TYPE, testLLVisitor._getSymbolData_Primitive(\"null\"));", "+                   LanguageLevelConverter._getPrimitiveSymbolData(\"boolean\"));", "+      assertEquals(\"should be char type\", SymbolData.CHAR_TYPE, LanguageLevelConverter._getPrimitiveSymbolData(\"char\"));", "+      assertEquals(\"should be byte type\", SymbolData.BYTE_TYPE, LanguageLevelConverter._getPrimitiveSymbolData(\"byte\"));", "+      assertEquals(\"should be short type\", SymbolData.SHORT_TYPE, LanguageLevelConverter._getPrimitiveSymbolData(\"short\"));", "+      assertEquals(\"should be int type\", SymbolData.INT_TYPE, LanguageLevelConverter._getPrimitiveSymbolData(\"int\"));", "+      assertEquals(\"should be long type\", SymbolData.LONG_TYPE, LanguageLevelConverter._getPrimitiveSymbolData(\"long\"));", "+      assertEquals(\"should be float type\", SymbolData.FLOAT_TYPE, LanguageLevelConverter._getPrimitiveSymbolData(\"float\"));", "+      assertEquals(\"should be double type\", SymbolData.DOUBLE_TYPE, LanguageLevelConverter._getPrimitiveSymbolData(\"double\"));", "+      assertEquals(\"should be void type\", SymbolData.VOID_TYPE, LanguageLevelConverter._getPrimitiveSymbolData(\"void\"));", "+      assertEquals(\"should be null type\", SymbolData.NULL_TYPE, LanguageLevelConverter._getPrimitiveSymbolData(\"null\"));", "-                   testLLVisitor._getSymbolData_Primitive(\"java.lang.String\"));", "+                   LanguageLevelConverter._getPrimitiveSymbolData(\"java.lang.String\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa6d00978e7776c4a3f1f4235799279", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f685a9b321f36c2e842dc8f220e6629bd2e6497f", "commitAfterChange": "4b4d69e1dac83c75b54ecbd8f6c55ac897d713ab", "methodNumberBeforeChange": 241, "methodNumberAfterChange": 241, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["-    // DocPane menu", "-    _docPanePopupMenu = new JPopupMenu();", "-    _docPanePopupMenu.add(_saveAction);", "-    _docPanePopupMenu.add(_saveAsAction);", "-    _docPanePopupMenu.add(_revertAction);", "-    _docPanePopupMenu.addSeparator();", "-    _docPanePopupMenu.add(_closeAction);", "-    _docPanePopupMenu.addSeparator();", "-    _docPanePopupMenu.add(_printAction);", "-    _docPanePopupMenu.add(_printPreviewAction);", "-    _docPanePopupMenu.addSeparator();", "-    _docPanePopupMenu.add(_compileAction);", "-    _docPanePopupMenu.add(_junitAction);", "-    _docPanePopupMenu.add(_javadocCurrentAction);", "-    _docPanePopupMenu.add(_runAction);", "+    // NavPane menu", "+    _navPanePopupMenu = new JPopupMenu();", "+    _navPanePopupMenu.add(_saveAction);", "+    _navPanePopupMenu.add(_saveAsAction);", "+    _navPanePopupMenu.add(_revertAction);", "+    _navPanePopupMenu.addSeparator();", "+    _navPanePopupMenu.add(_closeAction);", "+    _navPanePopupMenu.addSeparator();", "+    _navPanePopupMenu.add(_printAction);", "+    _navPanePopupMenu.add(_printPreviewAction);", "+    _navPanePopupMenu.addSeparator();", "+    _navPanePopupMenu.add(_compileAction);", "+    _navPanePopupMenu.add(_junitAction);", "+    _navPanePopupMenu.add(_javadocCurrentAction);", "+    _navPanePopupMenu.add(_runAction);", "-          _docPanePopupMenu.show(e.getComponent(), e.getX(), e.getY());", "+          _navPanePopupMenu.show(e.getComponent(), e.getX(), e.getY());"]}], "num": 7234}