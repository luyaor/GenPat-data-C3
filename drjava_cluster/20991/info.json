{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a1c27320c3cf7946fe94bb1ea5e9394", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5800bf2ef8e806004c10c52bfd3aa42", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyAdvancedVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          public void testForVariableDeclarationOnly()", "signatureAfterChange": "          public void testForVariableDeclarationOnly()", "diff": ["-      VariableDeclaration vdecl = new VariableDeclaration(JExprParser.NO_SOURCE_INFO,", "+      VariableDeclaration vdecl = new VariableDeclaration(NO_INFO,", "-        new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                               new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"double\"), ", "-                               new Word (JExprParser.NO_SOURCE_INFO, \"field1\")),", "-        new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                               new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"boolean\"), ", "-                               new Word (JExprParser.NO_SOURCE_INFO, \"field2\"))});", "+        new UninitializedVariableDeclarator(NO_INFO, ", "+                               new PrimitiveType(NO_INFO, \"double\"), ", "+                               new Word (NO_INFO, \"field1\")),", "+        new UninitializedVariableDeclarator(NO_INFO, ", "+                               new PrimitiveType(NO_INFO, \"boolean\"), ", "+                               new Word (NO_INFO, \"field2\"))});", "-//      for (int i = 0; i<vds.size(); i++) {", "-//        System.out.println(vds.get(i).getName() + \" \" + vds.get(i).getMav() + \" \" + vds.get(i).getType().getName() + \" \" +", "-//                           vds.get(i).hasValue() + \" \" + vds.get(i).getEnclosingData().getName());", "-//      }", "+", "-      VariableDeclaration vdecl2 = new VariableDeclaration(JExprParser.NO_SOURCE_INFO,", "+      VariableDeclaration vdecl2 = new VariableDeclaration(NO_INFO,", "-        new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                            new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"double\"), ", "-                                            new Word (JExprParser.NO_SOURCE_INFO, \"field3\")),", "-        new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                            new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                            new Word (JExprParser.NO_SOURCE_INFO, \"field3\"))});", "+        new UninitializedVariableDeclarator(NO_INFO, ", "+                                            new PrimitiveType(NO_INFO, \"double\"), ", "+                                            new Word (NO_INFO, \"field3\")),", "+        new UninitializedVariableDeclarator(NO_INFO, ", "+                                            new PrimitiveType(NO_INFO, \"int\"), ", "+                                            new Word (NO_INFO, \"field3\"))});", "-      assertEquals(\"The error message should be correct\", \"You cannot have two variables with the same name.\", errors.get(0).getFirst());", "+      assertEquals(\"The error message should be correct\", \"You cannot have two variables with the same name.\", ", "+                   errors.get(0).getFirst());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c933d9f83a57d2ed9b5799f4499547c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyElementaryVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          public void testForVariableDeclarationOnly()", "signatureAfterChange": "          public void testForVariableDeclarationOnly()", "diff": ["-      VariableDeclaration vdecl = new VariableDeclaration(JExprParser.NO_SOURCE_INFO,", "+      VariableDeclaration vdecl = new VariableDeclaration(SourceInfo.NO_INFO,", "-        new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                            new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"double\"), ", "-                                            new Word (JExprParser.NO_SOURCE_INFO, \"field1\")),", "-          new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                              new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"boolean\"), ", "-                                              new Word (JExprParser.NO_SOURCE_INFO, \"field2\"))});", "+        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                            new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "+                                            new Word (SourceInfo.NO_INFO, \"field1\")),", "+          new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                              new PrimitiveType(SourceInfo.NO_INFO, \"boolean\"), ", "+                                              new Word (SourceInfo.NO_INFO, \"field2\"))});", "-      VariableDeclaration vdecl2 = new VariableDeclaration(JExprParser.NO_SOURCE_INFO,", "+      VariableDeclaration vdecl2 = new VariableDeclaration(SourceInfo.NO_INFO,", "-        new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                            new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"double\"), ", "-                                            new Word (JExprParser.NO_SOURCE_INFO, \"field3\")),", "-          new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                              new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                              new Word (JExprParser.NO_SOURCE_INFO, \"field3\"))});", "+        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                            new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "+                                            new Word (SourceInfo.NO_INFO, \"field3\")),", "+          new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                              new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                              new Word (SourceInfo.NO_INFO, \"field3\"))});", "-      assertEquals(\"The error message should be correct\", \"You cannot have two variables with the same name.\", errors.get(0).getFirst());", "+      assertEquals(\"The error message should be correct\", \"You cannot have two variables with the same name.\", ", "+                   errors.get(0).getFirst());"]}], "num": 20991}