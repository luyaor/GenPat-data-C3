{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d73e6387a603e65b56205c8e6e1586f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17b0f562d30d6b5774c50f7fcc678490", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "commitAfterChange": "395b2a102021edacb1427340196ea5475967dc87", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   synchronized void reachedBreakpoint(BreakpointRequest request)", "signatureAfterChange": "   synchronized void reachedBreakpoint(BreakpointRequest request)", "diff": ["-                               breakpoint.getClassName() + \", line \" +", "-                               breakpoint.getLineNumber() + \".\");", "-      //System.out.println(\"Encountered a breakpoint at line \"+ ", "-      //                   breakpoint.getLineNumber() +", "-      //                   \" in file \" + breakpoint.getClassName());", "+                               breakpoint.getClassName() + \"  [line \" +", "+                               breakpoint.getLineNumber() + \"]\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd3109d6d35685b29073a894715b8df8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/InterpreterUtilities.java", "commitBeforeChange": "a55173edb92604ce31bc0259a7cf4ef5f168cbca", "commitAfterChange": "f03b3be4965bba0b6b7ae533b5ea4300608a0311", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   protected static Object binaryArithmeticOperation(Class<?> c, Object l, Object r,                                                     BinaryArithmeticOperation o)", "signatureAfterChange": "   protected static Object binaryArithmeticOperation(Class<?> c, Object l, Object r,                                                     BinaryArithmeticOperation o)", "diff": ["+    if(c == byte.class) {", "+      return new Byte((byte)o.invoke(leftNum.byteValue(), ", "+                                  rightNum.byteValue()));", "+    }", "+    if(c == short.class) {", "+      return new Short((short)o.invoke(leftNum.shortValue(), ", "+                                  rightNum.shortValue()));", "+    }", "+    if(c == char.class) {", "+      return new Character((char)o.invoke(leftNum.shortValue(), ", "+                                  rightNum.shortValue()));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6a9a80033732acf2d29d21f19a449ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/NewJavaClassDialog.java", "commitBeforeChange": "39a73399844d4efd2d2ebe97954e53d44db0a9b6", "commitAfterChange": "3144efa2bdaef7eb118336f3bc431cce43bf0ac2", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "    private void _autoComplete(final JTextComponent component)", "signatureAfterChange": "    private void _autoComplete(final JTextComponent component)", "diff": ["-                            new Runnable4<String,String,Integer,Integer>() {", "-                              public void run(String className,", "-                                              String fullName,", "+                            new Runnable3<AutoCompletePopupEntry,Integer,Integer>() {", "+                              public void run(AutoCompletePopupEntry entry,", "+                                String fullName = entry.getFullPackage()+entry.getClassName();"]}], "num": 15298}