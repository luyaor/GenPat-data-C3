{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efdfb71c1f59ea9d4640bb5a8fa4bb74", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b7201d5eaffe7cc3681dd7a33928665", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "c5393075df9303b791f0a8e80d6b5a15f548551a", "commitAfterChange": "826853cc9405a53970a4e3ba9d7145b4ff5544e8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private void _checkPreviousInsertCommentChar(String special,                                                ModelList<ReducedToken>.Iterator                                                copyCursor)", "signatureAfterChange": "   private void _checkPreviousInsertCommentChar(String special)", "diff": ["-  private void _checkPreviousInsertCommentChar(String special,", "-                                               ModelList<ReducedToken>.Iterator", "-                                               copyCursor)", "-  {", "-    if (!copyCursor.atStart()  && !copyCursor.atFirstItem()) {", "-      if ((copyCursor.prevItem().getType().equals(\"/\")) &&", "-          (copyCursor.prevItem().getState() == FREE))", "+  private void _checkPreviousInsertCommentChar(String special) {", "+    if (!_cursor.atStart()  && !_cursor.atFirstItem()) {", "+      if ((_cursor.prevItem().getType().equals(\"/\")) &&", "+          (_cursor.prevItem().getState() == FREE))", "-            copyCursor.prevItem().setType(\"/\" + special);", "+            _cursor.prevItem().setType(\"/\" + special);", "-      else if ((copyCursor.prevItem().getType().equals(\"*\")) &&", "+      else if ((_cursor.prevItem().getType().equals(\"*\")) &&", "-          copyCursor.prevItem().setType(\"*\" + special);", "-          copyCursor.prevItem().setState(FREE);", "+          _cursor.prevItem().setType(\"*\" + special);", "+          _cursor.prevItem().setState(FREE);", "-    _insertNewBrace(special,copyCursor); //leaving us after the brace.", "-    copyCursor.prev();", "+    _insertNewBrace(special, _cursor); //leaving us after the brace.", "+    _cursor.prev();", "-    if (copyCursor.current().getSize() == 2)", "+    if (_cursor.current().getSize() == 2)", "-      copyCursor.next();", "+      _cursor.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82494df7784cf9bc2d930519ca4995a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "c5393075df9303b791f0a8e80d6b5a15f548551a", "commitAfterChange": "826853cc9405a53970a4e3ba9d7145b4ff5544e8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private void _checkPreviousInsertCommentChar(String special,                                                ModelList<ReducedToken>.Iterator                                                copyCursor)", "signatureAfterChange": "   private void _checkPreviousInsertCommentChar(String special)", "diff": ["-  private void _checkPreviousInsertCommentChar(String special,", "-                                               ModelList<ReducedToken>.Iterator", "-                                               copyCursor)", "-  {", "-    if (!copyCursor.atStart()  && !copyCursor.atFirstItem()) {", "-      if ((copyCursor.prevItem().getType().equals(\"/\")) &&", "-          (copyCursor.prevItem().getState() == FREE))", "+  private void _checkPreviousInsertCommentChar(String special) {", "+    if (!_cursor.atStart()  && !_cursor.atFirstItem()) {", "+      if ((_cursor.prevItem().getType().equals(\"/\")) &&", "+          (_cursor.prevItem().getState() == FREE))", "-            copyCursor.prevItem().setType(\"/\" + special);", "+            _cursor.prevItem().setType(\"/\" + special);", "-      else if ((copyCursor.prevItem().getType().equals(\"*\")) &&", "+      else if ((_cursor.prevItem().getType().equals(\"*\")) &&", "-          copyCursor.prevItem().setType(\"*\" + special);", "-          copyCursor.prevItem().setState(FREE);", "+          _cursor.prevItem().setType(\"*\" + special);", "+          _cursor.prevItem().setState(FREE);", "-    _insertNewBrace(special,copyCursor); //leaving us after the brace.", "-    copyCursor.prev();", "+    _insertNewBrace(special, _cursor); //leaving us after the brace.", "+    _cursor.prev();", "-    if (copyCursor.current().getSize() == 2)", "+    if (_cursor.current().getSize() == 2)", "-      copyCursor.next();", "+      _cursor.next();"]}], "num": 29251}