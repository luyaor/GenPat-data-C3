{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22f7f931d679d0056a08c95120847db7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "085bef1e6214123829d747d3929ac216", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "51e686ba41ead06ef0f1c4bec2b00eaf247dbe80", "commitAfterChange": "aa7731dd2e1401d2d7a2138058a2aae91b7b3cb6", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   private String getFirstClassName(int indexOfClass, int indexOfInterface,                                    int indexOfEnum) throws ClassNameNotFoundException", "signatureAfterChange": "   private String getFirstClassName(int indexOfClass, int indexOfInterface,                                    int indexOfEnum) throws ClassNameNotFoundException", "diff": ["-    ", "-    if ((indexOfClass == -1) && (indexOfInterface == -1) && (indexOfEnum == -1)) throw ClassNameNotFoundException.DEFAULT;", "-    ", "-    // should we convert this to a sorted queue or something like that?", "-    // should we have to extend this past three keywords, it will get rather hard to maintain", "-    if ((indexOfEnum == -1) || ", "-        ((indexOfClass != -1) && (indexOfClass < indexOfEnum)) ||", "-        ((indexOfInterface != -1) && (indexOfInterface < indexOfEnum))) {", "-      // either \"enum\" not found, or \"enum\" found after \"class\" or \"interface\"", "-      // \"enum\" is irrelevant", "-      // we know that at least one of indexOfClass and indexOfInterface is != -1", "-      if ((indexOfInterface == -1) ||", "-          ((indexOfClass != -1) && (indexOfClass < indexOfInterface))) {", "-        // either \"interface\" not found, or \"interface\" found after \"class\"", "-        return getNextIdentifier(indexOfClass + \"class\".length());", "+    try {", "+      if ((indexOfClass == -1) && (indexOfInterface == -1) && (indexOfEnum == -1)) throw ClassNameNotFoundException.DEFAULT;", "+      ", "+      // should we convert this to a sorted queue or something like that?", "+      // should we have to extend this past three keywords, it will get rather hard to maintain", "+      if ((indexOfEnum == -1) || ", "+          ((indexOfClass != -1) && (indexOfClass < indexOfEnum)) ||", "+          ((indexOfInterface != -1) && (indexOfInterface < indexOfEnum))) {", "+        // either \"enum\" not found, or \"enum\" found after \"class\" or \"interface\"", "+        // \"enum\" is irrelevant", "+        // we know that at least one of indexOfClass and indexOfInterface is != -1", "+        if ((indexOfInterface == -1) ||", "+            ((indexOfClass != -1) && (indexOfClass < indexOfInterface))) {", "+          // either \"interface\" not found, or \"interface\" found after \"class\"", "+          return getNextIdentifier(indexOfClass + \"class\".length());", "+        }", "+        else {", "+          // \"interface\" found, and found before \"class\"", "+          return getNextIdentifier(indexOfInterface + \"interface\".length());", "+        }", "-        // \"interface\" found, and found before \"class\"", "-        return getNextIdentifier(indexOfInterface + \"interface\".length());", "-      }", "+        // \"enum\" found, and found before \"class\" and \"interface\"", "+        return getNextIdentifier(indexOfEnum + \"enum\".length());", "+      }    ", "-    else {", "-      // \"enum\" found, and found before \"class\" and \"interface\"", "-      return getNextIdentifier(indexOfEnum + \"enum\".length());", "-    }    ", "+    catch(IllegalStateException ise) { throw ClassNameNotFoundException.DEFAULT; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fceecd492adaa4f638fd3ab7406f979e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "0eaebdce24bcfe2760ebc5f3cb035431d62003fc", "commitAfterChange": "998d49ab48c08c55f388485512c281814a54c029", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   private String getFirstClassName(int indexOfClass, int indexOfInterface) throws ClassNameNotFoundException", "signatureAfterChange": "   private String getFirstClassName(int indexOfClass, int indexOfInterface,                                    int indexOfEnum) throws ClassNameNotFoundException", "diff": ["-  private String getFirstClassName(int indexOfClass, int indexOfInterface) throws ClassNameNotFoundException {", "+  private String getFirstClassName(int indexOfClass, int indexOfInterface,", "+                                   int indexOfEnum) throws ClassNameNotFoundException {", "-    if ((indexOfClass == -1) && (indexOfInterface == -1)) throw ClassNameNotFoundException.DEFAULT;", "-    if ((indexOfInterface == -1) || (indexOfClass != -1 && indexOfClass < indexOfInterface)) ", "-      return getNextIdentifier(indexOfClass + \"class\".length());", "-    return getNextIdentifier(indexOfInterface + \"interface\".length());", "+    if ((indexOfClass == -1) && (indexOfInterface == -1) && (indexOfEnum == -1)) throw ClassNameNotFoundException.DEFAULT;", "+    ", "+    // should we convert this to a sorted queue or something like that?", "+    // should we have to extend this past three keywords, it will get rather hard to maintain", "+    if ((indexOfEnum == -1) || ", "+        ((indexOfClass != -1) && (indexOfClass < indexOfEnum)) ||", "+        ((indexOfInterface != -1) && (indexOfInterface < indexOfEnum))) {", "+      // either \"enum\" not found, or \"enum\" found after \"class\" or \"interface\"", "+      // \"enum\" is irrelevant", "+      // we know that at least one of indexOfClass and indexOfInterface is != -1", "+      if ((indexOfInterface == -1) ||", "+          ((indexOfClass != -1) && (indexOfClass < indexOfInterface))) {", "+        // either \"interface\" not found, or \"interface\" found after \"class\"", "+        return getNextIdentifier(indexOfClass + \"class\".length());", "+      }", "+      else {", "+        // \"interface\" found, and found before \"class\"", "+        return getNextIdentifier(indexOfInterface + \"interface\".length());", "+      }", "+    }", "+    else {", "+      // \"enum\" found, and found before \"class\" and \"interface\"", "+      return getNextIdentifier(indexOfEnum + \"enum\".length());", "+    }    "]}], "num": 30027}