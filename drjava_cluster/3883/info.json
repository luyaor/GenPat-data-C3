{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2118bcfa2a1a346c392f7725efd50861", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f79d2431305d8cd0c9917d7367a0fd0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ff65482ac0c34f9d18b211e3b1fa05371a07fb91", "commitAfterChange": "43bd3e08ba052e97e1d0271e7f1e324beac2ba86", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public OpenDefinitionsDocument getODDForDocument(Document doc)", "signatureAfterChange": "   public OpenDefinitionsDocument getODDForDocument(Document doc)", "diff": ["-    int index = _getIndexOfDocument(doc);", "-    if (index == -1) {", "-      throw new UnexpectedException(new IllegalStateException(\"Could not get the OpenDefinitionsDocument for Document: \" + doc));", "+    Iterator<OpenDefinitionsDocument> odds = _documentsRepos.valuesIterator();", "+    while(odds.hasNext())", "+    {", "+      OpenDefinitionsDocument odd = odds.next();", "+      if(doc == odd.getDocument())", "+      {", "+        return odd;", "+      }", "-    else {", "-      return (OpenDefinitionsDocument) _definitionsDocs.elementAt(index);", "-    }", "+    throw new UnexpectedException(new IllegalStateException(\"Could not get the OpenDefinitionsDocument for Document: \" + doc));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8086ccefa4d33084cc27e389faec3e54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ff65482ac0c34f9d18b211e3b1fa05371a07fb91", "commitAfterChange": "43bd3e08ba052e97e1d0271e7f1e324beac2ba86", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public boolean closeAllFiles()", "signatureAfterChange": "   public boolean closeAllFiles()", "diff": ["-    while (!_definitionsDocs.isEmpty() && keepClosing) {", "-      OpenDefinitionsDocument openDoc = (OpenDefinitionsDocument)", "-        _definitionsDocs.get(0);", "-      keepClosing = closeFile(openDoc);", "+    Iterator<OpenDefinitionsDocument> odds = _documentsRepos.valuesIterator();", "+    while (odds.hasNext() &&  keepClosing) {", "+      OpenDefinitionsDocument next = odds.next();", "+      keepClosing = closeFile(next);", "+      odds = _documentsRepos.valuesIterator(); // call to closeFile can mutate Iterator, so generate a new \"current\" Iterator on each loop ", "+", "+    "]}], "num": 3883}