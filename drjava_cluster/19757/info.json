{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1fb9e8363ba3eff2750465b334bcd207", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fbdf0444f39a056c9489f2aa7e9f8cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "commitAfterChange": "2d393792d3779835588c185ebb45db67c3e34dc4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void _updatePanel()", "signatureAfterChange": "   private void _updatePanel()", "diff": ["-  ", "+  /** Updates the tabbed panel if the time delay threshold has been exceeeded and no such update is already pending. */", "-    if (_frame.changed() && System.currentTimeMillis() - _lastUpdateTime > UPDATE_DELAY && ! _updatePending) {", "-      _updatePending = true;", "-      EventQueue.invokeLater(new Runnable() { ", "-        public void run() {", "-          // Update all tree nodes", "-          updatePanel();  // sets _lastUpdateTime", "-          _updatePending = false;", "-          _frame.resetChanged();", "-        }", "-      });", "+    synchronized(_updateLock) { ", "+      if (_updatePending || _lastChangeTime == _frame.getLastChangeTime()) return; ", "+    }", "+    Thread updater = new Thread(new Runnable() {", "+      public void run() {", "+        try { _updateLock.wait(UPDATE_DELAY); }", "+        catch(InterruptedException e) { /* fall through */ }", "+        EventQueue.invokeLater(new Runnable() { ", "+          public void run() {", "+            updatePanel();  // resets _tabUpdatePending and _lastChangeTime", "+            updateButtons();", "+          }", "+        });", "+      }", "+    });", "+    updater.start();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f62fdbd557384eb42a1bdd51032d8a79", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "commitAfterChange": "2d393792d3779835588c185ebb45db67c3e34dc4", "methodNumberBeforeChange": 559, "methodNumberAfterChange": 558, "signatureBeforeChange": "   public void updateTabbedPane()", "signatureAfterChange": "   public void updateTabbedPane()", "diff": ["-  /** Updates the tabbed panel if the time delay threshold has been exceeeded and no such update is already pending. */", "+    * selected component has changed since the last call or _tabUpdatePending is false. */", "-    final Component c = _tabbedPane.getSelectedComponent();", "-    if (c != null && ! _tabUpdatePending && System.currentTimeMillis() - _lastTabUpdate > UPDATE_DELAY) {", "-      _tabUpdatePending = true;", "-      EventQueue.invokeLater(new Runnable() {", "-        public void run() {", "-          c.repaint();", "-          _lastTabUpdate = System.currentTimeMillis();", "-          _tabUpdatePending = false;", "-        }", "-      });", "+    final JComponent c = (JComponent) _tabbedPane.getSelectedComponent();", "+    synchronized(_updateLock) {", "+      if (c == null || (_tabUpdatePending && c == _lastUpdatedComponent)) return;", "+    _tabUpdatePending = true;", "+    Thread updater = new Thread(new Runnable() {", "+      public void run() {", "+        synchronized(_updateLock) { ", "+          try { _updateLock.wait(UPDATE_DELAY); } ", "+          catch(InterruptedException e) { /* fall through */ }", "+        }", "+        EventQueue.invokeLater(new Runnable() { ", "+          public void run() {", "+            synchronized(_updateLock) { ", "+              _tabUpdatePending = false;", "+              _lastUpdatedComponent = c;", "+            }", "+//            System.err.println(\"Repainting \" + c);", "+            c.revalidate();", "+            c.repaint();", "+          }", "+        });", "+      }", "+    });", "+    updater.start();"]}], "num": 19757}