{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc7c4ef990464b1a1491d4b6daa58259", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08e8e6d15e8cd7576a5f58c3858e38b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EnumDeclaration.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public EnumConstant(String _name, List<Expression> _args, List<Node> _classBody)", "signatureAfterChange": "      public EnumConstant(String _name, List<? extends Expression> _args, List<Node> _classBody)", "diff": ["-    public EnumConstant(String _name, List<Expression> _args, List<Node> _classBody) {", "+    public EnumConstant(String _name, List<? extends Expression> _args, List<Node> _classBody) {", "-      args = _args;", "+      args = (_args == null) ? null : new ArrayList<Expression>(_args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f67769002c8af4d5b8a75d8f86d007", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MethodCall.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected MethodCall(String mn, List<Expression> args,                        String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   protected MethodCall(String mn, List<? extends Expression> args,                        String fn, int bl, int bc, int el, int ec)", "diff": ["-  protected MethodCall(String mn, List<Expression> args,", "+  protected MethodCall(String mn, List<? extends Expression> args,", "-    arguments  = args;", "+    arguments  = (args == null) ? null : new ArrayList<Expression>(args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a0dafcf2f537194bea245b866c272b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ArrayAllocation.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public TypeDescriptor(List<Expression> sizes, int dim,                           ArrayInitializer init, int el, int ec)", "signatureAfterChange": "     public TypeDescriptor(List<? extends Expression> sizes, int dim, ArrayInitializer init, int el, int ec)", "diff": ["-     */", "-    public TypeDescriptor(List<Expression> sizes, int dim,", "-                          ArrayInitializer init, int el, int ec) {", "-      this.sizes     = sizes;", "+    /**mCreates a new type descriptor */", "+    public TypeDescriptor(List<? extends Expression> sizes, int dim, ArrayInitializer init, int el, int ec) {", "+      this.sizes     = (sizes == null) ? null : new ArrayList<Expression>(sizes);"]}], "num": 9106}