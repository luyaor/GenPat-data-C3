{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc8760ab97898a52e52cc6215038e806", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b40344d0b85b482fe4a1b52c2d9b119", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classinfo/TreeMethodInfo.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public ClassInfo[] getParameterTypes()", "signatureAfterChange": "     public ClassInfo[] getParameterTypes()", "diff": ["-\tif (parameters == null) {", "-\t    List        ls = methodTree.getParameters();", "-\t    Iterator    it = ls.iterator();", "-\t    parameters     = new ClassInfo[ls.size()];", "-\t    int         i  = 0;", "+  if (parameters == null) {", "+      List        ls = methodTree.getParameters();", "+      Iterator    it = ls.iterator();", "+      parameters     = new ClassInfo[ls.size()];", "+      int         i  = 0;", "-\t    while (it.hasNext()) {", "-\t\tFormalParameter fp = (FormalParameter)it.next();", "-\t\tparameters[i++] = (ClassInfo)fp.getType().acceptVisitor(typeVisitor);", "-\t    }", "-\t}", "-\treturn (ClassInfo[])parameters.clone();", "+      while (it.hasNext()) {", "+    FormalParameter fp = (FormalParameter)it.next();", "+    parameters[i++] = fp.getType().acceptVisitor(typeVisitor);", "+      }", "+  }", "+  return parameters.clone();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d4c1474e88da03723c3010bad032a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classinfo/TreeConstructorInfo.java", "commitBeforeChange": "236aa7df79220d757b2ee9df059be4a4c3d5fd28", "commitAfterChange": "56602892a0ed21c5100101190a7b3d24e2204871", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public ClassInfo[] getParameterTypes()", "signatureAfterChange": "   public ClassInfo[] getParameterTypes()", "diff": ["-      ", "+", "-        parameters[i++] = (ClassInfo)fp.getType().acceptVisitor(typeVisitor);", "+        parameters[i++] = fp.getType().acceptVisitor(typeVisitor);", "-    return (ClassInfo[])parameters.clone();", "+    return parameters.clone();"]}], "num": 15788}