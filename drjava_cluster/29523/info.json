{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "189e6bbfe6d19ea5a1ce1d87d04f5c7c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21f5e004edd62dd0399edd8d6226eb1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 310, "methodNumberAfterChange": 310, "signatureBeforeChange": "   public StaticMethodInvocation lookupStaticMethod(Type t, final String name,                                                     final Iterable<? extends Type> typeArgs,                                                     final Iterable<? extends Expression> args,                                                    final Option<Type> expected)     throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException", "signatureAfterChange": "   public StaticMethodInvocation lookupStaticMethod(Type t, final String name,                                                     final Iterable<? extends Type> typeArgs,                                                     final Iterable<? extends Expression> args,                                                    final Option<Type> expected)     throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException", "diff": ["-    //debug.logValues(\"Looking up method\", new String[]{ \"t\", \"name\", \"typeArgs\", \"args\", \"expected\" },", "-    //                wrap(t), name, wrap(typeArgs), args, wrap(expected));", "+    debug.logStart(new String[]{\"t\",\"name\",\"typeArgs\",\"arg types\",\"expected\"},", "+                   wrap(t), name, wrap(typeArgs), wrap(IterUtil.map(args, NodeProperties.NODE_TYPE)),", "+                   wrap(expected)); try {", "+                     ", "+    ", "+    } finally { debug.logEnd(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9adfb184061e7ecf87fea1e60809a2e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 297, "methodNumberAfterChange": 297, "signatureBeforeChange": "   public ObjectMethodInvocation lookupMethod(final Expression object, final String name,                                               final Iterable<? extends Type> typeArgs,                                               final Iterable<? extends Expression> args,                                              final Option<Type> expected)     throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException", "signatureAfterChange": "   public ObjectMethodInvocation lookupMethod(final Expression object, final String name,                                               final Iterable<? extends Type> typeArgs,                                               final Iterable<? extends Expression> args,                                              final Option<Type> expected)     throws InvalidTargetException, InvalidTypeArgumentException, UnmatchedLookupException", "diff": ["-//    System.out.println(\"\\nLooking up method \" + name + \" in type \" + userRepresentation(NodeProperties.getType(object)) +", "-//                       \" with typeArgs (\" + userRepresentation(typeArgs) + \") and args (\" +", "-//                       userRepresentation(IterUtil.map(args, NodeProperties.NODE_TYPE)) + \")\");", "+    debug.logStart(new String[]{\"t\",\"name\", \"typeArgs\",\"arg types\",\"expected\"},", "+                   wrap(NodeProperties.getType(object)), name, wrap(typeArgs),", "+                   wrap(IterUtil.map(args, NodeProperties.NODE_TYPE)), wrap(expected)); try {", "+", "+    ", "+    } finally { debug.logEnd(); }"]}], "num": 29523}