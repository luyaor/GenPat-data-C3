{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d587213712fa675467320970592ceae", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c78a4e2e6352996f5c066944c0be5e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "d1e77e5d0818e6bb43ce09eb1ecec03bb76646fd", "commitAfterChange": "936df97bedea66175f36cae49ba74b17abf11e8a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testCloseFiles() throws BadLocationException", "signatureAfterChange": "   public void testCloseFiles() throws BadLocationException", "diff": ["+        synchronized(_readyLock) { _readyLock.notify(); }", "-// THIS TEST COMMENTED OUT TEMPORARILY BECAUSE IT IS BROKEN (dlsmith, 2006-08-21)", "-//    _model.closeAllFiles();", "-//    Utilities.clearEventQueue();", "-//    assertNumOpenDocs(1);", "-//    assertLength(0, _model.getActiveDocument());    ", "-//    listener.assertInterpreterReadyCount(1);", "-//    listener.assertNewCount(4);", "-//    listener.assertCloseCount(4);", "-//    listener.assertAbandonCount(4);", "+    _model.closeAllFiles();", "+    Utilities.clearEventQueue();", "+    assertNumOpenDocs(1);", "+    assertLength(0, _model.getActiveDocument()); ", "+    ", "+    // wait for interpreter to be ready", "+    try {", "+      synchronized(_readyLock) {", "+        if (listener.getInterpreterReadyCount() == 0) _readyLock.wait(10000);  // intentionally not a while ", "+      }", "+    }", "+    catch(InterruptedException e) { fail(\"Wait for interpreterReady event was interrupted by \" + e); }", "+    listener.assertInterpreterReadyCount(1);  ", "+    listener.assertNewCount(4);", "+    listener.assertCloseCount(4);", "+    listener.assertAbandonCount(4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5ec9c09ceed6abc65f969117cb091e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "303ddb2c47275a1e2c25f273f6ed234a39d50962", "commitAfterChange": "05170b9ac5bef61612128757c005ac85c724ec32", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testDocumentSwitching() throws BadLocationException", "signatureAfterChange": "   public void testDocumentSwitching() throws BadLocationException", "diff": ["-    OpenDefinitionsDocument doc1 = getSDModel().getActiveDocument();", "-    changeDocumentText(FOO_TEXT, doc1);", "+    OpenDefinitionsDocument doc3 = getSDModel().getActiveDocument();", "+    changeDocumentText(FOO_TEXT, doc3);", "+    listener.assertSwitchCount(0);", "+    ", "-    OpenDefinitionsDocument doc3 = setupDocument(\"\");", "+    ", "+    OpenDefinitionsDocument doc1 = setupDocument(BAZ_TEXT);", "-    assertActiveDocument(doc3);", "-", "-    // Make sure setNext doesn't move (at end of list)", "-    getSDModel().setActiveNextDocument();", "-    listener.assertSwitchCount(2);", "-    assertActiveDocument(doc3);", "-", "-    // Test setPrevious", "-    getSDModel().setActivePreviousDocument();", "-    listener.assertSwitchCount(3);", "-    assertActiveDocument(doc2);", "-", "-    getSDModel().setActivePreviousDocument();", "-    listener.assertSwitchCount(4);", "-    listener.assertSwitchCount(4);", "+    listener.assertSwitchCount(2);", "-    // Test setNext", "+    // Test setPrevious", "+    listener.assertSwitchCount(3);", "+    assertActiveDocument(doc2);", "+", "+    getSDModel().setActiveNextDocument();", "+    listener.assertSwitchCount(4);", "+    assertActiveDocument(doc3);", "+", "+    // Make sure setNext doesn't move (at end of list)", "+    getSDModel().setActiveNextDocument();", "+    listener.assertSwitchCount(4);", "+    assertActiveDocument(doc3);", "+", "+    // Test setPrevious", "+    getSDModel().setActivePreviousDocument();"]}], "num": 625}