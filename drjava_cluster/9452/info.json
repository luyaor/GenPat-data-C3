{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "343c5113103ae646ee29bbdf6b5b95fb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76f929f6caf6f2f7e40c4480b683c996", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/PathClassLoader.java", "commitBeforeChange": "8f22faa37dd01a3f7558266d18abc2d7efbad303", "commitAfterChange": "cb90935101bcad5cbb9112da0b615959c52160fc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private static URL[] makeURLs(Iterable<? extends File> path)", "signatureAfterChange": "      protected Enumeration<URL> findResources(String name) throws IOException", "diff": ["-  private static URL[] makeURLs(Iterable<? extends File> path) {", "-    LinkedList<URL> result = new LinkedList<URL>();", "-    for (File f : path) {", "-      try { result.add(f.toURI().toURL()); }", "-      catch (IllegalArgumentException e) { DebugUtil.error.log(e); }", "-      catch (MalformedURLException e) { DebugUtil.error.log(e); }", "-    return result.toArray(new URL[result.size()]);", "+  ", "+  protected Enumeration<URL> findResources(String name) throws IOException {", "+    Iterator<URL> result = EmptyIterator.make();", "+    for (File f : _path) {", "+      try {", "+        URL url = f.toURI().toURL();", "+        Enumeration<URL> newResults = new URLClassLoader(new URL[]{ url }).findResources(name);", "+        if (newResults.hasMoreElements()) {", "+          result = ComposedIterator.make(result, IterUtil.asIterator(newResults));", "+        }", "+      }", "+      catch (IllegalArgumentException e) { error.log(e); }", "+      catch (MalformedURLException e) { error.log(e); }", "+      // just skip the path element if there's an error", "+    }", "+    return IterUtil.asEnumeration(result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a44f742a6705a372e9c827de1ea1c8a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "commitAfterChange": "62776e907e3e6dddd6b4161559ae3b70f27cc2e5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 5, "signatureBeforeChange": "   static boolean handleCommandLineArgs(String[] args)", "signatureAfterChange": "   static boolean handleCommandLineArgs(String[] args)", "diff": ["-    int firstFile = 0;", "-", "+    ", "-    for (int i = 0; i < args.length; i++) {", "-      if (args[i].equals(\"-config\")) {", "-        if (args.length > i+1) {", "-          setPropertiesFile(args[i+1]);", "-          firstFile = i+2;", "-          _config = _initConfig();", "+    int firstFile = 0;", "+    int len = args.length;", "+    _filesToOpen = new ArrayList<String>();", "+    ", "+    for (int i = 0; i < len; i++) {", "+      String arg = args[i];", "+      ", "+      if (arg.equals(\"-config\")) {", "+        if (len == i + 1) { ", "+          // config option is missing file name; should we generate an error?", "+          return true;", "-        else firstFile = i+1;", "+        ", "+        // arg.length > i+1 implying args list incudes config file name and perhaps files to open", "+        setPropertiesFile(args[i + 1]);", "+        firstFile = i + 2;", "+        _config = _initConfig();  // read specified .djrava file into _config", "-", "-      else if (args[i].equals(\"-attemptingAugmentedClasspath\"))", "-        _attemptingAugmentedClassPath = true;", "-", "-      else if (args[i].equals(\"-debugConsole\")) _showDrJavaDebugConsole = true;", "-", "-      else if (args[i].equals(\"-help\") || args[i].equals(\"-?\")) {", "+      else if ((arg.length() > 1) && (arg.substring(0,2).equals(\"-X\"))) _jmvArgs.add(arg); ", "+      ", "+      else if (arg.equals(\"-debugConsole\")) _showDebugConsole = true;", "+      ", "+      else if (arg.equals(\"-help\") || arg.equals(\"-?\")) {", "+      else {", "+        firstFile = i;", "+        break;", "+      }", "-    // Open the rest as filenames", "-    int numFiles = args.length - firstFile;", "-    _filesToOpen = new String[numFiles];", "-    System.arraycopy(args, firstFile, _filesToOpen, 0, numFiles);", "+    // Open the remaining args as filenames", "+    for (int i = firstFile; i < len; i++) _filesToOpen.add(args[i]);"]}], "num": 9452}