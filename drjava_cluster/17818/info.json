{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d81738bd98abf9869d0b199c2d991b59", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11ae741ed075a259adb3fbeca6fc89cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "608d05e2a10d21cbc190b09334cd60b3c39fbc37", "commitAfterChange": "e2abbf01d6f3b23be51f493f663daa5ce8abf706", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private void compileAnonymousInnerConstructor(AnonymousInnerAllocation ast)", "signatureAfterChange": "      private void compileAnonymousInnerConstructor(AnonymousInnerAllocation ast)", "diff": ["-    DJConstructor superTarget = NodeProperties.getConstructor(ast);", "+    DJConstructor superTarget = NodeProperties.getConstructor(ast).declaredSignature();", "-                                                superTarget.declaredParameters()) + \"V\";", "+                                                superTarget.parameters()) + \"V\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f3dd74628870358a3e789a0924154c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "cf1b07a5f122d4faa57c9cb7ed7def1489ba2183", "commitAfterChange": "cf133e63dac33b490f37f86f2c16723ac73d3ddb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "         protected void junitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "signatureAfterChange": "         protected void junitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "diff": ["-      String cpString = _jvm.getClasspathString();", "+      String cpString = _jvm.getClasspath().toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9534e0ebad50ee6189ae8be3b5d32995", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DrJavaTestSuiteLoader.java", "commitBeforeChange": "cf1b07a5f122d4faa57c9cb7ed7def1489ba2183", "commitAfterChange": "cf133e63dac33b490f37f86f2c16723ac73d3ddb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public DrJavaTestSuiteLoader(JUnitModelCallback jmc)", "signatureAfterChange": "      public DrJavaTestSuiteLoader(JUnitModelCallback jmc)", "diff": ["-    String classpath = _jmc.getClasspathString();", "+    String classpath = _jmc.getClasspath().toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee2730dea1e14b4d68c225b3c625da85", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "608d05e2a10d21cbc190b09334cd60b3c39fbc37", "commitAfterChange": "e2abbf01d6f3b23be51f493f663daa5ce8abf706", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void compileAnonymousConstructor(AnonymousAllocation ast)", "signatureAfterChange": "      private void compileAnonymousConstructor(AnonymousAllocation ast)", "diff": ["-      DJConstructor superTarget = NodeProperties.getConstructor(ast);", "+      DJConstructor superTarget = NodeProperties.getConstructor(ast).declaredSignature();", "-                         paramListDescriptor(extraArg, superTarget.declaredParameters()) + \"V\");", "+                         paramListDescriptor(extraArg, superTarget.parameters()) + \"V\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeb5fd26d33a8b522e81b531b4e960e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "608d05e2a10d21cbc190b09334cd60b3c39fbc37", "commitAfterChange": "e2abbf01d6f3b23be51f493f663daa5ce8abf706", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private void compileConstructor(ConstructorDeclaration ast, Type extendsT)", "signatureAfterChange": "      private void compileConstructor(ConstructorDeclaration ast, Type extendsT)", "diff": ["-      DJConstructor callTarget = NodeProperties.getConstructor(call);", "+      DJConstructor callTarget = NodeProperties.getConstructor(call).declaredSignature();", "-           IterUtil.zip(callTarget.declaredParameters(), call.getArguments())) {", "+           IterUtil.zip(callTarget.parameters(), call.getArguments())) {", "-                         paramListDescriptor(extraArg, callTarget.declaredParameters()) + \"V\");", "+                         paramListDescriptor(extraArg, callTarget.parameters()) + \"V\");"]}], "num": 17818}