{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b6b70d700c54e1908284364af11f9a0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cddc96d0c65a76a2a8713b271cfac0d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 420, "methodNumberAfterChange": 369, "signatureBeforeChange": "     public void breakpointRemoved(final Breakpoint bp)", "signatureAfterChange": "         public void regionRemoved(final Breakpoint bp)", "diff": ["+        /** Called when a breakpoint is removed. Must be executed in event thread. */", "+        public void regionRemoved(final Breakpoint bp) {      ", "+          HighlightManager.HighlightInfo highlight = _documentRegionHighlights.get(bp);", "+          if (highlight != null) highlight.remove();", "+          _documentRegionHighlights.remove(bp);", "+        }", "-    /* Must be executed in event thread. */", "-    public void breakpointRemoved(final Breakpoint bp) {", "-      ", "-      HighlightManager.HighlightInfo highlight = _breakpointHighlights.get(bp);", "-      if (highlight != null) highlight.remove();", "-      _breakpointHighlights.remove(bp);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6351aa8f327977d7a7c15ac74bfa76bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 419, "methodNumberAfterChange": 368, "signatureBeforeChange": "     public void breakpointChanged(Breakpoint bp)", "signatureAfterChange": "         public void regionChanged(Breakpoint bp)", "diff": ["+        /** Called when a breakpoint is changed. Must execute in event thread. */", "+        public void regionChanged(Breakpoint bp) { ", "+          regionRemoved(bp);", "+          regionAdded(bp);", "+        }", "-    /** Called when a breakpoint is changed. Must execute in event thread. */", "-    public void breakpointChanged(Breakpoint bp) { ", "-      breakpointRemoved(bp);", "-      breakpointSet(bp);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e0e5c16648b6bc07492f996d7a8c681", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentFileManager.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void numberItems()", "signatureAfterChange": "   public void numberItems()", "diff": ["-      JMenuItem delItem = _recentMenuItems.elementAt(delPos - 1);", "-      _recentMenuItems.removeElementAt(delPos - 1);", "-      _recentFiles.removeElementAt(delPos - 1);", "+      JMenuItem delItem = _recentMenuItems.get(delPos - 1);", "+      _recentMenuItems.remove(delPos - 1);", "+      _recentFiles.remove(delPos - 1);", "-      ", "+", "-    String itemText;", "-      currItem = _recentMenuItems.elementAt(i);", "-      currItem.setText((i+1) + \". \" + _recentFiles.elementAt(i).getName());", "+      currItem = _recentMenuItems.get(i);", "+      currItem.setText((i+1) + \". \" + _recentFiles.get(i).getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99e803fe457e880c39eaba63f2cb07a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentFileManager.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void removeIfInList(File file)", "signatureAfterChange": "   public void removeIfInList(File file)", "diff": ["-    ", "+", "-      File currFile = _recentFiles.elementAt(i);", "+      File currFile = _recentFiles.get(i);", "-      ", "+", "-        _recentFiles.removeElementAt(i);", "-        JMenuItem menuItem = _recentMenuItems.elementAt(i);", "+        _recentFiles.remove(i);", "+        JMenuItem menuItem = _recentMenuItems.get(i);", "-        _recentMenuItems.removeElementAt(i);", "+        _recentMenuItems.remove(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e0f351326e49a2e5ebcbdd665f3ddbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": "     public void addBreakpoint( Breakpoint breakpoint)", "signatureAfterChange": "     public void addBreakpoint( Breakpoint breakpoint)", "diff": ["-      ", "+", "-        Breakpoint bp = _breakpoints.elementAt(i);", "+        Breakpoint bp = _breakpoints.get(i);", "-        ", "+", "-          _breakpoints.insertElementAt(breakpoint, i);", "+          _breakpoints.add(i, breakpoint);", "-          ", "+", "-            _breakpoints.insertElementAt(breakpoint, i);", "+            _breakpoints.add(i, breakpoint);", "-      _breakpoints.addElement(breakpoint);", "+      _breakpoints.add(breakpoint);"]}], "num": 15654}