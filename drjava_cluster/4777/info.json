{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9740d0d952e3d0d60fa61901487b5fbd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55ddd82dfa4907267343aafb5366c7b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "27f4730bb628f4f21b5ace9b8592e93a615017f8", "commitAfterChange": "08f616afaebe02cc02ba5da4da4990852caead81", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "signatureAfterChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "diff": ["+    ", "-//    System.err.println(\"Build directory is \" + buildDir);", "+//    Utilities.show(\"Running JUnit tests. Build directory is \" + buildDir);", "-    ", "+//    Utilities.show(\"Preparing to synchronize\");", "+//      Utilities.show(\"Finding test classes\");", "-     try {  /** Run the junit test suite that has already been set up on the slave JVM */", "+      try {  /** Run the junit test suite that has already been set up on the slave JVM */", "-        ", "-        // notify listeners that JUnit testing has finally started!", "-//        Utilities.invokeLater(new Runnable() { public void run() { ", "-          _notifier.junitStarted(); ", "-//        } });", "-        ", "-        _jvm.runTestSuite();", "-        ", "+//        System.err.println(\"Spawning test thread\");", "+        new Thread(new Runnable() {", "+          public void run() { ", "+            try {", "+//              Utilities.show(\"Starting JUnit\");", "+              _notifier.junitStarted(); ", "+              _jvm.runTestSuite();", "+            }", "+            catch(RemoteException e) { ", "+              /* System.err.println(\"Caught \" + e); */", "+              throw new UnexpectedException(e); ", "+            }", "+          }", "+        }).start();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2a5e273433f1637ea5817194aa3dd1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "310f2e2e5bd03b1be3d582b8bb080b976b35e862", "commitAfterChange": "5ac038fd2393232341f24ed3abaede1deb4e977a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void junitAll(List<String> qualifiedClassnames, List<File> files)", "signatureAfterChange": "   public void junitAll(List<String> qualifiedClassnames, List<File> files)", "diff": ["-      try {", "-        List<String> testClasses = _jvm.findTestClasses(qualifiedClassnames, files);", "-        if (testClasses.isEmpty()) {", "-          nonTestCase(true);", "-          return;", "-        } ", "-        _notifier.junitAllStarted(); ", "-        _jvm.runTestSuite();", "+      List<String> testClasses;", "+      try { testClasses = _jvm.findTestClasses(qualifiedClassnames, files); }", "+      catch(IOException e) { throw new UnexpectedException(e); }", "+      ", "+      if (testClasses.isEmpty()) {", "+        nonTestCase(true);", "+        return;", "+      _notifier.junitAllStarted(); ", "+      try { _jvm.runTestSuite(); }"]}], "num": 4777}