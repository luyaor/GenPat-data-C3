{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d25cc1fa2e1d4da4fe663887c9d669fa", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69ef7873e4b0fb0d1391dc29902576d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "97a825e752ef3da28458a0080f0990b0f0659788", "commitAfterChange": "3f50a00dbfaba534529de5a114a9d7c30612e9a7", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public void testFrenchKeyStrokes() throws IOException, InterruptedException", "signatureAfterChange": "   public void testFrenchKeyStrokes() throws IOException, InterruptedException", "diff": ["-    //KeyEvent ke = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, InputEvent.ALT_MASK, KeyEvent.VK_UNDEFINED, '{'); ", "-    final KeyEvent ke1 = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, 0, KeyEvent.VK_UNDEFINED, 'T'); ", "+    //KeyEvent ke = new KeyEvent(pane, TYPED, 0, ALT, VK_UNDEF, '{'); ", "+    final KeyEvent ke1 = new KeyEvent(pane, TYPED, 0, 0, VK_UNDEF, 'T'); ", "-    Utilities.invokeAndWait(new Runnable() { public void run() { pane.processKeyEvent(ke1); } });", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        pane.processKeyEvent(ke1); ", "+        _frame.validate();", "+      } ", "+    });", "+    Utilities.clearEventQueue();", "+    ", "-    final KeyEvent ke2 = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, InputEvent.ALT_MASK, KeyEvent.VK_UNDEFINED, '{'); ", "-    Utilities.invokeAndWait(new Runnable() { public void run() { pane.processKeyEvent(ke2); } });", "+    final KeyEvent ke2 = new KeyEvent(pane, TYPED, 0, ALT, VK_UNDEF, '{'); ", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        pane.processKeyEvent(ke2); ", "+        _frame.validate();   ", "+      } ", "+    });", "+    Utilities.clearEventQueue();", "+        ", "-    final KeyEvent ke3 = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, InputEvent.ALT_MASK, KeyEvent.VK_UNDEFINED, '}'); ", "-    Utilities.invokeAndWait(new Runnable() { public void run() { pane.processKeyEvent(ke3); } });", "+    final KeyEvent ke3 = new KeyEvent(pane, TYPED, 0, ALT, VK_UNDEF, '}'); ", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        pane.processKeyEvent(ke3); ", "+        _frame.validate();", "+      } ", "+    });", "+    Utilities.clearEventQueue();", "+    ", "-    final KeyEvent ke4 = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, InputEvent.ALT_MASK, KeyEvent.VK_UNDEFINED, '['); ", "-    Utilities.invokeAndWait(new Runnable() { public void run() { pane.processKeyEvent(ke4); } });", "+    final KeyEvent ke4 = new KeyEvent(pane, TYPED, 0, ALT, VK_UNDEF, '['); ", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        pane.processKeyEvent(ke4);", "+        _frame.validate();", "+      } ", "+    });", "+    Utilities.clearEventQueue();", "+    ", "-    final KeyEvent ke5 = new KeyEvent(pane, KeyEvent.KEY_TYPED, 0, InputEvent.ALT_MASK, KeyEvent.VK_UNDEFINED, ']'); ", "-    Utilities.invokeAndWait(new Runnable() { public void run() { pane.processKeyEvent(ke5);  } });", "+    final KeyEvent ke5 = new KeyEvent(pane, TYPED, 0, ALT, VK_UNDEF, ']'); ", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        pane.processKeyEvent(ke5); ", "+        _frame.validate();", "+      } ", "+    });", "+    Utilities.clearEventQueue();", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9ee34c8375c068a96c108ff3761bcbd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "97a825e752ef3da28458a0080f0990b0f0659788", "commitAfterChange": "3f50a00dbfaba534529de5a114a9d7c30612e9a7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testMetaKeyPress() throws BadLocationException", "signatureAfterChange": "   public void testMetaKeyPress() throws BadLocationException", "diff": ["-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "-                                                 InputEvent.META_MASK, KeyEvent.VK_META, KeyEvent.CHAR_UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, PRESSED, (new Date()).getTime(), M_MASK, META, UNDEFINED));", "+        _frame.validate();", "+    Utilities.clearEventQueue();", "-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "-                                                 InputEvent.META_MASK, KeyEvent.VK_W, KeyEvent.CHAR_UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, PRESSED, (new Date()).getTime(), M_MASK, W, UNDEFINED));", "+        _frame.validate();", "-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_TYPED, (new Date()).getTime(),", "-                                                 InputEvent.META_MASK, KeyEvent.VK_UNDEFINED, 'w'));", "-        ", "+        defPane.processKeyEvent(new KeyEvent(defPane, TYPED, (new Date()).getTime(), M_MASK, VK_UNDEF, 'w'));", "+        _frame.validate();", "+    Utilities.clearEventQueue();", "-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "-                                                 InputEvent.META_MASK, KeyEvent.VK_W, KeyEvent.CHAR_UNDEFINED));", "-        ", "+        defPane.processKeyEvent(new KeyEvent(defPane, RELEASED, (new Date()).getTime(), M_MASK, W, UNDEFINED));", "+        _frame.validate();", "-    ", "+    Utilities.clearEventQueue();", "+     ", "-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "-                                                 0, KeyEvent.VK_META, KeyEvent.CHAR_UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, RELEASED, (new Date()).getTime(), 0, META, UNDEFINED));", "+        _frame.validate();", "+    Utilities.clearEventQueue();"]}], "num": 6151}