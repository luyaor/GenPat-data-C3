{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2818dbeb2bc0e531ab68f33369472348", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ceb7eee707e7b14bd019d287e0715b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public int getLineFirstCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   public int getLineFirstCharPos(final int pos) throws BadLocationException", "diff": ["-  public int getLineFirstCharPos(int pos) throws BadLocationException {", "+  public int getLineFirstCharPos(final int pos) throws BadLocationException {", "-    String key = \"getLineFirstCharPos:\" + pos;", "-    Integer cached = (Integer) _checkCache(key);", "+    final Query key = new Query.LineFirstCharPos(pos);", "+    final Integer cached = (Integer) _checkCache(key);", "-      _storeInCache(key, nonWSPos, nonWSPos);", "+      _storeInCache(key, nonWSPos, max(pos, nonWSPos));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6659206efe969e1225c0fe890cf25f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a3306545963d95b8e7f45728ebf6e03a4f716f60", "commitAfterChange": "cc830d3cfb835e44d2498e98729c28536d682aad", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public int getLineFirstCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   public int getLineFirstCharPos(int pos) throws BadLocationException", "diff": ["-  public int getLineFirstCharPos(int pos) throws BadLocationException {  ", "+  public int getLineFirstCharPos(int pos) throws BadLocationException {", "+    // Check cache", "+    String key = \"getLineFirstCharPos:\" + pos;", "+    Integer cached = (Integer) _checkCache(key);", "+    if (cached != null) {", "+      return cached.intValue();", "+    }", "+    ", "+        _storeInCache(key, new Integer(startLinePos + walker));", "+    _storeInCache(key, new Integer(endLinePos));"]}], "num": 6105}