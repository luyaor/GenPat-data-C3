{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcb7d1546349c9952b294e22fdc23205", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21df28fb82a041123e34697eea80940b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 249, "methodNumberAfterChange": 251, "signatureBeforeChange": "     File _getSourceRoot(String packageName) throws InvalidPackageException", "signatureAfterChange": "     File _getSourceRoot(String packageName) throws InvalidPackageException", "diff": ["-      try { sourceFile = getFile();  }", "-      catch (IllegalStateException ise) {", "-        throw new InvalidPackageException(-1, \"Can not get source root for unsaved file. Please save.\");", "+      try { ", "+        sourceFile = getFile();", "+        if (sourceFile == null) ", "+          throw new InvalidPackageException(-1, \"Can not get source root for unsaved file. Please save.\");", "-      // Must use the canonical path, in case there are dots in the path", "-      //  (which will conflict with the package name)", "+      // Must use the canonical path, in case there are dots in the path (which will conflict with the package name)", "-        while (!packageStack.isEmpty()) {", "+        while (! packageStack.isEmpty()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef8c7ab46cbf028a277e4806a7cc81cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public CompilerError getErrorAtOffset(OpenDefinitionsDocument odd, int offset)", "signatureAfterChange": "   public CompilerError getErrorAtOffset(OpenDefinitionsDocument odd, int offset)", "diff": ["-    try { file = odd.getFile(); }", "-    catch (IllegalStateException e) { return null; }", "+    try { ", "+      file = odd.getFile(); ", "+      if (file == null) return null;", "+    }"]}], "num": 28764}