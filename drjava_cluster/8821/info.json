{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "020b4f504592c12c026571e01e336892", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18bf5a200b4ac28c82efc8985a898ebd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 210, "signatureBeforeChange": "   public static <S, T> SnapshotIterable<T> mapSnapshot(Iterable<? extends S> source, Lambda<? super S, ? extends T> map)", "signatureAfterChange": "   public static <T, R> SnapshotIterable<R> mapSnapshot(Iterable<? extends T> source,                                                        Lambda<? super T, ? extends R> map)", "diff": ["+  /** Immediately apply a map function to each element in an iterable. */", "+  public static <T, R> SnapshotIterable<R> mapSnapshot(Iterable<? extends T> source,", "+                                                       Lambda<? super T, ? extends R> map) {", "+    return new SnapshotIterable<R>(new MappedIterable<T, R>(source, map));", "-  public static <S, T> SnapshotIterable<T> mapSnapshot(Iterable<? extends S> source, Lambda<? super S, ? extends T> map) {", "-    return new SnapshotIterable<T>(new MappedIterable<S, T>(source, map));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bff4d17002b2ad5cc78174873415fbf6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 163, "signatureBeforeChange": "   public static <S, T> SnapshotIterable<T>      mapSnapshot(Iterable<? extends S> source, Lambda<? super S, ? extends T> map)", "signatureAfterChange": "   public static <S, T> SnapshotIterable<T> mapSnapshot(Iterable<? extends S> source, Lambda<? super S, ? extends T> map)", "diff": ["+  public static <S, T> SnapshotIterable<T> mapSnapshot(Iterable<? extends S> source, Lambda<? super S, ? extends T> map) {", "+    return new SnapshotIterable<T>(new MappedIterable<S, T>(source, map));", "-   */", "-  public static <S, T> SnapshotIterable<T> ", "-    mapSnapshot(Iterable<? extends S> source, Lambda<? super S, ? extends T> map) {", "-    return SnapshotIterable.make(MappedIterable.make(source, map));", "-  }"]}], "num": 8821}