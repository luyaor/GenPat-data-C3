{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a00e9e8fafde9a8b15bbce7b5451d7c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3469be017f4728c5d7f143d3d335e7d6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "00c274c983090e9126b5a9ac7c84f4781adba195", "commitAfterChange": "f520b1b5f1b15642429d7c7844d7ac7a96f3e402", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public void testInteractionsHistoryStoredCorrectly() throws EditDocumentException", "signatureAfterChange": "   public void testInteractionsHistoryStoredCorrectly() throws Exception", "diff": ["-  public void testInteractionsHistoryStoredCorrectly() throws EditDocumentException {", "+  public void testInteractionsHistoryStoredCorrectly() throws Exception {", "-    final InteractionsDocument doc = _model.getDocument();", "+    _model = new BadSyntaxInteractionsModel(_adapter);  // replaces model created by setUp()", "+    final BadSyntaxInteractionsModel model = (BadSyntaxInteractionsModel) _model;", "+    ", "+    final InteractionsDocument doc = model.getDocument();", "+    model._logInteractionStart();", "-        _model.interpretCurrentInteraction();", "+        model.setSyntaxErrorStrings(\"Encountered Unexpected \\\"<EOF>\\\"\", \"public class A {\\n\");", "+        model.interpretCurrentInteraction();", "-    Utilities.clearEventQueue();", "+    model._waitInteractionDone();", "-    _model.replReturnedSyntaxError(\"Encountered Unexpected \\\"<EOF>\\\"\", \"public class A {\\n\", -1, -1, -1, -1);", "+//    _model.replReturnedSyntaxError(\"Encountered Unexpected \\\"<EOF>\\\"\", \"public class A {\\n\", -1, -1, -1, -1);", "-    Utilities.clearEventQueue();", "+//    Utilities.clearEventQueue();", "-    ", "+    model.disableSyntaxError();", "+    model._logInteractionStart();", "-        _model.replReturnedVoid();", "-    ", "-    Utilities.clearEventQueue();", "+    model._waitInteractionDone();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc86a3c321b68476dd8e8b6fc0209be8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "998d49ab48c08c55f388485512c281814a54c029", "commitAfterChange": "a8b8b0a5cb85063013adcdf9293d0c9c540b8baa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testInterpretCurrentInteraction() throws EditDocumentException", "signatureAfterChange": "   public void testInterpretCurrentInteraction() throws Exception", "diff": ["-  public void testInterpretCurrentInteraction() throws EditDocumentException {", "+  public void testInterpretCurrentInteraction() throws Exception {", "-    final String code = \"int x = 3;\";", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() { ", "-        model.interpretCurrentInteraction();", "-//        model.replReturnedVoid(); // pretend call completed", "-      } ", "-    });", "+    model._logInteractionStart();", "+    model.interpretCurrentInteraction();", "+    model._waitInteractionDone();", "+    final String code = \"int x = 3;\";", "-        model.interpretCurrentInteraction();", "-//        model.replReturnedVoid(); ", "+//    System.err.println(\"doc = '\" + doc.getText() + \"'\");", "+    assertTrue(\"Code appended correctly to interactions document\", doc.getText().endsWith(code));", "+//    System.err.println(\"currentInteraction = '\" + doc.getCurrentInteraction() + \"'\");", "+    Utilities.clearEventQueue();", "+    assertTrue(\"Current interaction text is correct\", doc.getCurrentInteraction().equals(code));", "+    ", "+    model._logInteractionStart();", "+    model.interpretCurrentInteraction(); // runs in the event queue ", "+    model._waitInteractionDone();", "+"]}], "num": 17711}