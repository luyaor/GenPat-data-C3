{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e01df6909dd897862177d966052298d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "739455f888391f1ac8a6b0ebf854e728", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/NameVisitorExtension.java", "commitBeforeChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "commitAfterChange": "ba6205cad42ae00df3c37c5cbd4625770848df66", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public NameVisitorExtension(Context ctx)", "signatureAfterChange": "   public NameVisitorExtension(Context nameContext, Context typeContext)", "diff": ["-  public NameVisitorExtension(Context ctx) {    ", "-    super(ctx);", "-    _context = ctx;", "-    _tc = new TypeChecker(ctx);", "-  }  ", "+   */", "+  public NameVisitorExtension(Context nameContext, Context typeContext) {    ", "+    super(nameContext);", "+    _context = nameContext;", "+    _tc = new TypeChecker(typeContext);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e586c88024a36bb2c6ae484a188fa64c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "commitAfterChange": "ba6205cad42ae00df3c37c5cbd4625770848df66", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public NameVisitorExtension makeNameVisitor(final Context context)", "signatureAfterChange": "   public NameVisitorExtension makeNameVisitor(final Context nameContext,                                                final Context typeContext)", "diff": ["-  public NameVisitorExtension makeNameVisitor(final Context context) {", "-    return new NameVisitorExtension(context) {", "+  public NameVisitorExtension makeNameVisitor(final Context nameContext, ", "+                                              final Context typeContext) {", "+    return new NameVisitorExtension(nameContext, typeContext) {", "-      //            Class oldClass = (Class)context.get(name);", "-      //            Class newClass = _getClassForType(type, context);", "+      //            Class oldClass = (Class)nameContext.get(name);", "+      //            Class newClass = _getClassForType(type, nameContext);", "-          if (context.isDefined(\"this\")) {", "+          if (nameContext.isDefined(\"this\")) {", "-            ObjectFieldAccess ofa = _getObjectFieldAccessForField(field, context);", "+            ObjectFieldAccess ofa = _getObjectFieldAccessForField(field, nameContext);", "-            StaticFieldAccess sfa = _getStaticFieldAccessForField(field, context);", "+            StaticFieldAccess sfa = _getStaticFieldAccessForField(field, nameContext);", "-              ReferenceType rt = _getReferenceTypeForField(field, context);", "+              ReferenceType rt = _getReferenceTypeForField(field, nameContext);", "-          else if (context.isDefined(\"this\")) {", "-            ObjectMethodCall omc = _getObjectMethodCallForFunction(method, context);", "+          else if (nameContext.isDefined(\"this\")) {", "+            ObjectMethodCall omc = _getObjectMethodCallForFunction(method, nameContext);", "-            StaticMethodCall smc = _getStaticMethodCallForFunction(method, context);", "+            StaticMethodCall smc = _getStaticMethodCallForFunction(method, nameContext);"]}], "num": 2530}