{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "760b31fd1b300e5fc50eef9b0996c91c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e4d2699dfc41627ba6bec9ada65671d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "dedfa81500269a8e5b265cbcc3d07ed24185cf9c", "commitAfterChange": "9abb88e872fec959d3c47aaef8e9495533a4f0e1", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": "    private void _updateToolbarButtons()", "signatureAfterChange": "    private void _updateToolbarButtons()", "diff": ["-          if (a == null) {", "-            ActionListener[] al = b.getActionListeners();", "+          /**if (a == null) {", "+            ActionListener[] al = b.getActionListeners(); // 1.4 only", "+            */", "-          }", "+          //}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "695768df2f34afd3a0e9862076e137f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Void forAbstractMethodDefDoFirst(AbstractMethodDef that)", "signatureAfterChange": "   public Void forAbstractMethodDefDoFirst(AbstractMethodDef that)", "diff": ["-  /*Make sure that this abstract method def is declared to be abstract*/", "+  /* Make sure that this abstract method def is declared to be abstract*/", "-    if (!_classData.hasModifier(\"abstract\")) {", "+    if (! _classData.hasModifier(\"abstract\")) {", "-    ModifiersAndVisibility mav = that.getMav();", "-    String[] modifiers = mav.getModifiers();", "-    // Concrete methods can now be public, private, protected at the Intermediate level.  They still cannot be static.", "-    for (int i = 0; i < modifiers.length; i++) {", "-      if (modifiers[i].equals(\"static\")) {", "-        _addError(\"Static methods cannot be used at the Intermediate level\", that);", "-        break;", "-      }", "-    }", "+//    ModifiersAndVisibility mav = that.getMav();", "+//    String[] modifiers = mav.getModifiers();", "+//    // Concrete methods can now be public, private, protected at the Intermediate level.  They still cannot be static.", "+//    for (int i = 0; i < modifiers.length; i++) {", "+//      if (modifiers[i].equals(\"static\")) {", "+//        _addError(\"Static methods cannot be used at the Intermediate level\", that);", "+//        break;", "+//      }", "+//    }"]}], "num": 5435}