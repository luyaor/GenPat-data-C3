{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa0f4d42d7ff013031c417c45ec9562a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f7c1a0e3e36f06e72162f0bdf7111e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "4427ad83551d20b6933cd5a6acd403abdb7b0d92", "commitAfterChange": "8e9d6d4a3458f4fb8d197d118149328dfb2ae150", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "   final public SourceFile SourceFile() throws ParseException", "signatureAfterChange": "   final public SourceFile SourceFile() throws ParseException", "diff": ["+", "+  /**", "+   * collects body items outside of a class definition", "+   * emptied and added to a class once a class definition is defined", "+   */", "+  BodyItemI bi;", "+  BodyItemI tempbi;", "+  LinkedList<BodyItemI> items = new LinkedList<BodyItemI>();", "+      while(items.size() > 0){", "+//        temp3.getBody().getItems().add(items.removeFirst());", "+        items.removeFirst();", "+      }", "-        } else if (jj_2_5(2147483647)) {", "+        } else if (jj_2_5(2)) {", "+          tempbi = Initializer();", "+        } else if (jj_2_6(2147483647)) {", "+          tempbi = MethodDef();", "+        } else if (jj_2_7(2147483647)) {", "+          tempbi = ConstructorDef();", "+        } else if (jj_2_8(2147483647)) {", "+          tempbi = VariableDeclaration();", "+          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+          case SEMICOLON:", "+            jj_consume_token(SEMICOLON);", "+            break;", "+          default:", "+            jj_la1[1] = jj_gen;", "+            _ignoreString(\";(\");", "+          }", "+        } else if (jj_2_9(2147483647)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1e8405f15d96ce81921db4e3fe178d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 47, "signatureBeforeChange": "   final public FormalParameter varArgsFormalParameter() throws ParseException", "signatureAfterChange": "   final public FormalParameter varArgsFormalParameter() throws ParseException", "diff": ["-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case FINAL:", "-      f = jj_consume_token(FINAL);", "-      break;", "-    default:", "-      jj_la1[36] = jj_gen;", "-      ;", "-    }", "-    typ = type();", "-    jj_consume_token(VAR_ARGS);", "-    id = jj_consume_token(IDENTIFIER);", "+    try {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case FINAL:", "+        f = jj_consume_token(FINAL);", "+        break;", "+      default:", "+        jj_la1[37] = jj_gen;", "+        ;", "+      }", "+      typ = type();", "+      jj_consume_token(VAR_ARGS);", "+      id = jj_consume_token(IDENTIFIER);", "+    } catch (ParseException pe) {", "+      _throwParseException(pe, \"Invalid variable arguments formal parameter\");", "+    }"]}], "num": 7442}