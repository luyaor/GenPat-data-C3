{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b416caa4affcc62cd749626d83ef4a6d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1422eb50901e6dabbae074022d46e244", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "25c6efa4fee666f10304502f8f42fa30cbab79a2", "commitAfterChange": "e193e4674aaab3350b36cbc521ecf3bf9c098bc6", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public void testMove()", "signatureAfterChange": "   public void testMove()", "diff": ["-    try {", "-      model0.move(-30);", "-      assertTrue(\"#0.0\", false);", "-    } catch (Exception e) { }", "-    try {", "-      model0.move(1);", "-      assertTrue(\"#0.1\", false);", "-    } catch (Exception e) { }", "+    // The contract for ReducedModel.move now stipulates that the passed position is in range.", "+//    try {", "+//      model0.move(-30);", "+//      assertTrue(\"#0.0\", false);", "+//    } catch (Exception e) { }", "+//    try {", "+//      model0.move(1);", "+//      assertTrue(\"#0.1\", false);", "+//    } catch (Exception e) { }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bfc62d4fef6f21661183855e2312375", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersion.java", "commitBeforeChange": "e9b6b2fb912f9bb858bd9b4e8c93160bab9b774c", "commitAfterChange": "9d83c5e72c3c3a4b777224dfc83ca830e4a2d380", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public static JavaVersion parseClassVersion(String text)", "signatureAfterChange": "   public static JavaVersion parseClassVersion(String text)", "diff": ["-      switch (major) {", "-        case 45:", "-          if (minor >= 3) { return JAVA_1_1; }", "-          else { return UNRECOGNIZED; }", "-        case 46: return JAVA_1_2;", "-        case 47: return JAVA_1_3;", "-        case 48: return JAVA_1_4;", "-        case 49: return JAVA_5;", "-        case 50: return JAVA_6;", "-        case 51: return JAVA_7;", "-        default: return (major > 51) ? FUTURE : UNRECOGNIZED;", "-      }", "+      return parseClassVersion(major, minor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c94956195be8d2ab85f14870490c7ed3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "25faf15b00b7a598b085089c43f0beac765b2716", "commitAfterChange": "9ff0bbc54aa9f8d40241e0aedff6b31864ba4a0e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private boolean _isNum(String x)", "signatureAfterChange": "   private boolean _isNum(String x)", "diff": ["-    catch (NumberFormatException e) {  return false; }", "+    catch (NumberFormatException e) {", "+      if (x.endsWith(\"l\")||x.endsWith(\"L\")) {", "+          try {", "+              Long.parseLong(x.substring(0,x.length()-1));", "+              return true;", "+          } ", "+          catch (NumberFormatException e2) {", "+              return false;", "+          }", "+      }", "+      return false;", "+    }"]}], "num": 25059}