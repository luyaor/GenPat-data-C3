{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "183bf08cecc3c77ab5cb92014eb220cf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d72ac3d1c61b9420d1c4834a21b8bad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "4539df5303e52babbf266acd5ad130e809adc998", "commitAfterChange": "b695cac3782ec029c31eea7503f645530ef37186", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testOpenMultipleNonexistentFiles() throws IOException", "signatureAfterChange": "   public void testOpenMultipleNonexistentFiles() throws IOException", "diff": ["+      ", "+      public void fileNotFound(File f){", "+        fileNotFoundCount++;", "+      }", "+      ", "-", "-      fail(\"IO exception was not thrown!\");", "-      // As we hoped, the file was not found", "+      fail(\"FileNotFound exception was not thrown!\");", "-    assertEquals(\"non-existant file\", doc, null);", "+    assertTrue(\"one file was opened\", doc instanceof OpenDefinitionsDocument);", "+    listener.assertFileNotFoundCount(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebe095b044affaad70c13caf2999589a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "02b5ca416f64b6343429bd55e72b9ce1f40f0611", "commitAfterChange": "267871686ee9cb7da11475b012538aa6ee86c7c7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testCloseFiles() throws BadLocationException", "signatureAfterChange": "   public void testCloseFiles() throws BadLocationException", "diff": ["+      public synchronized void interpreterReady(File wd) {  // closing all files calls resetInteractions", "+//        Utilities.show(\"interpreterReady(\" + wd + \") called\");", "+//        Utilities.show(\"Traceback is:\\n\" + StringOps.getStackTrace());", "+        interpreterReadyCount++;", "+      }", "+    Utilities.clearEventQueue();", "-    assertLength(0, _model.getActiveDocument());", "+    assertLength(0, _model.getActiveDocument());    ", "+    listener.assertInterpreterReadyCount(1);"]}], "num": 4386}