{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d4cf0fda53f4235149c34a593e86c72", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ab30549213f599c61bb7ac0098fd454", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "b7d4cb04f4bb848380a14b3825abe047db8dc58f", "commitAfterChange": "101c103fed282ea73966b5bc0dce7152a188fba5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "signatureAfterChange": "   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "diff": ["-   */", "-  public static Iterable<JarJDKToolsLibrary> search(GlobalModel model) {", "-    ", "-    /* roots is a list of possible parent directories of Java installations; we want to eliminate duplicates & ", "-     * remember insertion order", "-     */", "-    LinkedHashMap<File,Set<JDKDescriptor>> roots = new LinkedHashMap<File,Set<JDKDescriptor>>();", "-    ", "-", "-    /* jars is a list of possible tools.jar (or classes.jar) files; we want to eliminate duplicates & ", "-     * remember insertion order", "-     */", "-    LinkedHashMap<File,Set<JDKDescriptor>> jars = new LinkedHashMap<File,Set<JDKDescriptor>>();", "-", "-    // Search for all compound JDK descriptors in the drjava.jar file", "-    Iterable<JDKDescriptor> descriptors = searchForJDKDescriptors(); ", "-    for(JDKDescriptor desc: descriptors) {", "-      // add the specific search directories and files", "-      for(File f: desc.getSearchDirectories()) { addIfDir(f, desc, roots); }", "-      for(File f: desc.getSearchFiles()) { addIfFile(f, desc, jars); }", "-      // add to the set of packages that need to be shadowed", "-      TOOLS_PACKAGES.addAll(desc.getToolsPackages());", "-    }", "-    ", "-    // We store everything in reverse order, since that's the natural order of the versions", "-    Map<FullVersion, Iterable<JarJDKToolsLibrary>> results = ", "-      new TreeMap<FullVersion, Iterable<JarJDKToolsLibrary>>();", "-    Map<FullVersion, Iterable<JarJDKToolsLibrary>> compoundResults =", "-      new TreeMap<FullVersion, Iterable<JarJDKToolsLibrary>>();", "-    ", "-    ", "-    Iterable<JarJDKToolsLibrary> collapsed = IterUtil.reverse(IterUtil.collapse(results.values()));", "-    Iterable<JarJDKToolsLibrary> compoundCollapsed = IterUtil.reverse(IterUtil.collapse(compoundResults.values()));", "-    ", "-    Map<FullVersion, Iterable<JarJDKToolsLibrary>> allResults =", "-          if (allResults.containsKey(v)) { allResults.put(v, IterUtil.compose(lib, allResults.get(v))); }", "-          else { allResults.put(v, IterUtil.singleton(lib)); }", "+   */", "+  public static Iterable<JarJDKToolsLibrary> search(GlobalModel model) {", "+    /* roots is a list of possible parent directories of Java installations; we want to eliminate duplicates & ", "+     * remember insertion order", "+     */", "+    LinkedHashMap<File,Set<JDKDescriptor>> roots = getDefaultSearchRoots();", "+", "+    /* jars is a list of possible tools.jar (or classes.jar) files; we want to eliminate duplicates & ", "+     * remember insertion order", "+     */", "+    LinkedHashMap<File,Set<JDKDescriptor>> jars = new LinkedHashMap<File,Set<JDKDescriptor>>();", "+", "+    // Search for all compound JDK descriptors in the drjava.jar file", "+    Iterable<JDKDescriptor> descriptors = searchForJDKDescriptors(); ", "+    for(JDKDescriptor desc: descriptors) {", "+      // add the specific search directories and files", "+      for(File f: desc.getSearchDirectories()) { addIfDir(f, desc, roots); }", "+      for(File f: desc.getSearchFiles()) { addIfFile(f, desc, jars); }", "+      // add to the set of packages that need to be shadowed", "+      TOOLS_PACKAGES.addAll(desc.getToolsPackages());", "+    }", "+    ", "+    // search for jar files in roots and, if found, transfer them to the jars collection", "+    searchRootsForJars(roots, jars);", "+", "+    // check which jars are valid JDKs, and determine if they are compound or full (non-compound) JDKs", "+    Map<FullVersion, Iterable<JarJDKToolsLibrary>> results = ", "+      new TreeMap<FullVersion, Iterable<JarJDKToolsLibrary>>();", "+    Map<FullVersion, Iterable<JarJDKToolsLibrary>> compoundResults =", "+      new TreeMap<FullVersion, Iterable<JarJDKToolsLibrary>>();", "+    ", "+    collectValidResults(model, jars, results, compoundResults);", "+    ", "+    // We store everything in reverse order, since that's the natural order of the versions", "+    Iterable<JarJDKToolsLibrary> collapsed = IterUtil.reverse(IterUtil.collapse(results.values()));", "+    Iterable<JarJDKToolsLibrary> compoundCollapsed = IterUtil.reverse(IterUtil.collapse(compoundResults.values()));", "+    ", "+    // Get completed compound JDKs by going through the list of compound JDKs and finding full JDKs that", "+    // complete them", "+    Map<FullVersion, Iterable<JarJDKToolsLibrary>> completedResults =", "+      getCompletedCompoundResults(model, collapsed, compoundCollapsed);", "+    ", "-      compose(collapsed,IterUtil.reverse(IterUtil.collapse(allResults.values())));", "+      compose(collapsed,IterUtil.reverse(IterUtil.collapse(completedResults.values())));", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49bdfbb5a57216e646d76729f37dfb1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "dff1e78708d1fc8c89ac7283a8a2c5db6fd8ed74", "commitAfterChange": "545baa1c63b7ee7d993e35e240105f7970f7c2d1", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": "   private void _setUpKeyBindingMaps()", "signatureAfterChange": "   private void _setUpKeyBindingMaps()", "diff": ["-      _keyBindingManager.putActionToNameMap(_newAction, ", "-                                            \"New File\");", "-      _keyBindingManager.putActionToNameMap(_openAction, ", "-                                            \"Open File\");", "-      _keyBindingManager.putActionToNameMap(_saveAction, ", "-                                            \"Save File\");", "-      _keyBindingManager.putActionToNameMap(_saveAsAction, ", "-                                            \"Save File As\");", "-      _keyBindingManager.putActionToNameMap(_closeAction, ", "-                                            \"Close File\");", "-      _keyBindingManager.putActionToNameMap(_printPreviewAction, ", "-                                            \"Print Preview\");", "-      _keyBindingManager.putActionToNameMap(_printAction, ", "-                                            \"Print\");", "-      _keyBindingManager.putActionToNameMap(_quitAction, ", "-                                            \"Quit\");", "-      _keyBindingManager.putActionToNameMap(_undoAction, ", "-                                            \"Undo\");", "-      _keyBindingManager.putActionToNameMap(_redoAction, ", "-                                            \"Redo\");", "-      _keyBindingManager.putActionToNameMap(_cutAction, ", "-                                            \"Cut\");", "-      _keyBindingManager.putActionToNameMap(_copyAction, ", "-                                            \"Copy\");", "-      _keyBindingManager.putActionToNameMap(_pasteAction, ", "-                                            \"Paste\");", "-      _keyBindingManager.putActionToNameMap(_selectAllAction, ", "-                                            \"Select All\");", "-      _keyBindingManager.putActionToNameMap(_findReplaceAction, ", "-                                            \"Find Replace\");", "-      _keyBindingManager.putActionToNameMap(_gotoLineAction, ", "-                                            \"Goto Line\");", "-      _keyBindingManager.putActionToNameMap(_switchToPrevAction, ", "-                                            \"Previous Document\");", "-      _keyBindingManager.putActionToNameMap(_switchToNextAction, ", "-                                            \"Next Document\");", "-      _keyBindingManager.putActionToNameMap(_compileAction, ", "-                                            \"Compile\");", "-      _keyBindingManager.putActionToNameMap(_abortInteractionAction, ", "-                                            \"Abort Interaction\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.backwardAction), ", "-                                            \"Backward\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionBackwardAction), ", "-                                            \"Selection Backward\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.beginAction), ", "-                                            \"Begin Document\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionBeginAction), ", "-                                            \"Selection Begin Document\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.beginLineAction), ", "-                                            \"Begin Line\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionBeginLineAction), ", "-                                            \"Selection Begin Line\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.beginParagraphAction), ", "-                                            \"Begin Paragraph\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionBeginParagraphAction), ", "-                                            \"Selection Begin Paragraph\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.previousWordAction), ", "-                                            \"Previous Word\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionPreviousWordAction), ", "-                                            \"Selection Previous Word\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.downAction), ", "-                                            \"Down\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionDownAction), ", "-                                            \"Selection Down\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.endAction), ", "-                                            \"End Document\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionEndAction), ", "-                                            \"Selection End Document\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.endLineAction), ", "-                                            \"End Line\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionEndLineAction), ", "-                                            \"Selection End Line\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.endParagraphAction), ", "-                                            \"End Paragraph\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionEndParagraphAction), ", "-                                            \"Selection End Paragraph\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.nextWordAction), ", "-                                            \"Next Word\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionNextWordAction), ", "-                                            \"Selection Next Word\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.forwardAction), ", "-                                            \"Forward\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionForwardAction), ", "-                                            \"Selection Forward\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.pageDownAction), ", "-                                            \"Page Down\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.pageUpAction), ", "-                                            \"Page Up\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.upAction), ", "-                                            \"Up\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionUpAction), ", "-                                            \"Selection Up\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.deletePrevCharAction), ", "-                                            \"Delete Previous Character\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.deleteNextCharAction), ", "-                                            \"Delete Next Character\");", "-      _keyBindingManager.putActionToNameMap(_cutLineAction, ", "-                                            \"Cut Line\");", "-      ", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_NEW_FILE), _newAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_OPEN_FILE), _openAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_SAVE_FILE), _saveAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_SAVE_FILE_AS), _saveAsAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_CLOSE_FILE), _closeAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_PRINT_PREVIEW), _printPreviewAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_PRINT), _printAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_QUIT), _quitAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_UNDO), _undoAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_REDO), _redoAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_CUT), _cutAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_COPY), _copyAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_PASTE), _pasteAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_SELECT_ALL), _selectAllAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_FIND_REPLACE), _findReplaceAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_GOTO_LINE), _gotoLineAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_PREVIOUS_DOCUMENT), ", "-                 _switchToPrevAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_NEXT_DOCUMENT), ", "-                 _switchToNextAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_COMPILE), _compileAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_ABORT_INTERACTION), ", "-                 _abortInteractionAction);      ", "-      ", "-      _keyBindingManager.addShiftAction(KEY_BACKWARD, ", "-                                        DefaultEditorKit.backwardAction, ", "-                                        DefaultEditorKit.selectionBackwardAction);", "+      _keyBindingManager.put(KEY_BACKWARD, _actionMap.get(DefaultEditorKit.backwardAction),null, \"Backward\");", "+      _keyBindingManager.addShiftAction(KEY_BACKWARD,", "+                                        DefaultEditorKit.selectionBackwardAction);", "+      ", "+      _keyBindingManager.put(KEY_BEGIN_DOCUMENT, _actionMap.get(DefaultEditorKit.beginAction), null, \"Begin Document\");", "-                                        DefaultEditorKit.beginAction, ", "+      _keyBindingManager.put(KEY_BEGIN_LINE, _actionMap.get(DefaultEditorKit.beginLineAction), null, \"Begin Line\");", "-                                        DefaultEditorKit.beginLineAction, ", "-          ", "+      ", "+      _keyBindingManager.put(KEY_BEGIN_PARAGRAPH, ", "+                             _actionMap.get(DefaultEditorKit.beginParagraphAction), null, \"Begin Paragraph\");", "-                                        DefaultEditorKit.beginParagraphAction, ", "+      _keyBindingManager.put(KEY_PREVIOUS_WORD, ", "+                             _actionMap.get(DefaultEditorKit.previousWordAction), null, \"Previous Word\");", "-                                        DefaultEditorKit.previousWordAction, ", "-       ", "+      ", "+      ", "+      _keyBindingManager.put(KEY_DOWN, ", "+                             _actionMap.get(DefaultEditorKit.downAction), null, \"Down\");", "-                                        DefaultEditorKit.downAction, ", "+      _keyBindingManager.put(KEY_END_DOCUMENT, ", "+                             _actionMap.get(DefaultEditorKit.endAction), null, \"End Document\");", "-                                        DefaultEditorKit.endAction, ", "-       ", "+      ", "+      _keyBindingManager.put(KEY_END_LINE, ", "+                             _actionMap.get(DefaultEditorKit.endLineAction), null, \"End Line\");", "-                                        DefaultEditorKit.endLineAction, ", "+      _keyBindingManager.put(KEY_END_PARAGRAPH, ", "+                             _actionMap.get(DefaultEditorKit.endParagraphAction), null, \"End Paragraph\");", "-                                        DefaultEditorKit.endParagraphAction, ", "-       ", "+      ", "+      _keyBindingManager.put(KEY_NEXT_WORD, ", "+                             _actionMap.get(DefaultEditorKit.nextWordAction), null, \"Next Word\");", "-                                        DefaultEditorKit.nextWordAction, ", "-      _keyBindingManager.addShiftAction(KEY_FORWARD, ", "-                                        DefaultEditorKit.forwardAction, ", "+      _keyBindingManager.put(KEY_FORWARD, ", "+                             _actionMap.get(DefaultEditorKit.forwardAction), null, \"Forward\");", "+      _keyBindingManager.addShiftAction(KEY_FORWARD,", "+      _keyBindingManager.put(KEY_UP, ", "+                             _actionMap.get(DefaultEditorKit.upAction), null, \"Up\");", "-                                        DefaultEditorKit.upAction, ", "-                                        DefaultEditorKit.selectionUpAction);     ", "+                                        DefaultEditorKit.selectionUpAction); ", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_PAGE_DOWN), ", "-                                   _actionMap.get(DefaultEditorKit.pageDownAction));", "-      _keyBindingManager.addListener(KEY_PAGE_DOWN, null);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_PAGE_UP), ", "-                                   _actionMap.get(DefaultEditorKit.pageUpAction));", "-      _keyBindingManager.addListener(KEY_PAGE_UP, null);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_CUT_LINE), ", "-                                   _cutLineAction);", "-      _keyBindingManager.addListener(KEY_CUT_LINE, null);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_DELETE_PREVIOUS), ", "-                                   _actionMap.get(DefaultEditorKit.deletePrevCharAction));", "-      _keyBindingManager.addListener(KEY_DELETE_PREVIOUS, null);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_DELETE_NEXT), ", "-                                   _actionMap.get(DefaultEditorKit.deleteNextCharAction));", "-      _keyBindingManager.addListener(KEY_DELETE_NEXT, null);", "-      _keyBindingManager.mapInsert(KeyStroke.getKeyStroke(KeyEvent.VK_F3,0),", "-                                   new AbstractAction(\"FindReplace\") {", "+      _keyBindingManager.put(KEY_PAGE_DOWN, ", "+                             _actionMap.get(DefaultEditorKit.pageDownAction), null, \"Page Down\");", "+      _keyBindingManager.put(KEY_PAGE_UP, ", "+                             _actionMap.get(DefaultEditorKit.pageUpAction), null, \"Page Up\");", "+      _keyBindingManager.put(KEY_CUT_LINE, ", "+                             _cutLineAction, null, \"Cut Line\");", "+      _keyBindingManager.put(KEY_DELETE_PREVIOUS, ", "+                             _actionMap.get(DefaultEditorKit.deletePrevCharAction), null, \"Delete Previous\");", "+      _keyBindingManager.put(KEY_DELETE_NEXT, ", "+                             _actionMap.get(DefaultEditorKit.deleteNextCharAction), null, \"Delete Next\");", "+      _keyBindingManager.put(KEY_FIND_NEXT,", "+                             new AbstractAction(\"FindNext\") {", "-      });", "-                                  ", "+      }, null, \"Find Next\");", "+      "]}], "num": 21088}