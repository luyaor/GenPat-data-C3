{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bd44f443130d2bcfc8c6b916d4c556f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e7690e526fc9047f7713d669b6c296", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void evaluateExpression(SEList e, ProjectFileIRImpl pfir, FileListVisitor flv)", "signatureAfterChange": "   private void evaluateExpression(SEList e, ProjectFileIR pfir)", "diff": ["-  private void evaluateExpression(SEList e, ProjectFileIRImpl pfir, FileListVisitor flv) {", "+  private void evaluateExpression(SEList e, ProjectFileIR pfir) {", "-      List<DocFile> fList = exp.getRest().accept(flv);", "-      pfir.setSourceFiles(fList);", "+      List<DocFile> dfList = exp.getRest().accept(docFileListVisitor);", "+      pfir.setSourceFiles(dfList);", "+    }", "+    if (name.compareToIgnoreCase(\"proj-root\") == 0) {", "+      List<File> fList = exp.getRest().accept(fileListVisitor);", "+      if (fList.size() > 1) throw new PrivateProjectException(\"Cannot have multiple source roots\");", "+      else if (fList.size() == 0) pfir.setProjectRoot(null);", "+      pfir.setProjectRoot(fList.get(0));", "-      List<DocFile> fList = exp.getRest().accept(flv);", "-      pfir.setAuxiliaryFiles(fList);", "+      List<DocFile> dfList = exp.getRest().accept(docFileListVisitor);", "+      pfir.setAuxiliaryFiles(dfList);", "-      List<DocFile> fList = exp.getRest().accept(flv);", "+      List<File> fList = exp.getRest().accept(fileListVisitor);", "+//      System.err.println(\"BuildDir fList = \" + fList);", "-      List<DocFile> fList = exp.getRest().accept(flv);", "+      List<File> fList = exp.getRest().accept(fileListVisitor);", "-      List<DocFile> fList = exp.getRest().accept(flv);", "+      List<File> fList = exp.getRest().accept(fileListVisitor);", "-      List<DocFile> fList = exp.getRest().accept(flv);", "-      if (fList.size() > 1) {", "-        throw new PrivateProjectException(\"Cannot have multiple main classes\");", "-      }", "-      else if (fList.size() == 0) {", "-        pfir.setMainClass(null);", "-      }", "-      else {", "-        pfir.setMainClass(fList.get(0));", "-      }", "+      List<File> fList = exp.getRest().accept(fileListVisitor);", "+      if (fList.size() > 1) throw new PrivateProjectException(\"Cannot have multiple main classes\");", "+      else if (fList.size() == 0) pfir.setMainClass(null);", "+      else pfir.setMainClass(fList.get(0));", "-      List<DocFile> fList = exp.getRest().accept(flv);", "-      if (fList.size() > 1) {", "-        throw new PrivateProjectException(\"Cannot have multiple project roots\");", "-      }", "-      else if (fList.size() == 0) {", "-        pfir.setProjectRoot(null);", "-      }", "-      else {", "-        pfir.setProjectRoot(fList.get(0));", "-      }", "+      List<File> fList = exp.getRest().accept(fileListVisitor);", "+      if (fList.size() > 1) throw new PrivateProjectException(\"Cannot have multiple project roots\");", "+      else if (fList.size() == 0) pfir.setProjectRoot(null);", "+      else pfir.setProjectRoot(fList.get(0));", "-      List<DocFile> fList = exp.getRest().accept(flv);", "-      if (fList.size() > 1) {", "-        throw new PrivateProjectException(\"Cannot have more than one \\\"create jar\\\" file\");", "-      }", "-      else if (fList.size() == 0) {", "-        pfir.setCreateJarFile(null);", "-      }", "-      else {", "-        pfir.setCreateJarFile(fList.get(0));", "-      }", "+      List<File> fList = exp.getRest().accept(fileListVisitor);", "+      if (fList.size() > 1) throw new PrivateProjectException(\"Cannot have more than one \\\"create jar\\\" file\");", "+      else if (fList.size() == 0) pfir.setCreateJarFile(null);", "+      else pfir.setCreateJarFile(fList.get(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df8af8f1d8118bfcf7f597c1650daa1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void evaluateExpression(SEList e, ProjectFileIRImpl pfir, FileListVisitor flv)", "signatureAfterChange": "   private void evaluateExpression(SEList e, ProjectFileIRImpl pfir, FileListVisitor flv)", "diff": ["-      if (fList.size() > 1) {", "-        throw new PrivateProjectException(\"Cannot have multiple build directories\");", "-      }", "-      else if (fList.size() == 0) {", "-        pfir.setBuildDirectory(null);", "-      }", "-      else {", "-        pfir.setBuildDirectory(fList.get(0));", "-      }", "+      if (fList.size() > 1) throw new PrivateProjectException(\"Cannot have multiple build directories\");", "+      else if (fList.size() == 0) pfir.setBuildDirectory(null);", "+      else pfir.setBuildDirectory(fList.get(0));", "+    }", "+    else if (name.compareToIgnoreCase(\"work-dir\") == 0) {", "+      List<DocFile> fList = exp.getRest().accept(flv);", "+      if (fList.size() > 1) throw new PrivateProjectException(\"Cannot have multiple working directories\");", "+      else if (fList.size() == 0) pfir.setWorkingDirectory(null);", "+      else pfir.setWorkingDirectory(fList.get(0));", "-      pfir.setClasspaths(fList);", "+      pfir.setClassPaths(fList);", "-  }", "+  } "]}], "num": 16310}