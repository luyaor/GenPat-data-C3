{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5fc9e2aa7c15490ce56ec8c4fa71eaf3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73268013758087cfd4244cdf6bd909b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 391, "methodNumberAfterChange": 391, "signatureBeforeChange": "\r \r   public void forVoidReturnStatement(VoidReturnStatement that)", "signatureAfterChange": "    public void forVoidReturnStatement(VoidReturnStatement that)", "diff": ["-\r", "-  public void forVoidReturnStatement(VoidReturnStatement that) {\r", "-    forVoidReturnStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forVoidReturnStatementOnly(that);\r", "-  }\r", "+", "+  public void forVoidReturnStatement(VoidReturnStatement that) {", "+    forVoidReturnStatementDoFirst(that);", "+    if (prune(that)) return;", "+    forVoidReturnStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8558a6457f62393c638eb1ab1c5eee47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 396, "methodNumberAfterChange": 396, "signatureBeforeChange": "\r \r   public void forNormalTryCatchStatement(NormalTryCatchStatement that)", "signatureAfterChange": "    public void forNormalTryCatchStatement(NormalTryCatchStatement that)", "diff": ["-\r", "-  public void forNormalTryCatchStatement(NormalTryCatchStatement that) {\r", "-    forNormalTryCatchStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getTryBlock().visit(this);\r", "-    for (int i = 0; i < that.getCatchBlocks().length; i++) that.getCatchBlocks()[i].visit(this);\r", "-    forNormalTryCatchStatementOnly(that);\r", "-  }\r", "+", "+  public void forNormalTryCatchStatement(NormalTryCatchStatement that) {", "+    forNormalTryCatchStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getTryBlock().visit(this);", "+    for (int i = 0; i < that.getCatchBlocks().length; i++) that.getCatchBlocks()[i].visit(this);", "+    forNormalTryCatchStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc2b58947b5e66003842a48895b0bf2a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 395, "methodNumberAfterChange": 395, "signatureBeforeChange": "\r \r   public void forTryCatchFinallyStatement(TryCatchFinallyStatement that)", "signatureAfterChange": "    public void forTryCatchFinallyStatement(TryCatchFinallyStatement that)", "diff": ["-\r", "-  public void forTryCatchFinallyStatement(TryCatchFinallyStatement that) {\r", "-    forTryCatchFinallyStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getTryBlock().visit(this);\r", "-    for (int i = 0; i < that.getCatchBlocks().length; i++) that.getCatchBlocks()[i].visit(this);\r", "-    that.getFinallyBlock().visit(this);\r", "-    forTryCatchFinallyStatementOnly(that);\r", "-  }\r", "+", "+  public void forTryCatchFinallyStatement(TryCatchFinallyStatement that) {", "+    forTryCatchFinallyStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getTryBlock().visit(this);", "+    for (int i = 0; i < that.getCatchBlocks().length; i++) that.getCatchBlocks()[i].visit(this);", "+    that.getFinallyBlock().visit(this);", "+    forTryCatchFinallyStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5739b0c8cfc3af37d5f9709702f1458", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 393, "methodNumberAfterChange": 393, "signatureBeforeChange": "\r \r   public void forThrowStatement(ThrowStatement that)", "signatureAfterChange": "    public void forThrowStatement(ThrowStatement that)", "diff": ["-\r", "-  public void forThrowStatement(ThrowStatement that) {\r", "-    forThrowStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getThrown().visit(this);\r", "-    forThrowStatementOnly(that);\r", "-  }\r", "+", "+  public void forThrowStatement(ThrowStatement that) {", "+    forThrowStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getThrown().visit(this);", "+    forThrowStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e43edaebfa27ae4068e5f282575375b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 392, "methodNumberAfterChange": 392, "signatureBeforeChange": "\r \r   public void forValueReturnStatement(ValueReturnStatement that)", "signatureAfterChange": "    public void forValueReturnStatement(ValueReturnStatement that)", "diff": ["-\r", "-  public void forValueReturnStatement(ValueReturnStatement that) {\r", "-    forValueReturnStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getValue().visit(this);\r", "-    forValueReturnStatementOnly(that);\r", "-  }\r", "+", "+  public void forValueReturnStatement(ValueReturnStatement that) {", "+    forValueReturnStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getValue().visit(this);", "+    forValueReturnStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3dfbd2a9c9691a5e7b986f100516a59", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 394, "methodNumberAfterChange": 394, "signatureBeforeChange": "\r \r   public void forSynchronizedStatement(SynchronizedStatement that)", "signatureAfterChange": "    public void forSynchronizedStatement(SynchronizedStatement that)", "diff": ["-\r", "-  public void forSynchronizedStatement(SynchronizedStatement that) {\r", "-    forSynchronizedStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getLockExpr().visit(this);\r", "-    that.getBlock().visit(this);\r", "-    forSynchronizedStatementOnly(that);\r", "-  }\r", "+", "+  public void forSynchronizedStatement(SynchronizedStatement that) {", "+    forSynchronizedStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getLockExpr().visit(this);", "+    that.getBlock().visit(this);", "+    forSynchronizedStatementOnly(that);", "+  }"]}], "num": 21709}