{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39c85eaab7cb67e3d7ffd423e4de6105", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f39b276a5e680483e2250929dfd416b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DocumentDebugAction.java", "commitBeforeChange": "03dd354632fbfc12bf279640160bfd934404dc39", "commitAfterChange": "2714f88d04f312c23b21ec6a440193d44b7121ba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DocumentDebugAction (DebugManager manager, OpenDefinitionsDocument doc)      throws DebugException, IllegalStateException", "signatureAfterChange": "   public DocumentDebugAction (DebugManager manager, OpenDefinitionsDocument doc)      throws DebugException", "diff": ["-    throws DebugException, IllegalStateException {", "+    throws DebugException {", "-    _file = doc.getFile();", "+    try {", "+      _file = doc.getFile();", "+    }", "+    catch (FileMovedException fme) {", "+      throw new DebugException(\"This document's file no longer exists: \" +", "+                               fme.getMessage());", "+    }", "+    catch (IllegalStateException ise) {", "+      throw new DebugException(\"This document has no file: \" +", "+                               ise.getMessage());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43ffa549ac39445383db809eeabb439b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeClass.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public TreeClass(String fullName, DJClass declaring, Node ast, final TreeClassLoader loader,                    Options opt)", "signatureAfterChange": "   public TreeClass(String fullName, DJClass declaring, Node ast, final TreeClassLoader loader,                    Options opt)", "diff": ["-      public Class<?> value() { return loader.loadTree(TreeClass.this); }", "+      public Class<?> value() {", "+        try { return loader.loadClass(_fullName); }", "+        catch (ClassNotFoundException e) { throw new RuntimeException(\"Error loading class\", e); }", "+        // LinkageError indicates there's something wrong with the compiled class", "+        catch (LinkageError e) { throw new RuntimeException(\"Error loading class\", e); }", "+      }", "+    loader.registerTree(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea63b290b1440fd65547ea2fddef19a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "310f2e2e5bd03b1be3d582b8bb080b976b35e862", "commitAfterChange": "5ac038fd2393232341f24ed3abaede1deb4e977a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public List<String> findTestClasses(final List<String> classNames, final List<File> files)", "signatureAfterChange": "   public List<String> findTestClasses(final List<String> classNames, final List<File> files)", "diff": ["-    for (int i = 0; i < classNames.size(); i++) {", "-      String cName = classNames.get(i);", "-      // new ScrollableDialog(null, \"Class to be checked in JUnitManager: \" + cName, \"\", \"\").show();", "-      if (_isTestCase(cName)) {", "-        // new ScrollableDialog(null, \"Test class \" + cName + \" found!\", \"\", \"\").show();", "-        _testClassNames.add(cName);", "-        _testFiles.add(files.get(i));", "-        _suite.addTest(_testRunner.getTest(cName));", "+    int i = 0;", "+    try {", "+      for (i = 0; i < classNames.size(); i++) {", "+        String cName = classNames.get(i);", "+        // new ScrollableDialog(null, \"Class to be checked in JUnitManager: \" + cName, \"\", \"\").show();", "+        try {", "+          if (_isTestCase(cName)) {", "+            // new ScrollableDialog(null, \"Test class \" + cName + \" found!\", \"\", \"\").show();", "+            _testClassNames.add(cName);", "+            _testFiles.add(files.get(i));", "+            _suite.addTest(_testRunner.getTest(cName));", "+          }", "+        }", "+        catch(LinkageError e) { ", "+          _jmc.classFileError(new ClassFileError(files.get(i).getCanonicalPath(), e));", "+        }", "-              ", "+    catch(IOException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f67c4d30ba58dc017191317e05d46625", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/SimpleInteractionsModel.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public String getVariableToString(String var)", "signatureAfterChange": "   public String getVariableToString(String var)", "diff": ["-    Object value = _interpreter.getVariable(var);", "-    return value.toString();", "+    try {", "+      Option<Object> value = _interpreter.interpret(var);", "+      try { return TextUtil.toString(Option.unwrap(value, \"\")); }", "+      catch (Throwable t) { throw new EvaluatorException(t); }", "+    }", "+    catch (InterpreterException e) { return \"\"; }"]}], "num": 31028}