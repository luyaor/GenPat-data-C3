{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aecf5302419ec2b83907c660a14ee373", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bf0fe7b001180b87c899488b7abe1cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 206, "methodNumberAfterChange": 232, "signatureBeforeChange": "     public LambdaValue(T arg)", "signatureAfterChange": "   public static <T, R> SizedIterable<R> diagonalCrossFold(Iterable<? extends Iterable<? extends T>> iters, R base,                                                           Lambda2<? super R, ? super T, ? extends R> combiner)", "diff": ["+   */", "+  public static <T, R> SizedIterable<R> diagonalCrossFold(Iterable<? extends Iterable<? extends T>> iters, R base,", "+                                                          Lambda2<? super R, ? super T, ? extends R> combiner) {", "+    SizedIterable<R> result = singleton(base);", "+    for (Iterable<? extends T> iter : iters) {", "+      result = new DiagonalCartesianIterable<R, T, R>(result, iter, combiner);", "+    }", "+    return result;", "+  }", "-    private final T _arg;", "-    public LambdaValue(T arg) { _arg = arg; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f331f14aa8e095704a69a4afe2ed1583", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 231, "signatureBeforeChange": "   public static <T, R> Iterable<R> crossFold(Iterable<? extends Iterable<? extends T>> iters, R base,                                              Lambda2<? super R, ? super T, ? extends R> combiner)", "signatureAfterChange": "   public static <T, R> SizedIterable<R> crossFold(Iterable<? extends Iterable<? extends T>> iters, R base,                                                   Lambda2<? super R, ? super T, ? extends R> combiner)", "diff": ["-  public static <T, R> Iterable<R> crossFold(Iterable<? extends Iterable<? extends T>> iters, R base,", "-                                             Lambda2<? super R, ? super T, ? extends R> combiner) {", "-    Iterable<R> result = singleton(base);", "+   */", "+  public static <T, R> SizedIterable<R> crossFold(Iterable<? extends Iterable<? extends T>> iters, R base,", "+                                                  Lambda2<? super R, ? super T, ? extends R> combiner) {", "+    SizedIterable<R> result = singleton(base);"]}], "num": 19723}