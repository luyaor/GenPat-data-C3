{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2661813cd28843f3546cef6080ee7983", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c10fbafd4e8be061d005a30ae021bd7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "commitAfterChange": "cf5f5e0733e09b37dba594527997b94724b4e6bf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected void abortActionPerformed(ActionEvent e)", "signatureAfterChange": "\r   protected void abortActionPerformed(ActionEvent e)", "diff": ["-    * @param e action event performed by user, or null if aborted due to problem */", "-  protected void abortActionPerformed(ActionEvent e) {", "-    if (_is!=null) {", "-      try {", "-        _is.close();", "-      }", "-      catch(IOException ioe) { /* ignore, just stop polling */ }", "-      _is = null;", "-      updateButtons();", "-    }", "-    if (_erris!=null) {", "-      try {", "-        _erris.close();", "-      }", "-      catch(IOException ioe) { /* ignore, just stop polling */ }", "-      _erris = null;", "-      updateButtons();", "-    }", "-    if (_p!=null) {", "-      _p.destroy();", "-      _p = null;", "-    }", "-    updateText();", "-  }", "+    * @param e action event performed by user, or null if aborted due to problem */\r", "+  protected void abortActionPerformed(ActionEvent e) {    \r", "+    _abortButton.setEnabled(false);\r", "+    _updateNowButton.setEnabled(false);\r", "+    _runAgainButton.setEnabled(false);\r", "+    // spin this off in a separate thread so the event thread is free\r", "+    new Thread(new Runnable() {\r", "+      public void run() {\r", "+        if (_is!=null) {\r", "+          try {\r", "+            _is.close();\r", "+          }\r", "+          catch(IOException ioe) { /* ignore, just stop polling */ }\r", "+          _is = null;\r", "+          Utilities.invokeLater(new Runnable() {\r", "+            public void run() { updateButtons(); } });          \r", "+        }\r", "+        if (_erris!=null) {\r", "+          try {\r", "+            _erris.close();\r", "+          }\r", "+          catch(IOException ioe) { /* ignore, just stop polling */ }\r", "+          _erris = null;\r", "+          Utilities.invokeLater(new Runnable() {\r", "+            public void run() { updateButtons(); } });\r", "+        }\r", "+        if (_p!=null) {\r", "+          _p.destroy();\r", "+          _p = null;\r", "+        }\r", "+        Utilities.invokeLater(new Runnable() {\r", "+          public void run() { updateText(); updateButtons(); } });\r", "+        _abortMonitor.set();\r", "+      }\r", "+    }).start();\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f49bb2c1793716cc1eb66a44b7b7768", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaRoot.java", "commitBeforeChange": "34ce8483136d91f9eff46f1971dc8a612f363868", "commitAfterChange": "cfd4689ec89c3908ea0306a11510c85ea5436de0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          private static void _openCommandLineFiles(MainFrame mf, String[] filesToOpen, int len)", "signatureAfterChange": "          private static void _openCommandLineFiles(final MainFrame mf, String[] filesToOpen, int len, boolean jump)", "diff": ["-  private static void _openCommandLineFiles(MainFrame mf, String[] filesToOpen, int len) {", "+  private static void _openCommandLineFiles(final MainFrame mf, String[] filesToOpen, int len, boolean jump) {", "+    anyLineNumbersSpecified = false;", "+      ", "+      // check if the file contains a line number", "+      // the line number can be specified at the end of the file name,", "+      // separated by File.pathSeparator", "+      int lineNo = -1;", "+      int pathSepIndex = currFileName.indexOf(File.pathSeparatorChar);", "+      if (pathSepIndex>=0) {", "+        try {", "+          lineNo = new Integer(currFileName.substring(pathSepIndex+1));", "+          anyLineNumbersSpecified = true;", "+        }", "+        catch(NumberFormatException nfe) {", "+          lineNo = -1;", "+        }", "+        currFileName = currFileName.substring(0,pathSepIndex);", "+      }", "+      ", "-        if (isProjectFile) mf.openProject(command);", "-        else mf.getModel().openFile(command);", "+        if (isProjectFile) {", "+          mf.openProject(command);", "+        }", "+        else {", "+          if (jump && (lineNo>=0)) {", "+            // if a line number has been specified, open the file using MainFrame.open,", "+            // then use invokeLater to run MainFrame._jumpToLine.", "+            // note: this can only be done after MainFrame.start() has been called.", "+            mf.open(command);", "+            final int l = lineNo;", "+            edu.rice.cs.util.swing.Utilities.invokeLater(new Runnable() { ", "+              public void run() { mf._jumpToLine(l); }", "+            });", "+          }", "+          else {", "+            // without line number, use the model's openFile.", "+            mf.getModel().openFile(command);", "+          }", "+        }", "-      catch (Exception ex) { throw new UnexpectedException(ex); }  ", "+      catch (Exception ex) { throw new UnexpectedException(ex); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "859184fadb7ace5e314a23677e54de8e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/RemoteControlServer.java", "commitBeforeChange": "ac02f569f5916c295bec9f11458dcf6db5964244", "commitAfterChange": "91734830bfc37ccb85bb6b7693b74ec1fa3e1c29", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     public void run()", "diff": ["-                FileOpenSelector openSelector = new FileOpenSelector() {", "-                  public File[] getFiles() throws OperationCanceledException {", "-                    return new File[] { f };", "+                  String currFileName = f.getName();", "+                  if (currFileName.endsWith(OptionConstants.EXTPROCESS_FILE_EXTENSION)) {", "+                    MainFrame.openExtProcessFile(f);", "-                };", "-                if (_frame!=null) { ", "-                  _frame.open(openSelector);", "-                  if (lineNo>=0) {", "-                    final int l = lineNo;", "-                    edu.rice.cs.util.swing.Utilities.invokeLater(new Runnable() { ", "-                      public void run() { _frame._jumpToLine(l); }", "-                    });", "+                  else if (currFileName.endsWith(OptionConstants.EXTPROCESS_JAR_FILE_EXTENSION)) {", "+                    MainFrame.openExtProcessJarFile(f);", "-                }", "+                  else {", "+                    FileOpenSelector openSelector = new FileOpenSelector() {", "+                      public File[] getFiles() throws OperationCanceledException {", "+                        return new File[] { f };", "+                      }", "+                    };", "+                    if (_frame!=null) { ", "+                      _frame.open(openSelector);", "+                      if (lineNo>=0) {", "+                        final int l = lineNo;", "+                        edu.rice.cs.util.swing.Utilities.invokeLater(new Runnable() { ", "+                          public void run() { _frame._jumpToLine(l); }", "+                        });", "+                      }", "+                    }", "+                  }", "-              else {", "-                dString = dString + \" Cannot open file!\";", "-              }", "+            }", "+            else {", "+              dString = dString + \" Cannot open file!\";"]}], "num": 6334}