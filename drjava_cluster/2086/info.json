{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31b77efa8fde151638062ff51db2b4ec", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4be5d09f34a003663a9b1aa5e611302", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "591f8aac4f79eab75475a3d9dd862c3b019f02a1", "commitAfterChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   private FindResult _findNextInOtherDocs(final OpenDefinitionsDocument startDoc, int start, int len)", "signatureAfterChange": "   private FindResult _findNextInOtherDocs(final OpenDefinitionsDocument startDoc, int start, int len)", "diff": ["-        _doc.acquireReadLock();", "-        try { fr = _findNextInDocSegment(_doc, 0, _doc.getLength(), false, allWrapped); } ", "-        finally { _doc.releaseReadLock(); }", "+//        _doc.acquireReadLock();", "+//        try { ", "+        fr = _findNextInDocSegment(_doc, 0, _doc.getLength(), false, allWrapped); ", "+//        } ", "+//        finally { _doc.releaseReadLock(); }", "-    startDoc.acquireReadLock();", "-    try { return _findWrapped(startDoc, start, len, true); }  // last arg is true because searching all docs has wrapped", "-    finally { startDoc.releaseReadLock(); } ", "+//    startDoc.acquireReadLock();", "+//    try { ", "+    return _findWrapped(startDoc, start, len, true); ", "+//    }  // last arg is true because searching all docs has wrapped", "+//    finally { startDoc.releaseReadLock(); } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8cb66eb05e748f5d6bb9405a60e7976", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "14164b6a15fd606e897810fd89f2e7edec0280c4", "commitAfterChange": "52c187d5d51895f0b58a56680e35117f80ff45ef", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 33, "signatureBeforeChange": "   private FindResult _findNextInOtherDocs(final OpenDefinitionsDocument startDoc, int start, int len)", "signatureAfterChange": "   private FindResult _findNextInOtherDocs(final OpenDefinitionsDocument startDoc, int start, int len)", "diff": ["-      FindResult fr = _findNextInDocSegment(_doc, 0, _doc.getLength(), false, allWrapped);", "+", "+      // find next match in _doc", "+      _doc.readLock();", "+      FindResult fr;", "+      try { fr = _findNextInDocSegment(_doc, 0, _doc.getLength(), false, allWrapped); } ", "+      finally { _doc.readUnlock(); }", "+      ", "-    // no valid match found", "-    return _findWrapped(startDoc, start, len, true);   // last arg is true because searching all docs has wrapped", "+    // No valid match found; perform wrapped search.  _findWrapped assumes readLock is held.", "+    startDoc.readLock();", "+    try { return _findWrapped(startDoc, start, len, true); }  // last arg is true because searching all docs has wrapped", "+    finally { startDoc.readUnlock(); } "]}], "num": 2086}