{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ce30a77d2d0e342e01ed87d9186e588", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0224be78a5868fd133cda0abe25f765f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/UnaryOpProperty.java", "commitBeforeChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "commitAfterChange": "f938008597ce54d16e4a865d30f8ef062ea55d2f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void update()", "signatureAfterChange": "\r   public void update(PropertyMaps pm)", "diff": ["-  /** Update the property so the value is current. */", "-  public void update() {", "-    P op;", "-    if (_attributes.get(_op1Name)==null) {", "-      _value = \"(\"+_name+\" Error...)\";", "-      return;", "-    }", "-    else {", "-      try {", "-        op = _parse.apply(_attributes.get(_op1Name));", "-      }", "-      catch(Exception e) {", "-        _value = \"(\"+_name+\" Error...)\";", "-        return;", "-      }", "-    }", "-    _value = _format.apply(_op.apply(op));", "-  }", "+    * @param pm PropertyMaps used for substitution when replacing variables */\r", "+  public void update(PropertyMaps pm) {\r", "+    P op;\r", "+    if (_attributes.get(_op1Name)==null) {\r", "+      _value = \"(\"+_name+\" Error...)\";\r", "+      return;\r", "+    }\r", "+    else {\r", "+      try {\r", "+        op = _parse.apply(_attributes.get(_op1Name));\r", "+      }\r", "+      catch(Exception e) {\r", "+        _value = \"(\"+_name+\" Error...)\";\r", "+        return;\r", "+      }\r", "+    }\r", "+    _value = _format.apply(_op.apply(op));\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce5b6ad93a7a7c42f708afa68e508f39", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/UnaryOpProperty.java", "commitBeforeChange": "1a21d93c6026fc975d9f1a1bda2fbd55942a0154", "commitAfterChange": "7cbabe0b7b5f77b58eac69afdca15c16ef2f6a9b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r   public void update(PropertyMaps pm)", "signatureAfterChange": "   public void update(PropertyMaps pm)", "diff": ["-    * @param pm PropertyMaps used for substitution when replacing variables */\r", "-  public void update(PropertyMaps pm) {\r", "-    P op;\r", "-    if (_attributes.get(_op1Name)==null) {\r", "-      _value = \"(\"+_name+\" Error...)\";\r", "-      return;\r", "-    }\r", "-    else {\r", "-      try {\r", "-        op = _parse.apply(_attributes.get(_op1Name));\r", "-      }\r", "-      catch(Exception e) {\r", "-        _value = \"(\"+_name+\" Error...)\";\r", "-        return;\r", "-      }\r", "-    }\r", "-    _value = _format.apply(_op.apply(op));\r", "-  }\r", "+    * @param pm PropertyMaps used for substitution when replacing variables */", "+  public void update(PropertyMaps pm) {", "+    P op;", "+    if (_attributes.get(_op1Name)==null) {", "+      _value = \"(\"+_name+\" Error...)\";", "+      return;", "+    }", "+    else {", "+      try {", "+        op = _parse.value(_attributes.get(_op1Name));", "+      }", "+      catch(Exception e) {", "+        _value = \"(\"+_name+\" Error...)\";", "+        return;", "+      }", "+    }", "+    _value = _format.value(_op.value(op));", "+  }"]}], "num": 5779}