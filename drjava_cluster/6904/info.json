{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e480563014f9f51251b224918370c18e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22e97809497eef161015346247cc89be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "      public void testPreIncrementExpression() throws ParseException", "signatureAfterChange": "      public void testPreIncrementExpression() throws ParseException", "diff": ["-    List<IdentifierToken> idnt  = new LinkedList<IdentifierToken>();", "-    idnt.add(new Identifier(\"x\"));", "-", "-    expectedAST.add(new PreIncrement(new QualifiedName(idnt)));", "+    expectedAST.add(new PreIncrement(new AmbiguousName(\"x\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39400c203c01351ee4eb8bc8c3de65f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "      public void testArrayAccess() throws ParseException", "signatureAfterChange": "      public void testArrayAccess() throws ParseException", "diff": ["-    List<IdentifierToken> ident = new LinkedList<IdentifierToken>();", "-    ident.add(new Identifier(\"v\"));", "-    expectedAST.add(new ArrayAccess(new QualifiedName(ident), new IntegerLiteral(\"5\")));", "+    expectedAST.add(new ArrayAccess(new AmbiguousName(\"v\"), new IntegerLiteral(\"5\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39eeb0ce9321be7e1981c613bcfedfdb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "      public void testInnerInstanceAllocationExpression() throws ParseException", "signatureAfterChange": "      public void testInnerInstanceAllocationExpression() throws ParseException", "diff": ["-    List<IdentifierToken> idnt  = new LinkedList<IdentifierToken>();", "-    idnt.add(new Identifier(\"list\"));", "-    ", "-    expectedAST.add(new InnerAllocation(new QualifiedName(idnt), new ReferenceTypeName(\"Iterator\"), args)); ", "+    expectedAST.add(new InnerAllocation(new AmbiguousName(\"list\"), \"Iterator\", null, args)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83c04e2d561a12d2e48dd80ff2ea033a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "      public void testPostDecrementExpression() throws ParseException", "signatureAfterChange": "      public void testPostDecrementExpression() throws ParseException", "diff": ["-    List<IdentifierToken> idnt  = new LinkedList<IdentifierToken>();", "-    idnt.add(new Identifier(\"l\"));", "-", "-    expectedAST.add(new PostDecrement(new QualifiedName(idnt)));", "+    expectedAST.add(new PostDecrement(new AmbiguousName(\"l\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88d34a66a637e5b31cbe8701971649fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "      public void testBinaryOpExpression() throws ParseException", "signatureAfterChange": "      public void testBinaryOpExpression() throws ParseException", "diff": ["-    List<IdentifierToken> idnt  = new LinkedList<IdentifierToken>();", "-    idnt.add(new Identifier(\"i\"));", "-    ", "-    expectedAST.add(new ShiftLeftExpression(new QualifiedName(idnt), new IntegerLiteral(\"5\")));", "+    expectedAST.add(new ShiftLeftExpression(new AmbiguousName(\"i\"), new IntegerLiteral(\"5\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "985975729063b77e766d3335db664490", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "      public void testNormalAssignment() throws ParseException", "signatureAfterChange": "      public void testNormalAssignment() throws ParseException", "diff": ["-    List<IdentifierToken> idnt  = new LinkedList<IdentifierToken>();", "-    idnt.add(new Identifier(\"i\"));", "-    ", "-    expectedAST.add(new SimpleAssignExpression(new QualifiedName(idnt), new IntegerLiteral(\"3\")));", "+    expectedAST.add(new SimpleAssignExpression(new AmbiguousName(\"i\"), new IntegerLiteral(\"3\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c023cf6cad0e99fb447017bd8793796", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      public void testTryStatementWithCatchBlock() throws ParseException", "signatureAfterChange": "      public void testTryStatementWithCatchBlock() throws ParseException", "diff": ["-    List<IdentifierToken> idnt  = new LinkedList<IdentifierToken>();", "-    idnt.add(new Identifier(\"ioe\"));", "-    ", "-    stmts2.add(new ThrowStatement(new QualifiedName(idnt)));", "+    stmts2.add(new ThrowStatement(new AmbiguousName(\"ioe\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a33f1af62274e86497f6e0d0451c187e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "      public void testInstanceOfExpression() throws ParseException", "signatureAfterChange": "      public void testInstanceOfExpression() throws ParseException", "diff": ["-    List<IdentifierToken> idnt  = new LinkedList<IdentifierToken>();", "-    idnt.add(new Identifier(\"v\"));", "-    ", "-    expectedAST.add(new InstanceOfExpression(new QualifiedName(idnt), new ReferenceTypeName(\"String\")));", "+    expectedAST.add(new InstanceOfExpression(new AmbiguousName(\"v\"), new ReferenceTypeName(\"String\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d05a3333adee67ffc3b594ac3e8a800b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "      public void testMemberAccess()  throws ParseException", "signatureAfterChange": "      public void testMemberAccess()  throws ParseException", "diff": ["-    List<IdentifierToken> idnt = new LinkedList<IdentifierToken>();", "-    idnt.add(new Identifier(\"r\"));", "-", "-    expectedAST.add(new ObjectFieldAccess(new QualifiedName(idnt), \"f\"));", "+    expectedAST.add(new ObjectFieldAccess(new AmbiguousName(\"r\"), \"f\"));"]}], "num": 6904}