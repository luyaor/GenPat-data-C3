{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c650326c7a83aad6e6ffb08505feae4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0275b43ab6772b3708a15f97e59f3f9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "   synchronized void scrollToSource(Location location, boolean shouldHighlight)", "signatureAfterChange": "   synchronized void scrollToSource(Location location, boolean shouldHighlight)", "diff": ["-    String filename;", "-    try { filename = getPackageDir(rt.name()) + rt.sourceName(); }", "+    String fileName;", "+    try { fileName = getPackageDir(rt.name()) + rt.sourceName(); }", "-      filename = className + \".java\";", "+      fileName = className + \".java\";", "-    File f = _model.getSourceFile(filename);", "+    File f = _model.getSourceFile(fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ccc224499e89b3d9efed43de38e92b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartStmtOfBracePlus.java", "commitBeforeChange": "3f3a8c8fcf83f21f81d279554b4af7fbd0689bb1", "commitAfterChange": "cf0d5a7c9531c826952b4ecc3c4a220f2a907a0c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    int distToBrace = info.distToBrace;", "+    int distToLineEnclosingBrace = info.distToLineEnclosingBrace;", "-    if (distToBrace == -1) {", "+    if (distToLineEnclosingBrace == -1) {", "-    int bracePos = pos - distToBrace;", "+    int bracePos = pos - distToLineEnclosingBrace;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "513500275be25f9188e2311edf9a67c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 216, "methodNumberAfterChange": 216, "signatureBeforeChange": "   public void open(FileOpenSelector openSelector)", "signatureAfterChange": "   public void open(FileOpenSelector openSelector)", "diff": ["-      String filename;", "-      try { filename = openDoc.getFile().getName(); }", "+      String fileName;", "+      try { fileName = openDoc.getFile().getName(); }", "-        filename = fme.getFile().getName();", "+        fileName = fme.getFile().getName();", "-        String message = filename + \" is already open and modified.\\n\" +", "+        String message = fileName + \" is already open and modified.\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5700c9a3cc4e6d3f86aac3d681911153", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersionTest.java", "commitBeforeChange": "c1c33f1060f9022135b7f75a813b69c4045f6b46", "commitAfterChange": "0de85ca2b785d7ad489463f9a174133a91014910", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testParseFullVersionDifferentSort()", "signatureAfterChange": "      public void testParseFullVersionDifferentSort()", "diff": ["-    FullVersion vMint = parseFullVersion(\"1.7.0_11\",\"mint\",\"mint\");", "-    assertEquals(\"7.0_11-Mint\", vMint.versionString());", "+    FullVersion vCompound = parseFullVersion(\"1.7.0_11\",\"mint\",\"mint\");", "+    assertEquals(\"7.0_11-Mint\", vCompound.versionString());", "-    sorter.add(vMint);", "+    sorter.add(vCompound);", "-    assertTrue(IterUtil.isEqual(sorter, IterUtil.make(vMint, vUnrecognized, vOpenJDK, vApple, vSun)));", "+    assertTrue(IterUtil.isEqual(sorter, IterUtil.make(vCompound, vUnrecognized, vOpenJDK, vApple, vSun)));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e106ac32cdafe10d1da39812d7d2a5c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": "   public void updateFileTitle()", "signatureAfterChange": "   public void updateFileTitle()", "diff": ["-    String filename = GlobalModelNaming.getDisplayFullPath(doc);", "-    if (!filename.equals(_fileTitle)) {", "-      _fileTitle = filename;", "-      setTitle(\"File: \" + filename);", "+    String fileName = GlobalModelNaming.getDisplayFullPath(doc);", "+    if (!fileName.equals(_fileTitle)) {", "+      _fileTitle = fileName;", "+      setTitle(\"File: \" + fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69d4020d8e7626051981e938f29f0f44", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "3f3a8c8fcf83f21f81d279554b4af7fbd0689bb1", "commitAfterChange": "cf0d5a7c9531c826952b4ecc3c4a220f2a907a0c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   int getDistToCurrentBraceNewline(int distToBraceCurrent)", "signatureAfterChange": "   int getDistToCurrentBraceNewline(int distToEnclosingBrace)", "diff": ["-  int getDistToCurrentBraceNewline(int distToBraceCurrent) {", "+  int getDistToCurrentBraceNewline(int distToEnclosingBrace) {", "-    if (distToBraceCurrent == -1 || copyCursor.atStart()) return -1; // no brace", "+    if (distToEnclosingBrace == -1 || copyCursor.atStart()) return -1; // no brace", "-    copyCursor.move(- distToBraceCurrent);", "+    copyCursor.move(- distToEnclosingBrace);", "-    else return walkcount + distToBraceCurrent;", "+    else return walkcount + distToEnclosingBrace;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79fff57e7266b3821225f097aa50eb35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testIndentInfoBlockComments () throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoBlockComments () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();", "+    BraceReduction _reduced = doc.getReduced();", "-    rm.move(-1);", "-    IndentInfo ii = rm.getIndentInformation();", "+    _reduced.move(-1);", "+    IndentInfo ii = _reduced.getIndentInformation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88cb811ff7a5a71fed0d3a510915df86", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "51e8f4cbce06d140e9a09dd38237b848b4f27d8a", "commitAfterChange": "d350dd729092f66f8ad737ae377c54d2ad394fbf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public ExecuteExternalDialog(MainFrame mf, boolean editMode, int editIndex, CompletionMonitor cm)", "signatureAfterChange": "   public ExecuteExternalDialog(MainFrame mf, boolean editMode, int editIndex, CompletionMonitor cm)", "diff": ["-      final String drJavaJarFile = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_DRJAVAJAR_FILES).get(editIndex);", "+      final String enclosingFile = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_ENCLOSING_DJAPP_FILES).get(editIndex);", "-      _commandDrJavaJarFileLine.setText(drJavaJarFile);", "+      _commandEnclosingFileLine.setText(enclosingFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93fcb0c5c6e903f928f2a3b83526a8ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartStmtOfBracePlus.java", "commitBeforeChange": "b818b8a0f0981edaebaa07c3dc3e655c941dcd48", "commitAfterChange": "e02b291d62bdaa0ea7b37dd3f2ab84515aaa6d58", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    int distToLineEnclosingBrace = info.distToLineEnclosingBrace;", "+    int distToBrace = info.distToBrace;", "-    if (distToLineEnclosingBrace == -1) {", "+    if (distToBrace == -1) {", "-    int bracePos = pos - distToLineEnclosingBrace;", "+    int bracePos = pos - distToBrace;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad491bf4f0e0930f7adbea485a831f17", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "4a90aa5d0c3f437e0c1cdaccfb311a2852121f92", "commitAfterChange": "7ddc8e7f78b66ef8e4ed5561c33d8ef661ee32e6", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   int getDistToCurrentBraceNewline(int distToBraceCurrent)", "signatureAfterChange": "   int getDistToCurrentBraceNewline(int distToEnclosingBrace)", "diff": ["-  int getDistToCurrentBraceNewline(int distToBraceCurrent) {", "+  int getDistToCurrentBraceNewline(int distToEnclosingBrace) {", "-    if (distToBraceCurrent == -1 || copyCursor.atStart()) return -1; // no brace", "+    if (distToEnclosingBrace == -1 || copyCursor.atStart()) return -1; // no brace", "-    copyCursor.move(- distToBraceCurrent);", "+    copyCursor.move(- distToEnclosingBrace);", "-    else return walkcount + distToBraceCurrent;", "+    else return walkcount + distToEnclosingBrace;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aff1f4acddb5873820346821bb768910", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartStmtOfBracePlus.java", "commitBeforeChange": "4a90aa5d0c3f437e0c1cdaccfb311a2852121f92", "commitAfterChange": "7ddc8e7f78b66ef8e4ed5561c33d8ef661ee32e6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    int distToBrace = info.distToBrace;", "+    int distToLineEnclosingBrace = info.distToLineEnclosingBrace;", "-    if (distToBrace == -1) {", "+    if (distToLineEnclosingBrace == -1) {", "-    int bracePos = pos - distToBrace;", "+    int bracePos = pos - distToLineEnclosingBrace;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8f383a15a12da50f1ad4b4c801a7835", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "51e8f4cbce06d140e9a09dd38237b848b4f27d8a", "commitAfterChange": "d350dd729092f66f8ad737ae377c54d2ad394fbf", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public static void saveToFile(int index, File f)", "signatureAfterChange": "   public static void saveToFile(int index, File f)", "diff": ["-    final Vector<String> drJavaJarFiles = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_DRJAVAJAR_FILES);", "+    final Vector<String> enclosingFiles = DrJava.getConfig().getSetting(OptionConstants.EXTERNAL_SAVED_ENCLOSING_DJAPP_FILES);", "-    xc.set(\"drjava/extprocess/drjavajarfile\", drJavaJarFiles.get(index));", "+    xc.set(\"drjava/extprocess/enlcosingfile\", enclosingFiles.get(index));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0b86d43096500b7bd68f82ca5b38e51", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": "    public OpenDefinitionsDocument getDocumentForFile(File file)     throws IOException", "signatureAfterChange": "    public OpenDefinitionsDocument getDocumentForFile(File file)     throws IOException", "diff": ["-    throws IOException", "-  {", "+    throws IOException {", "-      FileOpenSelector selector = new FileOpenSelector() {", "-//        public File getFile() {", "-//          return f;", "-//        }", "-", "-        public File[] getFiles() {", "-          return new File[] {f};", "-        }", "-      };", "-      try {", "-        doc = openFile(selector);", "-      }", "-      catch (AlreadyOpenException aoe) {", "-        doc = aoe.getOpenDocument();", "-      }", "-      catch (OperationCanceledException oce) {", "-        // Cannot happen, since we don't throw it in our selector", "-        throw new UnexpectedException(oce);", "-      }", "+      FileOpenSelector selector = ", "+        new FileOpenSelector() { public File[] getFiles() { return new File[] {f}; } };", "+      try { doc = openFile(selector); }", "+      catch (AlreadyOpenException e) { doc = e.getOpenDocument(); }", "+      catch (OperationCanceledException e) { throw new UnexpectedException(e); /* Cannot happen */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d686f8567093452fcde88d964a6972da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testIndentInfoBlockComments3 () throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoBlockComments3 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();", "+    BraceReduction _reduced = doc.getReduced();", "-    rm.move(-1);", "-    IndentInfo ii = rm.getIndentInformation();", "+    _reduced.move(-1);", "+    IndentInfo ii = _reduced.getIndentInformation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de1489849829e5495de637a43b10644a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testIndentInfoBlockComments4 () throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoBlockComments4 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();", "+    BraceReduction _reduced = doc.getReduced();", "-    rm.move(-1);", "-    IndentInfo ii = rm.getIndentInformation();", "+    _reduced.move(-1);", "+    IndentInfo ii = _reduced.getIndentInformation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfb2700aa909436a1e89337289ff8413", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryLevelTest.java", "commitBeforeChange": "c7ce54f2435a198c543bef7b35866738d8690d46", "commitAfterChange": "f9b3ce896f60a5fa583a421b5b2bb827822b30df", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testRequiresAutoboxing()", "signatureAfterChange": "   public void testRequiresAutoboxing()", "diff": ["-", "-      LanguageLevelConverter llc14 = new LanguageLevelConverter();", "-      LanguageLevelConverter llc5 = new LanguageLevelConverter();", "-      Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>> result;", "+    ", "+    Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>> result;", "+    ", "+    for (int i = 0; i <testFiles.length; i++) {", "+      LanguageLevelConverter llc4 = new LanguageLevelConverter();", "+      result = llc4.convert(new File[]{testFiles[i]}, new Options(JavaVersion.JAVA_1_4, IterUtil.<File>empty()));", "+      assertTrue(\"should be parse exceptions or visitor exceptions\", !result.getFirst().isEmpty() || !result.getSecond().isEmpty());", "+    }", "+    ", "+    LanguageLevelConverter llc = new LanguageLevelConverter();", "+    ", "+    result = llc.convert(testFiles, new Options(JavaVersion.JAVA_5, IterUtil.<File>empty()));", "+    ", "+    assertEquals(\"should be no parse exceptions\", new LinkedList<JExprParseException>(), result.getFirst());", "+    assertEquals(\"should be no visitor exceptions\", new LinkedList<Pair<String, JExpressionIF>>(), result.getSecond());", "+    ", "+    /**Now make sure that the resulting java files are correct.*/", "+    for(int i = 0; i < testFiles.length; i++) {", "+      File currFile = testFiles[i];", "+      String fileName = currFile.getAbsolutePath();", "+      fileName = fileName.substring(0, fileName.length() -4);", "+      File resultingFile = new File(fileName + \".java\");", "+      File correctFile = new File(fileName + \".expected\");", "-      for (int i = 0; i<testFiles.length; i++) {", "-        result = llc14.convert(new File[]{testFiles[i]}, new Options(JavaVersion.JAVA_1_4, IterUtil.<File>empty()));", "-        assertTrue(\"should be parse exceptions or visitor exceptions\", !result.getFirst().isEmpty() || !result.getSecond().isEmpty());", "-      }", "-      ", "-      result = llc5.convert(testFiles, new Options(JavaVersion.JAVA_5, IterUtil.<File>empty()));", "-", "-      assertEquals(\"should be no parse exceptions\", new LinkedList<JExprParseException>(), result.getFirst());", "-      assertEquals(\"should be no visitor exceptions\", new LinkedList<Pair<String, JExpressionIF>>(), result.getSecond());", "-", "-      /**Now make sure that the resulting java files are correct.*/", "-      for(int i = 0; i < testFiles.length; i++) {", "-        File currFile = testFiles[i];", "-        String fileName = currFile.getAbsolutePath();", "-        fileName = fileName.substring(0, fileName.length() -4);", "-        File resultingFile = new File(fileName + \".java\");", "-        File correctFile = new File(fileName + \".expected\");", "-        ", "-        try {", "+      try {", "-        }", "-        catch (IOException ioe) {", "-          fail(ioe.getMessage());", "-          // let JUnit throw the exception", "-        }", "-      ", "+      catch (IOException ioe) {", "+        fail(ioe.getMessage());", "+        // let JUnit throw the exception", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f577cd544c87d3d17e8e1515e8452282", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testIndentInfoBlockComments2 () throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoBlockComments2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();", "+    BraceReduction _reduced = doc.getReduced();", "-    rm.move(-1);", "-    IndentInfo ii = rm.getIndentInformation();", "+    _reduced.move(-1);", "+    IndentInfo ii = _reduced.getIndentInformation();"]}], "num": 30864}