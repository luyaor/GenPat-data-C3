{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a4798fd8d6d99263067e8e81397afb1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08cc9a6dde988b692027c817584b5c7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "ac55d90528653f74034b709e69818ba05a360584", "commitAfterChange": "603c8744a127b7738a621d0f6b6e698d9647db86", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \t\tprivate void _replaceAllText(String fWord, String rWord, int start, int end)", "signatureAfterChange": "  \tprivate int _replaceAllText(String fWord, String rWord, int end)", "diff": ["+", "+\tprivate int _replaceAllText(String fWord, String rWord, int end) {", "+\t\tint position = getCaretPosition();", "+\t\tint count = 0;", "+\t\twhile (_findNextText(fWord, position, end)) {", "+\t\t\treplaceText(fWord, rWord);", "+\t\t\tend += rWord.length() - fWord.length();", "+\t\t\tposition = getCaretPosition();", "+\t\t\tcount++;", "-", "-\t\tprivate void _replaceAllText(String fWord, String rWord, int start, int end) {", "-\t\t\t\tint position = start;", "-\t\t\t\twhile (position < end) {", "-\t\t\t\t\t\tint tmp = findNextText(fWord, position);", "-\t\t\t\t\t\tif ((tmp == -1) || (tmp >= end))", "-\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\telse", "-\t\t\t\t\t\t\t\tposition = replaceText(fWord, rWord, tmp);", "-\t\t\t\t}", "-\t\t}", "+\t\treturn count;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4268f8412f09d84f17a9fe31195f9a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsPane.java", "commitBeforeChange": "ac55d90528653f74034b709e69818ba05a360584", "commitAfterChange": "603c8744a127b7738a621d0f6b6e698d9647db86", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \t\tprivate void _replaceAllText(String fWord, String rWord, int start, int end)", "signatureAfterChange": "  \tprivate int _replaceAllText(String fWord, String rWord, int end)", "diff": ["+", "+\tprivate int _replaceAllText(String fWord, String rWord, int end) {", "+\t\tint position = getCaretPosition();", "+\t\tint count = 0;", "+\t\twhile (_findNextText(fWord, position, end)) {", "+\t\t\treplaceText(fWord, rWord);", "+\t\t\tend += rWord.length() - fWord.length();", "+\t\t\tposition = getCaretPosition();", "+\t\t\tcount++;", "-", "-\t\tprivate void _replaceAllText(String fWord, String rWord, int start, int end) {", "-\t\t\t\tint position = start;", "-\t\t\t\twhile (position < end) {", "-\t\t\t\t\t\tint tmp = findNextText(fWord, position);", "-\t\t\t\t\t\tif ((tmp == -1) || (tmp >= end))", "-\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\telse", "-\t\t\t\t\t\t\t\tposition = replaceText(fWord, rWord, tmp);", "-\t\t\t\t}", "-\t\t}", "+\t\treturn count;", "+\t}"]}], "num": 25803}