{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0845360f0e67502d6f92ea23813c2c67", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9827d9945e7f054d93e09ff8b41c7440", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "45f938e0ac0aa62921f2e8d3dd3a1115a8868aaf", "commitAfterChange": "f1270b4a562e0ecd61507987f82e57d121a23edd", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   private FindResult _findNext(int start, int end)", "signatureAfterChange": "   private FindResult _findNext(int start, int end)", "diff": ["+    int foundOffset = -1;", "+    FindResult tempFr = new FindResult(_doc, -1, false, false);      ", "+      boolean stillSearching = true;", "+      while(stillSearching) {", "+        foundOffset = -1;", "+        tempFr = new FindResult(_doc, -1, false, false);      ", "+        stillSearching = false;", "-      FindResult tempFr = new FindResult(_doc, -1, false, false);      ", "-      int docLen;", "-      String findWord = _findWord;", "-      // get the search space in the document", "-      String findSpace;", "-      _doc.acquireReadLock();", "-      try {", "-        docLen = _doc.getLength();", "-        findSpace = _doc.getText(start, end);", "-      }", "-      finally { _doc.releaseReadLock(); }", "-      ", "-      if (!_matchCase) {", "-        findSpace = findSpace.toLowerCase();", "-        findWord = findWord.toLowerCase();", "-      }", "-      ", "-      // find the first occurrence of findWord", "-      int foundOffset;", "-      foundOffset = !_searchBackwards ? findSpace.indexOf(findWord) : findSpace.lastIndexOf(findWord);", "-          ", "-      if (foundOffset >= 0) {", "-        int locationToIgnore = foundOffset + start;", "-        _model.getODDForDocument(_doc).setCurrentLocation(locationToIgnore);", "-        if (_shouldIgnore(locationToIgnore, _doc)) {", "-          foundOffset += start;", "-          if (!_searchBackwards) {", "-            foundOffset += findWord.length();", "-            return _findNext(foundOffset, docLen-foundOffset);", "-          }", "-          return _findNext(start, foundOffset); //searching backwards", "-        }       ", "-        // otherwise we have found it", "-//        _found = true;", "-        foundOffset += start;", "-        if (!_searchBackwards) foundOffset += findWord.length();", "-        _current = _doc.createPosition(foundOffset);  // thread-safe operation on _doc", "-      }", "-      else { // we haven't found it yet", "-        if (_searchAllDocuments) {", "-          AbstractDocumentInterface nextDocToSearch;", "-          ", "-          nextDocToSearch = ", "-            (!_searchBackwards ? _docIterator.getNextDocument(_doc) : _docIterator.getPrevDocument(_doc));", "-          ", "-          tempFr = _findNextInAllDocs(nextDocToSearch, 0, nextDocToSearch.getLength());", "-          foundOffset = tempFr.getFoundOffset();", "+        int docLen;", "+        String findWord = _findWord;", "+        // get the search space in the document", "+        String findSpace;", "+        _doc.acquireReadLock();", "+        try {", "+          docLen = _doc.getLength();", "+          findSpace = _doc.getText(start, end);", "-        else { ", "-          _checkAllDocsWrapped = false;", "-          _allDocsWrapped = false;", "+        finally { _doc.releaseReadLock(); }", "+        ", "+        if (!_matchCase) {", "+          findSpace = findSpace.toLowerCase();", "+          findWord = findWord.toLowerCase();", "-        if (foundOffset == -1) {   // we still haven't found it            ", "-          if (!_searchBackwards) foundOffset = _findWrapped(0, _current.getOffset() + (_findWord.length() - 1));", "-          else {", "-            int startBackOffset = _current.getOffset() - (_findWord.length() - 1);", "-            foundOffset = _findWrapped(startBackOffset, docLen - startBackOffset);", "+        // find the first occurrence of findWord", "+        foundOffset = !_searchBackwards ? findSpace.indexOf(findWord) : findSpace.lastIndexOf(findWord);", "+        ", "+        if (foundOffset >= 0) {", "+          int locationToIgnore = foundOffset + start;", "+          _model.getODDForDocument(_doc).setCurrentLocation(locationToIgnore);", "+          if (_shouldIgnore(locationToIgnore, _doc)) {", "+            foundOffset += start;", "+            if (!_searchBackwards) {", "+              foundOffset += findWord.length();", "+              start = foundOffset;", "+              end = docLen-foundOffset;", "+              stillSearching = true;", "+              continue; ", "+              // return _findNext(foundOffset, docLen-foundOffset);", "+            }", "+            end = foundOffset;", "+            stillSearching = true;", "+            continue;", "+            // return _findNext(start, foundOffset); //searching backwards", "+          }       ", "+          // otherwise we have found it", "+//        _found = true;", "+          foundOffset += start;", "+          if (!_searchBackwards) foundOffset += findWord.length();", "+          _current = _doc.createPosition(foundOffset);  // thread-safe operation on _doc", "+        }", "+        else { // we haven't found it yet", "+          if (_searchAllDocuments) {", "+            AbstractDocumentInterface nextDocToSearch;", "+            ", "+            nextDocToSearch = ", "+              (!_searchBackwards ? _docIterator.getNextDocument(_doc) : _docIterator.getPrevDocument(_doc));", "+            ", "+            tempFr = _findNextInAllDocs(nextDocToSearch, 0, nextDocToSearch.getLength());", "+            foundOffset = tempFr.getFoundOffset();", "+          }", "+          else { ", "+            _checkAllDocsWrapped = false;", "+            _allDocsWrapped = false;", "+          }", "+          ", "+          if (foundOffset == -1) {   // we still haven't found it            ", "+            if (!_searchBackwards) foundOffset = _findWrapped(0, _current.getOffset() + (_findWord.length() - 1));", "+            else {", "+              int startBackOffset = _current.getOffset() - (_findWord.length() - 1);", "+              foundOffset = _findWrapped(startBackOffset, docLen - startBackOffset);", "+            }", "-      }", "-      ", "-      if (_checkAllDocsWrapped && tempFr.getDocument() == _firstDoc) {", "-        _allDocsWrapped = true;", "-        _checkAllDocsWrapped = false;", "-      }", "-      ", "-      FindResult fr = new FindResult(tempFr.getDocument(), foundOffset, _wrapped, _allDocsWrapped);", "-      _wrapped = false;", "-      if (_allDocsWrapped = true) _allDocsWrapped = false;", "-      return fr;", "+        ", "+        if (_checkAllDocsWrapped && tempFr.getDocument() == _firstDoc) {", "+          _allDocsWrapped = true;", "+          _checkAllDocsWrapped = false;", "+        }", "+      }        ", "+    FindResult fr = new FindResult(tempFr.getDocument(), foundOffset, _wrapped, _allDocsWrapped);", "+    _wrapped = false;", "+    _allDocsWrapped = false;", "+    return fr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa09d5b97aae28d3e44e1a3160f00a00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 29, "signatureBeforeChange": "   private FindResult _findNext(int start, int end)", "signatureAfterChange": "    private FindResult _findNext(OpenDefinitionsDocument doc, int start, int len, boolean searchAll)", "diff": ["+   */ ", "+  private FindResult _findNext(OpenDefinitionsDocument doc, int start, int len, boolean searchAll) {", "+//    System.err.println(\"_findNext([\" + doc.getText() + \"], \" +  start + \", \" + len + \", \" + searchAll + \")\");", "+    assert (_isForward && start + len == doc.getLength()) || (! _isForward && start == 0);", "+    FindResult fr = _findNextInDoc(doc, start, len, searchAll);", "+    if ((fr.getFoundOffset() >= 0) || ! searchAll) return fr;", "+    ", "+    return _findNextInOtherDocs(doc, start, len);", "+  }", "-  private FindResult _findNext(int start, int end) {", "-    int foundOffset = -1;", "-    FindResult tempFr = new FindResult(_doc, -1, false, false);      ", "-    try {", "-      boolean stillSearching = true;", "-      while(stillSearching) {", "-        foundOffset = -1;", "-        tempFr = new FindResult(_doc, -1, false, false);      ", "-        stillSearching = false;", "-//      Utilities.showDebug(\"\"+ _model.getODDForDocument(_doc).getStateAtCurrent());", "-        int docLen;", "-        String findWord = _findWord;", "-        // get the search space in the document", "-        String findSpace;", "-        _doc.acquireReadLock();", "-        try {", "-          docLen = _doc.getLength();", "-          findSpace = _doc.getText(start, end);", "-        }", "-        finally { _doc.releaseReadLock(); }", "-        if (!_matchCase) {", "-          findSpace = findSpace.toLowerCase();", "-          findWord = findWord.toLowerCase();", "-        // find the first occurrence of findWord", "-        foundOffset = !_searchBackwards ? findSpace.indexOf(findWord) : findSpace.lastIndexOf(findWord);", "-        if (foundOffset >= 0) {", "-          int locationToIgnore = foundOffset + start;", "-          _model.getODDForDocument(_doc).setCurrentLocation(locationToIgnore);", "-          if (_shouldIgnore(locationToIgnore, _doc)) {", "-            foundOffset += start;", "-            if (!_searchBackwards) {", "-              foundOffset += findWord.length();", "-              start = foundOffset;", "-              end = docLen-foundOffset;", "-              stillSearching = true;", "-              continue; ", "-              // return _findNext(foundOffset, docLen-foundOffset);", "-            }", "-            end = foundOffset;", "-            stillSearching = true;", "-            continue;", "-            // return _findNext(start, foundOffset); //searching backwards", "-          }       ", "-          // otherwise we have found it", "-//        _found = true;", "-          foundOffset += start;", "-          if (!_searchBackwards) foundOffset += findWord.length();", "-          _current = _doc.createPosition(foundOffset);  // thread-safe operation on _doc", "-        }", "-        else { // we haven't found it yet", "-          if (_searchAllDocuments) {", "-            AbstractDocumentInterface nextDocToSearch;", "-            ", "-            nextDocToSearch = ", "-              (!_searchBackwards ? _docIterator.getNextDocument(_doc) : _docIterator.getPrevDocument(_doc));", "-            ", "-            tempFr = _findNextInAllDocs(nextDocToSearch, 0, nextDocToSearch.getLength());", "-            foundOffset = tempFr.getFoundOffset();", "-          }", "-          else { ", "-            _checkAllDocsWrapped = false;", "-            _allDocsWrapped = false;", "-          }", "-          ", "-          if (foundOffset == -1) {   // we still haven't found it            ", "-            if (!_searchBackwards) foundOffset = _findWrapped(0, _current.getOffset() + (_findWord.length() - 1));", "-            else {", "-              int startBackOffset = _current.getOffset() - (_findWord.length() - 1);", "-              foundOffset = _findWrapped(startBackOffset, docLen - startBackOffset);", "-            }", "-          }", "-        }", "-        if (_checkAllDocsWrapped && tempFr.getDocument() == _firstDoc) {", "-          _allDocsWrapped = true;", "-          _checkAllDocsWrapped = false;", "-        }", "-      }        ", "-    }", "-    catch (BadLocationException e) { throw new UnexpectedException(e); }", "-    FindResult fr = new FindResult(tempFr.getDocument(), foundOffset, _wrapped, _allDocsWrapped);", "-    _wrapped = false;", "-    _allDocsWrapped = false;", "-    return fr;", "-  }"]}], "num": 10792}