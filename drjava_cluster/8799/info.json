{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d319d2b705b3f5777ca29b4406ec7e04", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99867c264a47f11fceb21427a5fe0cf4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testCompileAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException, InterruptedException", "diff": ["-        catch (IOException ioe) {", "-          fail(\"Save produced exception: \" + ioe);", "-        }", "+        catch (IOException ioe) { fail(\"Save produced exception: \" + ioe); }", "-        saveBeforeCompileCount++;", "+        synchronized(this) { saveBeforeCompileCount++; }", "-        saveCount++;", "+        synchronized(this) { saveCount++; }", "+    listener.waitCompileDone();", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e01ca18da880bf80d25466ef617846ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException,      InterruptedException", "diff": ["-  public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()", "-    throws BadLocationException, IOException, InterruptedException", "-  {", "+  public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked() throws BadLocationException, IOException, ", "+    InterruptedException {", "+    ", "-        try {", "-          doc2.saveFile(new FileSelector(file2));", "-        }", "-        catch (IOException ioe) {", "-          fail(\"Save produced exception: \" + ioe);", "-        }", "+        try { doc2.saveFile(new FileSelector(file2)); }", "+        catch (IOException ioe) { fail(\"Save produced exception: \" + ioe); }", "-        saveBeforeCompileCount++;", "+        synchronized(this) { saveBeforeCompileCount++; }", "-        saveCount++;", "+        synchronized(this) { saveCount++; }", "+    listener.waitCompileDone();"]}], "num": 8799}