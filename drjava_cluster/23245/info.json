{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "751fd28b1f32e3231904df01127f9a85", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e46f4babd32d3561aaa296bf2c0cada", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 209, "signatureBeforeChange": "       public Lambda<T2, R> value(final T1 arg1)", "signatureAfterChange": "     public Lambda<T2, R> value(T1 arg)", "diff": ["-    return new Lambda<T1, Lambda<T2, R>>() {", "-      public Lambda<T2, R> value(final T1 arg1) {", "-        return new Lambda<T2, R>() {", "-          public R value(T2 arg2) { return lambda.value(arg1, arg2); }", "-        };", "-      }", "+    public CurriedLambda2(Lambda2<? super T1, ? super T2, ? extends R> lambda) { _lambda = lambda; }", "+    public Lambda<T2, R> value(T1 arg) { return new BindFirstLambda<T1, T2, R>(_lambda, arg); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3209d7e83f52d853f83bcf7098b8d95", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 215, "signatureBeforeChange": "       public Lambda<T2, Lambda<T3, Lambda<T4, R>>> value(T1 arg1)", "signatureAfterChange": "     public Lambda<T2, Lambda<T3, Lambda<T4, R>>> value(T1 arg)", "diff": ["-    return new Lambda<T1, Lambda<T2, Lambda<T3, Lambda<T4, R>>>>() {", "-      public Lambda<T2, Lambda<T3, Lambda<T4, R>>> value(T1 arg1) {", "-        return curry(partial.value(arg1));", "-      }", "+    }", "+    public Lambda<T2, Lambda<T3, Lambda<T4, R>>> value(T1 arg) {", "+      return new CurriedLambda3<T2, T3, T4, R>(new BindFirstLambda3<T1, T2, T3, T4, R>(_lambda, arg));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c393a74f5ebfa74200b0bb0e58f9fb8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 212, "signatureBeforeChange": "       public Lambda<T2, Lambda<T3, R>> value(T1 arg1)", "signatureAfterChange": "     public Lambda<T2, Lambda<T3, R>> value(T1 arg)", "diff": ["-    return new Lambda<T1, Lambda<T2, Lambda<T3, R>>>() {", "-      public Lambda<T2, Lambda<T3, R>> value(T1 arg1) {", "-        return curry(partial.value(arg1));", "-      }", "+    public CurriedLambda3(Lambda3<? super T1, ? super T2, ? super T3, ? extends R> lambda) { _lambda = lambda; }", "+    public Lambda<T2, Lambda<T3, R>> value(T1 arg) {", "+      return new CurriedLambda2<T2, T3, R>(new BindFirstLambda2<T1, T2, T3, R>(_lambda, arg));", "+    }"]}], "num": 23245}