{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75b70b92237d103497d025a66b50e916", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aaa6036ff98b2cfa8687be9c661f59f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "4ddb555fbb20c498ee5f44bc087ce9c848b2e79c", "commitAfterChange": "95fa58e53b5e90bde2a488acc329b110ba78e88a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public DefinitionsPane(MainFrame mf,                          GlobalModel model,                          OpenDefinitionsDocument doc)", "signatureAfterChange": "   public DefinitionsPane(MainFrame mf,                          GlobalModel model,                          OpenDefinitionsDocument doc)", "diff": ["+    int rate = this.getCaret().getBlinkRate();", "+    // Change the caret to one that doesn't remove selection highlighting when focus is lost.", "+    // Fixes bug #788295 \"No highlight when find/replace switches docs\".", "+    this.setCaret(new DefaultCaret() {", "+      public void focusLost(FocusEvent e) {        ", "+        setVisible(false);", "+      }", "+    });", "+    this.getCaret().setBlinkRate(rate);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c98ff928eaf68af73533d7f072875573", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigPanel.java", "commitBeforeChange": "364d0b19a9e3896eddcd174b6cb5aa4a53e74f1f", "commitAfterChange": "65d59a6eb5c83a25b9e6bfdf698fd61ca6d2f695", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void displayComponents()", "signatureAfterChange": "      public void displayComponents()", "diff": ["-    JPanel panel = new JPanel();", "-    //panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));", "+    JPanel panel = new JPanel();  // sits in scrollpane and compresses layout", "-    JPanel panel2 = new JPanel();", "-    //panel2.setLayout(new GridLayout(0, 1));", "+    JPanel panel2 = new JPanel();  // contains OptionComponents", "+    // Reset Button", "+    JButton _resetToDefaultButton = new JButton(\"Reset to Defaults\");", "+    _resetToDefaultButton.addActionListener(new ActionListener() {", "+      public void actionPerformed(ActionEvent e) {", "+        resetToDefault();", "+      }", "+    });", "+    panel.add(_resetToDefaultButton, BorderLayout.SOUTH);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3a66c88ac0099f993b201ce1235a718", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "00f79f8f4066e601ad05fa98265f6d88ea266cf5", "commitAfterChange": "c0f364c039dc3bd9aa615c971e27b8fb38745916", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   private void _init(Window owner, File root, boolean allowMultiple, boolean showHidden)", "signatureAfterChange": "   private void _init(Window owner, File root, boolean allowMultiple, boolean showHidden)", "diff": ["+    _refreshItem = new JMenuItem(\"Refresh\");", "+    _treePopup.add(_refreshItem);", "+    _refreshItem.addActionListener(new ActionListener() {", "+      public void actionPerformed(ActionEvent e) {", "+        startRefreshNode();", "+      }", "+    });"]}], "num": 9127}