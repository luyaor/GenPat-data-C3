{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b63d5e1108abdaec5cad92edc4e2f91", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22ce60ed47c3cc70c091f91772cd2dd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk16/edu/rice/cs/drjava/model/compiler/Javac160Compiler.java", "commitBeforeChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "commitAfterChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private String getSourceRootString(File[] sourceRoots)", "signatureAfterChange": "      private static String _pathToString(List<? extends File> path)", "diff": ["+  ", "+  private static String _pathToString(List<? extends File> path) {", "+    StringBuffer result = new StringBuffer();", "+    boolean first = true;", "+    for (File f : path) {", "+      if (!first) { result.append(File.pathSeparatorChar); }", "+      first = false;", "+      result.append(f.getPath());", "+    return result.toString();", "-   */", "-  private String getSourceRootString(File[] sourceRoots) {", "-    StringBuffer roots = new StringBuffer();", "-    for (int i = 0; i < sourceRoots.length; i++) {", "-      roots.append(sourceRoots[i].getAbsolutePath());", "-      if (i < sourceRoots.length - 1) {", "-        roots.append(File.pathSeparator);", "-    return roots.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26d1e983608653ca7c54e5c873322876", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk15/edu/rice/cs/drjava/model/compiler/Javac150Compiler.java", "commitBeforeChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "commitAfterChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected String getSourceRootString(File[] sourceRoots)", "signatureAfterChange": "    protected static String _pathToString(List<? extends File> path)", "diff": ["-   */", "-  protected String getSourceRootString(File[] sourceRoots) {", "-    StringBuffer roots = new StringBuffer();", "-    for (int i = 0; i < sourceRoots.length; i++) {", "-      roots.append(sourceRoots[i].getAbsolutePath());", "-      if (i < sourceRoots.length - 1) {", "-        roots.append(File.pathSeparator);", "-      }", "+  protected static String _pathToString(List<? extends File> path) {", "+    StringBuffer result = new StringBuffer();", "+    boolean first = true;", "+    for (File f : path) {", "+      if (!first) { result.append(File.pathSeparatorChar); }", "+      first = false;", "+      result.append(f.getPath());", "-    return roots.toString();", "+    return result.toString();"]}], "num": 24992}