{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "833052bc9f607d98708aa72a61cf2e4a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a0ff41a82971bdcf60682cde15e12e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public boolean canAbandonFile()", "signatureAfterChange": "     public boolean canAbandonFile()", "diff": ["-   */", "-  public boolean canAbandonFile() {", "-    if (isModifiedSinceSave()) {", "-      return _pollListeners(new EventPoller() {", "-        public boolean poll(GlobalModelListener l) {", "-          return l.canAbandonFile(_definitionsDoc.getFile());", "-        }", "-      });", "-    }", "-    else {", "-      return true;", "-    }", "-  }", "+     */", "+    public boolean canAbandonFile() {", "+      final OpenDefinitionsDocument doc = this;", "+      if (isModifiedSinceSave()) {", "+        return _pollListeners(new EventPoller() {", "+          public boolean poll(GlobalModelListener l) {", "+            return l.canAbandonFile(doc);", "+          }", "+        });", "+      }", "+      else {", "+        return true;", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d967243c38d3321d648d48379eedf895", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 70, "signatureBeforeChange": "          private void cleanHelper(File f)", "signatureAfterChange": "       public String getDiscriptionMessage()", "diff": ["-    private void cleanHelper(File f) {", "-      if (f.isDirectory()) {", "-        ", "-        File fs[] = f.listFiles(new FilenameFilter() {", "-          public boolean accept(File parent, String name) {", "-            return new File(parent, name).isDirectory() || name.endsWith(\".class\");", "-          }", "-        });", "-        ", "-        if (fs!=null) { // listFiles may return null if there's an IO error", "-          for (File kid: fs) { cleanHelper(kid); }", "-        fs = f.listFiles(); // listFiles may return null if there's an IO error", "-        if ((fs!=null) && (fs.length == 0))  f.delete();", "-        ", "-      } else if (f.getName().endsWith(\".class\")) f.delete();", "-    }", "+      }", "+      public String getDiscriptionMessage() {", "+        return \"Deleting files...\";", "+      }"]}], "num": 14894}