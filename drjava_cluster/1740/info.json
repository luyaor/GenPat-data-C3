{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d99d65ab303a10e533c397dff237235", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "460a3e19682e1685e8a5e4435a6f630a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ae443ba61aae036767efae485582e591ba7ac6b0", "commitAfterChange": "3d4c01f25680b3cdf3ea4a15c4351cb56ab5c8db", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "   public void generateJavaAPIList()", "signatureAfterChange": "   public void generateJavaAPIList()", "diff": ["-        BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));", "-        String line = br.readLine();", "-        while(line != null) {", "-          final String aText = \"<a href=\\\"\";", "-          int aPos = line.toLowerCase().indexOf(aText);", "-          int aEndPos = line.toLowerCase().indexOf(\".html\\\" \",aPos);", "-          if ((aPos>=0) && (aEndPos>=0)) {", "-            String link = line.substring(aPos+aText.length(), aEndPos);", "-            String fullClassName = link.replace('/', '.');", "-            String simpleClassName = fullClassName;", "-            int lastDot = fullClassName.lastIndexOf('.');", "-            if (lastDot>=0) { simpleClassName = fullClassName.substring(lastDot + 1); }", "-            try {", "-              _javaAPIList.add(new JavaAPIListEntry(simpleClassName, fullClassName, new URL(base + \"/\" + link + \".html\")));", "+        InputStream urls = url.openStream();", "+        InputStreamReader is = null;", "+        BufferedReader br = null;", "+        try {", "+          is = new InputStreamReader(urls);", "+          br = new BufferedReader(is);", "+          String line = br.readLine();", "+          while(line != null) {", "+            final String aText = \"<a href=\\\"\";", "+            int aPos = line.toLowerCase().indexOf(aText);", "+            int aEndPos = line.toLowerCase().indexOf(\".html\\\" \",aPos);", "+            if ((aPos>=0) && (aEndPos>=0)) {", "+              String link = line.substring(aPos+aText.length(), aEndPos);", "+              String fullClassName = link.replace('/', '.');", "+              String simpleClassName = fullClassName;", "+              int lastDot = fullClassName.lastIndexOf('.');", "+              if (lastDot>=0) { simpleClassName = fullClassName.substring(lastDot + 1); }", "+              try {", "+                _javaAPIList.add(new JavaAPIListEntry(simpleClassName, fullClassName, new URL(base + \"/\" + link + \".html\")));", "+              }", "+              catch(MalformedURLException mue) { /* ignore, we'll just not put this class in the list */ }", "-            catch(MalformedURLException mue) { /* ignore, we'll just not put this class in the list */ }", "+            line = br.readLine();", "-          line = br.readLine();", "+        }", "+        finally {", "+\t  if (br!=null) { br.close(); }", "+          if (is!=null) { is.close(); }", "+          if (urls!=null) { urls.close(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9954f35e6bff36c7245dbede561f6655", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "74defc1871c2ce7bb835d79f4f47bcd26dee87cb", "commitAfterChange": "0fdfebae508832143999c4dcefc754f78e15e3d0", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 146, "signatureBeforeChange": "   public void generateJavaAPIList()", "signatureAfterChange": "   public void generateJavaAPIList()", "diff": ["-      // TODO: put this in an AsyncTask", "-      try {", "-        _javaAPIList = new ArrayList<JavaAPIListEntry>();", "-        URL url = MainFrame.class.getResource(\"/edu/rice/cs/drjava/docs/javaapi\"+suffix);", "-        InputStream urls = url.openStream();", "-        InputStreamReader is = null;", "-        BufferedReader br = null;", "-        try {", "-          is = new InputStreamReader(urls);", "-          br = new BufferedReader(is);", "-          String line = br.readLine();", "-          while(line != null) {", "-            final String aText = \"<a href=\\\"\";", "-            int aPos = line.toLowerCase().indexOf(aText);", "-            int aEndPos = line.toLowerCase().indexOf(\".html\\\" \",aPos);", "-            if ((aPos>=0) && (aEndPos>=0)) {", "-              String link = line.substring(aPos+aText.length(), aEndPos);", "-              String fullClassName = link.substring(stripPrefix.length()).replace('/', '.');", "-              String simpleClassName = fullClassName;", "-              int lastDot = fullClassName.lastIndexOf('.');", "-              if (lastDot>=0) { simpleClassName = fullClassName.substring(lastDot + 1); }", "-              try {", "-                URL pageURL = new URL(base + link + \".html\");", "-                _javaAPIList.add(new JavaAPIListEntry(simpleClassName, fullClassName, pageURL));", "-              }", "-              catch(MalformedURLException mue) { /* ignore, we'll just not put this class in the list */ }", "-            }", "-            line = br.readLine();", "-          }", "-        }", "-        finally {", "-          if (br!=null) { br.close(); }", "-          if (is!=null) { is.close(); }", "-          if (urls!=null) { urls.close(); }", "-        }", "-      }", "-      catch(IOException ioe) { /* ignore, we'll just have an incomplete list */ }", "+      _javaAPIList = _generateJavaAPIList(base, stripPrefix, suffix);"]}], "num": 1740}