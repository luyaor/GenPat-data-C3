{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bf130807dec190a2b6630537a55434f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b739c39700edc072f765fb525edd33b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": "          public void testForPlusAssignmentExpression()", "signatureAfterChange": "          public void testForPlusAssignmentExpression()", "diff": ["-      ComplexNameReference nf = new ComplexNameReference(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"Ned\")), new Word(JExprParser.NO_SOURCE_INFO, \"Flanders\"));", "-      PlusAssignmentExpression pa = new PlusAssignmentExpression(JExprParser.NO_SOURCE_INFO, nf, new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5));", "+      ComplexNameReference nf = new ComplexNameReference(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"Ned\")), new Word(SourceInfo.NO_INFO, \"Flanders\"));", "+      PlusAssignmentExpression pa = new PlusAssignmentExpression(SourceInfo.NO_INFO, nf, new IntegerLiteral(SourceInfo.NO_INFO, 5));", "-      PlusAssignmentExpression pa2 = new PlusAssignmentExpression(JExprParser.NO_SOURCE_INFO, nf, nf);", "+      PlusAssignmentExpression pa2 = new PlusAssignmentExpression(SourceInfo.NO_INFO, nf, nf);", "-      SimpleNameReference sRef = new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"s\"));", "+      SimpleNameReference sRef = new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"s\"));", "-      PlusAssignmentExpression pa3 = new PlusAssignmentExpression(JExprParser.NO_SOURCE_INFO, sRef, new BooleanLiteral(JExprParser.NO_SOURCE_INFO, true));", "+      PlusAssignmentExpression pa3 = new PlusAssignmentExpression(SourceInfo.NO_INFO, sRef, new BooleanLiteral(SourceInfo.NO_INFO, true));", "-      PlusAssignmentExpression pa4 = new PlusAssignmentExpression(JExprParser.NO_SOURCE_INFO, sRef, new StringLiteral(JExprParser.NO_SOURCE_INFO, \"cat\"));", "+      PlusAssignmentExpression pa4 = new PlusAssignmentExpression(SourceInfo.NO_INFO, sRef, new StringLiteral(SourceInfo.NO_INFO, \"cat\"));", "-      PlusAssignmentExpression pa5 = new PlusAssignmentExpression(JExprParser.NO_SOURCE_INFO, nf, new StringLiteral(JExprParser.NO_SOURCE_INFO, \"house \"));", "+      PlusAssignmentExpression pa5 = new PlusAssignmentExpression(SourceInfo.NO_INFO, nf, new StringLiteral(SourceInfo.NO_INFO, \"house \"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df95d995634dc21d7fd15e19a548eb5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "          public void testForInterfaceDef()", "signatureAfterChange": "          public void testForInterfaceDef()", "diff": ["-      InterfaceDef id = new InterfaceDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"Lisa\"),", "-                                         new TypeParameter[0], new ReferenceType[] {new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"superI\", new Type[0])}, new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      InterfaceDef id = new InterfaceDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"Lisa\"),", "+                                         new TypeParameter[0], new ReferenceType[] {new ClassOrInterfaceType(SourceInfo.NO_INFO, \"superI\", new Type[0])}, new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      InterfaceDef id2 = new InterfaceDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"somewhereElse.Lisa\"),", "-                                  new TypeParameter[0], new ReferenceType[] {new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"superI\",  new Type[0])},", "-                                  new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      InterfaceDef id2 = new InterfaceDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"somewhereElse.Lisa\"),", "+                                  new TypeParameter[0], new ReferenceType[] {new ClassOrInterfaceType(SourceInfo.NO_INFO, \"superI\",  new Type[0])},", "+                                  new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      InterfaceDef id3 = new InterfaceDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"JimesH\"),", "-                                  new TypeParameter[0], new ReferenceType[] {new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.lang.Runnable\", new Type[0])}, new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      InterfaceDef id3 = new InterfaceDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"JimesH\"),", "+                                  new TypeParameter[0], new ReferenceType[] {new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Runnable\", new Type[0])}, new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      InterfaceDef id4 = new InterfaceDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"Bart\"),", "-                                         new TypeParameter[0], new ReferenceType[] {new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"superC\", new Type[0])}, new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      InterfaceDef id4 = new InterfaceDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"Bart\"),", "+                                         new TypeParameter[0], new ReferenceType[] {new ClassOrInterfaceType(SourceInfo.NO_INFO, \"superC\", new Type[0])}, new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}], "num": 22498}