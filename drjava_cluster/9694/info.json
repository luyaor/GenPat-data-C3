{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9e9ce5cff87c2a82e1555b7b72c663e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c06aa31afa335d13a6d443804c5396a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "129e16928b37d25f1eb9e60e117e48de5dda4c3c", "commitAfterChange": "8fa41241e2ac3011c3058f056c6e4c222dae479c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void insertCommentChar(String special)", "signatureAfterChange": "     private void _checkPreviousInsertSpecial(String special,                                            ModelList<ReducedToken>.Iterator                                            copyCursor)", "diff": ["-  public void insertCommentChar(String special) {", "-      _checkPreviousInsertCommentChar(special, _cursor);", "-      //is then we don't want to break it.", "-      _splitCurrentIfCommentBlock(false,false,_cursor); //leaving us at start", "-      _checkPreviousInsertCommentChar(special, _cursor);", "-      _checkPreviousInsertCommentChar(special, _cursor);", "+   */  ", "+  private void _checkPreviousInsertSpecial(String special,", "+                                           ModelList<ReducedToken>.Iterator", "+                                           copyCursor)", "+     {", "+       if (special.equals(\"\\\\\"))", "+         _checkPreviousInsertBackSlash(copyCursor);", "+       else", "+         _checkPreviousInsertCommentChar(special, copyCursor);", "+     }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3753139290b3eada95bc2698cfad6ccb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "129e16928b37d25f1eb9e60e117e48de5dda4c3c", "commitAfterChange": "8fa41241e2ac3011c3058f056c6e4c222dae479c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void insertCommentChar(String special)", "signatureAfterChange": "     private void _checkPreviousInsertSpecial(String special,                                            ModelList<ReducedToken>.Iterator                                            copyCursor)", "diff": ["-  public void insertCommentChar(String special) {", "-      _checkPreviousInsertCommentChar(special, _cursor);", "-      //is then we don't want to break it.", "-      _splitCurrentIfCommentBlock(false,false,_cursor); //leaving us at start", "-      _checkPreviousInsertCommentChar(special, _cursor);", "-      _checkPreviousInsertCommentChar(special, _cursor);", "+   */  ", "+  private void _checkPreviousInsertSpecial(String special,", "+                                           ModelList<ReducedToken>.Iterator", "+                                           copyCursor)", "+     {", "+       if (special.equals(\"\\\\\"))", "+         _checkPreviousInsertBackSlash(copyCursor);", "+       else", "+         _checkPreviousInsertCommentChar(special, copyCursor);", "+     }"]}], "num": 9694}