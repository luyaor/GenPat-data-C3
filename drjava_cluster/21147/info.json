{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a4a6a5ec478e53d6ca8968470f10e13", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21385c1ff7127d5997edfd662ee75734", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testJUnitAllWithErrors() throws Exception", "signatureAfterChange": "   public void testJUnitAllWithErrors() throws Exception", "diff": ["-    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "+    OpenDefinitionsDocument doc2 = setupDocument(MONKEYTEST_FAIL_TEXT);", "+    File file2 = new File(_tempDir, \"MonkeyTestFail.java\");", "-    doc.startCompile();", "-    doc = setupDocument(MONKEYTEST_FAIL_TEXT);", "-    file = new File(_tempDir, \"MonkeyTestFail.java\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "+    doc2.saveFile(new FileSelector(file2));", "+    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "+    listener.compile(doc);", "+    listener.checkCompileOccurred();", "+    listener.resetCompileCounts();", "+    listener.compile(doc2);", "+    listener.checkCompileOccurred();", "-    _runJUnit();", "+    listener.runJUnit(_model.getJUnitModel());", "+    ", "+    _log.log(\"testJUnitAllWithErrors completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b411ab8f4fd21a3e012cc4a85ad7a0a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testJUnitStaticInnerClass() throws Exception", "signatureAfterChange": "   public void testJUnitStaticInnerClass() throws Exception", "diff": ["-    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "+    OpenDefinitionsDocument doc2 = setupDocument(STATIC_INNER_TEST_TEXT);", "+    File file2 = new File(_tempDir, \"StaticInnerTestCase.java\");", "-    doc.startCompile();", "-    doc = setupDocument(STATIC_INNER_TEST_TEXT);", "-    file = new File(_tempDir, \"StaticInnerTestCase.java\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "-    _model.addListener(listener);", "+    doc2.saveFile(new FileSelector(file2));", "-    _runJUnit();", "+    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "+    _model.addListener(listener);", "+    listener.compile(doc);", "+    listener.checkCompileOccurred();", "+    listener.resetCompileCounts();", "+    listener.compile(doc2);", "+    listener.checkCompileOccurred();", "+    ", "+    listener.runJUnit(_model.getJUnitModel());", "-    if (printMessages) System.out.println(\"----testJUnitAllWithNoErrors-----\");  ", "+    if (printMessages) System.out.println(\"----testJUnitAllWithNoErrors-----\"); ", "+    ", "+    _log.log(\"testJUnitStaticInnerClass completed\");"]}], "num": 21147}