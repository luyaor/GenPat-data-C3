{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28d3e5b68bfeb6b5b2579ecd4ba383e3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06592c4eb29eecd4b001a7fadd10c0c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void interpretResult(InterpretResult result) throws RemoteException", "signatureAfterChange": "   public void interpretResult(InterpretResult result) throws RemoteException", "diff": ["-    //     try {", "-    _log.logTime(\"main.interp result: \" + result);", "-    ", "-    result.apply(getResultHandler());", "-    //      }", "-    //      catch (Throwable t) {", "-    //        _log.logTime(\"EXCEPTION in interpretResult: \" + t.toString());", "-    //      }", "+    try {", "+      _log.log(this + \".interpretResult(\" + result + \")\");", "+      ", "+      result.apply(getResultHandler());", "+    }", "+    catch (Throwable t) {", "+      _log.log(this + \"interpretResult threw \" + t.toString());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ec9c9c44603e54c26374bedc82c79c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void interpretResult(InterpretResult result) throws RemoteException", "signatureAfterChange": "         public String forBooleanValue(Boolean b)", "diff": ["+        public String forNumberValue(Number n) { return n.toString(); }", "+        public String forBooleanValue(Boolean b) { return b.toString(); }", "-   */", "-  public void interpretResult(InterpretResult result) throws RemoteException {", "-    try {", "-      _log.log(this + \".interpretResult(\" + result + \")\");", "-      result.apply(getResultHandler());", "-    }", "-    catch (Throwable t) {", "-      _log.log(this + \"interpretResult threw \" + t.toString());", "-    }", "-  }"]}], "num": 8982}