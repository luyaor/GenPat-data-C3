{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e9cd7061de28f0697b129e04cae18c7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f33b5d20da50209348f7bfbe64340b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testFindNextUpdatesCurrent() throws BadLocationException", "signatureAfterChange": "    public void testFindNextUpdatesCurrent() throws BadLocationException", "diff": ["-  ", "-  public void testFindNextUpdatesCurrent() throws BadLocationException {", "-    doc.insertString(0, EVIL_TEXT, null);", "-    FindReplaceMachine frm = new FindReplaceMachine(doc, 0);", "-    _assertOffsets(frm, 0, 0);", "-    frm.setFindWord(\"evil\");", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 12);", "+", "+  public void testFindNextUpdatesCurrent() throws BadLocationException { ", "+    doc.insertString(0, EVIL_TEXT, null); ", "+    _initFrm(0);", "+    _assertOffsets(frm, 0, 0); ", "+    frm.setFindWord(\"evil\"); ", "+    _testFindNextSucceeds(frm, CONTINUE, 0, 12); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e4b61b5eaa46299d7aef17cbce14c75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 12, "signatureBeforeChange": "    public void testFindNoMatchCase() throws BadLocationException", "signatureAfterChange": "    public void testFindNoMatchCase() throws BadLocationException", "diff": ["-  public void testFindNoMatchCase() throws BadLocationException{", "-    doc.insertString(0, EVIL_TEXT, null); ", "-    _assertOffsets(frm, 0, 0);", "-    frm.setMatchCase(false);", "-    frm.setFindWord(\"eViL\"); ", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 12); ", "+", "+  public void testFindNoMatchCase() throws BadLocationException {", "+    _doc.insertString(0, EVIL_TEXT, null);", "+    _initFrm(0);", "+    _assertOffsets(_frm, 0, 0);", "+    _frm.setMatchCase(false);", "+    _frm.setFindWord(\"eViL\");", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 12);", "+  }"]}], "num": 554}