{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aec3d7891c51392ad078a75be5b40c64", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c499b5d24d653217ae3ee692b430bd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "cbdc405e8bd4373c383ad7cbc6a9a656b65ddd52", "commitAfterChange": "2c9a67ea7f4112fa7f99743281ac144c9f56d20a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testConstructOneDocWithBoth()", "signatureAfterChange": "   public void testConstructOneDocWithBoth()", "diff": ["-    errors = new CompilerError[]", "-    { new CompilerError(files[0], 2, 0, \"Test error with File and line\", false),", "+    errors = new CompilerError[] { ", "+      new CompilerError(files[0], 2, 0, \"Test error with File and line\", false),", "-      new CompilerError(files[0], 1, 0, \"Test error with File and line\", false) };", "+      new CompilerError(files[0], 1, 0, \"Test error with File and line\", false) ", "+    };", "-    for (int i = 0; i < errors.length; i++) {", "-      copy[i] = errors[i];", "-    }", "+    for (int i = 0; i < errors.length; i++) copy[i] = errors[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31fd7b79e8fcc4cc87ba49d63f0fa6dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "cbdc405e8bd4373c383ad7cbc6a9a656b65ddd52", "commitAfterChange": "2c9a67ea7f4112fa7f99743281ac144c9f56d20a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void fullSetup()", "signatureAfterChange": "   private void fullSetup()", "diff": ["-   */", "+  /** Extra setup for test cases with several documents. */", "-    errors = new CompilerError[]", "-    { new CompilerError(files[0], \"Test error with File (no line)\", false),", "+    errors = new CompilerError[] { ", "+      new CompilerError(files[0], \"Test error with File (no line)\", false),", "-      new CompilerError(files[0], 1, 0, \"Test error with File\", false) };", "+      new CompilerError(files[0], 1, 0, \"Test error with File\", false) ", "+    };", "-    for (int i = 0; i < errors.length; i++) {", "-      copy[i] = errors[i];", "-    }", "+    for (int i = 0; i < errors.length; i++) copy[i] = errors[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85f78a3107ce2922e097f7f3f7cea2fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "cbdc405e8bd4373c383ad7cbc6a9a656b65ddd52", "commitAfterChange": "2c9a67ea7f4112fa7f99743281ac144c9f56d20a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testConstructManyDocsWithLineNums()", "signatureAfterChange": "   public void testConstructManyDocsWithLineNums()", "diff": ["-   */", "+  /** Tests CompilerErrorModel setup code with several files and only errors with line numbers. */", "-    errors = new CompilerError[]", "-    { new CompilerError(files[0], 2, 0, \"Test error with File\", false),", "+    errors = new CompilerError[] { ", "+      new CompilerError(files[0], 2, 0, \"Test error with File\", false),", "-      new CompilerError(files[0], 1, 0, \"Test error with File\", false) };", "+      new CompilerError(files[0], 1, 0, \"Test error with File\", false) ", "+    };", "-    for (int i = 0; i < errors.length; i++) {", "-      copy[i] = errors[i];", "-    }", "+    for (int i = 0; i < errors.length; i++) copy[i] = errors[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa3e315a125166b34ded04acbcd97da2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/ColorOption.java", "commitBeforeChange": "18ba05a758e01d1cdb3ad27d58fd007121dcdc63", "commitAfterChange": "fbf201d6c571409933ea805efe2ae830a8c6d081", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public String format(Color c)", "signatureAfterChange": "      public String format(Color c)", "diff": ["-    for (int i = 0; i < (len - str.length()); i++) {", "-      buff.insert(0, '0');", "-    }", "+    for (int i = 0; i < (len - str.length()); i++)  buff.insert(0, '0');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfc57e0b11f6019c4e4a2131f9e8b993", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "cbdc405e8bd4373c383ad7cbc6a9a656b65ddd52", "commitAfterChange": "2c9a67ea7f4112fa7f99743281ac144c9f56d20a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testConstructManyDocsWithoutLineNums()", "signatureAfterChange": "   public void testConstructManyDocsWithoutLineNums()", "diff": ["-    errors = new CompilerError[]", "-    { new CompilerError(files[0], \"Test error with File\", false),", "+    errors = new CompilerError[] { ", "+      new CompilerError(files[0], \"Test error with File\", false),", "-      new CompilerError(files[0], \"Test error with File\", false) };", "+      new CompilerError(files[0], \"Test error with File\", false) ", "+    };", "-    for (int i = 0; i < errors.length; i++) {", "-      copy[i] = errors[i];", "-    }", "+    for (int i = 0; i < errors.length; i++) copy[i] = errors[i];"]}], "num": 1055}