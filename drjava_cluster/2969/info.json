{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da3c59feb8e738bf348fab405e0b33cc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08eaf459f62562874d21684f45638be2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "101c103fed282ea73966b5bc0dce7152a188fba5", "commitAfterChange": "2bbdbef8ef11cd93c30f52236eee8443bfc75e9d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public static JarJDKToolsLibrary makeFromFile(File f, GlobalModel model, JDKDescriptor desc,                                                 List<File> additionalBootClassPath)", "signatureAfterChange": "   public static JarJDKToolsLibrary makeFromFile(File f, GlobalModel model, JDKDescriptor desc,                                                 List<File> additionalBootClassPath)", "diff": ["+        else {", "+          // could not determine boot classpath because the file was not named classes.jar or tools.jar", "+          // at least put the compiler file itself and the additional compiler files on the boot classpath", "+          bootClassPath.add(f);", "+          for(File acf: additionalCompilerFiles) { bootClassPath.add(acf); };", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d30c671cddcfdc9c2cd99a356c636e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b128df4fa9d8df79a76ba9e19a170c160365e646", "commitAfterChange": "e16fd9dc1aa815e303a7aa80be407f3a031e237d", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 174, "signatureBeforeChange": "   public ProjectProfile _makeProjectProfile(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "signatureAfterChange": "   public ProjectProfile _makeProjectProfile(File file, Hashtable<OpenDefinitionsDocument, DocumentInfoGetter> info)      throws IOException", "diff": ["-    for(Breakpoint bp: getBreakpointManager().getRegions()) { l.add(bp); }", "-    builder.setBreakpoints(l);", "-    try {", "-      builder.setWatches(getDebugger().getWatches());", "+    RegionManager<Breakpoint> bm = getBreakpointManager();", "+    ", "+    for (OpenDefinitionsDocument odd: bm.getDocuments()) {", "+      for(Breakpoint bp: bm.getRegions(odd)) { l.add(bp); }", "+    builder.setBreakpoints(l);", "+    try { builder.setWatches(getDebugger().getWatches()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1d74bf1254a9c407e497f974d7f6643", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "c2cccf3d2cd557fff7d01a0111e1dc7df943b427", "commitAfterChange": "64292becb14dc44418f35810edeb4a6d2191c842", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   @SuppressWarnings(\"unchecked\") public java.util.List<ItemT> getSelectedDocuments()", "signatureAfterChange": "   @SuppressWarnings(\"unchecked\") public java.util.List<ItemT> getSelectedDocuments()", "diff": ["-    ArrayList<ItemT> l = new ArrayList<ItemT>(1);", "-    l.add((ItemT)getSelectedValue());", "+    Object[] selected = getSelectedValues();", "+    ArrayList<ItemT> l = new ArrayList<ItemT>(selected.length);", "+    for (Object o: selected) { l.add((ItemT)o); }"]}], "num": 2969}