{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84e2192f0b7a08bce9dd1e9bb15e5423", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e60ce743713ec5916bba9d6166b35a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "dd27d69f437c114ad258abba00f7d581b096ce79", "commitAfterChange": "1e852b550a8b69787c9e44248d928487d0bf9f6e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testParseProject() throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "diff": ["-  public void testParseProject() throws IOException, MalformedProjectFileException {", "+  public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException {", "-      \"   (file (name \\\"sexp/Atom.java\\\")(select 32 32))\\n\" +", "-      \"   (file (name \\\"sexp/BoolAtom.java\\\")(select 0 0))\\n\" +", "-      \"   (file (name \\\"sexp/Cons.java\\\")(select 0 0))\\n\" +", "-      \"   (file (name \\\"sexp/Empty.java\\\")(select 24 28)(active))\\n\" +", "-      \"   (file (name \\\"sexp/Lexer.java\\\")(select 0 0))\\n\" +", "-      \"   (file (name \\\"sexp/NumberAtom.java\\\")(select 12 12))\\n\" +", "-      \"   (file (name \\\"sexp/SEList.java\\\")(select 0 0)))\\n\" +", "+      \"   (file (name \\\"sexp/Atom.java\\\")(select 32 32)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/BoolAtom.java\\\")(select 0 0)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/Cons.java\\\")(select 0 0)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/Empty.java\\\")(select 24 28)(mod-date \\\"16-Jul-2004 03:45:23\\\")(active))\\n\" +", "+      \"   (file (name \\\"sexp/Lexer.java\\\")(select 0 0)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/NumberAtom.java\\\")(select 12 12)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/SEList.java\\\")(select 0 0)))\\n\" + // doesn't have mod date", "-      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"junk/sexp/Tokens.java\").getCanonicalPath()) +\")(select 32 32))\\n\" +", "-      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"jdk1.5.0/JScrollPane.java\").getCanonicalPath()) +\")(select 9086 8516)))\\n\" +", "+      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"junk/sexp/Tokens.java\").getCanonicalPath()) +\")(select 32 32)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"jdk1.5.0/JScrollPane.java\").getCanonicalPath()) +\")(select 9086 8516)(mod-date \\\"16-Jul-2004 03:45:23\\\")))\\n\" +", "+    assertEquals(\"mod-date value\", ", "+                 new SimpleDateFormat(\"dd-MMM-yyyy HH:mm:ss\").parse(\"16-Jul-2004 03:45:23\").getTime(),", "+                 pfir.getSourceFiles()[0].getSavedModDate());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edf555e059ddce27b54841885e09b09c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "bacc5763617209be5cfc431d0c6a4d3d11d90cf0", "commitAfterChange": "cf9808a938fc5315d4aeb4ec51fe1039c1a26dfa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testParseProject() throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public void testParseProject() throws IOException, MalformedProjectFileException", "diff": ["-    String proj1 = ", "+    String proj1 =", "-      \"   (file (name \\\"\"+absp+\"junk/sexp/Tokens.java\\\")(select 32 32))\\n\" +", "-      \"   (file (name \\\"\"+absp+\"java/Linux-i686/jdk1.5.0/src/javax/swing/JScrollPane.java\\\")(select 9086 8516)))\\n\" +", "+      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"junk/sexp/Tokens.java\").getCanonicalPath()) +\")(select 32 32))\\n\" +", "+      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"jdk1.5.0/JScrollPane.java\").getCanonicalPath()) +\")(select 9086 8516)))\\n\" +", "-      \"   (file (name \\\"\"+absp+\"drjava/built\\\")))\\n\" +", "-      \"(classpaths\\n\" + ", "-      \"   (file (name \\\"\"+absp+\"drjava/src/edu/rice/cs/lib\\\")))\\n\" + ", "+      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"drjava/built\").getCanonicalPath()) + \")))\\n\" +", "+      \"(classpaths\\n\" +", "+      \"   (file (name \"+ProjectFileBuilder.convertToLiteral(new File(absp,\"drjava/src/edu/rice/cs/lib\").getCanonicalPath()) + \")))\\n\" +", "-    ", "+", "-    assertEquals(\"first source filename\", base+\"/sexp/Atom.java\", pfir.getSourceFiles()[0].getPath());", "-    assertEquals(\"last source filename\", base+\"/sexp/SEList.java\", pfir.getSourceFiles()[6].getPath());", "-    assertEquals(\"first aux filename\", \"\"+absp+\"junk/sexp/Tokens.java\", pfir.getAuxiliaryFiles()[0].getPath());", "+    assertEquals(\"first source filename\", new File(base,\"/sexp/Atom.java\").getPath(), pfir.getSourceFiles()[0].getPath());", "+    assertEquals(\"last source filename\", new File(base,\"/sexp/SEList.java\").getPath(), pfir.getSourceFiles()[6].getPath());", "+    assertEquals(\"first aux filename\", new File(absp,\"junk/sexp/Tokens.java\").getPath(), pfir.getAuxiliaryFiles()[0].getCanonicalPath());", "-    assertEquals(\"build-dir name\", \"\"+absp+\"drjava/built\", pfir.getBuildDirectory().getPath());", "-    assertEquals(\"classpath name\", \"\"+absp+\"drjava/src/edu/rice/cs/lib\", pfir.getClasspaths()[0].getPath());", "-    assertEquals(\"main-class name\", base+\"/sexp/SEList.java\", pfir.getMainClass().getPath());", "-    ", "+    assertEquals(\"build-dir name\", new File(absp,\"drjava/built\").getPath(), pfir.getBuildDirectory().getCanonicalPath());", "+    assertEquals(\"classpath name\", new File(absp,\"drjava/src/edu/rice/cs/lib\").getPath(), pfir.getClasspaths()[0].getCanonicalPath());", "+    assertEquals(\"main-class name\", new File(base,\"/sexp/SEList.java\").getCanonicalPath(), pfir.getMainClass().getCanonicalPath());", "+"]}], "num": 125}