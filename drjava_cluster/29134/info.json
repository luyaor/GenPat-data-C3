{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4885d5a8945938bc75dd7b3306e4af6c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35c93de70d5db5c6d9a4cfd0d4439e56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "fb8ddcbfd71bd75d2b307b4e83f7a834ec364082", "commitAfterChange": "be84679bc73e85f88d6958fbfdf8b35be73855ab", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 71, "signatureBeforeChange": "   private Value _convertToActualType(ThreadReference threadRef, LocalVariable localVar,                                       Value v)     throws InvalidTypeException, ClassNotLoadedException,      IncompatibleThreadStateException, AbsentInformationException,      InvocationException", "signatureAfterChange": "   private Value _convertToActualType(ThreadReference threadRef, LocalVariable localVar,                                       Value v)     throws InvalidTypeException, ClassNotLoadedException,      IncompatibleThreadStateException, AbsentInformationException,      InvocationException", "diff": ["-    String typeSignature = localVar.type().signature();", "+    String typeSignature;", "+    try {", "+      typeSignature = localVar.type().signature();", "+    }", "+    catch (ClassNotLoadedException cnle) {", "+      return v;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98dbc1e143e2df3421df3c891b4211e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/Indenter.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void buildTree(int indentLevel)", "signatureAfterChange": "   public void buildTree(int indentLevel)", "diff": ["-", "-    boolean autoCloseComments = DrJava.getConfig().getSetting(OptionConstants.AUTO_CLOSE_COMMENTS).booleanValue();", "+    ", "+    boolean autoCloseComments = false;", "+    try { autoCloseComments = DrJava.getConfig().getSetting(OptionConstants.AUTO_CLOSE_COMMENTS).booleanValue(); }", "+    catch(Exception e) { /* ignore */ }  // some unit tests produce NullPointer exceptions in preceding line"]}], "num": 29134}