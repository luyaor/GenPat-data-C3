{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bdc7c66a1c16fc7c5b547de5754a5ece", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f766d332493245b90a3674f35b2f857", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/PathClassLoaderTest.java", "commitBeforeChange": "c600519b6859da4af01c52410f91013b1bbd745a", "commitAfterChange": "7f9f9a0527fe13a3dbec8283aa5b08139cfc594b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testNestedLoaders() throws Exception", "signatureAfterChange": "      public void testNestedLoaders() throws Exception", "diff": ["-    assertLoadsClassAsLoader(l, \"IntBox\");", "-    assertDoesNotLoadClass(l, \"A\");", "-    assertDoesNotLoadClass(l, \"B\");", "-    assertDoesNotLoadClass(l, \"C\");", "+    assertLoadsClassAsLoader(l, \"pkg.IntBox\");", "+    assertDoesNotLoadClass(l, \"pkg.A\");", "+    assertDoesNotLoadClass(l, \"bpkg.B\");", "+    assertDoesNotLoadClass(l, \"pkg.C\");", "-    assertLoadsSameClass(l, lA, \"IntBox\");", "-    assertLoadsClassAsLoader(lA, \"A\");", "-    assertDoesNotLoadClass(lA, \"B\");", "-    assertDoesNotLoadClass(lA, \"C\");", "+    assertLoadsSameClass(l, lA, \"pkg.IntBox\");", "+    assertLoadsClassAsLoader(lA, \"pkg.A\");", "+    assertDoesNotLoadClass(lA, \"bpkg.B\");", "+    assertDoesNotLoadClass(lA, \"pkg.C\");", "-    assertLoadsSameClass(l, lB, \"IntBox\");", "-    assertLoadsSameClass(lA, lB, \"A\");", "-    assertLoadsClassAsLoader(lB, \"B\");", "-    assertDoesNotLoadClass(lB, \"C\");", "+    assertLoadsSameClass(l, lB, \"pkg.IntBox\");", "+    assertLoadsSameClass(lA, lB, \"pkg.A\");", "+    assertLoadsClassAsLoader(lB, \"bpkg.B\");", "+    assertDoesNotLoadClass(lB, \"pkg.C\");", "-    assertLoadsSameClass(l, lC, \"IntBox\");", "-    assertLoadsSameClass(lA, lC, \"A\");", "-    assertLoadsSameClass(lB, lC, \"B\");", "-    assertLoadsClassAsLoader(lC, \"C\");", "+    assertLoadsSameClass(l, lC, \"pkg.IntBox\");", "+    assertLoadsSameClass(lA, lC, \"pkg.A\");", "+    assertLoadsSameClass(lB, lC, \"bpkg.B\");", "+    assertLoadsClassAsLoader(lC, \"pkg.C\");", "-    assertLoadsSameClass(l, lD, \"IntBox\");", "-    assertLoadsSameClass(lA, lD, \"A\");", "-    assertLoadsSameClass(lB, lD, \"B\");", "-    assertLoadsSameClass(lC, lD, \"C\");", "+    assertLoadsSameClass(l, lD, \"pkg.IntBox\");", "+    assertLoadsSameClass(lA, lD, \"pkg.A\");", "+    assertLoadsSameClass(lB, lD, \"bpkg.B\");", "+    assertLoadsSameClass(lC, lD, \"pkg.C\");", "-    assertCanGet(lD, \"A\", 1);", "+    assertCanGet(lD, \"pkg.A\", 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7678918f5c22bffe8d1837d5ae1708e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "c767fd7ac698a252b2acccd30077ab91751fe069", "commitAfterChange": "41dbd1f79552ad2c4983397e3a693dbde7c41bb5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testIndentInfoSquiggly() throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoSquiggly() throws BadLocationException", "diff": ["-    assertEquals(\"1.0\", noBrace, ii.braceType);", "-    assertEquals(\"1.1\", -1, ii.distToNewline);", "-    assertEquals(\"1.2\", -1, ii.distToBrace);", "-    assertEquals(\"1.3\", -1, ii.distToPrevNewline);", "+    _assertIndentInfo(ii, noBrace, -1, -1, -1);", "-    assertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "+    _assertContents(\"\\n\", doc);", "-    assertEquals(\"2.0\", noBrace, ii.braceType);", "-    assertEquals(\"2.1\", -1, ii.distToNewline);", "-    assertEquals(\"2.2\", -1, ii.distToBrace);", "-    assertEquals(\"2.3\", 0, ii.distToPrevNewline);", "+    _assertIndentInfo(ii, noBrace, -1, -1, 0);", "-    assertEquals(\"0.2\", \"{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    _assertContents(\"{\\n\\n\\n\", doc);", "-    assertEquals(\"3.0\", openSquiggly, ii.braceType);", "-    assertEquals(\"3.2\", 3, ii.distToBrace);", "-    assertEquals(\"3.1\", -1, ii.distToNewline);", "-    assertEquals(\"3.3\", 0, ii.distToPrevNewline);", "+    _assertIndentInfo(ii, openSquiggly, -1, 3, 0);", "-    assertEquals(\"0.3\", \"{\\n\\n{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    _assertContents(\"{\\n\\n{\\n\\n\\n\", doc);", "-    assertEquals(\"4.0\", openSquiggly, ii.braceType);", "-    assertEquals(\"4.1\", 3, ii.distToNewline);", "-    assertEquals(\"4.2\", 3, ii.distToBrace);", "-    assertEquals(\"4.3\", 0, ii.distToPrevNewline);", "+    _assertIndentInfo(ii, openSquiggly, 3, 3, 0);", "-    assertEquals(\"0.4\", \"{\\n\\n{\\n\\n  {\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    _assertContents(\"{\\n\\n{\\n\\n  {\\n\\n\\n\", doc);", "-    assertEquals(\"5.0\", openSquiggly, ii.braceType);", "-    assertEquals(\"5.1\", 5, ii.distToNewline);", "-    assertEquals(\"5.2\", 3, ii.distToBrace);", "-    assertEquals(\"5.3\", 0, ii.distToPrevNewline);", "+    _assertIndentInfo(ii, openSquiggly, 5, 3, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbc11a2b589e8eb8e2518250788dc544", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "c767fd7ac698a252b2acccd30077ab91751fe069", "commitAfterChange": "41dbd1f79552ad2c4983397e3a693dbde7c41bb5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testIndentInfoSquiggly() throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoSquiggly() throws BadLocationException", "diff": ["-    assertEquals(\"1.0\", noBrace, ii.braceType);", "-    assertEquals(\"1.1\", -1, ii.distToNewline);", "-    assertEquals(\"1.2\", -1, ii.distToBrace);", "-    assertEquals(\"1.3\", -1, ii.distToPrevNewline);", "+    _assertIndentInfo(ii, noBrace, -1, -1, -1);", "-    assertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "+    _assertContents(\"\\n\", doc);", "-    assertEquals(\"2.0\", noBrace, ii.braceType);", "-    assertEquals(\"2.1\", -1, ii.distToNewline);", "-    assertEquals(\"2.2\", -1, ii.distToBrace);", "-    assertEquals(\"2.3\", 0, ii.distToPrevNewline);", "+    _assertIndentInfo(ii, noBrace, -1, -1, 0);", "-    assertEquals(\"0.2\", \"{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    _assertContents(\"{\\n\\n\\n\", doc);", "-    assertEquals(\"3.0\", openSquiggly, ii.braceType);", "-    assertEquals(\"3.2\", 3, ii.distToBrace);", "-    assertEquals(\"3.1\", -1, ii.distToNewline);", "-    assertEquals(\"3.3\", 0, ii.distToPrevNewline);", "+    _assertIndentInfo(ii, openSquiggly, -1, 3, 0);", "-    assertEquals(\"0.3\", \"{\\n\\n{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    _assertContents(\"{\\n\\n{\\n\\n\\n\", doc);", "-    assertEquals(\"4.0\", openSquiggly, ii.braceType);", "-    assertEquals(\"4.1\", 3, ii.distToNewline);", "-    assertEquals(\"4.2\", 3, ii.distToBrace);", "-    assertEquals(\"4.3\", 0, ii.distToPrevNewline);", "+    _assertIndentInfo(ii, openSquiggly, 3, 3, 0);", "-    assertEquals(\"0.4\", \"{\\n\\n{\\n\\n  {\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    _assertContents(\"{\\n\\n{\\n\\n  {\\n\\n\\n\", doc);", "-    assertEquals(\"5.0\", openSquiggly, ii.braceType);", "-    assertEquals(\"5.1\", 5, ii.distToNewline);", "-    assertEquals(\"5.2\", 3, ii.distToBrace);", "-    assertEquals(\"5.3\", 0, ii.distToPrevNewline);", "+    _assertIndentInfo(ii, openSquiggly, 5, 3, 0);"]}], "num": 19461}