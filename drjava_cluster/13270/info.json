{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15f900c4bf0e1e507e4749a723cfb06f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b911fe9df20e0f602c677f9c49d3f27e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "8cb3141a044af3c7f18d018980f5a22b0b342ea8", "commitAfterChange": "3c8d894853a99e6e32b5d7c276413441b9c000ec", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public void junitJVMReady()", "signatureAfterChange": "   public void junitJVMReady()", "diff": ["-    if (! _testInProgress) return;", "-    ", "-    JUnitError[] errors = new JUnitError[1];", "-    errors[0] = new JUnitError(\"Previous test suite was interrupted\", true, \"\");", "-    _junitErrorModel = new JUnitErrorModel(errors, _model, true);", "-    _notifyJUnitEnded();", "-    _testInProgress = false;", "+    Utilities.invokeLater(new Runnable() { public void run() { ", "+      if (! _testInProgress) return;", "+      ", "+      JUnitError[] errors = new JUnitError[1];", "+      errors[0] = new JUnitError(\"Previous test suite was interrupted\", true, \"\");", "+      _junitErrorModel = new JUnitErrorModel(errors, _model, true);", "+      _notifyJUnitEnded();", "+      _testInProgress = false;", "+    }});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c427061c346e0e288c00bc92ead6ae77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void junitJVMReady()", "signatureAfterChange": "   public void junitJVMReady()", "diff": ["-   */", "+  /** Called when the JVM used for unit tests has registered. */", "-    if (_isTestInProgress) {", "-      JUnitError[] errors = new JUnitError[1];", "-      errors[0] = new JUnitError(\"Previous test was interrupted\", true, \"\");", "-      _junitErrorModel = new JUnitErrorModel(errors, _getter, true);", "-      ", "-      synchronized(this) { // make sure junitStarted isn't being called", "-        _isTestInProgress = false;", "-        _notifier.junitEnded();", "-      }", "-    }", "+    synchronized (this) { if (! _testInProgress) return; }", "+    JUnitError[] errors = new JUnitError[1];", "+    errors[0] = new JUnitError(\"Previous test was interrupted\", true, \"\");", "+    _junitErrorModel = new JUnitErrorModel(errors, _getter, true);", "+    _notifier.junitEnded();", "+    synchronized (this) { _testInProgress = false; }"]}], "num": 13270}