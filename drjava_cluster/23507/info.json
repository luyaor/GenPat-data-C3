{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09e2c3379f1d773ab0d722907e456ec6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ef5bc8ce09b9fb6191052e1c1815dda", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public String getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)", "signatureAfterChange": "   public int getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)", "diff": ["-  public String getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)  {", "+  public int getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)  {", "+", "-    ", "-//        final Query key = new Query.IndentOfCurrStmt(pos, delims, whitespace);", "-//        final String cached = (String) _checkCache(key);", "-//        if (cached != null) return cached;", "+", "-        final String cached = (String) _checkCache(key);", "-        if (cached != null) return cached;", "+        final Integer cached = (Integer) _checkCache(key);", "+        if (cached != null) return cached;  // relying on auto-unboxing", "-        String wSPrefix = getBlankString(firstNonWS - newLineStart);  // ensure that the wsPrefix only contains blanks", "-        _storeInCache(key, wSPrefix, firstNonWS);", "+        int wSPrefix = firstNonWS - newLineStart;", "+        _storeInCache(key, wSPrefix, firstNonWS);  // relying on autoboxing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "244d7fd8c7421394c16328ec114cb584", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public IndentInfo getIndentInformation()", "signatureAfterChange": "   public IndentInfo _getIndentInformation()", "diff": ["-    // Check cache", "+  /* Performs same computation as getIndentInformation, except it assumes that the read lock is alreay held. */", "+  public IndentInfo _getIndentInformation() {", "+    // check cache", "+    final int pos = _currentLocation;", "+    Query key = new Query.IndentInformation(pos);", "+    IndentInfo cached = (IndentInfo) _checkCache(key);", "+    if (cached != null) return cached; ", "-    acquireReadLock();", "-    try {", "-      final int pos = _currentLocation;", "-      Query key = new Query.IndentInformation(pos);", "-      ", "-      IndentInfo cached = (IndentInfo) _checkCache(key);", "-      if (cached != null) return cached; ", "-      synchronized(_reduced) { ", "-        info = _reduced.getIndentInformation(); ", "-      } ", "-      _storeInCache(key, info, pos - 1);", "-      ", "-      return info;", "-    }", "-    finally { releaseReadLock(); }  ", "+    synchronized(_reduced) { info = _reduced.getIndentInformation(); } ", "+    _storeInCache(key, info, pos - 1);", "+    ", "+    return info;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c77d2458034860e1850f6448ee06ccb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "47940fe74faf2ed044539c32c4d2eb5e5171e259", "commitAfterChange": "0d0c5947e7ead7115690128690c9c431a119fb4d", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public String getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)", "signatureAfterChange": "   public String getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)", "diff": ["-        ", "-        String lineText;", "-        ", "+", "-        int lineStartStmt = getLineStartPos(nextNonWSChar);", "+        int newLineStart = getLineStartPos(nextNonWSChar);", "-        // Get the position of the first non-ws character on this line", "-        int lineFirstNonWS = getLineFirstCharPos(lineStartStmt);", "-        lineText = getText(lineStartStmt, lineFirstNonWS - lineStartStmt);", "-        _storeInCache(key, lineText, Math.max(lineStart, 0));", "-        return lineText;", "+        // Get the position of the first non-ws character on this line (or end of line if no such char", "+        int firstNonWS = getLineFirstCharPos(newLineStart);", "+        String wSPrefix = getBlankString(firstNonWS - newLineStart);  // ensure that the wsPrefix only contains blanks", "+        _storeInCache(key, wSPrefix, firstNonWS);", "+        return wSPrefix;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a2cb93ebad5a10db43c4c7b18e7682", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "b17c3d3d0edf27a5d35f38839287840198b5808d", "commitAfterChange": "80e5b2a4860b03c09786e96e9454b1209681f568", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public String getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)", "signatureAfterChange": "   public String getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)", "diff": ["-    // Check cache", "-    final Query key = new Query.IndentOfCurrStmt(pos, delims, whitespace);", "-    final String cached = (String) _checkCache(key);", "-    if (cached != null) return cached;", "-    ", "-    String lineText;", "-    ", "+   ", "+//        final Query key = new Query.IndentOfCurrStmt(pos, delims, whitespace);", "+//        final String cached = (String) _checkCache(key);", "+//        if (cached != null) return cached;", "+        ", "-        // Get the start of the current line", "-        int lineStart = getLineStartPos(pos);", "+        // Check cache", "+        int lineStart = getLineStartPos(pos);  // returns 0 for initial line", "+        final Query key = new Query.IndentOfCurrStmt(lineStart, delims, whitespace);", "+        final String cached = (String) _checkCache(key);", "+        if (cached != null) return cached;", "+        ", "+        String lineText;", "+                ", "-        _storeInCache(key, lineText, pos - 1);", "+        _storeInCache(key, lineText, Math.max(lineStart, 0));", "+        return lineText;", "-//    Utilities.show(\"getIdentCurrStmt(...) call completed\");    ", "-    return lineText;", "+//    Utilities.show(\"getIdentCurrStmt(...) call completed\");     "]}], "num": 23507}