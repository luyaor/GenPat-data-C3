{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06b673bad4b3a1816c5bee31b00f7347", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33e3a7a4cb5004e5d903e51f863e6453", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testCreateManualToolbarButton()", "signatureAfterChange": "   public void testCreateManualToolbarButton()", "diff": ["-    Action a = new AbstractAction(\"Test Action\") { public void actionPerformed(ActionEvent ae) { } };", "+    final Action a = new AbstractAction(\"Test Action\") { public void actionPerformed(ActionEvent ae) { } };", "-    JButton b = _frame._createManualToolbarButton(a);", "+    Utilities.invokeAndWait(new Runnable() { public void run() { _but = _frame._createManualToolbarButton(a); } });", "-    assertTrue(\"Returned JButton is enabled.\", ! b.isEnabled());", "-    assertEquals(\"Tooltip text not set.\", \"test tooltip\", b.getToolTipText());", "-//    _log.log(\"testCreateManualToobarButton completed\");", "+    assertTrue(\"Returned JButton is enabled.\", ! _but.isEnabled());", "+    assertEquals(\"Tooltip text not set.\", \"test tooltip\", _but.getToolTipText());", "+    _log.log(\"testCreateManualToobarButton completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35f325b907076ac512064156252f03f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected OpenDefinitionsDocument setupDocument(String text) throws BadLocationException", "signatureAfterChange": "   protected OpenDefinitionsDocument setupDocument(String text) throws BadLocationException", "diff": ["-    OpenDefinitionsDocument doc = _model.newFile();", "+    Utilities.invokeAndWait(new Runnable() { public void run () { _doc = _model.newFile(); } });", "+    ", "-    assertLength(0, doc);", "-    assertModified(false, doc);", "+    assertLength(0, _doc);", "+    assertModified(false, _doc);", "-    changeDocumentText(text, doc);", "-    assertModified(true, doc);", "+    changeDocumentText(text, _doc);", "+    assertModified(true, _doc);", "-    return doc;", "+    return _doc;"]}], "num": 26638}