{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91101a9a2ac4eecc51b2fc0e41d08d38", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a75f12c89f4f2cea29f2722b305159", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 172, "methodNumberAfterChange": 207, "signatureBeforeChange": "   public static <T> SizedIterable<T>   asIterable(Sextet<? extends T, ? extends T, ? extends T, ? extends T, ? extends T, ? extends T> tuple)", "signatureAfterChange": "   public static <T> SizedIterable<T>   toIterable(Sextet<? extends T, ? extends T, ? extends T, ? extends T, ? extends T, ? extends T> tuple)", "diff": ["-  asIterable(Sextet<? extends T, ? extends T, ? extends T, ? extends T, ? extends T, ? extends T> tuple) {", "+  toIterable(Sextet<? extends T, ? extends T, ? extends T, ? extends T, ? extends T, ? extends T> tuple) {", "-    return new ObjectArrayWrapper<T>(values);", "+    return new ObjectArrayWrapper<T>(values, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5ab3191fddcdba130a4c7a7641bd8a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 208, "signatureBeforeChange": "   public static <T> SizedIterable<T>   asIterable(Septet<? extends T, ? extends T, ? extends T, ? extends T, ? extends T, ? extends T, ? extends T> tuple)", "signatureAfterChange": "   public static <T> SizedIterable<T>   toIterable(Septet<? extends T, ? extends T, ? extends T, ? extends T, ? extends T, ? extends T, ? extends T> tuple)", "diff": ["-  asIterable(Septet<? extends T, ? extends T, ? extends T, ? extends T, ? extends T, ? extends T, ? extends T> tuple) {", "+  toIterable(Septet<? extends T, ? extends T, ? extends T, ? extends T, ? extends T, ? extends T, ? extends T> tuple) {", "-    return new ObjectArrayWrapper<T>(values);", "+    return new ObjectArrayWrapper<T>(values, false);"]}], "num": 20155}