{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85e5f12ac8d9ed658a68d77ca2082046", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31a080f9a590da0fc3fe0653e3256280", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "80409edd2937e2ffd25d6f924b225a912cebbe30", "commitAfterChange": "24d7e06348270bf19caad633e3b0f236f8140fab", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void setSearchBackwards(boolean searchBackwards)", "signatureAfterChange": "    public void setSearchBackwards(boolean searchBackwards)", "diff": ["+    if (_searchBackwards != searchBackwards) {", "+      int len = _findWord.length();", "+      // If we switch from searching forward to searching backwards,", "+      // isOnMatch is true, and _findword is the same as the _lastFindWord,", "+      // we know the user just found _findWord, so skip one find.", "+      if (isOnMatch() && _findWord.equals(_lastFindWord)) {", "+        _skipOneFind = true;", "+      }", "+    }        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc43c93f0aac1fb66282e13e358e57d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "a2b28a9213fa3cc634db7fda88e14ebb0a103974", "commitAfterChange": "56df485f00337d373f1f0b94fc58f7c7b8b714d4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void setSearchBackwards(boolean searchBackwards)", "signatureAfterChange": "      public void setSearchBackwards(boolean searchBackwards)", "diff": ["-  public void setSearchBackwards(boolean searchBackwards) {", "-    if (_searchBackwards != searchBackwards) {", "-      // If we switch from searching forward to searching backwards,", "-      // isOnMatch is true, and _findword is the same as the _lastFindWord,", "-      // we know the user just found _findWord, so skip one find.", "-      if (isOnMatch() && _findWord.equals(_lastFindWord)) {", "-        _skipOneFind = true;", "-      }", "-    this._searchBackwards = searchBackwards;", "-  }", "+", "+    public void setSearchBackwards(boolean searchBackwards) {", "+        _state.setSearchBackwards(searchBackwards);", "+", "+    }"]}], "num": 23537}