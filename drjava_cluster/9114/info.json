{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c263814ca919825813f378bd4c8e3be", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ad36b27c6fd896fd5ebacabea11626c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void testInsertGapInsideGap()", "signatureAfterChange": " \tpublic void testInsertGapInsideGap()", "diff": ["+\t/**Inserts one gap inside of the other*/", "-\t\t\tassertTrue(\"#0.0\", model1.getCursor().atEnd());", "-\t\t\tassertTrue(\"#0.1\", model1.getCursor().prevItem().isGap());", "-\t\t\tassertEquals(\"#0.2\", 3, model1.getCursor().prevItem().getSize());\t\t\t", "-\t\t\tmodel1.getCursor().prev();", "+\t\t\tassertTrue(\"#0.0\", model1.atEnd());", "+\t\t\tmodel1.move(-3);", "+\t\t\tassertTrue(\"#0.1\", model1.currentToken().isGap());", "+\t\t\tassertEquals(\"#0.2\", 3, model1.currentToken().getSize());\t\t\t", "-\t\t\tassertTrue(\"#1.0\", model1.getCursor().atLastItem());", "-\t\t\tassertTrue(\"#1.1\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#1.2\", 6, model1.getCursor().current().getSize());", "-\t\t\tassertEquals(\"#1.3\", 3, model1.getBlockOffset());", "-\t\t\tmodel1.insertGap(3);", "-\t\t\tassertTrue(\"#1.0\", model1.getCursor().atLastItem());", "-\t\t\tassertTrue(\"#1.1\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#1.2\", 9, model1.getCursor().current().getSize());", "-\t\t\tassertEquals(\"#1.3\", 6, model1.getBlockOffset());\t\t\t", "+\t\t\tassertTrue(\"#1.1\", model1.currentToken().isGap());", "+\t\t\tassertEquals(\"#1.2\", 6, model1.currentToken().getSize());", "+\t\t\tassertEquals(\"#1.3\", 3, model1.absOffset());", "+\t\t\tmodel1.insertGap(4);", "+\t\t\tassertTrue(\"#1.1\", model1.currentToken().isGap());", "+\t\t\tassertEquals(\"#1.2\", 10, model1.currentToken().getSize());", "+\t\t\tassertEquals(\"#1.3\", 7, model1._offset);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58c02ba36440ccd3ced88e44b211146f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void testInsertGapInsideGap()", "signatureAfterChange": " \tpublic void testInsertGapInsideGap()", "diff": ["+\t/**Inserts one gap inside of the other*/", "-\t\t\tassertTrue(\"#0.0\", model1.getCursor().atEnd());", "-\t\t\tassertTrue(\"#0.1\", model1.getCursor().prevItem().isGap());", "-\t\t\tassertEquals(\"#0.2\", 3, model1.getCursor().prevItem().getSize());\t\t\t", "-\t\t\tmodel1.getCursor().prev();", "+\t\t\tassertTrue(\"#0.0\", model1.atEnd());", "+\t\t\tmodel1.move(-3);", "+\t\t\tassertTrue(\"#0.1\", model1.currentToken().isGap());", "+\t\t\tassertEquals(\"#0.2\", 3, model1.currentToken().getSize());\t\t\t", "-\t\t\tassertTrue(\"#1.0\", model1.getCursor().atLastItem());", "-\t\t\tassertTrue(\"#1.1\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#1.2\", 6, model1.getCursor().current().getSize());", "-\t\t\tassertEquals(\"#1.3\", 3, model1.getBlockOffset());", "-\t\t\tmodel1.insertGap(3);", "-\t\t\tassertTrue(\"#1.0\", model1.getCursor().atLastItem());", "-\t\t\tassertTrue(\"#1.1\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#1.2\", 9, model1.getCursor().current().getSize());", "-\t\t\tassertEquals(\"#1.3\", 6, model1.getBlockOffset());\t\t\t", "+\t\t\tassertTrue(\"#1.1\", model1.currentToken().isGap());", "+\t\t\tassertEquals(\"#1.2\", 6, model1.currentToken().getSize());", "+\t\t\tassertEquals(\"#1.3\", 3, model1.absOffset());", "+\t\t\tmodel1.insertGap(4);", "+\t\t\tassertTrue(\"#1.1\", model1.currentToken().isGap());", "+\t\t\tassertEquals(\"#1.2\", 10, model1.currentToken().getSize());", "+\t\t\tassertEquals(\"#1.3\", 7, model1._offset);\t\t\t"]}], "num": 9114}