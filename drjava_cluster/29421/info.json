{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ef950b2299d008d78995e51a868c12c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "791a52c828ede654bfd431aaa0f5c953", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testStaticWatches() throws Exception", "signatureAfterChange": "   public void testStaticWatches() throws Exception", "diff": ["-    ", "+", "-    ", "+", "-    assertEquals(\"watch name incorrect\", \"foo\", watches.elementAt(0).getName());", "-    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.elementAt(1).getName());", "-    assertEquals(\"watch name incorrect\", \"twoDeepFoo\", watches.elementAt(2).getName());", "-    assertEquals(\"watch name incorrect\", \"threeDeepFoo\", watches.elementAt(3).getName());", "-    assertEquals(\"watch name incorrect\", \"asdf\", watches.elementAt(4).getName());", "-    assertEquals(\"watch value incorrect\", \"6\", watches.elementAt(0).getValue());", "-    assertEquals(\"watch value incorrect\", \"8\", watches.elementAt(1).getValue());", "-    assertEquals(\"watch value incorrect\", \"13\", watches.elementAt(2).getValue());", "-    assertEquals(\"watch value incorrect\", \"18\", watches.elementAt(3).getValue());", "-    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.elementAt(4).getValue());", "+    assertEquals(\"watch name incorrect\", \"foo\", watches.get(0).getName());", "+    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.get(1).getName());", "+    assertEquals(\"watch name incorrect\", \"twoDeepFoo\", watches.get(2).getName());", "+    assertEquals(\"watch name incorrect\", \"threeDeepFoo\", watches.get(3).getName());", "+    assertEquals(\"watch name incorrect\", \"asdf\", watches.get(4).getName());", "+    assertEquals(\"watch value incorrect\", \"6\", watches.get(0).getValue());", "+    assertEquals(\"watch value incorrect\", \"8\", watches.get(1).getValue());", "+    assertEquals(\"watch value incorrect\", \"13\", watches.get(2).getValue());", "+    assertEquals(\"watch value incorrect\", \"18\", watches.get(3).getValue());", "+    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.get(4).getValue());", "-    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.elementAt(1).getName());", "-    assertEquals(\"watch value incorrect\", \"0\", watches.elementAt(1).getValue());", "+    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.get(1).getName());", "+    assertEquals(\"watch value incorrect\", \"0\", watches.get(1).getValue());", "-    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.elementAt(1).getName());", "-    assertEquals(\"watch value incorrect\", \"8\", watches.elementAt(1).getValue());", "-    ", "+    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.get(1).getName());", "+    assertEquals(\"watch value incorrect\", \"8\", watches.get(1).getValue());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de7167bc3cd2023f502bd158f14caffe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "b128df4fa9d8df79a76ba9e19a170c160365e646", "commitAfterChange": "e16fd9dc1aa815e303a7aa80be407f3a031e237d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      public void testBookmark() throws Exception", "signatureAfterChange": "      public void testBookmark() throws Exception", "diff": ["-    Vector<DocumentRegion> bms = _model.getBookmarkManager().getRegions();", "+    Vector<OrderedDocumentRegion> bms = _model.getBookmarkManager().getRegions();", "-    assertEquals(\"Start offset should be \"+FOO_CLASS.indexOf('\\n'), FOO_CLASS.indexOf('\\n'), bms.get(0).getEndOffset());", "+    assertEquals(\"End offset should be \"+FOO_CLASS.indexOf('\\n'), FOO_CLASS.indexOf('\\n'), bms.get(0).getEndOffset());", "-    assertEquals(\"Start offset should be 6\", 6, bms.get(0).getEndOffset());", "+    assertEquals(\"End offset should be 6\", 6, bms.get(0).getEndOffset());", "+    // Note: bms is sorted by increasing (startOffset, endOffset)", "-    assertEquals(\"Start offset should be 6\", 6, bms.get(0).getEndOffset());", "+    assertEquals(\"End offset should be 6\", 6, bms.get(0).getEndOffset());", "-    assertEquals(\"Start offset should be 12\", 12, bms.get(1).getEndOffset());", "+    assertEquals(\"End offset should be 12\", 12, bms.get(1).getEndOffset());", "-    assertEquals(\"Start offset should be 6\", 6, bms.get(0).getEndOffset());", "-    assertEquals(\"Start offset should be 8\", 8, bms.get(1).getStartOffset());", "-    assertEquals(\"Start offset should be 12\", 12, bms.get(1).getEndOffset());", "-    assertEquals(\"Start offset should be 5\", 5, bms.get(2).getStartOffset());", "-    assertEquals(\"Start offset should be 10\", 10, bms.get(2).getEndOffset());", "+    assertEquals(\"End offset should be 6\", 6, bms.get(0).getEndOffset());", "+    assertEquals(\"Start offset should be 5\", 5, bms.get(1).getStartOffset());", "+    assertEquals(\"End offset should be 10\", 10, bms.get(1).getEndOffset());", "+    assertEquals(\"Start offset should be 8\", 8, bms.get(2).getStartOffset());", "+    assertEquals(\"End offset should be 12\", 12, bms.get(2).getEndOffset());", "-    assertEquals(\"Start offset should be 6\", 6, bms.get(0).getEndOffset());", "+    assertEquals(\"End offset should be 6\", 6, bms.get(0).getEndOffset());", "-    assertEquals(\"Start offset should be 10\", 10, bms.get(1).getEndOffset());", "+    assertEquals(\"End offset should be 10\", 10, bms.get(1).getEndOffset());", "-    assertEquals(\"Start offset should be 10\", 10, bms.get(0).getEndOffset());", "+    assertEquals(\"End offset should be 10\", 10, bms.get(0).getEndOffset());"]}], "num": 29421}