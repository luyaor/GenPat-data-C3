{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "895d848be40fdc80b1dc3a763b44b496", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "387c7519d548d4f6630717ce6003416e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": "    public void testGetSourceRootDefaultPackage()     throws BadLocationException, IOException, InvalidPackageException", "signatureAfterChange": "    public void testGetSourceRootDefaultPackage()     throws BadLocationException, IOException", "diff": ["-    throws BadLocationException, IOException, InvalidPackageException", "+    throws BadLocationException, IOException", "-    // Get current working directory", "-    File workDir = DrJava.getConfig().getSetting(WORKING_DIRECTORY);", "-        ", "-    if (workDir == FileOption.NULL_FILE) {", "-      workDir = new File( System.getProperty(\"user.dir\"));", "-    }", "-    if (workDir.isFile() && workDir.getParent() != null) {", "-      workDir = workDir.getParentFile();", "-    }", "-    ", "+    // Get current working directory (only used in the one test case, currently commented out)", "+//    File workDir = DrJava.getConfig().getSetting(WORKING_DIRECTORY);", "+//    if (workDir == FileOption.NULL_FILE) {", "+//      workDir = new File( System.getProperty(\"user.dir\"));", "+//    }", "+//    if (workDir.isFile() && workDir.getParent() != null) {", "+//      workDir = workDir.getParentFile();", "+//    }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "526c68136e1dad0903b959c2f8654537", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": "    public void testGetSourceRootPackageThreeDeepInvalid()     throws BadLocationException, IOException", "signatureAfterChange": "    public void testGetSourceRootPackageThreeDeepInvalid()     throws BadLocationException, IOException", "diff": ["-    ", "-    // Get current working directory", "-    File workDir = DrJava.getConfig().getSetting(WORKING_DIRECTORY);", "-        ", "-    if (workDir == FileOption.NULL_FILE) {", "-      workDir = new File( System.getProperty(\"user.dir\"));", "-    }", "-    if (workDir.isFile() && workDir.getParent() != null) {", "-      workDir = workDir.getParentFile();", "-    }", "+", "+    // Get current working directory, though not currently checked.", "+//    File workDir = DrJava.getConfig().getSetting(WORKING_DIRECTORY);", "+//", "+//    if (workDir == FileOption.NULL_FILE) {", "+//      workDir = new File( System.getProperty(\"user.dir\"));", "+//    }", "+//    if (workDir.isFile() && workDir.getParent() != null) {", "+//      workDir = workDir.getParentFile();", "+//    }"]}], "num": 9998}