{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf77b893b9259939c64ca6c250cfa23b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2a5e273433f1637ea5817194aa3dd1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "310f2e2e5bd03b1be3d582b8bb080b976b35e862", "commitAfterChange": "5ac038fd2393232341f24ed3abaede1deb4e977a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void junitAll(List<String> qualifiedClassnames, List<File> files)", "signatureAfterChange": "   public void junitAll(List<String> qualifiedClassnames, List<File> files)", "diff": ["-      try {", "-        List<String> testClasses = _jvm.findTestClasses(qualifiedClassnames, files);", "-        if (testClasses.isEmpty()) {", "-          nonTestCase(true);", "-          return;", "-        } ", "-        _notifier.junitAllStarted(); ", "-        _jvm.runTestSuite();", "+      List<String> testClasses;", "+      try { testClasses = _jvm.findTestClasses(qualifiedClassnames, files); }", "+      catch(IOException e) { throw new UnexpectedException(e); }", "+      ", "+      if (testClasses.isEmpty()) {", "+        nonTestCase(true);", "+        return;", "+      _notifier.junitAllStarted(); ", "+      try { _jvm.runTestSuite(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b24b8127d9873aaab56497cb16b0eaa9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/EagerFileListProperty.java", "commitBeforeChange": "f9b0aacda7d0b19ff2541b10e4df48c67eef3bf5", "commitAfterChange": "51d1f2e57f80c21afa7918fd2fa925d58d67589d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void update()", "signatureAfterChange": "   public void update()", "diff": ["+        try {", "+          f = f.getCanonicalFile();", "+        }", "+        catch(IOException ioe) { }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2ce6cdf78824eebcf2ce57e1eda9dff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "aa7731dd2e1401d2d7a2138058a2aae91b7b3cb6", "commitAfterChange": "442c59b932709a9e16b8bf4afb9e7306f5a80d8b", "methodNumberBeforeChange": 513, "methodNumberAfterChange": 513, "signatureBeforeChange": "   private void _showConfigException()", "signatureAfterChange": "   private void _showConfigException()", "diff": ["+      try {", "+        DrJava.getConfig().saveConfiguration();", "+      }", "+      catch(IOException ioe) { /* ignore */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb42197005988ac3ab69032783abf3e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDABreakpoint.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean isEnabled, JPDADebugger manager)     throws DebugException", "signatureAfterChange": "   public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean isEnabled, JPDADebugger manager)     throws DebugException", "diff": ["+    ", "+    try { _position = doc.createPosition(offset); }", "+    catch(BadLocationException e) { throw new UnexpectedException(e); }", "+    ", "-    catch (BadLocationException ble) { throw new UnexpectedException(ble); }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "-    if ((_manager != null) && (_manager.isReady())) {", "+    if (_manager != null && _manager.isReady()) {", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe6f69a50c4eb7e116e6bf49145ab4cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "5c952c5847e3008cec3ed5ff89d03d335c050f54", "commitAfterChange": "e3e56a8c058b51612dfa6f1f21259a37eadcdcbb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private void _calculatePositions()", "signatureAfterChange": "   private void _calculatePositions()", "diff": ["-        //Remember the indexes in the _errors and _positions arrays that are for errors in this file", "+        //Remember the indexes in the _errors and _positions arrays that ", "+        // are for the errors in this file", "-        if (fileEndIndex != fileStartIndex){", "+        if (fileEndIndex != fileStartIndex) {", "+          // Try to use the canonical file if possible", "+          try {", "+            file = file.getCanonicalFile();", "+          }", "+          catch (IOException ioe) {", "+            // Oh well, store it as is", "+          }", "-    } catch (BadLocationException ble) {", "+    }", "+    catch (BadLocationException ble) {"]}], "num": 320}