{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d399018c949733d6b92467f5baa5953", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09e5915641bfb76c3989a1d2ae76cc1a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/ComposedIterable.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "         public Integer value()", "signatureAfterChange": "      public int size(int bound)", "diff": ["-      _size = new Thunk<Integer>() {", "-        public Integer value() { return IterUtil.sizeOf(_i1) + IterUtil.sizeOf(_i2); }", "+  ", "+  public int size(int bound) {", "+    int result = (_i1Size < 0 ? IterUtil.sizeOf(_i1, bound) : _i1Size) +", "+                 (_i2Size < 0 ? IterUtil.sizeOf(_i2, bound) : _i2Size);", "+    if (result < 0) { result = Integer.MAX_VALUE; } // overflow", "+    return result <= bound ? result : bound;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0aadf93b28eb71ddb7e94a65bb49a3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/ComposedIterable.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public Integer value()", "signatureAfterChange": "      public int size()", "diff": ["-      _size = new Thunk<Integer>() {", "-        public Integer value() { return IterUtil.sizeOf(_i1) + size2; }", "+  public int size() {", "+    int result = (_i1Size < 0 ? IterUtil.sizeOf(_i1) : _i1Size) +", "+                 (_i2Size < 0 ? IterUtil.sizeOf(_i2) : _i2Size);", "+    if (result < 0) { result = Integer.MAX_VALUE; } // overflow", "+    return result;", "+  }"]}], "num": 1264}