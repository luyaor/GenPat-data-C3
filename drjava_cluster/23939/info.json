{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d83dfb0311411fcbb62c34aa56816827", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d9246f8f734ed32ce0ecc49862d9155", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "commitAfterChange": "4e52eec7688cbd5ec3584417f424923ba61a75e0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public SymbolData getSymbolData(String className, JExpression jexpr, boolean giveException, boolean runnableNotOkay)", "signatureAfterChange": "   public SymbolData getSymbolData(String className, JExpression jexpr, boolean giveException, boolean runnableNotOkay)", "diff": ["+    ", "+    // Create a dummy LLV; this seems awkward.  TODO:  refactor", "-                               new LinkedList<Command>());", "+                               new LinkedList<Command>(),", "+                               new HashMap<String, SymbolData>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f3b21d79e88a9437ba2139d70bbbd74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "commitAfterChange": "4e52eec7688cbd5ec3584417f424923ba61a75e0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public FullJavaVisitor(File file,                           String packageName,                           String enclosingClassName,                          LinkedList<String> importedFiles,                           LinkedList<String> importedPackages,                          HashSet<String> classesInThisFile,                           Hashtable<String, Triple<SourceInfo, LanguageLevelVisitor, SymbolData>> continuations,                          LinkedList<Command> fixUps)", "signatureAfterChange": "   public FullJavaVisitor(File file,                           String packageName,                           String enclosingClassName,                          LinkedList<String> importedFiles,                           LinkedList<String> importedPackages,                          HashSet<String> classesInThisFile,                           Hashtable<String, Triple<SourceInfo, LanguageLevelVisitor, SymbolData>> continuations,                          LinkedList<Command> fixUps)", "diff": ["-    */", "+  /** This constructor is called from sites where no generic type variables are in scope. */", "-    super(file, packageName, enclosingClassName, importedFiles, importedPackages, classesInThisFile, continuations, fixUps);", "+    this(file, packageName, enclosingClassName, importedFiles, importedPackages, classesInThisFile, continuations, ", "+         fixUps, new HashMap<String, SymbolData>());"]}], "num": 23939}