{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7f55fa74f8c7bdbeaf1473d2cb9598b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f5c3ad7097924fc38d6159155a1ffc1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "45f938e0ac0aa62921f2e8d3dd3a1115a8868aaf", "commitAfterChange": "f1270b4a562e0ecd61507987f82e57d121a23edd", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   private FindResult _findNextInAllDocs(AbstractDocumentInterface docToSearch, int start, int end) throws BadLocationException", "signatureAfterChange": "   private FindResult _findNextInAllDocs(AbstractDocumentInterface docToSearch, int start, int end) throws BadLocationException", "diff": ["-    _checkAllDocsWrapped = true;    ", "-    while (docToSearch != _doc) {", "-      if (docToSearch == _firstDoc) {", "-        _allDocsWrapped = true;", "-        _checkAllDocsWrapped = false;", "-      }", "-      ", "-      String text;", "-      int docLen;", "-      docToSearch.acquireReadLock();", "-      try { ", "-        docLen = docToSearch.getLength();", "-        text = docToSearch.getText(start, end);", "-      }", "-      finally { docToSearch.releaseReadLock(); }", "-      String findWord = _findWord;", "-      if (!_matchCase) {", "-        text = text.toLowerCase();", "-        findWord = findWord.toLowerCase();", "-      }", "-      int foundOffset = !_searchBackwards ? text.indexOf(findWord) : text.lastIndexOf(findWord);", "-      if (foundOffset >= 0) {", "-        int locationToIgnore = start + foundOffset;", "-        _model.getODDForDocument(docToSearch).setCurrentLocation(locationToIgnore);", "-        if (_shouldIgnore(locationToIgnore, docToSearch)) {", "-          foundOffset += start;", "-          if (!_searchBackwards) {", "-            foundOffset += findWord.length();", "+    boolean stillSearching = true;", "+    while(stillSearching) {", "+      stillSearching = false;", "+      _checkAllDocsWrapped = true;    ", "+      while (docToSearch != _doc) {", "+        if (docToSearch == _firstDoc) {", "+          _allDocsWrapped = true;", "+          _checkAllDocsWrapped = false;", "+        }", "+        ", "+        String text;", "+        int docLen;", "+        docToSearch.acquireReadLock();", "+        try { ", "+          docLen = docToSearch.getLength();", "+          text = docToSearch.getText(start, end);", "+        }", "+        finally { docToSearch.releaseReadLock(); }", "+        String findWord = _findWord;", "+        if (!_matchCase) {", "+          text = text.toLowerCase();", "+          findWord = findWord.toLowerCase();", "+        }", "+        int foundOffset = !_searchBackwards ? text.indexOf(findWord) : text.lastIndexOf(findWord);", "+        if (foundOffset >= 0) {", "+          int locationToIgnore = start + foundOffset;", "+          _model.getODDForDocument(docToSearch).setCurrentLocation(locationToIgnore);", "+          if (_shouldIgnore(locationToIgnore, docToSearch)) {", "+            foundOffset += start;", "+            if (!_searchBackwards) {", "+              foundOffset += findWord.length();", "+              _current = _doc.createPosition(foundOffset);", "+              start = foundOffset;", "+              end = docLen-foundOffset;", "+              stillSearching = true;", "+              break;", "+              // return _findNextInAllDocs(docToSearch, foundOffset, docLen-foundOffset);", "+            }", "-            return _findNextInAllDocs(docToSearch, foundOffset, docLen-foundOffset);", "-          }", "-          _current = _doc.createPosition(foundOffset);", "-          return _findNextInAllDocs(docToSearch, start, foundOffset-start);", "-        }       ", "-            ", "-        // We found it in a different document, put the caret at the end of the found word (if we're going forward).", "-        foundOffset += start;", "-        if (!_searchBackwards) foundOffset += findWord.length();", "-        return new FindResult(docToSearch, foundOffset, false, _allDocsWrapped);", "+            end = foundOffset-start;", "+            stillSearching = true;", "+            break;", "+            // return _findNextInAllDocs(docToSearch, start, foundOffset-start);", "+          }       ", "+          ", "+          // We found it in a different document, put the caret at the end of the found word (if we're going forward).", "+          foundOffset += start;", "+          if (!_searchBackwards) foundOffset += findWord.length();", "+          return new FindResult(docToSearch, foundOffset, false, _allDocsWrapped);", "+        }", "+        docToSearch = !_searchBackwards ? _docIterator.getNextDocument(docToSearch) :", "+          _docIterator.getPrevDocument(docToSearch);", "+        start = 0;", "+        end = docToSearch.getLength();", "-      docToSearch = !_searchBackwards ? _docIterator.getNextDocument(docToSearch) :", "-                                        _docIterator.getPrevDocument(docToSearch);", "-      start = 0;", "-      end = docToSearch.getLength();", "-  } ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9827d9945e7f054d93e09ff8b41c7440", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "45f938e0ac0aa62921f2e8d3dd3a1115a8868aaf", "commitAfterChange": "f1270b4a562e0ecd61507987f82e57d121a23edd", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   private FindResult _findNext(int start, int end)", "signatureAfterChange": "   private FindResult _findNext(int start, int end)", "diff": ["+    int foundOffset = -1;", "+    FindResult tempFr = new FindResult(_doc, -1, false, false);      ", "+      boolean stillSearching = true;", "+      while(stillSearching) {", "+        foundOffset = -1;", "+        tempFr = new FindResult(_doc, -1, false, false);      ", "+        stillSearching = false;", "-      FindResult tempFr = new FindResult(_doc, -1, false, false);      ", "-      int docLen;", "-      String findWord = _findWord;", "-      // get the search space in the document", "-      String findSpace;", "-      _doc.acquireReadLock();", "-      try {", "-        docLen = _doc.getLength();", "-        findSpace = _doc.getText(start, end);", "-      }", "-      finally { _doc.releaseReadLock(); }", "-      ", "-      if (!_matchCase) {", "-        findSpace = findSpace.toLowerCase();", "-        findWord = findWord.toLowerCase();", "-      }", "-      ", "-      // find the first occurrence of findWord", "-      int foundOffset;", "-      foundOffset = !_searchBackwards ? findSpace.indexOf(findWord) : findSpace.lastIndexOf(findWord);", "-          ", "-      if (foundOffset >= 0) {", "-        int locationToIgnore = foundOffset + start;", "-        _model.getODDForDocument(_doc).setCurrentLocation(locationToIgnore);", "-        if (_shouldIgnore(locationToIgnore, _doc)) {", "-          foundOffset += start;", "-          if (!_searchBackwards) {", "-            foundOffset += findWord.length();", "-            return _findNext(foundOffset, docLen-foundOffset);", "-          }", "-          return _findNext(start, foundOffset); //searching backwards", "-        }       ", "-        // otherwise we have found it", "-//        _found = true;", "-        foundOffset += start;", "-        if (!_searchBackwards) foundOffset += findWord.length();", "-        _current = _doc.createPosition(foundOffset);  // thread-safe operation on _doc", "-      }", "-      else { // we haven't found it yet", "-        if (_searchAllDocuments) {", "-          AbstractDocumentInterface nextDocToSearch;", "-          ", "-          nextDocToSearch = ", "-            (!_searchBackwards ? _docIterator.getNextDocument(_doc) : _docIterator.getPrevDocument(_doc));", "-          ", "-          tempFr = _findNextInAllDocs(nextDocToSearch, 0, nextDocToSearch.getLength());", "-          foundOffset = tempFr.getFoundOffset();", "+        int docLen;", "+        String findWord = _findWord;", "+        // get the search space in the document", "+        String findSpace;", "+        _doc.acquireReadLock();", "+        try {", "+          docLen = _doc.getLength();", "+          findSpace = _doc.getText(start, end);", "-        else { ", "-          _checkAllDocsWrapped = false;", "-          _allDocsWrapped = false;", "+        finally { _doc.releaseReadLock(); }", "+        ", "+        if (!_matchCase) {", "+          findSpace = findSpace.toLowerCase();", "+          findWord = findWord.toLowerCase();", "-        if (foundOffset == -1) {   // we still haven't found it            ", "-          if (!_searchBackwards) foundOffset = _findWrapped(0, _current.getOffset() + (_findWord.length() - 1));", "-          else {", "-            int startBackOffset = _current.getOffset() - (_findWord.length() - 1);", "-            foundOffset = _findWrapped(startBackOffset, docLen - startBackOffset);", "+        // find the first occurrence of findWord", "+        foundOffset = !_searchBackwards ? findSpace.indexOf(findWord) : findSpace.lastIndexOf(findWord);", "+        ", "+        if (foundOffset >= 0) {", "+          int locationToIgnore = foundOffset + start;", "+          _model.getODDForDocument(_doc).setCurrentLocation(locationToIgnore);", "+          if (_shouldIgnore(locationToIgnore, _doc)) {", "+            foundOffset += start;", "+            if (!_searchBackwards) {", "+              foundOffset += findWord.length();", "+              start = foundOffset;", "+              end = docLen-foundOffset;", "+              stillSearching = true;", "+              continue; ", "+              // return _findNext(foundOffset, docLen-foundOffset);", "+            }", "+            end = foundOffset;", "+            stillSearching = true;", "+            continue;", "+            // return _findNext(start, foundOffset); //searching backwards", "+          }       ", "+          // otherwise we have found it", "+//        _found = true;", "+          foundOffset += start;", "+          if (!_searchBackwards) foundOffset += findWord.length();", "+          _current = _doc.createPosition(foundOffset);  // thread-safe operation on _doc", "+        }", "+        else { // we haven't found it yet", "+          if (_searchAllDocuments) {", "+            AbstractDocumentInterface nextDocToSearch;", "+            ", "+            nextDocToSearch = ", "+              (!_searchBackwards ? _docIterator.getNextDocument(_doc) : _docIterator.getPrevDocument(_doc));", "+            ", "+            tempFr = _findNextInAllDocs(nextDocToSearch, 0, nextDocToSearch.getLength());", "+            foundOffset = tempFr.getFoundOffset();", "+          }", "+          else { ", "+            _checkAllDocsWrapped = false;", "+            _allDocsWrapped = false;", "+          }", "+          ", "+          if (foundOffset == -1) {   // we still haven't found it            ", "+            if (!_searchBackwards) foundOffset = _findWrapped(0, _current.getOffset() + (_findWord.length() - 1));", "+            else {", "+              int startBackOffset = _current.getOffset() - (_findWord.length() - 1);", "+              foundOffset = _findWrapped(startBackOffset, docLen - startBackOffset);", "+            }", "-      }", "-      ", "-      if (_checkAllDocsWrapped && tempFr.getDocument() == _firstDoc) {", "-        _allDocsWrapped = true;", "-        _checkAllDocsWrapped = false;", "-      }", "-      ", "-      FindResult fr = new FindResult(tempFr.getDocument(), foundOffset, _wrapped, _allDocsWrapped);", "-      _wrapped = false;", "-      if (_allDocsWrapped = true) _allDocsWrapped = false;", "-      return fr;", "+        ", "+        if (_checkAllDocsWrapped && tempFr.getDocument() == _firstDoc) {", "+          _allDocsWrapped = true;", "+          _checkAllDocsWrapped = false;", "+        }", "+      }        ", "+    FindResult fr = new FindResult(tempFr.getDocument(), foundOffset, _wrapped, _allDocsWrapped);", "+    _wrapped = false;", "+    _allDocsWrapped = false;", "+    return fr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be789e3522fb90fa06d9ede10a204aab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "45f938e0ac0aa62921f2e8d3dd3a1115a8868aaf", "commitAfterChange": "f1270b4a562e0ecd61507987f82e57d121a23edd", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   private int _findWrapped(int start, int end)", "signatureAfterChange": "   private int _findWrapped(int start, int end)", "diff": ["+    int foundOffset = -1;", "-      _wrapped = true;", "-      int docLen;", "-      String findSpace;", "-      ", "-      _doc.acquireReadLock();  ", "-      try { ", "-        docLen = _doc.getLength(); ", "-        if (!_searchBackwards) {", "-          if (end > docLen) end = docLen;", "-        }", "-              ", "-        else {  // searching backwards", "-          if (start < 0){ ", "-            start = 0;", "-            end = docLen;", "-          }", "-        }", "-        findSpace = _doc.getText(start, end);", "-      }", "-      finally { _doc.releaseReadLock(); }", "-      ", "-      String findWord = _findWord;", "-      ", "-      if (!_matchCase) {", "-        findSpace = findSpace.toLowerCase();", "-        findWord = findWord.toLowerCase();", "-      }", "-      ", "-      int foundOffset;", "-      foundOffset = !_searchBackwards ? findSpace.indexOf(findWord)", "-        : findSpace.lastIndexOf(findWord);", "-      ", "-      if (foundOffset >= 0) {", "-        int locationToIgnore = start + foundOffset;", "-        _model.getODDForDocument(_doc).setCurrentLocation(locationToIgnore);", "-        if (_shouldIgnore(locationToIgnore, _doc)) {", "-          foundOffset += start;", "+      boolean stillSearching = true;", "+      while(stillSearching) {", "+        stillSearching = false;", "+        _wrapped = true;", "+        int docLen;", "+        String findSpace;", "+        ", "+        _doc.acquireReadLock();  ", "+        try { ", "+          docLen = _doc.getLength(); ", "-            foundOffset += findWord.length();", "-            return _findWrapped(foundOffset, docLen-foundOffset);", "+            if (end > docLen) end = docLen;", "-          return _findWrapped(start, foundOffset-start);", "-        }       ", "-        // otherwise we have found it", "+          ", "+          else {  // searching backwards", "+            if (start < 0){ ", "+              start = 0;", "+              end = docLen;", "+            }", "+          }", "+          findSpace = _doc.getText(start, end);", "+        }", "+        finally { _doc.releaseReadLock(); }", "+        ", "+        String findWord = _findWord;", "+        ", "+        if (!_matchCase) {", "+          findSpace = findSpace.toLowerCase();", "+          findWord = findWord.toLowerCase();", "+        }", "+        ", "+        foundOffset = !_searchBackwards ? findSpace.indexOf(findWord)", "+          : findSpace.lastIndexOf(findWord);", "+        ", "+        if (foundOffset >= 0) {", "+          int locationToIgnore = start + foundOffset;", "+          _model.getODDForDocument(_doc).setCurrentLocation(locationToIgnore);", "+          if (_shouldIgnore(locationToIgnore, _doc)) {", "+            foundOffset += start;", "+            if (!_searchBackwards) {", "+              foundOffset += findWord.length();", "+              start = foundOffset;", "+              end = docLen-foundOffset;", "+              stillSearching = true;", "+              continue;", "+              // return _findWrapped(foundOffset, docLen-foundOffset);", "+            }", "+            end = foundOffset-start;", "+            stillSearching = true;", "+            continue;", "+            // return _findWrapped(start, foundOffset-start);", "+          }       ", "+          // otherwise we have found it", "-        foundOffset += start;", "-        if (!_searchBackwards) foundOffset += findWord.length();", "-        _current = _doc.createPosition(foundOffset);  // thread-safe operation on _doc", "+          foundOffset += start;", "+          if (!_searchBackwards) foundOffset += findWord.length();", "+          _current = _doc.createPosition(foundOffset);  // thread-safe operation on _doc", "+        }", "-      return foundOffset;", "-  }   ", "+    return foundOffset;", "+  }"]}], "num": 31188}