{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f4f12525ec2408675c76baf9eb4e797", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b78ec88f1e0133d2b01cf0271864bd47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void testIndentInfoBracket ()", "signatureAfterChange": "    public void testIndentInfoBracket () throws BadLocationException", "diff": ["+  public void testIndentInfoBracket () throws BadLocationException {", "+    // just bracket", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n[\\n\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openBracket, ii.braceType);", "+    assertEquals(\"1.1\", 2, ii.distToNewline);", "+    assertEquals(\"1.2\", 2, ii.distToBrace);", "-\tpublic void testIndentInfoBracket () {", "-\t\ttry {", "-\t\t\t// just bracket", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n[\\n\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openBracket, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", 2, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 2, ii.distToBrace);", "+    // bracket with stuff in front", "+    doc.insertString(1, \"  helo \", null);", "+    doc.move(2);", "+    // \\n  helo (\\n#", "+    assertEquals(\"0.1\", \"\\n  helo [\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"2.0\", openBracket, ii.braceType);", "+    assertEquals(\"2.1\", 9, ii.distToNewline);", "+    assertEquals(\"2.2\", 2, ii.distToBrace);", "-\t\t\t// bracket with stuff in front", "-\t\t\tdoc.insertString(1, \"  helo \", null);", "-\t\t\tdoc.move(2);", "-\t\t\t// \\n  helo (\\n#", "-\t\t\tassertEquals(\"0.1\", \"\\n  helo [\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"2.0\", openBracket, ii.braceType);", "-\t\t\tassertEquals(\"2.1\", 9, ii.distToNewline);", "-\t\t\tassertEquals(\"2.2\", 2, ii.distToBrace);", "+    //single layer brace", "+    doc.move(-1);", "+    doc.insertString(9, \" [\", null);", "+    doc.move(1);", "+    // \\n  helo ( (\\n#", "+    assertEquals(\"0.2\", \"\\n  helo [ [\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"3.0\", openBracket, ii.braceType);", "+    assertEquals(\"3.1\", 11, ii.distToNewline);", "+    assertEquals(\"3.2\", 2, ii.distToBrace);", "+  }", "-\t\t\t//single layer brace", "-\t\t\tdoc.move(-1);", "-\t\t\tdoc.insertString(9, \" [\", null);", "-\t\t\tdoc.move(1);", "-\t\t\t// \\n  helo ( (\\n#", "-\t\t\tassertEquals(\"0.2\", \"\\n  helo [ [\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"3.0\", openBracket, ii.braceType);", "-\t\t\tassertEquals(\"3.1\", 11, ii.distToNewline);", "-\t\t\tassertEquals(\"3.2\", 2, ii.distToBrace);", "-\t\t} ", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb96447ae3ac7de1f1182b077ab720d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void testIndentInfoBracket ()", "signatureAfterChange": "    public void testIndentInfoBracket () throws BadLocationException", "diff": ["+  public void testIndentInfoBracket () throws BadLocationException {", "+    // just bracket", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n[\\n\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openBracket, ii.braceType);", "+    assertEquals(\"1.1\", 2, ii.distToNewline);", "+    assertEquals(\"1.2\", 2, ii.distToBrace);", "-\tpublic void testIndentInfoBracket () {", "-\t\ttry {", "-\t\t\t// just bracket", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n[\\n\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openBracket, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", 2, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 2, ii.distToBrace);", "+    // bracket with stuff in front", "+    doc.insertString(1, \"  helo \", null);", "+    doc.move(2);", "+    // \\n  helo (\\n#", "+    assertEquals(\"0.1\", \"\\n  helo [\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"2.0\", openBracket, ii.braceType);", "+    assertEquals(\"2.1\", 9, ii.distToNewline);", "+    assertEquals(\"2.2\", 2, ii.distToBrace);", "-\t\t\t// bracket with stuff in front", "-\t\t\tdoc.insertString(1, \"  helo \", null);", "-\t\t\tdoc.move(2);", "-\t\t\t// \\n  helo (\\n#", "-\t\t\tassertEquals(\"0.1\", \"\\n  helo [\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"2.0\", openBracket, ii.braceType);", "-\t\t\tassertEquals(\"2.1\", 9, ii.distToNewline);", "-\t\t\tassertEquals(\"2.2\", 2, ii.distToBrace);", "+    //single layer brace", "+    doc.move(-1);", "+    doc.insertString(9, \" [\", null);", "+    doc.move(1);", "+    // \\n  helo ( (\\n#", "+    assertEquals(\"0.2\", \"\\n  helo [ [\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"3.0\", openBracket, ii.braceType);", "+    assertEquals(\"3.1\", 11, ii.distToNewline);", "+    assertEquals(\"3.2\", 2, ii.distToBrace);", "+  }", "-\t\t\t//single layer brace", "-\t\t\tdoc.move(-1);", "-\t\t\tdoc.insertString(9, \" [\", null);", "-\t\t\tdoc.move(1);", "-\t\t\t// \\n  helo ( (\\n#", "-\t\t\tassertEquals(\"0.2\", \"\\n  helo [ [\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"3.0\", openBracket, ii.braceType);", "-\t\t\tassertEquals(\"3.1\", 11, ii.distToNewline);", "-\t\t\tassertEquals(\"3.2\", 2, ii.distToBrace);", "-\t\t} ", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}"]}], "num": 17194}