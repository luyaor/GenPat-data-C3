{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25c891c003161d4f8360462f173a36be", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0473fbce65bb368845cf1ff74370ffb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/TokenList.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private int _delete(int count, TokenList.Iterator copyCursor)", "signatureAfterChange": "     private int _delete(int count, TokenList.Iterator copyCursor)", "diff": ["-    */", "-    private int _delete(int count, TokenList.Iterator copyCursor)", "-    {", "-", "+     */", "+    private int _delete(int count, TokenList.Iterator copyCursor) {", "-      if (count >0) {", "-        try {", "+      try {", "+        if (count > 0) {", "-        catch (Exception e) {", "-          throw new IllegalArgumentException(\"Trying to delete\" +", "-                                             \" past end of file.\");", "-        }", "-      }", "-      else { // count < 0", "-        try {", "+        else { // count <= 0", "-        catch (Exception e) {", "-          throw new IllegalArgumentException(\"Trying to delete\" +", "-                                             \" past end of file.\");", "-        }", "+        return deleteRight(copyCursor);", "-      return this.deleteRight(copyCursor);", "+      catch (Exception e) {", "+        throw new IllegalArgumentException(\"Trying to delete past end of file.\");", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dec71bd82a96e2d412b3cae108c214c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private ClassType resolveClassName(String name, Node node)", "signatureAfterChange": "      private ClassType resolveClassName(String name, Node node)", "diff": ["-        catch (InvalidTargetException e) { throw new RuntimeException(\"unexpected bad type\"); }", "-          if (ts.containsClass(result, piece)) { throw new ExecutionError(\"ambiguous.name\", node); }", "-          else {", "-            setErrorStrings(node, piece);", "-            throw new ExecutionError(\"undefined.class\", node);", "-          }", "+          setErrorStrings(node, piece);", "+          if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.inner.class\"); }", "+          else { throw new ExecutionError(\"no.such.inner.class\", node); }"]}], "num": 28169}