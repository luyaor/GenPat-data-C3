{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4bab8a8344ebdea685c45f3e3edbfe1c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44298a9452a1b332d70789aec39d0784", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ArrayData.java", "commitBeforeChange": "9549518c0a4088a27117dae15c509e44b699fe9f", "commitAfterChange": "f8975f6d0ec803eb4567b2a8c0b9b809ab766c60", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "              public void testIsCastableTo()", "signatureAfterChange": "              public void testIsCastableTo()", "diff": ["-      assertTrue(_ad.isCastableTo(object, \"1.5\"));", "-      assertTrue(_ad.isCastableTo(object, \"1.4\"));", "+      assertTrue(_ad.isCastableTo(object, JavaVersion.JAVA_5));", "+      assertTrue(_ad.isCastableTo(object, JavaVersion.JAVA_1_4));", "-      assertTrue(_ad.isAssignableTo(serializable, \"1.5\"));", "-      assertTrue(_ad.isAssignableTo(serializable, \"1.4\"));", "-      assertTrue(_ad.isAssignableTo(clonable, \"1.5\"));", "-      assertTrue(_ad.isAssignableTo(clonable, \"1.4\"));", "+      assertTrue(_ad.isAssignableTo(serializable, JavaVersion.JAVA_5));", "+      assertTrue(_ad.isAssignableTo(serializable, JavaVersion.JAVA_1_4));", "+      assertTrue(_ad.isAssignableTo(clonable, JavaVersion.JAVA_5));", "+      assertTrue(_ad.isAssignableTo(clonable, JavaVersion.JAVA_1_4));", "-      assertFalse(_ad.isCastableTo(notObject, \"1.5\"));", "-      assertFalse(_ad.isCastableTo(notObject, \"1.4\"));", "+      assertFalse(_ad.isCastableTo(notObject, JavaVersion.JAVA_5));", "+      assertFalse(_ad.isCastableTo(notObject, JavaVersion.JAVA_1_4));", "-      assertTrue(_ad.isCastableTo(intArray, \"1.5\"));", "-      assertTrue(_ad.isCastableTo(intArray, \"1.4\"));", "-      assertFalse(_ad.isCastableTo(charArray, \"1.5\"));", "-      assertFalse(_ad.isCastableTo(charArray, \"1.4\"));", "-      assertFalse(_ad.isCastableTo(doubleArray, \"1.5\"));", "-      assertFalse(_ad.isCastableTo(doubleArray, \"1.4\"));", "-      assertFalse(_ad.isCastableTo(objArray, \"1.5\"));", "-      assertFalse(_ad.isCastableTo(objArray, \"1.4\"));", "+      assertTrue(_ad.isCastableTo(intArray, JavaVersion.JAVA_5));", "+      assertTrue(_ad.isCastableTo(intArray, JavaVersion.JAVA_1_4));", "+      assertFalse(_ad.isCastableTo(charArray, JavaVersion.JAVA_5));", "+      assertFalse(_ad.isCastableTo(charArray, JavaVersion.JAVA_1_4));", "+      assertFalse(_ad.isCastableTo(doubleArray, JavaVersion.JAVA_5));", "+      assertFalse(_ad.isCastableTo(doubleArray, JavaVersion.JAVA_1_4));", "+      assertFalse(_ad.isCastableTo(objArray, JavaVersion.JAVA_5));", "+      assertFalse(_ad.isCastableTo(objArray, JavaVersion.JAVA_1_4));", "-      assertTrue(_ad.isCastableTo(objArray, \"1.5\"));", "-      assertTrue(_ad.isCastableTo(objArray, \"1.4\"));", "-      assertTrue(_ad.isCastableTo(_ad, \"1.5\"));", "-      assertTrue(_ad.isCastableTo(_ad, \"1.4\"));", "-      assertFalse(_ad.isCastableTo(randomArray, \"1.5\"));", "-      assertFalse(_ad.isCastableTo(randomArray, \"1.4\"));", "-      assertFalse(_ad.isCastableTo(intArray, \"1.5\"));", "-      assertFalse(_ad.isCastableTo(intArray, \"1.4\"));", "+      assertTrue(_ad.isCastableTo(objArray, JavaVersion.JAVA_5));", "+      assertTrue(_ad.isCastableTo(objArray, JavaVersion.JAVA_1_4));", "+      assertTrue(_ad.isCastableTo(_ad, JavaVersion.JAVA_5));", "+      assertTrue(_ad.isCastableTo(_ad, JavaVersion.JAVA_1_4));", "+      assertFalse(_ad.isCastableTo(randomArray, JavaVersion.JAVA_5));", "+      assertFalse(_ad.isCastableTo(randomArray, JavaVersion.JAVA_1_4));", "+      assertFalse(_ad.isCastableTo(intArray, JavaVersion.JAVA_5));", "+      assertFalse(_ad.isCastableTo(intArray, JavaVersion.JAVA_1_4));", "-      assertTrue(_ad.isCastableTo(new ArrayData(integerSd, llv, si), \"1.5\"));", "-      assertTrue(_ad.isCastableTo(new ArrayData(integerSd, llv, si), \"1.4\"));", "-      assertFalse(_ad.isCastableTo(new ArrayData(SymbolData.INT_TYPE, llv, si), \"1.5\"));", "-      assertFalse(_ad.isCastableTo(new ArrayData(SymbolData.INT_TYPE, llv, si), \"1.4\"));", "+      assertTrue(_ad.isCastableTo(new ArrayData(integerSd, llv, si), JavaVersion.JAVA_5));", "+      assertTrue(_ad.isCastableTo(new ArrayData(integerSd, llv, si), JavaVersion.JAVA_1_4));", "+      assertFalse(_ad.isCastableTo(new ArrayData(SymbolData.INT_TYPE, llv, si), JavaVersion.JAVA_5));", "+      assertFalse(_ad.isCastableTo(new ArrayData(SymbolData.INT_TYPE, llv, si), JavaVersion.JAVA_1_4));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8592a4b24b587159c7f4a7637fa40bba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ArrayData.java", "commitBeforeChange": "9549518c0a4088a27117dae15c509e44b699fe9f", "commitAfterChange": "f8975f6d0ec803eb4567b2a8c0b9b809ab766c60", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "               public void testIsAssignableTo()", "signatureAfterChange": "               public void testIsAssignableTo()", "diff": ["-      assertTrue(_ad.isAssignableTo(object, \"1.5\"));", "-      assertTrue(_ad.isAssignableTo(object, \"1.4\"));", "+      assertTrue(_ad.isAssignableTo(object, JavaVersion.JAVA_5));", "+      assertTrue(_ad.isAssignableTo(object, JavaVersion.JAVA_1_4));", "-      assertFalse(_ad.isAssignableTo(notObject, \"1.5\"));", "-      assertFalse(_ad.isAssignableTo(notObject, \"1.4\"));", "+      assertFalse(_ad.isAssignableTo(notObject, JavaVersion.JAVA_5));", "+      assertFalse(_ad.isAssignableTo(notObject, JavaVersion.JAVA_1_4));", "-      assertTrue(_ad.isAssignableTo(serializable, \"1.5\"));", "-      assertTrue(_ad.isAssignableTo(serializable, \"1.4\"));", "-      assertTrue(_ad.isAssignableTo(clonable, \"1.5\"));", "-      assertTrue(_ad.isAssignableTo(clonable, \"1.4\"));", "-      assertFalse(_ad.isAssignableTo(notObject, \"1.5\"));", "-      assertFalse(_ad.isAssignableTo(notObject, \"1.4\"));", "+      assertTrue(_ad.isAssignableTo(serializable, JavaVersion.JAVA_5));", "+      assertTrue(_ad.isAssignableTo(serializable, JavaVersion.JAVA_1_4));", "+      assertTrue(_ad.isAssignableTo(clonable, JavaVersion.JAVA_5));", "+      assertTrue(_ad.isAssignableTo(clonable, JavaVersion.JAVA_1_4));", "+      assertFalse(_ad.isAssignableTo(notObject, JavaVersion.JAVA_5));", "+      assertFalse(_ad.isAssignableTo(notObject, JavaVersion.JAVA_1_4));", "-      assertTrue(_ad.isAssignableTo(intArray, \"1.5\"));", "-      assertTrue(_ad.isAssignableTo(intArray, \"1.4\"));", "-      assertFalse(_ad.isAssignableTo(charArray, \"1.5\"));", "-      assertFalse(_ad.isAssignableTo(charArray, \"1.4\"));", "-      assertFalse(_ad.isAssignableTo(doubleArray, \"1.5\"));", "-      assertFalse(_ad.isAssignableTo(doubleArray, \"1.4\"));", "-      assertFalse(_ad.isAssignableTo(objArray, \"1.5\"));", "-      assertFalse(_ad.isAssignableTo(objArray, \"1.4\"));", "+      assertTrue(_ad.isAssignableTo(intArray, JavaVersion.JAVA_5));", "+      assertTrue(_ad.isAssignableTo(intArray, JavaVersion.JAVA_1_4));", "+      assertFalse(_ad.isAssignableTo(charArray, JavaVersion.JAVA_5));", "+      assertFalse(_ad.isAssignableTo(charArray, JavaVersion.JAVA_1_4));", "+      assertFalse(_ad.isAssignableTo(doubleArray, JavaVersion.JAVA_5));", "+      assertFalse(_ad.isAssignableTo(doubleArray, JavaVersion.JAVA_1_4));", "+      assertFalse(_ad.isAssignableTo(objArray, JavaVersion.JAVA_5));", "+      assertFalse(_ad.isAssignableTo(objArray, JavaVersion.JAVA_1_4));", "-      assertTrue(_ad.isAssignableTo(objArray, \"1.5\"));", "-      assertTrue(_ad.isAssignableTo(objArray, \"1.4\"));", "-      assertTrue(_ad.isAssignableTo(_ad, \"1.5\"));", "-      assertTrue(_ad.isAssignableTo(_ad, \"1.4\"));", "-      assertFalse(_ad.isAssignableTo(randomArray, \"1.5\"));", "-      assertFalse(_ad.isAssignableTo(randomArray, \"1.4\"));", "-      assertFalse(_ad.isAssignableTo(intArray, \"1.5\"));", "-      assertFalse(_ad.isAssignableTo(intArray, \"1.4\"));", "+      assertTrue(_ad.isAssignableTo(objArray, JavaVersion.JAVA_5));", "+      assertTrue(_ad.isAssignableTo(objArray, JavaVersion.JAVA_1_4));", "+      assertTrue(_ad.isAssignableTo(_ad, JavaVersion.JAVA_5));", "+      assertTrue(_ad.isAssignableTo(_ad, JavaVersion.JAVA_1_4));", "+      assertFalse(_ad.isAssignableTo(randomArray, JavaVersion.JAVA_5));", "+      assertFalse(_ad.isAssignableTo(randomArray, JavaVersion.JAVA_1_4));", "+      assertFalse(_ad.isAssignableTo(intArray, JavaVersion.JAVA_5));", "+      assertFalse(_ad.isAssignableTo(intArray, JavaVersion.JAVA_1_4));"]}], "num": 20157}