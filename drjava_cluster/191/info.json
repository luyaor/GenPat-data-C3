{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be97a8ea321749543f718667eaa8c762", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f36e3683a56f15abd3e8923e511c294", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ff65482ac0c34f9d18b211e3b1fa05371a07fb91", "commitAfterChange": "43bd3e08ba052e97e1d0271e7f1e324beac2ba86", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public Document getPrevDocument(Document doc)", "signatureAfterChange": "   public Document getPrevDocument(Document doc)", "diff": ["-    int index = _getIndexOfDocument(doc);", "-    if (index == -1) {", "-      throw new UnexpectedException(new IllegalStateException(\"Could not get the previous Document for Document: \" + doc));", "+    Iterator<OpenDefinitionsDocument> odds = _documentsRepos.valuesIterator();", "+    OpenDefinitionsDocument prev = null;", "+    while(odds.hasNext())", "+    {", "+      OpenDefinitionsDocument odd = odds.next();", "+      if(doc == odd.getDocument())", "+      {", "+        if(prev != null)", "+        {", "+          return prev.getDocument();", "+        }", "+        else", "+        {", "+          while(odds.hasNext())", "+          {", "+            prev = odds.next();", "+          }", "+          return prev.getDocument();", "+        }", "+      }", "+      prev = odd;", "-    else if (index == 0) {", "-      return ((OpenDefinitionsDocument)_definitionsDocs.elementAt(_definitionsDocs.size()-1)).getDocument();", "-    }", "-    else {", "-      return ((OpenDefinitionsDocument)_definitionsDocs.elementAt(index-1)).getDocument();", "-    }", "+    throw new UnexpectedException(new IllegalStateException(\"Could not get the previous Document for Document: \" + doc));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f79d2431305d8cd0c9917d7367a0fd0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ff65482ac0c34f9d18b211e3b1fa05371a07fb91", "commitAfterChange": "43bd3e08ba052e97e1d0271e7f1e324beac2ba86", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public OpenDefinitionsDocument getODDForDocument(Document doc)", "signatureAfterChange": "   public OpenDefinitionsDocument getODDForDocument(Document doc)", "diff": ["-    int index = _getIndexOfDocument(doc);", "-    if (index == -1) {", "-      throw new UnexpectedException(new IllegalStateException(\"Could not get the OpenDefinitionsDocument for Document: \" + doc));", "+    Iterator<OpenDefinitionsDocument> odds = _documentsRepos.valuesIterator();", "+    while(odds.hasNext())", "+    {", "+      OpenDefinitionsDocument odd = odds.next();", "+      if(doc == odd.getDocument())", "+      {", "+        return odd;", "+      }", "-    else {", "-      return (OpenDefinitionsDocument) _definitionsDocs.elementAt(index);", "-    }", "+    throw new UnexpectedException(new IllegalStateException(\"Could not get the OpenDefinitionsDocument for Document: \" + doc));"]}], "num": 191}