{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d01eaba11aed67bb3aef975f1247b496", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a13d7128267ed745e6169af2371d4c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "c3a494eaa49a0afdbb5b72550dfe257e772377ca", "commitAfterChange": "3ed3053f161753fc80182783c4ecd7f0d8aa1ae2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testVariableDefaultValues() throws InterpreterException", "signatureAfterChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testVariableDefaultValues() throws InterpreterException", "diff": ["-      Pair.make(\"b\", new Byte((byte)0)),", "-      Pair.make(\"s\", new Short((short)0)),", "-      Pair.make(\"i\", new Integer(0)),", "-      Pair.make(\"l\", new Long(0L)),", "-      Pair.make(\"f\", new Float(0.0f)),", "-      Pair.make(\"d\", new Double(0.0d)),", "-      Pair.make(\"c\", new Character('\\u0000')),", "-      Pair.make(\"bool\", Boolean.valueOf(false)),", "-      Pair.make(\"str\", null)", "+      Pair.make(\"b\", (Object) new Byte((byte)0)),", "+      Pair.make(\"s\", (Object) new Short((short)0)),", "+      Pair.make(\"i\", (Object) new Integer(0)),", "+      Pair.make(\"l\", (Object) new Long(0L)),", "+      Pair.make(\"f\", (Object) new Float(0.0f)),", "+      Pair.make(\"d\", (Object) new Double(0.0d)),", "+      Pair.make(\"c\", (Object) new Character('\\u0000')),", "+      Pair.make(\"bool\", (Object) Boolean.valueOf(false)),", "+      Pair.make(\"str\", (Object) null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9142cfb5fcf53385bc91987b25bfcdff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "c3a494eaa49a0afdbb5b72550dfe257e772377ca", "commitAfterChange": "3ed3053f161753fc80182783c4ecd7f0d8aa1ae2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testSemicolon() throws InterpreterException", "signatureAfterChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testSemicolon() throws InterpreterException", "diff": ["-      Pair.make(\"'c' == 'c'\", Boolean.valueOf('c' == 'c')),", "-      Pair.make(\"'c' == 'c';\", null),", "-      Pair.make(\"String s = \\\"hello\\\"\", null),", "-      Pair.make(\"String x = \\\"hello\\\";\", null),", "-      Pair.make(\"char c = 'c'\", null),", "-      Pair.make(\"Character d = new Character('d')\", null),", "-      Pair.make(\"s\", \"hello\"), Pair.make(\"s;\", null),", "-      Pair.make(\"x\", \"hello\"), Pair.make(\"x;\", null),", "-      Pair.make(\"c\", 'c'), Pair.make(\"d\", 'd')", "+      Pair.make(\"'c' == 'c'\", (Object) Boolean.valueOf('c' == 'c')),", "+      Pair.make(\"'c' == 'c';\", (Object) null),", "+      Pair.make(\"String s = \\\"hello\\\"\", (Object) null),", "+      Pair.make(\"String x = \\\"hello\\\";\", (Object) null),", "+      Pair.make(\"char c = 'c'\", (Object) null),", "+      Pair.make(\"Character d = new Character('d')\", (Object) null),", "+      Pair.make(\"s\", \"hello\"), Pair.make(\"s;\", (Object) null),", "+      Pair.make(\"x\", \"hello\"), Pair.make(\"x;\", (Object) null),", "+      Pair.make(\"c\", (Object) 'c'), Pair.make(\"d\", (Object) 'd')"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffa8c2f20b877803116d5957dc2e3c7b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "c3a494eaa49a0afdbb5b72550dfe257e772377ca", "commitAfterChange": "3ed3053f161753fc80182783c4ecd7f0d8aa1ae2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testConstants() throws InterpreterException", "signatureAfterChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testConstants() throws InterpreterException", "diff": ["-    */", "+    * Note that strings and characters are quoted. */", "-      Pair.make(\"5\", new Integer(5)),", "-        Pair.make(\"1356\", new Integer(1356)),", "-        Pair.make(\"true\", Boolean.TRUE),", "-        Pair.make(\"false\", Boolean.FALSE),", "-        Pair.make(\"\\'c\\'\", new Character('c')),", "-        Pair.make(\"1.345\", new Double(1.345)),", "-        Pair.make(\"\\\"buwahahahaha!\\\"\", \"buwahahahaha!\"),", "-        Pair.make(\"\\\"yah\\\\\\\"eh\\\\\\\"\\\"\", \"yah\\\"eh\\\"\"),", "-        Pair.make(\"'\\\\''\", new Character('\\''))", "+      Pair.make(\"5\", (Object) new Integer(5)),", "+        Pair.make(\"1356\", (Object) new Integer(1356)),", "+        Pair.make(\"true\", (Object) Boolean.TRUE),", "+        Pair.make(\"false\", (Object) Boolean.FALSE),", "+        Pair.make(\"\\'c\\'\", (Object) new Character('c')),", "+        Pair.make(\"1.345\", (Object) new Double(1.345)),", "+        Pair.make(\"\\\"buwahahahaha!\\\"\", (Object) \"buwahahahaha!\"),", "+        Pair.make(\"\\\"yah\\\\\\\"eh\\\\\\\"\\\"\", (Object) \"yah\\\"eh\\\"\"),", "+        Pair.make(\"'\\\\''\", (Object) new Character('\\''))"]}], "num": 27833}