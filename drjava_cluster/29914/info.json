{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e018f21c9c21f8957644b410f4aeadf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "054284435e0e312f6d18adf86b47a9e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "91061a0d47469bc7d07ba5fa464f35ab97f70dbb", "commitAfterChange": "296befb4a12a5cc35f5f70ed97c5006f2e9fc8bc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected void abortActionPerformed(ActionEvent e)", "signatureAfterChange": "   protected void abortActionPerformed(ActionEvent e)", "diff": ["-    _runAgainButton.setEnabled(false);", "+    _runAgainButton.setEnabled(true);", "+            // cannot close() an InputStreamReader from thread A while thread B is blocked in read()", "+            // close() will block as well, so we close the InputStream of the process first", "+            _p.getInputStream().close();", "+            // cannot close() an InputStreamReader from thread A while thread B is blocked in read()", "+            // close() will block as well, so we close the InputStream of the process first", "+            _p.getErrorStream().close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a784e7a357b921a1186508f127f072d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "0bbc4205cb6cdac938c33646446cffe67a254d86", "commitAfterChange": "32c1a96bda59745efd4d13dbac97b7a11f8d7d24", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public void testUndoAndRedoAfterMultipleLineCommentAndUncomment()     throws BadLocationException", "signatureAfterChange": "   public void testUndoAndRedoAfterMultipleLineCommentAndUncomment()     throws BadLocationException", "diff": ["+    _defModel.getUndoManager().startCompoundEdit();", "+    _defModel.getUndoManager().startCompoundEdit();"]}], "num": 29914}