{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11eea1f819f0e010ec15477d2da3da11", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b1fcde9e31bb5bc2fa4a4f0acd6b2ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "85d3a69d147c6c1ce63751f75aec1113945356f7", "commitAfterChange": "0a93533cf1b555344278f97d8d989cd2f113c958", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "    public void testSystemIn()", "signatureAfterChange": "      public void testSystemIn()", "diff": ["+  ", "-    synchronized (_controller._inputEnteredAction) {", "-      new Thread(\"Testing System.in\") {", "-        public void run() {", "-          synchronized (_controller._inputEnteredAction) {", "-            _controller._inputEnteredAction.notify();", "-            synchronized (lock) {", "-              buf.append(_controller._inputListener.getConsoleInput());", "-            }", "-          }", "+    ", "+    new Thread(\"Testing System.in\") {", "+      public void run() {", "+        synchronized (lock) {", "+          buf.append(_controller._inputListener.getConsoleInput());", "-      }.start();", "-      try {", "-        _controller._inputEnteredAction.wait();", "-      catch (InterruptedException ie) {", "-      }", "-    }", "-    try {", "-      Thread.sleep(2000);", "-    }", "-    catch (InterruptedException ie) {", "-    }", "-    _controller._insertNewlineAction.actionPerformed(null);", "-    _controller._inputEnteredAction.actionPerformed(null);", "+    }.start();", "+    ", "+    try { _controller._popupConsole.waitForConsoleReady(); }", "+    catch (InterruptedException ie) { }", "+    ", "+    _controller._popupConsole.insertConsoleText(\"test-text\");", "+    _controller._popupConsole.interruptConsole();", "-      assertEquals(\"Should have returned the correct text.\", \"\\n\\n\", buf.toString());", "+      assertEquals(\"Should have returned the correct text.\", \"test-text\\n\", buf.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e89c4e7f97cf05f3b46ece525f4a0a13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "e2dfab60fe06b4a75e9a9d17c0a9c2d622def7c7", "commitAfterChange": "9ee7f82d7f7234787f3748460b46ad8c5d1fc967", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     protected void _insertErrorText(CompilerError error, Document doc) throws BadLocationException", "signatureAfterChange": "     protected void _insertErrorText(CompilerError error, SwingDocument doc) throws BadLocationException", "diff": ["-    protected void _insertErrorText(CompilerError error, Document doc) throws BadLocationException {", "+    protected void _insertErrorText(CompilerError error, SwingDocument doc) throws BadLocationException {", "-      doc.insertString(doc.getLength(), \"File: \", BOLD_ATTRIBUTES);", "+      doc.append(\"File: \", BOLD_ATTRIBUTES);", "-      doc.insertString(doc.getLength(), fileAndLineNumber + \"\\n\", NORMAL_ATTRIBUTES);", "+      doc.append(fileAndLineNumber + \"\\n\", NORMAL_ATTRIBUTES);", "-        doc.insertString(doc.getLength(), _getWarningText(), BOLD_ATTRIBUTES);", "+        doc.append(_getWarningText(), BOLD_ATTRIBUTES);", "-        doc.insertString(doc.getLength(), _getErrorText(), BOLD_ATTRIBUTES);", "+        doc.append(_getErrorText(), BOLD_ATTRIBUTES);", "-      doc.insertString(doc.getLength(), error.message(), NORMAL_ATTRIBUTES);", "-      doc.insertString(doc.getLength(), \"\\n\", NORMAL_ATTRIBUTES);", "+      doc.append(error.message(), NORMAL_ATTRIBUTES);", "+      doc.append(\"\\n\", NORMAL_ATTRIBUTES);"]}], "num": 1881}