{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "732e99341534733f2aafcd27af3be72d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fd8e66aa764367e6899a4ead8f890d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "commitAfterChange": "4e52eec7688cbd5ec3584417f424923ba61a75e0", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 59, "signatureBeforeChange": "   protected void identifyInnerClasses(TypeDefBase that)", "signatureAfterChange": "   protected void identifyInnerClasses(TypeDefBase that)", "diff": ["-    String enclosingType = getQualifiedClassName(that.getName().getText());", "+    String prefix = _enclosingClassName == null ? \"\" : _enclosingClassName + '.';", "+    String enclosingType = getQualifiedClassName(prefix + that.getName().getText());", "+//    System.err.println(\"***** identifyInnerClasses called for \" + enclosingType + \" in file \" + _file);", "+//    System.err.println(\"SymbolData for \" + enclosingType + \" is \" + sd);", "+    enclosingType = sd.getName(); // that may be a local class, which has a more elaborate name", "+//        System.err.println(\"***** Making continuation for \" + fullClassName + \" in file \" + _file);", "+//        System.err.println(\"***** Continuation \" + innerSD + \" returned\");", "+//        Utilities.show(\"***** Continuation \" + innerSD + \" returned\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfac75021e8002af87a9dfb0e2c8d1c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersion.java", "commitBeforeChange": "391e45139a20d29595a89151324a2e220b5d12fb", "commitAfterChange": "b3945c97981b1413d538a04b218b57bbc9b0fda9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "          public int hashCode()", "signatureAfterChange": "          public int hashCode()", "diff": ["+      int fileHash = _location == null ? 0 : _location.hashCode();", "-        ^ (_vendor.hashCode() << 4) ^ stringHash;", "+        ^ (_vendor.hashCode() << 4) ^ (stringHash << 5) ^ fileHash;"]}], "num": 14986}