{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6b345abaac2d6da0e53af95c6530179", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "739d1b738623e4cdbc96e97a4432773d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/Node.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   protected Node(String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "      protected Node(SourceInfo si)", "diff": ["-  //   */", "-  protected Node(String fn, int bl, int bc, int el, int ec) {", "-    this(new SourceInfo((fn == null? new File(\"\") : new File(fn)), bl, bc, el, ec));", "-    //    filename              = fn;", "-    //    beginLine             = bl;", "-    //    beginColumn           = bc;", "-    //    endLine               = el;", "-    //    endColumn             = ec;", "-    //    propertyChangeSupport = new PropertyChangeSupport(this);", "-    //    properties            = new HashMap(11);", "-  }", "+    assert si != null;", "+    sourceInfo = si;", "+    properties = new HashMap<String, Object>(11);", "+  } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "948c8e7016df18d02f9253853b739dc6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ReferenceTypeName.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ReferenceTypeName(String rep, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "      public ReferenceTypeName(IdentifierToken... ids)", "diff": ["+  ", "+  public ReferenceTypeName(IdentifierToken... ids) {", "+    this(Arrays.asList(ids));", "+  }", "-   */", "-  public ReferenceTypeName(String rep, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "-", "-    if (rep == null) throw new IllegalArgumentException(\"rep == null\");", "-", "-    representation = rep;"]}], "num": 8743}