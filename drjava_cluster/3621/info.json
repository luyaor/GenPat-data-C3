{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07a1dc6eb9151150a12426794f903771", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e5b121796d2f430674d6b5b40b7e681", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 64, "signatureBeforeChange": "   public static SizedIterable<Character> arrayIterable(final char[] array)", "signatureAfterChange": "   public static SizedIterable<Character> asIterable(char[] values)", "diff": ["+   */", "+  public static SizedIterable<Character> asIterable(char[] values) {", "+    return new CharArrayWrapper(values);", "+  }", "-  /** @return  An iterable that traverses the given array */", "-  public static SizedIterable<Character> arrayIterable(final char[] array) {", "-    class Wrapper extends AbstractIterable<Character> implements SizedIterable<Character> {", "-      public int size() { return array.length; }", "-      ", "-      public boolean isFixed() { return true; }", "-      ", "-      public Iterator<Character> iterator() {", "-        return new IndexedIterator<Character>() {", "-          protected int size() { return array.length; }", "-          protected Character get(int i) { return array[i]; }", "-        };", "-      }", "-    }", "-    return new Wrapper();", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef02401a5b1608a2ac985357450bfaff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 80, "signatureBeforeChange": "   public static SizedIterable<Short> arrayIterable(final short[] array)", "signatureAfterChange": "   public static SizedIterable<Short> asIterable(short[] values)", "diff": ["+   */", "+  public static SizedIterable<Short> asIterable(short[] values) {", "+    return new ShortArrayWrapper(values);", "+  }", "-  /** @return  An iterable that traverses the given array */", "-  public static SizedIterable<Short> arrayIterable(final short[] array) {", "-    class Wrapper extends AbstractIterable<Short> implements SizedIterable<Short> {", "-      public int size() { return array.length; }", "-      ", "-      public boolean isFixed() { return true; }", "-      ", "-      public Iterator<Short> iterator() {", "-        return new IndexedIterator<Short>() {", "-          protected int size() { return array.length; }", "-          protected Short get(int i) { return array[i]; }", "-        };", "-      }", "-    }", "-    return new Wrapper();", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f12bb85887be8b50f871d033f54b1f4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 128, "signatureBeforeChange": "   public static SizedIterable<Character> charSequenceIterable(final String sequence)", "signatureAfterChange": "   public static SizedIterable<Character> asIterable(final String sequence)", "diff": ["+   */", "+  public static SizedIterable<Character> asIterable(final String sequence) {", "+    return new CharSequenceWrapper(sequence, true);", "+  }", "-   */", "-  public static SizedIterable<Character> charSequenceIterable(final String sequence) {", "-    class Wrapper extends AbstractIterable<Character> implements SizedIterable<Character> {", "-      public int size() { return sequence.length(); }", "-      ", "-      public boolean isFixed() { return true; }", "-      ", "-      public Iterator<Character> iterator() {", "-        return new IndexedIterator<Character>() {", "-          protected int size() { return sequence.length(); }", "-          protected Character get(int i) { return sequence.charAt(i); }", "-        };", "-      }", "-    }", "-    return new Wrapper();"]}], "num": 3621}