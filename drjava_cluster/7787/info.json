{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0398b858d3af5f5d771157a8b4ea5a5d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fbcd20f0c7dc710612c3f930f3021fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LValueWithValueTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "                 public void testForArrayAccess()", "signatureAfterChange": "                 public void testForArrayAccess()", "diff": ["-                      SourceInfo.NO_INFO);", "+                      SourceInfo.NONE);", "-      MethodData makeArray = new MethodData(\"makeArray\", _privateMav, new TypeParameter[0], intArray, new VariableData[0], new String[0], _ta._data.getSymbolData(), new NullLiteral(SourceInfo.NO_INFO));", "+      MethodData makeArray = new MethodData(\"makeArray\", _privateMav, new TypeParameter[0], intArray, new VariableData[0], new String[0], _ta._data.getSymbolData(), new NullLiteral(SourceInfo.NONE));", "-      ArrayAccess a1 = new ArrayAccess(SourceInfo.NO_INFO, ", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"variable1\")),", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"intVar\")));", "+      ArrayAccess a1 = new ArrayAccess(SourceInfo.NONE, ", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"variable1\")),", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"intVar\")));", "-      ArrayAccess a2 = new ArrayAccess(SourceInfo.NO_INFO,", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"variable1\")),", "-                                       new PlusExpression(SourceInfo.NO_INFO,", "-                                                          new IntegerLiteral(SourceInfo.NO_INFO, 12),", "-                                                          new IntegerLiteral(SourceInfo.NO_INFO, 22)));", "+      ArrayAccess a2 = new ArrayAccess(SourceInfo.NONE,", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"variable1\")),", "+                                       new PlusExpression(SourceInfo.NONE,", "+                                                          new IntegerLiteral(SourceInfo.NONE, 12),", "+                                                          new IntegerLiteral(SourceInfo.NONE, 22)));", "-      ArrayAccess a3 = new ArrayAccess(SourceInfo.NO_INFO,", "-                                       new SimpleMethodInvocation(SourceInfo.NO_INFO,", "-                                                                  new Word(SourceInfo.NO_INFO, \"makeArray\"),", "-                                                                  new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0])),", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"intVar\")));", "+      ArrayAccess a3 = new ArrayAccess(SourceInfo.NONE,", "+                                       new SimpleMethodInvocation(SourceInfo.NONE,", "+                                                                  new Word(SourceInfo.NONE, \"makeArray\"),", "+                                                                  new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0])),", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"intVar\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7deaf5775d7b620098de2d1eabf31af8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LValueTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "          public void testForArrayAccess()", "signatureAfterChange": "          public void testForArrayAccess()", "diff": ["-                      SourceInfo.NO_INFO);", "+                      SourceInfo.NONE);", "-      MethodData makeArray = new MethodData(\"makeArray\", _privateMav, new TypeParameter[0], intArray, new VariableData[0], new String[0], _ta._data.getSymbolData(), new NullLiteral(SourceInfo.NO_INFO));", "+      MethodData makeArray = new MethodData(\"makeArray\", _privateMav, new TypeParameter[0], intArray, new VariableData[0], new String[0], _ta._data.getSymbolData(), new NullLiteral(SourceInfo.NONE));", "-      ArrayAccess a1 = new ArrayAccess(SourceInfo.NO_INFO, ", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"variable1\")),", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"intVar\")));", "+      ArrayAccess a1 = new ArrayAccess(SourceInfo.NONE, ", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"variable1\")),", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"intVar\")));", "-      ArrayAccess a2 = new ArrayAccess(SourceInfo.NO_INFO,", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"variable1\")),", "-                                       new PlusExpression(SourceInfo.NO_INFO,", "-                                                          new IntegerLiteral(SourceInfo.NO_INFO, 12),", "-                                                          new IntegerLiteral(SourceInfo.NO_INFO, 22)));", "+      ArrayAccess a2 = new ArrayAccess(SourceInfo.NONE,", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"variable1\")),", "+                                       new PlusExpression(SourceInfo.NONE,", "+                                                          new IntegerLiteral(SourceInfo.NONE, 12),", "+                                                          new IntegerLiteral(SourceInfo.NONE, 22)));", "-      ArrayAccess a3 = new ArrayAccess(SourceInfo.NO_INFO,", "-                                       new SimpleMethodInvocation(SourceInfo.NO_INFO,", "-                                                                  new Word(SourceInfo.NO_INFO, \"makeArray\"),", "-                                                                  new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0])),", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"intVar\")));", "+      ArrayAccess a3 = new ArrayAccess(SourceInfo.NONE,", "+                                       new SimpleMethodInvocation(SourceInfo.NONE,", "+                                                                  new Word(SourceInfo.NONE, \"makeArray\"),", "+                                                                  new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0])),", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"intVar\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99c3620ddb3c0e3f7a489da9588dbe8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "          public void testForConstructorDef()", "signatureAfterChange": "          public void testForConstructorDef()", "diff": ["-      ConstructorDef cd = new ConstructorDef(SourceInfo.NO_INFO, ", "-                                             new Word(SourceInfo.NO_INFO, \"MyClass\"), _publicMav, ", "+      ConstructorDef cd = new ConstructorDef(SourceInfo.NONE, ", "+                                             new Word(SourceInfo.NONE, \"MyClass\"), _publicMav, ", "-                                             new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                             new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-        new FormalParameter(SourceInfo.NO_INFO, ", "-                            new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                                                new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                                                new Word(SourceInfo.NO_INFO, \"i\")), false);", "-      ReferenceType rt = new TypeVariable(SourceInfo.NO_INFO, \"MyMadeUpException\");", "-      ConstructorDef cd2 = new ConstructorDef(SourceInfo.NO_INFO, ", "-                                              new Word(SourceInfo.NO_INFO, \"MyClass\"), ", "+        new FormalParameter(SourceInfo.NONE, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                                                new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                                                new Word(SourceInfo.NONE, \"i\")), false);", "+      ReferenceType rt = new TypeVariable(SourceInfo.NONE, \"MyMadeUpException\");", "+      ConstructorDef cd2 = new ConstructorDef(SourceInfo.NONE, ", "+                                              new Word(SourceInfo.NONE, \"MyClass\"), ", "-                                              new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                              new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-        new FormalParameter(SourceInfo.NO_INFO, ", "-                            new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                                                new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                                                new Word(SourceInfo.NO_INFO, \"i\")), false);", "+        new FormalParameter(SourceInfo.NONE, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                                                new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                                                new Word(SourceInfo.NONE, \"i\")), false);", "-      ConstructorDef cd3 = new ConstructorDef(SourceInfo.NO_INFO, ", "-                                              new Word(SourceInfo.NO_INFO, \"MyClass\"), _publicMav, ", "+      ConstructorDef cd3 = new ConstructorDef(SourceInfo.NONE, ", "+                                              new Word(SourceInfo.NONE, \"MyClass\"), _publicMav, ", "-                                             new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                             new BracedBody(SourceInfo.NONE, new BodyItemI[0]));"]}], "num": 7787}