{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "512baad1ade7937cc7990088971b7e72", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e1e87b9f9601068ff15e43fe0ecc4bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersionTest.java", "commitBeforeChange": "201211c7e1e210d4dce9a0e2101594a81a3b57d8", "commitAfterChange": "ad1e0488fe90db5e1e6108de7f4f685fac998627", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r   \r   public void testParseFullVersionSort()", "signatureAfterChange": "      public void testParseFullVersionSort()", "diff": ["-  \r", "-  public void testParseFullVersionSort() {\r", "-    FullVersion vUnrecognized = parseFullVersion(\"1.6.0_11\",\"\",\"\");\r", "-    assertEquals(\"6.0_11\", vUnrecognized.versionString());\r", "-    FullVersion vMint = parseFullVersion(\"1.6.0_11\",\"mint\",\"mint\");\r", "-    assertEquals(\"6.0_11-Mint\", vMint.versionString());\r", "-    FullVersion vOpenJDK = parseFullVersion(\"1.6.0_11\",\"OpenJDK Runtime Environment\",\"Sun Microsystems Inc.\");\r", "-    assertEquals(\"6.0_11-OpenJDK\", vOpenJDK.versionString());\r", "-    FullVersion vApple = parseFullVersion(\"1.6.0_11\",\"Java(TM) 2 Runtime Environment, Standard Edition\",\"\\\"Apple Computer, Inc.\\\"\");\r", "-    assertEquals(\"6.0_11\", vApple.versionString());\r", "-    FullVersion vSun = parseFullVersion(\"1.6.0_11\",\"Java(TM) 2 Runtime Environment, Standard Edition\",\"Sun Microsystems Inc.\");\r", "-    assertEquals(\"6.0_11\", vSun.versionString());\r", "-    \r", "-    Set<FullVersion> sorter = new TreeSet<FullVersion>();\r", "-    sorter.add(vSun);\r", "-    sorter.add(vApple);\r", "-    sorter.add(vOpenJDK);\r", "-    sorter.add(vMint);\r", "-    sorter.add(vUnrecognized);\r", "-    \r", "-    assertTrue(IterUtil.isEqual(sorter, IterUtil.make(vUnrecognized, vMint, vOpenJDK, vApple, vSun)));\r", "-  }\r", "+  ", "+  public void testParseFullVersionSort() {", "+    FullVersion vUnrecognized = parseFullVersion(\"1.6.0_11\",\"\",\"\");", "+    assertEquals(\"6.0_11\", vUnrecognized.versionString());", "+    FullVersion vMint = parseFullVersion(\"1.6.0_11\",\"mint\",\"mint\");", "+    assertEquals(\"6.0_11-Mint\", vMint.versionString());", "+    FullVersion vOpenJDK = parseFullVersion(\"1.6.0_11\",\"OpenJDK Runtime Environment\",\"Sun Microsystems Inc.\");", "+    assertEquals(\"6.0_11-OpenJDK\", vOpenJDK.versionString());", "+    FullVersion vApple = parseFullVersion(\"1.6.0_11\",\"Java(TM) 2 Runtime Environment, Standard Edition\",\"\\\"Apple Computer, Inc.\\\"\");", "+    assertEquals(\"6.0_11\", vApple.versionString());", "+    FullVersion vSun = parseFullVersion(\"1.6.0_11\",\"Java(TM) 2 Runtime Environment, Standard Edition\",\"Sun Microsystems Inc.\");", "+    assertEquals(\"6.0_11\", vSun.versionString());", "+    ", "+    Set<FullVersion> sorter = new TreeSet<FullVersion>();", "+    sorter.add(vSun);", "+    sorter.add(vApple);", "+    sorter.add(vOpenJDK);", "+    sorter.add(vUnrecognized);", "+    sorter.add(vMint);", "+    ", "+    assertTrue(IterUtil.isEqual(sorter, IterUtil.make(vMint, vUnrecognized, vOpenJDK, vApple, vSun)));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c492f0a7d8bf551f09ad12d7592c23ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/RegionManager.java", "commitBeforeChange": "1a21d93c6026fc975d9f1a1bda2fbd55942a0154", "commitAfterChange": "7cbabe0b7b5f77b58eac69afdca15c16ef2f6a9b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void changeRegion(R region, Lambda<Object,R> cmd);", "signatureAfterChange": "   public void changeRegion(R region, Lambda<R,Object> cmd);", "diff": ["-  public void changeRegion(R region, Lambda<Object,R> cmd);", "+  public void changeRegion(R region, Lambda<R,Object> cmd);"]}], "num": 8073}