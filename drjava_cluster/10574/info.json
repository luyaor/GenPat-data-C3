{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78ffb4aa68b4651553eea928597f6266", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a8300605161473617ea891f0102b50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "8cb3141a044af3c7f18d018980f5a22b0b342ea8", "commitAfterChange": "3c8d894853a99e6e32b5d7c276413441b9c000ec", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "          public synchronized boolean contains(long id)", "signatureAfterChange": "          public boolean contains(long id)", "diff": ["-    public synchronized boolean contains(long id) {", "-      for (int i = 0; i < size(); i++) {", "-        if (get(i).uniqueID() == id) return true;", "+    public boolean contains(long id) {", "+      synchronized(this) {", "+        for (int i = 0; i < size(); i++) {", "+          if (get(i).uniqueID() == id) return true;", "+        }", "+        return false;", "-      return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92f626e62125a6d6b4d6b87653b55c50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 102, "signatureBeforeChange": "      public synchronized ThreadReference remove(long id) throws NoSuchElementException", "signatureAfterChange": "            public ThreadReference remove(long id) throws NoSuchElementException", "diff": ["-", "-    public synchronized ThreadReference remove(long id) throws NoSuchElementException{", "-      for(int i = 0; i < _data.size(); i++) {", "-        if ( _data.get(i).uniqueID() == id ) {", "-          ThreadReference t = _data.get(i);", "-          _data.remove(i);", "-          return t;", "+      ", "+    public ThreadReference remove(long id) throws NoSuchElementException {", "+      synchronized(this) {", "+        for (int i = 0; i < size(); i++) {", "+          if (get(i).uniqueID() == id) {", "+            ThreadReference t = get(i);", "+            remove(i);", "+            return t;", "+          }"]}], "num": 10574}