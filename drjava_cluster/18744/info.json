{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14981e1448a3c8c8e4d18f0b9321ff4b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33fe91258f3a1a5c0177062a2f1c67b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public static boolean checkForJSR14v20()", "signatureAfterChange": "   public static boolean checkForJSR14v20()", "diff": ["-  public static boolean checkForJSR14v20() {", "-        String fs = \"/\"; // In jar files, the file separator is always '/'", "-        String checkClass = \"com\" + fs + \"sun\" + fs + \"tools\" + fs + \"javac\" + fs + \"comp\" + fs + \"Check.class\";", "-          ", "-          // If we're using Java 1.3, don't allow JSR14v20", "-              String msg = \"The JSR-14 v2.0 compiler is not compatible with JDK 1.3.\\n\" +", "-                \"It will not be available in your list of compilers.\";", "-              String title = \"Cannot Load JSR-14 v2.0\";", "-    // Therefore, not using jsr14 v2.0.", "+   */", "+  public static boolean checkForJSR14v20() {", "+    String fs = \"/\"; // In jar files, the file separator is always '/'", "+    String checkClass = \"com\" + fs + \"sun\" + fs + \"tools\" + fs + \"javac\" + fs + \"comp\" + fs + \"Check.class\";", "+    String msg = \"The JSR-14 v2.x compiler is not compatible with JDK 1.3.\\n\" +", "+      \"It will not be available in your list of compilers.\";", "+    String title = \"Cannot Load JSR-14 v2.x\";", "+    return checkJSR14JarForClass(checkClass, msg, title);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9daabc2446a6dfa2e9e0916636a907c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public File[] getSelectedDirectories()", "signatureAfterChange": "   public File[] getSelectedDirectories()", "diff": ["+  public File[] getSelectedDirectories() { return getSelectedFiles(); }", "-   */", "-  public File[] getSelectedDirectories() {", "-    if (!_treeIsGenerated) return new File[0];", "-    TreePath[] sels = _tree.getSelectionPaths();", "-    if (sels == null) {", "-      return new File[0];", "-    }", "-    else {", "-      Vector<File> v = new Vector<File>();", "-      for (TreePath tp : sels) {", "-        v.add(getFileForTreePath(tp));", "-      }", "-      return v.toArray(new File[v.size()]);", "-    }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed962d1278dc82a8eb7bf8c64a7aa8f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-nextgen/edu/rice/cs/drjava/model/compiler/descriptors/NextGenDescriptor.java", "commitBeforeChange": "b7d4cb04f4bb848380a14b3825abe047db8dc58f", "commitAfterChange": "101c103fed282ea73966b5bc0dce7152a188fba5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public boolean containsCompiler(File f)", "signatureAfterChange": "   public boolean containsCompiler(File f)", "diff": ["-  public boolean containsCompiler(File f) {", "-    if (f.isFile()) {", "-      try {", "-        JarFile jf = new JarFile(f);", "-        return (jf.getJarEntry(\"edu/rice/cs/nextgen2/classloader/Runner.class\")!=null &&", "-                jf.getJarEntry(\"edu/rice/cs/nextgen2/compiler/Main.class\")!=null);", "-      }", "-      catch(IOException ioe) { return false; }", "-    }", "-    else if (f.isDirectory()) {", "-      return (new File(f,\"edu/rice/cs/nextgen2/classloader/Runner.class\").exists() &&", "-              new File(f,\"edu/rice/cs/nextgen2/compiler/Main.class\").exists());", "-    }", "-    return false;", "-  }", "+    * @return true if the file contains the compiler */", "+  public boolean containsCompiler(File f) {", "+    return Util.exists(f,", "+                       \"edu/rice/cs/nextgen2/classloader/Runner.class\",", "+                       \"edu/rice/cs/nextgen2/compiler/Main.class\");", "+  }"]}], "num": 18744}