{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42616de4c840e0857b798d07a9e22192", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5b81337f2462bd341a40c39e954fdd4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "1824c23d7190107a20690dc4a2840a5d74f14a93", "commitAfterChange": "3b64166f1d62b17dc65eb373f58379c1d93452e7", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 62, "signatureBeforeChange": "   protected static boolean _isReversteStartOfComment(String text, int pos)", "signatureAfterChange": "   public BraceInfo getEnclosingBrace()", "diff": ["-    */", "-  protected static boolean _isReversteStartOfComment(String text, int pos) {", "-    char currChar = text.charAt(pos);", "-    if ((currChar == '/')||(currChar == '*')) {", "-      try {", "-        char beforeCurrChar = text.charAt(pos - 1);", "-        if (beforeCurrChar == '/')  return true;", "-      } catch (StringIndexOutOfBoundsException e) { /* do nothing */ }", "-    }", "-    return false;", "-  }", "+  /** Cached version of _reduced.getEnclosingBrace().  Assumes that read lock and reduced lock are already held. */", "+  public BraceInfo getEnclosingBrace() {", "+    int pos = _currentLocation;", "+    // Check cache", "+    final Query key = new Query.EnclosingBrace(pos);", "+    final BraceInfo cached = (BraceInfo) _checkCache(key);", "+    if (cached != null) return cached;", "+    BraceInfo b = _reduced.getEnclosingBrace();", "+    _storeInCache(key, b, pos - 1);", "+    return b;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb21c0a9d7d051267bcb3933b861f523", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 69, "signatureBeforeChange": "   public boolean inParenPhrase(final int pos)", "signatureAfterChange": "   public boolean inParenPhrase(final int pos)", "diff": ["+    ", "+    assert isReadLocked();", "+    ", "-    acquireReadLock();", "-    try {", "-      synchronized(_reduced) {", "-        final int oldPos = _currentLocation;", "-        // assert pos == here if read lock and reduced already held before call", "-        _setCurrentLocation(pos);", "-        inParenPhrase = inParenPhrase();", "-        _setCurrentLocation(oldPos);", "-      }", "-      _storeInCache(key, inParenPhrase, pos - 1);", "+//    acquireReadLock();", "+//    try {", "+    synchronized(_reduced) {", "+      final int oldPos = _currentLocation;", "+      // assert pos == here if read lock and reduced already held before call", "+      _setCurrentLocation(pos);", "+      inParenPhrase = inParenPhrase();", "+      _setCurrentLocation(oldPos);", "-    finally { releaseReadLock(); }", "+    _storeInCache(key, inParenPhrase, pos - 1);", "+//    }", "+//    finally { releaseReadLock(); }"]}], "num": 2951}