{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "989e42d549d5b9eeea6b63d9c02ced48", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f85d1b48b9d40c8ff612879a108a3bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public Type visit(ObjectMethodCall node)", "signatureAfterChange": "   public Class<?> visit(ObjectMethodCall node)", "diff": ["-  public Type visit(ObjectMethodCall node) {", "+  public Class<?> visit(ObjectMethodCall node) {", "-    Type      c1   = exp.acceptVisitor(this);", "-    Class<?>   c   = (Class<?>)c1;", "-    String    mn   = node.getMethodName();", "-    ", "-    if (!c.isArray() || c.isArray() && !mn.equals(\"clone\")) {", "+    Class<?>      c   = exp.acceptVisitor(this);", "+    String     mn  = node.getMethodName();", "+", "+    if (!c.isArray() || (c.isArray() && !mn.equals(\"clone\"))) {", "-      Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;        ", "+      Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;", "-          cargs[i++] = (Class<?>)it.next().acceptVisitor(this);", "+          cargs[i++] = it.next().acceptVisitor(this);", "-        ", "-        ", "-      ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec108f1a43affbc2594c4e7d58df8028", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public Type visit(StaticMethodCall node)", "signatureAfterChange": "   public Class<?> visit(StaticMethodCall node)", "diff": ["-  public Type visit(StaticMethodCall node) {", "+  public Class<?> visit(StaticMethodCall node) {", "-        cargs[i++] = (Class<?>)it.next().acceptVisitor(this);", "+        cargs[i++] = it.next().acceptVisitor(this);", "-    Type  c1 = n.acceptVisitor(this);", "-    Class<?> c = (Class<?>)c1;", "-    ", "-    try { m = context.lookupMethod(n, node.getMethodName(), cargs); } ", "-    catch (NoSuchMethodException e) {", "+    Class<?>  c = n.acceptVisitor(this);", "+", "+    try {", "+      m = context.lookupMethod(n, node.getMethodName(), cargs);", "+    } catch (NoSuchMethodException e) {", "-      if (cargs.length > 0) sargs += cargs[cargs.length-1].getName();", "-      ", "+      if (cargs.length > 0) {", "+        sargs += cargs[cargs.length-1].getName();", "+      }", "-    ", "+"]}], "num": 28055}