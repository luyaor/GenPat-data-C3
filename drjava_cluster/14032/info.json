{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4150e475602769b5ab0b855359ea75b7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1344341d05d400d9249142ab503db38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public Object visit(SwitchStatement node)", "signatureAfterChange": "   public Object visit(SwitchStatement node)", "diff": ["-      ListIterator it = node.getBindings().listIterator();", "-      ListIterator dit = null;", "+      ListIterator<SwitchBlock> it = node.getBindings().listIterator();", "+      ListIterator<SwitchBlock> dit = null;", "-        SwitchBlock sc = (SwitchBlock)it.next();", "+        SwitchBlock sc = it.next();", "-              Iterator it2 = sc.getStatements().iterator();", "+              Iterator<Node> it2 = sc.getStatements().iterator();", "-                ((Node)it2.next()).acceptVisitor(this);", "+                it2.next().acceptVisitor(this);", "-              sc = (SwitchBlock)it.next();", "+              sc = it.next();", "-        SwitchBlock sc = (SwitchBlock)dit.next();", "+        SwitchBlock sc = dit.next();", "-            Iterator it2 = sc.getStatements().iterator();", "+            Iterator<Node> it2 = sc.getStatements().iterator();", "-              ((Node)it2.next()).acceptVisitor(this);", "+              it2.next().acceptVisitor(this);", "-            sc = (SwitchBlock)dit.next();", "+            sc = dit.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3ecb6a009628035d1984c4ef974a7a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public Object interpret(Reader r, String fname) throws InterpreterException", "signatureAfterChange": "     public Object interpret(Reader r, String fname) throws InterpreterException", "diff": ["-        List<Node>   statements = p.parseStream();", "-        ListIterator<Node>   it = statements.listIterator();", "+        List    statements = p.parseStream();", "+        ListIterator    it = statements.listIterator();", "-          NameVisitor nv = makeNameVisitor(nameVisitorContext, checkVisitorContext);", "-          Node o = n.acceptVisitor(nv);", "-          if (o != null) n = o;", "+          Visitor v = makeNameVisitor(nameVisitorContext, checkVisitorContext);", "+          Object o = n.acceptVisitor(v);", "+          if (o != null) {", "+            n = (Node)o;", "+          }", "-          TypeChecker tc = makeTypeChecker(checkVisitorContext);", "-          n.acceptVisitor(tc);", "+          v = makeTypeChecker(checkVisitorContext);", "+          n.acceptVisitor(v);", "-          EvaluationVisitor ev = makeEvaluationVisitor(evalVisitorContext);", "-          result = n.acceptVisitor(ev);", "+          v = makeEvaluationVisitor(evalVisitorContext);", "+          result = n.acceptVisitor(v);"]}], "num": 14032}