{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cdc74cf396058d8197dca205f8149af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ab16f3294364f3340f39b701e84bc48", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "45f1bf3ddd58eee4a65694c7e6467fedb43067c7", "commitAfterChange": "a0fae01c3fc47347d8f40022743d4545d81cb1cb", "methodNumberBeforeChange": 522, "methodNumberAfterChange": 522, "signatureBeforeChange": "   private File getChosenFile(JFileChooser fc, int choice, File previous) throws OperationCanceledException", "signatureAfterChange": "   private File getChosenFile(JFileChooser fc, int choice, File previous,                              boolean addSourceFileExtension) throws OperationCanceledException", "diff": ["-  private File getChosenFile(JFileChooser fc, int choice, File previous) throws OperationCanceledException {", "+  private File getChosenFile(JFileChooser fc, int choice, File previous,", "+                             boolean addSourceFileExtension) throws OperationCanceledException {", "-          if (fc.getFileFilter() instanceof JavaSourceFilter) {", "+          if (addSourceFileExtension) {", "-                return new File(chosen.getAbsolutePath() + OptionConstants.", "-                                  LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)]);", "+                File newFile = new File(chosen.getAbsolutePath() + OptionConstants.", "+                                            LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)]);", "+                return newFile;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b1f326b0977c9997b6465d271b15ed5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "deb4bbe3644e2d17508378353337903e5f2c956b", "commitAfterChange": "f9f9b40d76f2ccbda12717eda0af359f2105ef7b", "methodNumberBeforeChange": 526, "methodNumberAfterChange": 526, "signatureBeforeChange": "   private File getChosenFile(JFileChooser fc, int choice) throws OperationCanceledException", "signatureAfterChange": "   private File getChosenFile(JFileChooser fc, int choice, File previous) throws OperationCanceledException", "diff": ["-  private File getChosenFile(JFileChooser fc, int choice) throws OperationCanceledException {", "+  private File getChosenFile(JFileChooser fc, int choice, File previous) throws OperationCanceledException {", "-            if (chosen.getName().indexOf(\".\") == -1)", "-              return new File(chosen.getAbsolutePath() +", "-                              OptionConstants.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)]);", "+            if (chosen.getName().indexOf(\".\") == -1) {", "+              // no file extension", "+              String previousName = (previous!=null)?previous.getName():\"\";", "+              if (!DrJavaFileUtils.isSourceFile(previousName)) {", "+                // previous file name doesn't have a file extension either", "+                return new File(chosen.getAbsolutePath() + OptionConstants.", "+                                  LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)]);", "+              }", "+              else {", "+                // use previous file's extension", "+                int previousLastDotPos = previousName.lastIndexOf(\".\");", "+                String previousExt = previousName.substring(previousLastDotPos);", "+                File newFile = new File(chosen.getAbsolutePath() + previousExt);", "+                return newFile;", "+              }", "+            }"]}], "num": 18861}