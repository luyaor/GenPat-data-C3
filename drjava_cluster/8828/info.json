{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9e6bcfbef3add9772851b34073b9a01", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "967737affbced2b882ae1b0d06aadea5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "a452bc1c75053221683fa7723a55972e27a5b54c", "commitAfterChange": "9bce8671af84f7e65989f2592fb3cf5b37102c42", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public DefinitionsDocument getDocument() throws IOException, FileMovedException", "signatureAfterChange": "     public DefinitionsDocument getDocument() throws IOException, FileMovedException", "diff": ["-//      The following double-check idiom is safe in Java 1.4 and later JVMs provided that _doc is volatile.     ", "-      if (_doc != null) return _doc;  ", "+//      The following double-check idiom is safe in Java 1.4 and later JVMs provided that _doc is volatile.", "+      final DefinitionsDocument doc = _doc;  // create a snapshot of _doc", "+      if (doc != null) return doc;  ", "-        try { // _doc is not in memory", "-          _doc = _rec.make();", "-          assert _doc != null;", "-        }", "-        catch(BadLocationException e) { throw new UnexpectedException(e); }", "-//        Utilities.showDebug(\"Document \" + _doc + \" reconstructed; _stat = \" + _stat);", "-        if (_stat == NOT_IN_QUEUE) add();       // add this to queue ", "-        return _doc;", "+        return makeDocument();", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb3ba013c8c13223e15e0df8834d3ee8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "b6f32808055835a9481d2cee68a36bc82ce5f558", "commitAfterChange": "3b63bd62ccd1666c210054736f0739b2d5581af4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public String getText(int offset, int len)", "signatureAfterChange": "     public String getText(int offset, int len) throws BadLocationException", "diff": ["-    /* Gets the specified substring of this document; throws an exception if the specification is ill-formed. */", "-    public String getText(int offset, int len) { ", "-      String text = getText();", "+    /* Gets the specified substring of this document; throws BadLocationException if the specification is ill-formed. */", "+    public String getText(int offset, int len) throws BadLocationException { ", "+      final DefinitionsDocument doc = _doc; // create a snapshot of _doc", "+      if (doc == null) {", "+        try { return _rec.getText().substring(offset, offset + len); }", "+        catch(IndexOutOfBoundsException e) { throw new BadLocationException(e.getMessage(), offset); }  ", "+      }", "-      return text.substring(offset, offset + len);", "+      return doc.getText(offset, len); "]}], "num": 8828}