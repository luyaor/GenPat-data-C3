{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86aecf603074395894a6f19e4ca24d42", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cb2b9be44519ce6765c3c48a7b61fad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModel.java", "commitBeforeChange": "fe00431171da3d65b1c1aa9aecc4d485691511fe", "commitAfterChange": "08f174fa59972b118ad07b366735f774758ec0e6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   private void _createPositionsArray()", "signatureAfterChange": "   private void _createPositionsArray()", "diff": ["-", "+      ", "-             (offset < defsText.length()))", "+             (offset <= defsText.length()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e8802944c5f043051bada36713bd37d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "f32b1e10d3ab04ca267d7bdc1cbc12db38b5ac66", "commitAfterChange": "1813ff0222dc4ecf20a5cf6ed36333ed813c089d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   static boolean handleCommandLineArgs(String[] args)", "signatureAfterChange": "   static boolean handleCommandLineArgs(String[] args)", "diff": ["-    if (! heapSizeGiven && jvmArgString.indexOf(\"-Xmx\")==0) _jvmArgs.add(DEFAULT_MAX_HEAP_SIZE_ARG);", "+    if (! heapSizeGiven && jvmArgString.indexOf(\"-Xmx\")<0) _jvmArgs.add(DEFAULT_MAX_HEAP_SIZE_ARG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ff9d95978a2e778b3ad8b4fb8e5cb7c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 23, "signatureBeforeChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                         int lineNumber)", "signatureAfterChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                         int lineNumber)", "diff": ["-    // Assume first one is correct, for now", "-    //if (classes.size() > 0) {", "-    ", "-      if (lineNumber > DebugAction.ANY_LINE) {", "+      if (lineNumber != DebugAction.ANY_LINE) {", "+        // If lines.size > 0, lineNumber was found in ref", "-          // The ReferenceType might be in an inner class", "+          // The ReferenceType might be in an inner class, so", "+          //  look for locationsOfLine for nestedTypes", "-                ref =currRef;", "-                break;                ", "+                ref = currRef;", "+                break;", "-      //if (ref != null && !ref.isPrepared()) {", "-      //   return null;", "-      //}"]}], "num": 11172}