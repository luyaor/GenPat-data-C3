{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64d84be8bb731dcac03be03b1b7baa32", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ab7a02d64c1095b191f106ae60df554", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 247, "methodNumberAfterChange": 248, "signatureBeforeChange": "   public boolean containsStaticMethod(Type t, String name)", "signatureAfterChange": "   public boolean containsStaticMethod(Type t, String name, Access.Module accessModule)", "diff": ["-  public boolean containsMethod(Type t, String name) { return new MethodFinder(name, false).hasMatch(t); }", "-  public boolean containsStaticMethod(Type t, String name) { return new MethodFinder(name, true).hasMatch(t); }", "+  }", "+  public boolean containsStaticMethod(Type t, String name, Access.Module accessModule) {", "+    return new MethodFinder(name, accessModule, true).hasMatch(t);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c70a1a01dc3b20efcae9cb8357dc642c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "e2abbf01d6f3b23be51f493f663daa5ce8abf706", "commitAfterChange": "d7bd3eaf7514715e375acabd9bf0f41e4281985a", "methodNumberBeforeChange": 228, "methodNumberAfterChange": 232, "signatureBeforeChange": "   public boolean containsStaticMethod(Type t, String name)", "signatureAfterChange": "   public boolean containsStaticMethod(Type t, String name)", "diff": ["-  public boolean containsMethod(Type t, String name) { return containsMethod(t, name, false); }", "-  public boolean containsStaticMethod(Type t, String name) { return containsMethod(t, name, true); }", "+  public boolean containsMethod(Type t, String name) { return new MethodFinder(name, false).hasMatch(t); }", "+  public boolean containsStaticMethod(Type t, String name) { return new MethodFinder(name, true).hasMatch(t); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df7c146f8319170a9f25107eabb1d727", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 252, "signatureBeforeChange": "   public boolean containsStaticField(Type t, String name)", "signatureAfterChange": "   public boolean containsStaticField(Type t, String name, Access.Module accessModule)", "diff": ["-  public boolean containsField(Type t, String name) { return containsField(t, name, false); }", "-  public boolean containsStaticField(Type t, String name) { return containsField(t, name, true); }", "+  }", "+  public boolean containsStaticField(Type t, String name, Access.Module accessModule) {", "+    return containsField(t, name, accessModule, true);", "+  }"]}], "num": 30688}