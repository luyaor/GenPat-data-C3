{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f13a844b3ea5372f818c670d04bc64e1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0744b2c81d9d209da61792d239a49d94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public Node visit(QualifiedName node)", "signatureAfterChange": "   public Node visit(QualifiedName node)", "diff": ["-    // Creates a ReferenceType node", "+    // Creates a ReferenceTypeName node", "-    ReferenceType rt = new ReferenceType(l,", "+    ReferenceTypeName rt = new ReferenceTypeName(l,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62c5c0a54d20cdd0a18651268897d001", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public Class<?> visit(InnerAllocation node)", "signatureAfterChange": "   public Class<?> visit(InnerAllocation node)", "diff": ["-    if (type instanceof ReferenceType) {", "-      ReferenceType rt = (ReferenceType)type;", "+    if (type instanceof ReferenceTypeName) {", "+      ReferenceTypeName rt = (ReferenceTypeName)type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63cdb84a309e48ba5a3e7ee4962344de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassInfoCompiler.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public Object visit(ObjectMethodCall node)", "signatureAfterChange": "     public Object visit(ObjectMethodCall node)", "diff": ["-            Node result =  new StaticMethodCall((ReferenceType)o,", "+            Node result =  new StaticMethodCall((ReferenceTypeName)o,", "-        ReferenceType rt = new ReferenceType(l);", "+        ReferenceTypeName rt = new ReferenceTypeName(l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0ae93ec9534e4558c3da33c9ac0293b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassInfoCompiler.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public Object visit(QualifiedName node)", "signatureAfterChange": "     public Object visit(QualifiedName node)", "diff": ["-            (new ReferenceType(classInfo.getName()),", "+            (new ReferenceTypeName(classInfo.getName()),", "-      // Creates a ReferenceType node", "+      // Creates a ReferenceTypeName node", "-      ReferenceType rt = new ReferenceType(l,", "+      ReferenceTypeName rt = new ReferenceTypeName(l,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c651f9d6f17f9e584226ec65f222b4d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public Node visit(ObjectFieldAccess node)", "signatureAfterChange": "   public Node visit(ObjectFieldAccess node)", "diff": ["-      if (o instanceof ReferenceType) {", "-        return new StaticFieldAccess((ReferenceType)o,", "+      if (o instanceof ReferenceTypeName) {", "+        return new StaticFieldAccess((ReferenceTypeName)o,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb2b479943fb3a7d52c01cc9b8460340", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public Node visit(ObjectMethodCall node)", "signatureAfterChange": "   public Node visit(ObjectMethodCall node)", "diff": ["-          o = new ReferenceType(representation);", "+          o = new ReferenceTypeName(representation);", "-    } else if (o instanceof ReferenceType) {", "-      return new StaticMethodCall((ReferenceType)o,", "+    } else if (o instanceof ReferenceTypeName) {", "+      return new StaticMethodCall((ReferenceTypeName)o,"]}], "num": 10372}