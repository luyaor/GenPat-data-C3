{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd5346d9c0ab6548acba9512b304c4a9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40ac24bd48302f33ef149dd8b6ff5d01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 450, "methodNumberAfterChange": 450, "signatureBeforeChange": "\r \r   public void forNegativePostfixIncrementExpression(NegativePostfixIncrementExpression that)", "signatureAfterChange": "    public void forNegativePostfixIncrementExpression(NegativePostfixIncrementExpression that)", "diff": ["-\r", "-  public void forNegativePostfixIncrementExpression(NegativePostfixIncrementExpression that) {\r", "-    forNegativePostfixIncrementExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getValue().visit(this);\r", "-    forNegativePostfixIncrementExpressionOnly(that);\r", "-  }\r", "+", "+  public void forNegativePostfixIncrementExpression(NegativePostfixIncrementExpression that) {", "+    forNegativePostfixIncrementExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getValue().visit(this);", "+    forNegativePostfixIncrementExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfc95d3ed54ed8c9a9cdd3ff9172af84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 448, "methodNumberAfterChange": 448, "signatureBeforeChange": "\r \r   public void forNegativePrefixIncrementExpression(NegativePrefixIncrementExpression that)", "signatureAfterChange": "    public void forNegativePrefixIncrementExpression(NegativePrefixIncrementExpression that)", "diff": ["-\r", "-  public void forNegativePrefixIncrementExpression(NegativePrefixIncrementExpression that) {\r", "-    forNegativePrefixIncrementExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getValue().visit(this);\r", "-    forNegativePrefixIncrementExpressionOnly(that);\r", "-  }\r", "+", "+  public void forNegativePrefixIncrementExpression(NegativePrefixIncrementExpression that) {", "+    forNegativePrefixIncrementExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getValue().visit(this);", "+    forNegativePrefixIncrementExpressionOnly(that);", "+  }"]}], "num": 26956}