{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b67551a28a27d670d9cb91e259b622f2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18ce33194bd28c5a33410d0222e0fbee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/StickyClassLoader.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected Class<?> loadClass(String name, boolean resolve)      throws ClassNotFoundException", "signatureAfterChange": "   protected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException", "diff": ["-  protected Class<?> loadClass(String name, boolean resolve) ", "-    throws ClassNotFoundException", "-  {", "+  protected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {", "-    if (clazz != null) {", "-      return clazz;", "-    }", "+    if (clazz != null) return clazz;", "-    if (name.startsWith(\"java.\") ||", "-        name.startsWith(\"javax.\") ||", "-        name.startsWith(\"sun.\") ||", "-        name.startsWith(\"com.sun.\") ||", "-        name.startsWith(\"org.omg.\") ||", "-        name.startsWith(\"sunw.\") ||", "-        name.startsWith(\"org.w3c.dom.\") ||", "-        name.startsWith(\"org.xml.sax.\") ||", "-        name.startsWith(\"net.jini.\")) ", "-    {", "-      try {", "-        clazz = getSystemClassLoader().loadClass(name);", "-      }", "+    if (name.startsWith(\"java.\") || name.startsWith(\"javax.\") || name.startsWith(\"sun.\") || ", "+        name.startsWith(\"com.sun.\") || name.startsWith(\"org.omg.\") || name.startsWith(\"sunw.\") || ", "+        name.startsWith(\"org.w3c.dom.\") || name.startsWith(\"org.xml.sax.\") || name.startsWith(\"net.jini.\")) {", "+      ", "+      try { clazz = getSystemClassLoader().loadClass(name); }", "-    if (resolve) {", "-      resolveClass(clazz);", "-    }", "+    if (resolve) resolveClass(clazz);", "-    /*", "-    System.out.println(\"Sticky loaded OK: \" + name + \" \" + clazz + \" loader=\" +", "-                       clazz.getClassLoader());", "-    */", "+//    System.out.println(\"Sticky loaded OK: \" + name + \" \" + clazz + \" loader=\" + clazz.getClassLoader());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c3c63fa9acabb1a4ebe7bbaaf0d006a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/StickyClassLoader.java", "commitBeforeChange": "1b1a2ff927caf38a8f2ba21780232fcbeb4319bb", "commitAfterChange": "5c8f8bcfea00ac2a7a7056ed42a62e0516896606", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected Class loadClass(String name, boolean resolve)    throws ClassNotFoundException", "signatureAfterChange": "   protected Class loadClass(String name, boolean resolve)      throws ClassNotFoundException", "diff": ["-  throws ClassNotFoundException", "+    throws ClassNotFoundException", "-      clazz = getSystemClassLoader().loadClass(name);", "+      try {", "+        clazz = getSystemClassLoader().loadClass(name);", "+      }", "+      catch (ClassNotFoundException e) {", "+        // It might be a non-system class, like javax.mail.*.", "+        //  Fall back on the secondary loader.", "+        clazz = _loadWithSecondary(name);", "+      }", "+      // Don't fall back to secondary if this fails...", "-      // we get the data using getResource because if we just delegate", "-      // the call to loadClass on old or new loader, it will use that", "-      // loader as the associated class loader for the class. that's bad.", "-      try {", "-        String fileName = name.replace('.', '/') + \".class\";", "-", "-        URL resource = getResource(fileName);", "-        if (resource == null) {", "-          throw new ClassNotFoundException(\"Resource not found: \" + fileName);", "-        }", "-", "-        byte[] data = FileOps.readStreamAsBytes(resource.openStream());", "-        try {", "-          clazz = defineClass(name, data, 0, data.length);", "-        }", "-        catch (Error t) {", "-          /*", "-          System.err.println(\"Sticky \" + this + \" error when loading \" + name +", "-                             \" with resolve=\" + resolve + \":\");", "-          */", "-          //t.printStackTrace();", "-          throw t;", "-        }", "-      }", "-      catch (IOException ioe) {", "-        throw new ClassNotFoundException(ioe.toString());", "-      }", "+      // Load with the secondary loader", "+      clazz = _loadWithSecondary(name);"]}], "num": 14524}