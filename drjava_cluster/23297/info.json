{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6fb0091067fde97cbd2151dad36a9ec2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7003609766af53f4965e2bc8a989a2ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public void removeInterpreter(String name)", "signatureAfterChange": "   public boolean removeInterpreter(String name)", "diff": ["-  public void removeInterpreter(String name) {", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (!_restart)  return;", "-    ", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try {", "-      slave.removeInterpreter(name);", "-      if (name.equals(_currentInterpreterName))  _currentInterpreterName = null;", "-    }", "-    catch (RemoteException re) { _threwException(re); }", "+  public boolean removeInterpreter(String name) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.removeInterpreter(name); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f0aafdba61c60320963d3f0b64d2a3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void setPackageScope(String packageName)", "signatureAfterChange": "   public boolean setPackageScope(String packageName)", "diff": ["-  public void setPackageScope(String packageName) {", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (! _restart) return;", "-    ", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.interpret(\"package \" + packageName + \";\"); }", "-    catch (RemoteException re) { _threwException(re); }", "+  public boolean setPackageScope(String packageName) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.interpret(\"package \" + packageName + \";\"); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dee84e67e3280384e0ca5842c5ad6031", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public String getVariableClassName(String var)", "signatureAfterChange": "   public String getVariableClassName(String var)", "diff": ["-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (! _restart) return null;", "-    ", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-      ", "-    try { return slave.getVariableClassName(var); }", "-    catch (RemoteException re) {", "-      _threwException(re);", "-      return null;", "-    }", "-  }", "+    return null; // TODO: implement", "+//    if (! _restart) return null;", "+//    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "+//      ", "+//    try { return slave.getVariableClassName(var); }", "+//      return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed7429f042b8b7253a464132d0ae296b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public void addInterpreter(String name)", "signatureAfterChange": "   public boolean addInterpreter(String name)", "diff": ["-    */", "-  public void addInterpreter(String name) {", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (! _restart) return;", "-    ", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    try { slave.addInterpreter(name);  }", "-    catch (RemoteException re) { _threwException(re);  }", "+   */", "+  public boolean addInterpreter(String name) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "+    try { remote.addInterpreter(name); return true; }", "+    catch (RemoteException e) { _handleRemoteException(e); return false; }"]}], "num": 23297}