{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f19523209e56c8a21162e8fc6bb67f1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f256499309fd2f832c0423533a35287", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "de5d6cb8095b8316a5027b98971107ba8d8608ac", "commitAfterChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private OpenDefinitionsDocument _doCompile(String text, File file)     throws IOException, BadLocationException", "signatureAfterChange": "   protected OpenDefinitionsDocument _doCompile(String text, File file)     throws IOException, BadLocationException, InterruptedException", "diff": ["+   */", "+  protected OpenDefinitionsDocument _doCompile(String text, File file)", "+    throws IOException, BadLocationException, InterruptedException", "+  {", "+    OpenDefinitionsDocument doc = setupDocument(text);", "+    doc.saveFile(new FileSelector(file));", "+", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener();", "+    _model.addListener(listener);", "+    synchronized(listener) {", "+      doc.startCompile();", "+      int numErrors = _model.getNumErrors();", "+      if (_model.getNumErrors() > 0) {", "+        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "+      }", "+      listener.wait();", "+    }", "+    listener.checkCompileOccurred();", "+    _model.removeListener(listener);", "+    return doc;", "+  }", "-   */", "-  private OpenDefinitionsDocument _doCompile(String text, File file)", "-    throws IOException, BadLocationException", "-  {", "-    OpenDefinitionsDocument doc = setupDocument(text);", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "-    return doc;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53d3426ec0d70d87e93fb9ab74b9be8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "1333ad40debe120f6d8fd5fb5ff36c57ce6b1ccf", "commitAfterChange": "3907c0e8430f2d380a191d1ad8364cbfdd1d1b28", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 44, "signatureBeforeChange": "   protected synchronized OpenDefinitionsDocument _doCompile(String text, File file)     throws IOException, BadLocationException, InterruptedException", "signatureAfterChange": "     public void interactionEnded()", "diff": ["-   */", "-  protected synchronized OpenDefinitionsDocument _doCompile(String text, File file)", "-    throws IOException, BadLocationException, InterruptedException", "-  {", "-    OpenDefinitionsDocument doc = setupDocument(text);", "-    doc.saveFile(new FileSelector(file));", "-", "-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(true);", "-    _model.addListener(listener);", "-    synchronized(listener) {", "-      doc.startCompile();", "-      int numErrors = _model.getNumErrors();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + doc.getCompilerErrorModel());", "-      }", "-      listener.wait();", "-    }", "-    listener.checkCompileOccurred();", "-    _model.removeListener(listener);", "-    return doc;", "-  }", "+    }", "+    public void interactionEnded() {", "+      synchronized(_notifierLock) {", "+        interactionEndCount++;", "+        if (printEvents) System.out.println(\"interactionEnded \" + interactionEndCount);", "+        _notifyObject(_notifierLock);", "+      }", "+    }"]}], "num": 20558}