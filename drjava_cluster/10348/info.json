{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16ca2851f47393ecb7b6a80e94eb9f19", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b280b8ac6b8bbf1362733f6a1f824a65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "b42121281abc84b5922f4d3c2653d8341fced477", "commitAfterChange": "6b690d7e50bc9f782260d6c38aaf261dfe0715e0", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   private void _selectReplacedItem(int length)", "signatureAfterChange": "   private void _selectFoundOrReplacedItem(int length)", "diff": ["-  /** This method is used to select the item that has been inserted in a replacement. */", "-  private void _selectReplacedItem(int length) {", "+    * item; in a backwards search it is the LEFT edge. */", "+  private void _selectFoundOrReplacedItem(int length) {", "+    int offset = _machine.getCurrentOffset();", "-    to = _machine.getCurrentOffset();", "-    if (_machine.getSearchBackwards()) from = to + length;", "-    else                               from = to - length;", "-    _selectFoundItem(from, to);", "+", "+    if (_machine.getSearchBackwards()) {", "+      from = offset;", "+      to = offset + length;", "+    }", "+    else {                   ", "+      from = offset - length;", "+      to = offset;", "+    }", "+    _selectFoundOrReplacedItem(from, to);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7aa45230335bf3b5d5e093054508b4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "77b08b2c2aecee48e010895d99d03539a1aa19da", "commitAfterChange": "8c0220c285239f624657ec2660b265363e131e14", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ConfigFrame(MainFrame frame)", "signatureAfterChange": "   public ConfigFrame(MainFrame frame)", "diff": ["-    // Make sure each row is expanded (this is harder than it seems...)", "-    _tree.expandRow(0);", "-    _tree.expandRow(1);", "-    _tree.expandRow(2);", "+    // Make sure each row is expanded", "+    int row = 0;", "+    while(row<_tree.getRowCount()) {", "+      _tree.expandRow(row);", "+      ++row;", "+    }"]}], "num": 10348}