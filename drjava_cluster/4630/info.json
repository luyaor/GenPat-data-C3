{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6edc1dbd95c48c1a77d21bfb740932e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f806b0d051453da8fca96e3f1c1745", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 383, "methodNumberAfterChange": 383, "signatureBeforeChange": "\r \r   public void forIfThenElseStatement(IfThenElseStatement that)", "signatureAfterChange": "    public void forIfThenElseStatement(IfThenElseStatement that)", "diff": ["-\r", "-  public void forIfThenElseStatement(IfThenElseStatement that) {\r", "-    forIfThenElseStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getTestExpression().visit(this);\r", "-    that.getThenStatement().visit(this);\r", "-    that.getElseStatement().visit(this);\r", "-    forIfThenElseStatementOnly(that);\r", "-  }\r", "+", "+  public void forIfThenElseStatement(IfThenElseStatement that) {", "+    forIfThenElseStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getTestExpression().visit(this);", "+    that.getThenStatement().visit(this);", "+    that.getElseStatement().visit(this);", "+    forIfThenElseStatementOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97c0392a29711da954e784ba717d0073", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 382, "methodNumberAfterChange": 382, "signatureBeforeChange": "\r \r   public void forIfThenStatement(IfThenStatement that)", "signatureAfterChange": "    public void forIfThenStatement(IfThenStatement that)", "diff": ["-\r", "-  public void forIfThenStatement(IfThenStatement that) {\r", "-    forIfThenStatementDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getTestExpression().visit(this);\r", "-    that.getThenStatement().visit(this);\r", "-    forIfThenStatementOnly(that);\r", "-  }\r", "+", "+  public void forIfThenStatement(IfThenStatement that) {", "+    forIfThenStatementDoFirst(that);", "+    if (prune(that)) return;", "+    that.getTestExpression().visit(this);", "+    that.getThenStatement().visit(this);", "+    forIfThenStatementOnly(that);", "+  }"]}], "num": 4630}