{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46450c452e3d1f2e4db59ba6ff152571", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "174a9a11fe75e192ac6a7413bfeee16f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaErrorWindow.java", "commitBeforeChange": "f7fe3d35bd562b548ecea0f3cfa106ec01660447", "commitAfterChange": "b7584494b2aa0216aacee11c778709ed6dea34c0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private void updateErrorInfo()", "signatureAfterChange": "   private void updateErrorInfo()", "diff": ["-      String trace;", "+      StringBuilder b = new StringBuilder();", "-        StringBuilder b = new StringBuilder();", "-        trace = b.toString();", "-        trace = StringOps.getStackTrace(_error);", "+        b.append(StringOps.getStackTrace(_error));", "-          trace = trace + \"\\nCaused by:\\n\" + StringOps.getStackTrace(t);", "+          b.append(\"\\nCaused by:\\n\");", "+          b.append(StringOps.getStackTrace(t));", "-      _stackTrace.setText(trace);", "+      ", "+      b.append(\"\\n\\nSystem Properties:\\n\");", "+      java.util.Properties props = System.getProperties();", "+      int size = props.size();", "+      java.util.Iterator entries = props.entrySet().iterator();", "+      while(entries.hasNext()) {", "+        java.util.Map.Entry entry = (java.util.Map.Entry)entries.next();", "+        b.append(entry.getKey());", "+        b.append(\" = \");", "+        if (entry.getKey().equals(\"line.separator\")) {", "+          b.append(\"\\\"\");", "+          String ls = (String)entry.getValue();", "+          for(int i=0; i<ls.length(); ++i) {", "+            int ch = ls.charAt(i);", "+            b.append(\"\\\\u\");", "+            b.append(String.format(\"%04x\", ch));", "+          }", "+          b.append(\"\\\"\");", "+        }", "+        else {", "+          b.append(entry.getValue());", "+        }", "+        b.append(\"\\n\");", "+      }", "+", "+      _stackTrace.setText(b.toString());", "-      msg[0] = String.valueOf(_errorCount)+\" error\"+((_errorCount>1)?\"s\":\"\")+\" occured!\";", "-      _errorInfo = new JOptionPane(msg,JOptionPane.ERROR_MESSAGE,", "-                                       JOptionPane.DEFAULT_OPTION,null,", "-                                       new Object[0]);      ", "+      ", "+      b = new StringBuilder();", "+      b.append(HEADER_HTML);", "+      b.append(_errorCount);", "+      b.append(\" error\");", "+      b.append(((_errorCount>1)?\"s\":\"\"));", "+      b.append(\" occured!<br>\");", "+      b.append(ERRORS_FOOTER_HTML);", "+      _errorInfo = new JEditorPane(\"text/html\", b.toString());", "+      _errorInfo.addHyperlinkListener(new HyperlinkListener() {", "+        public void hyperlinkUpdate(HyperlinkEvent e) {", "+          if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {", "+            try {", "+              PlatformFactory.ONLY.openURL(e.getURL());", "+            } catch(Exception ex) { /* ignore, just not open web page */ }", "+          }", "+        }", "+      });", "+      _errorInfo.setEditable(false);", "+      _errorInfo.setBackground(getContentPane().getBackground());", "-      _errorInfo = new JOptionPane(new String[] {\"No errors occurred!\", \" \", \" \", \" \", \" \", \" \"},JOptionPane.INFORMATION_MESSAGE,", "-                                       JOptionPane.DEFAULT_OPTION,null,", "-                                       new Object[0]);", "+      _errorInfo = new JEditorPane(\"text/html\", HEADER_HTML+NO_ERRORS_HTML);", "+      _errorInfo.addHyperlinkListener(new HyperlinkListener() {", "+        public void hyperlinkUpdate(HyperlinkEvent e) {", "+          if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {", "+            try {", "+              PlatformFactory.ONLY.openURL(e.getURL());", "+            } catch(Exception ex) { /* ignore, just not open web page */ }", "+          }", "+        }", "+      });", "+      _errorInfo.setEditable(false);", "+      _errorInfo.setBackground(getContentPane().getBackground());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34d33e21983cc7ccb4faa0dadbf06b17", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DrJavaErrorWindow.java", "commitBeforeChange": "b55243374fd344a99b71e152a523bbe523612b7b", "commitAfterChange": "21f40abc1b1e49110febfbe137665f4ad897576b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private void updateErrorInfo()", "signatureAfterChange": "   private void updateErrorInfo()", "diff": ["-      b.append(\"\\n\\nSystem Properties:\\n\");", "-      b.append(\"DrJava Version \");", "-      b.append(edu.rice.cs.drjava.Version.getBuildTimeString());", "-      b.append('\\n');", "-      java.util.Properties props = System.getProperties();", "-      int size = props.size();", "-      java.util.Iterator entries = props.entrySet().iterator();", "-      while(entries.hasNext()) {", "-        java.util.Map.Entry entry = (java.util.Map.Entry)entries.next();", "-        b.append(entry.getKey());", "-        b.append(\" = \");", "-        if (entry.getKey().equals(\"line.separator\")) {", "-          b.append(\"\\\"\");", "-          String ls = (String)entry.getValue();", "-          for(int i=0; i<ls.length(); ++i) {", "-            int ch = ls.charAt(i);", "-            b.append(\"\\\\u\");", "-            String hexString = \"0000\" + Integer.toHexString(ch);", "-            b.append(hexString.substring(hexString.length()-4));", "-          }", "-          b.append(\"\\\"\");", "-        }", "-        else {", "-          b.append(entry.getValue());", "-        }", "-        b.append('\\n');", "-      }", "-      b.append('\\n');", "-      ByteArrayOutputStream baos = new ByteArrayOutputStream();", "-      try {", "-        DrJava.getConfig().saveConfiguration(baos, \"DrJava configuration file\");", "-        b.append(baos.toString());", "-      }", "-      catch(java.io.IOException ioe) {", "-        b.append(\"IOException when trying to print DrJava configuration file\");", "-      }", "-      ", "-      b.append(\"\\n\\nUsed memory: about \");", "-      b.append(StringOps.memSizeToString(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory()));", "-      b.append(\"\\nFree memory: about \");", "-      b.append(StringOps.memSizeToString(Runtime.getRuntime().freeMemory()));", "-      b.append(\"\\nTotal memory: about \");", "-      b.append(StringOps.memSizeToString(Runtime.getRuntime().totalMemory()));", "-      b.append(\"\\nTotal memory can expand to: about \");", "-      b.append(StringOps.memSizeToString(Runtime.getRuntime().maxMemory()));", "+      b.append(getSystemAndDrJavaInfo());", "-      // filter out user.dir, user.home and user.name", "-      String infoText = b.toString();", "-", "-      String userHome = System.getProperty(\"user.home\");", "-      String anonUserHome = \"<anonymized user.home>\";", "-      infoText = replaceString(infoText, userHome, anonUserHome);", "-      ", "-      String userDir = System.getProperty(\"user.dir\");", "-      String anonUserDir = \"<anonymized user.dir>\";", "-      infoText = replaceString(infoText, userDir, anonUserDir);", "-      ", "-      String userName = System.getProperty(\"user.name\");", "-      String anonUserName = \"<anonymized user.name>\";", "-      infoText = replaceString(infoText, userName, anonUserName);", "-      ", "-      _stackTrace.setText(infoText);", "+      _stackTrace.setText(b.toString());"]}], "num": 19237}