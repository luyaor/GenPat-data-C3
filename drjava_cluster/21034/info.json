{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68a9bc3b90cee6d43e8b0a09da51591f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de95d37be7cd598d6c04d89558b6423e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/SymbolUtil.java", "commitBeforeChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "commitAfterChange": "9ce155a1f3e34352032d821032cb2dc70024460f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public static Type typeOfPrimitiveClass(Class<?> c)", "signatureAfterChange": "   public static Type typeOfPrimitiveClass(Class<?> c)", "diff": ["+    else if (c.equals(int.class)) { return TypeSystem.INT; }", "+    else if (c.equals(double.class)) { return TypeSystem.DOUBLE; }", "+    else if (c.equals(void.class)) { return TypeSystem.VOID; }", "+    else if (c.equals(long.class)) { return TypeSystem.LONG; }", "-    else if (c.equals(int.class)) { return TypeSystem.INT; }", "-    else if (c.equals(long.class)) { return TypeSystem.LONG; }", "-    else if (c.equals(double.class)) { return TypeSystem.DOUBLE; }", "-    else { throw new IllegalArgumentException(); }", "+    else { throw new IllegalArgumentException(\"Unrecognized primitive: \" + c); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f62b47137207d28d121a9ceaa2d04cbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-hj/edu/rice/cs/drjava/model/compiler/HjCompiler.java", "commitBeforeChange": "503a4c8c883d0c0e1badd33935b5da20910f7033", "commitAfterChange": "bc15f82b93b6ffb78da3a3058742b383768e7aa6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public java.util.List<File> additionalBootClassPathForInteractions()", "signatureAfterChange": "   public java.util.List<File> additionalBootClassPathForInteractions()", "diff": ["-    File parentDir = new File(_location).getParentFile();", "-    try {", "-      File[] jarFiles = new File[] {", "-        Util.oneOf(parentDir, \"sootclasses-2.3.0.jar\"),", "-          Util.oneOf(parentDir, \"polyglot.jar\"),", "-          Util.oneOf(parentDir, \"lpg.jar\"),", "-          Util.oneOf(parentDir, \"jasminclasses-2.3.0.jar\"),", "-          Util.oneOf(parentDir, \"java_cup.jar\"),", "-          Util.oneOf(parentDir, \"hj.jar\")", "-      };", "-      return Arrays.asList(jarFiles);    ", "+    if (_location.equals(FileOps.getDrJavaFile())) {", "+      // all in one, don't need anything else", "+      return Arrays.asList(new File(_location));", "-    catch(FileNotFoundException fnfe) { return Collections.emptyList(); }", "+    else {", "+      File parentDir = new File(_location).getParentFile();", "+      try {", "+        File[] jarFiles = new File[] {", "+          Util.oneOf(parentDir, \"sootclasses-2.3.0.jar\"),", "+            Util.oneOf(parentDir, \"polyglot.jar\"),", "+            Util.oneOf(parentDir, \"lpg.jar\"),", "+            Util.oneOf(parentDir, \"jasminclasses-2.3.0.jar\"),", "+            Util.oneOf(parentDir, \"java_cup.jar\"),", "+            Util.oneOf(parentDir, \"hj.jar\")", "+        };", "+        return Arrays.asList(jarFiles);    ", "+      }", "+      catch(FileNotFoundException fnfe) { return Collections.emptyList(); }", "+    }"]}], "num": 21034}