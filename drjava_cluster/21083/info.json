{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "060bd3d84b9ac30565fbe1f195f9e869", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38751c48136daf0d47fa714608c4c978", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "d63224548fc8865b0ab459659b530c0d39d21fc7", "commitAfterChange": "d8eee91536a378507eadfac2f106d06ff2703bff", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "signatureAfterChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "diff": ["+//    System.err.println(\"Calling _variableDeclaration2VariableData on \" + that);", "+//    System.err.println(\"Constructed vds array = \" + Arrays.toString(vds));", "-      else if (that.getDeclarators()[i] instanceof UninitializedVariableDeclarator) {  ", "-        _addAndIgnoreError(\"All static fields must be initialized\", that);", "-      }", "+      // TODO: where is abstract check?", "+//      else if (that.getDeclarators()[i] instanceof UninitializedVariableDeclarator) {  ", "+//        _addAndIgnoreError(\"All static fields must be initialized\", that);", "+//      }", "-//    System.err.println(\"Constructed vdslist = \" + vdsList);", "+//    System.err.println(\"Processed vds array = \" + Arrays.toString(vds));", "-      _addAndIgnoreError(\"You cannot have two fields with the same name.  Either you already have a field by that name in this class, or one of your superclasses or interfaces has a field by that name\", that);", "+      _addAndIgnoreError(\"You cannot have two fields with the same name.  Either you already have a field by that \"", "+                           + \"name in this class, or one of your superclasses or interfaces has a field by that name\", ", "+                         that);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aeee364882f59a97e2f66b7cb0ab435", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "signatureAfterChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "diff": ["-    //make sure that none of the static fields are uninitialized:", "+    // make sure that every non-static field is private and no static field are uninitialized:", "-    for (int i = 0; i<vds.length; i++) {", "-      if (vds[i].hasModifier(\"static\") && (that.getDeclarators()[i] instanceof UninitializedVariableDeclarator)) {", "+    for (int i = 0; i < vds.length; i++) {", "+      if (! vds[i].isStatic()) vds[i].setPrivate();", "+      else if (that.getDeclarators()[i] instanceof UninitializedVariableDeclarator) {  ", "-      else if (!vds[i].hasModifier(\"static\") && (that.getDeclarators()[i] instanceof InitializedVariableDeclarator)) {", "-        _addAndIgnoreError(\"Only static fields may be initialized outside of a constructor at the Intermediate level\", that);", "-      }", "+//      else if (!vds[i].hasModifier(\"static\") && (that.getDeclarators()[i] instanceof InitializedVariableDeclarator)) {", "+//        _addAndIgnoreError(\"Only static fields may be initialized outside of a constructor at the Intermediate level\", that);", "+//      }", "-      else {", "-        vdsList.addLast(vds[i]);", "-      }", "+      vdsList.addLast(vds[i]);", "-    if(!_classData.addFinalVars(vdsList.toArray(new VariableData[vdsList.size()]))) {", "+//    System.err.println(\"Constructed vdslist = \" + vdsList);", "+    if (! _classData.addFinalVars(vdsList.toArray(new VariableData[vdsList.size()]))) {", "+//      System.err.println(\"Duplicate variable declaration found\");"]}], "num": 21083}