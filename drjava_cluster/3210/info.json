{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ddbfa45354981046780adfe43a5867f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4feeab47527334b1bb013f41fe73ec16", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "          public void testForIfThenElseStatementOnly()", "signatureAfterChange": "          public void testForIfThenElseStatementOnly()", "diff": ["-      IfThenElseStatement ites1 = new IfThenElseStatement(SourceInfo.NO_INFO,", "-                                                          new IntegerLiteral(SourceInfo.NO_INFO, 1),", "-                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 4)),", "-                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new CharLiteral(SourceInfo.NO_INFO, 'j')));", "+      IfThenElseStatement ites1 = new IfThenElseStatement(SourceInfo.NONE,", "+                                                          new IntegerLiteral(SourceInfo.NONE, 1),", "+                                                          new ValueReturnStatement(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 4)),", "+                                                          new ValueReturnStatement(SourceInfo.NONE, new CharLiteral(SourceInfo.NONE, 'j')));", "-      IfThenElseStatement ites2 = new IfThenElseStatement(SourceInfo.NO_INFO,", "-                                                          new BooleanLiteral(SourceInfo.NO_INFO, true),", "-                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 4)),", "-                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new BooleanLiteral(SourceInfo.NO_INFO, true)));", "+      IfThenElseStatement ites2 = new IfThenElseStatement(SourceInfo.NONE,", "+                                                          new BooleanLiteral(SourceInfo.NONE, true),", "+                                                          new ValueReturnStatement(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 4)),", "+                                                          new ValueReturnStatement(SourceInfo.NONE, new BooleanLiteral(SourceInfo.NONE, true)));", "-      IfThenElseStatement ites3 = new IfThenElseStatement(SourceInfo.NO_INFO,", "-                                                          new BooleanLiteral(SourceInfo.NO_INFO, true),", "-                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 4)),", "-                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new CharLiteral(SourceInfo.NO_INFO, 'f')));", "+      IfThenElseStatement ites3 = new IfThenElseStatement(SourceInfo.NONE,", "+                                                          new BooleanLiteral(SourceInfo.NONE, true),", "+                                                          new ValueReturnStatement(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 4)),", "+                                                          new ValueReturnStatement(SourceInfo.NONE, new CharLiteral(SourceInfo.NONE, 'f')));", "-      IfThenElseStatement ites4 = new IfThenElseStatement(SourceInfo.NO_INFO,", "-                                                          new BooleanLiteral(SourceInfo.NO_INFO, true),", "-                                                          new EmptyStatement(SourceInfo.NO_INFO),", "-                                                          new EmptyStatement(SourceInfo.NO_INFO));", "+      IfThenElseStatement ites4 = new IfThenElseStatement(SourceInfo.NONE,", "+                                                          new BooleanLiteral(SourceInfo.NONE, true),", "+                                                          new EmptyStatement(SourceInfo.NONE),", "+                                                          new EmptyStatement(SourceInfo.NONE));", "-      IfThenElseStatement ites5 = new IfThenElseStatement(SourceInfo.NO_INFO,", "-                                                          new BooleanLiteral(SourceInfo.NO_INFO, true),", "-                                                          new EmptyStatement(SourceInfo.NO_INFO),", "-                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 3)));", "+      IfThenElseStatement ites5 = new IfThenElseStatement(SourceInfo.NONE,", "+                                                          new BooleanLiteral(SourceInfo.NONE, true),", "+                                                          new EmptyStatement(SourceInfo.NONE),", "+                                                          new ValueReturnStatement(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 3)));", "-      IfThenElseStatement ites6 = new IfThenElseStatement(SourceInfo.NO_INFO,", "-                                                          new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"boolean\")),", "-                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 4)),", "-                                                          new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 4)));", "+      IfThenElseStatement ites6 = new IfThenElseStatement(SourceInfo.NONE,", "+                                                          new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"boolean\")),", "+                                                          new ValueReturnStatement(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 4)),", "+                                                          new ValueReturnStatement(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 4)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5396e443ac04a73bab7a5df8bbd8b710", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "          public void testForConstructorDef()", "signatureAfterChange": "          public void testForConstructorDef()", "diff": ["-        new VariableDeclarator[] { new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                                                       new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                                                       new Word(SourceInfo.NO_INFO, \"i\"))};", "+        new VariableDeclarator[] { new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                                                       new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                                                       new Word(SourceInfo.NONE, \"i\"))};", "-      VariableDeclaration vd =  new VariableDeclaration(SourceInfo.NO_INFO, _finalMav, vds);", "+      VariableDeclaration vd =  new VariableDeclaration(SourceInfo.NONE, _finalMav, vds);", "-        new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\"));", "+        new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"i\"));", "-        new ExpressionStatement(SourceInfo.NO_INFO, ", "-                                new SimpleAssignmentExpression(SourceInfo.NO_INFO, ", "+        new ExpressionStatement(SourceInfo.NONE, ", "+                                new SimpleAssignmentExpression(SourceInfo.NONE, ", "-                                                               new IntegerLiteral(SourceInfo.NO_INFO, 1)));      ", "-      BracedBody cbb = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] { es });", "-      ConstructorDef cd =  new ConstructorDef(SourceInfo.NO_INFO, ", "-                                              new Word(SourceInfo.NO_INFO, \"Jimes\"), ", "+                                                               new IntegerLiteral(SourceInfo.NONE, 1)));      ", "+      BracedBody cbb = new BracedBody(SourceInfo.NONE, new BodyItemI[] { es });", "+      ConstructorDef cd =  new ConstructorDef(SourceInfo.NONE, ", "+                                              new Word(SourceInfo.NONE, \"Jimes\"), ", "-      BracedBody b = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {vd, cd});", "+      BracedBody b = new BracedBody(SourceInfo.NONE, new BodyItemI[] {vd, cd});", "-        new ClassDef(SourceInfo.NO_INFO, ", "+        new ClassDef(SourceInfo.NONE, ", "-                     new Word(SourceInfo.NO_INFO, \"Jimes\"), ", "+                     new Word(SourceInfo.NONE, \"Jimes\"), ", "-                     new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.io.StreamTokenizer\", new Type[0]), ", "+                     new ClassOrInterfaceType(SourceInfo.NONE, \"java.io.StreamTokenizer\", new Type[0]), ", "-//      SymbolData obj = _cbbtc.getSymbolData(\"java.lang.Object\", new NullLiteral(SourceInfo.NO_INFO), false, true);", "-      SymbolData tokenizer = _cbbtc.getSymbolData(\"java.io.StreamTokenizer\", new NullLiteral(SourceInfo.NO_INFO), false, true);", "+//      SymbolData obj = _cbbtc.getSymbolData(\"java.lang.Object\", new NullLiteral(SourceInfo.NONE), false, true);", "+      SymbolData tokenizer = _cbbtc.getSymbolData(\"java.io.StreamTokenizer\", new NullLiteral(SourceInfo.NONE), false, true);", "-      cbb = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {});", "-      cd = new ConstructorDef(SourceInfo.NO_INFO, ", "-                              new Word(SourceInfo.NO_INFO, \"Jimes\"), ", "+      cbb = new BracedBody(SourceInfo.NONE, new BodyItemI[] {});", "+      cd = new ConstructorDef(SourceInfo.NONE, ", "+                              new Word(SourceInfo.NONE, \"Jimes\"), ", "-      b = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {vd, cd});", "-      classDef = new ClassDef(SourceInfo.NO_INFO, ", "+      b = new BracedBody(SourceInfo.NONE, new BodyItemI[] {vd, cd});", "+      classDef = new ClassDef(SourceInfo.NONE, ", "-                              new Word(SourceInfo.NO_INFO, \"Jimes\"), ", "+                              new Word(SourceInfo.NONE, \"Jimes\"), ", "-                              new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), ", "+                              new ClassOrInterfaceType(SourceInfo.NONE, \"java.lang.Object\", new Type[0]), ", "-      ExpressionStatement assign = new ExpressionStatement(SourceInfo.NO_INFO, new SimpleAssignmentExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"j\")), new IntegerLiteral(SourceInfo.NO_INFO, 45)));", "-      b = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {new ExpressionStatement(SourceInfo.NO_INFO, new SimpleThisConstructorInvocation(SourceInfo.NO_INFO, new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]))), assign});", "-      cd = new ConstructorDef(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"name\"), _publicMav, new FormalParameter[0], new ReferenceType[0], b);", "+      ExpressionStatement assign = new ExpressionStatement(SourceInfo.NONE, new SimpleAssignmentExpression(SourceInfo.NONE, new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"j\")), new IntegerLiteral(SourceInfo.NONE, 45)));", "+      b = new BracedBody(SourceInfo.NONE, new BodyItemI[] {new ExpressionStatement(SourceInfo.NONE, new SimpleThisConstructorInvocation(SourceInfo.NONE, new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0]))), assign});", "+      cd = new ConstructorDef(SourceInfo.NONE, new Word(SourceInfo.NONE, \"name\"), _publicMav, new FormalParameter[0], new ReferenceType[0], b);"]}], "num": 3210}