{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49e592b35e02f735bb91c174614bbe8a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e5a6237b5299fef5c1801638983022a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "d9662e826150124b1e734d8e58f07f87faccd15a", "commitAfterChange": "dd4842ca8ba89600798d5ff08666825edfadfb74", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private void init(boolean info)", "signatureAfterChange": "   private void init(boolean info)", "diff": ["+    _matchList.addMouseListener(new MouseAdapter() {", "+      public void mouseClicked(MouseEvent evt) {", "+        if (evt.getClickCount() == 2) {", "+          removeListener();", "+          int i = _matchList.locationToIndex(evt.getPoint());", "+          _matchList.setSelectedIndex(i);", "+          _matchList.ensureIndexIsVisible(i);", "+          _pim.setCurrentItem(_pim.getMatchingItems().get(i));", "+          updateInfo();", "+          addListener();", "+          okButtonPressed();", "+        }", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6c6fcd468d7c3dae35bd8fbc38b3cfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "4b6c56880670c4bb0f37de6a58c9d30d501c274a", "commitAfterChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public ErrorListPane()", "signatureAfterChange": "     public ErrorListPane()", "diff": ["-      _lastDefPane = _frame.getCurrentDefPane();", "+", "+      _showHighlightsCheckBox = new JCheckBox( \"Highlight source\", true);", "+      _showHighlightsCheckBox.addChangeListener( new ChangeListener() {", "+        public void stateChanged (ChangeEvent ce) {", "+          DefinitionsPane lastDefPane = _frame.getCurrentDefPane();", "+          ", "+          if (_showHighlightsCheckBox.isSelected()) {", "+            lastDefPane.setCaretPosition( lastDefPane.getCaretPosition());", "+            getErrorListPane().switchToError(getSelectedIndex());", "+            lastDefPane.requestFocus();", "+            lastDefPane.getCaret().setVisible(true);", "+          }", "+          else {", "+            lastDefPane.removeErrorHighlight();", "+          }", "+        }", "+      });"]}], "num": 2142}