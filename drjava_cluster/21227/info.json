{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54be4a38713108b8ae9fdec5f4b758fc", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd112d233c98bcb99c1222cba3f00a9c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/InteractionsView.java", "commitBeforeChange": "3101443d576fa6f63ae40ca208e243a26acf0b6b", "commitAfterChange": "0f5802fd0bfcac88fdf9ed629119c5b60fc353ef", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public InteractionsView()", "signatureAfterChange": " \t \tpublic InteractionsView()", "diff": ["-  public InteractionsView() {", "+\t", "+\tpublic InteractionsView() {", "-    // Eval when the user hits enter.", "-    addKeyListener(new KeyAdapter() {", "-                    public void keyTyped(KeyEvent e) {", "-                      if (e.getKeyChar() == '\\n') {", "-                        getInteractionsDocument().eval();", "-                      }", "-                    }", "-                  });", "+\t\t//add actions for indent keay", "+\t\tKeymap ourMap = addKeymap(\"INDENT_KEYMAP\", getKeymap());", "+\t\t", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t (Action) _evalAction);", "+", "+\t\tsetKeymap(ourMap);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f21373ea820e2d1621d2f0459ff75c2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPane.java", "commitBeforeChange": "3101443d576fa6f63ae40ca208e243a26acf0b6b", "commitAfterChange": "0f5802fd0bfcac88fdf9ed629119c5b60fc353ef", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public InteractionsView()", "signatureAfterChange": " \t \tpublic InteractionsView()", "diff": ["-  public InteractionsView() {", "+\t", "+\tpublic InteractionsView() {", "-    // Eval when the user hits enter.", "-    addKeyListener(new KeyAdapter() {", "-                    public void keyTyped(KeyEvent e) {", "-                      if (e.getKeyChar() == '\\n') {", "-                        getInteractionsDocument().eval();", "-                      }", "-                    }", "-                  });", "+\t\t//add actions for indent keay", "+\t\tKeymap ourMap = addKeymap(\"INDENT_KEYMAP\", getKeymap());", "+\t\t", "+\t\tourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t (Action) _evalAction);", "+", "+\t\tsetKeymap(ourMap);", "+"]}], "num": 21227}