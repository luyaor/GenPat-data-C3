{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "353acf8e6e57d1b2d011f15d7e2bb643", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32d8f6908763fcb70bdffc2fdf97ea24", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "cf1b07a5f122d4faa57c9cb7ed7def1489ba2183", "commitAfterChange": "cf133e63dac33b490f37f86f2c16723ac73d3ddb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void _setupPanel(JPanel panel)", "signatureAfterChange": "      private void _setupPanel(JPanel panel)", "diff": ["-     ", "-     JPanel dirPanel = _builtDirectoryPanel();", "-     gridbag.setConstraints(dirPanel, c);", "-     panel.add(dirPanel);", "-     ", "+    ", "+    JPanel dirPanel = _builtDirectoryPanel();", "+    gridbag.setConstraints(dirPanel, c);", "+    panel.add(dirPanel);", "+    ", "-", "+    ", "-", "+    ", "-", "+    ", "-     ", "-//    // Jar output file", "-//    c.weightx = 0.0;", "-//    c.gridwidth = 1;", "-//    c.insets = labelInsets;", "-//", "-//    JLabel jarLabel = new JLabel(\"Jar File\");", "-//    classLabel.setToolTipText(\"The file that the jar is to be written to\");", "-//    gridbag.setConstraints(jarLabel, c);", "-//    panel.add(jarLabel);", "-//", "-//    c.weightx = 1.0;", "-//    c.gridwidth = GridBagConstraints.REMAINDER;", "-//    c.insets = compInsets;", "-//", "-//    JPanel jarFilePanel = _jarFileSelector();", "-//    gridbag.setConstraints(jarFilePanel, c);", "-//    panel.add(jarFilePanel);", "-//", "-//    // Jar manifest file", "-//    c.weightx = 0.0;", "-//    c.gridwidth = 1;", "-//    c.insets = labelInsets;", "-//", "-//    JLabel manifestLabel = new JLabel(\"Jar Manifest File\");", "-//    classLabel.setToolTipText(\"The manifest file that the jar is to be used to create the jar file\");", "-//    gridbag.setConstraints(manifestLabel, c);", "-//    panel.add(manifestLabel);", "-//", "-//    c.weightx = 1.0;", "-//    c.gridwidth = GridBagConstraints.REMAINDER;", "-//    c.insets = compInsets;", "-//", "-//    JPanel manifestFilePanel = _manifestFileSelector();", "-//    gridbag.setConstraints(manifestFilePanel, c);", "-//    panel.add(manifestFilePanel);", "+    ", "+    c.weightx = 0.0;", "+    c.gridwidth = 1;", "+    c.insets = labelInsets;", "+    ", "+    //    ExtraProjectClasspaths", "+    JLabel extrasLabel = new JLabel(\"Extra Classpath\");", "+    extrasLabel.setToolTipText(\"<html>The list of extra classpaths to load with the project.<br>\"+  ", "+                              \"This may include either JAR files or directories. Any<br>\"+", "+                              \"classes defined in these classpath locations will be <br>\"+", "+                              \"visible in the interactions pane and also accessible <br>\"+", "+                              \"by the compiler when compiling the project.</html>\");", "+    gridbag.setConstraints(extrasLabel, c);", "+    panel.add(extrasLabel);", "+    ", "+    c.weightx = 1.0;", "+    c.gridwidth = GridBagConstraints.REMAINDER;", "+    c.insets = compInsets;", "+    ", "+    Component extrasComponent = _extraClasspathComponent();", "+    gridbag.setConstraints(extrasComponent, c);", "+    panel.add(extrasComponent);", "+    ", "+    ", "+    //    // Jar output file", "+    //    c.weightx = 0.0;", "+    //    c.gridwidth = 1;", "+    //    c.insets = labelInsets;", "+    //", "+    //    JLabel jarLabel = new JLabel(\"Jar File\");", "+    //    classLabel.setToolTipText(\"The file that the jar is to be written to\");", "+    //    gridbag.setConstraints(jarLabel, c);", "+    //    panel.add(jarLabel);", "+    //", "+    //    c.weightx = 1.0;", "+    //    c.gridwidth = GridBagConstraints.REMAINDER;", "+    //    c.insets = compInsets;", "+    //", "+    //    JPanel jarFilePanel = _jarFileSelector();", "+    //    gridbag.setConstraints(jarFilePanel, c);", "+    //    panel.add(jarFilePanel);", "+    //", "+    //    // Jar manifest file", "+    //    c.weightx = 0.0;", "+    //    c.gridwidth = 1;", "+    //    c.insets = labelInsets;", "+    //", "+    //    JLabel manifestLabel = new JLabel(\"Jar Manifest File\");", "+    //    classLabel.setToolTipText(\"The manifest file that the jar is to be used to create the jar file\");", "+    //    gridbag.setConstraints(manifestLabel, c);", "+    //    panel.add(manifestLabel);", "+    //", "+    //    c.weightx = 1.0;", "+    //    c.gridwidth = GridBagConstraints.REMAINDER;", "+    //    c.insets = compInsets;", "+    //", "+    //    JPanel manifestFilePanel = _manifestFileSelector();", "+    //    gridbag.setConstraints(manifestFilePanel, c);", "+    //    panel.add(manifestFilePanel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69a5c21154d13758d0f7c413e77fdeb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "fee21edb1b15f1499b5409a250cdb90d3f204739", "commitAfterChange": "e100da4da75b9cbdfc04df45bf52679ed811f23a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "    private void _setupPanel(JPanel panel)", "signatureAfterChange": "    private void _setupPanel(JPanel panel)", "diff": ["-    ", "+", "+", "+    c.weightx = 1.0;", "+    c.gridwidth = GridBagConstraints.REMAINDER;", "+    c.insets = compInsets;", "+", "+    _autoRefreshComponent = new JCheckBox();", "+    gridbag.setConstraints(_autoRefreshComponent, c);", "+    panel.add(_autoRefreshComponent);    ", "+", "+    c.weightx = 0.0;", "+    c.gridwidth = 1;", "+    c.insets = labelInsets;", "+    ", "+    //    Files excluded from auto-refresh", "+    JLabel excludedLabel = new JLabel(\"<html>Files Excluded from<br>Auto-Refresh</html>\");", "+    excludedLabel.setToolTipText(\"<html>The list of source files excluded from project auto-refresh.<br>\"+", "+                                 \"These files will not be added to the project.</html>\");", "+    gridbag.setConstraints(excludedLabel, c);", "+    panel.add(excludedLabel);", "-    _autoRefreshComponent = new JCheckBox();", "-    panel.add(_autoRefreshComponent);", "+    Component excludedComponent = _excludedFilesComponent();", "+    gridbag.setConstraints(excludedComponent, c);", "+    panel.add(excludedComponent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "749cb6222fd1e8ffcc71ce9b01903dc2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/NewJavaClassDialog.java", "commitBeforeChange": "6207c0d4b83ee23d6d4624c513f270e47c43cc83", "commitAfterChange": "f4c8eb851d98f4da2479f32fb767dac4b3a40e1c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "    private void _setupPanel(JPanel panel)", "signatureAfterChange": "      private void _setupPanel(JPanel panel)", "diff": ["-  private void _setupPanel(JPanel panel) {", "+  ", "+  private void _setupPanel(JPanel panel) {    ", "-", "+    ", "+    _className.setPreferredSize(new Dimension(250, _className.getPreferredSize().height));    ", "-    c.gridwidth = GridBagConstraints.REMAINDER;", "-    c.insets = compInsets;", "+    c.gridwidth = 1;", "+    c.insets = new Insets(5, 5, 0, 0);", "+    _addAutoCompleteActions(_superClass);", "+    ", "+    c.weightx = 0.0;", "+    c.gridwidth = GridBagConstraints.REMAINDER;", "+    c.insets = new Insets(5, 0, 0, 10);", "+    _superClassButton.setToolTipText(\"<html>Select the superclass.</html>\");", "+    gridbag.setConstraints(_superClassButton, c);", "+    panel.add(_superClassButton);", "-", "+    ", "-", "+    ", "-", "+    ", "-    ", "-    // Modifiers: public/default", "-    c.weightx = 0.0;", "-    c.gridwidth = 1;", "-    c.insets = labelInsets;", "-", "-    prLabel = new JLabel(\"Access modifier\");", "-    prLabel.setToolTipText(\"<html>Class access modifier.</html>\");", "-    gridbag.setConstraints(prLabel, c);", "-", "-    panel.add(prLabel);", "-    c.weightx = 1.0;", "-    c.gridwidth = GridBagConstraints.REMAINDER;", "-    c.insets = compInsets;", "-", "-    JPanel accessPanel = new JPanel();", "-    accessPanel.setLayout(new BoxLayout(accessPanel, BoxLayout.X_AXIS));", "-    accessPanel.add(_publicRadio);", "-    accessPanel.add(_defaultRadio);", "-    gridbag.setConstraints(accessPanel, c);", "-    panel.add(accessPanel);", "-", "-    // Modifiers: abstract/final", "-    c.weightx = 0.0;", "-    c.gridwidth = 1;", "-    c.insets = labelInsets;", "-", "-    prLabel = new JLabel(\"Other modifiers\");", "-    prLabel.setToolTipText(\"<html>final or abstract class modifiers.</html>\");", "-    gridbag.setConstraints(prLabel, c);", "-", "-    panel.add(prLabel);", "-    c.weightx = 1.0;", "-    c.gridwidth = GridBagConstraints.REMAINDER;", "-    c.insets = compInsets;", "-", "-    JPanel faPanel = new JPanel();", "-    faPanel.setLayout(new BoxLayout(faPanel, BoxLayout.X_AXIS));", "-    faPanel.add(_abstractCheck);", "-    faPanel.add(_finalCheck);", "-    gridbag.setConstraints(faPanel, c);", "-    panel.add(faPanel);", "-    _finalCheck.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent actionEvent) {", "-        if (_finalCheck.isSelected()) _abstractCheck.setSelected(false);", "-      }", "-    });", "-    _abstractCheck.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent actionEvent) {", "-        if (_abstractCheck.isSelected()) _finalCheck.setSelected(false);", "-      }", "-    });", "-", "-    // Include ctor", "-    c.weightx = 0.0;", "-    c.gridwidth = 1;", "-    c.insets = labelInsets;", "-", "-    prLabel = new JLabel(\"\");", "-    gridbag.setConstraints(prLabel, c);", "-", "-    panel.add(prLabel);", "-    c.weightx = 1.0;", "-    c.gridwidth = GridBagConstraints.REMAINDER;", "-    c.insets = compInsets;", "-", "-    gridbag.setConstraints(_classConstructor, c);", "-    panel.add(_classConstructor);", "-", "-    // Include ctor", "-    c.weightx = 0.0;", "-    c.gridwidth = 1;", "-    c.insets = labelInsets;", "-", "-    prLabel = new JLabel(\"\");", "-    gridbag.setConstraints(prLabel, c);", "-", "-    panel.add(prLabel);", "-    c.weightx = 1.0;", "-    c.gridwidth = GridBagConstraints.REMAINDER;", "-    c.insets = compInsets;", "-", "-    gridbag.setConstraints(_mainMethod, c);", "-    panel.add(_mainMethod);", "+      ", "+    if (!_isElementaryOrFunctionalJava) {", "+      // Modifiers: public/default", "+      c.weightx = 0.0;", "+      c.gridwidth = 1;", "+      c.insets = labelInsets;", "+      ", "+      prLabel = new JLabel(\"Access modifier\");", "+      prLabel.setToolTipText(\"<html>Class access modifier.</html>\");", "+      gridbag.setConstraints(prLabel, c);", "+      ", "+      panel.add(prLabel);", "+      c.weightx = 1.0;", "+      c.gridwidth = GridBagConstraints.REMAINDER;", "+      c.insets = compInsets;", "+      ", "+      JPanel accessPanel = new JPanel();", "+      accessPanel.setLayout(new BoxLayout(accessPanel, BoxLayout.X_AXIS));", "+      accessPanel.add(_publicRadio);", "+      accessPanel.add(_defaultRadio);", "+      gridbag.setConstraints(accessPanel, c);", "+      panel.add(accessPanel);", "+      ", "+      // Modifiers: abstract/final", "+      c.weightx = 0.0;", "+      c.gridwidth = 1;", "+      c.insets = labelInsets;", "+      ", "+      prLabel = new JLabel(\"Other modifiers\");", "+      prLabel.setToolTipText(\"<html>final or abstract class modifiers.</html>\");", "+      gridbag.setConstraints(prLabel, c);", "+      ", "+      panel.add(prLabel);", "+      c.weightx = 1.0;", "+      c.gridwidth = GridBagConstraints.REMAINDER;", "+      c.insets = compInsets;", "+      ", "+      JPanel faPanel = new JPanel();", "+      faPanel.setLayout(new BoxLayout(faPanel, BoxLayout.X_AXIS));", "+      faPanel.add(_abstractCheck);", "+      faPanel.add(_finalCheck);", "+      gridbag.setConstraints(faPanel, c);", "+      panel.add(faPanel);", "+      _finalCheck.addActionListener(new ActionListener() {", "+        public void actionPerformed(ActionEvent actionEvent) {", "+          if (_finalCheck.isSelected()) _abstractCheck.setSelected(false);", "+        }", "+      });", "+      _abstractCheck.addActionListener(new ActionListener() {", "+        public void actionPerformed(ActionEvent actionEvent) {", "+          if (_abstractCheck.isSelected()) _finalCheck.setSelected(false);", "+        }", "+      });", "+      ", "+      // Include ctor", "+      c.weightx = 0.0;", "+      c.gridwidth = 1;", "+      c.insets = labelInsets;", "+      ", "+      prLabel = new JLabel(\"\");", "+      gridbag.setConstraints(prLabel, c);", "+      ", "+      panel.add(prLabel);", "+      c.weightx = 1.0;", "+      c.gridwidth = GridBagConstraints.REMAINDER;", "+      c.insets = compInsets;", "+      ", "+      gridbag.setConstraints(_classConstructor, c);", "+      panel.add(_classConstructor);", "+      ", "+      // Include main method", "+      c.weightx = 0.0;", "+      c.gridwidth = 1;", "+      c.insets = labelInsets;", "+      ", "+      prLabel = new JLabel(\"\");", "+      gridbag.setConstraints(prLabel, c);", "+      ", "+      panel.add(prLabel);", "+      c.weightx = 1.0;", "+      c.gridwidth = GridBagConstraints.REMAINDER;", "+      c.insets = compInsets;", "+      ", "+      gridbag.setConstraints(_mainMethod, c);", "+      panel.add(_mainMethod);", "+    }"]}], "num": 13161}