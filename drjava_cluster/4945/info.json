{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35d7c2460dcf2e07c24192b066a0f96b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e5ef4ab96feea56789cf6158cca25ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FileSelectorComponent.java", "commitBeforeChange": "bdfa5a75e18c9a41c7b54cf4b050565d5259c993", "commitAfterChange": "6d6c1ac3ec27ffa3d3bf77467ebf9f5a22844b8e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public FileSelectorComponent(Frame parent, JFileChooser chooser,                                int numCols, float fontSize)", "signatureAfterChange": "   public FileSelectorComponent(Frame parent, JFileChooser chooser,                                int numCols, float fontSize)", "diff": ["-", "-    _fileField = new JTextField();", "-    _fileField.setColumns(numCols);", "+    ", "+    _fileField = new JTextField(numCols) {", "+      public Dimension getMaximumSize() {", "+        return new Dimension(Short.MAX_VALUE, super.getPreferredSize().height);", "+      }", "+    };", "-", "-    _chooserButton = new JButton();", "+    _fileField.setPreferredSize(new Dimension(22,22));", "+    ", "+    _chooserButton = new JButton(\"...\");", "-    _chooserButton.setText(\"...\");", "-    _chooserButton.setMaximumSize(new Dimension(10, 10));", "-    _chooserButton.setMinimumSize(new Dimension(10, 10));", "-", "+    _chooserButton.setMaximumSize(new Dimension(22, 22));", "+    _chooserButton.setMargin(new Insets(0,5,0,5));", "-    this.setLayout(new BorderLayout());", "-    this.add(_fileField, BorderLayout.CENTER);", "-    this.add(_chooserButton, BorderLayout.EAST);", "+    this.setLayout(new BoxLayout(this, BoxLayout.X_AXIS));", "+    this.add(_fileField);", "+    this.add(_chooserButton);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecdab7b6a059e0f8b1e9295de367f5dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "dac1911c42074b029b90bbb69267d350628d7300", "commitAfterChange": "6ac6b30c03b8f321199592a97e544cb4056701f0", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "        public static void main(String... args)", "signatureAfterChange": "        public static void main(String... args)", "diff": ["-    ArgumentParser.Result parsedArgs = argParser.parse(args);", "+    final ArgumentParser.Result parsedArgs = argParser.parse(args);", "-    final TypeSystem ts = parsedArgs.hasOption(\"jls\") ? JLSTypeSystem.INSTANCE : ExtendedTypeSystem.INSTANCE;", "-      public TypeSystem typeSystem() { return ts; }", "-      public boolean enforceAllAccess() { return true; }", "+      @Override protected Thunk<? extends TypeSystem> typeSystemFactory() {", "+        TypeSystem result = parsedArgs.hasOption(\"jls\") ? new JLSTypeSystem(this) : new ExtendedTypeSystem(this);", "+        return LambdaUtil.valueLambda(result);", "+      }", "+      @Override public boolean enforceAllAccess() { return true; }", "+      @Override public boolean prohibitUncheckedCasts() { return false; }"]}], "num": 4945}