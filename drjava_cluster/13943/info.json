{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e75dcef7d406a66b0cb6520f30567a8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69c299cee4e83bd77c5b4f3b87d36aa2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "efc072ede22ea55faaadbf97a73c4466d939ffd3", "commitAfterChange": "0eb7fcb52c65dc5248fffbf667b1fb96b5218a87", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void _init()", "signatureAfterChange": "      private void _init()", "diff": ["+    ", "+    // setup option listener for clipboard history", "+    OptionListener<Integer> clipboardHistorySizeListener = new OptionListener<Integer>() {", "+      public void optionChanged(OptionEvent<Integer> oce) {", "+        ClipboardHistoryModel.singleton().resize(oce.value);", "+      }", "+    };", "+    DrJava.getConfig().addOptionListener(CLIPBOARD_HISTORY_SIZE, clipboardHistorySizeListener);", "+    clipboardHistorySizeListener.optionChanged(new OptionEvent<Integer>(CLIPBOARD_HISTORY_SIZE, ", "+                                                                        DrJava.getConfig().getSetting(CLIPBOARD_HISTORY_SIZE).intValue()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd89fd1e7f6db1c7796cd64aaae95357", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "512f2d01a44aebe9e820ea2b6904a7d9ee6beac7", "commitAfterChange": "7f5ff64d986e80db8fa3ceeb1048b991af6a4ea0", "methodNumberBeforeChange": 269, "methodNumberAfterChange": 270, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["+    OptionListener<String> link382OptionListener = new OptionListener<String>() {", "+      public void optionChanged(OptionEvent<String> oce) {", "+        _javaAPIList = null;", "+      }", "+    };", "+    DrJava.getConfig().addOptionListener(JUNIT_3_8_2_LINK, link382OptionListener);", "+    OptionListener<Vector<String>> additionalLinkOptionListener = new OptionListener<Vector<String>>() {", "+      public void optionChanged(OptionEvent<Vector<String>> oce) {", "+        _javaAPIList = null;", "+      }", "+    };", "+    DrJava.getConfig().addOptionListener(JAVADOC_ADDITIONAL_LINKS, additionalLinkOptionListener);"]}], "num": 13943}