{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab328e9b1b10d50d256a43b3a83bb219", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b9ba70c3e8e41ff0e3c0cd1c19dd3d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public void testFileMovedWhenTriedToSave()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testFileMovedWhenTriedToSave()     throws BadLocationException, IOException", "diff": ["-    final OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "+    OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "-    saveFile(doc, new FileSelector(file));", "+    doc.saveFile(new FileSelector(file));", "+    try {", "+      doc.saveFile(new WarningFileSelector(file));", "+      fail(\"Save file should have thrown an exception\");", "+    }", "+    catch (GlobalModelTestCase.FileMovedWarningException fme) {", "+      // this is expected to occur:", "+      //  WarningFileSelector throws it in shouldSaveAfterFileMoved()", "+    }", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() { ", "-        try { ", "-          doc.saveFile(new WarningFileSelector(file));", "-          fail(\"Did not warn of open file as expected\");", "-        }", "-        catch (Exception e) { /* Good behavior for file saving ... */ }", "-      }", "-    });", "-", "-   ", "+    ", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49c1069487ad73b5d6c9665d740ca764", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileIOTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testCompileAfterFileMoved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileAfterFileMoved() throws BadLocationException, IOException", "diff": ["-    final OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "+    OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "-    saveFile(doc, new FileSelector(file));", "+    doc.saveFile(new FileSelector(file));", "-    Utilities.invokeLater(new Runnable() { ", "-      public void run() {", "-        try {", "-          doc.startCompile();", "-          fail(\"Compile should not have begun.\");", "-        }", "-        catch(FileMovedException e) { /* The expected behavior! */ }", "-        catch(Exception e) { throw new UnexpectedException(e); }", "-      }", "-    });", "-", "+    try {", "+      doc.startCompile();", "+      fail(\"Compile should not have begun.\");", "+    }", "+    catch (FileMovedException fme) {", "+      //compile should never have begun because the file was not where it was expected", "+      // to be on disk.", "+    }"]}], "num": 18316}