{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2da7695cad8c141fdec42300a2b49e61", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e6ec8cfc6f73ea9ac68d2fb158bad82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "commitAfterChange": "6082e28d363f7796f6c9506e0c82e9e5f29262e2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "    public boolean closeFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "    public boolean closeFile(OpenDefinitionsDocument doc)", "diff": ["-     INavigatorItem switchTo =_documentNavigator.getNext(getIDocGivenODD(doc));", "-     /** if we can't move forward, go backwards */", "-     if( switchTo == getIDocGivenODD(doc)) {", "-       switchTo = _documentNavigator.getPrevious(switchTo);", "-     }", "+//     INavigatorItem switchTo =_documentNavigator.getNext(getIDocGivenODD(doc));", "+//     /** if we can't move forward, go backwards */", "+//     if( switchTo == getIDocGivenODD(doc)) {", "+//       switchTo = _documentNavigator.getPrevious(switchTo);", "+//     }", "-//         if( _hasOneEmptyDocument() ) {", "+         // if( _hasOneEmptyDocument() ) {", "-           _setActiveFirstDocument();", "+           setActiveFirstDocument();", "-         else {", "-           /* this will select the active document in the navigator, which", "-            * will signal a listener to call _setActiveDoc(...)", "-            */", "-           _documentNavigator.setActiveDoc(switchTo);", "-           //    _setActiveDoc(switchTo);", "-         }", "+//         else {", "+//           /* this will select the active document in the navigator, which", "+//            * will signal a listener to call _setActiveDoc(...)", "+//            */", "+//           _documentNavigator.setActiveDoc(switchTo);", "+//           //_setActiveDoc(switchTo);", "+//         }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aafe6301164c9df776dc96229712a495", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "4276346051c6ab89c146c0041be28826e7dfbe12", "commitAfterChange": "86bed99990f6eb7fff2cb31d595e17b49135df26", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "    public synchronized boolean closeFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "    public synchronized boolean closeFile(OpenDefinitionsDocument doc)", "diff": ["-//     INavigatorItem switchTo =_documentNavigator.getNext(getIDocGivenODD(doc));", "-//     /** if we can't move forward, go backwards */", "-//     if( switchTo == getIDocGivenODD(doc)) {", "-//       switchTo = _documentNavigator.getPrevious(switchTo);", "-//     }", "-     ", "-     if( super.closeFile(doc) ) {", "-       // Select next document if not closing all documents", "-       if (!_isClosingAllDocs) {", "-         _ensureNotEmpty();", "-         ", "-         // if( _hasOneEmptyDocument() ) {", "-         if(getDocumentCount() == 1){", "-           setActiveFirstDocument();", "-         }", "-//         else {", "-//           /* this will select the active document in the navigator, which", "-//            * will signal a listener to call _setActiveDoc(...)", "-//            */", "-//           _documentNavigator.setActiveDoc(switchTo);", "-//           //_setActiveDoc(switchTo);", "-//         }", "-       }", "-       return true;", "-     }", "-     return false;", "+     List<OpenDefinitionsDocument> list = new LinkedList<OpenDefinitionsDocument>();", "+     list.add(doc);", "+     return closeFiles(list, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d394dfad1072436de054630531d576a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "commitAfterChange": "c657da4404f6681bffc368045343d4bc04e51744", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public boolean closeFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "    public boolean closeFile(OpenDefinitionsDocument doc)", "diff": ["-  public boolean closeFile(OpenDefinitionsDocument doc) {", "-      INavigatorItem switchTo =_documentNavigator.getNext(getIDocGivenODD(doc));", "-      /** if we can't move forward, go backwards */", "-      if( switchTo == getIDocGivenODD(doc)) {", "-   switchTo = _documentNavigator.getPrevious(switchTo);", "-      }", "-", "-      if( super.closeFile(doc) ) {", "-   // Select next document if not closing all documents", "-   if (!_isClosingAllDocs) {", "-       _ensureNotEmpty();", "-", "-       if( getDefinitionsDocumentsSize() == 1 ) {", "-         _setActiveFirstDocument();", "+   public boolean closeFile(OpenDefinitionsDocument doc) {", "+     INavigatorItem switchTo =_documentNavigator.getNext(getIDocGivenODD(doc));", "+     /** if we can't move forward, go backwards */", "+     if( switchTo == getIDocGivenODD(doc)) {", "+       switchTo = _documentNavigator.getPrevious(switchTo);", "+     }", "+     ", "+     if( super.closeFile(doc) ) {", "+       // Select next document if not closing all documents", "+       if (!_isClosingAllDocs) {", "+         _ensureNotEmpty();", "+         ", "+//         if( _hasOneEmptyDocument() ) {", "+         if(getDocumentCount() == 1){", "+           _setActiveFirstDocument();", "+         }", "+         else {", "+           /* this will select the active document in the navigator, which", "+            * will signal a listener to call _setActiveDoc(...)", "+            */", "+           _documentNavigator.setActiveDoc(switchTo);", "+           //    _setActiveDoc(switchTo);", "+         }", "-       else {", "-        /* this will select the active document in the navigator, which", "-         * will signal a listener to call _setActiveDoc(...)", "-         */", "-    _documentNavigator.setActiveDoc(switchTo);", "-    //    _setActiveDoc(switchTo);", "-       }", "+       return true;", "+     }", "+     return false;", "-   return true;", "-      }", "-      return false;", "-  }"]}], "num": 28637}