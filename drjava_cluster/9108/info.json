{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6fdbaa5bbdbf720acdd8510ecb68d1ec", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ad1d19ecb3871c660e071f1fe685d41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceOnPrevLineTest.java", "commitBeforeChange": "33157731339c994882aa1f63ed4a691707c328ca", "commitAfterChange": "fa574fcc12a57f48a5de7be234043f4f78711418", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testOnlyCurly() throws BadLocationException", "signatureAfterChange": "      public void testOnlyCurly() throws BadLocationException", "diff": ["-\t/*", "-\t/* (1)* /", "+\t/* (1) */", "-\t    \"{ /* block1* / }\\n\" +", "-\t    \"{ /* block2* / }\\n\" +", "-\t    \"{ /* block3* / }\";", "+\t    \"{ /* block1 */ }\\n\" +", "+\t    \"{ /* block2 */ }\\n\" +", "+\t    \"{ /* block3 */ }\";", "-\tassertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0));\t    ", "-\tassertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 7));\t    ", "-\tassertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 28));\t    ", "-\tassertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 30));\t    ", "-\tassertTrue(\"START has no brace.\", !_rule.applyRule(_doc, _text.length() - 1));\t    ", "+        try { _rule.applyRule(_doc, 0); fail(\"START has no brace.\"); }", "+\tcatch (UnexpectedException e) {}", "+        try { _rule.applyRule(_doc, 7); fail(\"START has no brace.\"); }", "+\tcatch (UnexpectedException e) {}", "+        try { _rule.applyRule(_doc, 28); fail(\"START has no brace.\"); }", "+\tcatch (UnexpectedException e) {}", "+        try { _rule.applyRule(_doc, 30); fail(\"START has no brace.\"); }", "+\tcatch (UnexpectedException e) {}", "+        try { _rule.applyRule(_doc, _text.length()-1); fail(\"START has no brace.\"); }", "+\tcatch (UnexpectedException e) {}", "-\t/* (2)* /", "+\t/* (2) */", "-\tassertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0));\t    ", "-\t*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0abf80f8ccbe21d4f31e1bdc051f45c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ReflectUtilTest.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testLoadObject() throws Exception", "signatureAfterChange": "         public void testLoadObject() throws Exception", "diff": ["-  }", "+", "+    try { loadObject(\"fishing.boats\"); fail(\"expected exception\"); }", "+    try { loadObject(\"edu.rice.cs.plt.reflect.ReflectUtilTest\", 23); fail(\"expected exception\"); }", "+    try { loadObject(\"java.lang.Comparable\"); fail(\"expected exception\"); }", "+    try {", "+      loadObject(\"edu.rice.cs.plt.lambda.LazyThunk\", LambdaUtil.nullLambda());", "+      fail(\"expected exception\");", "+    }", "+    try { loadObject(\"java.lang.String\", new char[]{'a', 'b'}, -1, 23); fail(\"expected exception\"); }", "+    try {", "+      loadObject(\"edu.rice.cs.plt.reflect.ReflectUtilTest\", new Class[0], 23);", "+      fail(\"expected exception\");", "+    }", "+    try {", "+      loadObject(\"edu.rice.cs.plt.lambda.LazyThunk\", new Class<?>[]{Thunk.class}, \"I'm not a thunk\");", "+      fail(\"expected exception\");", "+    }", "+      fail(\"expected exception\");"]}], "num": 9108}