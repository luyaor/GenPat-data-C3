{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5628e77af8ffa8e5af0f3bbd796ff688", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e331c27c28931c0f9c16733d8f29f86", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceOnPrevLine.java", "commitBeforeChange": "33157731339c994882aa1f63ed4a691707c328ca", "commitAfterChange": "fa574fcc12a57f48a5de7be234043f4f78711418", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    ", "+      ", "+      ", "+    int distToBrace = info.distToBrace;", "+      ", "+    // If there is no brace, s.th. went wrong!", "+      ", "+    if (distToBrace == -1) ", "+      throw new UnexpectedException(new RuntimeException(\"Precondition for QuestionBraceOnPrevLine \" +", "+\t\t\t\t\t\t\t \"not met: there is no brace.\"));", "-    //info.distToPrevNewline;    //______|\\n_____x___", "-    //info.distToNewline;        //______\\n|____{_____x___", "-    //info.distToBrace;          //______|{_____x___", "+    int distToNewline = info.distToPrevNewline;", "-    return true;", "+    // If we are on the first line of the document,", "+    // then there is no previous line. If the brace", "+    // is on the same line, we return false.", "+    ", "+    if (distToNewline == -1 || distToNewline > distToBrace) return false;", "+    ", "+    int location = doc.getCurrentLocation();", "+    String text;", "-    /*", "-     * pos := START", "-     * counter := 0", "-     *", "-     * while (pos > DOCSTART)   ", "-     *    if char[pos] = '{' ", "-     *       return (counter = 1)     [if pos is not in // comment!!]", "-     *  ", "-     *    else if char[pos] = '\\n'", "-     *       counter := counter + 1", "-     *       pos := pos - 1", "-     *", "-     * return false", "-     *", "-     */", "+    try", "+    {", "+      text = doc.getText(location-distToBrace+1, distToBrace-distToNewline-2);", "+    }", "+    catch (BadLocationException e)", "+    {", "+      throw new UnexpectedException(new RuntimeException(\"doc.getText() failed.\"));", "+    }", "+", "+    // There should be no further '\\n' between our newline and ", "+    // our brace for this rule to apply.", "+ ", "+    for(int i = distToBrace-distToNewline-3; i >= 0; i--)", "+    {", "+      if (text.charAt(i) == '\\n') return false;", "+    }", "+    return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ffa73c78bfe7692d5c6ed61becd280e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartStmtOfBracePlus.java", "commitBeforeChange": "70db0284b961b782fbf10e4ee909c772468f8240", "commitAfterChange": "fa8797d559c4407e7439087045a904fdcd0edde8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-    throw new RuntimeException(\"Not yet implemented.\");", "-    ", "-    /**", "-    int startPos = startOfLine(doc, pos);", "-    IndentInfo ii = doc.getIndentInfo(startPos);", "-    int bracePos = ii.positionOfBrace;", "-    int endOfPrevStmt = findPrevDelimiter(doc, bracePos, {';','{','}'});", "-    int startStmtBrace = getFirstNonWSChar(doc, endOfPrevStmt);", "-    int indent = getWSToPrevNewLine(doc, startStmtBrace);", "+    int pos = doc.getCurrentLocation();", "+", "+    // Get distance to brace", "+    IndentInfo info = doc.getReduced().getIndentInformation();", "+    int distToBrace = info.distToBrace;", "+      ", "+    // If there is no brace, s.th. went wrong!", "+    if (distToBrace == -1) {", "+      throw new UnexpectedException(new RuntimeException(\"Precondition for ActionStartStmtOfBracePlus \" +", "+\t\t\t\t\t\t\t \"not met: there is no brace.\"));", "+    }", "+", "+    // Get the absolute position of the brace", "+    int bracePos = pos - distToBrace;", "+", "+    String indent = \"\";", "+    try {", "+      indent = doc.getIndentOfCurrStmt(bracePos);", "+    } catch (BadLocationException e) {", "+      // Should not happen", "+      throw new UnexpectedException(e);", "+    }", "+", "-    ", "-    adjustIndent(doc, startPos, indent);", "-    */", "+", "+    doc.setTab(indent, pos);"]}], "num": 4431}