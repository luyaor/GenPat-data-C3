{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b53f450a9ac808a2f7c93ef255e6d89b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af319a20ea05ea0d958f4636f6f363dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "commitAfterChange": "d933be24919e2ab110f61a795910708e74f868c4", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   protected VariableData[] formalParameters2VariableData(FormalParameter[] fps, SymbolData enclosing)", "signatureAfterChange": "   protected VariableData[] formalParameters2VariableData(FormalParameter[] fps, SymbolData enclosing)", "diff": ["+    ", "-    // Should conssolidate with same method in FullJavadVisitor; almost identical", "+    // Should consolidate with same method in FullJavadVisitor; almost identical", "-    VariableDeclarator vd;", "-    for (int i = 0; i < varData.length; i++) {", "-      vd = fps[i].getDeclarator();", "+    for (int i = 0; i < fps.length; i++) {", "+      VariableDeclarator vd = fps[i].getDeclarator();", "+        /* The following is a kludge to make method signature collision detection work (unless different", "+         * names are used for the same type). */", "+        varData[j].setType(new SymbolData(typeName));", "-   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb39c7eefa3a8dfa244cb130d9ea995b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "8ffb3ce85dd256ff9cb8d7378cb82fb3debde2f9", "commitAfterChange": "0df41f295768b78613155bc47fcd824786200608", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "   public static File getShortFile(File f) throws IOException", "signatureAfterChange": "   public static File getShortFile(File f) throws IOException", "diff": ["-            if (line.equals(f.getName())) {", "+            // do a case-insensitive comparison here to accomodate Windows", "+            // we later check if it's the same file", "+            if (line.toLowerCase().equals(f.getName().toLowerCase())) {", "-            else if (line.startsWith(f.getName()) && f.getName().contains(\"~\")) {", "+            else if (line.toLowerCase().startsWith(f.getName().toLowerCase()) && f.getName().contains(\"~\")) {", "-            else if (line.endsWith(\" \"+f.getName())) {", "+            else if (line.toLowerCase().endsWith(\" \"+f.getName().toLowerCase())) {"]}], "num": 4017}