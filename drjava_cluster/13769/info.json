{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75002b8fe0e193e75d30960bfc8a4050", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac7195a920c894fa5a719a6f5c0345bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r   public void forCatchBlock(CatchBlock that)", "signatureAfterChange": "   public void forCatchBlock(CatchBlock that)", "diff": ["-   */\r", "-  public void forCatchBlock(CatchBlock that) {\r", "-    forCatchBlockDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    \r", "-    Block b = that.getBlock();\r", "-    forBlockDoFirst(b);\r", "-    if (prune(b)) { return; }\r", "-    BlockData bd = new BlockData(_bodyData);\r", "-    _bodyData.addBlock(bd);\r", "-    \r", "-    VariableData exceptionVar = formalParameters2VariableData(new FormalParameter[]{ that.getException() }, bd)[0];\r", "-    if (prune(that.getException())) { return; }\r", "-    bd.addVar(exceptionVar);\r", "-    \r", "-    b.getStatements().visit(new BodyBodyIntermediateVisitor(bd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));\r", "-    forBlockOnly(b);\r", "-    forCatchBlockOnly(that);\r", "-  }\r", "+   */", "+  public void forCatchBlock(CatchBlock that) {", "+    forCatchBlockDoFirst(that);", "+    if (prune(that)) return;", "+    ", "+    Block b = that.getBlock();", "+    forBlockDoFirst(b);", "+    if (prune(b)) return;", "+    BlockData bd = new BlockData(_bodyData);", "+    _bodyData.addBlock(bd);", "+    ", "+    VariableData exceptionVar = formalParameters2VariableData(new FormalParameter[]{ that.getException() }, bd)[0];", "+    if (prune(that.getException())) return;", "+    bd.addVar(exceptionVar);", "+    ", "+    b.getStatements().visit(new BodyBodyIntermediateVisitor(bd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    forBlockOnly(b);", "+    forCatchBlockOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6b64823907178162b0b41d5d4b30336", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyAdvancedVisitor.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r   public void forCatchBlock(CatchBlock that)", "signatureAfterChange": "   public void forCatchBlock(CatchBlock that)", "diff": ["-   */\r", "-  public void forCatchBlock(CatchBlock that) {\r", "-    forCatchBlockDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    \r", "-    Block b = that.getBlock();\r", "-    forBlockDoFirst(b);\r", "-    if (prune(b)) { return; }\r", "-    BlockData bd = new BlockData(_bodyData);\r", "-    _bodyData.addBlock(bd);\r", "-    \r", "-    VariableData exceptionVar = formalParameters2VariableData(new FormalParameter[]{ that.getException() }, bd)[0];\r", "-    if (prune(that.getException())) { return; }\r", "-    bd.addVar(exceptionVar);\r", "-    \r", "-    b.getStatements().visit(new BodyBodyIntermediateVisitor(bd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));\r", "-    forBlockOnly(b);\r", "-    forCatchBlockOnly(that);\r", "-  }\r", "+   */", "+  public void forCatchBlock(CatchBlock that) {", "+    forCatchBlockDoFirst(that);", "+    if (prune(that)) return;", "+    ", "+    Block b = that.getBlock();", "+    forBlockDoFirst(b);", "+    if (prune(b)) return;", "+    BlockData bd = new BlockData(_bodyData);", "+    _bodyData.addBlock(bd);", "+    ", "+    VariableData exceptionVar = formalParameters2VariableData(new FormalParameter[]{ that.getException() }, bd)[0];", "+    if (prune(that.getException())) return;", "+    bd.addVar(exceptionVar);", "+    ", "+    b.getStatements().visit(new BodyBodyIntermediateVisitor(bd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    forBlockOnly(b);", "+    forCatchBlockOnly(that);", "+  }"]}], "num": 13769}