{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "750be1b553978e7ac4c546e4c22cf1bf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f9efed30f065bdd28adcf955616ac1b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": "      public void testInnerInstanceAllocationExpression() throws ParseException", "signatureAfterChange": "      public void testInnerInstanceAllocationExpression() throws ParseException", "diff": ["-    expectedAST.add(new InnerAllocation(new AmbiguousName(\"list\"), \"Iterator\", null, args)); ", "-    verifyOutput( \"list.new Iterator(3)\", expectedAST);", "+    Expression expected = new InnerAllocation(new AmbiguousName(\"list\"), \"Iterator\", null, args); ", "+    verifyExprOutput( \"list.new Iterator(3)\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1144d757dabf932e3de3626fca93ed3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 37, "signatureBeforeChange": "      public void testBinaryOpExpression() throws ParseException", "signatureAfterChange": "      public void testBinaryOpExpression() throws ParseException", "diff": ["-    expectedAST.add(new ShiftLeftExpression(new AmbiguousName(\"i\"), new IntegerLiteral(\"5\")));", "+    Expression expected = new ShiftLeftExpression(new AmbiguousName(\"i\"), new IntegerLiteral(\"5\"));", "-    verifyOutput( \" (i) << (5) \", expectedAST);", "+    verifyExprOutput( \" (i) << (5) \", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13dae5eee7b45d64c9e9e87ad6ade8ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": "      public void testArrayAllocationExpression2() throws ParseException", "signatureAfterChange": "      public void testArrayAllocationExpression2() throws ParseException", "diff": ["-    expectedAST.add(new ArrayAllocation(new IntTypeName(), new ArrayAllocation.TypeDescriptor(new LinkedList<Expression>(), 1, new ArrayInitializer(cells), -1, -1)));", "+    Expression expected = new ArrayAllocation(new IntTypeName(), new ArrayAllocation.TypeDescriptor(new LinkedList<Expression>(), 1, new ArrayInitializer(cells), -1, -1));", "-    verifyOutput( \"new int[]{ 0,1,2,3 }\", expectedAST);", "+    verifyExprOutput( \"new int[]{ 0,1,2,3 }\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d0fe615613451b1e354b248349a44b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 58, "signatureBeforeChange": "      public void testMethodInvocation() throws ParseException", "signatureAfterChange": "      public void testMethodInvocation() throws ParseException", "diff": ["-    expectedAST.add(new ObjectMethodCall(new AmbiguousName(\"e\"),\"meth\", args, null, -1, -1, -1, -1));", "-    verifyOutput(\"e.meth(new Object(), 5, false)\", expectedAST);", "+    Expression expected = new ObjectMethodCall(new AmbiguousName(\"e\"),\"meth\", args, null, -1, -1, -1, -1);", "+    verifyExprOutput(\"e.meth(new Object(), 5, false)\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20cd7d82e792504cfd4cca44c9c4bdbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": "      public void testIntegerLiteral() throws ParseException", "signatureAfterChange": "      public void testIntegerLiteral() throws ParseException", "diff": ["-    expectedAST.add(new IntegerLiteral(\"3593\"));", "+    Expression expected = new IntegerLiteral(\"3593\");", "-    verifyOutput( \"3593\", expectedAST);", "+    verifyExprOutput( \"3593\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "262d302fc146f0880b0dcde1d9408fb7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": "      public void testQualifiedNameFieldAccess() throws ParseException", "signatureAfterChange": "      public void testQualifiedNameFieldAccess() throws ParseException", "diff": ["-    expectedAST.add(new ObjectFieldAccess(new AmbiguousName(idnt), \"x\"));", "-    verifyOutput(\"java.awt.event.ActionEvent.x\", expectedAST);", "+    Expression expected = new ObjectFieldAccess(new AmbiguousName(idnt), \"x\");", "+    verifyExprOutput(\"java.awt.event.ActionEvent.x\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27f02b65cab17148ca552e0fad9ff9a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": "      public void testPreIncrementExpression() throws ParseException", "signatureAfterChange": "      public void testPreIncrementExpression() throws ParseException", "diff": ["-    expectedAST.add(new PreIncrement(new AmbiguousName(\"x\")));", "+    Expression expected = new PreIncrement(new AmbiguousName(\"x\"));", "-    verifyOutput( \"++(x)\", expectedAST);", "+    verifyExprOutput( \"++(x)\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "326bc49e3258715f86a04ff6be829ac7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": "         public void testConditionalExpression() throws ParseException", "signatureAfterChange": "         public void testConditionalExpression() throws ParseException", "diff": ["-    expectedAST.add(new ConditionalExpression(new BooleanLiteral(true), new BooleanLiteral(false), new BooleanLiteral(true)));", "+    Expression expected = new ConditionalExpression(new BooleanLiteral(true), new BooleanLiteral(false), new BooleanLiteral(true));", "-    verifyOutput( \"((true)?(false):(true))\", expectedAST);", "+    verifyExprOutput( \"((true)?(false):(true))\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ffd55333ed3f9a72f195f8605704972", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 55, "signatureBeforeChange": "      public void testArrayAccess() throws ParseException", "signatureAfterChange": "      public void testArrayAccess() throws ParseException", "diff": ["-    expectedAST.add(new ArrayAccess(new AmbiguousName(\"v\"), new IntegerLiteral(\"5\")));", "-    verifyOutput(\"v[5]\", expectedAST);", "+    Expression expected = new ArrayAccess(new AmbiguousName(\"v\"), new IntegerLiteral(\"5\"));", "+    verifyExprOutput(\"v[5]\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44e2e2aa7a835a4947c0843b53ac46f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "      public void testQualifiedNameClassField() throws ParseException", "signatureAfterChange": "      public void testQualifiedNameClassField() throws ParseException", "diff": ["-    expectedAST.add( new TypeExpression(new ReferenceTypeName(\"java.awt.event.ActionEvent\")));", "-    verifyOutput(\"java.awt.event.ActionEvent.class\", expectedAST);", "+    Expression expected =  new TypeExpression(new ReferenceTypeName(\"java.awt.event.ActionEvent\"));", "+    verifyExprOutput(\"java.awt.event.ActionEvent.class\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "479684774162322ad767861ef2eec617", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 53, "signatureBeforeChange": "      public void testDotThis() throws ParseException", "signatureAfterChange": "      public void testDotThis() throws ParseException", "diff": ["-    expectedAST.add(new ThisExpression(ident, null, -1, -1, -1, -1));", "-    verifyOutput(\"List.this\", expectedAST);", "+    Expression expected = new ThisExpression(ident, null, -1, -1, -1, -1);", "+    verifyExprOutput(\"List.this\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61cb35c76e6d1ff1b762e2a815044e04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 41, "signatureBeforeChange": "      public void testPostDecrementExpression() throws ParseException", "signatureAfterChange": "      public void testPostDecrementExpression() throws ParseException", "diff": ["-    expectedAST.add(new PostDecrement(new AmbiguousName(\"l\")));", "+    Expression expected = new PostDecrement(new AmbiguousName(\"l\"));", "-    verifyOutput( \"(l)--\", expectedAST);", "+    verifyExprOutput( \"(l)--\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72d720b0947902f49d5a230f694dd1ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": "      public void testInstanceOfExpression() throws ParseException", "signatureAfterChange": "      public void testInstanceOfExpression() throws ParseException", "diff": ["-    expectedAST.add(new InstanceOfExpression(new AmbiguousName(\"v\"), new ReferenceTypeName(\"String\")));", "-    verifyOutput( \"((v) instanceof String)\", expectedAST);", "+    Expression expected = new InstanceOfExpression(new AmbiguousName(\"v\"), new ReferenceTypeName(\"String\"));", "+    verifyExprOutput( \"((v) instanceof String)\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75d04a28d8ed92671a1094fd4e1c58e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": "      public void testNormalAssignment() throws ParseException", "signatureAfterChange": "      public void testNormalAssignment() throws ParseException", "diff": ["-    expectedAST.add(new SimpleAssignExpression(new AmbiguousName(\"i\"), new IntegerLiteral(\"3\")));", "+    Expression expected = new SimpleAssignExpression(new AmbiguousName(\"i\"), new IntegerLiteral(\"3\"));", "-    verifyOutput( \" (i = 3) \", expectedAST);", "+    verifyExprOutput( \" (i = 3) \", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "782cee2c382547a55b669a6cd45b9948", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": "      public void testName() throws ParseException", "signatureAfterChange": "      public void testName() throws ParseException", "diff": ["-    expectedAST.add( new AmbiguousName(\"g\"));", "-    verifyOutput(\"g\", expectedAST);", "+    Expression expected = new AmbiguousName(\"g\");", "+    verifyExprOutput(\"g\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82b827efbf88a6314ddef1ce8ee1769a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": "      public void testQualifiedNameClass() throws ParseException", "signatureAfterChange": "      public void testQualifiedNameClass() throws ParseException", "diff": ["-    expectedAST.add(new ObjectFieldAccess(new AmbiguousName(idnt), \"x\"));", "-    verifyOutput(\"X.java.awt.event.ActionEvent.x\", expectedAST);", "+    Expression expected = new ObjectFieldAccess(new AmbiguousName(idnt), \"x\");", "+    verifyExprOutput(\"X.java.awt.event.ActionEvent.x\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8917365524596c01bc548b3805319d2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 39, "signatureBeforeChange": "      public void testCompoundAssignment() throws ParseException", "signatureAfterChange": "      public void testCompoundAssignment() throws ParseException", "diff": ["-    expectedAST.add(new ExclusiveOrAssignExpression(new AmbiguousName(\"i\"), new AmbiguousName(\"j\")));", "+    Expression expected = new ExclusiveOrAssignExpression(new AmbiguousName(\"i\"), new AmbiguousName(\"j\"));", "-    verifyOutput( \" (i ^= j) \", expectedAST);", "+    verifyExprOutput( \" (i ^= j) \", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "996811434909a8a1698367c665fe3b84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 43, "signatureBeforeChange": "      public void testStringLiteral() throws ParseException", "signatureAfterChange": "      public void testStringLiteral() throws ParseException", "diff": ["-    expectedAST.add(new StringLiteral(\"\\\"big time\\\"\"));", "+    Expression expected = new StringLiteral(\"\\\"big time\\\"\");", "-    verifyOutput( \" \\\"big time\\\" \", expectedAST);", "+    verifyExprOutput( \" \\\"big time\\\" \", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f20179604cd9fd13e3662bc37956214", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": "      public void testDotClass() throws ParseException", "signatureAfterChange": "      public void testDotClass() throws ParseException", "diff": ["-    expectedAST.add(new TypeExpression(new ReferenceTypeName(\"List\")));", "-    verifyOutput(\"List.class\", expectedAST);", "+    Expression expected = new TypeExpression(new ReferenceTypeName(\"List\"));", "+    verifyExprOutput(\"List.class\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d75c95257aebf6863dba6831ded21ea1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": "      public void testQualifiedCastExpression() throws ParseException", "signatureAfterChange": "      public void testQualifiedCastExpression() throws ParseException", "diff": ["-    expectedAST.add(new CastExpression(new ReferenceTypeName(\"java.lang.String\"), new SimpleAllocation(new ReferenceTypeName(\"java.lang.Object\"), null)));", "-    verifyOutput( \"((java.lang.String) (new java.lang.Object()))\", expectedAST);", "+    Expression expected = new CastExpression(new ReferenceTypeName(\"java.lang.String\"), new SimpleAllocation(new ReferenceTypeName(\"java.lang.Object\"), null));", "+    verifyExprOutput( \"((java.lang.String) (new java.lang.Object()))\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3cd0ed3d52df72a23f7be1586bd018f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 56, "signatureBeforeChange": "      public void testMemberAccess()  throws ParseException", "signatureAfterChange": "      public void testMemberAccess()  throws ParseException", "diff": ["-    expectedAST.add(new ObjectFieldAccess(new AmbiguousName(\"r\"), \"f\"));", "-    verifyOutput(\"r.f\", expectedAST);", "+    Expression expected = new ObjectFieldAccess(new AmbiguousName(\"r\"), \"f\");", "+    verifyExprOutput(\"r.f\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e96502f44b101caa2da343f6b826d444", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 57, "signatureBeforeChange": "      public void testSuperMemberAccess()  throws ParseException", "signatureAfterChange": "      public void testSuperMemberAccess()  throws ParseException", "diff": ["-    expectedAST.add(new SuperFieldAccess(\"d\"));", "-    verifyOutput(\"super.d\", expectedAST);", "+    Expression expected = new SuperFieldAccess(\"d\");", "+    verifyExprOutput(\"super.d\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb0d8dde57b0337aa8849848fd8d1b9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "      public void testCastExpression() throws ParseException", "signatureAfterChange": "      public void testCastExpression() throws ParseException", "diff": ["-    expectedAST.add(new CastExpression(new ReferenceTypeName(\"String\"), new SimpleAllocation(new ReferenceTypeName(\"Object\"), null)));", "-    verifyOutput( \"((String) (new Object()))\", expectedAST);", "+    Expression expected = new CastExpression(new ReferenceTypeName(\"String\"), new SimpleAllocation(new ReferenceTypeName(\"Object\"), null));", "+    verifyExprOutput( \"((String) (new Object()))\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f44151fcc67b52ff655c063240268086", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "      public void testArrayAllocationExpression() throws ParseException", "signatureAfterChange": "      public void testArrayAllocationExpression() throws ParseException", "diff": ["-    expectedAST.add(new ArrayAllocation(new IntTypeName(), new ArrayAllocation.TypeDescriptor(sizes, 1, null, -1, -1)));", "+    Expression expected = new ArrayAllocation(new IntTypeName(), new ArrayAllocation.TypeDescriptor(sizes, 1, null, -1, -1));", "-    verifyOutput( \"new int[foo]\", expectedAST);", "+    verifyExprOutput( \"new int[foo]\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f64bafe12442b9131f95decbffcc5f55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": "      public void testInstanceAllocationExpression() throws ParseException", "signatureAfterChange": "      public void testInstanceAllocationExpression() throws ParseException", "diff": ["-    expectedAST.add(new SimpleAllocation(new ReferenceTypeName(\"C\"), args)); ", "+    Expression expected = new SimpleAllocation(new ReferenceTypeName(\"C\"), args); ", "-    verifyOutput( \" new C(3) \", expectedAST);", "+    verifyExprOutput( \" new C(3) \", expected);"]}], "num": 23389}