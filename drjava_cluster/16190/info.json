{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e4414a1a560072727fa7ccc51db68e9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40020fca29642f64576e6eec3a08eb9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAlreadySaved() throws Exception", "diff": ["-  public void testSaveAlreadySaved() throws BadLocationException, IOException {", "+  public void testSaveAlreadySaved() throws Exception {", "+    Utilities.clearEventQueue();  // config changes rely on the event thread", "-    OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "+    final OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "-    doc.saveFile(new FileSelector(file));", "+    assertFalse(\"Confirm that backup status is initially false\", DrJava.getConfig().getSetting(BACKUP_FILES));", "+    saveFile(doc, new FileSelector(file));", "-        catch (FileMovedException fme) { fail(\"file does not exist\"); }   // We know file should exist", "+        catch (FileMovedException fme) { ", "+//          System.err.println(\"File \" + f + \" to be saved DOES NOT EXIST\");", "+          fail(\"file does not exist\"); // We know file should exist", "+        }   ", "-    File backup = new File(file.getPath() + \"~\");", "+    final File backup = new File(file.getPath() + \"~\");", "+//    System.err.println(\"fileName = \" + file);", "+//    System.err.println(\"backupName = \" + backup);", "+    ", "+    assertFalse(\"Confirm that backup has been deleted if it already existed\", backup.exists());", "+    Utilities.clearEventQueue();", "+    ", "+//    System.err.println(\"Document text = '\" + doc.getText() + \"'\");", "-    doc.saveFile(new FileSelector(file));", "+    saveFile(doc, new FileSelector(file)); ", "-    Utilities.clearEventQueue();", "+//    Utilities.clearEventQueue();", "-    assertEquals(\"contents of saved file 2nd write\", BAR_TEXT, IOUtil.toString(file));", "-    assertFalse(\"no backup was made\", backup.exists());", "-    ", "+    assertEquals(\"Contents of saved file 2nd write\", BAR_TEXT, IOUtil.toString(file));", "+    assertFalse(\"No backup was made\", backup.exists());", "+//    System.err.println(\"Confirm that \" + backup + \" does not exist: \" + backup.exists());", "+    ", "+    Utilities.clearEventQueue();", "+", "+//    System.err.println(\"Backup status = \" + DrJava.getConfig().getSetting(BACKUP_FILES) + \" for backup file \" + backup);", "+//    System.err.println(\"Before saving to '\" + file + \"', confirm \" + backup + \" does not exist: \" + backup.exists());", "+    ", "+    assertTrue(\"Confirm that BACKUP_FILES is true\", DrJava.getConfig().getSetting(BACKUP_FILES));", "+    assertFalse(\"Confirm that backup file \" + backup + \" does not yet exist\", backup.exists());", "+    assertEquals(\"Confirm that file \" + file + \" was modified properly\", BAR_TEXT, IOUtil.toString(file));", "+//    System.err.println(\"Old contents of file \" + file + \" = '\" + IOUtil.toString(file) + \"'\");", "+     // Save over top of the previous file", "+    saveFile(doc, new FileSelector(file));", "-    // Save over top of the previous file", "-    doc.saveFile(new FileSelector(file));", "+    assertTrue(\"Confirm that backup file \" + backup + \" was created\", backup.exists());", "-    Utilities.clearEventQueue();", "+//    System.err.println(\"After saving, confirm \" + backup + \" exists: \" + backup.exists());", "+//    System.err.println(\"Backup has contents '\" + IOUtil.toString(backup) + \"'\");", "+//    System.err.println(\"New file has contents '\" + IOUtil.toString(file) + \"'\");", "+", "+//    System.err.println(\"After checking save count, confirm \" + backup + \" exists: \" + backup.exists());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb0db759e29c31bc4ec88e97b125a221", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void testSaveAlreadySaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testSaveAlreadySaved() throws Exception", "diff": ["-  public void testSaveAlreadySaved() throws BadLocationException, IOException {", "+  public void testSaveAlreadySaved() throws Exception {", "+    Utilities.clearEventQueue();  // config changes rely on the event thread", "-    OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "+    final OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "-    doc.saveFile(new FileSelector(file));", "+    assertFalse(\"Confirm that backup status is initially false\", DrJava.getConfig().getSetting(BACKUP_FILES));", "+    saveFile(doc, new FileSelector(file));", "-        catch (FileMovedException fme) { fail(\"file does not exist\"); }   // We know file should exist", "+        catch (FileMovedException fme) { ", "+//          System.err.println(\"File \" + f + \" to be saved DOES NOT EXIST\");", "+          fail(\"file does not exist\"); // We know file should exist", "+        }   ", "-    File backup = new File(file.getPath() + \"~\");", "+    final File backup = new File(file.getPath() + \"~\");", "+//    System.err.println(\"fileName = \" + file);", "+//    System.err.println(\"backupName = \" + backup);", "+    ", "+    assertFalse(\"Confirm that backup has been deleted if it already existed\", backup.exists());", "+    Utilities.clearEventQueue();", "+    ", "+//    System.err.println(\"Document text = '\" + doc.getText() + \"'\");", "-    doc.saveFile(new FileSelector(file));", "+    saveFile(doc, new FileSelector(file)); ", "-    Utilities.clearEventQueue();", "+//    Utilities.clearEventQueue();", "-    assertEquals(\"contents of saved file 2nd write\", BAR_TEXT, IOUtil.toString(file));", "-    assertFalse(\"no backup was made\", backup.exists());", "-    ", "+    assertEquals(\"Contents of saved file 2nd write\", BAR_TEXT, IOUtil.toString(file));", "+    assertFalse(\"No backup was made\", backup.exists());", "+//    System.err.println(\"Confirm that \" + backup + \" does not exist: \" + backup.exists());", "+    ", "+    Utilities.clearEventQueue();", "+", "+//    System.err.println(\"Backup status = \" + DrJava.getConfig().getSetting(BACKUP_FILES) + \" for backup file \" + backup);", "+//    System.err.println(\"Before saving to '\" + file + \"', confirm \" + backup + \" does not exist: \" + backup.exists());", "+    ", "+    assertTrue(\"Confirm that BACKUP_FILES is true\", DrJava.getConfig().getSetting(BACKUP_FILES));", "+    assertFalse(\"Confirm that backup file \" + backup + \" does not yet exist\", backup.exists());", "+    assertEquals(\"Confirm that file \" + file + \" was modified properly\", BAR_TEXT, IOUtil.toString(file));", "+//    System.err.println(\"Old contents of file \" + file + \" = '\" + IOUtil.toString(file) + \"'\");", "+     // Save over top of the previous file", "+    saveFile(doc, new FileSelector(file));", "-    // Save over top of the previous file", "-    doc.saveFile(new FileSelector(file));", "+    assertTrue(\"Confirm that backup file \" + backup + \" was created\", backup.exists());", "-    Utilities.clearEventQueue();", "+//    System.err.println(\"After saving, confirm \" + backup + \" exists: \" + backup.exists());", "+//    System.err.println(\"Backup has contents '\" + IOUtil.toString(backup) + \"'\");", "+//    System.err.println(\"New file has contents '\" + IOUtil.toString(file) + \"'\");", "+", "+//    System.err.println(\"After checking save count, confirm \" + backup + \" exists: \" + backup.exists());"]}], "num": 16190}