{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0417910e20d6e28bd22766a2b325b856", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d21477719af505a8c425a8d1f332c3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ea3de3bd50de8d728bdb5d615bd9b8838d2e94b4", "commitAfterChange": "c8bdd45b172c9714aba30b2edf20a9a7463e66ab", "methodNumberBeforeChange": 272, "methodNumberAfterChange": 274, "signatureBeforeChange": "      private void _removeAuxiliary()", "signatureAfterChange": "      private void _removeAuxiliary()", "diff": ["-    OpenDefinitionsDocument d = _model.getDocumentNavigator().getCurrent();", "-    if (d != null) {", "-      if (! d.isUntitled()) {", "-        _model.removeAuxiliaryFile(d);", "-        try{", "-          _model.getDocumentNavigator().refreshDocument(d, _model.fixPathForNavigator(d.getFile().getCanonicalPath()));", "+    // now works with multiple files", "+    ", "+    for(OpenDefinitionsDocument d: _model.getDocumentNavigator().getSelectedDocuments()) {", "+      // OpenDefinitionsDocument d = _model.getDocumentNavigator().getCurrent();", "+      if (d != null) {", "+        if (! d.isUntitled()) {", "+          _model.removeAuxiliaryFile(d);", "+          try{", "+            _model.getDocumentNavigator().refreshDocument(d, _model.fixPathForNavigator(d.getFile().getCanonicalPath()));", "+          }", "+          catch(IOException e) { /* do nothing */ }", "-        catch(IOException e) { /* do nothing */ }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83dd71d57c68f4283d395a331b020fc2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "7100bfae3584eff8b8b1993fd999385d8f88ea13", "commitAfterChange": "6bcdef7d4202e06be1c5717fc181a0fdfcc7756a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void addActionForKeyStroke(KeyStroke stroke, Action action)", "signatureAfterChange": "     public void addActionForKeyStroke(Vector<KeyStroke> stroke, Action action)", "diff": ["-    public void addActionForKeyStroke(KeyStroke stroke, Action action) {", "-      // we don't want multiple keys bound to the same action", "+    public void addActionForKeyStroke(Vector<KeyStroke> stroke, Action action) {", "+      // remove previous bindings", "-      _keymap.addActionForKeyStroke(stroke, action);", "+      for (KeyStroke ks: stroke) {", "+        _keymap.addActionForKeyStroke(ks, action);", "+      }"]}], "num": 12379}