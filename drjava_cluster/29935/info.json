{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99c937898565184d5ced63590a50d059", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02ce6cf5ee5d9e8e48564829780ed9ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": "    final public List<Type> TypeArguments() throws ParseException", "signatureAfterChange": "   final public List<Type> TypeArguments() throws ParseException", "diff": ["+//    | ", "-    Type temp;", "+    ReferenceType hookedType = new ReferenceType(\"java.lang.Object\");", "+    Type temp = new HookType(hookedType, false);", "+    Token hook = null;", "+    Token supered = null;", "-    temp = type();", "+    if (jj_2_63(2147483647)) {", "+      hook = jj_consume_token(HOOK);", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case EXTENDS:", "+      case SUPER:", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case EXTENDS:", "+          jj_consume_token(EXTENDS);", "+          break;", "+        case SUPER:", "+          jj_consume_token(SUPER);", "+          break;", "+        default:", "+          jj_la1[211] = jj_gen;", "+          jj_consume_token(-1);", "+          throw new ParseException();", "+        }", "+        hookedType = ReferenceTypeName();", "+        break;", "+      default:", "+        jj_la1[212] = jj_gen;", "+        ;", "+      }", "+    } else {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case BOOLEAN:", "+      case BYTE:", "+      case CHAR:", "+      case DOUBLE:", "+      case FLOAT:", "+      case INT:", "+      case LONG:", "+      case SHORT:", "+      case IDENTIFIER:", "+        temp = type();", "+        break;", "+      default:", "+        jj_la1[213] = jj_gen;", "+        jj_consume_token(-1);", "+        throw new ParseException();", "+      }", "+    }", "+      if(hook!= null)", "+        temp = new HookType(hookedType, (supered!=null));", "-        jj_la1[212] = jj_gen;", "+        jj_la1[214] = jj_gen;", "-      temp = type();", "+      if (jj_2_64(2147483647)) {", "+        hook = jj_consume_token(HOOK);", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case EXTENDS:", "+        case SUPER:", "+          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+          case EXTENDS:", "+            jj_consume_token(EXTENDS);", "+            break;", "+          case SUPER:", "+            jj_consume_token(SUPER);", "+            break;", "+          default:", "+            jj_la1[215] = jj_gen;", "+            jj_consume_token(-1);", "+            throw new ParseException();", "+          }", "+          hookedType = ReferenceTypeName();", "+          break;", "+        default:", "+          jj_la1[216] = jj_gen;", "+          ;", "+        }", "+      } else {", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case BOOLEAN:", "+        case BYTE:", "+        case CHAR:", "+        case DOUBLE:", "+        case FLOAT:", "+        case INT:", "+        case LONG:", "+        case SHORT:", "+        case IDENTIFIER:", "+          temp = type();", "+          break;", "+        default:", "+          jj_la1[217] = jj_gen;", "+          jj_consume_token(-1);", "+          throw new ParseException();", "+        }", "+      }", "+      if(hook!= null)", "+        temp = new HookType(hookedType, (supered!=null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a35c6cf23ca71f0188eb74a0e0254dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": "   final public List StreamItem() throws ParseException", "signatureAfterChange": "   final public List StreamItem() throws ParseException", "diff": ["-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case PACKAGE:", "-      root = packageDeclaration();", "-      break;", "-    case IMPORT:", "-      root = importDeclaration();", "-      break;", "-    default:", "-      jj_la1[3] = jj_gen;", "-      if (jj_2_2(2147483647)) {", "-        root = methodDeclaration();", "-      } else if (jj_2_3(2147483647)) {", "-        l = localVariableDeclaration();", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-        case SEMICOLON:", "-          jj_consume_token(SEMICOLON);", "-          break;", "-        case 0:", "-          jj_consume_token(0);", "-          break;", "-        default:", "-          jj_la1[2] = jj_gen;", "-          jj_consume_token(-1);", "-          throw new ParseException();", "-        }", "-      } else if (jj_2_4(2147483647)) {", "-        root = topLevelStatement();", "-      } else {", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-        case ABSTRACT:", "-        case CLASS:", "-        case FINAL:", "-        case INTERFACE:", "-        case NATIVE:", "-        case PRIVATE:", "-        case PROTECTED:", "-        case PUBLIC:", "-        case STATIC:", "-        case SYNCHRONIZED:", "-        case TRANSIENT:", "-        case VOLATILE:", "-          root = typeDeclaration();", "-          break;", "-        default:", "-          jj_la1[4] = jj_gen;", "-          jj_consume_token(-1);", "-          throw new ParseException();", "+    try {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case PACKAGE:", "+        root = packageDeclaration();", "+        break;", "+      case IMPORT:", "+        root = importDeclaration();", "+        break;", "+      default:", "+        jj_la1[3] = jj_gen;", "+        if (jj_2_2(2147483647)) {", "+          root = methodDeclaration();", "+        } else if (jj_2_3(2147483647)) {", "+          l = localVariableDeclaration();", "+          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+          case SEMICOLON:", "+            jj_consume_token(SEMICOLON);", "+            break;", "+          case 0:", "+            jj_consume_token(0);", "+            break;", "+          default:", "+            jj_la1[2] = jj_gen;", "+            jj_consume_token(-1);", "+            throw new ParseException();", "+          }", "+        } else if (jj_2_4(2147483647)) {", "+          root = topLevelStatement();", "+        } else {", "+          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+          case ABSTRACT:", "+          case CLASS:", "+          case FINAL:", "+          case INTERFACE:", "+          case NATIVE:", "+          case PRIVATE:", "+          case PROTECTED:", "+          case PUBLIC:", "+          case STATIC:", "+          case SYNCHRONIZED:", "+          case TRANSIENT:", "+          case VOLATILE:", "+            root = typeDeclaration();", "+            break;", "+          default:", "+            jj_la1[4] = jj_gen;", "+            jj_consume_token(-1);", "+            throw new ParseException();", "+          }", "-    }", "-       if (root != null) {", "+        if (root != null) {", "-       }", "-       {if (true) return l;}", "+        }", "+        {if (true) return l;}", "+    } catch (ParseException pe) {", "+      _throwParseException(pe, \"Invalid Stream Item\");", "+    }"]}], "num": 29935}