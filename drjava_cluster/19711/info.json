{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e39c9b1c3c38d32f781168a195b2d688", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "669bdac174d9093382f8f1692ec16cd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "ff9333e71e149a259aa78828cab4c9a697c57c55", "commitAfterChange": "9063c30c220a374fd05cad2179b7b27d5702591e", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 131, "signatureBeforeChange": "   public static <T> Command1<T> asCommand(final Lambda<? super T, ?> lambda)", "signatureAfterChange": "   public static <T> Runnable1<T> asRunnable(final Lambda<? super T, ?> lambda)", "diff": ["-  /** @return  A command that executes the given lambda (ignoring the result) */", "-  public static <T> Command1<T> asCommand(final Lambda<? super T, ?> lambda) {", "-    return new Command1<T>() { public void run(T arg) { lambda.value(arg); } };", "+  /** @return  A runnable that executes the given lambda (ignoring the result) */", "+  public static <T> Runnable1<T> asRunnable(final Lambda<? super T, ?> lambda) {", "+    return new Runnable1<T>() { public void run(T arg) { lambda.value(arg); } };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1113d477e126c3c80f1fcc31c82e810", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 271, "signatureBeforeChange": "   public static <T> Runnable1<T> asRunnable(final Lambda<? super T, ?> lambda)", "signatureAfterChange": "   public static <T> Runnable1<T> asRunnable(Lambda<? super T, ?> lambda)", "diff": ["-  /** @return  A runnable that executes the given lambda (ignoring the result) */", "-  public static <T> Runnable1<T> asRunnable(final Lambda<? super T, ?> lambda) {", "-    return new Runnable1<T>() { public void run(T arg) { lambda.value(arg); } };", "-  }", "+  /** Create a runnable that executes the given lambda (ignoring the result). */", "+  public static <T> Runnable1<T> asRunnable(Lambda<? super T, ?> lambda) {", "+    return new LambdaRunnable1<T>(lambda);", "+  }"]}], "num": 19711}