{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38c6bc2048889402fa15db40b4651c13", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5544051c976b3584b9dbe27337ba882", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "7f0431102d802f25498e6ad5a22057f937b25cb6", "commitAfterChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void _checkHighlightStatusConsistent(Vector<HighlightStatus> v,                                                int start,                                                int end)", "signatureAfterChange": "   private void _checkHighlightStatusConsistent(Vector<HighlightStatus> v,                                                int start,                                                int end)", "diff": ["+", "+      // Sanity check: length > 0?", "+      assertTrue(\"Item #\" + i + \" in highlight vector has positive length\",", "+                 v.elementAt(i).getLength() > 0);", "+      ", "-    assertEquals(\"Highlight vector ends at right place\",", "-                 walk,", "-                 end);", "+    assertEquals(\"Location after walking highlight vector\",", "+                 end,", "+                 walk);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e62c5990ff388971ac2fc65a8b95f273", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocumentTest.java", "commitBeforeChange": "7f0431102d802f25498e6ad5a22057f937b25cb6", "commitAfterChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void _checkHighlightStatusConsistent(Vector<HighlightStatus> v,                                                int start,                                                int end)", "signatureAfterChange": "   private void _checkHighlightStatusConsistent(Vector<HighlightStatus> v,                                                int start,                                                int end)", "diff": ["+", "+      // Sanity check: length > 0?", "+      assertTrue(\"Item #\" + i + \" in highlight vector has positive length\",", "+                 v.elementAt(i).getLength() > 0);", "+      ", "-    assertEquals(\"Highlight vector ends at right place\",", "-                 walk,", "-                 end);", "+    assertEquals(\"Location after walking highlight vector\",", "+                 end,", "+                 walk);"]}], "num": 30903}