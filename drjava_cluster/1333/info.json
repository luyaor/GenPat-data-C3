{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ff57575e53475ff87a618ba0f74a706", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "003aafaa8507ab22f04c8e8b3233d9ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 404, "methodNumberAfterChange": 404, "signatureBeforeChange": "          public void clear()", "signatureAfterChange": "          public void clear()", "diff": ["-      doc.modifyLock();", "+      doc.acquireWriteLock();", "-      finally { modifyUnlock(); }", "+      finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "004a3467c2727062919121342a96a382", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "   public Type visit(ExclusiveOrAssignExpression node)", "signatureAfterChange": "   public Class<?> visit(ExclusiveOrAssignExpression node)", "diff": ["-  public Type visit(ExclusiveOrAssignExpression node) {", "+  public Class<?> visit(ExclusiveOrAssignExpression node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00b4e22f4102a1d247d28c463b28e570", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "8cfaf2efb8ae59b79b9538e0bd5eaf251c6db08b", "commitAfterChange": "b732820bc2f8849bda78001b782e555a753cad1e", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   private void _updateMachine()", "signatureAfterChange": "   private void _updateMachine()", "diff": ["-      OpenDefinitionsDocument currentDoc = _defPane.getOpenDefDocument();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0104a86d3e27a4e92b29ec484e56210d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 454, "methodNumberAfterChange": 458, "signatureBeforeChange": "    final private boolean jj_3R_277()", "signatureAfterChange": "    final private boolean jj_3R_285()", "diff": ["-  final private boolean jj_3R_277() {", "+  final private boolean jj_3R_285() {", "-    if (jj_3R_98()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "019bd3e8a1caa475135c19ed9b338c7c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "signatureAfterChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "diff": ["-        throw new IOException(\"Save failed: Could not create backup file \"", "+        throw new IOException(\"Save failed. Could not create backup file \"", "-        throw new IOException(\"Save failed: Another process may be using \" + file + \".\");", "+        throw new IOException(\"Save failed. Another process may be using \" + file + \".\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e8e4e872c984a5c6a6d551b8f8837e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 450, "methodNumberAfterChange": 446, "signatureBeforeChange": "    final private boolean jj_3R_285()", "signatureAfterChange": "    final private boolean jj_3R_336()", "diff": ["-", "-  final private boolean jj_3R_285() {", "-    if (jj_scan_token(AND_ASSIGN)) return true;", "-    if (jj_3R_99()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_336() {", "+    if (jj_scan_token(AND_ASSIGN)) return true;", "+    if (jj_3R_100()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02852159e602ea72ac6824eee848c3f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public void notifyActive()", "signatureAfterChange": "   public void notifyActive()", "diff": ["-    _doc.modifyLock();", "+    _doc.acquireWriteLock();", "-    finally { _doc.modifyUnlock(); }", "+    finally { _doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02befd54307d313f6553b52230d8bbf5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerError.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public int compareTo(Object o)", "signatureAfterChange": "   public int compareTo(Object o)", "diff": ["-    boolean otherWarning = other.isWarning();", "+//    boolean otherWarning = other.isWarning();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0372440f69c29da606ed001e28b77200", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "signatureAfterChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "diff": ["-   * variables have the same name.*/", "+    * variables have the same name.*/", "-    if (!_bodyData.addFinalVars(_variableDeclaration2VariableData(that, _bodyData))) {", "+    if (! _bodyData.addFinalVars(_variableDeclaration2VariableData(that, _bodyData))) {", "+      System.err.println(\"Generating duplicate variable error\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0413d65f2a0e89fb50f52afab72e165a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "69464949f304455efe72f78ee854438cff27207a", "commitAfterChange": "17600b9f1362dad642f89cf0296e45c7ada70a5d", "methodNumberBeforeChange": 707, "methodNumberAfterChange": 707, "signatureBeforeChange": "          public void filesNotFound(File... files)", "signatureAfterChange": "          public void filesNotFound(File... files)", "diff": ["+        // TODO: bad error message, may not be in project mode", "-                                      \"The following file could not be found and has been removed from the project.\\n\"", "+                                      // \"The following file could not be found and has been removed from the project.\\n\"", "+                                      \"The following file could not be found.\\n\"", "+        // TODO: bad error message, may not be in project mode", "-          .setText(\"The following files could not be found and have been removed from the project.\")", "+          .setText(\"The following files could not be found.\")", "+          // .setText(\"The following files could not be found and have been removed from the project.\")"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a2597aa916a2f3bf10ce387a1f8745", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void testStartSimple () throws BadLocationException", "signatureAfterChange": "   public void testStartSimple () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04b70a567ae4f24e01ebf37efb72a086", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testAfterBlockComment () throws BadLocationException", "signatureAfterChange": "   public void testAfterBlockComment () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04d96885fa12428b90a41eab338a2fc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void clearHistory()", "signatureAfterChange": "   public void clearHistory()", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "059db86ddc0bb07c1a4b107f8de0fb6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void insertText(int offs, String str, String style)", "signatureAfterChange": "   public void insertText(int offs, String str, String style)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06cc4c8d6c39b99e890a7ba211569cba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "   public void testObjectMethodCall() throws InterpreterException", "signatureAfterChange": "   public void testObjectMethodCall() throws InterpreterException", "diff": ["-    Type type = exp.acceptVisitor(_typeChecker);", "+    Class<?> type = exp.acceptVisitor(_typeChecker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07157fdaae0d11a00e6a72536f6e48ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public void testBooleanBitwiseAnd() throws InterpreterException", "signatureAfterChange": "   public void testBooleanBitwiseAnd() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "083b92a8530fc34dfefc66b333cc5aab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private int _getLineFirstCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getLineFirstCharPos(int pos) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._getLineFirstCharPos(pos); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+    return _doc._getLineFirstCharPos(pos); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0849ea6a10dc08de74fb8b615905602c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/StrictURLClassLoaderTest.java", "commitBeforeChange": "153c6786c3eece512f79b67bbc2d1e6c1794a986", "commitAfterChange": "52e75c08548a33d68da52ba945e927947c13bd71", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testWillLoadClassFromGivenURLs() throws Throwable", "signatureAfterChange": "   public void testWillLoadClassFromGivenURLs() throws Throwable", "diff": ["-    String logResource = \"com/sun/tools/javac/util/Log.class\";", "-    String compilerClass = \"com.sun.tools.javac.util.Context\";", "+    String logResource = \"com/sun/tools/javac/Main.class\";", "+    String compilerClass = \"com.sun.tools.javac.Main\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "086b99dec1c970c216a76c053ece2700", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/MultiThreadedTestCase.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void tearDown() throws Exception", "signatureAfterChange": "   public void tearDown() throws Exception", "diff": ["+    DefinitionsPaneTest._log.log(\"MultithreadedTestCase.tearDown() calling super.tearDown()\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09c520624e24a075bd9e7ade4fef9032", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testInsertStarIntoStarSlash() throws BadLocationException", "signatureAfterChange": "   public void testInsertStarIntoStarSlash() throws BadLocationException", "diff": ["-    BraceReduction rm = defModel._reduced;", "+    BraceReduction rm = defModel.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d591f76e62e203591b14336e5a23862", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "    public void testGetLineStartPos() throws BadLocationException", "signatureAfterChange": "    public void testGetLineStartPos() throws BadLocationException", "diff": ["-    assertEquals(\"Returns DOCSTART when there's no previous newline\",", "+    assertEquals(\"Returns 0 when there's no previous newline\",", "-    assertEquals(\"Returns DOCSTART when the cursor is at DOCSTART\",", "+    assertEquals(\"Returns 0 when the cursor is at 0\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e32ac14de074ab1a422a88cfea46aff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void appendExceptionResult(String exceptionClass, String message, String stackTrace, String styleName)", "signatureAfterChange": "   public void appendExceptionResult(String exceptionClass, String message, String stackTrace, String styleName)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "101e90d9fee3c9e1566c9b4cc9871ff0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevLinePlus.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["+    System.err.println(\"ActionStartPrevLinePlus\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "106b0b00ec875d551bd1429da2a01da0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   private int _uncommentBlock(final int start, final int end)", "signatureAfterChange": "   private int _uncommentBlock(final int start, final int end)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10a31567d08a80705beb79fe2983d112", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void removeText(int offs, int len)", "signatureAfterChange": "   public void removeText(int offs, int len)", "diff": ["-    modifyLock();  // locking is used to make the test and modification atomic", "+    acquireWriteLock();  // locking is used to make the test and modification atomic", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10d857fe5497aafbb9ff8db64858dd33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "   public void testSecondLineProblem2 () throws BadLocationException", "signatureAfterChange": "   public void testSecondLineProblem2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "115dc16912b0627660bb125a425c29e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 460, "methodNumberAfterChange": 456, "signatureBeforeChange": "    final private boolean jj_3R_281()", "signatureAfterChange": "    final private boolean jj_3R_332()", "diff": ["-  final private boolean jj_3R_281() {", "+  final private boolean jj_3R_332() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12728b75560741e2f9248fb919d653bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   private void _setupMiscPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupMiscPanel(ConfigPanel panel)", "diff": ["-                              \"The directory that DrJava should consider the current working directory.\",", "+                              \"The directory that DrJava should consider the default working directory.\",", "-    panel.addComponent(new BooleanOptionComponent(OptionConstants.BACKUP_FILES, \"Keep emacs style backup files\", this,", "+    panel.addComponent(new BooleanOptionComponent(OptionConstants.BACKUP_FILES, \"Keep Emacs-style Backup Files\", this,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "128172ecda621b5bed1b247c07c17367", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public void testPackageNameWeird2()     throws BadLocationException, InvalidPackageException", "signatureAfterChange": "   public void testPackageNameWeird2()     throws BadLocationException, InvalidPackageException", "diff": ["-    defModel.insertString(0, weird, null);", "+    _defModel.insertString(0, weird, null);", "-                 defModel.getPackageName());", "+                 _defModel.getPackageName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "129f2119bd8114463822eb2c6f780894", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "d1bc46bda120c4aecfe38f91af0fa9a5e31eafb8", "commitAfterChange": "8c167429ba92c08453565171838e7b90a541e18d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testInteractionAbort()     throws BadLocationException, InterruptedException, IOException", "signatureAfterChange": "   public void testInteractionAbort()     throws BadLocationException, InterruptedException, IOException", "diff": ["-    assertEquals(\"DrJavaTestFoo\", beforeAbort);", "+    assertEquals(\"\\\"DrJavaTestFoo\\\"\", beforeAbort);", "-    assertEquals(\"DrJavaTestFoo\", afterAbort);", "+    assertEquals(\"\\\"DrJavaTestFoo\\\"\", afterAbort);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "138e881cddd7eaee92732311935bf4da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "commitAfterChange": "f938008597ce54d16e4a865d30f8ef062ea55d2f", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 67, "signatureBeforeChange": "   protected void chooseFile(JTextPane pane)", "signatureAfterChange": "   protected void chooseFile(JTextPane pane)", "diff": ["-  /** Opens the file chooser to select a file, putting the result in the file field. */", "-  protected void chooseFile(JTextPane pane) {", "-    File wd = new File(StringOps.replaceVariables(pane.getText().trim(), PropertyMaps.ONLY, PropertyMaps.GET_CURRENT));", "+  /** Opens the file chooser to select a file, putting the result in the file field. */", "+  protected void chooseFile(JTextPane pane) {", "+    // Get the file from the chooser", "+    File wd = new File(StringOps.replaceVariables(pane.getText().trim(), _props, PropertyMaps.GET_CURRENT));", "+    if ((pane.getText().equals(\"\")) ||", "+        (!wd.exists()) &&", "+        (!wd.isFile())) {", "+      wd = null;", "+    }", "+    ", "+    _fileChooser.setSelectedFile(wd);", "+    _mainFrame.removeModalWindowAdapter(this);", "+    int returnValue = _fileChooser.showOpenDialog(this);", "+    _mainFrame.installModalWindowAdapter(this, NO_OP, CANCEL);      ", "+    if (returnValue == DirectoryChooser.APPROVE_OPTION) {", "+      File chosen = _fileChooser.getSelectedFile();", "+      if (chosen != null) { pane.setText(chosen.toString()); } else { pane.setText(\"\"); }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13e25bd30dbd36eb6bbc936624590873", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d331e9af4b7210b21c235397f4a55183e132c12e", "commitAfterChange": "4a4ec2d05d53f85461639265168dfd632b3bdad1", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "      public void saveBeforeProceeding(GlobalModelListener.SaveReason reason)", "signatureAfterChange": "          public void saveBeforeProceeding(GlobalModelListener.SaveReason reason)", "diff": ["-", "+    ", "-        message = \"To compile, you must first save the current file. \" +", "+        message = ", "+          \"To compile, you must first save the current file.\\n\" +", "-      else if(reason == JUNIT_REASON) {", "-        message = \"To run JUnit, you must first save and compile the current \" + ", "+      else if (reason == JUNIT_REASON) {", "+        message = ", "+          \"To run JUnit, you must first save and compile the current\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14b588770377c7903297654c9bad6f94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testAfterBlockComment3 () throws BadLocationException", "signatureAfterChange": "   public void testAfterBlockComment3 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17b0f562d30d6b5774c50f7fcc678490", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "commitAfterChange": "395b2a102021edacb1427340196ea5475967dc87", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   synchronized void reachedBreakpoint(BreakpointRequest request)", "signatureAfterChange": "   synchronized void reachedBreakpoint(BreakpointRequest request)", "diff": ["-                               breakpoint.getClassName() + \", line \" +", "-                               breakpoint.getLineNumber() + \".\");", "-      //System.out.println(\"Encountered a breakpoint at line \"+ ", "-      //                   breakpoint.getLineNumber() +", "-      //                   \" in file \" + breakpoint.getClassName());", "+                               breakpoint.getClassName() + \"  [line \" +", "+                               breakpoint.getLineNumber() + \"]\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1805bc56ce6604dcda303345e1212b8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 41, "signatureBeforeChange": "          public void testIsAbstract()", "signatureAfterChange": "          public void testIsAbstract()", "diff": ["-      //not abstract", "+      // not abstract", "-      //abstract", "+      // abstract", "+      ", "+      System.err.println(\"testIsAbstract finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1877aba54bd9e7f834f817044d7cb08e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public void testTopLevelInterfaceNameMisleading()     throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public void testTopLevelInterfaceNameMisleading()     throws BadLocationException, ClassNameNotFoundException", "diff": ["-    defModel.insertString(0, weird, null);", "+    _defModel.insertString(0, weird, null);", "-                 defModel.getFirstTopLevelClassName());", "+                 _defModel.getFirstTopLevelClassName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "189a9ea5be1b0880685b2368ad55b03d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void reset(String banner)", "signatureAfterChange": "   public void reset(String banner)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18a4c154d6560820f5912f831a4478b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public Type visit(LabeledStatement node)", "signatureAfterChange": "   public Class<?> visit(LabeledStatement node)", "diff": ["-  public Type visit(LabeledStatement node) {", "+  public Class<?> visit(LabeledStatement node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1918cfd1d04529420692783110a6b237", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void testStartSpaceIndent () throws BadLocationException", "signatureAfterChange": "   public void testStartSpaceIndent () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bb78290164baddb3ffa6e121913f3d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void remove(int offs, int len) throws BadLocationException", "signatureAfterChange": "   public void remove(int offs, int len) throws BadLocationException", "diff": ["-    modifyLock(); // locking is used to make the test and modification atomic", "+    acquireWriteLock(); // locking is used to make the test and modification atomic", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c1e385ac639cda8091a3c11031fddae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 473, "methodNumberAfterChange": 415, "signatureBeforeChange": "    final private boolean jj_3R_276()", "signatureAfterChange": "    final private boolean jj_3R_363()", "diff": ["+", "+  final private boolean jj_3R_363() {", "+    if (jj_scan_token(ASSIGN)) return true;", "+    if (jj_3R_111()) return true;", "-    if (jj_scan_token(ASSIGN)) return true;", "-    if (jj_3R_99()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ca3fdea30e9d7e6b177f97da4a6c2cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 211, "signatureBeforeChange": "   public void toggleBookmark()", "signatureAfterChange": "   public void toggleBookmark()", "diff": ["-    OpenDefinitionsDocument odd = getCurrentDefPane().getOpenDefDocument();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dfd831931f92a1c97e73925b28cf2ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setInProgress(boolean inProgress)", "signatureAfterChange": "   public void setInProgress(boolean inProgress)", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    releaseWriteLock();", "+    modifyUnlock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e6e37e223d93ee5a8eef96642b42cd7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void append(String str, AttributeSet set)", "signatureAfterChange": "   public void append(String str, AttributeSet set)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ee05681868665534834b46f53c7e919", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/OptionConstants.java", "commitBeforeChange": "ed94b63ef7482abd1a21bfcb32a69a4d09374795", "commitAfterChange": "949983080836c69e17fea8c4cfea4264431dd398", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static Font getDefaultMainFont()", "signatureAfterChange": "     public static Font getDefaultMainFont()", "diff": ["-        return Font.decode(\"Monaco 12\");", "+        return Font.decode(\"Monaco-12\");", "-        return Font.decode(\"Monospaced 12\");", "+        return Font.decode(\"Monospaced-12\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f35074f2bc5c5c450d3b6760a4994ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public void testSecondLineProblem () throws BadLocationException", "signatureAfterChange": "   public void testSecondLineProblem () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fb6a4b27c16905e8545480dd7834b5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c0487ade35919fa6d08b7c39361898d3c5751c04", "commitAfterChange": "7b4296c095d59b57f25b910a8bdce57816e7621f", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 329, "signatureBeforeChange": "      private void _quit()", "signatureAfterChange": "      private void _quit()", "diff": ["+    AbstractGlobalModel._log.log(\"MainFrame.quit() called\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fbc1ea990757c32158d608d812ae58c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testGetIndentOfCurrStmtDelimiters() throws BadLocationException", "signatureAfterChange": "     public void testGetIndentOfCurrStmtDelimiters() throws BadLocationException", "diff": ["-    assertEquals(\"prev delimiter DOCSTART, no indent\",", "+    assertEquals(\"prev delimiter 0, no indent\",", "-    assertEquals(\"prev delimiter DOCSTART, indent two spaces\",", "+    assertEquals(\"prev delimiter 0, indent two spaces\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21613309652a7bbe20a6753bab73961e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionDoNothing.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["+      System.err.println(\"ActionDoNothing\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21b85ecdaa74734d736cf62415066de3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   protected void _clearCurrentInputText()", "signatureAfterChange": "   protected void _clearCurrentInputText()", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "220801aed2fcd3eb1b77fcd94cf964fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/OptionConstants.java", "commitBeforeChange": "ed94b63ef7482abd1a21bfcb32a69a4d09374795", "commitAfterChange": "949983080836c69e17fea8c4cfea4264431dd398", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static Font getDefaultDocListFont()", "signatureAfterChange": "     public static Font getDefaultDocListFont()", "diff": ["-        return Font.decode(\"Monaco 10\");", "+        return Font.decode(\"Monaco-10\");", "-        return Font.decode(\"Monospaced 10\");", "+        return Font.decode(\"Monospaced-10\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22169fceadfa4a21f8fcd69f3cb15e20", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 465, "methodNumberAfterChange": 469, "signatureBeforeChange": "    final private boolean jj_3R_273()", "signatureAfterChange": "    final private boolean jj_3R_281()", "diff": ["-  final private boolean jj_3R_273() {", "+", "+  final private boolean jj_3R_281() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2297f7b295b13912447af9a638d3a0ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void setEditCondition(DocumentEditCondition condition)", "signatureAfterChange": "   public void setEditCondition(DocumentEditCondition condition)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22b11a39b74685e5622c1c971230dec9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "cb029f12bd6c2fdcdba02605492a4baf5ca47e02", "commitAfterChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,                                           final int idx)", "signatureAfterChange": "     private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,                                           final int idx)", "diff": ["+      defPane.getCaret().setVisible(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22c8f9d3dbec7ce0fe586441cec6062a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void removeText(int offs, int len) throws EditDocumentException", "signatureAfterChange": "   public void removeText(int offs, int len) throws EditDocumentException", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "236bd5a3821e80b7b3e3cc1e17a73f62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void forwardHistorySearch(String searchString)", "signatureAfterChange": "   public void forwardHistorySearch(String searchString)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23d8bcf02cb1e458eef2d1abe5e2c022", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void moveHistoryPrevious(String entry)", "signatureAfterChange": "   public void moveHistoryPrevious(String entry)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2445a7ef93a693e0321686ef48d88063", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 605, "methodNumberAfterChange": 609, "signatureBeforeChange": "    final private boolean jj_3R_556()", "signatureAfterChange": "    final private boolean jj_3R_563()", "diff": ["+    if (jj_3R_99()) return true;", "-", "-  final private boolean jj_3R_556() {", "-    if (jj_3R_98()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24a1a16b0e8389e927fdd8c0e1f85d14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "commitAfterChange": "3d71370f387f5ff990190106fcbfa93f8a159b9b", "methodNumberBeforeChange": 781, "methodNumberAfterChange": 781, "signatureBeforeChange": "   public void showTab(final Component c, boolean showDetachedWindow)", "signatureAfterChange": "   public void showTab(final Component c, boolean showDetachedWindow)", "diff": ["-        DefaultTreeModel model = p._regTreeModel;", "+        DefaultTreeModel model = p.getRegTreeModel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2569e736a3f033845d584502052c55fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public void testNumericBitwiseOr() throws InterpreterException", "signatureAfterChange": "   public void testNumericBitwiseOr() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: shortValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Short) [(koala.dynamicjava.tree.StringLiteral: \\\"2\\\" 2 class java.lang.String)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: byteValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Byte) [(koala.dynamicjava.tree.StringLiteral: \\\"2\\\" 2 class java.lang.String)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: shortValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Short) [(koala.dynamicjava.tree.StringLiteral: \\\"2\\\" 2 class java.lang.String)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: byteValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Byte) [(koala.dynamicjava.tree.StringLiteral: \\\"2\\\" 2 class java.lang.String)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26d532af961bcd42b2226d748af1fec2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public void testEnter2 () throws BadLocationException", "signatureAfterChange": "   public void testEnter2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26e34d6f408695ba95f6a5b51a14673f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "      public void testArrayAccess() throws InterpreterException", "signatureAfterChange": "      public void testArrayAccess() throws InterpreterException", "diff": ["-    Type type = exp.acceptVisitor(_typeChecker);", "+    Class<?> type = exp.acceptVisitor(_typeChecker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2872ab56623756290d4c74fc5a201ed9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 443, "methodNumberAfterChange": 439, "signatureBeforeChange": "    final private boolean jj_3R_287()", "signatureAfterChange": "    final private boolean jj_3R_338()", "diff": ["-", "-  final private boolean jj_3R_287() {", "+  final private boolean jj_3R_338() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "298926394de7db3e9b43aa3165d51f8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlus.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["+    System.err.println(\"ActionStartPrevStmtPlus\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29e2d6214b86298bccd7784948e7df4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public void testGreaterThanEqual() throws InterpreterException", "signatureAfterChange": "   public void testGreaterThanEqual() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: floatValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Float) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: floatValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Float) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: floatValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Float) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: floatValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Float) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a4d1f3c498617a32d9fd013deb8a7d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   private void _setupKeyBindingsPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupKeyBindingsPanel(ConfigPanel panel)", "diff": ["-        KeyStroke ks = tmpKsd.getKeyStroke();", "-        //Action a = KeyBindingManager.Singleton.get(ks);", "+//        KeyStroke ks = tmpKsd.getKeyStroke();", "+//        Action a = KeyBindingManager.Singleton.get(ks);", "-        ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b94aca45fa7ec9455a785527732084d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "34ce8483136d91f9eff46f1971dc8a612f363868", "commitAfterChange": "cfd4689ec89c3908ea0306a11510c85ea5436de0", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   private void _setupNotificationsPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupNotificationsPanel(ConfigPanel panel)", "diff": ["-                                                  \"<html>Whether DrJava should warn the user that look and feel<br>\" +", "-                                                  \"changes will not be applied until DrJava is restarted.</html>.\"));", "+                                                  \"<html>Whether DrJava should warn the user that look and feel.<br>\" +", "+                                                  \"(Changes will not be applied until DrJava is restarted.)</html>.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c7db86aecc68c802ae0d5fba5b1beac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e67d165690a34c03b8dbd31cddaf42bddcc82e8f", "commitAfterChange": "96a09f26e797e5676f0cf2606ce69c3ce24bf921", "methodNumberBeforeChange": 710, "methodNumberAfterChange": 710, "signatureBeforeChange": "     public void compileBeforeJUnit(final CompilerListener testAfterCompile, List<OpenDefinitionsDocument> outOfSync)", "signatureAfterChange": "     public void compileBeforeJUnit(final CompilerListener testAfterCompile, List<OpenDefinitionsDocument> outOfSync)", "diff": ["-          .setText(\"Before you can run unit tests, you must first compile all out of sync source files.\\n\"+", "-                   \"The files below are out of sync. Would you like to compile all files and\\n\"+", "+          .setText(\"<html>Before you can run unit tests, you must first compile all out of sync source files.<br>\"+", "+                   \"The files below are out of sync. Would you like to compile all files and<br>\"+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cc602dcb43c7b1b056f461a5ab0cc6d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 453, "methodNumberAfterChange": 453, "signatureBeforeChange": "      public void classFileError(ClassFileError e)", "signatureAfterChange": "      public void classFileError(ClassFileError e)", "diff": ["-        \"The class file for class \" + e.getClassName() + \"in source file \" + e.getCanonicalPath() + \" cannot be loaded.\\n \"", "+        \"The class file for class \" + e.getClassName() + \" in source file \" + e.getCanonicalPath() + \" cannot be loaded.\\n \"", "-                                        \"Testing works only on well-formed, verifiable class files\",", "+                                        \"Testing works only on valid class files\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d463cd814063752e648617103b2854b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "cb029f12bd6c2fdcdba02605492a4baf5ca47e02", "commitAfterChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,                                           final int idx)", "signatureAfterChange": "     private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,                                           final int idx)", "diff": ["+      defPane.getCaret().setVisible(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dc2c65796b4156aea5a6e53180126e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private boolean _inParenPhrase(int pos) throws BadLocationException", "signatureAfterChange": "   private boolean _inParenPhrase(int pos) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._inParenPhrase(pos); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+      return _doc._inParenPhrase(pos); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e437e549e4c74836585528088c403c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testIndentInfoBlockComments () throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoBlockComments () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ec8435b0bec78ea3178fbce1a64595c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void reverseSearchInteractionsInHistory()", "signatureAfterChange": "   public void reverseSearchInteractionsInHistory()", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2effaa711c805dcca4f4a340b8e2db49", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void testPackageNameWeird1()     throws BadLocationException, InvalidPackageException", "signatureAfterChange": "   public void testPackageNameWeird1()     throws BadLocationException, InvalidPackageException", "diff": ["-    defModel.insertString(0, weird, null);", "+    _defModel.insertString(0, weird, null);", "-                 defModel.getPackageName());", "+                 _defModel.getPackageName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f2b865d313ecc5d83faa1937dbb11ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/StrictURLClassLoaderTest.java", "commitBeforeChange": "fda5fc5ac0b2dd21681fc84b13c9f0031b321af7", "commitAfterChange": "303ddb2c47275a1e2c25f273f6ed234a39d50962", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testWillLoadClassFromGivenURLs() throws Throwable", "signatureAfterChange": "   public void testWillLoadClassFromGivenURLs() throws Throwable", "diff": ["-    String logResource = \"com/sun/tools/javac/v8/util/Log.class\";", "-    String compilerClass = \"com.sun.tools.javac.v8.JavaCompiler\";", "+    String logResource = \"com/sun/tools/javac/util/Log.class\";", "+    String compilerClass = \"com.sun.tools.javac.main.JavaCompiler\";", "-      URL resource = loader.getResource(logResource);", "-      assertTrue(\"resource found\", resource != null);", "-", "+", "+    ", "+      URL resource = loader.getResource(logResource);", "+      assertTrue(\"resource found\", resource != null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f65913447c103bcdcc081b184924a7c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 469, "methodNumberAfterChange": 465, "signatureBeforeChange": "    final private boolean jj_3R_277()", "signatureAfterChange": "    final private boolean jj_3R_328()", "diff": ["-  final private boolean jj_3R_277() {", "+  final private boolean jj_3R_328() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fa92a6d8a61b945ede142f28704b07e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testIndentInfoPrevNewline () throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoPrevNewline () throws BadLocationException", "diff": ["-    BraceReduction _reduced = _doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "300af0fb269613c9dfe4237de9066ba2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "   protected abstract SimpleAllocation _box(Expression exp, Type refType);", "signatureAfterChange": "   protected abstract SimpleAllocation _box(Expression exp, Class<?> refType);", "diff": ["-  protected abstract SimpleAllocation _box(Expression exp, Type refType);", "+  protected abstract SimpleAllocation _box(Expression exp, Class<?> refType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3023b2e02654cb432ef5801634709d2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "201211c7e1e210d4dce9a0e2101594a81a3b57d8", "commitAfterChange": "ad1e0488fe90db5e1e6108de7f4f685fac998627", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "signatureAfterChange": "   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "diff": ["-   */\r", "-  public static Iterable<JarJDKToolsLibrary> search(GlobalModel model) {\r", "-    String javaHome = System.getProperty(\"java.home\");\r", "-    String envJavaHome = null;\r", "-    String programFiles = null;\r", "-    String systemDrive = null;\r", "-    if (JavaVersion.CURRENT.supports(JavaVersion.JAVA_5)) {\r", "-      // System.getenv is deprecated under 1.3 and 1.4, and may throw a java.lang.Error (!),\r", "-      // which we'd rather not have to catch\r", "-      envJavaHome = System.getenv(\"JAVA_HOME\");\r", "-      programFiles = System.getenv(\"ProgramFiles\");\r", "-      systemDrive = System.getenv(\"SystemDrive\");\r", "-    }\r", "-    \r", "-    /* roots is a list of possible parent directories of Java installations; we want to eliminate duplicates & \r", "-     * remember insertion order\r", "-     */\r", "-    LinkedHashSet<File> roots = new LinkedHashSet<File>();\r", "-    \r", "-    if (javaHome != null) {\r", "-      addIfDir(new File(javaHome), roots);\r", "-      addIfDir(new File(javaHome, \"..\"), roots);\r", "-      addIfDir(new File(javaHome, \"../..\"), roots);\r", "-    }\r", "-    if (envJavaHome != null) {\r", "-      addIfDir(new File(envJavaHome), roots);\r", "-      addIfDir(new File(envJavaHome, \"..\"), roots);\r", "-      addIfDir(new File(envJavaHome, \"../..\"), roots);\r", "-    }\r", "-    \r", "-    if (programFiles != null) {\r", "-      addIfDir(new File(programFiles, \"Java\"), roots);\r", "-      addIfDir(new File(programFiles), roots);\r", "-    }\r", "-    addIfDir(new File(\"/C:/Program Files/Java\"), roots);\r", "-    addIfDir(new File(\"/C:/Program Files\"), roots);\r", "-    if (systemDrive != null) {\r", "-      addIfDir(new File(systemDrive, \"Java\"), roots);\r", "-      addIfDir(new File(systemDrive), roots);\r", "-    }\r", "-    addIfDir(new File(\"/C:/Java\"), roots);\r", "-    addIfDir(new File(\"/C:\"), roots);\r", "-    \r", "-    addIfDir(new File(\"/System/Library/Frameworks/JavaVM.framework/Versions\"), roots);\r", "-\r", "-    addIfDir(new File(\"/usr/java\"), roots);\r", "-    addIfDir(new File(\"/usr/j2se\"), roots);\r", "-    addIfDir(new File(\"/usr\"), roots);\r", "-    addIfDir(new File(\"/usr/local/java\"), roots);\r", "-    addIfDir(new File(\"/usr/local/j2se\"), roots);\r", "-    addIfDir(new File(\"/usr/local\"), roots);\r", "-\r", "-    /* Entries for Linux java packages */\r", "-    addIfDir(new File(\"/usr/lib/jvm\"), roots);\r", "-    addIfDir(new File(\"/usr/lib/jvm/java-6-sun\"), roots);\r", "-    addIfDir(new File(\"/usr/lib/jvm/java-1.5.0-sun\"), roots);\r", "-    addIfDir(new File(\"/usr/lib/jvm/java-6-openjdk\"), roots);\r", "-\r", "-    addIfDir(new File(\"/home/javaplt/java/Linux-i686\"), roots);\r", "-\r", "-    /* jars is a list of possible tools.jar (or classes.jar) files; we want to eliminate duplicates & \r", "-     * remember insertion order\r", "-     */\r", "-    LinkedHashSet<File> jars = new LinkedHashSet<File>();\r", "-    // matches: starts with \"j2sdk\", starts with \"jdk\", has form \"[number].[number].[number]\" (OS X), starts with \"java-\" (Linux)\r", "-    Predicate<File> subdirFilter = LambdaUtil.or(IOUtil.regexCanonicalCaseFilePredicate(\"j2sdk.*\"),\r", "-                                                 IOUtil.regexCanonicalCaseFilePredicate(\"jdk.*\"),\r", "-                                                 LambdaUtil.or(IOUtil.regexCanonicalCaseFilePredicate(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+\"),\r", "-                                                               IOUtil.regexCanonicalCaseFilePredicate(\"java.*\")));\r", "-    for (File root : roots) {\r", "-      for (File subdir : IOUtil.attemptListFilesAsIterable(root, subdirFilter)) {\r", "-        addIfFile(new File(subdir, \"lib/tools.jar\"), jars);\r", "-        addIfFile(new File(subdir, \"Classes/classes.jar\"), jars);\r", "-      }\r", "-    }\r", "-    \r", "-    // JavaMint\r", "-    addIfFile(new File(\"/C:/Program Files/JavaMint/langtools/dist/lib/classes.jar\"), jars);\r", "-    addIfFile(new File(\"/C:/Program Files/JavaMint/langtools/dist/lib/tools.jar\"), jars);\r", "-    addIfFile(new File(\"/usr/local/soylatte/lib/classes.jar\"), jars);\r", "-    addIfFile(new File(\"/usr/local/soylatte/lib/tools.jar\"), jars);\r", "-    addIfFile(new File(\"/usr/local/JavaMint/langtools/dist/lib/classes.jar\"), jars);\r", "-    addIfFile(new File(\"/usr/local/JavaMint/langtools/dist/lib/tools.jar\"), jars);\r", "-    try {\r", "-      String mint_home = System.getenv(\"MINT_HOME\");\r", "-      if (mint_home!=null) {\r", "-        addIfFile(new File(new File(mint_home), \"dist/lib/classes.jar\"), jars);\r", "-        addIfFile(new File(new File(mint_home), \"dist/lib/tools.jar\"), jars);\r", "-      }\r", "-    }\r", "-    catch(Exception e) { /* ignore MINT_HOME variable */ }\r", "-    \r", "-    // We store everything in reverse order, since that's the natural order of the versions\r", "-    Map<FullVersion, Iterable<JarJDKToolsLibrary>> results = \r", "-      new TreeMap<FullVersion, Iterable<JarJDKToolsLibrary>>();\r", "-    Map<FullVersion, Iterable<JarJDKToolsLibrary>> mintResults =\r", "-      new TreeMap<FullVersion, Iterable<JarJDKToolsLibrary>>();\r", "-    \r", "-    for (File jar : jars) {\r", "-      JarJDKToolsLibrary lib = makeFromFile(jar, model);\r", "-      if (lib.isValid()) {\r", "-        FullVersion v = lib.version();\r", "-        Map<FullVersion, Iterable<JarJDKToolsLibrary>> mapToAddTo = results;\r", "-        if (v.vendor().equals(JavaVersion.VendorType.MINT)) { mapToAddTo = mintResults; }\r", "-        \r", "-        if (mapToAddTo.containsKey(v)) { mapToAddTo.put(v, IterUtil.compose(lib, mapToAddTo.get(v))); }\r", "-        else { mapToAddTo.put(v, IterUtil.singleton(lib)); }\r", "-      }\r", "-    }\r", "-    \r", "-    Iterable<JarJDKToolsLibrary> collapsed = IterUtil.reverse(IterUtil.collapse(results.values()));\r", "-    Iterable<JarJDKToolsLibrary> mintCollapsed = IterUtil.reverse(IterUtil.collapse(mintResults.values()));\r", "-    \r", "-    Map<FullVersion, Iterable<JarJDKToolsLibrary>> javaMintResults =\r", "-      new TreeMap<FullVersion, Iterable<JarJDKToolsLibrary>>();\r", "-    // now we have the JDK libraries in collapsed and the Mint libraries in mintCollapsed\r", "-    for(JarJDKToolsLibrary mintLib: mintCollapsed) {\r", "-      FullVersion mintVersion = mintLib.version();\r", "-      JarJDKToolsLibrary found = null;\r", "-      // try to find a JDK in results that matches mintVersion exactly, except for vendor\r", "-      for(JarJDKToolsLibrary javaLib: collapsed) {\r", "-        FullVersion javaVersion = javaLib.version();\r", "-        if ((javaVersion.majorVersion().equals(mintVersion.majorVersion())) &&\r", "-            (javaVersion.maintenance()==mintVersion.maintenance()) &&\r", "-            (javaVersion.update()==mintVersion.update()) &&\r", "-            (javaVersion.release()==mintVersion.release())) {\r", "-          found = javaLib;\r", "-          break;\r", "-        }\r", "-      }\r", "-      // if we didn't find one, take the best JDK that matches the major version\r", "-      if (found==null) {\r", "-        for(JarJDKToolsLibrary javaLib: collapsed) {\r", "-          FullVersion javaVersion = javaLib.version();\r", "-          if (javaVersion.majorVersion().equals(mintVersion.majorVersion())) {\r", "-            found = javaLib;\r", "-            break;\r", "-          }\r", "-        }\r", "-      }\r", "-      // if we found a JDK, then create a new Mint library\r", "-      if (found!=null) {\r", "-        JarJDKToolsLibrary lib = makeFromFile(mintLib.location(), model, found.bootClassPath());\r", "-        if (lib.isValid()) {\r", "-          FullVersion v = lib.version();\r", "-          if (javaMintResults.containsKey(v)) { javaMintResults.put(v, IterUtil.compose(lib, javaMintResults.get(v))); }\r", "-          else { javaMintResults.put(v, IterUtil.singleton(lib)); }\r", "-        }\r", "-      }\r", "-    }\r", "-    return IterUtil.compose(collapsed,IterUtil.reverse(IterUtil.collapse(javaMintResults.values())));\r", "-  }\r", "+   */", "+  public static Iterable<JarJDKToolsLibrary> search(GlobalModel model) {", "+    String javaHome = System.getProperty(\"java.home\");", "+    String envJavaHome = null;", "+    String programFiles = null;", "+    String systemDrive = null;", "+    if (JavaVersion.CURRENT.supports(JavaVersion.JAVA_5)) {", "+      // System.getenv is deprecated under 1.3 and 1.4, and may throw a java.lang.Error (!),", "+      // which we'd rather not have to catch", "+      envJavaHome = System.getenv(\"JAVA_HOME\");", "+      programFiles = System.getenv(\"ProgramFiles\");", "+      systemDrive = System.getenv(\"SystemDrive\");", "+    }", "+    ", "+    /* roots is a list of possible parent directories of Java installations; we want to eliminate duplicates & ", "+     * remember insertion order", "+     */", "+    LinkedHashSet<File> roots = new LinkedHashSet<File>();", "+    ", "+    if (javaHome != null) {", "+      addIfDir(new File(javaHome), roots);", "+      addIfDir(new File(javaHome, \"..\"), roots);", "+      addIfDir(new File(javaHome, \"../..\"), roots);", "+    }", "+    if (envJavaHome != null) {", "+      addIfDir(new File(envJavaHome), roots);", "+      addIfDir(new File(envJavaHome, \"..\"), roots);", "+      addIfDir(new File(envJavaHome, \"../..\"), roots);", "+    }", "+    ", "+    if (programFiles != null) {", "+      addIfDir(new File(programFiles, \"Java\"), roots);", "+      addIfDir(new File(programFiles), roots);", "+    }", "+    addIfDir(new File(\"/C:/Program Files/Java\"), roots);", "+    addIfDir(new File(\"/C:/Program Files\"), roots);", "+    if (systemDrive != null) {", "+      addIfDir(new File(systemDrive, \"Java\"), roots);", "+      addIfDir(new File(systemDrive), roots);", "+    }", "+    addIfDir(new File(\"/C:/Java\"), roots);", "+    addIfDir(new File(\"/C:\"), roots);", "+    ", "+    addIfDir(new File(\"/System/Library/Frameworks/JavaVM.framework/Versions\"), roots);", "+", "+    addIfDir(new File(\"/usr/java\"), roots);", "+    addIfDir(new File(\"/usr/j2se\"), roots);", "+    addIfDir(new File(\"/usr\"), roots);", "+    addIfDir(new File(\"/usr/local/java\"), roots);", "+    addIfDir(new File(\"/usr/local/j2se\"), roots);", "+    addIfDir(new File(\"/usr/local\"), roots);", "+", "+    /* Entries for Linux java packages */", "+    addIfDir(new File(\"/usr/lib/jvm\"), roots);", "+    addIfDir(new File(\"/usr/lib/jvm/java-6-sun\"), roots);", "+    addIfDir(new File(\"/usr/lib/jvm/java-1.5.0-sun\"), roots);", "+    addIfDir(new File(\"/usr/lib/jvm/java-6-openjdk\"), roots);", "+", "+    addIfDir(new File(\"/home/javaplt/java/Linux-i686\"), roots);", "+", "+    /* jars is a list of possible tools.jar (or classes.jar) files; we want to eliminate duplicates & ", "+     * remember insertion order", "+     */", "+    LinkedHashSet<File> jars = new LinkedHashSet<File>();", "+    // matches: starts with \"j2sdk\", starts with \"jdk\", has form \"[number].[number].[number]\" (OS X), starts with \"java-\" (Linux)", "+    Predicate<File> subdirFilter = LambdaUtil.or(IOUtil.regexCanonicalCaseFilePredicate(\"j2sdk.*\"),", "+                                                 IOUtil.regexCanonicalCaseFilePredicate(\"jdk.*\"),", "+                                                 LambdaUtil.or(IOUtil.regexCanonicalCaseFilePredicate(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+\"),", "+                                                               IOUtil.regexCanonicalCaseFilePredicate(\"java.*\")));", "+    for (File root : roots) {", "+      for (File subdir : IOUtil.attemptListFilesAsIterable(root, subdirFilter)) {", "+        addIfFile(new File(subdir, \"lib/tools.jar\"), jars);", "+        addIfFile(new File(subdir, \"Classes/classes.jar\"), jars);", "+      }", "+    }", "+    ", "+    // JavaMint", "+    addIfFile(new File(\"/C:/Program Files/JavaMint/langtools/dist/lib/classes.jar\"), jars);", "+    addIfFile(new File(\"/C:/Program Files/JavaMint/langtools/dist/lib/tools.jar\"), jars);", "+    addIfFile(new File(\"/usr/local/soylatte/lib/classes.jar\"), jars);", "+    addIfFile(new File(\"/usr/local/soylatte/lib/tools.jar\"), jars);", "+    addIfFile(new File(\"/usr/local/JavaMint/langtools/dist/lib/classes.jar\"), jars);", "+    addIfFile(new File(\"/usr/local/JavaMint/langtools/dist/lib/tools.jar\"), jars);", "+    try {", "+      String mint_home = System.getenv(\"MINT_HOME\");", "+      if (mint_home!=null) {", "+        addIfFile(new File(new File(mint_home), \"langtools/dist/lib/classes.jar\"), jars);", "+        addIfFile(new File(new File(mint_home), \"langtools/dist/lib/tools.jar\"), jars);", "+      }", "+    }", "+    catch(Exception e) { /* ignore MINT_HOME variable */ }", "+    ", "+    // We store everything in reverse order, since that's the natural order of the versions", "+    Map<FullVersion, Iterable<JarJDKToolsLibrary>> results = ", "+      new TreeMap<FullVersion, Iterable<JarJDKToolsLibrary>>();", "+    Map<FullVersion, Iterable<JarJDKToolsLibrary>> mintResults =", "+      new TreeMap<FullVersion, Iterable<JarJDKToolsLibrary>>();", "+    ", "+    for (File jar : jars) {", "+      JarJDKToolsLibrary lib = makeFromFile(jar, model);", "+      if (lib.isValid()) {", "+        FullVersion v = lib.version();", "+        Map<FullVersion, Iterable<JarJDKToolsLibrary>> mapToAddTo = results;", "+        if (v.vendor().equals(JavaVersion.VendorType.MINT)) { mapToAddTo = mintResults; }", "+        ", "+        if (mapToAddTo.containsKey(v)) { mapToAddTo.put(v, IterUtil.compose(lib, mapToAddTo.get(v))); }", "+        else { mapToAddTo.put(v, IterUtil.singleton(lib)); }", "+      }", "+    }", "+    ", "+    Iterable<JarJDKToolsLibrary> collapsed = IterUtil.reverse(IterUtil.collapse(results.values()));", "+    Iterable<JarJDKToolsLibrary> mintCollapsed = IterUtil.reverse(IterUtil.collapse(mintResults.values()));", "+    ", "+    Map<FullVersion, Iterable<JarJDKToolsLibrary>> javaMintResults =", "+      new TreeMap<FullVersion, Iterable<JarJDKToolsLibrary>>();", "+    // now we have the JDK libraries in collapsed and the Mint libraries in mintCollapsed", "+    for(JarJDKToolsLibrary mintLib: mintCollapsed) {", "+//      msg(\"mintLib: \"+mintLib.version());", "+      FullVersion mintVersion = mintLib.version();", "+      JarJDKToolsLibrary found = null;", "+      // try to find a JDK in results that matches mintVersion exactly, except for vendor", "+      for(JarJDKToolsLibrary javaLib: collapsed) {", "+//        msg(\"\\texact? \"+javaLib.version());", "+        FullVersion javaVersion = javaLib.version();", "+        if ((javaVersion.majorVersion().equals(mintVersion.majorVersion())) &&", "+            (javaVersion.maintenance()==mintVersion.maintenance()) &&", "+            (javaVersion.update()==mintVersion.update()) &&", "+            (javaVersion.release()==mintVersion.release())) {", "+//          msg(\"\\t\\tfound\");", "+          found = javaLib;", "+          break;", "+        }", "+      }", "+      // if we didn't find one, take the best JDK that matches the major version", "+      if (found==null) {", "+        for(JarJDKToolsLibrary javaLib: collapsed) {", "+//          msg(\"\\tmajor? \"+javaLib.version());", "+          FullVersion javaVersion = javaLib.version();", "+          if (javaVersion.majorVersion().equals(mintVersion.majorVersion())) {", "+//            msg(\"\\t\\tfound\");", "+            found = javaLib;", "+            break;", "+          }", "+        }", "+      }", "+      // if we found a JDK, then create a new Mint library", "+      if (found!=null) {", "+        JarJDKToolsLibrary lib = makeFromFile(mintLib.location(), model, found.bootClassPath());", "+        if (lib.isValid()) {", "+//          msg(\"\\t==> \"+lib.version());", "+          FullVersion v = lib.version();", "+          if (javaMintResults.containsKey(v)) { javaMintResults.put(v, IterUtil.compose(lib, javaMintResults.get(v))); }", "+          else { javaMintResults.put(v, IterUtil.singleton(lib)); }", "+        }", "+      }", "+    }", "+    return IterUtil.compose(collapsed,IterUtil.reverse(IterUtil.collapse(javaMintResults.values())));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "306b6a6b10ff8ea8e05bf5357caea11e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "cfea3e13a321911fb98c8bdb6bf527cebe9e8065", "commitAfterChange": "c93fe40cf9a3db4130d052c7d32f60d02ed31c7a", "methodNumberBeforeChange": 220, "methodNumberAfterChange": 220, "signatureBeforeChange": "    private boolean showCleanWarning()", "signatureAfterChange": "    private boolean showCleanWarning()", "diff": ["-                                  \"Clean Built Directory?\",", "-                                  \"Cleaning your built directory will delete all\\n\" + ", "+                                  \"Clean Build Directory?\",", "+                                  \"Cleaning your build directory will delete all\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30dedba11c06510b4259846220dc80f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "      private void _assertLineBraceInfo(int distance, String braceType)", "signatureAfterChange": "      private void _assertLineBraceInfo(int distance, String braceType)", "diff": ["-    _doc.acquireReadLock();", "-    try {", "-      BraceInfo info = _doc._getLineEnclosingBrace();", "+//    _doc.acquireReadLock();", "+//    try {", "+    BraceInfo info = _doc._getLineEnclosingBrace();", "-      assertEquals(\"line brace info: brace distance\", distance, info.distance());", "-      assertEquals(\"line brace info: brace type\", braceType, info.braceType());", "-    }", "-    finally { _doc.releaseReadLock(); }", "+    assertEquals(\"line brace info: brace distance\", distance, info.distance());", "+    assertEquals(\"line brace info: brace type\", braceType, info.braceType());", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "320cf84dbe15de81a7564bac6ef3ffd8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testAfterBlockComment3 () throws BadLocationException", "signatureAfterChange": "   public void testAfterBlockComment3 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "326d11b9a4130a6805f0e586c0e5cb5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testCompileWithPackageStatementInsideClass()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileWithPackageStatementInsideClass()     throws BadLocationException, IOException", "diff": ["-    File fooFile = new File(subdir, \"Foo.java\");", "-    File compiled = classForJava(fooFile, \"Foo\");", "+    File fooFile = new File(subdir, \"DrJavaTestFoo.java\");", "+    File compiled = classForJava(fooFile, \"DrJavaTestFoo\");", "-    // Save the footext to Foo.java in the subdirectory", "+    // Save the footext to DrJavaTestFoo.java in the subdirectory"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32a556fce959074671d6340a55082ee2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void testNumericBitwiseAnd() throws InterpreterException", "signatureAfterChange": "   public void testNumericBitwiseAnd() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: charValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Character) [(koala.dynamicjava.tree.CharacterLiteral: 'a' a char)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: charValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Character) [(koala.dynamicjava.tree.CharacterLiteral: 'a' a char)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ad8acd977b14ac64ea9b2281334e4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 463, "methodNumberAfterChange": 467, "signatureBeforeChange": "    final private boolean jj_3R_274()", "signatureAfterChange": "    final private boolean jj_3R_282()", "diff": ["-", "-  final private boolean jj_3R_274() {", "-    if (jj_scan_token(RIGHT_UNSIGNED_SHIFTASSIGN)) return true;", "-    if (jj_3R_98()) return true;", "+", "+  final private boolean jj_3R_282() {", "+    if (jj_scan_token(RIGHT_UNSIGNED_SHIFTASSIGN)) return true;", "+    if (jj_3R_99()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "331706faf0f7a02209ed9282e518f37e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public void testInsideClass () throws BadLocationException", "signatureAfterChange": "   public void testInsideClass () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "336fa8cfc361f97a77b302f98bdd8d7d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   public void testNotRecognizeComments2 () throws BadLocationException", "signatureAfterChange": "   public void testNotRecognizeComments2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33bd2373803fcf462df27f4c319150ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 528, "methodNumberAfterChange": 524, "signatureBeforeChange": "    final private boolean jj_3R_133()", "signatureAfterChange": "    final private boolean jj_3R_135()", "diff": ["-", "-  final private boolean jj_3R_133() {", "+  final private boolean jj_3R_135() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34549f1776d68ced6e996bdd9632bf27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private int _getIndentOfCurrStmt(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getIndentOfCurrStmt(int pos) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._getIndentOfCurrStmt(pos); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+      return _doc._getIndentOfCurrStmt(pos); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "354b8527091b308bf725fcec635811ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "cfea3e13a321911fb98c8bdb6bf527cebe9e8065", "commitAfterChange": "c93fe40cf9a3db4130d052c7d32f60d02ed31c7a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private void _setupNotificationsPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupNotificationsPanel(ConfigPanel panel)", "diff": ["-                                                  \"Prompt before Cleaning Built Directory\", this,", "+                                                  \"Prompt before Cleaning Build Directory\", this,", "-                                                    \"built directory of a project</html>\"));", "+                                                    \"build directory of a project</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "355dc376a006bb4f71d8c1ae8fc9aeff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void testIgnoreBraceOnSameLine () throws BadLocationException", "signatureAfterChange": "   public void testIgnoreBraceOnSameLine () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35a33927f7fb8c7fc806545d9eed67c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public void testOpenParen () throws BadLocationException", "signatureAfterChange": "   public void testOpenParen () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3682749fdaaa4608c499c0b15d85fc1b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public void testNumericBitwiseXOr() throws InterpreterException", "signatureAfterChange": "   public void testNumericBitwiseXOr() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: longValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Long) [(koala.dynamicjava.tree.IntegerLiteral: 0 0 int)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: longValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Long) [(koala.dynamicjava.tree.IntegerLiteral: 0 0 int)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38aca67218b840fe4b48527310cb88c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsScriptModel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public boolean hasPrevInteraction()", "signatureAfterChange": "   public boolean hasPrevInteraction()", "diff": ["-    _doc.acquireReadLock();", "-    try {", "-      int index = _currentInteraction;", "-      if (_passedCurrent) index++; // We're passed the current, so the previous interaction is the current.", "-      return index > 0;", "-    }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try {", "+    int index = _currentInteraction;", "+    if (_passedCurrent) index++; // We're passed the current, so the previous interaction is the current.", "+    return index > 0;", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38cd9cbcfad1acde3faff0a9b4c0027b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "b6148d8c1aaf55232aeac694d90234c9353139cd", "commitAfterChange": "536afaee0374767d0f8bdf572a332576e3f54467", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "       private LeafNode getNodeForDoc(INavigatorItem doc)", "signatureAfterChange": "       private LeafNode<ItemT> getNodeForDoc(ItemT doc)", "diff": ["-  private LeafNode getNodeForDoc(INavigatorItem doc) { ", "+  private LeafNode<ItemT> getNodeForDoc(ItemT doc) { "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38efbbe8027dee2b174fd79929aca835", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void insertBeforeLastPrompt(String text, String style)", "signatureAfterChange": "   public void insertBeforeLastPrompt(String text, String style)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39b4bc77bc1b5c39fb6a3f8f5fc58e6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testAddTwoIntegers() throws InterpreterException", "signatureAfterChange": "   public void testAddTwoIntegers() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b11f59fe7af70d180ac0525266f28f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "      public void testArrayAllocation() throws InterpreterException", "signatureAfterChange": "      public void testArrayAllocation() throws InterpreterException", "diff": ["-    Type type = exp.acceptVisitor(_typeChecker);", "+    Class<?> type = exp.acceptVisitor(_typeChecker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ba491caece2e4009d950a315f1c3e46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testEndOfBlockComment () throws BadLocationException", "signatureAfterChange": "   public void testEndOfBlockComment () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d17d287aba6aaeab7a2af7600c83699", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public void testIgnoreBraceOnSameLine () throws BadLocationException", "signatureAfterChange": "   public void testIgnoreBraceOnSameLine () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d1ae0d3ac4b085ad4e6d9006cc3111b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public void testIndentInsideCommentBlock () throws BadLocationException", "signatureAfterChange": "   public void testIndentInsideCommentBlock () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d644e0ba57ba37aef9700c88c958a9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void forceInsertText(int offs, String str, String style) throws EditDocumentException", "signatureAfterChange": "   public void forceInsertText(int offs, String str, String style) throws EditDocumentException", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dda1f08bd45e93a20e30cce7353de11", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 778, "methodNumberAfterChange": 783, "signatureBeforeChange": "    final private boolean jj_3R_181()", "signatureAfterChange": "    final private boolean jj_3R_189()", "diff": ["-  final private boolean jj_3R_181() {", "+  final private boolean jj_3R_189() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40b0160bc4aa863bf072e128c74c0443", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public void testFor () throws BadLocationException", "signatureAfterChange": "   public void testFor () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40f00bca7f3dc8609d95fc03ea9bd3ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void testTopLevelClassNameWithClassloaderImport()     throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public void testTopLevelClassNameWithClassloaderImport()     throws BadLocationException, ClassNameNotFoundException", "diff": ["-    defModel.insertString(0, weird, null);", "+    _defModel.insertString(0, weird, null);", "-                 defModel.getFirstTopLevelClassName());", "+                 _defModel.getFirstTopLevelClassName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "410687183c312d9243a7c80fe70b4bdd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public Type visit(BlockStatement node)", "signatureAfterChange": "   public Class<?> visit(BlockStatement node)", "diff": ["-  public Type visit(BlockStatement node) {", "+  public Class<?> visit(BlockStatement node) {", "-    ", "+", "-    ", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "420cffc9f8e263c746f11d6babee2264", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void setListFont(Font f)", "signatureAfterChange": "   public void setListFont(Font f)", "diff": ["-      doc.modifyLock();", "+      doc.acquireWriteLock();", "-      finally { doc.modifyUnlock(); }", "+      finally { doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42baff0eb4547a92ed311988ebf09fb7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testGotoLine5()", "signatureAfterChange": "   public void testGotoLine5()", "diff": ["-    defModel.gotoLine(1);", "-    assertEquals(\"#0.0\", 0, defModel.getCurrentLocation());", "+    _defModel.gotoLine(1);", "+    assertEquals(\"#0.0\", 0, _defModel.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42dc3bb622ec3ab5adcee145d8618793", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void reset(String banner)", "signatureAfterChange": "   public void reset(String banner)", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "439957671642883c22e9af01c04a2ddc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testAfterBlockComment4 () throws BadLocationException", "signatureAfterChange": "   public void testAfterBlockComment4 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43f8cfad4bad0b2ab230746a8bd9fbfe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public void testFor2 () throws BadLocationException", "signatureAfterChange": "   public void testFor2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "453ae13cf2ef8f254d84284c5b64bbb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "d1bc46bda120c4aecfe38f91af0fa9a5e31eafb8", "commitAfterChange": "8c167429ba92c08453565171838e7b90a541e18d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testStringOps() throws ExceptionReturnedException", "signatureAfterChange": "   public void testStringOps() throws ExceptionReturnedException", "diff": ["-      Pair.make(\"\\\"yeah\\\" + \\\"and\\\"\", new String(\"yeah\" + \"and\")), ", "+      Pair.make(\"\\\"yeah\\\" + \\\"and\\\"\", new String(\"\\\"yeah\" + \"and\\\"\")), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45c9c03eb0fc5e83a0f87cce7fe027e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void setListFont(Font f)", "signatureAfterChange": "   public void setListFont(Font f)", "diff": ["-      doc.acquireWriteLock();", "+      doc.modifyLock();", "-      finally { doc.releaseWriteLock(); }", "+      finally { doc.modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4601af37c2d005a386c8c197af8e6177", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void appendExceptionResult(String exceptionClass, String message, String stackTrace, String styleName)", "signatureAfterChange": "   public void appendExceptionResult(String exceptionClass, String message, String stackTrace, String styleName)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46518e32376f5732fa13a7257226d56d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public void testNotRecognizeComments () throws BadLocationException", "signatureAfterChange": "   public void testNotRecognizeComments () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4696cb9d89f6855d1c8193980569dacd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void testEndBrace () throws BadLocationException", "signatureAfterChange": "   public void testEndBrace () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4697ebc37ce22667d289862960a0327c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "04d7824a20eb03ad17793ba3198be21442313bdc", "commitAfterChange": "b1c7871d21e78d9b00bec5144dc21cdc37950342", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   private void _findAgain()", "signatureAfterChange": "   private void _findAgain()", "diff": ["-    updateButtons();", "+    _updateButtons();   // force an update buttons operation", "-      _findReplace.findAll(_searchString, _searchAll, _matchCase, _wholeWord,", "-                           _noComments, _noTestCases, odd, _regionManager, this);", "+      System.err.println(\"Root has been cleared\");", "+      _findReplace.findAll(_searchString, _searchAll, _matchCase, _wholeWord, _noComments, _noTestCases, odd, ", "+                           _regionManager, this);", "+      requestFocusInWindow();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48c57603df6acd39c26c3b74bda12dbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void testStartBrace () throws BadLocationException", "signatureAfterChange": "   public void testStartBrace () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a02ab0c3b0d59a484070a99a96aec65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void insertText(int offs, String str, String style) throws EditDocumentException", "signatureAfterChange": "   public void insertText(int offs, String str, String style) throws EditDocumentException", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a3f70cfe96e4f62c580279c238355a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionPrevLineStartsComment.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    int cursor;", "+      System.err.println(\"QuestionPrevLineStartsComment\");", "+      int cursor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aced7636ac0ac592eecfa7c31af5856", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "   public void select(int selectionStart, int selectionEnd)", "signatureAfterChange": "   public void select(int selectionStart, int selectionEnd)", "diff": ["-    _doc.acquireReadLock();", "-    try {", "-//      if (selectionStart < 0) selectionStart = 0;", "-//      if (selectionEnd < 0) selectionEnd = 0;", "-      setCaretPosition(selectionStart);", "-      moveCaretPosition(selectionEnd);  // What about the caret position in the reduced model?  It is updated by a listener.", "-    }", "-    finally { _doc.releaseReadLock(); }", "+    setCaretPosition(selectionStart);", "+    moveCaretPosition(selectionEnd);  // What about the caret position in the reduced model?  It is updated by a listener."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4af573b0cf7efd8f7b49bc317a9c3c33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyFullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "signatureAfterChange": "   public Void forVariableDeclarationOnly(VariableDeclaration that)", "diff": ["+    System.err.println(\"Calling _variableDeclaration2VariableData in BodyBodyFullJavaVisitor.java\");", "- * index variable to repeated in successive for loops. */", "+ * index variable to repeated in successive for loops. TODO: fix this. */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b7fbfcf1012a48c68a4467add53a803", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "e193e4674aaab3350b36cbc521ecf3bf9c098bc6", "commitAfterChange": "6c31f49b491d4a01bd2ddbae62b5ee4f76d52129", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public String getText()", "signatureAfterChange": "   public String getText()", "diff": ["-    acquireWriteLock();", "+    acquireReadLock();", "-    finally { releaseWriteLock(); }", "+    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c69401d208f983bcee7892af1b0de98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public void notifyActive()", "signatureAfterChange": "   public void notifyActive()", "diff": ["-    _doc.acquireWriteLock();", "+    _doc.modifyLock();", "-    finally { _doc.releaseWriteLock(); }", "+    finally { _doc.modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cce10a48d53aa06578ec9b11986acb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "   public void testStaticMethodCall() throws InterpreterException", "signatureAfterChange": "   public void testStaticMethodCall() throws InterpreterException", "diff": ["-    Type type = exp.acceptVisitor(_typeChecker);", "+    Class<?> type = exp.acceptVisitor(_typeChecker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dc1aa8b4c19fae618fe00cc1e85e85c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public void testLessThanEqual() throws InterpreterException", "signatureAfterChange": "   public void testLessThanEqual() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 12 12 int)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 32 32 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 12 12 int)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 32 32 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dd1b0ba29894126e431e17633e51c4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "         public void testforValueReturnStatementOnly()", "signatureAfterChange": "         public void testforValueReturnStatementOnly()", "diff": ["-      assertEquals(\"Error message should be correct\", \"This method expected to return type: \\\"int\\\" but here returned type: \\\"boolean\\\".\", errors.get(0).getFirst());", "+      assertEquals(\"Error message should be correct\", ", "+                   \"This method expected to return type: \\\"int\\\" but here returned type: \\\"boolean\\\"\", errors.get(0).getFirst());", "-      assertEquals(\"Error message should still be correct\", \"This method expected to return type: \\\"int\\\" but here returned type: \\\"boolean\\\".\", errors.get(0).getFirst());", "+      assertEquals(\"Error message should still be correct\", \"This method expected to return type: \\\"int\\\" but here returned type: \\\"boolean\\\"\", errors.get(0).getFirst());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fccbc02e74ab3270db06e9fcf288395", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 42, "signatureBeforeChange": "         public void testAddVar()", "signatureAfterChange": "         public void testAddVar()", "diff": ["+      ", "+      System.err.println(\"testAddVar finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fcf27845f9ebf415dd0b56688d14cd1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void testWierd2 () throws BadLocationException", "signatureAfterChange": "   public void testWierd2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fe5d5fb7df98d74de6eaf33341b2cba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void testFor2 () throws BadLocationException", "signatureAfterChange": "   public void testFor2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ff21f7fb23143f3a14bb992c51f4a05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void clearCurrentInteraction()", "signatureAfterChange": "   public void clearCurrentInteraction()", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ffdff4b627fc1414b6ea86878215d5f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 501, "methodNumberAfterChange": 505, "signatureBeforeChange": "    final private boolean jj_3R_266()", "signatureAfterChange": "    final private boolean jj_3R_274()", "diff": ["-  final private boolean jj_3R_266() {", "+  final private boolean jj_3R_274() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "503d258a2904337607b3383358049d6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private void _updateMatchHighlight() throws BadLocationException", "signatureAfterChange": "   private void _updateMatchHighlight() throws BadLocationException", "diff": ["-      Highlighter.Highlight[] _lites = getHighlighter().getHighlights();", "+//      Highlighter.Highlight[] _lites = getHighlighter().getHighlights();", "-    /** Not ready yet...", "-    else {", "-      // Try to match a close brace to this open brace", "-      from = _doc.balanceForward();", "-      if (from > -1) {", "-        from = to + from;", "-        _addHighlight(to, from);", "-        Highlighter.Highlight[] _lites = getHighlighter().getHighlights();", "-      }", "-    }", "-    */", "+    // TODO: finish this", "+//    else {", "+//      // Try to match a close brace to this open brace", "+//      from = _doc.balanceForward();", "+//      if (from > -1) {", "+//        from = to + from;", "+//        _addHighlight(to, from);", "+//        Highlighter.Highlight[] _lites = getHighlighter().getHighlights();", "+//      }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "519feec6982c090a270b20572158a40a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 61, "signatureBeforeChange": "      private void _assertBraceInfo(int distance, String braceType)", "signatureAfterChange": "      private void _assertBraceInfo(int distance, String braceType)", "diff": ["-    _doc.acquireReadLock();", "-    try {", "-      BraceInfo info = _doc._getEnclosingBrace();", "-      assertEquals(\"line brace info: brace distance\", distance, info.distance());", "-      assertEquals(\"line brace info: brace type\", braceType, info.braceType());", "-    }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try {", "+    BraceInfo info = _doc._getEnclosingBrace();", "+    assertEquals(\"line brace info: brace distance\", distance, info.distance());", "+    assertEquals(\"line brace info: brace type\", braceType, info.braceType());", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51af15fc20f1fa30fa14d71219051b1d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public void testEnter () throws BadLocationException", "signatureAfterChange": "   public void testEnter () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53d012feca8f6956138837f51bd358f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "576713321d388945af9795f8f5bacbafa14cd87f", "commitAfterChange": "b814c7e145dc4411f1437e59c56bc53ee860800f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   private void _setupResourceLocPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupResourceLocPanel(ConfigPanel panel)", "diff": ["-                                                         \"Restore last working directory of the Interactions pane on startUp\", this,", "-                                                         \"<html>Whether to restore the last working directory of the Interaction pane on startUp,<br>\"+", "+                                                         \"Restore last working directory of the Interactions pane on start up\", this,", "+                                                         \"<html>Whether to restore the last working directory of the Interaction pane on start up,<br>\"+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54cbcc97e4a8d82d75eac47e27705539", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void insertNewLine(int pos)", "signatureAfterChange": "   public void insertNewLine(int pos)", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5564dd1c834645a4c791c05f877d40cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsController.java", "commitBeforeChange": "a8ba898ce33911122e91ee2c93e5825d2f8c0e22", "commitAfterChange": "54ca35a697068e061a6e4015227b37b547246d01", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public void verifyKey(VerifyEvent event)", "signatureAfterChange": "     public void verifyKey(VerifyEvent event)", "diff": ["-      StyledText pane = _view.getTextPane();", "+      //StyledText pane = _view.getTextPane();", "-      ", "+", "-      ", "+", "-      ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55b2593f9181cdcb4c79c00ef74a89e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4b6c56880670c4bb0f37de6a58c9d30d501c274a", "commitAfterChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "methodNumberBeforeChange": 271, "methodNumberAfterChange": 272, "signatureBeforeChange": "   private void _setUpKeyBindingMaps()", "signatureAfterChange": "   private void _setUpKeyBindingMaps()", "diff": ["-                                    null, \"Switch Focus To Definitions Pane\");", "+                                    null, \"Switch Focus To Previous Pane\");", "-                                    null, \"Switch Focus To Interactions Pane\");", "+                                    null, \"Switch Focus To Next Pane\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57561cb3900377e13d53fc85dfa3467f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public void testGreaterThan() throws InterpreterException", "signatureAfterChange": "   public void testGreaterThan() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: doubleValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Double) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: doubleValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Double) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: doubleValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Double) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: doubleValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Double) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58162af14a462a254fed3903ec65b2f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionLineContains.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["+    System.err.println(\"QuestionLineContains\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a275a99847458f2399f402d1d069a14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void reverseHistorySearch(String searchString)", "signatureAfterChange": "   public void reverseHistorySearch(String searchString)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a5076e1fd9c3b2eb5736ae411242492", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "7bb32c28070a4b5d5697c7c88ea0d664289c76e8", "commitAfterChange": "b2ad80c49aaa09f293a5bc1f6664d4cc5243219e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   protected OpenDefinitionsDocument setupDocument(String text)     throws BadLocationException", "signatureAfterChange": "   protected OpenDefinitionsDocument setupDocument(String text)     throws BadLocationException", "diff": ["-    int numOpen = _model.getDefinitionsDocuments().length;", "+    int numOpen = _model.getDefinitionsDocuments().getSize();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cdb8eab55d0ec2f7c64149480c03fbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "   public void insertString(int offset, String str, AttributeSet a) throws BadLocationException", "signatureAfterChange": "   public void insertString(int offset, String str, AttributeSet a) throws BadLocationException", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d8a0881d2faea0c04e10daa069b4de9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public void testAndingTwoBooleans() throws InterpreterException", "signatureAfterChange": "   public void testAndingTwoBooleans() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dd2c78cc98d1704094a199465d8695d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testCannotEditBeforePrompt() throws EditDocumentException", "signatureAfterChange": "   public void testCannotEditBeforePrompt() throws EditDocumentException", "diff": ["-    _doc.modifyLock();", "+    _doc.acquireWriteLock();", "-    finally { _doc.modifyUnlock(); }", "+    finally { _doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5deec7f19d7f8fad83bc18f6789f036d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void testNothingToIndentOn () throws BadLocationException", "signatureAfterChange": "   public void testNothingToIndentOn () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e37a2e78d56239462fda79dc8d7de4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private int _getLineFirstCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getLineFirstCharPos(int pos) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._getLineFirstCharPos(pos); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+    return _doc._getLineFirstCharPos(pos); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ee933865adf9cd3cefdfe25313f5966", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ff27298276d0b205036fe4b017017ca3896e9890", "commitAfterChange": "4ddb555fbb20c498ee5f44bc087ce9c848b2e79c", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": "   private File getChosenFile(JFileChooser fc, int choice)     throws OperationCanceledException", "signatureAfterChange": "   private File getChosenFile(JFileChooser fc, int choice)     throws OperationCanceledException", "diff": ["-          throw new RuntimeException(\"filechooser returned null file\");", "+          throw new RuntimeException(\"Filechooser returned null file\");", "-        throw  new RuntimeException(\"filechooser returned bad rc \" + choice);", "+        throw  new RuntimeException(\"Filechooser returned bad rc \" + choice);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f337b385fe1533be7be1fc040491b4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 457, "methodNumberAfterChange": 453, "signatureBeforeChange": "    final private boolean jj_3R_282()", "signatureAfterChange": "    final private boolean jj_3R_333()", "diff": ["-  final private boolean jj_3R_282() {", "+  final private boolean jj_3R_333() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fba131a223e4471adbff89245afe59b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testEndOfBlockComment () throws BadLocationException", "signatureAfterChange": "   public void testEndOfBlockComment () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fc0c55a7d4bd58147c01376b543295b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8212ce9ce43b34bb82672d4de3ee06245bf52614", "commitAfterChange": "d88fb548627bde19f7cf516c794ed4211e0bf63d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testBooleanBitwiseXOr() throws ExceptionReturnedException", "signatureAfterChange": "   public void testBooleanBitwiseXOr() throws ExceptionReturnedException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)])\";", "-    String expectedRight = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)])\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60633e2342462d06548552b05a56c558", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void clearHistory()", "signatureAfterChange": "   public void clearHistory()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6095e3098d96055b2b2899d1e738020e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public void testSquigglyAlignment () throws BadLocationException", "signatureAfterChange": "   public void testSquigglyAlignment () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60a949f2920d02e61cfab919560d3324", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "df2b79c4755a48b6d68cea0053ee5b504fa8b5d0", "commitAfterChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "methodNumberBeforeChange": 694, "methodNumberAfterChange": 693, "signatureBeforeChange": "   void initAutoImportDialog()", "signatureAfterChange": "   void initAutoImportDialog()", "diff": ["-                                                   new JavaAPIListEntry(\"dummy\", \"dummy\", null)) {", "+                                                   new JavaAPIListEntry(\"dummyImport\", \"dummyImport\", null)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60ef420670964646df7048d11557211d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public Type visit(ReturnStatement node)", "signatureAfterChange": "   public Class<?> visit(ReturnStatement node)", "diff": ["-  public Type visit(ReturnStatement node) {", "+  public Class<?> visit(ReturnStatement node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "638a7435445bb07525f4aec12f5dad95", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private int _getLineStartPos(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getLineStartPos(int pos) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._getLineStartPos(pos); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+      return _doc._getLineStartPos(pos); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63b766452cac3b8e05df1653e04fdcce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsScriptModel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public boolean hasNextInteraction()", "signatureAfterChange": "   public boolean hasNextInteraction()", "diff": ["-    _doc.acquireReadLock();", "-    try { return _currentInteraction < _interactions.size() - 1; }  // what if _passedCurrent == true?", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+    return _currentInteraction < _interactions.size() - 1; ", "+//    }  // what if _passedCurrent == true?", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "648c3a6112fa9afada55e6ca65ff12a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker14.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected SimpleAllocation _box(Expression exp, Type refType)", "signatureAfterChange": "   protected SimpleAllocation _box(Expression exp, Class<?> refType)", "diff": ["-  protected SimpleAllocation _box(Expression exp, Type refType) {", "+  protected SimpleAllocation _box(Expression exp, Class<?> refType) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66476633045e08c8030dcaa32c617d62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   private int _getLineEndPos(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getLineEndPos(int pos) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._getLineEndPos(pos); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+    return _doc._getLineEndPos(pos); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "665bc43a127cb87f1ea469244532a3b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public int commentLines(int selStart, int selEnd)", "signatureAfterChange": "   public int commentLines(int selStart, int selEnd)", "diff": ["-      modifyLock();", "+      acquireWriteLock();", "-      finally { modifyUnlock(); }", "+      finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c6186b20df9e64271599a47ef58cd4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testSkippingComments () throws BadLocationException", "signatureAfterChange": "   public void testSkippingComments () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67e5cf17e7e5e8ae200e4812c454e441", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public void testWeird () throws BadLocationException", "signatureAfterChange": "   public void testWeird () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68e5109e8f3e63213766d9cc44ed1019", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public void testNotRecognizeComments2 () throws BadLocationException", "signatureAfterChange": "   public void testNotRecognizeComments2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b0e2d87e464c1fad1d5e9799e5edff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void testMultiplyingTwoIntegers() throws InterpreterException", "signatureAfterChange": "   public void testMultiplyingTwoIntegers() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a142034332cd75505d04d5037929995", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 452, "methodNumberAfterChange": 448, "signatureBeforeChange": "    final private boolean jj_3R_284()", "signatureAfterChange": "    final private boolean jj_3R_335()", "diff": ["-  final private boolean jj_3R_284() {", "+", "+  final private boolean jj_3R_335() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6abaca16834d8d46b60e620e9e183795", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public boolean recallNextInteractionInHistory()", "signatureAfterChange": "   public boolean recallNextInteractionInHistory()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ad8e2ecba942b4cfacfafb9904d4590", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testGotoLine6()", "signatureAfterChange": "   public void testGotoLine6()", "diff": ["-    defModel.gotoLine(4);", "-    assertEquals(\"#0.0\", 0, defModel.getCurrentLocation());", "+    _defModel.gotoLine(4);", "+    assertEquals(\"#0.0\", 0, _defModel.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cdcc296d7a4eac13a9a979ccf8affcb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void append(String str, String style) throws EditDocumentException", "signatureAfterChange": "   public void append(String str, String style) throws EditDocumentException", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d2c36a09bbf45c9674c73570520401d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   private int _findPrevDelimiter(int pos, char[] delimiters) throws BadLocationException", "signatureAfterChange": "   private int _findPrevDelimiter(int pos, char[] delimiters) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._findPrevDelimiter(pos, delimiters); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+      return _doc._findPrevDelimiter(pos, delimiters); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e11e713f97545339e9851bc33520cb8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void reset(String banner)", "signatureAfterChange": "   public void reset(String banner)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ef46aeb9845ced2b407ac68fc8061dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 621, "methodNumberAfterChange": 626, "signatureBeforeChange": "    final private boolean jj_3R_561()", "signatureAfterChange": "    final private boolean jj_3R_568()", "diff": ["-  final private boolean jj_3R_561() {", "+  final private boolean jj_3R_568() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fd285d6c431375f2797bdeac3e63c9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public void testFor () throws BadLocationException", "signatureAfterChange": "   public void testFor () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7079cb50137ce8b0ec35a923e05a570b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithSkipComments.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["+    System.err.println(\"QuestionCurrLineStartsWithSkipComments\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70a78d0ac9784f4b0d8f1011b5c2cdf8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void testOpenBracket () throws BadLocationException", "signatureAfterChange": "   public void testOpenBracket () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71d0a2d402a81686c790ed0518d75d67", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "24e790b85d3a1a29de15955ca1ba9200a6865f83", "commitAfterChange": "4ceb386773fd5eb837ddcd34820c563b6c3c20cb", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 130, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _setUpAction(_javadocAction, \"JavaDoc\", \"Test\", \"Create javadoc\");", "+    _setUpAction(_javadocAction, \"Javadoc\", \"Test\", \"Create Javadoc for open documents\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73828734eb94e50313bcbb61f03b9145", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 702, "methodNumberAfterChange": 774, "signatureBeforeChange": "    final private boolean jj_3R_134()", "signatureAfterChange": "    final private boolean jj_3R_143()", "diff": ["-", "-  final private boolean jj_3R_134() {", "-    if (jj_3R_98()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_143() {", "+    if (jj_3R_90()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73c4163fb970259750770d1ee8959816", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8212ce9ce43b34bb82672d4de3ee06245bf52614", "commitAfterChange": "d88fb548627bde19f7cf516c794ed4211e0bf63d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testBooleanBitwiseOr() throws ExceptionReturnedException", "signatureAfterChange": "   public void testBooleanBitwiseOr() throws ExceptionReturnedException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)])\";", "-    String expectedRight = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)])\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "740630adacf17fc9aa06593e28adc249", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private int _getIndentOfCurrStmt(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getIndentOfCurrStmt(int pos) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._getIndentOfCurrStmt(pos); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+      return _doc._getIndentOfCurrStmt(pos); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "742fecfce88fe04092f0d40e25d65ea7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public void testSecondLineProblem () throws BadLocationException", "signatureAfterChange": "   public void testSecondLineProblem () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75fdbd8de3e74575d7e82320c7c3089f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void testGetLine5()", "signatureAfterChange": "   public void testGetLine5()", "diff": ["-    defModel.setCurrentLocation(0);", "-    assertEquals(\"#0.0\", 1, defModel.getCurrentLine());", "+    _defModel.setCurrentLocation(0);", "+    assertEquals(\"#0.0\", 1, _defModel.getCurrentLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76a1838f7418e2edf9592e8c61633d01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testGetColumn2() throws BadLocationException", "signatureAfterChange": "   public void testGetColumn2() throws BadLocationException", "diff": ["-    defModel.insertString(0, s, null);", "-    assertEquals(\"#0.0\", 5, defModel.getCurrentCol() );", "+    _defModel.insertString(0, s, null);", "+    assertEquals(\"#0.0\", 5, _defModel.getCurrentCol() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76c2fae3973d6bd0c94484878ce719b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/RegionManager.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ArrayList<R> getRegionsNear(OpenDefinitionsDocument odd, int offset);", "signatureAfterChange": "   public Pair<R, R> getRegionInterval(OpenDefinitionsDocument odd, int offset);", "diff": ["-  public ArrayList<R> getRegionsNear(OpenDefinitionsDocument odd, int offset);", "+  public Pair<R, R> getRegionInterval(OpenDefinitionsDocument odd, int offset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "772d2dd745c89f840b71cb5e5274ea9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void clearCurrentInteraction()", "signatureAfterChange": "   public void clearCurrentInteraction()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "774b968349846f79a0a9048f9b61f68f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 43, "signatureBeforeChange": "          public void testAddVars()", "signatureAfterChange": "          public void testAddVars()", "diff": ["+      ", "+      System.err.println(\"testAddVars finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "779062344b66db7d0d6a1d002b0f15cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 510, "methodNumberAfterChange": 506, "signatureBeforeChange": "    final private boolean jj_3R_113()", "signatureAfterChange": "    final private boolean jj_3R_114()", "diff": ["+", "+  final private boolean jj_3R_114() {", "+    if (jj_3R_99()) return true;", "+    return false;", "+  }", "-", "-  final private boolean jj_3R_113() {", "-    if (jj_3R_98()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77aae97b4c0033af5ea08cdcad09dbb7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public void testPrintString () throws BadLocationException", "signatureAfterChange": "   public void testPrintString () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78372b1add99451323b3a2157f369eb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigatorTest.java", "commitBeforeChange": "763746c75da041fa03e39aafc4de71f8bfce036b", "commitAfterChange": "5b8a4d5203a3c597e80c0cef7902216619428742", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testRenameDocument()", "signatureAfterChange": "   public void testRenameDocument()", "diff": ["-      tree.addDocument(item, \"folder3/\");", "+      tree.addDocument(item, \"folder3\");", "-      tree.refreshDocument(item, \"folder3/\");", "+      tree.refreshDocument(item, \"folder3\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a1ea1e7e16d050a266f6aa352a8434b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/SlaveJVMRunner.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private static void _showErrorMessage(String cause, Throwable t)", "signatureAfterChange": "   private static void _showErrorMessage(String cause, Throwable t)", "diff": ["-    String msg = \"An error occurred while starting the slave JVM:\\n  \" +", "+    String msg = \"An error occurred in SlaveJVMRunner while starting the slave JVM:\\n  \" +", "-    _log.log(\"ERROR in Slave JVM Runner: \" + cause + \"; threw \" + t);", "+    _log.log(\"ERROR in SlaveJVMRunner: \" + cause + \"; threw \" + t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a78200088f236a7dd62542a00f98368", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public void indentLines(int selStart, int selEnd, int reason, ProgressMonitor pm)     throws OperationCanceledException", "signatureAfterChange": "   public void indentLines(int selStart, int selEnd, int reason, ProgressMonitor pm)     throws OperationCanceledException", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); } ", "+    finally { releaseWriteLock(); } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7acfa2739068eb81b5f444579abf9b18", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public Type visit(SwitchBlock node)", "signatureAfterChange": "   public Class<?> visit(SwitchBlock node)", "diff": ["-  public Type visit(SwitchBlock node) {", "+  public Class<?> visit(SwitchBlock node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c09e6db925f1edd49c1a7e19f8beaca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public JTreeSortNavigator(String projfilepath)", "signatureAfterChange": "   public JTreeSortNavigator(String projfilepath)", "diff": ["+    System.err.println(isEditable());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c5398099beb81ce30c7b5abab600941", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "e40cad149a4b39a1583fd59c835dddf03689cb71", "commitAfterChange": "93940c21f6995f648e815e21c209f78be7209afc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   private static boolean _userWantsToPickAgain()", "signatureAfterChange": "   private static boolean _userWantsToPickAgain()", "diff": ["-      \"Would you like to pick again? The 'tools.jar' file is \",", "+      \"(Your choice might be an incompatible version of the file.) \",", "+      \"Would you like to pick again?  The 'tools.jar' file is \","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c75735712599fed3806245db0cb9fc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public void testBlockIndent2 () throws BadLocationException", "signatureAfterChange": "   public void testBlockIndent2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dbd6befa01dd820005cfeeaae7a09d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public abstract Type visit(ForEachStatement node);", "signatureAfterChange": "   public abstract Class<?> visit(ForEachStatement node);", "diff": ["-  public abstract Type visit(ForEachStatement node);", "+  public abstract Class<?> visit(ForEachStatement node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ddaf57fa4d22978d9794ba6f65919ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public String getText()", "signatureAfterChange": "   public String getText()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fa64618964eced1f13ad9d5f3db94a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public void testWierd2 () throws BadLocationException", "signatureAfterChange": "   public void testWierd2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8055ac2c8137accdeb8e4f3139fa1c5f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "6d55d86705248616cac5b324a7c528485ceb6104", "commitAfterChange": "d9483f6c228cd09f3431ad6b50a3d96bdaf83832", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testAllowPrivateAccess() throws ExceptionReturnedException", "signatureAfterChange": "   public void testAllowPrivateAccess() throws ExceptionReturnedException", "diff": ["+    Utilities.clearEventQueue();", "+//    System.err.println(\"\\nPrivate Access = \" + _interpreter.getPrivateAccessible());", "+      System.err.println(\"Private access erroneously succeeded\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8113c0530ea029cc48ff2c775842e586", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void remove(int offset, int len) throws BadLocationException", "signatureAfterChange": "   public void remove(int offset, int len) throws BadLocationException", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "813201b2397d704107f1c9ce767beb1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void setPrompt(String prompt)", "signatureAfterChange": "   public void setPrompt(String prompt)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    modifyUnlock();", "+    releaseWriteLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81de3c0c873f19c2596ff335f239be8e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void updateModifiedSinceSave()", "signatureAfterChange": "   public void updateModifiedSinceSave()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-      modifyUnlock();", "+      releaseWriteLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82390880950e5c4c14752a0b1291194f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testIndentInfoPrevNewline () throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoPrevNewline () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84b381a58aad1ffff00d9b2515bc0e99", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "   protected static Type _correspondingRefClass(Class<?> primClass)", "signatureAfterChange": "   protected static Class<?> _correspondingRefClass(Class<?> primClass)", "diff": ["-  protected static Type _correspondingRefClass(Class<?> primClass) {", "+  protected static Class<?> _correspondingRefClass(Class<?> primClass) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84b688332cc14275417185e5ef594d47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void addToHistory(String text)", "signatureAfterChange": "   public void addToHistory(String text)", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85243533ee34c51318a57ada09a891b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 48, "signatureBeforeChange": "           public void testGetNextAnonymousInnerClass()", "signatureAfterChange": "      public void testGetNextAnonymousInnerClass()", "diff": ["-    ", "-    }", "+      System.err.println(\"testGetNextAnonymousInnerClass finished\");", "+    } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "854a2c4c6b28e6efb65a3fd2f0d6467c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testIndentInfoBlockComments3 () throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoBlockComments3 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "854df44e058a3093005b9d7160f57bb8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartAfterOpenBraceTest.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testCommentsAfterBrace() throws BadLocationException", "signatureAfterChange": "      public void testCommentsAfterBrace() throws BadLocationException", "diff": ["-    assertTrue(\"START = DOCSTART.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START = DOCSTART.\", !_rule.applyRule(_doc, 14, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START = 0.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START = 0.\", !_rule.applyRule(_doc, 14, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "857696c908a926cb0bb53bed6bb4a2a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionInsideComment.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["+    System.err.println(\"QuestionInsideComment\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85cdc0954ebeefa5822061c8e70f192f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "d1bc46bda120c4aecfe38f91af0fa9a5e31eafb8", "commitAfterChange": "8c167429ba92c08453565171838e7b90a541e18d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void testInteractionsLiveUpdateClasspath()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsLiveUpdateClasspath()     throws BadLocationException, IOException, InterruptedException", "diff": ["-               !\"DrJavaTestFoo\".equals(result));", "+               !\"\\\"DrJavaTestFoo\\\"\".equals(result));", "-                 \"DrJavaTestFoo\",", "+                 \"\\\"DrJavaTestFoo\\\"\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85ceb9b1de106aecc1c0e8b6877db1ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 506, "methodNumberAfterChange": 413, "signatureBeforeChange": "    final private boolean jj_3R_135()", "signatureAfterChange": "    final private boolean jj_3R_136()", "diff": ["-  final private boolean jj_3R_135() {", "+", "+  final private boolean jj_3R_136() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87a4e4c0268119b55daed8c3eb88ef04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public void testPrintString () throws BadLocationException", "signatureAfterChange": "   public void testPrintString () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88015912e8ee9389948d7b3026400006", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "   void _completeFileUnderCursor()", "signatureAfterChange": "   void _completeFileUnderCursor()", "diff": ["-    odd.acquireWriteLock();", "+    odd.modifyLock();", "-      if (uniqueMatch) { odd.releaseWriteLock(); }", "+      if (uniqueMatch) { odd.modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "881b291164527e6533b9d3f77246497f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "   protected abstract ObjectMethodCall _unbox(Expression child, Type type);", "signatureAfterChange": "   protected abstract ObjectMethodCall _unbox(Expression child, Class<?> type);", "diff": ["-  protected abstract ObjectMethodCall _unbox(Expression child, Type type);", "+  protected abstract ObjectMethodCall _unbox(Expression child, Class<?> type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "895ee83b149b6791951ae63087e0d9fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public void testTopLevelClassNameMisleading()     throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public void testTopLevelClassNameMisleading()     throws BadLocationException, ClassNameNotFoundException", "diff": ["-    defModel.insertString(0, weird, null);", "+    _defModel.insertString(0, weird, null);", "-                 defModel.getFirstTopLevelClassName());", "+                 _defModel.getFirstTopLevelClassName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b777faee75db4a3a1831d2f676d256b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public void testTopLevelClassName()     throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public void testTopLevelClassName()     throws BadLocationException, ClassNameNotFoundException", "diff": ["-    defModel.insertString(0, weird, null);", "+    _defModel.insertString(0, weird, null);", "-                 defModel.getFirstTopLevelClassName());", "+                 _defModel.getFirstTopLevelClassName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b86f4e411d76ff8b7a6c1e3135a6b7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public void testStartSpaceIndent () throws BadLocationException", "signatureAfterChange": "   public void testStartSpaceIndent () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bae1147cbcd9010a996a29512d90132", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   private int _replaceAllInCurrentDoc()", "signatureAfterChange": "   private int _replaceAllInCurrentDoc()", "diff": ["-    _doc.modifyLock();", "+    _doc.acquireWriteLock();", "-    finally { _doc.modifyUnlock(); }", "+    finally { _doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c8bf7e991deafb13bbc437739673136", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void testEndBrace () throws BadLocationException", "signatureAfterChange": "   public void testEndBrace () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c91a83631bd6465b73215ffe75c99ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "5481b029dfc07ee092049dc1e5006c0f887620a2", "commitAfterChange": "abf4f1180f29753cd298d5a45275f68e5c2b9b58", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   private void _setupFontPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupFontPanel(ConfigPanel panel)", "diff": ["-      panel.addComponent(new BooleanOptionComponent(OptionConstants.TEXT_ANTIALIAS, \"Use anti-aliased text in Definitions\", this,", "-                                                    \"Whether to graphically smooth the text in the Definitions Pane.\"));", "+      panel.addComponent(new BooleanOptionComponent(OptionConstants.TEXT_ANTIALIAS, \"Use anti-aliased text\", this,", "+                                                    \"Whether to graphically smooth the text.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dd1ddf694ecde2f565f5f621f439d21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private int _getFirstNonWSCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getFirstNonWSCharPos(int pos) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._getFirstNonWSCharPos(pos); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+    return _doc._getFirstNonWSCharPos(pos); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e9674d3ae70e2d9f21c80a63c46ebfa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void testRemoveTabs1()", "signatureAfterChange": "   public void testRemoveTabs1()", "diff": ["-    defModel.setIndent(1);", "+    _defModel.setIndent(1);", "-    String result = defModel._removeTabs(test);", "+    String result = _defModel._removeTabs(test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ffcd354e05987674a63fa7b57e7d38e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void resetModification()", "signatureAfterChange": "   public void resetModification()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-      modifyUnlock(); ", "+      releaseWriteLock(); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "921a1efe66936ad2b509b4d23d8f74ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void testSkippingCommentsBraceAtBeginning () throws BadLocationException", "signatureAfterChange": "   public void testSkippingCommentsBraceAtBeginning () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92f2664fa3618126edf43006003fd050", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public void testNotRecognizeComments () throws BadLocationException", "signatureAfterChange": "   public void testNotRecognizeComments () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93753101ef2892c3111948c1b0e6e03f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void appendExceptionResult(String exceptionClass, String message, String stackTrace, String styleName)", "signatureAfterChange": "   public void appendExceptionResult(String exceptionClass, String message, String stackTrace, String styleName)", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "941ea616727331b6009ed429fa17e77e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void insertNewLine(int pos)", "signatureAfterChange": "   public void insertNewLine(int pos)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "952160a2d4c4c8ef4cf6e07ca87185f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 463, "methodNumberAfterChange": 459, "signatureBeforeChange": "    final private boolean jj_3R_280()", "signatureAfterChange": "    final private boolean jj_3R_331()", "diff": ["-  final private boolean jj_3R_280() {", "+  final private boolean jj_3R_331() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "966a251fc117b78b27821c709311011e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 381, "methodNumberAfterChange": 370, "signatureBeforeChange": "    final private boolean jj_3R_355()", "signatureAfterChange": "    final private boolean jj_3R_358()", "diff": ["+", "+  final private boolean jj_3R_358() {", "+    if (jj_scan_token(INCREMENT)) return true;", "+    if (jj_3R_100()) return true;", "+    return false;", "+  }", "-    if (jj_scan_token(INCREMENT)) return true;", "-    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96cd9d7668b436581ae71f7ac4d14ab0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 461, "methodNumberAfterChange": 465, "signatureBeforeChange": "    final private boolean jj_3R_275()", "signatureAfterChange": "    final private boolean jj_3R_283()", "diff": ["-", "-  final private boolean jj_3R_275() {", "-    if (jj_scan_token(AND_ASSIGN)) return true;", "-    if (jj_3R_98()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_283() {", "+    if (jj_scan_token(AND_ASSIGN)) return true;", "+    if (jj_3R_99()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9820afe20aa2091a4bb883cbfdbeb99e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "    private String _getAllText() throws BadLocationException", "signatureAfterChange": "    private String _getAllText() throws BadLocationException", "diff": ["-    return defModel.getText(0, defModel.getLength());", "+    return _defModel.getText(0, _defModel.getLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "997182b5630c598fdf05154a348fba8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public void testBlockIndent2 () throws BadLocationException", "signatureAfterChange": "   public void testBlockIndent2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a11e6c76ec0cfa1597877df937ceaba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DependenciesTest.java", "commitBeforeChange": "5b24cc652ccfb3f73fd9787955deeabf51180dac", "commitAfterChange": "3c18849aa384463de7c1bb8553d97d486fec44c2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testUtilVersion() throws Throwable", "signatureAfterChange": "   public void testUtilVersion() throws Throwable", "diff": ["-    Date found = edu.rice.cs.util.Version.BUILD_TIME;", "+    Date found = edu.rice.cs.util.Version.getBuildTime();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bb22b91889de171f33d96acd1010bca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void moveHistoryNext(String entry)", "signatureAfterChange": "   public void moveHistoryNext(String entry)", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-   finally { releaseWriteLock(); }", "+   finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c792cb4055520e38fb1edb5de1ca86e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CommentTest.java", "commitBeforeChange": "ddaa83f5d7e463d396f773edc05bd85484692b8a", "commitAfterChange": "c0411b7a6f6c403c7ffb73b1d0c38cb49fd33824", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testUncommentSingleLine() throws BadLocationException", "signatureAfterChange": "   public void testUncommentSingleLine() throws BadLocationException", "diff": ["-      \"System.out.println(\\\"Aren't comments fun? // (yeah!)\\\")\";", "+      \"         System.out.println(\\\"Aren't comments fun? // (yeah!)\\\")\";", "-    _assertContents(\"The last line should be indented and have no commenting!\",", "+    _assertContents(\"The last line should have no commenting!\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d75207a1d8d1d542efb714669e14436", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public void testInsideClass () throws BadLocationException", "signatureAfterChange": "   public void testInsideClass () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e4808b8783511a00ff2e350210fd296", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 457, "methodNumberAfterChange": 461, "signatureBeforeChange": "    final private boolean jj_3R_276()", "signatureAfterChange": "    final private boolean jj_3R_284()", "diff": ["-", "-  final private boolean jj_3R_276() {", "-    if (jj_scan_token(XOR_ASSIGN)) return true;", "-    if (jj_3R_98()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_284() {", "+    if (jj_scan_token(XOR_ASSIGN)) return true;", "+    if (jj_3R_99()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f01011fe6519f57a340feb1fa3e6c94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void reverseSearchInteractionsInHistory()", "signatureAfterChange": "   public void reverseSearchInteractionsInHistory()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f0e7237d96ca69934752d0078d05210", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/BidirectionalHashMap.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "      public String toString()", "diff": ["-  public /* synchronized */ String toString() {", "+  public String toString() {", "-    ret = \"forward = \\n\" + forward.values() + \"\\n backward = \\n\" + backward.values();", "+    ret = \"forward = \" + forward.values() + \"\\nbackward = \" + backward.values();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0329cc1e1377a62fc364a5c8111c552", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void testNextCharIsNewline () throws BadLocationException", "signatureAfterChange": "   public void testNextCharIsNewline () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1710280e41042128e1c80d746b25e45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 468, "methodNumberAfterChange": 472, "signatureBeforeChange": "    final private boolean jj_3R_272()", "signatureAfterChange": "    final private boolean jj_3R_280()", "diff": ["-  final private boolean jj_3R_272() {", "+  final private boolean jj_3R_280() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1e23096b43ff9d87c93e5c1be26df49", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionExistsCharInStmt.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    // Find the position of endChar on the current line", "+    System.err.println(\"QuestionExistsCharInStmt\");", "+", "+   // Find the position of endChar on the current line"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a25cc87ed62a4616e35c4fa6c70839e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "      public void testBoxingCastExpression() throws InterpreterException", "signatureAfterChange": "      public void testBoxingCastExpression() throws InterpreterException", "diff": ["-    Type type = exp.acceptVisitor(_typeChecker);", "+    Class<?> type = exp.acceptVisitor(_typeChecker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a28bf0ed1e6b2346a931fd68a24c9df4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 496, "methodNumberAfterChange": 500, "signatureBeforeChange": "    final private boolean jj_3R_267()", "signatureAfterChange": "    final private boolean jj_3R_275()", "diff": ["-  final private boolean jj_3R_267() {", "+  final private boolean jj_3R_275() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2a6bc6dbb06cb1bb43f1a7226657387", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Type visit(ImportDeclaration node)", "signatureAfterChange": "   public Class<?> visit(ImportDeclaration node)", "diff": ["-  public Type visit(ImportDeclaration node) {", "+  public Class<?> visit(ImportDeclaration node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3035847f15010391fde0c700ee07df7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public void testMotion () throws BadLocationException", "signatureAfterChange": "   public void testMotion () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a306e0785c52fcc70492b55f55ea4614", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public void testSecondLineProblem2 () throws BadLocationException", "signatureAfterChange": "   public void testSecondLineProblem2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a356537be9aac25e4ea2b2d6e2ef78e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public void testBlockIndent () throws BadLocationException", "signatureAfterChange": "   public void testBlockIndent () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a365dbc1c7943107d9fd181519959355", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   private int _getLineEndPos(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getLineEndPos(int pos) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._getLineEndPos(pos); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+    return _doc._getLineEndPos(pos); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a39a0151e6fdd0b8fd621f6957a7ce11", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private int _getLineStartPos(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getLineStartPos(int pos) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._getLineStartPos(pos); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+      return _doc._getLineStartPos(pos); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a39c9852440a9a744773fa80ca66e859", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsCurly.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["+    System.err.println(\"QuestionBraceIsCurly\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40b43a1309570ac7461e5275ef99c79", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testSkippingBraces () throws BadLocationException", "signatureAfterChange": "   public void testSkippingBraces () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4203b6705ca1cc0230de1e61e2b2295", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public void testEnter2 () throws BadLocationException", "signatureAfterChange": "   public void testEnter2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4ac62e007fa6f56761d4b3f21a888ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public void testSpaceBrace () throws BadLocationException", "signatureAfterChange": "   public void testSpaceBrace () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a53b693ee260145cbc5fb83626b7fe01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void testShiftRight() throws InterpreterException", "signatureAfterChange": "   public void testShiftRight() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: shortValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Short) [(koala.dynamicjava.tree.StringLiteral: \\\"1\\\" 1 class java.lang.String)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: shortValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Short) [(koala.dynamicjava.tree.StringLiteral: \\\"2\\\" 2 class java.lang.String)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: shortValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Short) [(koala.dynamicjava.tree.StringLiteral: \\\"1\\\" 1 class java.lang.String)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: shortValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Short) [(koala.dynamicjava.tree.StringLiteral: \\\"2\\\" 2 class java.lang.String)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a570c35c679d087af9791b8dfbf06f7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void testStartSimple () throws BadLocationException", "signatureAfterChange": "   public void testStartSimple () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d2ba4d40129da720411543972f7430", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   private int _commentBlock(final int start, final int end)", "signatureAfterChange": "   private int _commentBlock(final int start, final int end)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7eda041fafaba7f363e2a66759b9ab8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 641, "methodNumberAfterChange": 646, "signatureBeforeChange": "    final private boolean jj_3R_135()", "signatureAfterChange": "    final private boolean jj_3R_139()", "diff": ["-  final private boolean jj_3R_135() {", "+  final private boolean jj_3R_139() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7ee0caa10b2859dc069be1b7d13f899", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Type visit(TryStatement node)", "signatureAfterChange": "   public Class<?> visit(TryStatement node)", "diff": ["-  public Type visit(TryStatement node) {", "+  public Class<?> visit(TryStatement node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a86ac78617ece1b5a545f68f0f928490", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testAfterBlockComment2 () throws BadLocationException", "signatureAfterChange": "   public void testAfterBlockComment2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a886c2033ef2db6e9e7eac872d3f88d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsParenOrBracket.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["+    System.err.println(\"QuestionBraceIsParenOrBracket\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8d6e0a65b2805a7cd706dc9593865fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public void testSquigglyAlignment () throws BadLocationException", "signatureAfterChange": "   public void testSquigglyAlignment () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9847f6114d5c4011499ab81252d8e55", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "12434dc2dab84dfe1024e2e2b39fd8f27da62bbd", "commitAfterChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _setPendingNotifies(int n) throws InterruptedException", "signatureAfterChange": "   protected void _setPendingNotifies(int n) throws InterruptedException", "diff": ["-      _log.log(\"waiting for \" + n + \" notifications...\");", "+      _log.log(\"Waiting for \" + n + \" notifications ...\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9d6b9f16bebc4f1a94c218c0879284d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 60, "signatureBeforeChange": "      private void _assertLineBraceInfo(int distance, String braceType)", "signatureAfterChange": "      private void _assertLineBraceInfo(int distance, String braceType)", "diff": ["-    _doc.acquireReadLock();", "-    try {", "-      BraceInfo info = _doc._getLineEnclosingBrace();", "+//    _doc.acquireReadLock();", "+//    try {", "+    BraceInfo info = _doc._getLineEnclosingBrace();", "-      assertEquals(\"line brace info: brace distance\", distance, info.distance());", "-      assertEquals(\"line brace info: brace type\", braceType, info.braceType());", "-    }", "-    finally { _doc.releaseReadLock(); }", "+    assertEquals(\"line brace info: brace distance\", distance, info.distance());", "+    assertEquals(\"line brace info: brace type\", braceType, info.braceType());", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa94f0723ed927ff0b3bc5cdff1456e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 491, "methodNumberAfterChange": 495, "signatureBeforeChange": "    final private boolean jj_3R_269()", "signatureAfterChange": "    final private boolean jj_3R_277()", "diff": ["-  final private boolean jj_3R_269() {", "+  final private boolean jj_3R_277() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aadecc771fc443bc234cc30a7b104df5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void forwardSearchInteractionsInHistory()", "signatureAfterChange": "   public void forwardSearchInteractionsInHistory()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab6c6c03beda78408f48a832e50a6fee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public void testBooleanBitwiseXOr() throws InterpreterException", "signatureAfterChange": "   public void testBooleanBitwiseXOr() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abab47c33c8fb613bccd065dae23beba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void moveHistoryNext(String entry)", "signatureAfterChange": "   public void moveHistoryNext(String entry)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-   finally { modifyUnlock(); }", "+   finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac51dd6625862ecc4079a381e6387afc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 454, "methodNumberAfterChange": 450, "signatureBeforeChange": "    final private boolean jj_3R_283()", "signatureAfterChange": "    final private boolean jj_3R_334()", "diff": ["+", "+  final private boolean jj_3R_334() {", "+    if (jj_scan_token(RIGHT_SIGNED_SHIFT_ASSIGN)) return true;", "+    if (jj_3R_100()) return true;", "-", "-  final private boolean jj_3R_283() {", "-    if (jj_scan_token(RIGHT_SIGNED_SHIFT_ASSIGN)) return true;", "-    if (jj_3R_99()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae9816a8747b7916c913119104266b86", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 239, "signatureBeforeChange": "    final private boolean jj_3R_241()", "signatureAfterChange": "    final private boolean jj_3R_242()", "diff": ["-", "-  final private boolean jj_3R_241() {", "-    if (jj_3R_98()) return true;", "-    Token xsp;", "-    while (true) {", "-      xsp = jj_scanpos;", "-      if (jj_3R_245()) { jj_scanpos = xsp; break; }", "-    }", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_242() {", "+    if (jj_3R_37()) return true;", "+    Token xsp;", "+    while (true) {", "+      xsp = jj_scanpos;", "+      if (jj_3R_245()) { jj_scanpos = xsp; break; }", "+    }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae9ec996ce59c5f41d36f0edccc7c51b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void insertPrompt()", "signatureAfterChange": "   public void insertPrompt()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b074bf18d7f23fae756962982ef902f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/LogTest.java", "commitBeforeChange": "8b2531509cebe19f9248dfcfb27c6842d311bd33", "commitAfterChange": "c3f7dc43a12b95869d758523b286e6fcaa876293", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testConcurrentWrites() throws IOException, InterruptedException", "signatureAfterChange": "   public void testConcurrentWrites() throws IOException, InterruptedException", "diff": ["+//    System.err.println(\"LogTest.testConucrrentWrites started\");", "+    ", "-", "+    ", "-", "+    ", "-   ", "+    ", "-    assertTrue(\"Log not opened after 'earlier' and before 'now'\", withinASecond(earlier, time0, now));", "-", "+    assertTrue(\"Log not opened after 'earlier' and before 'now'\", withinTolerance(earlier, time0, now));", "+    ", "-      assertTrue(\"Date of message not after 'earlier' and before 'now'\", withinASecond(earlier, time1, now));", "-      assertTrue(\"Date of message not after 'previous time' and before 'now'\", withinASecond(time0, time1, now));", "+      assertTrue(\"Date of message not after 'earlier' and before 'now'\", withinTolerance(earlier, time1, now));", "+      assertTrue(\"Date of message not after 'previous time' and before 'now'\", withinTolerance(time0, time1, now));", "+    System.err.println(\"LogTest.testConucrrentWrites complete\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0e95f1cf514f3c356caad69cf8f82b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testIndentInfoBlockComments2 () throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoBlockComments2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1a2858a5309b2d99a5409772b31db84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ProcessIncrementalTaskController.java", "commitBeforeChange": "ba3f1737bae917eb057a0651ee7d4f727a22cab6", "commitAfterChange": "d28ad1c0de8862f820b20e04c9a78fc9e0194666", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void doStart()", "signatureAfterChange": "         protected void doStart()", "diff": ["+  ", "-    if (_t != null) { writeCommand(Command.RUN); }", "-    else {", "-      _executor.execute(new Runnable() {", "-        public void run() {", "-          _t = Thread.currentThread();", "+    _executor.execute(new Runnable() {", "+      public void run() {", "+        _t = Thread.currentThread();", "+        try {", "+          // stop if the task was canceled before starting", "+          if (Thread.interrupted()) { throw new InterruptedException(); }", "+          Process p = _jvmBuilder.start(Runner.class.getName(), IterUtil.<String>empty());", "-            // stop if the task was canceled before starting", "-            if (Thread.interrupted()) { throw new InterruptedException(); }", "-            Process p = _jvmBuilder.start(Runner.class.getName(), IterUtil.<String>empty());", "+            InputStream in = p.getInputStream();", "+            // skip prefix", "+            int matching = 0;", "+            while (matching < Runner.PREFIX.length) {", "+              int read = in.read();", "+              if (read == -1) { throw new EOFException(\"Data prefix not found\"); }", "+              else if ((byte) read == Runner.PREFIX[matching]) { matching++; } // cast handles negatives", "+              else if ((byte) read == Runner.PREFIX[0]) { matching = 1; } // cast handles negatives", "+              else { matching = 0; }", "+            }", "+            // prefix has been matched", "+            ObjectInputStream objIn = new ObjectInputStream(in);", "-              InputStream in = p.getInputStream();", "-              // skip prefix", "-              int matching = 0;", "-              while (matching < Runner.PREFIX.length) {", "-                int read = in.read();", "-                if (read == -1) { throw new EOFException(\"Data prefix not found\"); }", "-                else if ((byte) read == Runner.PREFIX[matching]) { matching++; } // cast handles negatives", "-                else if ((byte) read == Runner.PREFIX[0]) { matching = 1; } // cast handles negatives", "-                else { matching = 0; }", "-              }", "-              // prefix has been matched", "-              ObjectInputStream objIn = new ObjectInputStream(in);", "+              ObjectOutputStream objOut = new ObjectOutputStream(p.getOutputStream());", "-                ObjectOutputStream objOut = new ObjectOutputStream(p.getOutputStream());", "-                try {", "-                  objOut.writeObject(_task);", "-                  objOut.writeObject(Command.RUN);", "-                  objOut.flush();", "-                  _commandSink = objOut;", "-                  ", "-                  Result r;", "-                  do {", "-                    r = (Result) objIn.readObject();", "-                    r.handle(ProcessIncrementalTaskController.this);", "-                  } while (!(r instanceof FinishResult));", "-                  if (r instanceof CleanFinishResult) {", "-                    // let the process run if we finished cleanly", "-                    Runnable1<? super Process> onExit = _onExit; // keep local copy so it can be discarded", "-                    if (onExit != null) { p.waitFor(); onExit.run(p); }", "-                  }", "-                  else { p.destroy(); }", "+                objOut.writeObject(_task);", "+                objOut.writeObject(Command.RUN);", "+                objOut.flush();", "+                _commandSink = objOut;", "+                ", "+                Result r;", "+                do {", "+                  r = (Result) objIn.readObject();", "+                  r.handle(ProcessIncrementalTaskController.this);", "+                } while (!(r instanceof FinishResult));", "+                if (r instanceof CleanFinishResult) {", "+                  // let the process run if we finished cleanly", "+                  Runnable1<? super Process> onExit = _onExit; // keep local copy so it can be discarded", "+                  if (onExit != null) { p.waitFor(); onExit.run(p); }", "-                finally { objOut.close(); }", "+                else { p.destroy(); }", "-              finally { objIn.close(); }", "+              finally { objOut.close(); }", "-            catch (EOFException e) {", "-              p.destroy();", "-              throw new IOException(\"Unable to run process; class path may need to be adjusted\");", "-            }", "-            // destroy the process on an exception, but let it run if we completed cleanly", "-            catch (Throwable e) { p.destroy(); throw e; }", "+            finally { objIn.close(); }", "-          catch (InterruptedException e) { /* ignore -- indicates error occurred in another thread */ }", "-          catch (InterruptedIOException e) { /* ignore -- indicates error occurred in another thread */ }", "-          catch (RuntimeException e) { finishedWithImplementationException(e); }", "-          catch (Throwable t) { finishedWithImplementationException(new WrappedException(t)); }", "+          catch (EOFException e) {", "+            p.destroy();", "+            throw new IOException(\"Unable to run process; class path may need to be adjusted\");", "+          }", "+          // destroy the process on an exception, but let it run if we completed cleanly", "+          catch (Throwable e) { p.destroy(); throw e; }", "-      });", "-    }", "+        catch (InterruptedException e) { /* ignore -- indicates error occurred in another thread */ }", "+        catch (InterruptedIOException e) { /* ignore -- indicates error occurred in another thread */ }", "+        catch (RuntimeException e) { finishedWithImplementationException(e); }", "+        catch (Throwable t) { finishedWithImplementationException(new WrappedException(t)); }", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1a6834775087c27a925d934587bfc10", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "fb8ddcbfd71bd75d2b307b4e83f7a834ec364082", "commitAfterChange": "be84679bc73e85f88d6958fbfdf8b35be73855ab", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 73, "signatureBeforeChange": "      protected void _copyVariablesFromInterpreter() throws DebugException", "signatureAfterChange": "      protected void _copyVariablesFromInterpreter() throws DebugException", "diff": ["-      throw new DebugException(e2.toString());", "+      //throw new DebugException(e2.toString());", "+      // Silently fail for now to ignore the AbsentInformationException that", "+      // we should have noticed when first suspending on this line (see currThreadSuspended)."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b964c1608d300d139e1aa0e13cb607", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public void interpreterResetting()", "signatureAfterChange": "   public void interpreterResetting()", "diff": ["-      _document.modifyLock();", "+      _document.acquireWriteLock();", "-      finally { _document.modifyUnlock(); }", "+      finally { _document.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3576d7494d00a857d63f3baec6ff831", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "ef93e6cc3a79f29ed28debb1108f1338b9a974ad", "commitAfterChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "         public void testParenthesizedAnonymousInnerClass() throws BadLocationException", "signatureAfterChange": "         public void testParenthesizedAnonymousInnerClass() throws BadLocationException", "diff": ["-        \"config.setSetting(LANGUAGE_LEVEL, DrJavaRoot.FULL_JAVA);\\n\" +", "+        \"config.setSetting(LANGUAGE_LEVEL, edu.rice.cs.drjava.config.OptionConstants.FULL_JAVA);\\n\" +", "-       \"    config.setSetting(LANGUAGE_LEVEL, DrJavaRoot.FULL_JAVA);\\n\" +", "+       \"    config.setSetting(LANGUAGE_LEVEL, edu.rice.cs.drjava.config.OptionConstants.FULL_JAVA);\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d8b0e879bbc4f88b9c09033b7239c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public Type visit(ArrayInitializer node)", "signatureAfterChange": "   public Class<?> visit(ArrayInitializer node)", "diff": ["-  public Type visit(ArrayInitializer node) {", "+  public Class<?> visit(ArrayInitializer node) {", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4a4621b7a19cfb023b08b79f0719489", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 487, "methodNumberAfterChange": 491, "signatureBeforeChange": "    final private boolean jj_3R_270()", "signatureAfterChange": "    final private boolean jj_3R_278()", "diff": ["-  final private boolean jj_3R_270() {", "+  final private boolean jj_3R_278() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5a852970ae720e1e13eaee828736fa2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartCurrStmtPlus.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["+    System.err.println(\"ActionStartCurrStmtPlus\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5b1b82b29f74b2907d0d28076bc355a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public void testEnter () throws BadLocationException", "signatureAfterChange": "   public void testEnter () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6d124987fd84e338dffb38fc743caa9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "   public void remove(final int offset, final int len) throws BadLocationException", "signatureAfterChange": "   public void remove(final int offset, final int len) throws BadLocationException", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }  ", "+    finally { releaseWriteLock(); }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b77c5f3c4ad2bc94ed367044ff02ba38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 645, "methodNumberAfterChange": 640, "signatureBeforeChange": "    final private boolean jj_3R_133()", "signatureAfterChange": "    final private boolean jj_3R_135()", "diff": ["-  final private boolean jj_3R_133() {", "+  final private boolean jj_3R_135() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8757c6b48846479df06612ba57cf028", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testSubtractingTwoIntegers() throws InterpreterException", "signatureAfterChange": "   public void testSubtractingTwoIntegers() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9124172a84cd2a3406ed135158ed7c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionBracePlus.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["+    System.err.println(\"ActionBracePlus\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b97d9f4b473eef458dd3ab17738266e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void testAfterBlockComment () throws BadLocationException", "signatureAfterChange": "   public void testAfterBlockComment () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9d6552c32081357e44678195265e575", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void setPrompt(String prompt)", "signatureAfterChange": "   public void setPrompt(String prompt)", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    releaseWriteLock();", "+    modifyUnlock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1b8cc7e55d2e19062495610a94ed6e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e67d165690a34c03b8dbd31cddaf42bddcc82e8f", "commitAfterChange": "96a09f26e797e5676f0cf2606ce69c3ce24bf921", "methodNumberBeforeChange": 673, "methodNumberAfterChange": 673, "signatureBeforeChange": "          public File[] filesReadOnly(File... files)", "signatureAfterChange": "          public File[] filesReadOnly(File... files)", "diff": ["-        .setText(\"The following files could not be saved because they are read-only.\\n\"+", "-                 \"Do you want to overwrite them anyway?\")", "+        .setText(\"<html>The following files could not be saved because they are read-only.<br>\"+", "+                 \"Do you want to overwrite them anyway?</html>\")"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbcc2fb6aba32218560d025a3ae885f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private int _getFirstNonWSCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getFirstNonWSCharPos(int pos) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._getFirstNonWSCharPos(pos); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+    return _doc._getFirstNonWSCharPos(pos); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd29ac7dc9aa3dbdecbcce1199e5fe5c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 465, "methodNumberAfterChange": 461, "signatureBeforeChange": "    final private boolean jj_3R_279()", "signatureAfterChange": "    final private boolean jj_3R_330()", "diff": ["-  final private boolean jj_3R_279() {", "+  final private boolean jj_3R_330() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bec7907a733dce11938839f28e8dd972", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "38c5f71d4cacb939b5f81114fa6e5e26d271c57b", "commitAfterChange": "9b6f07f2b132c681f98fe8fb44100b84e5395f40", "methodNumberBeforeChange": 481, "methodNumberAfterChange": 388, "signatureBeforeChange": "    final private boolean jj_3R_114()", "signatureAfterChange": "    final private boolean jj_3R_501()", "diff": ["+  final private boolean jj_3R_501() {", "+    if (jj_3R_499()) return true;", "-  final private boolean jj_3R_114() {", "-    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0b573dd351327d6a71f2f556e64074b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavaSourceFilter.java", "commitBeforeChange": "5123ecf97583235afcfb8f13ec9081cdf56dd15a", "commitAfterChange": "520cd2cdf6034dac2fccfb5515380300424aef81", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public String getDescription()", "signatureAfterChange": "   public String getDescription()", "diff": ["-          return \"Java and GJ source files\";", "+          return \"Java source files\";", "-    return \"Java and GJ source files\";", "+    return \"Java source files\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1d4597a53dca533160280c5f9984a8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void testDividingTwoIntegers() throws InterpreterException", "signatureAfterChange": "   public void testDividingTwoIntegers() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c49bd8c3fcd6a338f8f22db46f433975", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyFullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public Void forAbstractMethodDef(AbstractMethodDef that)", "signatureAfterChange": "      public Void forAbstractMethodDef(AbstractMethodDef that)", "diff": ["-", "-    public Void forAbstractMethodDef(AbstractMethodDef that) {", "+  ", "+  public Void forAbstractMethodDef(AbstractMethodDef that) {", "-      _addAndIgnoreError(\"Interface methods cannot be made private.  They must be public.\", that.getMav());", "+      _addAndIgnoreError(\"Interface methods cannot be private.  They must be public.\", that.getMav());", "-      _addAndIgnoreError(\"Interface methods cannot be made protected.  They must be public.\", that.getMav());", "+      _addAndIgnoreError(\"Interface methods cannot be protected.  They must be public.\", that.getMav());", "- // All interface methods are considered public by default.", "+    // All interface methods are considered public by default."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4a925e9b5cec9ca60d167b8091f25aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 363, "methodNumberAfterChange": 363, "signatureBeforeChange": "          public void clear()", "signatureAfterChange": "          public void clear()", "diff": ["-      doc.acquireWriteLock();", "+      doc.modifyLock();", "-      finally { releaseWriteLock(); }", "+      finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4f5f6e4c9c31de7b03ae23fdb206420", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "   public Type visit(BitOrAssignExpression node)", "signatureAfterChange": "   public Class<?> visit(BitOrAssignExpression node)", "diff": ["-  public Type visit(BitOrAssignExpression node) {", "+  public Class<?> visit(BitOrAssignExpression node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c53a8c5da77cacea450767d91f3be62a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "   public void select(int selectionStart, int selectionEnd)", "signatureAfterChange": "   public void select(int selectionStart, int selectionEnd)", "diff": ["-    _doc.acquireReadLock();", "-    try {", "-//      if (selectionStart < 0) selectionStart = 0;", "-//      if (selectionEnd < 0) selectionEnd = 0;", "-      setCaretPosition(selectionStart);", "-      moveCaretPosition(selectionEnd);  // What about the caret position in the reduced model?  It is updated by a listener.", "-    }", "-    finally { _doc.releaseReadLock(); }", "+    setCaretPosition(selectionStart);", "+    moveCaretPosition(selectionEnd);  // What about the caret position in the reduced model?  It is updated by a listener."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5b110e857ae0faf0bafe53446175b46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void moveHistoryPrevious(String entry)", "signatureAfterChange": "   public void moveHistoryPrevious(String entry)", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c63b4207363fe486c8e5ae0ab9e7c9c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BraceTest.java", "commitBeforeChange": "28db8fb2942dc00cad50f5244fe215d573867721", "commitAfterChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testToString()", "signatureAfterChange": "   public void testToString()", "diff": ["-    assertEquals(\"Brace([40])\", lparen.toString());", "-    assertEquals(\"Brace([41])\", rparen.toString());", "+    assertEquals(\"Brace<(>\", lparen.toString());", "+    assertEquals(\"Brace<)>\", rparen.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c74e3b8fee63bcc8644864c764bba78d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartStmtOfBracePlus.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["+    System.err.println(\"ActionStartStmtOfBracePlus\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7aaa1e2f25ff47add8a3f418756b809", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public void testOringTwoBooleans() throws InterpreterException", "signatureAfterChange": "   public void testOringTwoBooleans() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8a4e32c47ae207e1aef010e2485b8f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testAfterBlockComment2 () throws BadLocationException", "signatureAfterChange": "   public void testAfterBlockComment2 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8a9471aacc8b3c9c44278c6f66ed2b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8212ce9ce43b34bb82672d4de3ee06245bf52614", "commitAfterChange": "d88fb548627bde19f7cf516c794ed4211e0bf63d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void testBooleanBitwiseAnd() throws ExceptionReturnedException", "signatureAfterChange": "   public void testBooleanBitwiseAnd() throws ExceptionReturnedException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)])\";", "-    String expectedRight = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)])\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8b9627060a776513818669c212402c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitorTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void testTryStatements()", "signatureAfterChange": "   public void testTryStatements()", "diff": ["-                                      \"        l.1 ReferenceType {\\n\" +", "+                                      \"        l.1 ReferenceTypeName {\\n\" +", "-                                      \"      l.1 ReferenceType {\\n\" +", "+                                      \"      l.1 ReferenceTypeName {\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cabd224d329ddfb0b2028d47f3ff3968", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 290, "methodNumberAfterChange": 281, "signatureBeforeChange": "    final private boolean jj_3R_419()", "signatureAfterChange": "    final private boolean jj_3R_429()", "diff": ["+    if (jj_scan_token(EXTENDS)) return true;", "-  final private boolean jj_3R_419() {", "-    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caf34e11739481cc7d0e839081d75fad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionNewParenPhrase.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["+    System.err.println(\"QuestionNewParenPhrase\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cafdc20ec2d9fa4f1d3ab16d60263ce1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Type visit(PackageDeclaration node)", "signatureAfterChange": "   public Class<?> visit(PackageDeclaration node)", "diff": ["-  public Type visit(PackageDeclaration node) {", "+  public Class<?> visit(PackageDeclaration node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb2dd1944c28217d62643c39bb3c13be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 565, "methodNumberAfterChange": 569, "signatureBeforeChange": "    final private boolean jj_3R_173()", "signatureAfterChange": "    final private boolean jj_3R_177()", "diff": ["-  final private boolean jj_3R_173() {", "+  final private boolean jj_3R_177() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb38dd67d186d8aeb9e3216d1c5486fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void reset(String banner)", "signatureAfterChange": "   public void reset(String banner)", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc74f030c934d3aed2a33338eec91148", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "a33beea01f3d2263a618fa7843cb52ddfdaa4ccf", "commitAfterChange": "2b371f46cbe5fba581bc2ddd38ce1509ce9a6d65", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private void _findAll()", "signatureAfterChange": "   private void _findAll()", "diff": ["+    panel._regTree.scrollRowToVisible(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc75f657478481c656d8263c5097920c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void addToHistory(String text)", "signatureAfterChange": "   public void addToHistory(String text)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc7f6112ddf74de063b77563dc98b758", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void disablePrompt()", "signatureAfterChange": "   public void disablePrompt()", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd45b726efc9197349899549e9fc0762", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWith.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    try {", "+      System.err.println(\"QuestionCurrLineStartsWith\");", "+      try {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdda65ffaa4eadbd8f964be85304b6a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "   void _completeWordUnderCursor()", "signatureAfterChange": "   void _completeWordUnderCursor()", "diff": ["-    PredictiveInputModel<GoToFileListEntry> pim =", "-      new PredictiveInputModel<GoToFileListEntry>(true,", "-                                                  new PredictiveInputModel.PrefixStrategy<GoToFileListEntry>(),", "+    PredictiveInputModel<GoToFileListEntry> pim = ", "+      new PredictiveInputModel<GoToFileListEntry>(true, new PredictiveInputModel.PrefixStrategy<GoToFileListEntry>(),", "-    odd.modifyLock();", "+    odd.acquireWriteLock();", "-      if (uniqueMatch) { odd.modifyUnlock(); }", "+      if (uniqueMatch) { odd.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce5e8502c46eb6b6a50ec375a8644e10", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   private int _findPrevDelimiter(int pos, char[] delimiters) throws BadLocationException", "signatureAfterChange": "   private int _findPrevDelimiter(int pos, char[] delimiters) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._findPrevDelimiter(pos, delimiters); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+      return _doc._findPrevDelimiter(pos, delimiters); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceb674b3df769f8083549a072c150faa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 247, "methodNumberAfterChange": 214, "signatureBeforeChange": "    final private boolean jj_3R_245()", "signatureAfterChange": "    final private boolean jj_3R_244()", "diff": ["-", "-  final private boolean jj_3R_245() {", "-    if (jj_scan_token(COMMA)) return true;", "-    if (jj_3R_98()) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_244() {", "+    if (jj_scan_token(COMMA)) return true;", "+    if (jj_3R_95()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0550fc7bfb43546736d47999687fd11", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public boolean recallPreviousInteractionInHistory()", "signatureAfterChange": "   public boolean recallPreviousInteractionInHistory()", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0cb1bb3d0a1314b39783e2c8b12eb87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 446, "methodNumberAfterChange": 442, "signatureBeforeChange": "    final private boolean jj_3R_286()", "signatureAfterChange": "    final private boolean jj_3R_337()", "diff": ["-", "-  final private boolean jj_3R_286() {", "+  final private boolean jj_3R_337() {", "-    if (jj_3R_99()) return true;", "-    return false;", "-  }", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d11ee3f853e9f0925a12774d3b990e43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "6d85a2756dd57e112f92e2bc7d39f5d4e70ce5ff", "commitAfterChange": "437e07b6079b252e6586e902072effaf49c3c807", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testDefineConstantExternally() throws ExceptionReturnedException", "signatureAfterChange": "   public void testDefineConstantExternally() throws ExceptionReturnedException", "diff": ["-    _interpreter.defineConstant(\"x\", 3);", "+    _interpreter.defineConstant(\"y\", 3);", "-      _interpreter.interpret(\"x = 4\");", "+      _interpreter.interpret(\"y = 4\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d12eedd119eb11419881a8dbe64c5877", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 477, "methodNumberAfterChange": 481, "signatureBeforeChange": "    final private boolean jj_3R_271()", "signatureAfterChange": "    final private boolean jj_3R_279()", "diff": ["-  final private boolean jj_3R_271() {", "+  final private boolean jj_3R_279() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1545f49da40caa8f03e9c5ef0159c37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void insertText(int offs, String str, String style) throws EditDocumentException", "signatureAfterChange": "   public void insertText(int offs, String str, String style) throws EditDocumentException", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1acdb10378ee622879722a88206b367", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 563, "methodNumberAfterChange": 623, "signatureBeforeChange": "    final private boolean jj_3R_185()", "signatureAfterChange": "    final private boolean jj_3R_557()", "diff": ["-  final private boolean jj_3R_185() {", "-    if (jj_3R_99()) return true;", "-    return false;", "-  }", "+  final private boolean jj_3R_557() {", "+    if (jj_3R_564()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2561bb6011c04a8af48b64ac2fa9298", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   public void testIndentInsideCommentBlock () throws BadLocationException", "signatureAfterChange": "   public void testIndentInsideCommentBlock () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d27b8d9d8ffbd3529d9067ea274ae3d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 493, "methodNumberAfterChange": 497, "signatureBeforeChange": "    final private boolean jj_3R_268()", "signatureAfterChange": "    final private boolean jj_3R_276()", "diff": ["-  final private boolean jj_3R_268() {", "+  final private boolean jj_3R_276() {", "-    if (jj_3R_98()) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d37cdba237d39d7e25b419065179a7f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testAfterBlockComment4 () throws BadLocationException", "signatureAfterChange": "   public void testAfterBlockComment4 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3ba306838a136bae6de6bfe929a3c1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 770, "methodNumberAfterChange": 769, "signatureBeforeChange": "    final private boolean jj_3R_189()", "signatureAfterChange": "    final private boolean jj_3R_197()", "diff": ["-", "-  final private boolean jj_3R_189() {", "-    if (jj_scan_token(LPAREN)) return true;", "-    if (jj_3R_99()) return true;", "-    if (jj_scan_token(RPAREN)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_197() {", "+    if (jj_scan_token(LPAREN)) return true;", "+    if (jj_3R_100()) return true;", "+    if (jj_scan_token(RPAREN)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3f8dc1505baa490f5dbd34d511edf32", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void testOpenParen () throws BadLocationException", "signatureAfterChange": "   public void testOpenParen () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d40329d59ac9385ad6f79fc478dafab8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public void testSmallFileProblem () throws BadLocationException", "signatureAfterChange": "   public void testSmallFileProblem () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4bb09dce7b111d38d7f8b973d471d38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public Type visit(MethodDeclaration node)", "signatureAfterChange": "   public Class<?> visit(MethodDeclaration node)", "diff": ["-  public Type visit(MethodDeclaration node) {", "+  public Class<?> visit(MethodDeclaration node) {", "-    ", "+", "-    node.setProperty(NodeProperties.IMPORTATION_MANAGER, context.getImportationManager().clone());", "-    ", "+    node.setProperty(NodeProperties.IMPORTATION_MANAGER,", "+                     context.getImportationManager().clone());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d507499e7c21a55c8168989901077cd7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void forwardSearchInteractionsInHistory()", "signatureAfterChange": "   public void forwardSearchInteractionsInHistory()", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5527c09222d11ecbfa73435579cb421", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "      public void testUnboxingCastExpression() throws InterpreterException", "signatureAfterChange": "      public void testUnboxingCastExpression() throws InterpreterException", "diff": ["-    Type type = exp.acceptVisitor(_typeChecker);", "+    Class<?> type = exp.acceptVisitor(_typeChecker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5b101f30f39b7ab85cc0251f2d8f7a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public void testBlockIndent () throws BadLocationException", "signatureAfterChange": "   public void testBlockIndent () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d612e17b52c7eec66ed4fa47719a2008", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "   public Type visit(BitAndAssignExpression node)", "signatureAfterChange": "   public Class<?> visit(BitAndAssignExpression node)", "diff": ["-  public Type visit(BitAndAssignExpression node) {", "+  public Class<?> visit(BitAndAssignExpression node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6fa8d3e280b88fc7332817ea8db8a38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void testShiftLeft() throws InterpreterException", "signatureAfterChange": "   public void testShiftLeft() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: shortValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Short) [(koala.dynamicjava.tree.StringLiteral: \\\"-10\\\" -10 class java.lang.String)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: shortValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Short) [(koala.dynamicjava.tree.StringLiteral: \\\"2\\\" 2 class java.lang.String)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: shortValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Short) [(koala.dynamicjava.tree.StringLiteral: \\\"-10\\\" -10 class java.lang.String)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: shortValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Short) [(koala.dynamicjava.tree.StringLiteral: \\\"2\\\" 2 class java.lang.String)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7462ee6f9a96e542378835b2e6ee48d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public void testTopLevelInterfaceNameBeforeClassName()      throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public void testTopLevelInterfaceNameBeforeClassName()      throws BadLocationException, ClassNameNotFoundException", "diff": ["-    defModel.insertString(0, weird, null);", "+    _defModel.insertString(0, weird, null);", "-                 defModel.getFirstTopLevelClassName());", "+                 _defModel.getFirstTopLevelClassName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7a3b1f4f9809633d1905014d2f64008", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "72163ebd454d71c0955c00c7a1a43c6fa207331b", "commitAfterChange": "cdddd415c8ee9888478b5a253ffbb086fce1ed57", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public synchronized void shutdown()", "signatureAfterChange": "      public synchronized void shutdown()", "diff": ["+      DrJava.consoleOut().println(\"Shutting down...\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7c7d4237106f0fad90f8a35491b3c3d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 612, "methodNumberAfterChange": 616, "signatureBeforeChange": "    final private boolean jj_3R_571()", "signatureAfterChange": "    final private boolean jj_3R_574()", "diff": ["-", "-  final private boolean jj_3R_571() {", "-    if (jj_scan_token(CASE)) return true;", "-    if (jj_3R_99()) return true;", "+", "+  final private boolean jj_3R_574() {", "+    if (jj_scan_token(CASE)) return true;", "+    if (jj_3R_100()) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7fe5c61503583b38aced3acca39bb92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker14.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   protected ObjectMethodCall _unbox(Expression child, Type type)", "signatureAfterChange": "   protected ObjectMethodCall _unbox(Expression child, Class<?> type)", "diff": ["-  protected ObjectMethodCall _unbox(Expression child, Type type) {", "+  protected ObjectMethodCall _unbox(Expression child, Class<?> type) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8769702e8c9a22050aa2943744d81b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b796c376864058d232f1be02ccfb0bd7548b3f89", "commitAfterChange": "ba6275930e25f1b0898c45319a21c16860b3e177", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testInterpretJavaSingleQuotedArgs() throws DocumentAdapterException", "signatureAfterChange": "   public void testInterpretJavaSingleQuotedArgs() throws DocumentAdapterException", "diff": ["-                             \"Foo.main(new String[]{\\\"'asdf'\\\"});\");", "+                             \"Foo.main(new String[]{\\\"asdf\\\"});\");", "-                             \"Foo.main(new String[]{\\\"'a\\\",\\\"b\\\",\\\"c'\\\"});\");", "+                             \"Foo.main(new String[]{\\\"a b c\\\"});\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8e3cc8f1fb41c073be633e39445282a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private boolean _inParenPhrase(int pos) throws BadLocationException", "signatureAfterChange": "   private boolean _inParenPhrase(int pos) throws BadLocationException", "diff": ["-    _doc.acquireReadLock();", "-    try { return _doc._inParenPhrase(pos); }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+      return _doc._inParenPhrase(pos); ", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d93b4d9ab312fef767be675773f7b855", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public boolean replaceCurrent()", "signatureAfterChange": "   public boolean replaceCurrent()", "diff": ["-    _doc.modifyLock();", "+    _doc.acquireWriteLock();", "-    finally { _doc.modifyUnlock(); }", "+    finally { _doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d96fb34ff2622b516332a9f681ca31fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "      public void testDoubleCastExpression() throws InterpreterException", "signatureAfterChange": "      public void testDoubleCastExpression() throws InterpreterException", "diff": ["-    Type type = exp.acceptVisitor(_typeChecker);", "+    Class<?> type = exp.acceptVisitor(_typeChecker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9a8459ce4e3c25e29d4ae08ecf5bbd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/BraceTest.java", "commitBeforeChange": "098be4c27233835145531c86355bc697a3b62bfd", "commitAfterChange": "28db8fb2942dc00cad50f5244fe215d573867721", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testToString()", "signatureAfterChange": "   public void testToString()", "diff": ["-   */", "+  /** Test the toString method. */", "-    assertEquals(\" (\", lparen.toString());", "-    assertEquals(\" )\", rparen.toString());", "+    assertEquals(\"Brace([40])\", lparen.toString());", "+    assertEquals(\"Brace([41])\", rparen.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da5f5e42fc934b0826afd54f183ca3f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testInteractionsCanSeeChangedClass()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testInteractionsCanSeeChangedClass()     throws BadLocationException, IOException", "diff": ["-    final String text_before = \"class Foo { public int m() { return \";", "+    final String text_before = \"class DrJavaTestFoo { public int m() { return \";", "-          interpret(\"new Foo().m()\"));", "+          interpret(\"new DrJavaTestFoo().m()\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db069f63c5a178cf4e08c5ad7fb9325e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 288, "methodNumberAfterChange": 289, "signatureBeforeChange": "    final private boolean jj_3R_417()", "signatureAfterChange": "    final private boolean jj_3R_419()", "diff": ["-  final private boolean jj_3R_417() {", "-    if (jj_3R_98()) return true;", "+", "+  final private boolean jj_3R_419() {", "+    if (jj_scan_token(EXTENDS)) return true;", "+    if (jj_3R_99()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db220fa9f23e44fb176d1976fb006fc8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public void testOpenBracket () throws BadLocationException", "signatureAfterChange": "   public void testOpenBracket () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db9464a90217e4f00bd58ae4ecb8cb76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1c3947ce9682f305287b6afe6b5c5d87597bae6f", "commitAfterChange": "0acb22a1f5b2329a270795e5839a4690952252ed", "methodNumberBeforeChange": 428, "methodNumberAfterChange": 429, "signatureBeforeChange": "   private void _newProject()", "signatureAfterChange": "   private void _newProject()", "diff": ["-      File pf = _saveChooser.getSelectedFile();  // project file", "-      if ((pf==null) || (pf.exists() && !_verifyOverwrite())) { return; }", "+      File projectFile = _saveChooser.getSelectedFile();", "+      if (projectFile == null || (projectFile.exists() && ! _verifyOverwrite())) { return; }", "-      String fileName = pf.getName();", "+      String fileName = projectFile.getName();", "-        if (lastIndex == -1) pf = new File (pf.getAbsolutePath() + \".xml\");", "-        else pf = new File(fileName.substring(0, lastIndex) + \".xml\");", "+        if (lastIndex == -1) projectFile = new File (projectFile.getAbsolutePath() + \".xml\");", "+        else projectFile = new File(fileName.substring(0, lastIndex) + \".xml\");", "-      _model.createNewProject(pf); // sets model to a new FileGroupingState for project file pf", "+      _model.createNewProject(projectFile); // sets model to a new FileGroupingState for project file pf", "-      _currentProjFile = pf;", "+      _setUpProjectButtons(projectFile);", "+      _currentProjFile = projectFile;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbd7f84dd9d9287a6d67cc03845e8830", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public boolean recallNextInteractionInHistory()", "signatureAfterChange": "   public boolean recallNextInteractionInHistory()", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbf7ccd3f3783e41d6c25cd02bac8381", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsScriptModel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public boolean hasNextInteraction()", "signatureAfterChange": "   public boolean hasNextInteraction()", "diff": ["-    _doc.acquireReadLock();", "-    try { return _currentInteraction < _interactions.size() - 1; }  // what if _passedCurrent == true?", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try { ", "+    return _currentInteraction < _interactions.size() - 1; ", "+//    }  // what if _passedCurrent == true?", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc4e0ce96cbb73492ff184c48da61598", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5813bf964cbcf2c61ee22c7a5dc496aee7b09e37", "commitAfterChange": "a068a65da96363415d4ffc6e29a7efc1f9fab2cd", "methodNumberBeforeChange": 533, "methodNumberAfterChange": 533, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _undoAction.putValue(Action.NAME, \"Undo Previous Command\");", "-    _redoAction.putValue(Action.NAME, \"Redo Last Undo\");", "+    _undoAction.putValue(Action.NAME, \"Undo previous command\");", "+    _redoAction.putValue(Action.NAME, \"Redo last undo\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de4984a8a04ff2ba7e01ac02ccaf056c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testInteractionsCanSeeCompile()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testInteractionsCanSeeCompile()     throws BadLocationException, IOException", "diff": ["-    String result = interpret(\"new Foo().getClass().getName()\");", "+    String result = interpret(\"new DrJavaTestFoo().getClass().getName()\");", "-                 \"Foo\",", "+                 \"DrJavaTestFoo\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0202b90e40d00a3a0d44611a952cafb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void testStartBrace () throws BadLocationException", "signatureAfterChange": "   public void testStartBrace () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0700363d8ad88fc68b6662b6dce338b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public void testPackageNameSimple()     throws BadLocationException, InvalidPackageException", "signatureAfterChange": "   public void testPackageNameSimple()     throws BadLocationException, InvalidPackageException", "diff": ["-        defModel.insertString(0,", "+        _defModel.insertString(0,", "-                     defModel.getPackageName());", "+                     _defModel.getPackageName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e144767d18b13700b8d2400ff3fe4377", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void testGetLine6()", "signatureAfterChange": "   public void testGetLine6()", "diff": ["-    defModel.gotoLine(4);", "-    assertEquals(\"#0.0\", 1, defModel.getCurrentLine());", "+    _defModel.gotoLine(4);", "+    assertEquals(\"#0.0\", 1, _defModel.getCurrentLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1bebdec408d5b825df06b1c17ab78f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void insertPrompt()", "signatureAfterChange": "   public void insertPrompt()", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1c7bd3739f05334d6489b5fa012c51d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 554, "methodNumberAfterChange": 550, "signatureBeforeChange": "    final private boolean jj_3R_177()", "signatureAfterChange": "    final private boolean jj_3R_185()", "diff": ["-  final private boolean jj_3R_177() {", "+  final private boolean jj_3R_185() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e23efbf55a689568c2e1c72aa6e7402d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void reverseHistorySearch(String searchString)", "signatureAfterChange": "   public void reverseHistorySearch(String searchString)", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a1e105e2e9b41fdb3617b20844567f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "afda437000b953ac5d61ee69781723d29e664271", "commitAfterChange": "de9a557f090086de80e9723b0612333c5fd32e24", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 250, "signatureBeforeChange": "   private void _newProject()", "signatureAfterChange": "   private void _newProject()", "diff": ["-      File file = _saveChooser.getSelectedFile();  // project file", "-      String fileName = file.getName();", "+      File pf = _saveChooser.getSelectedFile();  // project file", "+      String fileName = pf.getName();", "-        if (lastIndex == -1) file = new File (file.getAbsolutePath() + \".pjt\");", "-        else file = new File(fileName.substring(0, lastIndex) + \".pjt\");", "+        if (lastIndex == -1) pf = new File (pf.getAbsolutePath() + \".pjt\");", "+        else pf = new File(fileName.substring(0, lastIndex) + \".pjt\");", "-      ProjectPropertiesFrame ppf = new ProjectPropertiesFrame(MainFrame.this, file);", "-      _editProject(ppf);    // Uses new project properties frame", "-//      ppf.saveSettings();   // Saves edited profile in global model", "-      ", "-      try { _model.newProject(file); }", "+      _model.createNewProject(pf); // sets model to a new FileGroupingState for project file pf", "+//      ProjectPropertiesFrame ppf = new ProjectPropertiesFrame(MainFrame.this, file);", "+//      ppf.saveSettings();  // Saves new project profile in global model", "+      _editProject();  // edits the properties of the new FileGroupingState", "+      try { _model.configNewProject(); }  // configures the new project in the model", "-      _currentProjFile = file;", "+      _currentProjFile = pf;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4d7bd158d6ff258e74a990fc0473cd8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BrowserHistoryPanel.java", "commitBeforeChange": "fa92455fedb412729f98f82d7ebe32526434dfc9", "commitAfterChange": "901df797e3b0df4a97e4f748f929fa2a582d5380", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public BrowserHistoryPanel(final MainFrame frame)", "signatureAfterChange": "   public BrowserHistoryPanel(final MainFrame frame)", "diff": ["-    final BrowserHistoryManager rm = _model.getBrowserHistoryManager();", "+//    final BrowserHistoryManager rm = _model.getBrowserHistoryManager();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5211a66126ccb1297c16a71e5392fab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setInProgress(boolean inProgress)", "signatureAfterChange": "   public void setInProgress(boolean inProgress)", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    modifyUnlock();", "+    releaseWriteLock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5978e91818f13d9ad9143154e7898ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void testInsideClassWithBraceSets () throws BadLocationException", "signatureAfterChange": "   public void testInsideClassWithBraceSets () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e59deda918ebf5788765999b86817fb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void testTopLevelInterfaceName()     throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public void testTopLevelInterfaceName()     throws BadLocationException, ClassNameNotFoundException", "diff": ["-    defModel.insertString(0, weird, null);", "+    _defModel.insertString(0, weird, null);", "-                 defModel.getFirstTopLevelClassName());", "+                 _defModel.getFirstTopLevelClassName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5d250cf2f663e31669100e17abbe3a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 375, "methodNumberAfterChange": 364, "signatureBeforeChange": "    final private boolean jj_3R_356()", "signatureAfterChange": "    final private boolean jj_3R_359()", "diff": ["+", "+  final private boolean jj_3R_359() {", "+    if (jj_scan_token(DECREMENT)) return true;", "+    if (jj_3R_100()) return true;", "+    return false;", "+  }", "-  final private boolean jj_3R_356() {", "-    if (jj_scan_token(DECREMENT)) return true;", "-    if (jj_3R_99()) return true;", "-    return false;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5d5aa20edff8801849a09a6596534f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void insertBeforeLastPrompt(String text, String style)", "signatureAfterChange": "   public void insertBeforeLastPrompt(String text, String style)", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6605150752c91ad0c415140b3ead771", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/OptionConstants.java", "commitBeforeChange": "ed94b63ef7482abd1a21bfcb32a69a4d09374795", "commitAfterChange": "949983080836c69e17fea8c4cfea4264431dd398", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static Font getDefaultLineNumberFont()", "signatureAfterChange": "     public static Font getDefaultLineNumberFont()", "diff": ["-        return Font.decode(\"Monaco 12\");", "+        return Font.decode(\"Monaco-12\");", "-        return Font.decode(\"Monospaced 12\");", "+        return Font.decode(\"Monospaced-12\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e67494314fc1eaea6a4fd907a3c35028", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void testInsideClassWithBraceSets () throws BadLocationException", "signatureAfterChange": "   public void testInsideClassWithBraceSets () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6bc4213301312f8d73e77e85bf28fe7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsController.java", "commitBeforeChange": "201b599e7e14dfbbe8e927af829c37bc841f5d12", "commitAfterChange": "21fabb90978768abb803c1055129fe3f21f171fa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void _updatePreferences()", "signatureAfterChange": "      private void _updatePreferences()", "diff": ["-        \"Pane to stop responding. Are you sure you want to set this option?\\n\" +", "-        \"(You must reset the Interactions Pane before changes will take effect.)\";", "+        \"View to stop responding. Are you sure you want to set this option?\\n\" +", "+        \"(You must reset the Interactions View before changes will take effect.)\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e737e9d7dac5b00549db1721a2f10bc0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void insertString(int offset, String str, AttributeSet a) throws BadLocationException", "signatureAfterChange": "   public void insertString(int offset, String str, AttributeSet a) throws BadLocationException", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e902f10068d9a62c2ca99ea4745f0818", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/SwingDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void insertString(int offs, String str, AttributeSet set) throws BadLocationException", "signatureAfterChange": "   public void insertString(int offs, String str, AttributeSet set) throws BadLocationException", "diff": ["-    modifyLock();  // locking is used to make the test and modification atomic", "+    acquireWriteLock();  // locking is used to make the test and modification atomic", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e92e486346c2816f7d8a721c2bb13771", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      protected void _styleChanged()", "signatureAfterChange": "      protected void _styleChanged()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec16193ee38d02451e48fa53eee0e080", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/Brace.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void setType(String type)", "signatureAfterChange": "   public void setType(String type)", "diff": ["-    String oldType = braces[_type];", "-    } ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec72baa9fd07103f53e3dd2af336ff2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public void testSmallFileProblem () throws BadLocationException", "signatureAfterChange": "   public void testSmallFileProblem () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed86f58fdbdbf57d5d21715c5184eed4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testIndentInfoBlockComments4 () throws BadLocationException", "signatureAfterChange": "   public void testIndentInfoBlockComments4 () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed9a32e23d73da63aeddc033fe9ebf54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public void testSpaceBrace () throws BadLocationException", "signatureAfterChange": "   public void testSpaceBrace () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ede1f6de1c2c74d85542cb285a9fc6bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public int uncommentLines(int selStart, int selEnd)", "signatureAfterChange": "   public int uncommentLines(int selStart, int selEnd)", "diff": ["-      modifyLock();", "+      acquireWriteLock();", "-      finally { modifyUnlock(); }", "+      finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef323f85d6b05f3ea8d9dcfa40446b44", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TigerTest.java", "commitBeforeChange": "1db9953cef7434ec41dd008a314f29ee92873127", "commitAfterChange": "a13543680d64f9a7022fe7d3fbe6d9f298a83778", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void testInterpretInnerClassConstructorVarArgs()", "signatureAfterChange": "     public void testInterpretInnerClassConstructorVarArgs()", "diff": ["-        \"b.new C(\\\"Str1\\\",\\\"Str2\\\",\\\"Str3\\\").getStr();\\n\";", "+        \"b.new C(\\\"Str1\\\",\\\"Str2\\\",\\\"Str3\\\",\\\"Str4\\\").getStr();\\n\";", "-      assertEquals(\"Str1Str2Str3\", interpret(testString));", "+      assertEquals(\"Str1Str2Str3Str4\", interpret(testString));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efb8f474c37a692576d18989eab6be05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public void testTopLevelClassNameWComments()     throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public void testTopLevelClassNameWComments()     throws BadLocationException, ClassNameNotFoundException", "diff": ["-    defModel.insertString(0, weird, null);", "+    _defModel.insertString(0, weird, null);", "-                 defModel.getFirstTopLevelClassName());", "+                 _defModel.getFirstTopLevelClassName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eff13116483dffd2861cc8a75fcc19e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "      public void clear()", "signatureAfterChange": "      public void clear()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0850b3055a64ca59f3244f7d07ddd89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public void testTabRemovalOnInsertString2() throws BadLocationException", "signatureAfterChange": "   public void testTabRemovalOnInsertString2() throws BadLocationException", "diff": ["-      defModel.insertString(defModel.getLength(), inputs[i], null);", "+      _defModel.insertString(_defModel.getLength(), inputs[i], null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0ce118e178bb2a068e36a79364e866b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsScriptModel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public boolean hasPrevInteraction()", "signatureAfterChange": "   public boolean hasPrevInteraction()", "diff": ["-    _doc.acquireReadLock();", "-    try {", "-      int index = _currentInteraction;", "-      if (_passedCurrent) index++; // We're passed the current, so the previous interaction is the current.", "-      return index > 0;", "-    }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try {", "+    int index = _currentInteraction;", "+    if (_passedCurrent) index++; // We're passed the current, so the previous interaction is the current.", "+    return index > 0;", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ad0794479533606453f9bbeee124fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ReaderWriterLockTest.java", "commitBeforeChange": "efe2cdfa860877c37343dbc5d29e380b33344492", "commitAfterChange": "c46b51159c995a9970485b3c515f743b3910e9fc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testMultipleReaders() throws InterruptedException", "signatureAfterChange": "   public void testMultipleReaders() throws InterruptedException", "diff": ["-    ", "+", "-    ", "+", "-    ", "+", "-    String output = buf.toString();", "-    //System.out.println(output);", "+//    String output = buf.toString();", "+//    System.out.println(output);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1bdcffecb088da04febc076f80922fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/VariableData.java", "commitBeforeChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "commitAfterChange": "e7a6b9c5a51a2cf7b9cfb5a10d90c24a3c7c3844", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public boolean equals(Object obj)", "signatureAfterChange": "   public boolean equals(Object obj)", "diff": ["-//      System.err.println(\"VariableData.equals: enclosingData failure\");", "+      System.err.println(\"VariableData.equals: enclosingData failure\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1c91ceba6df8126a3faadc25aebc7e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public boolean recallPreviousInteractionInHistory()", "signatureAfterChange": "   public boolean recallPreviousInteractionInHistory()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1d1e706410fd1a1e9865b22ae0b4bab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public String getText()", "signatureAfterChange": "   public String getText()", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f21c6e41d787d3a1dbc550fbcc416de9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public void testNextCharIsNewline () throws BadLocationException", "signatureAfterChange": "   public void testNextCharIsNewline () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f25fcbd902e23a2b6847faf4061d6533", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "   public void testLessThan() throws InterpreterException", "signatureAfterChange": "   public void testLessThan() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: longValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Long) [(koala.dynamicjava.tree.IntegerLiteral: 12 12 int)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: longValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Long) [(koala.dynamicjava.tree.IntegerLiteral: 32 32 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: longValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Long) [(koala.dynamicjava.tree.IntegerLiteral: 12 12 int)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: longValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Long) [(koala.dynamicjava.tree.IntegerLiteral: 32 32 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2c257e25842c0f9c60a07ec13c2f8de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   protected void _clearCurrentInputText()", "signatureAfterChange": "   protected void _clearCurrentInputText()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f336c3439b1b4b175b00bcc129254303", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 466, "methodNumberAfterChange": 462, "signatureBeforeChange": "    final private boolean jj_3R_278()", "signatureAfterChange": "    final private boolean jj_3R_329()", "diff": ["-  final private boolean jj_3R_278() {", "+  final private boolean jj_3R_329() {", "-    if (jj_3R_99()) return true;", "+    if (jj_3R_100()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3785fb23038628c882ee8f396ce3a9d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void processKeyEvent(KeyEvent e)", "signatureAfterChange": "   public void processKeyEvent(KeyEvent e)", "diff": ["-          CompoundUndoManager undoMan = _doc.getUndoManager();", "+//          CompoundUndoManager undoMan = _doc.getUndoManager();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3c4e88300e802a7320216c800d89702", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public void testTopLevelInterfaceNameMisleading2()     throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public void testTopLevelInterfaceNameMisleading2()     throws BadLocationException, ClassNameNotFoundException", "diff": ["-    defModel.insertString(0, weird, null);", "+    _defModel.insertString(0, weird, null);", "-                 defModel.getFirstTopLevelClassName());", "+                 _defModel.getFirstTopLevelClassName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3d1c02de0383ce698d61baeeccd9695", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public void testWeird () throws BadLocationException", "signatureAfterChange": "   public void testWeird () throws BadLocationException", "diff": ["-    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f47aa0078eecaadd36d4b2fa148f24ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "      private void _assertBraceInfo(int distance, String braceType)", "signatureAfterChange": "      private void _assertBraceInfo(int distance, String braceType)", "diff": ["-    _doc.acquireReadLock();", "-    try {", "-      BraceInfo info = _doc._getEnclosingBrace();", "-      assertEquals(\"line brace info: brace distance\", distance, info.distance());", "-      assertEquals(\"line brace info: brace type\", braceType, info.braceType());", "-    }", "-    finally { _doc.releaseReadLock(); }", "+//    _doc.acquireReadLock();", "+//    try {", "+    BraceInfo info = _doc._getEnclosingBrace();", "+    assertEquals(\"line brace info: brace distance\", distance, info.distance());", "+    assertEquals(\"line brace info: brace type\", braceType, info.braceType());", "+//    }", "+//    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4d7ef662879e08c7d9148ebf2d3eaae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 44, "signatureBeforeChange": "          public void testGetVar()", "signatureAfterChange": "          public void testGetVar()", "diff": ["-     //lookup a name that should be there", "+     // Lookup a name that should be there", "-     //lookup a name that should not be there", "+     // Lookup a name that should not be there", "+      System.err.println(\"testGetVar finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6f0ffba5f8df4e28aea939b84227d80", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void forceInsertText(int offs, String str, String style) throws EditDocumentException", "signatureAfterChange": "   public void forceInsertText(int offs, String str, String style) throws EditDocumentException", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7288716963fe9da651474c25f740328", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void testBooleanBitwiseOr() throws InterpreterException", "signatureAfterChange": "   public void testBooleanBitwiseOr() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7819bec1225ec9d04b61cf64827a88d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void testModingTwoIntegers() throws InterpreterException", "signatureAfterChange": "   public void testModingTwoIntegers() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "-    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 2 2 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f783cd3a7662775ee15a055cc91aa673", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void removeText(int offs, int len) throws EditDocumentException", "signatureAfterChange": "   public void removeText(int offs, int len) throws EditDocumentException", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f82f224a44b22675ffb757d63da2abe5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "commitAfterChange": "48e03a605d93f79a7fb1f637405a7c3504d97e02", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public void testGetPackageNameWithPackageStatementAfterImport()     throws BadLocationException, InvalidPackageException", "signatureAfterChange": "   public void testGetPackageNameWithPackageStatementAfterImport()     throws BadLocationException, InvalidPackageException", "diff": ["-    defModel.insertString(0, text, null);", "+    _defModel.insertString(0, text, null);", "-                 defModel.getPackageName());", "+                 _defModel.getPackageName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f84f9e4c23d6ebce4b35f24f47011fa0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void append(String str, String style) throws EditDocumentException", "signatureAfterChange": "   public void append(String str, String style) throws EditDocumentException", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb508f0fdf82ba42a4b4634583d94367", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testInsertStarIntoSlashStar() throws BadLocationException", "signatureAfterChange": "   public void testInsertStarIntoSlashStar() throws BadLocationException", "diff": ["-    BraceReduction rm = defModel._reduced;", "+    BraceReduction rm = defModel.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc378a1b508bebec225bbcb474dc012b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "commitAfterChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "methodNumberBeforeChange": 758, "methodNumberAfterChange": 763, "signatureBeforeChange": "    final private boolean jj_3R_187()", "signatureAfterChange": "    final private boolean jj_3R_195()", "diff": ["-  final private boolean jj_3R_187() {", "-    if (jj_scan_token(LBRACKET)) return true;", "-    if (jj_scan_token(RBRACKET)) return true;", "+", "+  final private boolean jj_3R_195() {", "+    if (jj_scan_token(LBRACKET)) return true;", "+    if (jj_3R_99()) return true;", "+    if (jj_scan_token(RBRACKET)) return true;", "+    return false;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc72916b268d1b7abc5d9eda8e9b4076", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void forwardHistorySearch(String searchString)", "signatureAfterChange": "   public void forwardHistorySearch(String searchString)", "diff": ["-    acquireWriteLock();", "+    modifyLock();", "-    finally { releaseWriteLock(); }", "+    finally { modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fef1bc2f6997ce88345a1f55b089f360", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "04e763507593a06a56de16c4b3641de0dbca16f7", "commitAfterChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public void testMotion () throws BadLocationException", "signatureAfterChange": "   public void testMotion () throws BadLocationException", "diff": ["-    BraceReduction rm = doc._reduced;", "+    BraceReduction rm = doc.getReduced();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff75adc5f8e3a39690b20256f21493fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/ConsoleDocument.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void disablePrompt()", "signatureAfterChange": "   public void disablePrompt()", "diff": ["-    modifyLock();", "+    acquireWriteLock();", "-    finally { modifyUnlock(); }", "+    finally { releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffd46bf084d9c90897000a0a5619d390", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testCannotEditBeforePrompt() throws EditDocumentException", "signatureAfterChange": "   public void testCannotEditBeforePrompt() throws EditDocumentException", "diff": ["-    _doc.acquireWriteLock();", "+    _doc.modifyLock();", "-    finally { _doc.releaseWriteLock(); }", "+    finally { _doc.modifyUnlock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffeeb7da185fbe7fb7bf8ef569c45626", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public void interpreterResetting()", "signatureAfterChange": "   public void interpreterResetting()", "diff": ["-      _document.acquireWriteLock();", "+      _document.modifyLock();", "-      finally { _document.releaseWriteLock(); }", "+      finally { _document.modifyUnlock(); }"]}], "num": 1333}