{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea3e37a170793fd75f571835e7a60ca4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70b548b83a629a1afb38ca39f6ce75eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "        public void test_isAssignableFrom()", "signatureAfterChange": "        public void test_isAssignableFrom()", "diff": ["-      assertTrue(\"Should be assignable.\", _btc._isAssignableFrom(SymbolData.DOUBLE_TYPE, symbolTable.get(\"java.lang.Double\")));", "-      assertFalse(\"Should not be assignable.\", _btc._isAssignableFrom(symbolTable.get(\"java.lang.Double\"), SymbolData.FLOAT_TYPE));", "-      assertTrue(\"Should be assignable.\", _btc._isAssignableFrom(SymbolData.DOUBLE_TYPE, symbolTable.get(\"java.lang.Long\")));", "-      assertFalse(\"Should not be assignable.\", _btc._isAssignableFrom(symbolTable.get(\"java.lang.Double\"), SymbolData.INT_TYPE));", "-      assertTrue(\"Should be assignable.\", _btc._isAssignableFrom(SymbolData.DOUBLE_TYPE, symbolTable.get(\"java.lang.Short\")));", "+      assertTrue(\"Should be assignable.\", ", "+                 _btc._isAssignableFrom(SymbolData.DOUBLE_TYPE, symbolTable.get(\"java.lang.Double\")));", "+      assertFalse(\"Should not be assignable.\", ", "+                  _btc._isAssignableFrom(symbolTable.get(\"java.lang.Double\"), SymbolData.FLOAT_TYPE));", "+      assertTrue(\"Should be assignable.\", ", "+                 _btc._isAssignableFrom(SymbolData.DOUBLE_TYPE, symbolTable.get(\"java.lang.Long\")));", "+      assertFalse(\"Should not be assignable.\", ", "+                  _btc._isAssignableFrom(symbolTable.get(\"java.lang.Double\"), SymbolData.INT_TYPE));", "+      assertTrue(\"Should be assignable.\", ", "+                 _btc._isAssignableFrom(SymbolData.DOUBLE_TYPE, symbolTable.get(\"java.lang.Short\")));", "-      SourceInfo si = SourceInfo.NO_INFO;", "+      SourceInfo si = NONE;", "-      assertTrue(\"Should be able to assign an array to Object\", _btc._isAssignableFrom(symbolTable.get(\"java.lang.Object\"), intArray));", "+      assertTrue(\"Should be able to assign an array to Object\", ", "+                 _btc._isAssignableFrom(symbolTable.get(\"java.lang.Object\"), intArray));", "-      assertFalse(\"Should not be able to assign an int[] to a double[]\", _btc._isAssignableFrom(doubleArray, intArray));", "+      assertFalse(\"Should not be able to assign an int[] to a double[]\", ", "+                  _btc._isAssignableFrom(doubleArray, intArray));", "-      assertFalse(\"Should not be able to assign an array of ints to an array of Integers\", _btc._isAssignableFrom(integerArray, intArray));", "-      assertFalse(\"Should not be able to assign an array of Integers to an array of ints\", _btc._isAssignableFrom(intArray, integerArray));", "+      assertFalse(\"Should not be able to assign an array of ints to an array of Integers\", ", "+                  _btc._isAssignableFrom(integerArray, intArray));", "+      assertFalse(\"Should not be able to assign an array of Integers to an array of ints\", ", "+                  _btc._isAssignableFrom(intArray, integerArray));", "-      assertTrue(\"Should be able to assign an array to an interface of java.io.Serializable\", _btc._isAssignableFrom(symbolTable.get(\"java.io.Serializable\"), integerArray));", "+      assertTrue(\"Should be able to assign an array to an interface of java.io.Serializable\", ", "+                 _btc._isAssignableFrom(symbolTable.get(\"java.io.Serializable\"), integerArray));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3256767ad0ee32ff766ef30748500ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "             public void test_isAssignableFrom()", "signatureAfterChange": "             public void test_isAssignableFrom()", "diff": ["-      SourceInfo si = JExprParser.NO_SOURCE_INFO;", "+      SourceInfo si = SourceInfo.NO_INFO;"]}], "num": 9545}