{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ea8a065ea2cd1c98a8d0a6a79cb40ae", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38a30a07fb7dec4561ca76391f51cca3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsParenOrBracketTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testCurly() throws BadLocationException", "signatureAfterChange": "      public void testCurly() throws BadLocationException", "diff": ["-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START is close brace.\", !_rule.applyRule(_doc, 23, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.testApplyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.testApplyRule(_doc, 20, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START is curly brace.\", !_rule.testApplyRule(_doc, 21, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START is close brace.\", !_rule.testApplyRule(_doc, 23, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START's brace is curly brace.\", !_rule.applyRule(_doc, 23, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START is close curly brace.\", !_rule.applyRule(_doc, _text.length() - 1, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.testApplyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.testApplyRule(_doc, 20, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START is curly brace.\", !_rule.testApplyRule(_doc, 21, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is curly brace.\", !_rule.testApplyRule(_doc, 23, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START is close curly brace.\", !_rule.testApplyRule(_doc, _text.length() - 1, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START is open curly brace.\", !_rule.applyRule(_doc, 21, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 24, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START's brace is open curly brace.\", !_rule.applyRule(_doc, _text.length() - 1, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.testApplyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.testApplyRule(_doc, 20, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START is open curly brace.\", !_rule.testApplyRule(_doc, 21, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.testApplyRule(_doc, 24, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is open curly brace.\", !_rule.testApplyRule(_doc, _text.length() - 1, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e363549d088412c47e2a8abaaeba7a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsParenOrBracketTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testCurly() throws BadLocationException", "signatureAfterChange": "      public void testCurly() throws BadLocationException", "diff": ["-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0));", "-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20));", "-      assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21));", "-      assertTrue(\"START is close brace.\", !_rule.applyRule(_doc, 23));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.OTHER));", "+      assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21, Indenter.OTHER));", "+      assertTrue(\"START is close brace.\", !_rule.applyRule(_doc, 23, Indenter.OTHER));", "-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0));", "-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20));", "-      assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21));", "-      assertTrue(\"START's brace is curly brace.\", !_rule.applyRule(_doc, 23));", "-      assertTrue(\"START is close curly brace.\", !_rule.applyRule(_doc, _text.length() - 1));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.OTHER));", "+      assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21, Indenter.OTHER));", "+      assertTrue(\"START's brace is curly brace.\", !_rule.applyRule(_doc, 23, Indenter.OTHER));", "+      assertTrue(\"START is close curly brace.\", !_rule.applyRule(_doc, _text.length() - 1, Indenter.OTHER));", "-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0));", "-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20));", "-      assertTrue(\"START is open curly brace.\", !_rule.applyRule(_doc, 21));", "-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 24));", "-      assertTrue(\"START's brace is open curly brace.\", !_rule.applyRule(_doc, _text.length() - 1)); ", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.OTHER));", "+      assertTrue(\"START is open curly brace.\", !_rule.applyRule(_doc, 21, Indenter.OTHER));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 24, Indenter.OTHER));", "+      assertTrue(\"START's brace is open curly brace.\", !_rule.applyRule(_doc, _text.length() - 1, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93080694b50ea4abbfdc4c8db5ba1737", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsParenOrBracketTest.java", "commitBeforeChange": "5d2701667cf27d44a069ea945e7b8afcad461e22", "commitAfterChange": "0dc9a35e122071847260a9f3f7c5a7bac3c46105", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testCurly() throws BadLocationException", "signatureAfterChange": "      public void testCurly() throws BadLocationException", "diff": ["-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.OTHER));", "-    assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21, Indenter.OTHER));", "-    assertTrue(\"START is close brace.\", !_rule.applyRule(_doc, 23, Indenter.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START is close brace.\", !_rule.applyRule(_doc, 23, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.OTHER));", "-    assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21, Indenter.OTHER));", "-    assertTrue(\"START's brace is curly brace.\", !_rule.applyRule(_doc, 23, Indenter.OTHER));", "-    assertTrue(\"START is close curly brace.\", !_rule.applyRule(_doc, _text.length() - 1, Indenter.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START is curly brace.\", !_rule.applyRule(_doc, 21, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is curly brace.\", !_rule.applyRule(_doc, 23, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START is close curly brace.\", !_rule.applyRule(_doc, _text.length() - 1, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.OTHER));", "-    assertTrue(\"START is open curly brace.\", !_rule.applyRule(_doc, 21, Indenter.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 24, Indenter.OTHER));", "-    assertTrue(\"START's brace is open curly brace.\", !_rule.applyRule(_doc, _text.length() - 1, Indenter.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 20, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START is open curly brace.\", !_rule.applyRule(_doc, 21, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 24, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is open curly brace.\", !_rule.applyRule(_doc, _text.length() - 1, Indenter.IndentReason.OTHER));"]}], "num": 17158}