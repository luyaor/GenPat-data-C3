{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3aee3403c2226645ea712852c084715", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06b8dbfa774a2e2708e4d0d1d5028350", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "8453dc6c4207f1842ab4bcab6f7b87a3005d0d74", "commitAfterChange": "644415ee5b045cc76c72314df29caa18c58fb7dc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private void init(boolean info)", "signatureAfterChange": "   private void init(boolean info)", "diff": ["-    JPanel buttonPanel = new JPanel();", "-    buttonPanel.setLayout(new FlowLayout());", "-    buttonPanel.add(new JLabel(\"Matching strategy:\"));", "-    buttonPanel.add(_strategyBox);", "-    buttonPanel.add(_okButton);", "-    buttonPanel.add(cancelButton);", "-    buttonPanel.setMinimumSize(new Dimension(100,40));", "-", "-", "-    _sharedExtLabel = new JLabel(\"\");", "-    JPanel labelPanel = new JPanel();", "-    _tabCompletesLabel = new JLabel(\"Tab completes: \");", "-    labelPanel.add(_tabCompletesLabel);", "-    labelPanel.add(_sharedExtLabel);", "-", "-    final JPanel topPanel = new JPanel();", "-    topPanel.setLayout(new BorderLayout());", "-    topPanel.add(_textField, BorderLayout.NORTH);", "-    topPanel.add(new JScrollPane(_matchList, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED), BorderLayout.CENTER);", "-    topPanel.add(labelPanel, BorderLayout.SOUTH);", "-    topPanel.setPreferredSize(new Dimension(240, 120));", "-", "+    ", "-    contentPane.add(topPanel, BorderLayout.CENTER);", "-", "-    _infoArea = new JTextArea(\"\");", "+    ", "+    GridBagLayout layout = new GridBagLayout();", "+    contentPane.setLayout(layout);", "+    ", "+    GridBagConstraints c = new GridBagConstraints();", "+    c.anchor = GridBagConstraints.NORTHWEST;", "+    c.weightx = 1.0;", "+    c.weighty = 0.0;", "+    c.gridwidth = GridBagConstraints.REMAINDER; // end row", "+    c.insets.set(2,2,2,2);", "+    ", "+    _infoLabel = new JLabel(\"\");", "-      _infoArea.setDragEnabled(false);", "-      _infoArea.setFocusTraversalKeysEnabled(false);", "-      _infoArea.setEditable(false);", "-      JPanel centerPanel = new JPanel();", "-      centerPanel.setLayout(new BorderLayout());", "-      centerPanel.add(new JLabel(\"Information about current selection:\"), BorderLayout.NORTH);", "-      centerPanel.add(new JScrollPane(_infoArea, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED), BorderLayout.CENTER);", "-      centerPanel.add(buttonPanel, BorderLayout.SOUTH);", "-      centerPanel.setPreferredSize(new Dimension(240, 108));", "-      buttonPanel = centerPanel;", "+      c.fill = GridBagConstraints.NONE;", "+      contentPane.add(_infoLabel, c);", "-    contentPane.add(buttonPanel, BorderLayout.SOUTH);", "+", "+    c.fill = GridBagConstraints.BOTH;", "+    c.weighty = 1.0;", "+    contentPane.add(new JScrollPane(_matchList, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED), c);", "+    ", "+    c.anchor = GridBagConstraints.SOUTHWEST;", "+    c.fill = GridBagConstraints.NONE;", "+    c.weightx = 0.0;", "+    c.weighty = 0.0;", "+    c.gridwidth = 1;", "+    _tabCompletesLabel = new JLabel(\"Tab completes: \");", "+    contentPane.add(_tabCompletesLabel, c);", "+    ", "+    c.fill = GridBagConstraints.HORIZONTAL;", "+    c.weightx = 1.0;", "+    c.gridwidth = GridBagConstraints.REMAINDER;", "+    _sharedExtLabel = new JLabel(\"\");", "+    contentPane.add(_sharedExtLabel, c);", "+    ", "+    contentPane.add(_textField, c);", "+    ", "+    c.anchor = GridBagConstraints.SOUTH;", "+    ", "+    JPanel buttonPanel = new JPanel(new GridBagLayout());", "+    GridBagConstraints bc = new GridBagConstraints();", "+    bc.insets.set(0,2,0,2);", "+    buttonPanel.add(new JLabel(\"Matching strategy:\"), bc);", "+    buttonPanel.add(_strategyBox, bc);", "+    buttonPanel.add(_okButton, bc);", "+    buttonPanel.add(cancelButton, bc);", "+    ", "+    contentPane.add(buttonPanel, c);", "-    int xs = (int)parentDim.getWidth()/4;", "-    int ys = (int)parentDim.getHeight()/5;", "-    setSize(Math.max(xs,350), Math.max(ys, 250));", "+    int xs = (int)parentDim.getWidth()/3;", "+    int ys = (int)parentDim.getHeight()/4;", "+    setSize(Math.max(xs,400), Math.max(ys, 300));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24fafd0e145401d2628b60c7b7c85702", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOpsTest.java", "commitBeforeChange": "2e0841eedc488bc59bd976576cad4ea91d3f46bd", "commitAfterChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": "      public void testReplaceVariables2()", "signatureAfterChange": "      public void testCommandLineToList()", "diff": ["+  public void testCommandLineToList() {", "+    List<String> l = StringOps.commandLineToList(\"a b c\");", "+    // System.err.println(\"l = \"+java.util.Arrays.toString(l.toArray()));", "+    assertEquals(3, l.size());", "+    assertEquals(\"a\", l.get(0));", "+    assertEquals(\"b\", l.get(1));", "+    assertEquals(\"c\", l.get(2));", "+", "+    l = StringOps.commandLineToList(\"a'b c'\");", "+    // System.err.println(\"l = \"+java.util.Arrays.toString(l.toArray()));", "+    assertEquals(1, l.size());", "+    assertEquals(\"a'b c'\", l.get(0));", "+", "+    l = StringOps.commandLineToList(\"a\\\"b c\\\"\");", "+    // System.err.println(\"l = \"+java.util.Arrays.toString(l.toArray()));", "+    assertEquals(1, l.size());", "+    assertEquals(\"a\\\"b c\\\"\", l.get(0));", "+", "+    l = StringOps.commandLineToList(\"a\\\"b 'c'\\\"\");", "+    // System.err.println(\"l = \"+java.util.Arrays.toString(l.toArray()));", "+    assertEquals(1, l.size());", "+    assertEquals(\"a\\\"b 'c'\\\"\", l.get(0));", "+    l = StringOps.commandLineToList(\"a \\\"b c\\\"\");", "+    // System.err.println(\"l = \"+java.util.Arrays.toString(l.toArray()));", "+    assertEquals(2, l.size());", "+    assertEquals(\"a\", l.get(0));", "+    assertEquals(\"\\\"b c\\\"\", l.get(1));", "+    ", "+    l = StringOps.commandLineToList(\"\\u001b\");", "+    // System.err.println(\"l = \"+java.util.Arrays.toString(l.toArray()));", "+    assertEquals(0, l.size());", "+    ", "+    l = StringOps.commandLineToList(\"\\u001b\\u001b\");", "+    // System.err.println(\"l = \"+java.util.Arrays.toString(l.toArray()));", "+    assertEquals(1, l.size());", "+    assertEquals(\"\\u001b\", l.get(0));", "+    ", "+    l = StringOps.commandLineToList(\"\\u001b \");", "+    // System.err.println(\"l = \"+java.util.Arrays.toString(l.toArray()));", "+    assertEquals(1, l.size());", "+    assertEquals(\" \", l.get(0));", "+    ", "+    l = StringOps.commandLineToList(\"a\\u001b b\");", "+    // System.err.println(\"l = \"+java.util.Arrays.toString(l.toArray()));", "+    assertEquals(1, l.size());", "+    assertEquals(\"a b\", l.get(0));", "-  public void testReplaceVariables2() {", "-    Map<String,Properties> props = new TreeMap<String,Properties>();", "-    Properties p1 = new Properties();", "-    p1.setProperty(\"var\", \"foo\");", "-    p1.setProperty(\"xxx\", \"bar\");", "-    props.put(\"1\",p1);", "-    Properties p2 = new Properties();", "-    p2.setProperty(\"yyy\", \"bam\");", "-    p2.setProperty(\"xxx\", \"new\");", "-    props.put(\"2\",p2);", "-    ", "-    assertEquals(\"abcxyz\", StringOps.replaceVariables(\"abcxyz\",props));", "-    assertEquals(\"abcfooxyz\", StringOps.replaceVariables(\"abc${var}xyz\",props));", "-    assertEquals(\"abcbarxyz\", StringOps.replaceVariables(\"abc${xxx}xyz\",props));", "-    assertEquals(\"abc${xxx}xyz\", StringOps.replaceVariables(\"abc\\\\${xxx}xyz\",props));", "-    assertEquals(\"abc\\\\barxyz\", StringOps.replaceVariables(\"abc\\\\\\\\${xxx}xyz\",props));", "-    assertEquals(\"abcbamxyz\", StringOps.replaceVariables(\"abc${yyy}xyz\",props));", "-    assertEquals(\"abcbarbamxyz\", StringOps.replaceVariables(\"abc${xxx}${yyy}xyz\",props));", "-  }"]}], "num": 26467}