{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63a659c6b4a6be7cde49ff34e54ee2de", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10add0ec05c7899824e635c6ee2b4dcb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "   private void _defineVariable(ThreadReference suspendedThreadRef,                                ObjectReference debugInterpreter,                                String name, Value val, Type type)     throws InvalidTypeException, AbsentInformationException, IncompatibleThreadStateException,     ClassNotLoadedException, InvocationException, DebugException", "signatureAfterChange": "   private void _defineVariable(ThreadReference suspendedThreadRef,                                ObjectReference debugInterpreter,                                String name, Value val, Type type)     throws InvalidTypeException, IncompatibleThreadStateException,       ClassNotLoadedException, InvocationException, DebugException", "diff": ["-    throws InvalidTypeException, AbsentInformationException, IncompatibleThreadStateException,", "-    ClassNotLoadedException, InvocationException, DebugException", "+    throws InvalidTypeException, IncompatibleThreadStateException,", "+      ClassNotLoadedException, InvocationException, DebugException", "-        //Added parameterization <Mirror>. ", "+        //Added parameterization <Mirror>.", "-        ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1045e06b996a22d6b7f5f25e1930311", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "    private Value _getValueOfLocalVariable(LocalVariable var, ThreadReference thread)     throws InvalidTypeException, ClassNotLoadedException, AbsentInformationException,     IncompatibleThreadStateException, InvocationException, DebugException", "signatureAfterChange": "    private Value _getValueOfLocalVariable(LocalVariable var, ThreadReference thread)     throws InvalidTypeException, ClassNotLoadedException,       IncompatibleThreadStateException, InvocationException, DebugException", "diff": ["-    throws InvalidTypeException, ClassNotLoadedException, AbsentInformationException,", "-    IncompatibleThreadStateException, InvocationException, DebugException", "+    throws InvalidTypeException, ClassNotLoadedException,", "+      IncompatibleThreadStateException, InvocationException, DebugException", "-    Value v = null;", "-    ", "+", "-        List<Mirror> args = new LinkedList<Mirror>(); //Added parameterization <Mirror>. ", "+        List<Mirror> args = new LinkedList<Mirror>(); //Added parameterization <Mirror>.", "-        v = interpreter.invokeMethod(thread, method2Call, args,", "+        Value v = interpreter.invokeMethod(thread, method2Call, args,", "-        ", "+", "-    ", "+"]}], "num": 8353}