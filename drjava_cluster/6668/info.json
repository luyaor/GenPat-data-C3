{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b1a310676e183e3b1cf109fcc260462", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59682be2d89d18d42bc139d0ce877d33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocumentTest.java", "commitBeforeChange": "3c8d894853a99e6e32b5d7c276413441b9c000ec", "commitAfterChange": "68fac9302e6b2358c3b67dbd6346f2e01189b049", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void helpTestCannotAddNullStyleToList() throws EditDocumentException", "signatureAfterChange": "   public void helpTestCannotAddNullStyleToList() throws EditDocumentException", "diff": ["-    _doc.append(\"5\", InteractionsDocument.NUMBER_RETURN_STYLE);", "-    Utilities.clearEventQueue();", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {_doc.append(\"5\", InteractionsDocument.NUMBER_RETURN_STYLE);}", "+    });", "+//    Utilities.clearEventQueue();", "-    _doc.append(\"6\", null);", "-     Utilities.clearEventQueue();", "+     Utilities.invokeAndWait(new Runnable() {", "+       public void run() { _doc.append(\"6\", null); }", "+     });", "+//     Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0715a5aa78633802dfea13993ab13c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "cbb9f04386fdbcd6c82a6f2a5ae6b635359499fb", "commitAfterChange": "e77b9389e0feb3169a20412f8892f630db108f0e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void _doCompile(List<OpenDefinitionsDocument> docs) throws IOException", "signatureAfterChange": "   private void _doCompile(List<OpenDefinitionsDocument> docs) throws IOException", "diff": ["-    ArrayList<File> filesToCompile = new ArrayList<File>();", "-    ArrayList<File> excludedFiles = new ArrayList<File>();", "-    ArrayList<CompilerError> packageErrors = new ArrayList<CompilerError>();", "+    final ArrayList<File> filesToCompile = new ArrayList<File>();", "+    final ArrayList<File> excludedFiles = new ArrayList<File>();", "+    final ArrayList<CompilerError> packageErrors = new ArrayList<CompilerError>();", "-    _notifier.compileStarted();", "+    Utilities.invokeLater(new Runnable() { public void run() { _notifier.compileStarted(); } });", "-      if (!packageErrors.isEmpty()) { _distributeErrors(packageErrors); }", "+      if (! packageErrors.isEmpty()) { _distributeErrors(packageErrors); }", "-    finally { _notifier.compileEnded(_model.getWorkingDirectory(), excludedFiles); }", "+    finally { ", "+      Utilities.invokeLater(new Runnable() { ", "+        public void run() { _notifier.compileEnded(_model.getWorkingDirectory(), excludedFiles); } });", "+    }"]}], "num": 6668}