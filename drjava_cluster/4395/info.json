{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb6488001eaf0e7555534317fcce71f3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3320318ae4f12a4c0d94220018f16b50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "4276346051c6ab89c146c0041be28826e7dfbe12", "commitAfterChange": "86bed99990f6eb7fff2cb31d595e17b49135df26", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public boolean isClosingAllFiles()", "signatureAfterChange": "   private void _ensureNotActive(List<OpenDefinitionsDocument> docs)", "diff": ["-   */", "-  public boolean isClosingAllFiles() {", "-    return _isClosingAllDocs;", "-  }", "+   */", "+  private void _ensureNotActive(List<OpenDefinitionsDocument> docs) {", "+    if (docs.contains(getActiveDocument())) {", "+      // Find the one that should be the new active document", "+      IDocumentNavigator nav = getDocumentNavigator();", "+      ", "+      INavigatorItem item = getIDocGivenODD(docs.get(docs.size()-1));", "+      INavigatorItem nextActive = nav.getNext(item);", "+      if (!nextActive.equals(item)) {", "+        nav.setActiveDoc(nextActive); ", "+        return;", "+      }", "+      ", "+      item = getIDocGivenODD(docs.get(0));", "+      nextActive = nav.getPrevious(item);", "+      if (!nextActive.equals(item)) { ", "+        nav.setActiveDoc(nextActive);", "+        return;", "+      }", "+      ", "+      throw new RuntimeException(\"No document to set active before closing\");", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62370e2189062b108dfbbdc0eb52f544", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 235, "methodNumberAfterChange": 235, "signatureBeforeChange": "   private void _newProject()", "signatureAfterChange": "   private void _newProject()", "diff": ["-    _closeAll();", "-    _saveProjectAs();", "+//    _closeAll();", "+    ", "+    _saveChooser.setFileFilter(_projectFilter);", "+    int rc = _saveChooser.showSaveDialog(this);", "+    if (rc == JFileChooser.APPROVE_OPTION) {", "+      File file = _saveChooser.getSelectedFile();", "+      String fileName = file.getName();", "+      // ensure that saved file has extesion \".pjt\"", "+      if (! fileName.endsWith(\".pjt\")) {", "+        int lastIndex = fileName.lastIndexOf(\".\");", "+        if (lastIndex == -1) file = new File (file.getAbsolutePath() + \".pjt\");", "+        else file = new File(fileName.substring(0, lastIndex) + \".pjt\");", "+      }", "+      try { _model.newProject(file); }", "+      catch(IOException e) { throw new UnexpectedException(e); }", "+    }"]}], "num": 4395}