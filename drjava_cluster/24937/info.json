{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4294650fbae99d0f284d9c7cf956491e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17573b3744a377bb92a0a1527b5e8f1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/GlobalModelOtherTest.java", "commitBeforeChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "commitAfterChange": "d07989306c43e4045df83ca1211956d5a85a21bd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 20, "signatureBeforeChange": "    public void testGetSourceRootPackageThreeDeepInvalid()     throws BadLocationException, IOException", "signatureAfterChange": "    public void testGetSourceRootPackageThreeDeepInvalid()     throws BadLocationException, IOException", "diff": ["-    assertTrue(baseTempDir.delete());", "-    assertTrue(baseTempDir.mkdir());", "+    baseTempDir.delete();", "+    baseTempDir.mkdir();", "-    assertTrue(subdir.mkdirs());", "+    subdir.mkdirs();", "+", "+    // No events should fire", "+    _model.addListener(new TestListener());", "-    assertTrue(fooFile.delete());", "+    fooFile.delete();", "-      assertTrue(subdir.delete());", "+      subdir.delete();", "-    assertTrue(baseTempDir.delete());", "+    baseTempDir.delete();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6874bf4a3f4b6cff2d173c2cd7269919", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "commitAfterChange": "d07989306c43e4045df83ca1211956d5a85a21bd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 20, "signatureBeforeChange": "    public void testGetSourceRootPackageThreeDeepInvalid()     throws BadLocationException, IOException", "signatureAfterChange": "    public void testGetSourceRootPackageThreeDeepInvalid()     throws BadLocationException, IOException", "diff": ["-    assertTrue(baseTempDir.delete());", "-    assertTrue(baseTempDir.mkdir());", "+    baseTempDir.delete();", "+    baseTempDir.mkdir();", "-    assertTrue(subdir.mkdirs());", "+    subdir.mkdirs();", "+", "+    // No events should fire", "+    _model.addListener(new TestListener());", "-    assertTrue(fooFile.delete());", "+    fooFile.delete();", "-      assertTrue(subdir.delete());", "+      subdir.delete();", "-    assertTrue(baseTempDir.delete());", "+    baseTempDir.delete();"]}], "num": 24937}