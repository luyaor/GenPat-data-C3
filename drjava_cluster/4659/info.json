{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd542b13e933bf44087b090c8c757652", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95330251ce2cfd27eaf5ec9e00af3322", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentFileManager.java", "commitBeforeChange": "ac7a65cf2a4a37583cc735c2ee8126d7409d8c19", "commitAfterChange": "e62ed8297c798946c8d04e911cb118b8a9e10779", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public RecentFileManager(int pos, JMenu fileMenu, MainFrame frame, boolean isProject)", "signatureAfterChange": "   public RecentFileManager(int pos, JMenu fileMenu, RecentFileAction action, VectorOption<File> settingConfigConstant)", "diff": ["-  public RecentFileManager(int pos, JMenu fileMenu, MainFrame frame, boolean isProject) {", "+  public RecentFileManager(int pos, JMenu fileMenu, RecentFileAction action, VectorOption<File> settingConfigConstant) {", "-    _frame = frame;", "+    _recentFileAction = action;", "-    _isProject = isProject;", "+    _settingConfigConstant = settingConfigConstant;", "-    Vector<File> files;", "-    if (! _isProject) files = DrJava.getConfig().getSetting(RECENT_FILES);", "-    else files = DrJava.getConfig().getSetting(RECENT_PROJECTS);", "+    Vector<File> files = DrJava.getConfig().getSetting(_settingConfigConstant);", "-    for (int i = files.size() - 1; i >= 0; i--) { updateOpenFiles(files.get(i)); }", "+    for (int i = files.size() - 1; i >= 0; i--) {", "+      File f = files.get(i);", "+      if (f.exists()) updateOpenFiles(f); ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e64a7bb3a836bad499d3d409e32f7915", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "62a60c4b746d2a0603d2c223e7e3b1d46d413a58", "commitAfterChange": "87398b58408451c65d21071c7d35ec479ae703e4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void evaluateExpression(SEList e, ProjectFileIR pfir) throws IOException", "signatureAfterChange": "   private void evaluateExpression(SEList e, ProjectFileIR pfir, FileListVisitor flv) throws IOException", "diff": ["-  private void evaluateExpression(SEList e, ProjectFileIR pfir) throws IOException {", "+  private void evaluateExpression(SEList e, ProjectFileIR pfir, FileListVisitor flv) throws IOException {", "-      ListVisitor<DocFile> srcFileListVisitor = new ListVisitor<DocFile>(_srcFileBase);", "-      List<DocFile> dfList = exp.getRest().accept(srcFileListVisitor);", "+      List<DocFile> dfList = exp.getRest().accept(new FileListVisitor(_srcFileBase));", "-      List<File> fList = exp.getRest().accept(fileListVisitor);", "+      List<DocFile> fList = exp.getRest().accept(flv);", "-      List<File> fList = exp.getRest().accept(fileListVisitor);", "+      List<DocFile> fList = exp.getRest().accept(flv);", "-      List<DocFile> dfList = exp.getRest().accept(docFileListVisitor);", "+      List<DocFile> dfList = exp.getRest().accept(flv);", "-      List<File> fList = exp.getRest().accept(fileListVisitor);", "+      List<DocFile> fList = exp.getRest().accept(flv);", "-      List<File> fList = exp.getRest().accept(fileListVisitor);", "+      List<DocFile> fList = exp.getRest().accept(flv);", "-      List<File> fList = exp.getRest().accept(fileListVisitor);", "+      List<DocFile> fList = exp.getRest().accept(flv);", "-      List<File> fList = exp.getRest().accept(fileListVisitor);", "+      List<DocFile> fList = exp.getRest().accept(flv);"]}], "num": 4659}