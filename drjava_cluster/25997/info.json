{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8062fe7cd55a6be644d6d2923bddac73", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be59939e8ce53bf85477fa60076b112e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "23d9ee965a83ae57d0fd153ae458f734397b06d0", "commitAfterChange": "f5f77f22511662bd150d8784c3601d3cc97e923a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private TypeContext checkList(Iterable<? extends Node> l)", "signatureAfterChange": "      private TypeContext checkList(Iterable<? extends Node> l)", "diff": ["-    for (Node n : l) {", "-      // TODO: fix the parser so there aren't any Expressions here", "-      if (n instanceof Expression) { n.acceptVisitor(new ExpressionChecker(c, opt)); }", "-      else { c = n.acceptVisitor(new StatementChecker(c, opt)); }", "-    }", "+    for (Node n : l) { c = n.acceptVisitor(new StatementChecker(c, opt)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfc39788fb91a3bbccd212f346af8390", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "811484bb0f3e9c6a234bb593ba7247f59304a444", "commitAfterChange": "d3ca8d30db126f3de1352627e18f51d00a1bf339", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public static boolean isInfinite(Iterable<?> iter)", "signatureAfterChange": "   public static boolean isInfinite(Iterable<?> iter)", "diff": ["-    else if (iter instanceof FilteredIterable<?>) { return ((FilteredIterable<?>) iter).isInfinite(); }"]}], "num": 25997}