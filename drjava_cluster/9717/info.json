{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4e5fb3c51b9944df9a8a77b932a6fb4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c33049cd6f1266bdb23a8a1ccb39f136", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/HashMultiset.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public boolean containsAll(Collection<?> c)", "signatureAfterChange": "      @Override public boolean containsAll(Collection<?> c)", "diff": ["+  ", "+  @Override public boolean containsAll(Collection<?> c) {", "+    for (Object obj : asMultiset(c).asSet()) { if (!contains(c)) { return false; } }", "+    return true;", "+  }", "-  ", "-  public boolean containsAll(Collection<?> c) {", "-    for (Object obj : asMultiset(c).asSet()) { if (!contains(c)) { return false; } }", "-    return true;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9a2169ea5415631bbd54627c0fdae5e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/CollectUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 82, "signatureBeforeChange": "       public Set<T> forNone()", "signatureAfterChange": "   public static boolean containsAny(Collection<?> c, Iterable<?> candidates)", "diff": ["+   */", "+  public static boolean containsAny(Collection<?> c, Iterable<?> candidates) {", "+    for (Object o : candidates) {", "+      if (c.contains(o)) { return true; }", "-      public Set<T> forSome(T val) { return Collections.singleton(val); }", "-      public Set<T> forNone() { return emptySet(); }", "+    return false;"]}], "num": 9717}