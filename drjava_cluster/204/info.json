{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51695f3dfd5043ebad34139f86f85144", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0479939cd65975bbc109933a07ffaad9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/Node.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void setSourceInfo(SourceInfo si)", "signatureAfterChange": "   public void setSourceInfo(SourceInfo si)", "diff": ["+    assert si != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d7eafa0d8c7c2eb93720a95f729ee4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 159, "signatureBeforeChange": "          public void breakpointRemoved(final Breakpoint bp)", "signatureAfterChange": "          public void breakpointRemoved(final Breakpoint bp)", "diff": ["-      highlight.remove();", "+      if (highlight != null) highlight.remove();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d338b06edfe1511f4547c1a0627f0c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/ProcessingDialog.java", "commitBeforeChange": "6207c0d4b83ee23d6d4624c513f270e47c43cc83", "commitAfterChange": "f4c8eb851d98f4da2479f32fb767dac4b3a40e1c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void setVisible(boolean vis)", "signatureAfterChange": "      public void setVisible(boolean vis)", "diff": ["-    Utilities.setPopupLoc(this, _parent);", "+    if (_parent!=null) { Utilities.setPopupLoc(this, _parent); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14878cf1e0d330a7604dae993372d58a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void addEnclosingData(Data enclosingData)", "signatureAfterChange": "   public void addEnclosingData(Data enclosingData)", "diff": ["+    assert enclosingData != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bb3f6056c026c225081b4666dc8fa00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public static File[] getSourceRootSet(List<OpenDefinitionsDocument> defDocs)", "signatureAfterChange": "   public static File[] getSourceRootSet(List<OpenDefinitionsDocument> defDocs)", "diff": ["-", "+        if (root == null) continue;", "-        if (!roots.contains(root)) { roots.add(root); }", "+        if (! roots.contains(root)) { roots.add(root); }", "-        // oh well, invalid package statement for this one", "-        // can't add it to roots", "-      }/*catch(RuntimeException) {", "-       * Adam look here", "-       * }*/", "+        // invalid package statement for this one; suppress adding it to roots", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cf0652dcbda8458c4539415b414dbc2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "e1cae1f7b6aae460aab41e86b032251abb119211", "commitAfterChange": "d1929cdbc61164d9dd0af29defc1992f3c759cb6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected void _remove()", "signatureAfterChange": "   protected void _remove()", "diff": ["+    if (rowCount == 0) return; // removed last region from panel"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2febd010b26992ab84940df864a585b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d5075fa67b6b594107dff56779d9c2d12a9b1794", "commitAfterChange": "cabefbe10a0006c896a724ca9825aff82516c66f", "methodNumberBeforeChange": 268, "methodNumberAfterChange": 268, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["+    ", "+    // _historyListener (declared and initialized above) required by new FindReplacePanel(...)", "+    assert _historyListener != null;", "-        try {", "-          RemoteControlClient.openFile(null);", "-        }", "-        catch(IOException ignored) {", "-          // ignore", "-        }", "+        try { RemoteControlClient.openFile(null); }", "+        catch(IOException ignored) { /* ignore */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34122a215ea77c1b98e5f33b8ecbcec3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AboutDialog.java", "commitBeforeChange": "b4e48852da60211c31b0141438d3f04d6c627263", "commitAfterChange": "4402afa3c67a362593909f349f9fbb816e477bed", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void buildGUI(Container cp)", "signatureAfterChange": "      public void buildGUI(Container cp)", "diff": ["-    addTab(tabs,\"GNU Public License\",createTextScroller(GPL));", "+    if(GPL!=null)", "+      addTab(tabs,\"GNU Public License\",createTextScroller(GPL));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45726000a2b54836c9d3971ef2fcd05c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "45f938e0ac0aa62921f2e8d3dd3a1115a8868aaf", "commitAfterChange": "f1270b4a562e0ecd61507987f82e57d121a23edd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "signatureAfterChange": "     protected void _updateNoErrors(boolean done) throws BadLocationException", "diff": ["-          for (File f: _excludedFiles)  msgBuffer.append(\"  \").append(f).append('\\n'); ", "+          for (File f: _excludedFiles) {", "+            if (f!=null) { msgBuffer.append(\"  \").append(f).append('\\n'); } // do not print files from untitled docs", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b54407d6d06688a9ba951b077157bd2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SymbolData.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 54, "signatureBeforeChange": "   protected SymbolData getInnerClassOrInterfaceHelper(String nameToMatch, int firstIndexOfDot)", "signatureAfterChange": "   protected SymbolData getInnerClassOrInterfaceHelper(String nameToMatch, int firstIndexOfDot)", "diff": ["-    //Next, look through the inner classes/interfaces of this class's super class", "-    //Check accessibility, because if you cannot see the super class's inner class, you can't use it.", "+    // Next, look through the inner classes/interfaces of this class's super class", "+    // Check accessibility, because if you cannot see the super class's inner class, you can't use it.", "-        if (firstIndexOfDot > 0) {", "+        ", "+        if (firstIndexOfDot > 0)", "-        }", "-        else {", "-          outerPiece = newResult;", "-        }", "+        else outerPiece = newResult;", "+        ", "-        else {privateResult = newResult;}", "+        else privateResult = newResult;", "-    //Next, look through the inner classes/interfaces of each of this class's interfaces", "-    //Check accessibility, because if you cannot see the super class's inner class, you can't use it.", "-    for (SymbolData id: _interfaces) {", "-      newResult = id.getInnerClassOrInterfaceHelper(nameToMatch, firstIndexOfDot);", "+    // Next, look through the inner classes/interfaces of each of this class's interfaces", "+    // Check accessibility, because if you cannot see the super class's inner class, you can't use it.", "+    for (SymbolData id: _interfaces) {  // TODO: find out how null is being inserted in _interfaces", "+      if (id == null) {", "+//        System.err.println(\"In SymbolData \" + getName() + \", _interfaces contains a null entry\");", "+//        assert false;", "+        continue;", "+      }", "+       newResult = id.getInnerClassOrInterfaceHelper(nameToMatch, firstIndexOfDot);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5065f0cac7214edb91b3958b62c90641", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/LayeredIcon.java", "commitBeforeChange": "299f7a06b8a48edb5fbfad39f77146da0b8bf04b", "commitAfterChange": "37671eca87df017e5050f261f36dc6955d8b96f5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public LayeredIcon(Icon[] layers, int[] x, int[] y)", "signatureAfterChange": "   public LayeredIcon(Icon[] layers, int[] x, int[] y)", "diff": ["-  private int _h;", "+  private int _h=0;", "-      _w = Math.max(_w, layers[i].getIconWidth() + x[i]);", "-      _h = Math.max(_h, layers[i].getIconHeight() + x[i]);", "+      if (layers[i] != null) {", "+        _w = Math.max(_w, layers[i].getIconWidth() + x[i]);", "+        _h = Math.max(_h, layers[i].getIconHeight() + x[i]);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d20d5a270c946595c47e434ab05bbe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "95fc34f702728d19ab12beabcddae9a69d422c00", "commitAfterChange": "5607cf775ad2ef70ccd49a101fe31fb06f6903bb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void setOuterData(Data outerData)", "signatureAfterChange": "   public void setOuterData(Data outerData)", "diff": ["-    if (outerData == null) return;  // Throwing an exception is another option but why abort this translation?", "+    if (outerData == null) {", "+      assert _outerData == null; // Client code should not try to nullify a defined outerData value", "+      return;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c7487a6d165d2c5ca9482aee086fffd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "8dbb3967ef585255b4d1ff989654250a57b1af90", "commitAfterChange": "b7d4cb04f4bb848380a14b3825abe047db8dc58f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public static JarJDKToolsLibrary makeFromFile(File f, GlobalModel model, JDKDescriptor desc,                                                 List<File> additionalBootClassPath)", "signatureAfterChange": "   public static JarJDKToolsLibrary makeFromFile(File f, GlobalModel model, JDKDescriptor desc,                                                 List<File> additionalBootClassPath)", "diff": ["-        bootClassPath.addAll(additionalBootClassPath);", "+        if (additionalBootClassPath!=null) { bootClassPath.addAll(additionalBootClassPath); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60578607e6be16a76de758a5c7f97715", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 166, "signatureBeforeChange": "   public File[] getSourceRootSet()", "signatureAfterChange": "   public File[] getSourceRootSet()", "diff": ["+//    Utilities.show(\"Getting sourceRootSet for \" + Arrays.toString(docs));", "-        roots.add(root); // Can't create duplicate entries in a HashSet", "+        if (root != null) roots.add(root); // Can't create duplicate entries in a HashSet", "-      catch (InvalidPackageException e) { /* file has invalid package statement; ignore it */ }", "+      catch (InvalidPackageException e) { ", "+//        Utilities.show(\"InvalidPackageException in getSourceRootSet\");", "+      /* file has invalid package statement; ignore it */ ", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a413379fe765e739973516cfbea30cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaTestCase.java", "commitBeforeChange": "64485acb22f7b04ee86b39b46487ccbab2253387", "commitAfterChange": "523677d0df6002dfcfacc873e04ce1802e7033d3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void setUp() throws Exception", "signatureAfterChange": "   protected void setUp() throws Exception", "diff": ["-//    _log.log(\"newName = \" + newName);", "-//    if (newName != null) {", "-//      Utilities.show(\"Setting '\" + newName + \"' as DrJava configuration file\");", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() {", "-        DrJava.setPropertiesFile(newName);  // spawns change updates which should run in event thread", "-//        Utilities.clearEventQueue();", "-        DrJava._initConfig();               // spawns change updates which should run in event thread", "-      }", "-    });", "+", "+    if (newName != null) {  // in deployed code, assertion checking may be turned off", "+      Utilities.invokeAndWait(new Runnable() {", "+        public void run() {", "+          DrJava.setPropertiesFile(newName);  // spawns change updates which should run in event thread", "+//          Utilities.clearEventQueue();", "+          DrJava._initConfig();               // spawns change updates which should run in event thread", "+        }", "+      });", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80d843af4cc441027fbc9abbd4bdcba0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/ProcessingDialog.java", "commitBeforeChange": "6207c0d4b83ee23d6d4624c513f270e47c43cc83", "commitAfterChange": "f4c8eb851d98f4da2479f32fb767dac4b3a40e1c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public ProcessingDialog(Frame parent, String title, String label)", "signatureAfterChange": "      public ProcessingDialog(Frame parent, String title, String label)", "diff": ["-    Utilities.setPopupLoc(this, parent);", "+    if (_parent!=null) { Utilities.setPopupLoc(this, _parent); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82abd7096a96002be3a5eab47af5b3b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPane.java", "commitBeforeChange": "0d5df6cd7df2851aa927f5b2af952c4c284e3a43", "commitAfterChange": "d809f0c0466409ce32ae91b0868974eef6e3d031", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected void paintComponent(Graphics g)", "signatureAfterChange": "   protected void paintComponent(Graphics g)", "diff": ["+    if (g==null) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "848fe8e49b185af0240e4f0bf666bddd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocumentAdapter.java", "commitBeforeChange": "845214cee015da531a565a8d18d37bfa0a76c0d0", "commitAfterChange": "11baa8cf53a286506909ee582997234b834f9358", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public synchronized void addColoring(int start, int end, String style)", "signatureAfterChange": "   public synchronized void addColoring(int start, int end, String style)", "diff": ["-    _stylesList.add(0, new Pair<Pair<Integer,Integer>,String>", "-                    (new Pair<Integer,Integer>(start,end), style));", "+    if(style != null)", "+      _stylesList.add(0, new Pair<Pair<Integer,Integer>,String>", "+                      (new Pair<Integer,Integer>(start,end), style));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "864a1f17f52b691a04075e76da519912", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JDKToolsLibrary.java", "commitBeforeChange": "d6f67da504ad61f8681827b1ed9e34bdf47096b1", "commitAfterChange": "0a854931d2d0d982ce19ec1350fad796e2685223", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      protected JDKToolsLibrary(FullVersion version, JDKDescriptor jdkDescriptor,                             CompilerInterface compiler, Debugger debugger,                             JavadocModel javadoc)", "signatureAfterChange": "      protected JDKToolsLibrary(FullVersion version, JDKDescriptor jdkDescriptor,                             CompilerInterface compiler, Debugger debugger,                             JavadocModel javadoc)", "diff": ["+    assert jdkDescriptor != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8af122d420efb7b4f9e59a74c76ba7cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "e4966eebfccbb573b6679624160fc9ffb723a509", "commitAfterChange": "632cdc2196d6c4bf9f5c64cd463fe20db7ac52b4", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "      public void centerViewOnOffset(int offset)", "signatureAfterChange": "      public void centerViewOnOffset(int offset)", "diff": ["-      int startRectX = (int)startRect.getX();", "-      int startRectY = (int)startRect.getY();", "-      startRect.setLocation(startRectX-(int)(viewWidth/2), ", "-                            startRectY-(int)(viewHeight/2));", "-      Point endPoint = new Point(startRectX+(int)(viewWidth/2), ", "-                                 startRectY+(int)(viewHeight/2 + ", "-                                                  metrics.getHeight()/2));", "+      if (startRect != null) {", "+        int startRectX = (int)startRect.getX();", "+        int startRectY = (int)startRect.getY();", "+        startRect.setLocation(startRectX-(int)(viewWidth/2), ", "+                              startRectY-(int)(viewHeight/2));", "+        Point endPoint = new Point(startRectX+(int)(viewWidth/2), ", "+                                   startRectY+(int)(viewHeight/2 + ", "+                                                    metrics.getHeight()/2));", "+        ", "+        // Add the end rect onto the start rect to make a rectangle", "+        // that encompasses the entire selection", "+        startRect.add(endPoint);     ", "-      // Add the end rect onto the start rect to make a rectangle", "-      // that encompasses the entire selection", "-      startRect.add(endPoint);     ", "-      ", "-      this.scrollRectToVisible(startRect);", "+        this.scrollRectToVisible(startRect);", "+      }", "-      ", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8efebad0b447e68f41dcdb972c0cc524", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "065b1e3954d46e1086ba2f867744163daf14462d", "commitAfterChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 66, "signatureBeforeChange": "          private void getClassFilesHelper(File f, LinkedList<File> acc)", "signatureAfterChange": "          private void getClassFilesHelper(File f, LinkedList<File> acc)", "diff": ["-        for (File kid: fs) { getClassFilesHelper(kid, acc); }", "+        if (fs!=null) { // listFiles may return null if there's an IO error", "+          for (File kid: fs) { getClassFilesHelper(kid, acc); }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "981e1c537d179f4d742880aef2fe89cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 176, "signatureBeforeChange": "   public static <T> T[] asArray(Iterable<? extends T> iter, Class<T> type)", "signatureAfterChange": "   public static <T> T[] asArray(Iterable<? extends T> iter, Class<T> type)", "diff": ["-      for (T t : iter) { result[i] = t; i++; }", "+      for (T t : iter) { result[i] = t; i++; if (i < 0) break; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98edb5643266f928d317ff7a878380d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "065b1e3954d46e1086ba2f867744163daf14462d", "commitAfterChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   private void _javadocAllWorker(File destDirFile, FileSaveSelector saver, String classPath)", "signatureAfterChange": "   private void _javadocAllWorker(File destDirFile, FileSaveSelector saver, String classPath)", "diff": ["-            for (File f: javaFiles) { docUnits.add(f.getAbsolutePath());}", "+            if (javaFiles!=null) { // listFiles may return null if there's an IO error", "+              for (File f: javaFiles) { docUnits.add(f.getAbsolutePath());}", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98f0dcf9064ff949d017114fee9b86a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "commitAfterChange": "32513407e5f8f41a21eb0336c92af1269f67953c", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   private void updateInfo()", "signatureAfterChange": "   private void updateInfo()", "diff": ["+    if (_info==null) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9af457e4993ceb061c523d620ed8121b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "   private void _copyBack(ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,      IncompatibleThreadStateException, AbsentInformationException,      InvocationException, DebugException", "signatureAfterChange": "   private void _copyBack(ThreadReference threadRef)     throws InvalidTypeException, ClassNotLoadedException,      IncompatibleThreadStateException, AbsentInformationException,      InvocationException, DebugException", "diff": ["-      v = _convertToActualType(threadRef, localVar, v);", "+      if (v != null) {", "+        v = _convertToActualType(threadRef, localVar, v);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00a9e37781c6dfbe43144c791679834", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/HTMLFrame.java", "commitBeforeChange": "a263aa0682d7de175236f5838376305731d2a299", "commitAfterChange": "f8733505f202fffe732820ec266645b66b5ecb1b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   private void _displayPage(URL url)", "signatureAfterChange": "   private void _displayPage(URL url)", "diff": ["+    if (url==null) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f346c6cd4a4cabfc4ed255d1d6ee76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "27c256ec9281e0464172656b15ccb73506c1cbc1", "commitAfterChange": "efe2cdfa860877c37343dbc5d29e380b33344492", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 125, "signatureBeforeChange": "   private void _storePositionInfo()", "signatureAfterChange": "   private void _storePositionInfo()", "diff": ["-    config.setSetting(DEBUG_PANEL_HEIGHT, new Integer(_debugPanel.getHeight()));", "+    if (_debugPanel != null) {", "+      config.setSetting(DEBUG_PANEL_HEIGHT, new Integer(_debugPanel.getHeight()));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8ec7de9ce6f7e12c2f170db3057478f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "ec06880aa408b928b2f252538b208a76154d8334", "commitAfterChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private File _getWorkDir()", "signatureAfterChange": "   private File _getWorkDir()", "diff": ["+    assert workDir != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ada2e947950c078229bd309fcdfffd84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "222f5adcb4ec2d8c8823733053796b612dc57603", "commitAfterChange": "77338216372080de4db082805b7e88fd5281f85c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setForeground(Color c)", "signatureAfterChange": "   public void setForeground(Color c)", "diff": ["-    _renderer.setTextNonSelectionColor(c);", "+    if (_renderer != null) _renderer.setTextNonSelectionColor(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c264d60407ec0dffa8ba7e66a8bdcea3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "commitAfterChange": "62776e907e3e6dddd6b4161559ae3b70f27cc2e5", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void remove(int offset, int len) throws BadLocationException", "signatureAfterChange": "   public void remove(int offset, int len) throws BadLocationException", "diff": ["+    if (len == 0) return;", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c94de410be8abb0e15969b3d3df9138b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "68e6d61fd13bb2131c775cb4e81c03ea2f5c0f41", "commitAfterChange": "b432c2a5363ca609f111d7dec3ae5ed814c173ea", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "          public void setForeground(Color c)", "signatureAfterChange": "          public void setForeground(Color c)", "diff": ["-      dtcr.setTextNonSelectionColor(c);", "+      if(dtcr != null)", "+        dtcr.setTextNonSelectionColor(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb7419e27e70d6e5241e700efbc3d97a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "cb297201cc08624c537abfd29974e65bdfd2f397", "commitAfterChange": "50bfced5f15b176d327da5d36d1abdb7b72cc71d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r   \r   private static FullVersion guessVersion(File f)", "signatureAfterChange": "\r   \r   private static FullVersion guessVersion(File f)", "diff": ["-        String v = mf.getMainAttributes().getValue(\"Created-By\");\r", "-        if (v != null) {\r", "-          int space = v.indexOf(' ');\r", "-          if (space >= 0) v = v.substring(0,space);\r", "-          result = JavaVersion.parseFullVersion(parsedVersion = v,vendor,vendor);\r", "+        if (mf != null) {\r", "+          String v = mf.getMainAttributes().getValue(\"Created-By\");\r", "+          if (v != null) {\r", "+            int space = v.indexOf(' ');\r", "+            if (space >= 0) v = v.substring(0,space);\r", "+            result = JavaVersion.parseFullVersion(parsedVersion = v,vendor,vendor);\r", "+          }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4967302225928bc4ddc677c209f741c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9ad31ce5c50424f20d538138cfaace1a45e714b6", "commitAfterChange": "24d1fc2e62558397f7b15dfbae39d44f571b9483", "methodNumberBeforeChange": 453, "methodNumberAfterChange": 453, "signatureBeforeChange": "   private void _repaintLineNums()", "signatureAfterChange": "   private void _repaintLineNums()", "diff": ["-        view.repaint();", "+        if (view != null) {", "+          view.repaint();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0f53265c036d630c7928700cf490252", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/StaticDocumentRegion.java", "commitBeforeChange": "7f94cfd1774dbfb41262aa476756f21c6558cb5e", "commitAfterChange": "b1ebbc03deb7917e9ae8bd939bbb71da323d5ba5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public StaticDocumentRegion(OpenDefinitionsDocument doc, File file, int so, int eo, String s)", "signatureAfterChange": "   public StaticDocumentRegion(OpenDefinitionsDocument doc, File file, int so, int eo, String s)", "diff": ["-  /** Create a new static document region. */", "+  /** Create a new static document region. Precondition: s != null. */", "+    assert s != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0ef98b1954e44c1f0af8346cd1de9e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/NewVersionPopup.java", "commitBeforeChange": "a13a05584468accfcc9e05cefe251344381c3e84", "commitAfterChange": "47a73aef5ec88fa14f915eb27e9f60864b6b8748", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected void downloadAction()", "signatureAfterChange": "   protected void downloadAction()", "diff": ["-      try { br.close(); }", "+      try { if (br!=null) br.close(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f23ae822a4bf8582b111134a45f9ec1b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SymbolData.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 95, "signatureBeforeChange": "   public void setSuperClass(SymbolData superClass)", "signatureAfterChange": "   public void setSuperClass(SymbolData superClass)", "diff": ["-  /**Set the super class to the specified value*/", "+  /** Set the super class to the specified value. */", "+    assert superClass != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3611abe862a2a60bee10e4c8e148142", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "8bc200087783c364b85293d74698e136f9d39e73", "commitAfterChange": "cdc8036e660934a45b263608a1cde80ec1d15c5d", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   private SymbolData _getSymbolData_FromFileSystem(final String qualifiedClassName, SourceInfo si, boolean resolve,                                                    boolean addError)", "signatureAfterChange": "   private SymbolData _getSymbolData_FromFileSystem(final String qualifiedClassName, SourceInfo si, boolean resolve,                                                    boolean addError)", "diff": ["-            LanguageLevelVisitor sdlv = newSDs.get(key);", "-            sdlv.createConstructor(key);  // Deletes (key,sdlv) from _newSDs!", "+            LanguageLevelVisitor sdlv = newSDs.get(key);    // Can return null because of silly side effects!", "+            if (sdlv != null) sdlv.createConstructor(key);  // Null test is a kludge! Deletes (key,sdlv) from _newSDs!"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc12b53695c679ab5295db7980f63581", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 324, "methodNumberAfterChange": 324, "signatureBeforeChange": "   private void _repaintLineNums()", "signatureAfterChange": "   private void _repaintLineNums()", "diff": ["-    JViewport rhvport = front.getRowHeader();", "-", "-    if (rhvport != null) {", "-      Component view = rhvport.getView();", "-      view.repaint();", "+    if (front != null) {", "+      JViewport rhvport = front.getRowHeader();", "+      ", "+      if (rhvport != null) {", "+        Component view = rhvport.getView();", "+        view.repaint();", "+      }"]}], "num": 204}