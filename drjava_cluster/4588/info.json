{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73489d4bb521bf0a37e99fdde6dc34a6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d73b6aea824a0447ea573c93f0f3405", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocument.java", "commitBeforeChange": "d23acb744eb150939f4879adf009d6632073536f", "commitAfterChange": "9d169028680f58d3e3b47cc25c8de1afe15038ec", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprivate int _indentSpecialCases(int tab, int distToPrevNewline) \t\tthrows BadLocationException", "signatureAfterChange": " \tprivate int _indentSpecialCases(int tab, int distToPrevNewline) \t\tthrows BadLocationException", "diff": ["-\t\t\tint i = length - distToPrevNewline;", "-\t\t\twhile (i < length && text.charAt(i) == ' ')", "-\t\t\t\ti++;", "-\t\t\tif(i < length && text.charAt(i) == '}')", "+\t\t\tint k = length - distToPrevNewline;", "+\t\t\twhile (k < length && text.charAt(k) == ' ')", "+\t\t\t\tk++;", "+\t\t\tif(k < length && text.charAt(k) == '}')", "-\t\t\ti = length - distToPrevNewline - 2;", "-\t\t\twhile (i >= 0 && text.charAt(i) == ' ') {", "+\t\t\tint i = length - distToPrevNewline - 2;", "+", "+\t\t\tmove(-distToPrevNewline - 2); //assumed: we are at end of a line.", "+\t\t\tint distanceMoved = distToPrevNewline + 2;", "+\t\t\twhile (i >= 0 && _isCommentedOrSpace(i, text)){", "+\t\t\t\tif (i > 0){ //gaurentees you don't move into document Start.", "+\t\t\t\t\tdistanceMoved++;", "+\t\t\t\t\tmove(-1);", "+\t\t\t\t}", "+\t\t\tmove (distanceMoved); //move the document bac.", "+", "-\t\t\t\twhile (j < length && text.charAt(j) == ' ')", "+\t\t\t\twhile ((j < length) && (text.charAt(j) == ' '))", "-\t\t\t\t", "-\t\t\t\ttab = j + 2;", "+\t\t\t\tif ((k < length) && (text.charAt(k) != '{'))", "+\t\t\t\t\ttab = j + 2;", "+\t\t\t\telse if (k == text.length())", "+\t\t\t\t\ttab = j + 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb92113bd90614a80b0d596a7584fbe3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "d23acb744eb150939f4879adf009d6632073536f", "commitAfterChange": "9d169028680f58d3e3b47cc25c8de1afe15038ec", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprivate int _indentSpecialCases(int tab, int distToPrevNewline) \t\tthrows BadLocationException", "signatureAfterChange": " \tprivate int _indentSpecialCases(int tab, int distToPrevNewline) \t\tthrows BadLocationException", "diff": ["-\t\t\tint i = length - distToPrevNewline;", "-\t\t\twhile (i < length && text.charAt(i) == ' ')", "-\t\t\t\ti++;", "-\t\t\tif(i < length && text.charAt(i) == '}')", "+\t\t\tint k = length - distToPrevNewline;", "+\t\t\twhile (k < length && text.charAt(k) == ' ')", "+\t\t\t\tk++;", "+\t\t\tif(k < length && text.charAt(k) == '}')", "-\t\t\ti = length - distToPrevNewline - 2;", "-\t\t\twhile (i >= 0 && text.charAt(i) == ' ') {", "+\t\t\tint i = length - distToPrevNewline - 2;", "+", "+\t\t\tmove(-distToPrevNewline - 2); //assumed: we are at end of a line.", "+\t\t\tint distanceMoved = distToPrevNewline + 2;", "+\t\t\twhile (i >= 0 && _isCommentedOrSpace(i, text)){", "+\t\t\t\tif (i > 0){ //gaurentees you don't move into document Start.", "+\t\t\t\t\tdistanceMoved++;", "+\t\t\t\t\tmove(-1);", "+\t\t\t\t}", "+\t\t\tmove (distanceMoved); //move the document bac.", "+", "-\t\t\t\twhile (j < length && text.charAt(j) == ' ')", "+\t\t\t\twhile ((j < length) && (text.charAt(j) == ' '))", "-\t\t\t\t", "-\t\t\t\ttab = j + 2;", "+\t\t\t\tif ((k < length) && (text.charAt(k) != '{'))", "+\t\t\t\t\ttab = j + 2;", "+\t\t\t\telse if (k == text.length())", "+\t\t\t\t\ttab = j + 2;"]}], "num": 4588}