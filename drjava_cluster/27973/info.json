{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ab6db31e656e2313fee8aae68d5f68d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38cd6e005322b04ddcccb153253f6969", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/GenericInterfaceDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,                                      String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams)", "signatureAfterChange": "   public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,                                      TypeParameter[] typeParams, SourceInfo si)", "diff": ["-                                     String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams) {", "-    super(flags, name, impl, body, fn, bl, bc, el, ec);", "+                                     TypeParameter[] typeParams, SourceInfo si) {", "+    super(flags, name, impl, body, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a6d5a6ebf81e1e87214eb72283e87c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicConstructorDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicConstructorDeclaration(int flags, String name,                                       List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                       ConstructorCall eci, List<Node> stmts,                                       String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams)", "signatureAfterChange": "   public PolymorphicConstructorDeclaration(int flags, String name,                                            List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                            ConstructorCall eci, List<Node> stmts, TypeParameter[] typeParams,                                            SourceInfo si)", "diff": ["-                                      List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,", "-                                      ConstructorCall eci, List<Node> stmts,", "-                                      String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams) {", "-    super(flags, name, params, excepts, eci, stmts, fn, bl, bc, el, ec);", "+                                           List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,", "+                                           ConstructorCall eci, List<Node> stmts, TypeParameter[] typeParams,", "+                                           SourceInfo si) {", "+    super(flags, name, params, excepts, eci, stmts, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1c7e8fb7fa74cbfd50f24f122f4e9ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/GenericClassDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public GenericClassDeclaration(int flags, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body,                                  String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams)", "signatureAfterChange": "   public GenericClassDeclaration(int flags, String name, ReferenceTypeName ext,                                  List<? extends ReferenceTypeName> impl, List<Node> body,                                  TypeParameter[] typeParams, SourceInfo si)", "diff": ["-  public GenericClassDeclaration(int flags, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body,", "-                                 String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams) {", "-    super(flags, name, ext, impl, body, fn, bl, bc, el, ec);", "+  public GenericClassDeclaration(int flags, String name, ReferenceTypeName ext,", "+                                 List<? extends ReferenceTypeName> impl, List<Node> body,", "+                                 TypeParameter[] typeParams, SourceInfo si) {", "+    super(flags, name, ext, impl, body, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e93bbf192819603cf56def999ec42f16", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicMethodDeclaration.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicMethodDeclaration(int flags, TypeName type, String name,                                       List<FormalParameter> params, List<? extends ReferenceTypeName> excepts, BlockStatement body,                                       String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams)", "signatureAfterChange": "   public PolymorphicMethodDeclaration(int flags, TypeName type, String name,                                       List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                       BlockStatement body, TypeParameter[] typeParams, SourceInfo si)", "diff": ["-                                      List<FormalParameter> params, List<? extends ReferenceTypeName> excepts, BlockStatement body,", "-                                      String fn, int bl, int bc, int el, int ec, TypeParameter[] typeParams) {", "-    super(flags, type, name, params, excepts, body, fn, bl, bc, el, ec);", "-    ", "+                                      List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,", "+                                      BlockStatement body, TypeParameter[] typeParams, SourceInfo si) {", "+    super(flags, type, name, params, excepts, body, si);"]}], "num": 27973}