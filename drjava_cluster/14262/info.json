{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66c39ec3154bb86bafe4790451ca5294", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4593dfab2abb49216ae618813011b966", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelDeleteTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic void testDeleteToCloseBlock2()", "signatureAfterChange": "  \tpublic void testUnmaskBlockCommentedLineComment()", "diff": ["+", "+\tpublic void testUnmaskBlockCommentedLineComment()", "+\t\t{", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertStar();", "+\t\t\tmodel1.insertGap(2);", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertSlash();", "+", "+", "+\t\t\tmodel1.move(-1);", "+\t\t\tassertEquals(\"#0.0\", 5, model1.absOffset());", "+\t\t\tassertEquals(\"#0.1\", \"/\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#0.2\", ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\t", "+\t\t\tmodel1.move(-1);", "+\t\t\tassertEquals(\"#0.0\", 4, model1.absOffset());", "+\t\t\tassertEquals(\"#0.1\", \"/\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#0.2\", ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tassertEquals(\"#0.3\", ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t", "+\t\t\tmodel1.move(-4);", "+\t\t\tassertEquals(\"#2.0\", 0, model1.absOffset());", "+\t\t\tassertEquals(\"#2.1\", \"//\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#2.2\", ReducedToken.FREE,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tassertEquals(\"#2.3\", ReducedToken.FREE,", "+", "+\t\t\tmodel1.move(2);", "+\t\t\tassertEquals(\"#3.0\", 2, model1.absOffset());", "+\t\t\tassertEquals(\"#3.1\", ReducedToken.INSIDE_LINE_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());", "+", "-", "-\tpublic void testDeleteToCloseBlock2()", "-\t\t{", "-\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.insertStar();", "-\t\t\tmodel1.insertGap(2);", "-\t\t\tmodel1.insertStar();", "-\t\t\tmodel1.insertSlash();", "-\t\t\t//  /*__*/#", "-\t\t\tmodel1.move(-2);", "-\t\t\tmodel1.delete(-4);", "-\t\t", "-\t\t\tassertEquals(\"#0.0\", \"*\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#0.1\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tassertEquals(\"#0.2\", \"/\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#0.3\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());", "-\t\t\tassertEquals(\"#0.4\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tassertEquals(\"#0.5\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\tassertEquals(\"#0.6\",0,model1.getBlockOffset());", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91a69b61e9ffce854cec7994a4bb4643", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "1c816952b5b8421dc41f789510e8d7ee742c6828", "commitAfterChange": "5d5ee31a35adeb92d7addaffa7abf0c54d001a85", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   private void _setupFileTypesPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupFileTypesPanel(ConfigPanel panel)", "diff": ["-      addOptionComponent(panel, new LabelComponent(\"<html>Assign DrJava project files with the<br>\"+", "-                                                   \"extension .drjava to DrJava. When double-clicking<br>\"+", "-                                                   \"on a .drjava file, DrJava will open it.</html>\", this, true));", "+      addOptionComponent(panel, new LabelComponent(\"<html>Assign DrJava project files and DrJava extensions<br>\"+", "+                                                   \"(with the extensions .drjava and .djapp) to DrJava.<br>\"+", "+                                                   \"When double-clicking on a .drjava file, DrJava will open it.</html>\", this, true));", "-      addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "+      panel.addComponent(new ButtonComponent(new ActionListener() {", "-          if (!PlatformFactory.ONLY.registerProjectFileExtension()) {", "+          if (PlatformFactory.ONLY.registerDrJavaFileExtensions()) {", "-                                          \"Could not set .drjava file association.\",", "+                                          \"Successfully set .drjava and .djapp file associations.\",", "+                                          \"Success\",", "+                                          JOptionPane.INFORMATION_MESSAGE); ", "+          }", "+          else {", "+            JOptionPane.showMessageDialog(ConfigFrame.this,", "+                                          \"Could not set .drjava and .djapp file associations.\",", "-      }, \"Associate .drjava Files with DrJava\", this, \"This associates .drjava project files with DrJava.\"));", "+      }, \"Associate .drjava and .djapp Files with DrJava\", this, \"This associates .drjava and .djapp files with DrJava.\"));", "-      addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "+      panel.addComponent(new ButtonComponent(new ActionListener() {", "-          if (!PlatformFactory.ONLY.unregisterProjectFileExtension()) {", "+          if (PlatformFactory.ONLY.unregisterDrJavaFileExtensions()) {", "-                                          \"Could not remove .drjava file association.\",", "+                                          \"Successfully removed .drjava and .djapp file associations.\",", "+                                          \"Success\",", "+                                          JOptionPane.INFORMATION_MESSAGE); ", "+          }", "+          else {", "+            JOptionPane.showMessageDialog(ConfigFrame.this,", "+                                          \"Could not remove .drjava and .djapp file associations.\",", "-      }, \"Remove .drjava File Associates\", this, \"This removes the association of .drjava project files with DrJava.\"));", "-      ", "-      addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "-      ", "-      addOptionComponent(panel, new ForcedChoiceOptionComponent(OptionConstants.PROJECT_FILE_EXT_REGISTRATION,", "-                                                                \"<html>Automatically assign .drjava Project Files to DrJava</html>\", this,", "-                                                                \"<html>Selecting 'always' will re-establish the file association every time DrJava<br>\"+", "-                                                                \"started, without asking. Selecting 'ask me' will ask the user at start up<br>\"+", "-                                                                \"if the association has been changed. Selecting 'never' will not assign<br>\"+", "-                                                                \".drjava files to DrJava.\"));", "+      }, \"Remove .drjava and .djapp File Associations\", this, \"This removes the association of .drjava and .djapp files with DrJava.\"));", "-      addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "+      panel.addComponent(new ButtonComponent(new ActionListener() {", "-          if (!PlatformFactory.ONLY.registerJavaFileExtension()) {", "+          if (PlatformFactory.ONLY.registerJavaFileExtension()) {", "+            JOptionPane.showMessageDialog(ConfigFrame.this,", "+                                          \"Successfully set .java file association.\",", "+                                          \"Success\",", "+                                          JOptionPane.INFORMATION_MESSAGE); ", "+          }", "+          else {", "-      addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "+      panel.addComponent(new ButtonComponent(new ActionListener() {", "-          if (!PlatformFactory.ONLY.unregisterJavaFileExtension()) {", "+          if (PlatformFactory.ONLY.unregisterJavaFileExtension()) {", "+            JOptionPane.showMessageDialog(ConfigFrame.this,", "+                                          \"Successfully removed .java file association.\",", "+                                          \"Success\",", "+                                          JOptionPane.INFORMATION_MESSAGE); ", "+          }", "+          else {", "-      }, \"Remove .java File Association\", this, \"This removes the association of .drjava project files with DrJava.\"));", "+      }, \"Remove .java File Association\", this, \"This removes the association of .java project files with DrJava.\"));", "-      addOptionComponent(panel, new ForcedChoiceOptionComponent(OptionConstants.JAVA_FILE_EXT_REGISTRATION,", "-                                                                \"<html>Automatically assign .java Source Files to DrJava</html>\", this,", "-                                                                \"<html>Assign Java source files with the extension .java to DrJava.<br>\"+", "-                                                                \"When double-clicking on a .java file, DrJava will open it.<br><br>\"+", "+      addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "+      addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "+      ", "+      addOptionComponent(panel, new ForcedChoiceOptionComponent(OptionConstants.FILE_EXT_REGISTRATION,", "+                                                                \"<html>Automatically assign .java, .drjava and .djapp Files to DrJava</html>\", this,", "+                                                                \"<html>Assign files with the extensions .java, .drjava and .djapp to DrJava.<br>\"+", "+                                                                \"When double-clicking those files, they will be opened in DrJava.<br><br>\"+", "-                                                                \".drjava files to DrJava.\"));", "+                                                                \".java, .drjava and .djapp files to DrJava.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "facf5b814097119b7226c3b1c8218ec7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelDeleteTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic void testDeleteToCloseBlock2()", "signatureAfterChange": "  \tpublic void testUnmaskBlockCommentedLineComment()", "diff": ["+", "+\tpublic void testUnmaskBlockCommentedLineComment()", "+\t\t{", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertStar();", "+\t\t\tmodel1.insertGap(2);", "+\t\t\tmodel1.insertSlash();", "+\t\t\tmodel1.insertSlash();", "+", "+", "+\t\t\tmodel1.move(-1);", "+\t\t\tassertEquals(\"#0.0\", 5, model1.absOffset());", "+\t\t\tassertEquals(\"#0.1\", \"/\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#0.2\", ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\t", "+\t\t\tmodel1.move(-1);", "+\t\t\tassertEquals(\"#0.0\", 4, model1.absOffset());", "+\t\t\tassertEquals(\"#0.1\", \"/\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#0.2\", ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tassertEquals(\"#0.3\", ReducedToken.INSIDE_BLOCK_COMMENT,", "+\t\t\t", "+\t\t\tmodel1.move(-4);", "+\t\t\tassertEquals(\"#2.0\", 0, model1.absOffset());", "+\t\t\tassertEquals(\"#2.1\", \"//\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#2.2\", ReducedToken.FREE,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tassertEquals(\"#2.3\", ReducedToken.FREE,", "+", "+\t\t\tmodel1.move(2);", "+\t\t\tassertEquals(\"#3.0\", 2, model1.absOffset());", "+\t\t\tassertEquals(\"#3.1\", ReducedToken.INSIDE_LINE_COMMENT,", "+\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());", "+", "-", "-\tpublic void testDeleteToCloseBlock2()", "-\t\t{", "-\t\t\tmodel1.insertSlash();", "-\t\t\tmodel1.insertStar();", "-\t\t\tmodel1.insertGap(2);", "-\t\t\tmodel1.insertStar();", "-\t\t\tmodel1.insertSlash();", "-\t\t\t//  /*__*/#", "-\t\t\tmodel1.move(-2);", "-\t\t\tmodel1.delete(-4);", "-\t\t", "-\t\t\tassertEquals(\"#0.0\", \"*\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#0.1\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tassertEquals(\"#0.2\", \"/\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#0.3\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getStateAtCurrent());", "-\t\t\tassertEquals(\"#0.4\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tassertEquals(\"#0.5\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\tassertEquals(\"#0.6\",0,model1.getBlockOffset());", "-\t\t}"]}], "num": 14262}