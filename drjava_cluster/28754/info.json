{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89626d0e0ae5b7dd80d386bcc6f3852c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9033171941c2f93f09b8f81345f310a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "          public void testCheckDuplicateExceptions()", "signatureAfterChange": "          public void testCheckDuplicateExceptions()", "diff": ["-      BracedBody emptyBody = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]);", "-      Block b = new Block(SourceInfo.NO_INFO, emptyBody);", "+      BracedBody emptyBody = new BracedBody(SourceInfo.NONE, new BodyItemI[0]);", "+      Block b = new Block(SourceInfo.NONE, emptyBody);", "-      NormalTryCatchStatement ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[0]);", "-      TryCatchFinallyStatement tcfs = new TryCatchFinallyStatement(SourceInfo.NO_INFO, b, new CatchBlock[0], b);", "+      NormalTryCatchStatement ntcs = new NormalTryCatchStatement(SourceInfo.NONE, b, new CatchBlock[0]);", "+      TryCatchFinallyStatement tcfs = new TryCatchFinallyStatement(SourceInfo.NONE, b, new CatchBlock[0], b);", "-        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                            new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Exception\", new Type[0]), ", "-                                            new Word(SourceInfo.NO_INFO, \"e\"));", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                            new ClassOrInterfaceType(SourceInfo.NONE, \"java.lang.Exception\", new Type[0]), ", "+                                            new Word(SourceInfo.NONE, \"e\"));", "-        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                            new ClassOrInterfaceType(SourceInfo.NO_INFO, \"RuntimeException\", new Type[0]), ", "-                                            new Word(SourceInfo.NO_INFO, \"e\"));", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                            new ClassOrInterfaceType(SourceInfo.NONE, \"RuntimeException\", new Type[0]), ", "+                                            new Word(SourceInfo.NONE, \"e\"));", "-        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                            new ClassOrInterfaceType(SourceInfo.NO_INFO, \"IOException\", new Type[0]), ", "-                                            new Word(SourceInfo.NO_INFO, \"e\"));", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                            new ClassOrInterfaceType(SourceInfo.NONE, \"IOException\", new Type[0]), ", "+                                            new Word(SourceInfo.NONE, \"e\"));", "-      FormalParameter fp1 = new FormalParameter(SourceInfo.NO_INFO, uvd1, false);", "-      FormalParameter fp2 = new FormalParameter(SourceInfo.NO_INFO, uvd2, false);", "-      FormalParameter fp3 = new FormalParameter(SourceInfo.NO_INFO, uvd3, false);", "+      FormalParameter fp1 = new FormalParameter(SourceInfo.NONE, uvd1, false);", "+      FormalParameter fp2 = new FormalParameter(SourceInfo.NONE, uvd2, false);", "+      FormalParameter fp3 = new FormalParameter(SourceInfo.NONE, uvd3, false);", "-      SymbolData e = llv.getQualifiedSymbolData(\"java.lang.Exception\", SourceInfo.NO_INFO);", "-      SymbolData re = llv.getQualifiedSymbolData(\"java.lang.RuntimeException\", SourceInfo.NO_INFO);", "-      SymbolData ioe = llv.getQualifiedSymbolData(\"java.io.IOException\", SourceInfo.NO_INFO);", "+      SymbolData e = llv.getQualifiedSymbolData(\"java.lang.Exception\", SourceInfo.NONE);", "+      SymbolData re = llv.getQualifiedSymbolData(\"java.lang.RuntimeException\", SourceInfo.NONE);", "+      SymbolData ioe = llv.getQualifiedSymbolData(\"java.io.IOException\", SourceInfo.NONE);", "-      CatchBlock c1 = new CatchBlock(SourceInfo.NO_INFO, fp1, b);", "-      CatchBlock c2 = new CatchBlock(SourceInfo.NO_INFO, fp2, b);", "-      CatchBlock c3 = new CatchBlock(SourceInfo.NO_INFO, fp3, b);", "+      CatchBlock c1 = new CatchBlock(SourceInfo.NONE, fp1, b);", "+      CatchBlock c2 = new CatchBlock(SourceInfo.NONE, fp2, b);", "+      CatchBlock c3 = new CatchBlock(SourceInfo.NONE, fp3, b);", "-      ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[] {c1});", "+      ntcs = new NormalTryCatchStatement(SourceInfo.NONE, b, new CatchBlock[] {c1});", "-      ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[]{c1, c2});", "+      ntcs = new NormalTryCatchStatement(SourceInfo.NONE, b, new CatchBlock[]{c1, c2});", "-      ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[]{c2, c3});", "+      ntcs = new NormalTryCatchStatement(SourceInfo.NONE, b, new CatchBlock[]{c2, c3});", "-      ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[]{c1, c2, c3});", "+      ntcs = new NormalTryCatchStatement(SourceInfo.NONE, b, new CatchBlock[]{c1, c2, c3});", "-      ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[]{c2, c1});", "+      ntcs = new NormalTryCatchStatement(SourceInfo.NONE, b, new CatchBlock[]{c2, c1});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdf51ea3dc3540a83b0155ec4e425b82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "          public void testCheckDuplicateExceptions()", "signatureAfterChange": "          public void testCheckDuplicateExceptions()", "diff": ["-      BracedBody emptyBody = new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]);", "-      Block b = new Block(JExprParser.NO_SOURCE_INFO, emptyBody);", "+      BracedBody emptyBody = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]);", "+      Block b = new Block(SourceInfo.NO_INFO, emptyBody);", "-      NormalTryCatchStatement ntcs = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, b, new CatchBlock[0]);", "-      TryCatchFinallyStatement tcfs = new TryCatchFinallyStatement(JExprParser.NO_SOURCE_INFO, b, new CatchBlock[0], b);", "+      NormalTryCatchStatement ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[0]);", "+      TryCatchFinallyStatement tcfs = new TryCatchFinallyStatement(SourceInfo.NO_INFO, b, new CatchBlock[0], b);", "-      UninitializedVariableDeclarator uvd1 = new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.lang.Exception\", new Type[0]), new Word(JExprParser.NO_SOURCE_INFO, \"e\"));", "-      UninitializedVariableDeclarator uvd2 = new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"RuntimeException\", new Type[0]), new Word(JExprParser.NO_SOURCE_INFO, \"e\"));", "-      UninitializedVariableDeclarator uvd3 = new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"IOException\", new Type[0]), new Word(JExprParser.NO_SOURCE_INFO, \"e\"));", "+      UninitializedVariableDeclarator uvd1 = new UninitializedVariableDeclarator(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Exception\", new Type[0]), new Word(SourceInfo.NO_INFO, \"e\"));", "+      UninitializedVariableDeclarator uvd2 = new UninitializedVariableDeclarator(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"RuntimeException\", new Type[0]), new Word(SourceInfo.NO_INFO, \"e\"));", "+      UninitializedVariableDeclarator uvd3 = new UninitializedVariableDeclarator(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"IOException\", new Type[0]), new Word(SourceInfo.NO_INFO, \"e\"));", "-      FormalParameter fp1 = new FormalParameter(JExprParser.NO_SOURCE_INFO, uvd1, false);", "-      FormalParameter fp2 = new FormalParameter(JExprParser.NO_SOURCE_INFO, uvd2, false);", "-      FormalParameter fp3 = new FormalParameter(JExprParser.NO_SOURCE_INFO, uvd3, false);", "+      FormalParameter fp1 = new FormalParameter(SourceInfo.NO_INFO, uvd1, false);", "+      FormalParameter fp2 = new FormalParameter(SourceInfo.NO_INFO, uvd2, false);", "+      FormalParameter fp3 = new FormalParameter(SourceInfo.NO_INFO, uvd3, false);", "-      SymbolData e = llv.getSymbolData(\"java.lang.Exception\", JExprParser.NO_SOURCE_INFO, true);", "-      SymbolData re = llv.getSymbolData(\"java.lang.RuntimeException\", JExprParser.NO_SOURCE_INFO, true);", "-      SymbolData ioe = llv.getSymbolData(\"java.io.IOException\", JExprParser.NO_SOURCE_INFO, true);", "+      SymbolData e = llv.getSymbolData(\"java.lang.Exception\", SourceInfo.NO_INFO, true);", "+      SymbolData re = llv.getSymbolData(\"java.lang.RuntimeException\", SourceInfo.NO_INFO, true);", "+      SymbolData ioe = llv.getSymbolData(\"java.io.IOException\", SourceInfo.NO_INFO, true);", "-      CatchBlock c1 = new CatchBlock(JExprParser.NO_SOURCE_INFO, fp1, b);", "-      CatchBlock c2 = new CatchBlock(JExprParser.NO_SOURCE_INFO, fp2, b);", "-      CatchBlock c3 = new CatchBlock(JExprParser.NO_SOURCE_INFO, fp3, b);", "+      CatchBlock c1 = new CatchBlock(SourceInfo.NO_INFO, fp1, b);", "+      CatchBlock c2 = new CatchBlock(SourceInfo.NO_INFO, fp2, b);", "+      CatchBlock c3 = new CatchBlock(SourceInfo.NO_INFO, fp3, b);", "-      ntcs = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, b, new CatchBlock[] {c1});", "+      ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[] {c1});", "-      ntcs = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, b, new CatchBlock[]{c1, c2});", "+      ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[]{c1, c2});", "-      ntcs = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, b, new CatchBlock[]{c2, c3});", "+      ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[]{c2, c3});", "-      ntcs = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, b, new CatchBlock[]{c1, c2, c3});", "+      ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[]{c1, c2, c3});", "-      ntcs = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, b, new CatchBlock[]{c2, c1});", "+      ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[]{c2, c1});"]}], "num": 28754}