{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a61d65cc3070f34668ed529564b9b32", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6d23fcdc0ff37012e266fa37e518f3b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "97a825e752ef3da28458a0080f0990b0f0659788", "commitAfterChange": "3f50a00dbfaba534529de5a114a9d7c30612e9a7", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void testBackspace()", "signatureAfterChange": "   public void testBackspace()", "diff": ["-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_PRESSED, (new Date()).getTime(), 0, ", "-                                                 backspaceCode, KeyEvent.CHAR_UNDEFINED));", "-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_RELEASED, (new Date()).getTime(), 0,", "-                                                 backspaceCode, KeyEvent.CHAR_UNDEFINED));", "-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_TYPED, (new Date()).getTime(), 0,", "-                                                 KeyEvent.VK_UNDEFINED, '\\b'));", "+        defPane.processKeyEvent(new KeyEvent(defPane, PRESSED, (new Date()).getTime(), 0, ", "+                                                 backspaceCode, UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, RELEASED, (new Date()).getTime(), 0,", "+                                                 backspaceCode, UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, TYPED, (new Date()).getTime(), 0,", "+                                                 VK_UNDEF, '\\b'));", "+        _frame.validate();", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9ee34c8375c068a96c108ff3761bcbd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "97a825e752ef3da28458a0080f0990b0f0659788", "commitAfterChange": "3f50a00dbfaba534529de5a114a9d7c30612e9a7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testMetaKeyPress() throws BadLocationException", "signatureAfterChange": "   public void testMetaKeyPress() throws BadLocationException", "diff": ["-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "-                                                 InputEvent.META_MASK, KeyEvent.VK_META, KeyEvent.CHAR_UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, PRESSED, (new Date()).getTime(), M_MASK, META, UNDEFINED));", "+        _frame.validate();", "+    Utilities.clearEventQueue();", "-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "-                                                 InputEvent.META_MASK, KeyEvent.VK_W, KeyEvent.CHAR_UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, PRESSED, (new Date()).getTime(), M_MASK, W, UNDEFINED));", "+        _frame.validate();", "-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_TYPED, (new Date()).getTime(),", "-                                                 InputEvent.META_MASK, KeyEvent.VK_UNDEFINED, 'w'));", "-        ", "+        defPane.processKeyEvent(new KeyEvent(defPane, TYPED, (new Date()).getTime(), M_MASK, VK_UNDEF, 'w'));", "+        _frame.validate();", "+    Utilities.clearEventQueue();", "-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "-                                                 InputEvent.META_MASK, KeyEvent.VK_W, KeyEvent.CHAR_UNDEFINED));", "-        ", "+        defPane.processKeyEvent(new KeyEvent(defPane, RELEASED, (new Date()).getTime(), M_MASK, W, UNDEFINED));", "+        _frame.validate();", "-    ", "+    Utilities.clearEventQueue();", "+     ", "-        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "-                                                 0, KeyEvent.VK_META, KeyEvent.CHAR_UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, RELEASED, (new Date()).getTime(), 0, META, UNDEFINED));", "+        _frame.validate();", "+    Utilities.clearEventQueue();"]}], "num": 896}