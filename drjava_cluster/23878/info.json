{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6bf7f3bcf5f624010800f8e2e9854e0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "219c471eef49a253c93817158d0d1e41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionInsideComment.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-  boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason) {", "-", "-    int here = doc.getCurrentLocation();", "-    int distToStart = here - doc.getLineStartPos(here);", "-    doc.resetReducedModelLocation();", "-    ReducedModelState state = doc.stateAtRelLocation(-distToStart);", "-    ", "-    return (state.equals(ReducedModelStates.INSIDE_BLOCK_COMMENT));", "+  boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason) { ", "+    return doc.posInBlockComment(doc.getCurrentLocation()); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88c427c2eac0a1db6e53d9432ea48ebf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorKeyStrokeOptionComponent.java", "commitBeforeChange": "433b13a797196089fe338c13ae74a57a898d3d4c", "commitAfterChange": "dffb568c2302b16a97ba0780ebf9b8a7292012c9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "    Vector<KeyStroke> getKeyStrokes()", "signatureAfterChange": "    Vector<KeyStroke> getKeyStrokes()", "diff": ["-  Vector<KeyStroke> getKeyStrokes() {", "-    Vector<KeyStroke> ret = new Vector<KeyStroke>();", "-    for (int i = 0; i < _ksData.size(); i++){", "-      ret.add((KeyStroke)(_ksData.get(i)[0]));", "-    }", "-    return ret;", "-  }", "+  Vector<KeyStroke> getKeyStrokes() { return new Vector<KeyStroke>(_data); }"]}], "num": 23878}