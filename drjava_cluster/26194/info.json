{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19c7a2057dbf5c532bec461334da8576", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49df72fa0ddd41d2cc9d41f9a32ae3fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "9953c5f787113bb8bfb39d4af2a2ba9a2a873081", "commitAfterChange": "cf43b71b7afba8ecd60ed8b71f23b327139aa802", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public static <R> TaskController<R> computeInProcess(Thunk<? extends R> task, boolean start)", "signatureAfterChange": "   public static <R> TaskController<R> computeInProcess(Thunk<? extends R> task, boolean start)", "diff": ["-    return computeInProcess(task, JVMBuilder.DEFAULT, true);", "+    return computeInProcess(task, JVMBuilder.DEFAULT, start, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d11576fcd40688866d65c9432f88fa5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testInterpretCurrentInteraction() throws DocumentAdapterException", "signatureAfterChange": "   public void testInterpretCurrentInteraction() throws DocumentAdapterException", "diff": ["-      public void interpret(String toEval) {", "+      protected void _interpret(String toEval) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bf6bffd37e7b8b02948395965212481", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "6f65660ac59d60c67824b69ecafc847d84a92da8", "commitAfterChange": "8279bc33117c74621df6401dedd10a0cae247a2c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "          public void start(MasterRemote m)", "signatureAfterChange": "          protected void handleStart(MasterRemote m)", "diff": ["-    public void start(MasterRemote m) {", "+    protected void handleStart(MasterRemote m) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d2305880c399d6c612230d2265d4ea7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 72, "signatureBeforeChange": "      private void _doCopyBack() throws DebugException", "signatureAfterChange": "      protected void _copyVariablesFromInterpreter() throws DebugException", "diff": ["-  private void _doCopyBack() throws DebugException{", "-    try{", "-       /* copy variables values out of interpreter's environment and into the relevant stack frame */", "-       if( printMessages ) System.out.println(\"In _copyBack()\");", "-       _copyBack(_runningThread);", "-       if( printMessages ) System.out.println(\"Out of _copyBack()\");", "-     }", "-     catch(InvalidTypeException exc) {", "-       throw new DebugException(exc.toString());", "-     }    ", "-     catch(AbsentInformationException e2) {", "-       throw new DebugException(e2.toString());", "-     }", "-     catch(IncompatibleThreadStateException e) {", "-       throw new DebugException(e.toString());", "-     }", "-     catch(ClassNotLoadedException e3) {", "-       throw new DebugException(e3.toString());", "-     }", "-     catch(InvocationException e4) {", "-       throw new DebugException(e4.toString());", "-     }", "+  protected void _copyVariablesFromInterpreter() throws DebugException {", "+    try {", "+      // copy variables values out of interpreter's environment and", "+      // into the relevant stack frame", "+      if( printMessages ) System.out.println(\"In _copyBack()\");", "+      _copyBack(_runningThread);", "+      if( printMessages ) System.out.println(\"Out of _copyBack()\");", "+    }", "+    catch(InvalidTypeException exc) {", "+      throw new DebugException(exc.toString());", "+    }    ", "+    catch(AbsentInformationException e2) {", "+      throw new DebugException(e2.toString());", "+    }", "+    catch(IncompatibleThreadStateException e) {", "+      throw new DebugException(e.toString());", "+    }", "+    catch(ClassNotLoadedException e3) {", "+      throw new DebugException(e3.toString());", "+    }", "+    catch(InvocationException e4) {", "+      throw new DebugException(e4.toString());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f4d8f6cde33f7495cfbc73aa71bc937", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/AbstractReducedModel.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected ReducedModelState getStateAtCurrent()", "signatureAfterChange": "   public ReducedModelState getState()", "diff": ["+  /* @return the shadowing state of _cursor; only makes sense for ReducedModelComment. */", "+  public ReducedModelState getState() { return _cursor.getStateAtCurrent(); }", "-   */", "-  protected ReducedModelState getStateAtCurrent() {", "-    return _cursor.getStateAtCurrent();", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8dfd8ddde82faa45301b366e9f13397", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultSingleDisplayModel.java", "commitBeforeChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "commitAfterChange": "6082e28d363f7796f6c9506e0c82e9e5f29262e2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void _setActiveFirstDocument()", "signatureAfterChange": "     public void setActiveFirstDocument()", "diff": ["-    private void _setActiveFirstDocument() {", "+    public void setActiveFirstDocument() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c61572d2366410b34f582d12166b1e54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "   protected abstract void notifyInterpreterReady(File wd);", "signatureAfterChange": "   public abstract void _notifyInterpreterReady(File wd);", "diff": ["-  protected abstract void notifyInterpreterReady(File wd);", "+  public abstract void _notifyInterpreterReady(File wd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f26bb3a42e88ca0a1aed86168fecfa89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "de5d6cb8095b8316a5027b98971107ba8d8608ac", "commitAfterChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private String _getInteractionsText() throws BadLocationException", "signatureAfterChange": "   protected String getInteractionsText() throws BadLocationException", "diff": ["+   */", "+  protected String getInteractionsText() throws BadLocationException {", "+    Document doc = _model.getInteractionsDocument();", "+    return doc.getText(0, doc.getLength());", "+  }", "-   */", "-  private String _getInteractionsText() throws BadLocationException {", "-    Document doc = _model.getInteractionsDocument();", "-    return doc.getText(0, doc.getLength());", "-  }"]}], "num": 26194}