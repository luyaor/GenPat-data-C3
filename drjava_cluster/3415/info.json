{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f168da756c54d4694f9042de8795d531", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b1fdb4d13a4e72b353a88ab01715359", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    _compilerChoiceBox =", "-      new JComboBox(getModel().getCompilerModel().getAvailableCompilers());", "+    final CompilerModel compilerModel = getModel().getCompilerModel();", "+    _compilerChoiceBox = new JComboBox(compilerModel.getAvailableCompilers());", "-    _compilerChoiceBox.setSelectedItem", "-      (getModel().getCompilerModel().getActiveCompiler());", "+    _compilerChoiceBox.setSelectedItem(compilerModel.getActiveCompiler());", "-        CompilerInterface compiler = (CompilerInterface)", "-          _compilerChoiceBox.getSelectedItem();", "-        if (compiler != null) {", "-          getModel().getCompilerModel().setActiveCompiler(compiler);", "-        }", "-        else {", "-          getModel().getCompilerModel()", "-            .setActiveCompiler(NoCompilerAvailable.ONLY);", "-        }", "-        getModel().getCompilerModel().resetCompilerErrors();", "+        CompilerInterface compiler = (CompilerInterface) _compilerChoiceBox.getSelectedItem();", "+        if (compiler == null) compiler = NoCompilerAvailable.ONLY;", "+        compilerModel.setActiveCompiler(compiler);", "+        compilerModel.resetCompilerErrors();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3056d3abcfe7d1c6975b748c664f6914", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "6572078744d5462302a5712b2d3e4dd3c67ea5fb", "commitAfterChange": "123a2bf7d0ed947a362f9d9fd67ccb6733aff62d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public CompilerErrorPanel(DefinitionsPane defPane)", "signatureAfterChange": "   public CompilerErrorPanel(DefinitionsPane defPane, GlobalModel model)", "diff": ["-  public CompilerErrorPanel(DefinitionsPane defPane) {", "-    setLayout(new BorderLayout());", "-        ", "+  public CompilerErrorPanel(DefinitionsPane defPane, GlobalModel model) {", "+    _model = model;", "+", "+    _listener = new DefinitionsCaretListener();", "+    // Limitation: Only compiler choices are those that were available", "+    // at the time this box was created.", "+    // Also: The UI will go out of sync with reality if the active compiler", "+    // is later changed somewhere else. This is because there is no way", "+    // to listen on the active compiler.", "+    _compilerChoiceBox = new JComboBox(_model.getAvailableCompilers());", "+    _compilerChoiceBox.setEditable(false);", "+    _compilerChoiceBox.setSelectedItem(_model.getActiveCompiler());", "+    _compilerChoiceBox.addItemListener(new ItemListener() {", "+      public void itemStateChanged(ItemEvent e) {", "+        _model.setActiveCompiler((CompilerInterface)", "+                                 _compilerChoiceBox.getSelectedItem());", "+      }", "+    });", "+", "+    setLayout(new BorderLayout());", "+", "+    Box uiBox = Box.createVerticalBox();", "+    uiBox.add(new JLabel(\"Compiler\", SwingConstants.CENTER));", "+    uiBox.add(_compilerChoiceBox);", "+    uiBox.add(Box.createVerticalGlue());", "+", "+    add(uiBox, BorderLayout.EAST);", "+  }"]}], "num": 3415}