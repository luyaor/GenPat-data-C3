{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97d5a4ff9ca1e9cc80009a6865f4db77", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8686290559f4c9098de0720a48dd782", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "f858bdc4a8556fa2d602de70e64361813405ec96", "commitAfterChange": "9a6ce0c2dd9939538b22d21a227d64c36bc636d3", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public CompilerInterface getActiveCompiler()", "signatureAfterChange": "   public CompilerInterface getActiveCompiler()", "diff": ["-  public CompilerInterface getActiveCompiler() {", "-    return CompilerRegistry.ONLY.getActiveCompiler();", "-  }", "+  public CompilerInterface getActiveCompiler() { return _active; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3b017d8027e9954b6d75c60cdcc7180", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public TypeData forSimpleAssignmentExpressionOnly(SimpleAssignmentExpression that, TypeData name_result, TypeData value_result)", "signatureAfterChange": "   public TypeData forSimpleAssignmentExpressionOnly(SimpleAssignmentExpression that, TypeData name_result,                                                      TypeData value_result)", "diff": ["-   */", "-  public TypeData forSimpleAssignmentExpressionOnly(SimpleAssignmentExpression that, TypeData name_result, TypeData value_result) {", "+    */", "+  public TypeData forSimpleAssignmentExpressionOnly(SimpleAssignmentExpression that, TypeData name_result, ", "+                                                    TypeData value_result) {", "-        assertInstanceType(value_result, \"You cannot use the type name \" + value_result.getName() + \" on the right hand side of an assignment\", that)) {", "+        assertInstanceType(value_result, \"You cannot use the type name \" + value_result.getName() + ", "+                           \" on the right hand side of an assignment\", that)) {", "-      if (!value_result.getSymbolData().isAssignableTo(name_result.getSymbolData(), LanguageLevelConverter.OPT.javaVersion())) {", "-        _addError(\"You cannot assign something of type \" + value_result.getName() + \" to something of type \" + name_result.getName(), that);", "+      if (! value_result.getSymbolData().isAssignableTo(name_result.getSymbolData(), JAVA_VERSION)) {", "+        _addError(\"You cannot assign something of type \" + value_result.getName() + \" to something of type \" + ", "+                  name_result.getName(), that);"]}], "num": 16002}