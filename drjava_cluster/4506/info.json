{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8c68eeb625a49f595153972ea835979", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e454c9ae8aeae16f6e74ba139664e43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "commitAfterChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private InterpreterJVMRemoteI _accessInterpreterJVM()", "signatureAfterChange": "   public void stopInterpreterJVM()", "diff": ["+   */", "+  public void stopInterpreterJVM() { _state.value().stop(); }", "-  /** If an interpreter has not registered itself, this method will block until one does.*/", "-  private InterpreterJVMRemoteI _accessInterpreterJVM() {", "-    if (!_restart) { return _interpreterJVM.value(); }", "-    else { return _interpreterJVM.attemptEnsureNotState(null, STARTUP_TIMEOUT); }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8164e4dc2b4ed4a5f37010a66322324a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 45, "signatureBeforeChange": "   private InterpreterJVMRemoteI _interpreterJVM()", "signatureAfterChange": "   private InterpreterJVMRemoteI _accessInterpreterJVM()", "diff": ["-  /**Accessor for the remote interface to the Interpreter JVM; _slave is protected field of the supserclass. */", "-  private InterpreterJVMRemoteI _interpreterJVM() { return (InterpreterJVMRemoteI) _slave; }", "+  private InterpreterJVMRemoteI _accessInterpreterJVM() {", "+    if (!_restart) { return _interpreterJVM.value(); }", "+    else { return _interpreterJVM.attemptEnsureNotState(null, STARTUP_TIMEOUT); }", "+  }"]}], "num": 4506}