{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f94f2e9bedcec7242dffe22a96f53111", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2221d42a6d5be92905c5a1bf9c28f049", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "commitAfterChange": "8417ddcfd5dbe91145435687b878857a28a6fc40", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tprivate int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor, int offset)", "signatureAfterChange": " \tprivate int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor, int offset)", "diff": ["-\t\t\t\t\t\t (!(copyCursor.current().getType().equals(\"\\n\") &&", "-\t\t\t\t\t\t\t\tcopyCursor.current().getState() == ReducedToken.FREE))){", "+\t\t\t\t\t\t (!(copyCursor.current().getType().equals(\"\\n\")))){", "+\t\t\t\t\t\t\t\t//\tcopyCursor.current().getState() == ReducedToken.FREE))){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdc48225b2754230c5d94d57b6f19f4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "commitAfterChange": "8417ddcfd5dbe91145435687b878857a28a6fc40", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tprivate int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor, int offset)", "signatureAfterChange": " \tprivate int _getDistToPreviousNewline(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor, int offset)", "diff": ["-\t\t\t\t\t\t (!(copyCursor.current().getType().equals(\"\\n\") &&", "-\t\t\t\t\t\t\t\tcopyCursor.current().getState() == ReducedToken.FREE))){", "+\t\t\t\t\t\t (!(copyCursor.current().getType().equals(\"\\n\")))){", "+\t\t\t\t\t\t\t\t//\tcopyCursor.current().getState() == ReducedToken.FREE))){"]}], "num": 11040}