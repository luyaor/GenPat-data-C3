{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd5eff4d701329d58484c5f2416cb244", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9b7f617068909b2bc03fb3b9d345ac3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private PanelTreeNode _createPanel(String t, PanelTreeNode parent)", "signatureAfterChange": "   private PanelTreeNode _createPanel(String t, PanelTreeNode parent)", "diff": ["-    parent.add(ptNode);", "+    //parent.add(ptNode);", "+    _treeModel.insertNodeInto(ptNode, parent, parent.getChildCount());", "+    ", "+    // Make sure tree node is visible", "+    _tree.expandPath(new TreePath(ptNode.getPath()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5e821681550ee7d4ded202b6efd4301", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-openjdk6/edu/rice/cs/drjava/model/compiler/Javac160OpenJDKCompiler.java", "commitBeforeChange": "8a50a7d4180dfbf8ce4f8b3b2ddf43887adf7c81", "commitAfterChange": "924f4a516342866293ae7a5a3652d82cc6e43c22", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public List<? extends DJError> compile(List<? extends File> files, List<? extends File> classPath,                                                 List<? extends File> sourcePath, File destination,                                                 List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "signatureAfterChange": "   public List<? extends DJError> compile(List<? extends File> files, List<? extends File> classPath,                                                 List<? extends File> sourcePath, File destination,                                                 List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "diff": ["-        errors.add(new DJError(new File(d.getSource().toUri().getPath()), // d.getSource().getName() fails! ", "-                               ((int) d.getLineNumber()) - 1,  // javac starts counting at 1", "-                               ((int) d.getColumnNumber()) - 1, ", "-                               d.getMessage(null),    // null is the locale", "-                               isWarning));", "+        if (d.getSource()!=null) {", "+          errors.add(new DJError(new File(d.getSource().toUri().getPath()), // d.getSource().getName() fails! ", "+                                 ((int) d.getLineNumber()) - 1,  // javac starts counting at 1", "+                                 ((int) d.getColumnNumber()) - 1, ", "+                                 d.getMessage(null),    // null is the locale", "+                                 isWarning));", "+        }", "+        else {", "+          errors.add(new DJError(d.getMessage(null), isWarning));", "+        }"]}], "num": 19897}