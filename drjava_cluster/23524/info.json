{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34af8f7be1bf87076f7e9adf24e14ad5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "235d723d53fc286f28f5d7b6f897e3ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      @Override public TypeContext visit(ExpressionStatement node)", "signatureAfterChange": "      @Override public TypeContext visit(ExpressionStatement node)", "diff": ["-            Node decl = new VariableDeclaration(false, null, name, assign.getRightExpression(), node.getSourceInfo());", "+            Node decl = new VariableDeclaration(ModifierSet.make(), null, name, assign.getRightExpression(),", "+                                                node.getSourceInfo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d683763f4e1c786b476c66b53c45e56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      @Override public TypeContext visit(ExpressionStatement node)", "signatureAfterChange": "      @Override public TypeContext visit(ExpressionStatement node)", "diff": ["-            SourceInfo si = node.getSourceInfo();", "-            Node decl = new VariableDeclaration(false, null, name, assign.getRightExpression(),", "-                                                si.getFilename(), si.getStartLine(), si.getStartColumn(),", "-                                                si.getEndLine(), si.getEndColumn());", "+            Node decl = new VariableDeclaration(false, null, name, assign.getRightExpression(), node.getSourceInfo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b73e8ce342e32a54f095580d4d2884d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "488e3f877c7f7a8647e0d3f7fb5faea712ac20ce", "commitAfterChange": "35470e88ca153d8164d45d018c673900eac06ea2", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "      public static void main(String... args)", "signatureAfterChange": "      public static void main(String... args)", "diff": ["+    argParser.supportOption(\"verbose\");", "+    boolean verbose = parsedArgs.hasOption(\"verbose\");", "-      NodeDiff diff = new NodeDiff();", "-        diff.compare(canonicalName, canonical, e.getKey(), e.getValue());", "+        NodeDiffLog log = new NodeDiffLog(canonicalName, _options.get(canonicalName).typeSystem(),", "+                                          e.getKey(), _options.get(e.getKey()).typeSystem(), verbose);", "+        new NodeDiff(log).compare(canonical, e.getValue());"]}], "num": 23524}