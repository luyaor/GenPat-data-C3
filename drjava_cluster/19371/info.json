{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "152a00db7b3950171469fc1a8c10b28d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13fa09808df4a7c8da6b88beef6080b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public int replaceAll()", "signatureAfterChange": "   public int replaceAll()", "diff": ["+   */", "+  public int replaceAll() { return replaceAll(_searchAllDocuments); }", "-  public int replaceAll() {", "-    if (_searchAllDocuments) {", "-      AbstractDocumentInterface startDoc = _doc;", "-      _searchAllDocuments = false;", "-      // replace all in the first document", "-      int count = _replaceAllInCurrentDoc();", "-      _doc = _docIterator.getNextDocument(_doc);", "-      int n = _docIterator.getDocumentCount();", "-      for (int i=1; i < n; i++) {", "-        // replace all in the rest of the documents", "-        count += _replaceAllInCurrentDoc();", "-        _doc = _docIterator.getNextDocument(_doc);", "-      _searchAllDocuments = true;", "-    else return _replaceAllInCurrentDoc();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a01e8b5f0ab5f59313143dbc33ee1a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "a2b28a9213fa3cc634db7fda88e14ebb0a103974", "commitAfterChange": "56df485f00337d373f1f0b94fc58f7c7b8b714d4", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public int replaceAll()", "signatureAfterChange": "     public int replaceAll()", "diff": ["+    */", "+    public int replaceAll() {", "+        return _state.replaceAll();", "-   */", "-  public int replaceAll() {", "-    if (_searchAllDocuments) {", "-      Document startDoc = _doc;", "-      _searchAllDocuments = false;", "-      int count = _replaceAllInCurrentDoc();", "-      _doc = _docIterator.getNextDocument(_doc);", "-      while (startDoc != _doc) {", "-        count += _replaceAllInCurrentDoc();", "-        _doc = _docIterator.getNextDocument(_doc);", "-      }", "-      _searchAllDocuments = true;", "-      return count;", "-    }", "-    else {", "-      return _replaceAllInCurrentDoc();", "-    }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b87fcba87f2a3c1855861aeca3ca1da6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "8a099b753fcfb83be248d39f70edd5788e8b1222", "commitAfterChange": "4701dc92d8eb3da9b7f829b98cf858de261361f6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void insertString(int offset, String str, AttributeSet a)     throws BadLocationException", "signatureAfterChange": "   public void insertString(int offset, String str, AttributeSet a)     throws BadLocationException", "diff": ["-    throws BadLocationException {", "-      // If _removeTabs is set to true, remove all tabs from str.", "-      // It is a current invariant of the tabification`functionality that", "-      // the document contains no tabs, but we want to allow the user", "-      // to override this functionality.", "-      if (_tabsRemoved) {", "-        str = _removeTabs(str);", "-      }", "-", "-      int locationChange = offset - _currentLocation;", "-      int strLength = str.length();", "-      int prevSize;     //stores the size of the item prev when insert begins.", "-      int reducedOffset;", "-      // adjust location", "-      _reduced.move(locationChange);", "-      // loop over string, inserting characters into reduced model", "-      for (int i = 0; i < str.length(); i++) {", "-        char curChar = str.charAt(i);", "-        _addCharToReducedModel(curChar);", "-      }", "-      _currentLocation = offset + strLength;", "-      super.insertString(offset, str, a);", "-      _modifiedSinceSave = true;", "-      _styleChanged();", "+    throws BadLocationException", "+  {", "+    // If _removeTabs is set to true, remove all tabs from str.", "+    // It is a current invariant of the tabification functionality that", "+    // the document contains no tabs, but we want to allow the user", "+    // to override this functionality.", "+    if (_tabsRemoved) {", "+      str = _removeTabs(str);", "+", "+    _modifiedSinceSave = true;", "+", "+    super.insertString(offset, str, a);", "+  }"]}], "num": 19371}