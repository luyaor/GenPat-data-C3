{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a3a46b02a80276caf22521b7cfc07b1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8144b41d715b01658f53f9d685303b9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/NonNegativeIntegerOptionTest.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testFormat()", "signatureAfterChange": "      public void testFormat()", "diff": ["-    assertEquals(\"33\",  io1.format(new Integer(33)));", "-    assertEquals(\"33\",  io2.format(new Integer(33)));", "-    assertEquals(\"-11\", io1.format(new Integer(-11)));", "-    assertEquals(\"-11\", io2.format(new Integer(-11)));", "+    assertEquals(\"33\",  io1.format(Integer.valueOf(33)));", "+    assertEquals(\"33\",  io2.format(Integer.valueOf(33)));", "+    assertEquals(\"-11\", io1.format(Integer.valueOf(-11)));", "+    assertEquals(\"-11\", io2.format(Integer.valueOf(-11)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5e23cc840a20bf49e1a006a83a63eb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/IntegerOptionTest.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testFormat()", "signatureAfterChange": "      public void testFormat()", "diff": ["-    assertEquals(\"33\",  io1.format(new Integer(33)));", "-    assertEquals(\"33\",  io2.format(new Integer(33)));", "-    assertEquals(\"-11\", io1.format(new Integer(-11)));", "-    assertEquals(\"-11\", io2.format(new Integer(-11)));", "+    assertEquals(\"33\",  io1.format(Integer.valueOf(33)));", "+    assertEquals(\"33\",  io2.format(Integer.valueOf(33)));", "+    assertEquals(\"-11\", io1.format(Integer.valueOf(-11)));", "+    assertEquals(\"-11\", io2.format(Integer.valueOf(-11)));"]}], "num": 12332}