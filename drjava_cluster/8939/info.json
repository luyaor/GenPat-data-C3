{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de647487f8dc494bf1cda581cde15d66", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "101223c617c644387cd549256c66bbe9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "     public Node visit(InterfaceDeclaration node)", "signatureAfterChange": "     public Object visit(InterfaceDeclaration node)", "diff": ["-    public Node visit(InterfaceDeclaration node) {", "-      LinkedList<Node> members = new LinkedList<Node>(); // Add parameterization <Node>.", "-      Iterator<Node> it = node.getMembers().iterator();", "+    public Object visit(InterfaceDeclaration node) {", "+      LinkedList members = new LinkedList(); // Add parameterization <Node>.", "+      Iterator it = node.getMembers().iterator();", "-        members.add(it.next().acceptVisitor(this));", "+        members.add((Node)((Node)it.next()).acceptVisitor(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7be7609fe9b82fad70334232363a0cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "     public Node visit(ClassDeclaration node)", "signatureAfterChange": "     public Object visit(ClassDeclaration node)", "diff": ["-    public Node visit(ClassDeclaration node) {", "-      LinkedList<Node> members = new LinkedList<Node>(); // Add parameterization <Node>.", "-      Iterator<Node> it = node.getMembers().iterator();", "+    public Object visit(ClassDeclaration node) {", "+      LinkedList members = new LinkedList(); // Add parameterization <Node>.", "+      Iterator it = node.getMembers().iterator();", "-        members.add(it.next().acceptVisitor(this));", "+        members.add((Node)((Node)it.next()).acceptVisitor(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4b74364440e816edfbd1f7fa85b73a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "     public Node visit(BlockStatement node)", "signatureAfterChange": "     public Object visit(BlockStatement node)", "diff": ["-    public Node visit(BlockStatement node) {", "-      LinkedList<Node> statements = new LinkedList<Node>(); // Add parameterization <Node>.", "-      Iterator<Node> it = node.getStatements().iterator();", "+    public Object visit(BlockStatement node) {", "+      LinkedList statements = new LinkedList(); // Add parameterization <Node>.", "+      Iterator it = node.getStatements().iterator();", "-        statements.add(it.next().acceptVisitor(this));", "+        statements.add((Node)((Node)it.next()).acceptVisitor(this));"]}], "num": 8939}