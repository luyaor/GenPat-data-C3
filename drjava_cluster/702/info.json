{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a584736abdb59d3208701ca300500c79", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ec81bcbf3b1ae8f24613192de88ee23", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 200, "methodNumberAfterChange": 205, "signatureBeforeChange": "   public void openFolder(DirectoryChooser chooser)", "signatureAfterChange": "   public void openFolder(DirectoryChooser chooser)", "diff": ["-    String type = \"'\"+DrJava.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)] + \"' \";", "+    String type = \"'\" + DrJava.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)] + \"' \";", "-    DrJava.getConfig().setSetting(OptionConstants.OPEN_FOLDER_RECURSIVE, Boolean.valueOf(_openRecursiveCheckBox.isSelected()));", "-    ", "-    if (dir == null) return; // just in case", "-    ", "-    openFilesInFolder(dir, _openRecursiveCheckBox.isSelected());", "+    boolean rec = _openRecursiveCheckBox.isSelected();", "+    DrJava.getConfig().setSetting(OptionConstants.OPEN_FOLDER_RECURSIVE, Boolean.valueOf(rec));", "+    _openFolder(dir, rec);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6dd89e47cd0192465bd16edd16edb59", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/LanguageLevelStackTraceMapper.java", "commitBeforeChange": "cc814c34f96bfde67f8ae465727b510fa3ed34c9", "commitAfterChange": "8cb3141a044af3c7f18d018980f5a22b0b342ea8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public StackTraceElement replaceStackTraceElement(StackTraceElement s,                                                     File d)", "signatureAfterChange": "   public StackTraceElement replaceStackTraceElement(StackTraceElement s, File d)", "diff": ["-  public StackTraceElement replaceStackTraceElement(StackTraceElement s,", "-                                                    File d) {", "+  public StackTraceElement replaceStackTraceElement(StackTraceElement s, File d) {", "+      ", "+// If the file name in s matches d, check if n already exists in the cache.", "+// If it does, call the above replaceStackTraceElement with the cached TreeMap", "+// Otherwise load the TreeMap from the *.java file, store it in the cache, and then", "+// call the above replaceStackTraceElement.", "+// If the file name does not match, just return s", "+    ", "-    cache.put(fileName, readLLLineBlock(javaFile));  ", "+    TreeMap<Integer, Integer> djToJavaMap = readLLLineBlock(javaFile);", "-    return replaceStackTraceElement(s,d,cache.get(fileName));", "+    cache.put(fileName, djToJavaMap);  ", "-    ", "+    return replaceStackTraceElement(s, d, djToJavaMap);"]}], "num": 702}