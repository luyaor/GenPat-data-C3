{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d4764ed23fb746534ff1bc90bd0d3d2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b052fc213210a65f0dd7e666b331544", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/StaticMethodCall.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public StaticMethodCall(TypeName typ, String mn, List<? extends Expression> args,                           SourceInfo si)", "signatureAfterChange": "   public StaticMethodCall(TypeName typ, String mn, List<? extends Expression> args, SourceInfo si)", "diff": ["-  public StaticMethodCall(TypeName typ, String mn, List<? extends Expression> args,", "-                          SourceInfo si) {", "-    super(mn, args, si);", "-", "-    if (typ == null) throw new IllegalArgumentException(\"typ == null\");", "-", "-    methodType = typ;", "+  public StaticMethodCall(TypeName typ, String mn, List<? extends Expression> args, SourceInfo si) {", "+    this(typ, Option.<List<TypeName>>none(), mn, args, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "519a8620150e589c982d2d8cae345983", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SuperMethodCall.java", "commitBeforeChange": "128dfa585f73f276b6d45e70cb656b74c7a3ac52", "commitAfterChange": "75d6ee48e583e9a62b38304dae2bad1322e37e97", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public SuperMethodCall(String mn, List<? extends Expression> args,                          SourceInfo si)", "signatureAfterChange": "      public SuperMethodCall(Option<String> cn, String mn, List<? extends Expression> args, SourceInfo si)", "diff": ["+  ", "+  public SuperMethodCall(Option<String> cn, String mn, List<? extends Expression> args, SourceInfo si) {", "+    super(mn, args, si);", "+    if (cn == null) throw new IllegalArgumentException(\"cn == null\");", "+    className = cn;", "+  }", "-  public SuperMethodCall(String mn, List<? extends Expression> args,", "-                         SourceInfo si) {", "-    super(mn, args, si);"]}], "num": 6691}