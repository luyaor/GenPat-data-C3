{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bded155841a6b75fe2b414476dab6160", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bbc004b02e42fba5ed0917620dd0795", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelConverter.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "signatureAfterChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "diff": ["-        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(JExprParser.NO_SOURCE_INFO)));", "+        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(SourceInfo.NO_INFO)));", "-        if (llv.symbolTable.get(\"java.lang.Integer\") == null) {llv.getSymbolData(\"java.lang.Integer\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Double\")==null) {llv.getSymbolData(\"java.lang.Double\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Character\")==null) {llv.getSymbolData(\"java.lang.Character\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Boolean\")==null) {llv.getSymbolData(\"java.lang.Boolean\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Long\")==null) {llv.getSymbolData(\"java.lang.Long\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Byte\")==null) {llv.getSymbolData(\"java.lang.Byte\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Short\")==null) {llv.getSymbolData(\"java.lang.Short\", JExprParser.NO_SOURCE_INFO);}", "-        if (llv.symbolTable.get(\"java.lang.Float\")==null) {llv.getSymbolData(\"java.lang.Float\", JExprParser.NO_SOURCE_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Integer\") == null) {llv.getSymbolData(\"java.lang.Integer\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Double\")==null) {llv.getSymbolData(\"java.lang.Double\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Character\")==null) {llv.getSymbolData(\"java.lang.Character\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Boolean\")==null) {llv.getSymbolData(\"java.lang.Boolean\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Long\")==null) {llv.getSymbolData(\"java.lang.Long\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Byte\")==null) {llv.getSymbolData(\"java.lang.Byte\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Short\")==null) {llv.getSymbolData(\"java.lang.Short\", SourceInfo.NO_INFO);}", "+        if (llv.symbolTable.get(\"java.lang.Float\")==null) {llv.getSymbolData(\"java.lang.Float\", SourceInfo.NO_INFO);}", "-        _addVisitorError(new Pair<String, JExpressionIF>(ae.getMessage(), new NullLiteral(JExprParser.NO_SOURCE_INFO)));", "+        _addVisitorError(new Pair<String, JExpressionIF>(ae.getMessage(), new NullLiteral(SourceInfo.NO_INFO)));", "-        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(JExprParser.NO_SOURCE_INFO)));", "+        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(SourceInfo.NO_INFO)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee2d5c3b3cef9147c18fbf50e53ede59", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelConverter.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "signatureAfterChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "diff": ["-        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(SourceInfo.NO_INFO)));", "+        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(SourceInfo.NONE)));", "-          if (symbolTable.get(\"java.lang.Integer\") == null) llv.getSymbolData(\"java.lang.Integer\", SourceInfo.NO_INFO);", "-          if (symbolTable.get(\"java.lang.Double\") == null)  llv.getSymbolData(\"java.lang.Double\", SourceInfo.NO_INFO);", "-          if (symbolTable.get(\"java.lang.Boolean\") == null) llv.getSymbolData(\"java.lang.Boolean\", SourceInfo.NO_INFO);", "-          if (symbolTable.get(\"java.lang.Long\") == null)    llv.getSymbolData(\"java.lang.Long\", SourceInfo.NO_INFO);", "-          if (symbolTable.get(\"java.lang.Byte\") == null)    llv.getSymbolData(\"java.lang.Byte\", SourceInfo.NO_INFO);", "-          if (symbolTable.get(\"java.lang.Short\") == null)   llv.getSymbolData(\"java.lang.Short\", SourceInfo.NO_INFO);", "-          if (symbolTable.get(\"java.lang.Float\") == null)   llv.getSymbolData(\"java.lang.Float\", SourceInfo.NO_INFO);", "+          if (symbolTable.get(\"java.lang.Integer\") == null) llv.getSymbolData(\"java.lang.Integer\", SourceInfo.NONE);", "+          if (symbolTable.get(\"java.lang.Double\") == null)  llv.getSymbolData(\"java.lang.Double\", SourceInfo.NONE);", "+          if (symbolTable.get(\"java.lang.Boolean\") == null) llv.getSymbolData(\"java.lang.Boolean\", SourceInfo.NONE);", "+          if (symbolTable.get(\"java.lang.Long\") == null)    llv.getSymbolData(\"java.lang.Long\", SourceInfo.NONE);", "+          if (symbolTable.get(\"java.lang.Byte\") == null)    llv.getSymbolData(\"java.lang.Byte\", SourceInfo.NONE);", "+          if (symbolTable.get(\"java.lang.Short\") == null)   llv.getSymbolData(\"java.lang.Short\", SourceInfo.NONE);", "+          if (symbolTable.get(\"java.lang.Float\") == null)   llv.getSymbolData(\"java.lang.Float\", SourceInfo.NONE);", "-            llv.getSymbolData(\"java.lang.Character\", SourceInfo.NO_INFO);", "+            llv.getSymbolData(\"java.lang.Character\", SourceInfo.NONE);", "-        _addVisitorError(new Pair<String, JExpressionIF>(ae.getMessage(), new NullLiteral(SourceInfo.NO_INFO)));", "+        _addVisitorError(new Pair<String, JExpressionIF>(ae.getMessage(), new NullLiteral(SourceInfo.NONE)));", "-        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(SourceInfo.NO_INFO)));", "+        _addVisitorError(new Pair<String, JExpressionIF>(ioe.getMessage(), new NullLiteral(SourceInfo.NONE)));"]}], "num": 23842}