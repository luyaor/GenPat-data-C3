{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a257c4d06f7eaf405b505f9e860c51d3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1af3b99b2ba10d76fd3fe847a67040c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "b432c2a5363ca609f111d7dec3ae5ed814c173ea", "commitAfterChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Class visit(ImportDeclaration node)", "signatureAfterChange": "   public Class visit(ImportDeclaration node)", "diff": ["-    // Declare the package or class importation", "-    if (node.isPackage()) {", "-      context.declarePackageImport(node.getName());", "-    } else {", "-      try {", "-        context.declareClassImport(node.getName());", "-      } catch (ClassNotFoundException e) {", "-        throw new CatchedExceptionError(e, node);", "+    if(node.isStatic()) {", "+      staticImportHandler(node);", "+    }", "+    else {", "+      // Declare the package or class importation", "+      if (node.isPackage()) {", "+        context.declarePackageImport(node.getName());", "+      } else {", "+        try {", "+          context.declareClassImport(node.getName());", "+        } catch (ClassNotFoundException e) {", "+          throw new CatchedExceptionError(e, node);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68721bfeb54f6dbc705f8536e609c7f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ea3de3bd50de8d728bdb5d615bd9b8838d2e94b4", "commitAfterChange": "c8bdd45b172c9714aba30b2edf20a9a7463e66ab", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "diff": ["+    // if the document was an auxiliary file, remove it from the list", "+    if (doc.isAuxiliaryFile()) { removeAuxiliaryFile(doc); }", "+    "]}], "num": 5681}