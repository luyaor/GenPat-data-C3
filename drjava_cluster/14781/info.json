{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e709590d0edc2d95b007a13957d620be", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af70a1d25602373fdfa0d6cce42ec5e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileSuccessTestCase.java", "commitBeforeChange": "0ceee5d462dea01e571a97507c2d04495b971db0", "commitAfterChange": "ab9e3c17a5a3c5f93e2194242f915fa2f6bda14a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected boolean _isGenericCompiler()", "signatureAfterChange": "   protected boolean _isGenericCompiler()", "diff": ["-  protected boolean _isGenericCompiler() {", "-    String name = _model.getCompilerModel().getActiveCompiler().getClass().getName();", "-    for (int i=0; i < CompilerRegistry.GENERIC_JAVA_COMPILERS.length; i++) {", "-      if (name.equals(CompilerRegistry.GENERIC_JAVA_COMPILERS[i])) {", "-        //System.out.println(name + \" supports generics\");", "-        return true;", "-      }", "-    }", "-    //System.out.println(name + \" doesn't support generics\");", "-    return false;", "-  }", "+  protected boolean _isGenericCompiler() { return ! CompilerProxy.VERSION.equals(\"1.4\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d980fb05255e79416acbdc3faf932532", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testCompileResetsInteractions() throws BadLocationException, IOException, InterruptedException,     EditDocumentException", "signatureAfterChange": "   public void testCompileResetsInteractions() throws BadLocationException, IOException, InterruptedException,     EditDocumentException", "diff": ["-    ", "-    synchronized(listener) {", "-      _model.getCompilerModel().compileAll();", "-      if (_model.getCompilerModel().getNumErrors() > 0) {", "+    _model.getCompilerModel().compileAll();", "+    listener.waitCompileDone();", "+    ", "+    if (_model.getCompilerModel().getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      while (listener.notDone()) listener.wait();", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    listener.waitResetDone();", "+"]}], "num": 14781}