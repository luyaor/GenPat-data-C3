{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8384918490d317aa82a0561ea9b3622d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b646bf1273683ab95cd46d71986c9991", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f68f43e5a680bb235f87f6125c6c0de6d15a12f4", "commitAfterChange": "2526c65e608c685b2ba6cdb8c1784ca704d1153b", "methodNumberBeforeChange": 652, "methodNumberAfterChange": 652, "signatureBeforeChange": "   void _showAutoImportDialog(String s)", "signatureAfterChange": "   void _showAutoImportDialog(String s)", "diff": ["+    List<JavaAPIListEntry> autoImportList = new ArrayList<JavaAPIListEntry>(_javaAPIList);", "+    if ((DrJava.getConfig().getSetting(DIALOG_COMPLETE_SCAN_CLASS_FILES).booleanValue()) &&", "+        (_autoImportClassList.size()>0)) {", "+      autoImportList.addAll(_autoImportClassList);", "+    }", "+    else {", "+      File projectRoot = _model.getProjectRoot();", "+      List<OpenDefinitionsDocument> docs = _model.getOpenDefinitionsDocuments();", "+      if (docs != null) {", "+        for(OpenDefinitionsDocument d: docs) {", "+          if (d.isUntitled()) continue;", "+          try {", "+            File rel = FileOps.makeRelativeTo(d.getRawFile(), projectRoot);", "+            String full = rel.toString().replace(java.io.File.separatorChar, '.');", "+            for (String ext: edu.rice.cs.drjava.model.compiler.CompilerModel.EXTENSIONS) {", "+              if (full.endsWith(ext)) {", "+                full = full.substring(0, full.lastIndexOf(ext));", "+                break;", "+              }", "+            }", "+            String simple = full;", "+            if (simple.lastIndexOf('.')>=0) {", "+              simple = simple.substring(simple.lastIndexOf('.')+1);", "+            }", "+            JavaAPIListEntry entry = new JavaAPIListEntry(simple, full, null);", "+            if (!autoImportList.contains(entry)) { autoImportList.add(entry); }", "+          }", "+          catch(IOException ioe) { /* ignore, just don't add this one */ }", "+          catch(SecurityException se) { /* ignore, just don't add this one */ }", "+        }", "+      }", "+    }", "-                                                 _javaAPIList);", "+                                                 autoImportList);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c993ce974589ecd7789741e1cee99852", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavadocFrame.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private static File _parsePackagesFile(File packages, File destDir)", "signatureAfterChange": "   private static File _parsePackagesFile(File packages, File destDir)", "diff": ["-      boolean found = false;", "-      String line = br.readLine();", "-      int numLinesRead = 1;", "-      while ((!found) &&", "-             (numLinesRead < MAX_READ_PACKAGES_LINES) &&", "-             (line != null)) {", "-        found = (line.indexOf(\"The front page has been relocated\") != -1);", "-        if (!found) {", "-          line = br.readLine();", "-          numLinesRead++;", "-        }", "-      }", "-", "-      // Replace packages.html with the No Frames link.", "-      if (found) {", "-        boolean foundLink = false;", "-        while ((!foundLink) &&", "-               (numLinesRead < MAX_READ_FOR_LINK_LINES) &&", "+      try { // process the opened file", "+        String line = br.readLine();", "+        int numLinesRead = 1;", "+        boolean found = false;", "+        while ((!found) &&", "+               (numLinesRead < MAX_READ_PACKAGES_LINES) &&", "-          foundLink = (line.indexOf(\"Non-frame version\") != -1);", "-          if (!foundLink) {", "+          found = (line.indexOf(\"The front page has been relocated\") != -1);", "+          if (!found) {", "-", "-        if (foundLink) {", "-          String start = \"HREF=\\\"\";", "-          int startIndex = line.indexOf(start) + start.length();", "-          int endIndex = line.indexOf(\"\\\">\");", "-          if ((startIndex != -1) && (endIndex != -1)) {", "-            String filename = line.substring(startIndex, endIndex);", "-            return new File(destDir, filename);", "+        ", "+        // Replace packages.html with the No Frames link.", "+        if (found) {", "+          boolean foundLink = false;", "+          while ((!foundLink) &&", "+                 (numLinesRead < MAX_READ_FOR_LINK_LINES) &&", "+                 (line != null)) {", "+            foundLink = (line.indexOf(\"Non-frame version\") != -1);", "+            if (!foundLink) {", "+              line = br.readLine();", "+              numLinesRead++;", "+            }", "+          }", "+          ", "+          if (foundLink) {", "+            String start = \"HREF=\\\"\";", "+            int startIndex = line.indexOf(start) + start.length();", "+            int endIndex = line.indexOf(\"\\\">\");", "+            if ((startIndex != -1) && (endIndex != -1)) {", "+              String filename = line.substring(startIndex, endIndex);", "+              return new File(destDir, filename);", "+            }", "+      finally { br.close(); }", "-    catch (IOException ioe) {", "-      throw new UnexpectedException(ioe);", "-    }", "-", "+    catch (IOException ioe) { throw new UnexpectedException(ioe); }"]}], "num": 5226}