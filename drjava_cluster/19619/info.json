{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4380c11b6249e1d278e845fe2a5bc70d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cba6e1543bd7689da476a0696753d9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/SkipLastIterable.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public int size()", "signatureAfterChange": "      public int size()", "diff": ["-    return (nestedSize == 0) ? 0 : nestedSize - 1;", "+    if (nestedSize == 0) { return 0; }", "+    else if (nestedSize == Integer.MAX_VALUE) { return Integer.MAX_VALUE; }", "+    else { return nestedSize - 1; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ca66607ef39f3cfd7bf1b7e20c561b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassSignatureContext.java", "commitBeforeChange": "73d8f0963e3941f0992013e94dd38c610fad8320", "commitAfterChange": "79f5d66e5d12491f568b49d5064798e6d989d102", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public VariableType getTypeVariable(String name, TypeSystem ts)", "signatureAfterChange": "   public VariableType getTypeVariable(String name, TypeSystem ts)", "diff": ["-  /** Return the type variable with the given name, or {@code null} if it does not exist. */", "-  public VariableType getTypeVariable(String name, TypeSystem ts) {", "-    VariableType result = declaredTypeVariable(name, ts);", "-    return (result == null) ? super.getTypeVariable(name, ts) : result;", "+  /** Return the type variable with the given name, or {@code null} if it does not exist. */", "+  public VariableType getTypeVariable(String name, TypeSystem ts) {", "+    VariableType result = declaredTypeVariable(name);", "+    if (result != null) { return result; }", "+    else if (!matchesClass(name)) { return super.getTypeVariable(name, ts); }", "+    else { return null; }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffe07cd58b7959123f777da5ea5f5e68", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/SkipFirstIterable.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public int size()", "signatureAfterChange": "      public int size()", "diff": ["-    return (nestedSize == 0) ? 0 : nestedSize - 1;", "-  }    ", "+    if (nestedSize == 0) { return 0; }", "+    else if (nestedSize == Integer.MAX_VALUE) { return Integer.MAX_VALUE; }", "+    else { return nestedSize - 1; }", "+  }"]}], "num": 19619}