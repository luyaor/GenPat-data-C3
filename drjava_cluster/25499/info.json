{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47f22296882f4c7ce9f0dd44af1eb9cb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2d97f923a2d93bd3cf7cc2371290d25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DelegatingAction.java", "commitBeforeChange": "2a60f2064688c4fe57c01ffc40a024b990b45720", "commitAfterChange": "14d9da817fd1dfb180c09b0881e9dfe4248e9250", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void putValue(String key, Object value)", "signatureAfterChange": "    public void putValue(String key, Object value)", "diff": ["-    _delegatee.putValue(key, value);", "+", "+    if (_isDelegatedKey(key)) {", "+      _delegatee.putValue(key, value);", "+    }", "+    else {", "+      Object old = _localProperties.get(key);", "+      _localProperties.put(key, value);", "+      ListIterator itor = _listenerList.listIterator();", "+", "+      PropertyChangeEvent event = new PropertyChangeEvent(this, key, old, value);", "+", "+      while (itor.hasNext()) {", "+        PropertyChangeListener listener = (PropertyChangeListener) itor.next();", "+        listener.propertyChange(event);", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7cbe75275520da61f05258cdafacf31", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/SlaveJVMRunner.java", "commitBeforeChange": "754c5c6ad2cb355b22670132dd3802b39cd047ad", "commitAfterChange": "96733f3b5667642e9fe604cf00e9cf6d6a2ed1f5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static void main(String[] args)", "signatureAfterChange": "   public static void main(String[] args)", "diff": ["-      if (args.length != 2) System.exit(1);", "+      if (args.length != 3 && args.length != 2) System.exit(1);", "+      // if we have a remote classloader to use", "+      if(args.length == 3){", "+        //get the classloader", "+        IRemoteClassLoader remote = null;", "+        FileInputStream fstream = new FileInputStream(args[2]);", "+        ObjectInputStream ostream = new ObjectInputStream(fstream);", "+        remote = (IRemoteClassLoader) ostream.readObject();", "+        if(ClassLoader.getSystemClassLoader() instanceof CustomSystemClassLoader){", "+          CustomSystemClassLoader loader = (CustomSystemClassLoader) ClassLoader.getSystemClassLoader();", "+          loader.setMasterRemote(remote);", "+        }", "+      }", "+", "+      // get the master remote"]}], "num": 25499}