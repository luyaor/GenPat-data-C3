{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0522070a30fe53aa676f39b3659ebaf9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20140d261c7abbbca32427c02f6da0f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void testIndentInfoSquiggly ()", "signatureAfterChange": "    public void testIndentInfoSquiggly () throws BadLocationException", "diff": ["-\tpublic void testIndentInfoSquiggly () {", "-\t\ttry {", "-\t\t\t//empty document", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", noBrace, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", -1, ii.distToBrace);", "-\t\t\tassertEquals(\"1.3\", -1, ii.distToPrevNewline);", "+  public void testIndentInfoSquiggly () throws BadLocationException {", "+    //empty document", "+    BraceReduction rm = doc._reduced;", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", noBrace, ii.braceType);", "+    assertEquals(\"1.1\", -1, ii.distToNewline);", "+    assertEquals(\"1.2\", -1, ii.distToBrace);", "+    assertEquals(\"1.3\", -1, ii.distToPrevNewline);", "-\t\t\t//single newline", "-\t\t\tdoc.insertString(0, \"\\n\", null);", "-\t\t\tassertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"2.0\", noBrace, ii.braceType);", "-\t\t\tassertEquals(\"2.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"2.2\", -1, ii.distToBrace);", "-\t\t\tassertEquals(\"2.3\", 0, ii.distToPrevNewline);", "+    //single newline", "+    doc.insertString(0, \"\\n\", null);", "+    assertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"2.0\", noBrace, ii.braceType);", "+    assertEquals(\"2.1\", -1, ii.distToNewline);", "+    assertEquals(\"2.2\", -1, ii.distToBrace);", "+    assertEquals(\"2.3\", 0, ii.distToPrevNewline);", "-\t\t\t//single layer brace", "-\t\t\tdoc.insertString(0, \"{\\n\\n\", null);", "-\t\t\t// {\\n\\n#\\n", "-\t\t\tassertEquals(\"0.2\", \"{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"3.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"3.2\", 3, ii.distToBrace);", "-\t\t\tassertEquals(\"3.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"3.3\", 0, ii.distToPrevNewline);", "-\t\t\t", "+    //single layer brace", "+    doc.insertString(0, \"{\\n\\n\", null);", "+    // {\\n\\n#\\n", "+    assertEquals(\"0.2\", \"{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"3.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"3.2\", 3, ii.distToBrace);", "+    assertEquals(\"3.1\", -1, ii.distToNewline);", "+    assertEquals(\"3.3\", 0, ii.distToPrevNewline);", "+    ", "-\t\t\t//another squiggly", "-\t\t\tdoc.insertString(3, \"{\\n\\n\", null);", "-\t\t\t// {\\n\\n{\\n\\n#\\n", "-\t\t\tassertEquals(\"0.3\", \"{\\n\\n{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"4.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"4.1\", 3, ii.distToNewline);", "-\t\t\tassertEquals(\"4.2\", 3, ii.distToBrace);", "-\t\t\tassertEquals(\"4.3\", 0, ii.distToPrevNewline);", "+    //another squiggly", "+    doc.insertString(3, \"{\\n\\n\", null);", "+    // {\\n\\n{\\n\\n#\\n", "+    assertEquals(\"0.3\", \"{\\n\\n{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"4.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"4.1\", 3, ii.distToNewline);", "+    assertEquals(\"4.2\", 3, ii.distToBrace);", "+    assertEquals(\"4.3\", 0, ii.distToPrevNewline);", "-\t\t\t//brace with whitespace", "-\t\t\tdoc.insertString(6, \"  {\\n\\n\", null);", "-\t\t\t// {\\n\\n{\\n\\n  {\\n\\n#\\n", "-\t\t\tassertEquals(\"0.4\", \"{\\n\\n{\\n\\n  {\\n\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"5.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"5.1\", 5, ii.distToNewline);", "-\t\t\tassertEquals(\"5.2\", 3, ii.distToBrace);", "-\t\t\tassertEquals(\"5.3\", 0, ii.distToPrevNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}", "+    //brace with whitespace", "+    doc.insertString(6, \"  {\\n\\n\", null);", "+    // {\\n\\n{\\n\\n  {\\n\\n#\\n", "+    assertEquals(\"0.4\", \"{\\n\\n{\\n\\n  {\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"5.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"5.1\", 5, ii.distToNewline);", "+    assertEquals(\"5.2\", 3, ii.distToBrace);", "+    assertEquals(\"5.3\", 0, ii.distToPrevNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50d95c485d48edac83240155310624f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void testIndentInfoSquiggly ()", "signatureAfterChange": "    public void testIndentInfoSquiggly () throws BadLocationException", "diff": ["-\tpublic void testIndentInfoSquiggly () {", "-\t\ttry {", "-\t\t\t//empty document", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", noBrace, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", -1, ii.distToBrace);", "-\t\t\tassertEquals(\"1.3\", -1, ii.distToPrevNewline);", "+  public void testIndentInfoSquiggly () throws BadLocationException {", "+    //empty document", "+    BraceReduction rm = doc._reduced;", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", noBrace, ii.braceType);", "+    assertEquals(\"1.1\", -1, ii.distToNewline);", "+    assertEquals(\"1.2\", -1, ii.distToBrace);", "+    assertEquals(\"1.3\", -1, ii.distToPrevNewline);", "-\t\t\t//single newline", "-\t\t\tdoc.insertString(0, \"\\n\", null);", "-\t\t\tassertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"2.0\", noBrace, ii.braceType);", "-\t\t\tassertEquals(\"2.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"2.2\", -1, ii.distToBrace);", "-\t\t\tassertEquals(\"2.3\", 0, ii.distToPrevNewline);", "+    //single newline", "+    doc.insertString(0, \"\\n\", null);", "+    assertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"2.0\", noBrace, ii.braceType);", "+    assertEquals(\"2.1\", -1, ii.distToNewline);", "+    assertEquals(\"2.2\", -1, ii.distToBrace);", "+    assertEquals(\"2.3\", 0, ii.distToPrevNewline);", "-\t\t\t//single layer brace", "-\t\t\tdoc.insertString(0, \"{\\n\\n\", null);", "-\t\t\t// {\\n\\n#\\n", "-\t\t\tassertEquals(\"0.2\", \"{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"3.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"3.2\", 3, ii.distToBrace);", "-\t\t\tassertEquals(\"3.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"3.3\", 0, ii.distToPrevNewline);", "-\t\t\t", "+    //single layer brace", "+    doc.insertString(0, \"{\\n\\n\", null);", "+    // {\\n\\n#\\n", "+    assertEquals(\"0.2\", \"{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"3.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"3.2\", 3, ii.distToBrace);", "+    assertEquals(\"3.1\", -1, ii.distToNewline);", "+    assertEquals(\"3.3\", 0, ii.distToPrevNewline);", "+    ", "-\t\t\t//another squiggly", "-\t\t\tdoc.insertString(3, \"{\\n\\n\", null);", "-\t\t\t// {\\n\\n{\\n\\n#\\n", "-\t\t\tassertEquals(\"0.3\", \"{\\n\\n{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"4.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"4.1\", 3, ii.distToNewline);", "-\t\t\tassertEquals(\"4.2\", 3, ii.distToBrace);", "-\t\t\tassertEquals(\"4.3\", 0, ii.distToPrevNewline);", "+    //another squiggly", "+    doc.insertString(3, \"{\\n\\n\", null);", "+    // {\\n\\n{\\n\\n#\\n", "+    assertEquals(\"0.3\", \"{\\n\\n{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"4.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"4.1\", 3, ii.distToNewline);", "+    assertEquals(\"4.2\", 3, ii.distToBrace);", "+    assertEquals(\"4.3\", 0, ii.distToPrevNewline);", "-\t\t\t//brace with whitespace", "-\t\t\tdoc.insertString(6, \"  {\\n\\n\", null);", "-\t\t\t// {\\n\\n{\\n\\n  {\\n\\n#\\n", "-\t\t\tassertEquals(\"0.4\", \"{\\n\\n{\\n\\n  {\\n\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"5.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"5.1\", 5, ii.distToNewline);", "-\t\t\tassertEquals(\"5.2\", 3, ii.distToBrace);", "-\t\t\tassertEquals(\"5.3\", 0, ii.distToPrevNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}", "+    //brace with whitespace", "+    doc.insertString(6, \"  {\\n\\n\", null);", "+    // {\\n\\n{\\n\\n  {\\n\\n#\\n", "+    assertEquals(\"0.4\", \"{\\n\\n{\\n\\n  {\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"5.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"5.1\", 5, ii.distToNewline);", "+    assertEquals(\"5.2\", 3, ii.distToBrace);", "+    assertEquals(\"5.3\", 0, ii.distToPrevNewline);", "+  }"]}], "num": 19674}