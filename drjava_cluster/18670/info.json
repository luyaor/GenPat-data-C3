{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc47989876b40d5366ffb0e13306fc33", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f4dd828c92c4f5401fdb76df562aa6e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-hj/edu/rice/cs/drjava/model/compiler/HjCompiler.java", "commitBeforeChange": "503a4c8c883d0c0e1badd33935b5da20910f7033", "commitAfterChange": "bc15f82b93b6ffb78da3a3058742b383768e7aa6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public static String transformHJCommand(String s)", "signatureAfterChange": "        public static String transformHJCommand(String s)", "diff": ["-  ", "+    ", "-    // check the return type and public access before executing, per bug #1585210", "-    //String [] hjcommand = new String[s.length()];", "-    //  hj.lang.runtime.Runtime.mainEntry", "-    ", "-    ", "-    final String HJcommand = \"hj.lang.Runtime.mainEntry(new String[]'{'\\\"-rt=wsh\\\",{1}'}');\";", "-    //final String HJcommand = \"hj.lang.Runtime.mainEntry(new String[]'{'\\\"-ea\\\",\\\"-classpath\\\",\\\"\" + Dir  + \"\\\",\\\"-rt=wsh\\\",{1}'}');\";", "-    ", "+    // System.out.println(s);", "+    String HJcommand = \"hj.lang.Runtime.mainEntry(new String[]{\\\"-rt=wsh\\\"\";", "+      ", "-    final String className = classNameWithQuotes.substring(1, classNameWithQuotes.length() - 1); // removes quotes, becomes MyClass", "-    final StringBuilder argsString = new StringBuilder();", "+    final StringBuilder argsString = new StringBuilder(HJcommand);", "-      //argsString.append(\",\");", "+      argsString.append(\",\");", "-    String name = args.get(2);", "-    /*  if(!Dir.equals(\"\")) {", "-     File path = new File(Dir);", "-     try {", "-     new PathClassLoader(JarJDKToolsLibrary.class.getClassLoader(), path).loadClass(name); ", "-     }", "-     catch (Exception e){", "-     e.printStackTrace();", "-     }", "-     } */", "+    argsString.append(\"});\");", "-    return java.text.MessageFormat.format(HJcommand, className, argsString.toString());", "-    ", "-  }", "+    return argsString.toString();   ", "+  } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deba24bf2cd1641f302c394119dbf193", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "9d671cad5f849049059b2e199aea7279dd398525", "commitAfterChange": "ef7e8ed674f3435dc8cfe861d137f1cab241f5c2", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 78, "signatureBeforeChange": "   protected static String _testClassCall(String s)", "signatureAfterChange": "   protected static String _transformCommand(String s, String command)", "diff": ["-  /** Assumes a trimmed String. Returns a string of the main call that the interpretor can use. */", "-  protected static String _testClassCall(String s) {", "+    */", "+  protected static String _transformCommand(String s, String command) {", "+    final String classNameWithQuotes = args.get(1); // this is \"MyClass\"", "+    final String className = classNameWithQuotes.substring(1, classNameWithQuotes.length() - 1); // removes quotes, becomes MyClass", "+    final StringBuilder argsString = new StringBuilder();", "-    final String className = args.get(1);", "-    final StringBuilder mainCall = new StringBuilder();", "-    mainCall.append(className.substring(1, className.length() - 1));", "-    mainCall.append(\".main(new String[]{\");", "-      if (seenArg) mainCall.append(\",\");", "+      if (seenArg) argsString.append(\",\");", "-      mainCall.append(args.get(i));", "+      argsString.append(args.get(i));", "-    mainCall.append(\"});\");", "-    return mainCall.toString();", "+    return java.text.MessageFormat.format(command, className, argsString.toString());"]}], "num": 18670}