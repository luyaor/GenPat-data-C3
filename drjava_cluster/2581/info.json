{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c116444c8b54f7f01130f0c60869813", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32e1219375c3c12cd2af3f64d9be7cc5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      public void testIfStatement2() throws ParseException", "signatureAfterChange": "      public void testIfStatement2() throws ParseException", "diff": ["-    expectedAST.add(new IfThenElseStatement(new ObjectMethodCall(new AmbiguousName(\"o\"), \"m\", null, \"\", -1, -1, -1, -1), ", "+    expectedAST.add(new IfThenElseStatement(new ObjectMethodCall(new AmbiguousName(\"o\"), \"m\", null, SourceInfo.NONE), ", "-                                            new IfThenStatement(new BooleanLiteral(true),new ExpressionStatement(new ObjectMethodCall(new AmbiguousName(\"o\"), \"m\", null, \"\", -1, -1, -1, -1), true))));", "+                                            new IfThenStatement(new BooleanLiteral(true),new ExpressionStatement(new ObjectMethodCall(new AmbiguousName(\"o\"), \"m\", null, SourceInfo.NONE), true))));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74836a4a45b5f7e9ec08dc8b8c9e3938", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EnumDeclaration.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    static List<Node> HandleConstructors(String name, List<Node> body)", "signatureAfterChange": "    static List<Node> HandleConstructors(String name, List<Node> body)", "diff": ["-    List<IdentifierToken> idnt1  = new LinkedList<IdentifierToken>();", "-    idnt1.add(new Identifier(\"$1\"));", "-    List<IdentifierToken> idnt2  = new LinkedList<IdentifierToken>();", "-    idnt2.add(new Identifier(\"$2\"));", "-", "-    args.add(new QualifiedName(idnt1));", "-    args.add(new QualifiedName(idnt2));", "+    args.add(new AmbiguousName(\"$1\"));", "+    args.add(new AmbiguousName(\"$2\"));", "-        ((ConstructorDeclaration)current).setConstructorInvocation(new ConstructorInvocation(null, args, true));", "+        ((ConstructorDeclaration)current).setConstructorCall(new ConstructorCall(null, args, true));", "-                                          new ConstructorInvocation(null, args, true),", "+                                          new ConstructorCall(null, args, true),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e24792cff309e1e5ce273564c1c5e91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      public void testIfStatement2() throws ParseException", "signatureAfterChange": "      public void testIfStatement2() throws ParseException", "diff": ["-    List<IdentifierToken> idnt1  = new LinkedList<IdentifierToken>();", "-    idnt1.add(new Identifier(\"o\"));", "-", "-    List<IdentifierToken> idnt2  = new LinkedList<IdentifierToken>();", "-    idnt2.add(new Identifier(\"o\"));", "-    ", "-    expectedAST.add(new IfThenElseStatement(new ObjectMethodCall(new QualifiedName(idnt1), \"m\", null, \"\", -1, -1, -1, -1), ", "+    expectedAST.add(new IfThenElseStatement(new ObjectMethodCall(new AmbiguousName(\"o\"), \"m\", null, \"\", -1, -1, -1, -1), ", "-                                            new IfThenStatement(new BooleanLiteral(true),new ObjectMethodCall(new QualifiedName(idnt2), \"m\", null, \"\", -1, -1, -1, -1))));", "+                                            new IfThenStatement(new BooleanLiteral(true),new ObjectMethodCall(new AmbiguousName(\"o\"), \"m\", null, \"\", -1, -1, -1, -1))));"]}], "num": 2581}