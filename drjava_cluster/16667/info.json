{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf61cb0f2f5d99a8efe1ddc05fe9cddb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28749dd6940d90f4296a7bf568127bf3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicInnerAllocation.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicInnerAllocation(Expression exp, TypeName tp, List<Expression> args, List<TypeName> targs,                          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicInnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs,                                     List<? extends Expression> args, List<TypeName> targs,                                     String fn, int bl, int bc, int el, int ec)", "diff": ["-  public PolymorphicInnerAllocation(Expression exp, TypeName tp, List<Expression> args, List<TypeName> targs,", "-                         String fn, int bl, int bc, int el, int ec) {", "-    super(exp, tp, args, fn, bl, bc, el, ec);", "-", "+  public PolymorphicInnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs,", "+                                    List<? extends Expression> args, List<TypeName> targs,", "+                                    String fn, int bl, int bc, int el, int ec) {", "+    super(exp, cn, ctargs, args, fn, bl, bc, el, ec);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0e5014c8f32fbd44bf5f6034a0f9e4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicSimpleAllocation.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicSimpleAllocation(TypeName tp, List<Expression> args, List<TypeName> targs,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicSimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args,                                       List<TypeName> targs,                                      String fn, int bl, int bc, int el, int ec)", "diff": ["-  public PolymorphicSimpleAllocation(TypeName tp, List<Expression> args, List<TypeName> targs,", "-                          String fn, int bl, int bc, int el, int ec) {", "+  public PolymorphicSimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args, ", "+                                     List<TypeName> targs,", "+                                     String fn, int bl, int bc, int el, int ec) {"]}], "num": 16667}