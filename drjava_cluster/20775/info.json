{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a6ac766ee8c5feb0c2c25cc3978e0ea", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d5fcea2582f461a9c9b5da7174fab5d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/MethodContext.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Class setProperties(ClassAllocation node, Class c, Class[] args, List<Node> memb)", "signatureAfterChange": "   public Class<?> setProperties(ClassAllocation node, Class<?> c, Class<?>[] args, List<Node> memb)", "diff": ["-  public Class setProperties(ClassAllocation node, Class c, Class[] args, List<Node> memb) {", "+  public Class<?> setProperties(ClassAllocation node, Class<?> c, Class<?>[] args, List<Node> memb) {", "-    Class cl = new TreeCompiler(interpreter).compileTree(this, type);", "+    Class<?> cl = new TreeCompiler(interpreter).compileTree(this, type);", "-    Class[] tmp = new Class[args.length+2];", "+    Class<?>[] tmp = new Class[args.length+2];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea96e4175321d38ce6831c84f53bd60c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/StaticContext.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public Class setProperties(ClassAllocation node, Class c, Class[] args, List<Node> memb)", "signatureAfterChange": "   public Class<?> setProperties(ClassAllocation node, Class<?> c, Class<?>[] args, List<Node> memb)", "diff": ["-  public Class setProperties(ClassAllocation node, Class c, Class[] args, List<Node> memb) {", "+  public Class<?> setProperties(ClassAllocation node, Class<?> c, Class<?>[] args, List<Node> memb) {", "-    Class cl = new TreeCompiler(interpreter).compileTree(this, type);", "+    Class<?> cl = new TreeCompiler(interpreter).compileTree(this, type);", "-    Class[] tmp = new Class[args.length+1];", "+    Class<?>[] tmp = new Class[args.length+1];"]}], "num": 20775}