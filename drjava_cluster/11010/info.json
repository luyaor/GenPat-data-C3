{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9f31fc82a3d0ed1453395c4b0afb5c0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6012b98b881144e99434542e6b38ffe8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "commitAfterChange": "65fb8db1fb3e7570ae4fa352a26deb0e151b48ac", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public SymbolData handleAnonymousClassInstantiation(AnonymousClassInstantiation that, SymbolData superC)", "signatureAfterChange": "   public SymbolData handleAnonymousClassInstantiation(AnonymousClassInstantiation that, SymbolData superC)", "diff": ["-    System.err.println(\"***** In handleACI(\" + that.getType().getName() + \", \" + superC + \") sd = \" + sd);", "-    System.err.println(\"Inner classes of \" + superC + \" are: \" + superC.getInnerClasses());", "+//    System.err.println(\"***** In handleACI(\" + that.getType().getName() + \", \" + superC + \") sd = \" + sd);", "+//    System.err.println(\"Inner classes of \" + superC + \" are: \" + superC.getInnerClasses());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87aeb0f2a1444c754583caff0d13b818", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public SymbolData handleAnonymousClassInstantiation(AnonymousClassInstantiation that, SymbolData superC)", "signatureAfterChange": "   public SymbolData handleAnonymousClassInstantiation(AnonymousClassInstantiation that, SymbolData superC)", "diff": ["-    SymbolData sd = _data.getNextAnonymousInnerClass();", "+//    SymbolData sd = _data.getNextAnonymousInnerClass();", "+    /* The preceding line changed to following because anonymous class is filed under its enclosing class not ", "+     * enclosing method. */", "+    SymbolData sd = superC.getNextAnonymousInnerClass();", "+    System.err.println(\"***** In handleACI(\" + that.getType().getName() + \", \" + superC + \") sd = \" + sd);", "+    System.err.println(\"Inner classes of \" + superC + \" are: \" + superC.getInnerClasses());"]}], "num": 11010}