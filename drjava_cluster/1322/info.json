{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bfa6d4391c6932fe4a2c216f107ac9e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fd454a3cecd9345a517a7bed7613e19", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "ff27298276d0b205036fe4b017017ca3896e9890", "commitAfterChange": "4ddb555fbb20c498ee5f44bc087ce9c848b2e79c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testScriptLoading() throws IOException, OperationCanceledException", "signatureAfterChange": "   public void testScriptLoading() throws IOException, OperationCanceledException", "diff": ["+    try {", "+      ism.prevInteraction();", "+      fail(\"Should not have been able to get previous interaction!\");", "+    }", "+    catch (IllegalStateException ise) {", "+      // good, continue", "+    }", "-    ism.prevInteraction();", "-    assertEquals(\"Should have put the second interaction into the interactions document.\",", "-                 line2, doc.getCurrentInteraction());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbb5cc9c8f2820b299327dbb2ab40889", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ImportationManagerTest.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "             public void testDeclareMemberStaticImport()", "signatureAfterChange": "             public void testDeclareMemberStaticImport()", "diff": ["-    if(TigerUtilities.isTigerEnabled()) {      ", "+    try {      ", "-    else {", "-      //When running 1.4, the methods returned by java.lang.reflect.Class.getMethods() are in the array in reverse order from the way they are returned in 1.5.", "+    catch(AssertionFailedError e){", "+      //When running 1.4 or running in Windows, the methods returned by java.lang.reflect.Class.getMethods() ", "+      //are in the array in reverse order from the way they are returned in 1.5 in Linux. ", "-    if(TigerUtilities.isTigerEnabled()) {", "+    try{", "-    else {", "-      //When running 1.4, the methods returned by java.lang.reflect.Class.getMethods() are in the array in reverse order from the way they are returned in 1.5.", "+    catch(AssertionFailedError e){", "+      //When running 1.4 or running in Windows, the methods returned by java.lang.reflect.Class.getMethods() ", "+      //are in the array in reverse order from the way they are returned in 1.5 in Linux. "]}], "num": 1322}