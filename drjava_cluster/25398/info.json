{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f407174676a8f2663c3987b320bea35e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "737fed799b14cac2d85adb4e41802235", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Set leaveScope()", "signatureAfterChange": "   public Set<AbstractVariable> leaveScope()", "diff": ["+   */", "+  public Set<AbstractVariable> leaveScope() {", "+    Set<AbstractVariable> result = getCurrentScopeVariables();", "+    scopes = scopes.next;", "+    scope  = scopes.scope;", "+    cscope = scopes.cscope;", "+    return result;", "+  }", "-    public Set leaveScope() {", "-\tSet result = new HashSet(11);", "-\tIterator it = scope.keySet().iterator();", "-\twhile (it.hasNext()) {", "-\t    result.add(new Variable((String)it.next()));", "-\t}", "-\tit = cscope.keySet().iterator();", "-\twhile (it.hasNext()) {", "-\t    result.add(new Constant((String)it.next()));", "-\t}", "-\tscopes = scopes.next;", "-\tscope  = scopes.scope;", "-\tcscope = scopes.cscope;", "-\treturn result;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce2179c889ee41c32a0d30e9495abddc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void insertString(int offset, String str, AttributeSet a)     throws BadLocationException", "signatureAfterChange": "   public void insertString(int offset, String str, AttributeSet a)     throws BadLocationException", "diff": ["-\t\t//System.out.println(\"STRING: \"+str+\"      \"+str.length()+\" \"+", "-\t\t//\toffset);", "-\t\t//variables", "+", "-\t\treducedOffset = _reduced.getBlockOffset();", "-\t\t//2)set mark to the previous item.", "-\t\tmark = _reduced.makeCopyCursor();", "-\t\tif (!mark.atStart()) //if not at start then get the previous item.", "-\t\t\tmark.prev();", "-\t\tif (mark.atStart()) //if now at start then size of current == 0", "-\t\t\tprevSize = 0;", "-\t\telse", "-\t\t\tprevSize = mark.current().getSize(); //else size == size of current", "-\t\t", "-\t\tint adjustment = offset - prevSize - reducedOffset;", "-\t\tnewStates = SBVectorFactory.generate(mark,0,adjustment);", "-\t\tupdateCurrentHighlights(newStates,adjustment);", "+\t\tnewStates = _reduced.generateHighlights(offset,strLength);", "+\t\t", "+\t\tupdateCurrentHighlights(newStates);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cec4d58590bf714c5a98c56bf13cc1fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocument.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void insertString(int offset, String str, AttributeSet a)     throws BadLocationException", "signatureAfterChange": "   public void insertString(int offset, String str, AttributeSet a)     throws BadLocationException", "diff": ["-\t\t//System.out.println(\"STRING: \"+str+\"      \"+str.length()+\" \"+", "-\t\t//\toffset);", "-\t\t//variables", "+", "-\t\treducedOffset = _reduced.getBlockOffset();", "-\t\t//2)set mark to the previous item.", "-\t\tmark = _reduced.makeCopyCursor();", "-\t\tif (!mark.atStart()) //if not at start then get the previous item.", "-\t\t\tmark.prev();", "-\t\tif (mark.atStart()) //if now at start then size of current == 0", "-\t\t\tprevSize = 0;", "-\t\telse", "-\t\t\tprevSize = mark.current().getSize(); //else size == size of current", "-\t\t", "-\t\tint adjustment = offset - prevSize - reducedOffset;", "-\t\tnewStates = SBVectorFactory.generate(mark,0,adjustment);", "-\t\tupdateCurrentHighlights(newStates,adjustment);", "+\t\tnewStates = _reduced.generateHighlights(offset,strLength);", "+\t\t", "+\t\tupdateCurrentHighlights(newStates);", "-"]}], "num": 25398}