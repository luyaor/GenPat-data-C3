{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22840d82fff8959b006f5d29416fa823", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "436ba5954104dd81d35c9a666043981c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "signatureAfterChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "diff": ["-//    ScrollableDialog sd1 = new ScrollableDialog(null, \"saveFile (\" + fileSaver + \") called in FileOps.java\", \"\", \"\");", "-//    sd1.show();", "+    ", "+//    System.err.println(\"Saving file \" + file + \" with backup status = \" + makeBackup);", "-    // file.canWrite() is false if file.exists() is false", "-    // but we want to be able to save a file that doesn't", "-    // yet exist.", "-    if (file.exists() && !file.canWrite()) throw new IOException(\"Permission denied\");", "-    /* First back up the file, if necessary */", "+    // file.canWrite() is false if file.exists() is false, but we want to be able to save a file that doesn't yet exist.", "+    if (file.exists() && ! file.canWrite()) throw new IOException(\"Permission denied\");", "+    // First back up the file, if necessary.", "-      if (!renameFile(file, backup)){", "+      if (! renameFile(file, backup)) {", "-      fileSaver.backupDone();", "+//      System.err.println(\"saveFile renamed \" + file + \" as \" + backup);", "+      fileSaver.backupDone();  // Why? This action may have to be reversed if writing new file fails!", "+//      System.err.println(\"Contents: '\" + IOUtil.toString(backup) + \"'\");", "+//    System.err.println(\"tempfileName = \" + tempFile + \" for backup file \" + backup);", "+//      System.err.println(bos + \" written\");", "+//      System.err.println(\"Closing \" + bos + \" and \" + fos);", "-      fos.close();", "+//      fos.close();", "-      if (tempFileUsed && !renameFile(tempFile, file))", "+//      System.err.println(\"Wrote: \" + tempFile);", "+      if (tempFileUsed && ! renameFile(tempFile, file))", "-      ", "+//      System.err.println(\"Renamed \" + tempFile + \" as \" + file);", "+//      if (makeBackup) System.err.println(\"Does \" + backup + \" still exists? \" + backup.exists());", "-        else  renameFile(backup, file);", "+        else {", "+          renameFile(backup, file);", "+          System.out.println(\"Forced to rename backup \" + backup + \" as file \" + file);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49ece0bcecb4941e0e8c6abbe3e65e2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "signatureAfterChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "diff": ["-//    ScrollableDialog sd1 = new ScrollableDialog(null, \"saveFile (\" + fileSaver + \") called in FileOps.java\", \"\", \"\");", "-//    sd1.show();", "+    ", "+//    System.err.println(\"Saving file \" + file + \" with backup status = \" + makeBackup);", "-    // file.canWrite() is false if file.exists() is false", "-    // but we want to be able to save a file that doesn't", "-    // yet exist.", "-    if (file.exists() && !file.canWrite()) throw new IOException(\"Permission denied\");", "-    /* First back up the file, if necessary */", "+    // file.canWrite() is false if file.exists() is false, but we want to be able to save a file that doesn't yet exist.", "+    if (file.exists() && ! file.canWrite()) throw new IOException(\"Permission denied\");", "+    // First back up the file, if necessary.", "-      if (!renameFile(file, backup)){", "+      if (! renameFile(file, backup)) {", "-      fileSaver.backupDone();", "+//      System.err.println(\"saveFile renamed \" + file + \" as \" + backup);", "+      fileSaver.backupDone();  // Why? This action may have to be reversed if writing new file fails!", "+//      System.err.println(\"Contents: '\" + IOUtil.toString(backup) + \"'\");", "+//    System.err.println(\"tempfileName = \" + tempFile + \" for backup file \" + backup);", "+//      System.err.println(bos + \" written\");", "+//      System.err.println(\"Closing \" + bos + \" and \" + fos);", "-      fos.close();", "+//      fos.close();", "-      if (tempFileUsed && !renameFile(tempFile, file))", "+//      System.err.println(\"Wrote: \" + tempFile);", "+      if (tempFileUsed && ! renameFile(tempFile, file))", "-      ", "+//      System.err.println(\"Renamed \" + tempFile + \" as \" + file);", "+//      if (makeBackup) System.err.println(\"Does \" + backup + \" still exists? \" + backup.exists());", "-        else  renameFile(backup, file);", "+        else {", "+          renameFile(backup, file);", "+          System.out.println(\"Forced to rename backup \" + backup + \" as file \" + file);", "+        }"]}], "num": 862}