{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef118bc7eff83d8252cb279d798f6587", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34807efad0bd7abb2a8927561bd21cbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "          public void testForBlock()", "signatureAfterChange": "          public void testForBlock()", "diff": ["-      Block b = new Block(JExprParser.NO_SOURCE_INFO, ", "-                          new BracedBody(JExprParser.NO_SOURCE_INFO,", "-                                         new BodyItemI[] { new ValueReturnStatement(JExprParser.NO_SOURCE_INFO,", "-                                                                                    new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\")))}));", "+      Block b = new Block(SourceInfo.NO_INFO, ", "+                          new BracedBody(SourceInfo.NO_INFO,", "+                                         new BodyItemI[] { new ValueReturnStatement(SourceInfo.NO_INFO,", "+                                                                                    new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\")))}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc27339db760c85318a1ed661a1e8f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Augmentor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "          public void testGetVariableAccessorListHelper()", "signatureAfterChange": "          public void testGetVariableAccessorListHelper()", "diff": ["-      ModifiersAndVisibility _publicMav = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, new String[] {\"public\"});", "-      ModifiersAndVisibility _privateMav = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, new String[] {\"private\"});", "+      ModifiersAndVisibility _publicMav = new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[] {\"public\"});", "+      ModifiersAndVisibility _privateMav = new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[] {\"private\"});", "-      MethodData lone_star = new MethodData(\"lone_star\", _publicMav, new TypeParameter[0], SymbolData.INT_TYPE, new VariableData[0], ", "-                                     new String[0], texas, new NullLiteral(JExprParser.NO_SOURCE_INFO));", "+      MethodData lone_star = new MethodData(\"lone_star\", _publicMav, ", "+                                            new TypeParameter[0], SymbolData.INT_TYPE, ", "+                                            new VariableData[0], ", "+                                            new String[0], texas, ", "+                                            new NullLiteral(SourceInfo.NO_INFO));", "-      MethodData armadillo = new MethodData(\"armadillo\", _privateMav, new TypeParameter[0], SymbolData.BOOLEAN_TYPE, new VariableData[0], ", "-                                     new String[0], texas, new NullLiteral(JExprParser.NO_SOURCE_INFO));", "+      MethodData armadillo = new MethodData(\"armadillo\", _privateMav, ", "+                                            new TypeParameter[0], ", "+                                            SymbolData.BOOLEAN_TYPE,", "+                                            new VariableData[0], ", "+                                            new String[0], texas, ", "+                                            new NullLiteral(SourceInfo.NO_INFO));", "-      //now add a field badRoad to Houston.  Its gettor returns a supertype of its type, so it is okay to call.  Will be returned.", "+      // Now add a field badRoad to Houston.  Its gettor returns a supertype of its type, so it is okay to call.  ", "+      // Will be returned.", "-      MethodData badRoad = new MethodData(\"badRoad\", _publicMav, new TypeParameter[0], SymbolData.INT_TYPE, new VariableData[0], ", "-                                     new String[0], houston, new NullLiteral(JExprParser.NO_SOURCE_INFO));", "+      MethodData badRoad = new MethodData(\"badRoad\", _publicMav,", "+                                          new TypeParameter[0],", "+                                          SymbolData.INT_TYPE,", "+                                          new VariableData[0], ", "+                                          new String[0], houston, ", "+                                          new NullLiteral(SourceInfo.NO_INFO));"]}], "num": 9711}