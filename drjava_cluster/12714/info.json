{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d23124cae32f5ecd3e5b966cc58cb346", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3abfb2654f67e983f62a33f1b7df608", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 124, "signatureBeforeChange": "   public Document getNextDocument(Document doc)", "signatureAfterChange": "   public OpenDefinitionsDocument getNextDocument(Document d)", "diff": ["-  public Document getNextDocument(Document doc) {", "+  public OpenDefinitionsDocument getNextDocument(Document d) {", "-      INavigatorItem item = getIDocGivenODD(getODDForDocument(doc));", "-      INavigatorItem nextitem = _documentNavigator.getNext(item);", "-      if (nextitem == item){", "-        // we're at the end, so we need to rewind and return doc at the very beginning", "-        int i = -1;", "-        do {", "-          item = nextitem;", "-          nextitem = _documentNavigator.getPrevious(item);", "-          i++;", "-        } while(nextitem != item);", "-        return getNextDocHelper(nextitem); //getODDGivenIDoc(nextitem);", "+      OpenDefinitionsDocument doc = getODDForDocument(d);", "+      OpenDefinitionsDocument nextdoc = _documentNavigator.getNext(doc);", "+      if (nextdoc != doc) return getNextDocHelper(nextdoc);", "+      // We are at the end of the list, so we need to rewind and return doc at the very beginning", "+      do{", "+        doc = nextdoc;", "+        nextdoc = _documentNavigator.getPrevious(doc);", "-      else return getNextDocHelper(nextitem); //getODDGivenIDoc(nextitem);", "+      while (doc != nextdoc);", "+      return getNextDocHelper(nextdoc);  ", "-    catch(DocumentClosedException dce) { return getNextDocument(doc); }", "+    catch(DocumentClosedException dce) { return getNextDocument(d); }  // Won't this produce an infinite loop?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb030da47e4eeb020e2d7fbca7c4515d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 126, "signatureBeforeChange": "   public Document getPrevDocument(Document doc)", "signatureAfterChange": "   public OpenDefinitionsDocument getPrevDocument(Document d)", "diff": ["-  public Document getPrevDocument(Document doc) {", "+  public OpenDefinitionsDocument getPrevDocument(Document d) {", "-      INavigatorItem item = getIDocGivenODD(getODDForDocument(doc));", "-      INavigatorItem nextitem = _documentNavigator.getPrevious(item);", "-      if (nextitem == item){", "-        // we're at the end, so we need to rewind", "-        // and return doc at the very beginning", "-        int i = -1;", "-        do {", "-          item=nextitem;", "-          nextitem = _documentNavigator.getNext(item);", "-          i++;", "-        } while(nextitem != item);", "-        return getPrevDocHelper(nextitem);//getODDGivenIDoc(nextitem);", "-      }", "-      else return getPrevDocHelper(nextitem);//getODDGivenIDoc(nextitem);", "-    } ", "-    catch(DocumentClosedException dce) { return getPrevDocument(doc); }", "+      OpenDefinitionsDocument doc = getODDForDocument(d);", "+      OpenDefinitionsDocument nextdoc = _documentNavigator.getPrevious(doc);", "+      if (nextdoc != doc) return getPrevDocHelper(nextdoc);", "+      // we're at the end, so we need to rewind", "+      // and return doc at the very beginning", "+      do {", "+        doc = nextdoc;", "+        nextdoc = _documentNavigator.getNext(doc);", "+      } while (nextdoc != doc);", "+      return getPrevDocHelper(nextdoc);", "+    }", "+    catch(DocumentClosedException dce) { return getPrevDocument(d); }  // doesn't this line create an infinite loop?"]}], "num": 12714}