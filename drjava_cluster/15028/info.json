{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42f54950545776e2c799446d9c7f99d6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1128f3978100c0fcbc8411f1f51a8fc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 148, "signatureBeforeChange": "   private void _loadProject(ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(ProjectFileIR ir) throws IOException", "diff": ["-    try { getDebugger().removeAllBreakpoints(); }", "-    catch(DebugException de) { /* ignore, just don't remove old breakpoints */ }", "+    getBreakpointManager().clearRegions();", "-                                           dbd.isEnabled()); ", "+                                       dbd.isEnabled()); ", "+    }", "+    ", "+    // set bookmarks", "+    getBookmarkManager().clearRegions();", "+    for (final DocumentRegion bm: ir.getBookmarks()) {", "+      final OpenDefinitionsDocument odd = getDocumentForFile(bm.getFile());", "+      getBookmarkManager().addRegion(new DocumentRegion() {", "+          public OpenDefinitionsDocument getDocument() { return odd; }", "+          public File getFile() throws FileMovedException { return odd.getFile(); }", "+          public int getStartOffset() { return bm.getStartOffset(); }", "+          public int getEndOffset() { return bm.getEndOffset(); }", "+      });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec94b17d37ec2b92360fd6505a0fa49a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindResultsPanel.java", "commitBeforeChange": "6d55d86705248616cac5b324a7c528485ceb6104", "commitAfterChange": "d9483f6c228cd09f3431ad6b50a3d96bdaf83832", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void _bookmark()", "signatureAfterChange": "   private void _bookmark()", "diff": ["-      DocumentRegion bookmark = _model.getBookmarkManager().getRegionOverlapping(r.getDocument(),", "-                                                                                 r.getStartOffset(),", "-                                                                                 r.getEndOffset());", "-      if (bookmark==null) {", "+      DocumentRegion bookmark = ", "+        _model.getBookmarkManager().getRegionOverlapping(r.getDocument(), r.getStartOffset(), r.getEndOffset());", "+      if (bookmark == null) {", "-          _model.getBookmarkManager().addRegion(new SimpleDocumentRegion(r.getDocument(), r.getDocument().getFile(), r.getStartOffset(), r.getEndOffset()));", "+          DocumentRegion newR = ", "+            new SimpleDocumentRegion(r.getDocument(), r.getDocument().getFile(), r.getStartOffset(), r.getEndOffset());", "+          _model.getBookmarkManager().addRegion(newR);"]}], "num": 15028}