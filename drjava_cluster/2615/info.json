{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f43fde08fb87243959b83663e6159e5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ad3a85a144ed59aecc8234808cf6eed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void testMatchBraceText()", "signatureAfterChange": "   public void testMatchBraceText()", "diff": ["-        _result = _frame.getFileNameField();", "-    Utilities.clearEventQueue(); ", "+    Utilities.invokeAndWait(new Runnable() { public void run() {  _result = _frame.getFileNameField(); } });", "-", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() { ", "-        definitions.setCaretPosition(115); ", "-        _result = _frame.getFileNameField();", "-      } ", "-    });", "+    Utilities.invokeAndWait(new Runnable() { public void run() {  definitions.setCaretPosition(115); } });", "+    // Complete the actions spawned by the preceding command before executing the following command", "+    Utilities.invokeAndWait(new Runnable() { public void run() {  _result = _frame.getFileNameField(); } });", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() { ", "-        definitions.setCaretPosition(102);", "-        _result = _frame.getFileNameField();", "-      } ", "-    });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { definitions.setCaretPosition(102);  } });", "+    // Complete the actions spawned by the preceding command before executing the following command", "+    Utilities.invokeAndWait(new Runnable() { public void run() {  _result = _frame.getFileNameField(); } });", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() { ", "-        definitions.setCaretPosition(119); ", "-        _result = _frame.getFileNameField();", "-      } ", "-    });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { definitions.setCaretPosition(119); } });", "+    // Complete the actions spawned by the preceding command before executing the following command", "+    Utilities.invokeAndWait(new Runnable() { public void run() {  _result = _frame.getFileNameField(); } });", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() { ", "-        definitions.setCaretPosition(121); ", "-        _result = _frame.getFileNameField();", "-      } ", "-    });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { definitions.setCaretPosition(121); } });", "+    // Complete the actions spawned by the preceding command before executing the following command", "+    Utilities.invokeAndWait(new Runnable() { public void run() {  _result = _frame.getFileNameField(); } });", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() { ", "-        definitions.setCaretPosition(122);", "-        _result = _frame.getFileNameField();", "-      } ", "-    });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { definitions.setCaretPosition(122); } });", "+    // Complete the actions spawned by the preceding command before executing the following command", "+    Utilities.invokeAndWait(new Runnable() { public void run() {  _result = _frame.getFileNameField(); } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ffcb22e38d48016add289ef8b6d29e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testMetaKeyPress() throws BadLocationException", "signatureAfterChange": "   public void testMetaKeyPress() throws BadLocationException", "diff": ["-    DefinitionsPane definitions = _frame.getCurrentDefPane();", "-    OpenDefinitionsDocument doc = definitions.getOpenDefDocument();", "+    final DefinitionsPane definitions = _frame.getCurrentDefPane();", "+    final OpenDefinitionsDocument doc = definitions.getOpenDefDocument();", "-    // The following is the sequence of key events that happen when the user presses Meta-a", "-    definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "-                                             InputEvent.META_MASK, KeyEvent.VK_META, KeyEvent.CHAR_UNDEFINED));", "+    ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        // The following is the sequence of key events that happen when the user presses Meta-a", "+        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "+                                                 InputEvent.META_MASK, KeyEvent.VK_META, KeyEvent.CHAR_UNDEFINED));", "+      }", "+    });", "+        ", "-    definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "-                                             InputEvent.META_MASK, KeyEvent.VK_W, KeyEvent.CHAR_UNDEFINED));", "+    ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "+                                                 InputEvent.META_MASK, KeyEvent.VK_W, KeyEvent.CHAR_UNDEFINED));", "+      }", "+    });", "+    ", "-    definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_TYPED, (new Date()).getTime(),", "-                                             InputEvent.META_MASK, KeyEvent.VK_UNDEFINED, 'w'));", "+        ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_TYPED, (new Date()).getTime(),", "+                                                 InputEvent.META_MASK, KeyEvent.VK_UNDEFINED, 'w'));", "+        ", "+      }", "+    });", "+    ", "-    definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "-                                             InputEvent.META_MASK, KeyEvent.VK_W, KeyEvent.CHAR_UNDEFINED));", "+    ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "+                                                 InputEvent.META_MASK, KeyEvent.VK_W, KeyEvent.CHAR_UNDEFINED));", "+        ", "+      }", "+    });", "+    ", "-    definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "-                                             0, KeyEvent.VK_META, KeyEvent.CHAR_UNDEFINED));", "+    ", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "+                                                 0, KeyEvent.VK_META, KeyEvent.CHAR_UNDEFINED));", "+      }", "+    });", "+    ", "+    ", "+    _log.log(\"testMetaKeyPress completed\");"]}], "num": 2615}