{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "856d2c1a8e01a13c23c75a830c855ec9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dd471d6751fcb8250d877940673ba6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SimpleDocumentRegion.java", "commitBeforeChange": "4112616b1ce28969d60557086cc430b2ecabe131", "commitAfterChange": "7cfeeaf9345ca550653b259e08abe84024ba9934", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public SimpleDocumentRegion(OpenDefinitionsDocument doc, File file, int so, int eo)", "signatureAfterChange": "   public SimpleDocumentRegion(OpenDefinitionsDocument doc, File file, int so, int eo)", "diff": ["-  /** Create a new simple document region. */", "+    */", "+    if (_doc!=null) {", "+      try {", "+        _startPos = _doc.createPosition(so);", "+        _endPos = _doc.createPosition(eo);", "+      }", "+      catch(javax.swing.text.BadLocationException e) { /* ignore, offset will be static */ }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdba05ce8b01b7dbf78bae86f525f648", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/FileFinderTest.java", "commitBeforeChange": "52e75c08548a33d68da52ba945e927947c13bd71", "commitAfterChange": "bc2ff71530c43866f8f779132c88a0e166f012d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testFindFile()", "signatureAfterChange": "      public void testFindFile()", "diff": ["-  public void testFindFile()", "-  {", "+  public void testFindFile() {", "-    try", "-    {", "+    try {", "-    catch(IOException ioe)", "-    {", "+    catch(IOException ioe) {", "+    //When running the ant script for testing this is the relative path to the directory that contains this file", "+    ff.addPath(\"dynamicjava/interpreter\");", "+    ", "+    //Try to find a file that does exist, namely this current file", "+    try {", "+      thisFile = ff.findFile(\"Interpreter.java\");", "+      assertTrue(\"Found This File\", thisFile != null);", "+    }", "+    catch(IOException ioe) {", "+      fail();", "+    }", "+    ", "+    ", "-    try", "-    {", "+    try {", "-    catch(IOException fnf)", "-    {", "+    catch(IOException fnf) {"]}], "num": 7387}