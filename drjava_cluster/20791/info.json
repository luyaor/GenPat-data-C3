{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a9024390396c4086c6d0b9d1e70f1e9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "048cda0cb9db0cc262d43b2a17ddc889", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fa3227bd8ed65d422e78bb16b48f5f807a121783", "commitAfterChange": "b91661a64fee7b8cdd1ac1251ccb6b9269f4f733", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "      private void _toggleBreakpoint()", "signatureAfterChange": "      private void _toggleBreakpoint()", "diff": ["+    OpenDefinitionsDocument doc = _model.getActiveDocument();", "+    try {", "+      _model.getDebugManager().", "+        setBreakpoint(doc, doc.getDocument().getCurrentLine());", "+    }", "+    catch (IOException ioe) {", "+      _showIOError(ioe);", "+    }", "+    catch (ClassNotFoundException cnfe) {", "+      _showClassNotFoundError(cnfe);", "+    }", "+    catch (DebugException de) {", "+      _showDebugError(de);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "474b7cd167722b69b4b5c2cac225ed8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "03dd354632fbfc12bf279640160bfd934404dc39", "commitAfterChange": "2714f88d04f312c23b21ec6a440193d44b7121ba", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "      void open(FileOpenSelector openSelector)", "signatureAfterChange": "      void open(FileOpenSelector openSelector)", "diff": ["+      catch (FileMovedException fme) {", "+        // File was deleted, but use the same name anyway", "+        filename = fme.getFile().getName();", "+      }", "-      _recentFileManager.updateOpenFiles(openDoc.getFile());", "+      try {", "+        _recentFileManager.updateOpenFiles(openDoc.getFile());", "+      }", "+      catch (IllegalStateException ise) {", "+        // Impossible: saved => has a file", "+        throw new UnexpectedException(ise);", "+      }", "+      catch (FileMovedException fme) {", "+        // Recover, show it in the list anyway", "+        _recentFileManager.updateOpenFiles(fme.getFile());", "+      }", "+    }", "+    catch (FileNotFoundException fnf) {", "+      _showFileNotFoundError(fnf);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d86831ad75368dcafc95ae534d6cc0e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ImportationManager.java", "commitBeforeChange": "b432c2a5363ca609f111d7dec3ae5ed814c173ea", "commitAfterChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public Class lookupClass(String cname, String ccname)     throws ClassNotFoundException", "signatureAfterChange": "   public Class lookupClass(String cname, String ccname)     throws ClassNotFoundException", "diff": ["+        ", "-    ", "-        return Class.forName(s, false, classLoader);", "+        try", "+        {", "+          return Class.forName(s, false, classLoader);", "+        } catch (ClassNotFoundException e) {", "+          return findInnerClass(s);         ", "+        }        ", "+     ", "+      } catch (ClassNotFoundException e) {", "+      }", "+    }", "+    //Now look through classes staticly imported with .*; for a static inner class ", "+    it = importOnDemandStaticClauses.iterator();", "+    while (it.hasNext()) {", "+      String s = it.next();", "+      try {", "+        return Class.forName(s+\"$\"+str, false, classLoader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4069b7df0e573b7fa206f2904dc51ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ImportationManagerTest.java", "commitBeforeChange": "9e3824633ee746290537e9b5e107ba2db1504674", "commitAfterChange": "31da1983d1819399d97822faa171f51ddfde661b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "             public void testDeclareMemberStaticImport()", "signatureAfterChange": "             public void testDeclareMemberStaticImport()", "diff": ["-    im.declareMemberStaticImport(\"java.lang.Integer.MAX_VALUE\");", "+    ", "+    try {", "+      im.declareMemberStaticImport(\"java.lang.Integer.MAX_VALUE\");", "+    }", "+    catch(ClassNotFoundException e) {", "+      fail(\"Class java.lang.Integer should be found\");", "+    }", "-    im.declareMemberStaticImport(\"java.lang.Integer.valueOf\");", "+    ", "+    try {", "+      im.declareMemberStaticImport(\"java.lang.Integer.valueOf\");", "+    }", "+    catch(ClassNotFoundException e) {", "+      fail(\"Class java.lang.Integer should be found\");", "+    }", "-    im.declareMemberStaticImport(\"javax.security.auth.login.AppConfigurationEntry.LoginModuleControlFlag\");", "+    try {", "+      im.declareMemberStaticImport(\"javax.security.auth.login.AppConfigurationEntry.LoginModuleControlFlag\");", "+    }", "+    catch(ClassNotFoundException e) {", "+      fail(\"Class javax.security.auth.login.AppConfigurationEntry should be found\");", "+    }", "-    im.declareMemberStaticImport(\"javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout\");", "+    ", "+    try {", "+      im.declareMemberStaticImport(\"javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout\");", "+    }", "+    catch(ClassNotFoundException e) {", "+      fail(\"Class javax.swing.plaf.basic.BasicOptionPaneUI should be found\");", "+    }", "-    im.declareMemberStaticImport(\"java.lang.Integer.toString\");", "+    ", "+    try {", "+      im.declareMemberStaticImport(\"java.lang.Integer.toString\");", "+    }", "+    catch(ClassNotFoundException e) {", "+      fail(\"Class java.lang.Integer should be found\");", "+    }"]}], "num": 20791}