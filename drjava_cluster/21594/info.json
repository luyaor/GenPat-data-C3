{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19f0d18ad7ad83d957d43534fbe2f66d", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d391b270d7459ca3940095cb708a5b1a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 37, "signatureBeforeChange": "     @Override public Type visit(InnerAllocation node)", "signatureAfterChange": "     @Override public Type visit(InnerAllocation node)", "diff": ["-        catch (TypeSystemException e) {", "+        catch (UnmatchedLookupException e) {", "-          throw new ExecutionError(\"no.such.constructor\", node);", "+          if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.constructor\", node); }", "+          else { throw new ExecutionError(\"no.such.constructor\", node); }", "-      catch (TypeSystemException e) {", "+      catch (UnmatchedLookupException e) {", "-        throw new ExecutionError(\"no.such.inner.class\", node);", "+        if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.inner.class\", node); }", "+        else { throw new ExecutionError(\"no.such.inner.class\", node); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb86a6c3939ace1b284624fd7e727a49", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "commitAfterChange": "d00e0fe6f02f0704b0308587aa3c8b683ceed0a6", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": "     @Override public Type visit(AnonymousInnerAllocation node)", "signatureAfterChange": "     @Override public Type visit(AnonymousInnerAllocation node)", "diff": ["-        catch (TypeSystemException e) {", "+        catch (UnmatchedLookupException e) {", "-          throw new ExecutionError(\"no.such.constructor\", node);", "+          if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.constructor\", node); }", "+          else { throw new ExecutionError(\"no.such.constructor\", node); }", "-      catch (TypeSystemException e) {", "+      catch (UnmatchedLookupException e) {", "-        throw new ExecutionError(\"no.such.inner.class\", node);", "+        if (e.matches() > 1) { throw new ExecutionError(\"ambiguous.inner.class\", node); }", "+        else { throw new ExecutionError(\"no.such.inner.class\", node); }"]}], "num": 21594}