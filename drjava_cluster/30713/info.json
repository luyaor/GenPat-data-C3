{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ac99729dac03906793f0f63f0fdded2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7d0a27f217df8e7c414b6dda9d46dca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "714a91a3f9a91ffe3e5ee9ae0bd0c977c7aa4e31", "commitAfterChange": "86cce18ff80f67b178e899650f588fd3636436b4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   static boolean handleCommandLineArgs(String[] args)", "signatureAfterChange": "   static boolean handleCommandLineArgs(String[] args)", "diff": ["+    boolean heapSizeGiven = false;  // indicates whether args includes an argument of the form -Xmx<number>", "-        ", "-      else if ((arg.length() > 1) && (arg.substring(0,2).equals(\"-X\"))) _jmvArgs.add(arg); ", "+      ", "+      else if ((arg.length() > 1) && (arg.substring(0,2).equals(\"-X\"))) {", "+        if (arg.substring(0,4).equals(\"-Xmx\")) heapSizeGiven = true;", "+        _jvmArgs.add(arg); ", "+      }", "+    ", "+    String jvmArgString = getConfig().getSetting(MASTER_JVM_ARGS);", "+    List<String> jvmArgs = ArgumentTokenizer.tokenize(jvmArgString);", "+    if (jvmArgs != null && jvmArgs.size() != 0) _jvmArgs.addAll(jvmArgs);", "+    ", "+    if (! heapSizeGiven && ! jvmArgString.contains(\"-Xmx\")) _jvmArgs.add(DEFAULT_MAX_HEAP_SIZE_ARG);", "+        ", "+    _log.log(\"_jvmArgs = \" + _jvmArgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db3dd01ad3ec9d21d524a24baf9c4288", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "commitAfterChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 42, "signatureBeforeChange": "   private void _doStartup()", "signatureAfterChange": "   private void _doStartup()", "diff": ["-  /** Call invokeSlave with the appropriate JVMBuilder.  Defined here to allow for multiple attempts. */", "+  /** Call invokeSlave with the appropriate JVMBuilder. */", "-    Iterable<File> classPath;", "-    List<String> jvmArgs = new ArrayList<String>();", "-    File dir;", "-    synchronized (_startupLock) {", "-      if (_allowAssertions) { jvmArgs.add(\"-ea\"); }", "-      classPath = _startupClassPath;", "-      dir = _workingDir;", "-    }", "+    File dir = _workingDir;", "+", "+    List<String> jvmArgs = new ArrayList<String>();", "+    if (_allowAssertions) { jvmArgs.add(\"-ea\"); }", "-    invokeSlave(new JVMBuilder(classPath).directory(dir).jvmArguments(jvmArgs));", "+    invokeSlave(new JVMBuilder(_startupClassPath).directory(dir).jvmArguments(jvmArgs));"]}], "num": 30713}