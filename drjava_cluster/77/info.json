{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7ec1e843c10d6605dd0791842a6b169", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05805e45e7f876b973ce7502039b413e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/InteractionsDocument.java", "commitBeforeChange": "3101443d576fa6f63ae40ca208e243a26acf0b6b", "commitAfterChange": "0f5802fd0bfcac88fdf9ed629119c5b60fc353ef", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public void eval()", "signatureAfterChange": "    public void eval()", "diff": ["-\t\t\t\t super.insertString(getLength(), String.valueOf(result) + \"\\n\", null);", "+\t\t\t\t super.insertString(getLength(), \"\\n\" + String.valueOf(result)", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ \"\\n\", null);", "+\t\t\telse", "+\t\t\t\tsuper.insertString(getLength(), \"\\n\", null);", "+\t\t\tSystem.out.println(\"\\n\\nhey!!!!!!\\n\\n\");", "-\t\t\t\t\t\tsuper.insertString(getLength(), \"Error in evaluation: \" +", "+\t\t\t\t\t\tsuper.insertString(getLength(), \"\\nError in evaluation: \" +", "-\t\t\t\t\t\tsuper.insertString(getLength(), \"Error in evaluation: \" + e + \"\\n\", null);", "+\t\t\t\t\t\tsuper.insertString(getLength(), \"\\nError in evaluation: \" + e + \"\\n\", null);", "-  }", "+\t\tSystem.out.println(\"\\n\\neval done!!!!!!\\n\\n\");", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08ffd1f4bc90ea60886c01d69c4e8aea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "3101443d576fa6f63ae40ca208e243a26acf0b6b", "commitAfterChange": "0f5802fd0bfcac88fdf9ed629119c5b60fc353ef", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public void eval()", "signatureAfterChange": "    public void eval()", "diff": ["-\t\t\t\t super.insertString(getLength(), String.valueOf(result) + \"\\n\", null);", "+\t\t\t\t super.insertString(getLength(), \"\\n\" + String.valueOf(result)", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ \"\\n\", null);", "+\t\t\telse", "+\t\t\t\tsuper.insertString(getLength(), \"\\n\", null);", "+\t\t\tSystem.out.println(\"\\n\\nhey!!!!!!\\n\\n\");", "-\t\t\t\t\t\tsuper.insertString(getLength(), \"Error in evaluation: \" +", "+\t\t\t\t\t\tsuper.insertString(getLength(), \"\\nError in evaluation: \" +", "-\t\t\t\t\t\tsuper.insertString(getLength(), \"Error in evaluation: \" + e + \"\\n\", null);", "+\t\t\t\t\t\tsuper.insertString(getLength(), \"\\nError in evaluation: \" + e + \"\\n\", null);", "-  }", "+\t\tSystem.out.println(\"\\n\\neval done!!!!!!\\n\\n\");", "+\t}"]}], "num": 77}