{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "963c2a9b658f57930fbc1067c3a320f5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "556e1b67d698273f0c8f028e552c0d46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testSwitchActiveInterpreter() throws InterruptedException", "signatureAfterChange": "   public void testSwitchActiveInterpreter() throws InterruptedException", "diff": ["-    synchronized(_testLock) {", "-      _jvm.interpret(\"x = 6;\");", "-      _testLock.wait();", "-    }", "-    _jvm.addJavaInterpreter(\"monkey\");", "+    debug.logStart();", "+    ", "+    _jvm.interpret(\"int x = 6;\");", "+    _jvm.addInterpreter(\"monkey\");", "-    synchronized(_testLock) {", "-      _jvm.interpret(\"x\");", "-      _testLock.wait();", "-      assertEquals(\"result\", \"6\", _jvm.returnBuf);", "-    }", "+    _jvm.interpret(\"x\");", "+    assertEquals(\"result\", \"6\", _jvm.returnBuf);", "-    synchronized(_testLock) {", "-      _jvm.interpret(\"x\");", "-      _testLock.wait();", "-      assertTrue(\"exception was thrown\",", "-                 !_jvm.exceptionClassBuf.equals(\"\"));", "-    }", "+    _jvm.interpret(\"x\");", "+    assertNotNull(\"exception was thrown\", _jvm.exceptionMsgBuf);", "-    synchronized(_testLock) {", "-      _jvm.interpret(\"x = 3;\");", "-      _testLock.wait();", "-    }", "+    _jvm.interpret(\"int x = 3;\");", "-    synchronized(_testLock) {", "-      _jvm.interpret(\"x\");", "-      _testLock.wait();", "-      assertEquals(\"result\", \"6\", _jvm.returnBuf);", "-    }", "+    _jvm.interpret(\"x\");", "+    assertEquals(\"result\", \"6\", _jvm.returnBuf);", "-//     synchronized(_testLock) {", "-//       _testLock.wait();", "-", "+    debug.logEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81973866f2e7e0fd4c1ac6ef2bdc1980", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testPrintln() throws Throwable", "signatureAfterChange": "     public void testPrintln() throws Throwable", "diff": ["+    debug.logStart();", "-    synchronized(_testLock) {", "-      _jvm.interpret(\"System.err.print(\\\"err\\\");\");", "-      _testLock.wait(); // wait for println", "-//      _testLock.wait(); // wait for void return", "-      assertEquals(\"system err buffer\", \"err\", _jvm.errBuf);", "-      assertEquals(\"void return flag\", true, _jvm.voidReturnFlag);", "-      _jvm.resetFlags();", "-    }", "+    ", "+    _jvm.interpret(\"System.err.print(\\\"err\\\");\");", "+    assertEquals(\"system err buffer\", \"err\", _jvm.errBuf);", "+    //assertEquals(\"void return flag\", true, _jvm.voidReturnFlag);", "+    _jvm.resetFlags();", "-    synchronized(_testLock) {", "-      _jvm.interpret(\"System.err.print(\\\"err2\\\");\");", "-      _testLock.wait(); // wait for println", "-//      _testLock.wait(); // wait for void return", "-      assertEquals(\"system err buffer\", \"err2\", _jvm.errBuf);", "-      assertEquals(\"void return flag\", true, _jvm.voidReturnFlag);", "-      _jvm.resetFlags();", "-    }", "+    _jvm.interpret(\"System.err.print(\\\"err2\\\");\");", "+    assertEquals(\"system err buffer\", \"err2\", _jvm.errBuf);", "+    //assertEquals(\"void return flag\", true, _jvm.voidReturnFlag);", "+    _jvm.resetFlags();", "-    synchronized(_testLock) {", "-      _jvm.interpret(\"System.out.print(\\\"out\\\");\");", "-      _testLock.wait(); // wait for println", "-//      _testLock.wait(); // wait for void return", "-      assertEquals(\"system out buffer\", \"out\", _jvm.outBuf);", "-      assertEquals(\"void return flag\", true, _jvm.voidReturnFlag);", "-    }", "+    _jvm.interpret(\"System.out.print(\\\"out\\\");\");", "+    assertEquals(\"system out buffer\", \"out\", _jvm.outBuf);", "+    //assertEquals(\"void return flag\", true, _jvm.voidReturnFlag);", "+    ", "+    debug.logEnd();"]}], "num": 10519}