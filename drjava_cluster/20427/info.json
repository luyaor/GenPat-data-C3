{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f8ac4abc36fece4379711c4d830ee6d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84be5a441b663f38b28da4edb27fa116", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringView.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected int drawUnselectedText(Graphics g, int x, int y, int start, int end) throws BadLocationException", "signatureAfterChange": "   protected int drawUnselectedText(Graphics g, int x, int y, int start, int end) throws BadLocationException", "diff": ["-//    _doc.acquireReadLock();", "-//    try {", "-    ", "-    ArrayList<HighlightStatus> stats = _doc._getHighlightStatus(start, end);", "-    if (stats.size() < 1) throw  new RuntimeException(\"GetHighlightStatus returned nothing!\");", "-    ", "-    for (HighlightStatus stat: stats) {", "-      int location = stat.getLocation();", "-      int length = stat.getLength();", "+    _doc.acquireReadLock();", "+    try {", "-      // If this highlight status extends past p1, end at p1", "-      if (location + length > end) length = end - stat.getLocation();", "+      ArrayList<HighlightStatus> stats = _doc._getHighlightStatus(start, end);", "+      if (stats.size() < 1) throw  new RuntimeException(\"GetHighlightStatus returned nothing!\");", "-      if (! (_doc instanceof InteractionsDJDocument) || ", "-          ! ((InteractionsDJDocument)_doc).setColoring((start + end)/2, g))      ", "-        setFormattingForState(g, stat.getState());", "-      Segment text = getLineBuffer(); ", "-      _doc.getText(location, length, text);", "-      x = Utilities.drawTabbedText(text, x, y, g, this, location);  // updates x on each iteration", "+      for (HighlightStatus stat: stats) {", "+        int location = stat.getLocation();", "+        int length = stat.getLength();", "+        ", "+        // If this highlight status extends past p1, end at p1", "+        if (location + length > end) length = end - stat.getLocation();", "+        ", "+        if (! (_doc instanceof InteractionsDJDocument) || ", "+            ! ((InteractionsDJDocument)_doc).setColoring((start + end)/2, g))      ", "+          setFormattingForState(g, stat.getState());", "+        Segment text = getLineBuffer(); ", "+        _doc.getText(location, length, text);", "+        x = Utilities.drawTabbedText(text, x, y, g, this, location);  // updates x on each iteration", "+      }", "-//    }", "-//    finally { _doc.releaseReadLock(); }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ceed4fc0516ac88316cabf3bb7ddd04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocumentTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void xtestStylesListContentAndReset() throws EditDocumentException, InterruptedException", "signatureAfterChange": "   public void xtestStylesListContentAndReset() throws EditDocumentException, InterruptedException", "diff": ["-//    _doc.acquireReadLock();       // assures that any pending updates to _doc have been performed", "-//    try {", "-    assertEquals(\"StylesList after reset should contain 2 pairs\", 2, _adapter.getStyles().length);", "-    ", "-    assertEquals(\"The first element pushed on StylesList after reset should be\", styleElt1,", "-                 _adapter.getStyles()[1].toString());", "-    assertEquals(\"The second element pushed on StylesList after reset should be\", styleElt2,", "-                 _adapter.getStyles()[0].toString());", "-//    }", "-//    finally { _doc.releaseReadLock(); }", "+    _doc.acquireReadLock();       // assures that any pending updates to _doc have been performed", "+    try {", "+      assertEquals(\"StylesList after reset should contain 2 pairs\", 2, _adapter.getStyles().length);", "+      ", "+      assertEquals(\"The first element pushed on StylesList after reset should be\", styleElt1,", "+                   _adapter.getStyles()[1].toString());", "+      assertEquals(\"The second element pushed on StylesList after reset should be\", styleElt2,", "+                   _adapter.getStyles()[0].toString());", "+    }", "+    finally { _doc.releaseReadLock(); }"]}], "num": 20427}