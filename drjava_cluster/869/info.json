{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61d9c7196051f93d6389fc3ebc971097", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39712686c1dd9bdbc930a3fce2d38a13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 441, "methodNumberAfterChange": 441, "signatureBeforeChange": "\r \r   public void forPlusExpression(PlusExpression that)", "signatureAfterChange": "    public void forPlusExpression(PlusExpression that)", "diff": ["-\r", "-  public void forPlusExpression(PlusExpression that) {\r", "-    forPlusExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getLeft().visit(this);\r", "-    that.getRight().visit(this);\r", "-    forPlusExpressionOnly(that);\r", "-  }\r", "+", "+  public void forPlusExpression(PlusExpression that) {", "+    forPlusExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getLeft().visit(this);", "+    that.getRight().visit(this);", "+    forPlusExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "654394f0c354d8a70db36b25c79da305", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 439, "methodNumberAfterChange": 439, "signatureBeforeChange": "\r \r   public void forRightSignedShiftExpression(RightSignedShiftExpression that)", "signatureAfterChange": "    public void forRightSignedShiftExpression(RightSignedShiftExpression that)", "diff": ["-\r", "-  public void forRightSignedShiftExpression(RightSignedShiftExpression that) {\r", "-    forRightSignedShiftExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getLeft().visit(this);\r", "-    that.getRight().visit(this);\r", "-    forRightSignedShiftExpressionOnly(that);\r", "-  }\r", "+", "+  public void forRightSignedShiftExpression(RightSignedShiftExpression that) {", "+    forRightSignedShiftExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getLeft().visit(this);", "+    that.getRight().visit(this);", "+    forRightSignedShiftExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "673a471899978562eba19405460b5046", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 440, "methodNumberAfterChange": 440, "signatureBeforeChange": "\r \r   public void forRightUnsignedShiftExpression(RightUnsignedShiftExpression that)", "signatureAfterChange": "    public void forRightUnsignedShiftExpression(RightUnsignedShiftExpression that)", "diff": ["-\r", "-  public void forRightUnsignedShiftExpression(RightUnsignedShiftExpression that) {\r", "-    forRightUnsignedShiftExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getLeft().visit(this);\r", "-    that.getRight().visit(this);\r", "-    forRightUnsignedShiftExpressionOnly(that);\r", "-  }\r", "+", "+  public void forRightUnsignedShiftExpression(RightUnsignedShiftExpression that) {", "+    forRightUnsignedShiftExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getLeft().visit(this);", "+    that.getRight().visit(this);", "+    forRightUnsignedShiftExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d807f14f967598de2750df26b7d8768d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 438, "methodNumberAfterChange": 438, "signatureBeforeChange": "\r \r   public void forLeftShiftExpression(LeftShiftExpression that)", "signatureAfterChange": "    public void forLeftShiftExpression(LeftShiftExpression that)", "diff": ["-\r", "-  public void forLeftShiftExpression(LeftShiftExpression that) {\r", "-    forLeftShiftExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getLeft().visit(this);\r", "-    that.getRight().visit(this);\r", "-    forLeftShiftExpressionOnly(that);\r", "-  }\r", "+", "+  public void forLeftShiftExpression(LeftShiftExpression that) {", "+    forLeftShiftExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getLeft().visit(this);", "+    that.getRight().visit(this);", "+    forLeftShiftExpressionOnly(that);", "+  }"]}], "num": 869}