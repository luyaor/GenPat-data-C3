{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51f0205d56249f80da7f42590d54c64e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b1219eae2862868c4c5735315985589", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testCompileAllWithNoFiles() throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAllWithNoFiles() throws BadLocationException, IOException, InterruptedException", "diff": ["-    Utilities.invokeLater(new Runnable() { ", "-      public void run() { ", "-        try { _model.getCompilerModel().compileAll(); } ", "-        catch(Exception e) { throw new UnexpectedException(e); }", "-      }", "-    });", "+    _model.getCompilerModel().compileAll();", "-    _log.log(\"testCompileAllWithNoFiles complete\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b563999d8fd91c36b19297dbfc6e28cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected void changeDocumentText(final String s, final OpenDefinitionsDocument doc)", "signatureAfterChange": "   protected void changeDocumentText(String s, OpenDefinitionsDocument doc) throws BadLocationException", "diff": ["-  protected void changeDocumentText(final String s, final OpenDefinitionsDocument doc) /*throws BadLocationException */{", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() {", "-        try{", "-          doc.clear();", "-          assertLength(0, doc);", "-          doc.append(s, null);", "-          assertModified(true, doc);", "-          assertContents(s, doc);", "-        }", "-        catch(BadLocationException e) { throw new UnexpectedException(e); }", "-      }", "-    });", "+  protected void changeDocumentText(String s, OpenDefinitionsDocument doc) throws BadLocationException {", "+    doc.clear();", "+    assertLength(0, doc);", "+    doc.append(s, null);", "+    assertModified(true, doc);", "+    assertContents(s, doc);"]}], "num": 26756}