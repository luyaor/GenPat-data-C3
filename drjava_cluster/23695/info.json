{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e77ef270bfd26c466bd8e87d2217693", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2862ff99e5dbcf60044bc444d0a1f0b4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/NewVersionPopup.java", "commitBeforeChange": "69317eecda3235d4815eb5d9a5b9e536b8481c4a", "commitAfterChange": "3549437d3f0aec05949cb330cf74662cd269bb15", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "      protected void updateAction()", "signatureAfterChange": "      protected void updateAction()", "diff": ["-          final File targetFile = getTargetFile();", "-          LOG.log(\"\\ttargetFile = \" + targetFile);", "+          final File targetFile = FileOps.getDrJavaApplicationFile();", "+          LOG.log(\"\\ttargetFile = \"+targetFile);", "-          LOG.log(\"\\tfileName = \" + fileName);", "+          LOG.log(\"\\tfileName = \"+fileName);", "-          LOG.log(\"Downloading to \" + destFile);", "+          LOG.log(\"Downloading to \"+destFile);", "-            LOG.log(\"Searching for \" + macTarFile);", "+            LOG.log(\"Searching for \"+macTarFile);", "-                LOG.log(\"Searching for \" + macTarFile);", "+                LOG.log(\"Searching for \"+macTarFile);", "-          BufferedInputStream tempClassIn = new BufferedInputStream(new FileInputStream(getDrJavaFile()));", "+          BufferedInputStream tempClassIn = new BufferedInputStream(new FileInputStream(FileOps.getDrJavaFile()));", "-          LOG.log(\"Copied drjava.jar to \" + tempClassFile);", "+          LOG.log(\"Copied drjava.jar to \"+tempClassFile);", "-          LOG.log(\"fileURL = \" + fileURL);", "+          LOG.log(\"fileURL = \"+fileURL);", "-          ProgressMonitorInputStream pin = new ProgressMonitorInputStream(_mainFrame, \"Downloading \" + fileName + \" ...\", in);", "+          ProgressMonitorInputStream pin = new ProgressMonitorInputStream(_mainFrame, \"Downloading \"+fileName+\" ...\", in);", "-          LOG.log(\"Downloaded to \" + destFile);", "+          LOG.log(\"Downloaded to \"+destFile);", "-                LOG.log(\"Exception in shutdown hook: \" + e);", "+                LOG.log(\"Exception in shutdown hook: \"+e);", "-                                              \"A new version of DrJava was downloaded. However,\\n\" + ", "-                                              \"it could not be started automatically.\\n\\n\" + ", "-                                              \"The new copy is now installed at:\\n\" + ", "-                                              finalDestFile.getAbsolutePath() + \"\\n\\n\" + ", "-                                              \"The old copy is still installed at:\\n\" + ", "-                                              targetFile.getAbsolutePath() + \"\\n\\n\" + ", "+                                              \"A new version of DrJava was downloaded. However,\\n\"+", "+                                              \"it could not be started automatically.\\n\\n\"+", "+                                              \"The new copy is now installed at:\\n\"+", "+                                              finalDestFile.getAbsolutePath()+\"\\n\\n\"+", "+                                              \"The old copy is still installed at:\\n\"+", "+                                              targetFile.getAbsolutePath()+\"\\n\\n\"+", "-                                        \"A new version of DrJava was downloaded. However, you chose\\n\" + ", "-                                        \"not to restart DrJava, so the old version was not automatically\\n\" + ", "-                                        \"replaced.\\n\\n\" + ", "-                                        \"The new copy is now installed at:\\n\" + ", "-                                        finalDestFile.getAbsolutePath() + \"\\n\\n\" + ", "-                                        \"The old copy is still installed at:\\n\" + ", "+                                        \"A new version of DrJava was downloaded. However, you chose\\n\"+", "+                                        \"not to restart DrJava, so the old version was not automatically\\n\"+", "+                                        \"replaced.\\n\\n\"+", "+                                        \"The new copy is now installed at:\\n\"+", "+                                        finalDestFile.getAbsolutePath()+\"\\n\\n\"+", "+                                        \"The old copy is still installed at:\\n\"+", "-        catch(IOException e) { abortUpdate(\"Error installing update:\\n\" + e.getMessage()); return; }", "+        catch(IOException e) { abortUpdate(\"Error installing update:\\n\"+e.getMessage()); return; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a499be068349af628f0bb600671536e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/DrJavaPropertySetup.java", "commitBeforeChange": "8e569af46a88cae172ec5b0bba88bf6a2db601b4", "commitAfterChange": "0e2962e67fbd4bb0610b6df816f609e60a33a28f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static void setup()", "signatureAfterChange": "   public static void setup()", "diff": ["-    PropertyMaps.TEMPLATE.setProperty(\"Config\", new DrJavaProperty(\"config.master.jvm.args.combined\",", "-                                                                   \"This property contains all the JVM arguments passed \"+", "-                                                                   \"to DrJava's master JVM, i.e. the JVM the user is editing \"+", "-                                                                   \"programs in. The arguments from the \\\"JVM Args for \"+", "-                                                                   \"Main JVM\\\" and the special -X arguments from \\\"Maximum \"+", "-                                                                   \"Heap Size for Main JVM\\\" are combined.\") {", "+    PropertyMaps.TEMPLATE.setProperty(\"Config\", new EagerProperty(\"config.master.jvm.args.combined\",", "+                                                                  \"This property contains all the JVM arguments passed \"+", "+                                                                  \"to DrJava's master JVM, i.e. the JVM the user is editing \"+", "+                                                                  \"programs in. The arguments from the \\\"JVM Args for \"+", "+                                                                  \"Main JVM\\\" and the special -X arguments from \\\"Maximum \"+", "+                                                                  \"Heap Size for Main JVM\\\" are combined.\") {", "-        StringBuilder sb = new StringBuilder(DrJava.getConfig().getSetting(MASTER_JVM_XMX));", "-        if (sb.length()>0) { sb.append(\" \"); }", "+        StringBuilder sb = new StringBuilder();", "+        if (!DrJava.getConfig().getSetting(MASTER_JVM_XMX).equals(\"default\") &&", "+            !DrJava.getConfig().getSetting(MASTER_JVM_XMX).equals(\"\")) {", "+          sb.append(\"-Xmx\");", "+          sb.append(DrJava.getConfig().getSetting(MASTER_JVM_XMX));", "+          sb.append(\"M \");", "+        }", "-        _value = \"-Xmx\"+sb.toString().trim();", "+        _value = sb.toString().trim();", "-    PropertyMaps.TEMPLATE.setProperty(\"Config\", new DrJavaProperty(\"config.slave.jvm.args.combined\",", "-                                                                   \"This property contains all the JVM arguments passed \"+", "-                                                                   \"to DrJava's master JVM, i.e. the JVM the user is editing \"+", "-                                                                   \"programs in. The arguments from the \\\"JVM Args for \"+", "-                                                                   \"Slave JVM\\\" and the special -X arguments from \\\"Maximum \"+", "-                                                                   \"Heap Size for Main JVM\\\" are combined.\") {", "+    PropertyMaps.TEMPLATE.setProperty(\"Config\", new EagerProperty(\"config.slave.jvm.args.combined\",", "+                                                                  \"This property contains all the JVM arguments passed \"+", "+                                                                  \"to DrJava's master JVM, i.e. the JVM the user is editing \"+", "+                                                                  \"programs in. The arguments from the \\\"JVM Args for \"+", "+                                                                  \"Slave JVM\\\" and the special -X arguments from \\\"Maximum \"+", "+                                                                  \"Heap Size for Main JVM\\\" are combined.\") {", "-        StringBuilder sb = new StringBuilder(DrJava.getConfig().getSetting(SLAVE_JVM_XMX));", "-        if (sb.length()>0) { sb.append(\" \"); }", "+        StringBuilder sb = new StringBuilder();", "+        if (!DrJava.getConfig().getSetting(SLAVE_JVM_XMX).equals(\"default\") &&", "+            !DrJava.getConfig().getSetting(SLAVE_JVM_XMX).equals(\"\")) {", "+          sb.append(\"-Xmx\");", "+          sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_XMX));", "+          sb.append(\"M \");", "+        }", "-        _value = \"-Xmx\"+sb.toString().trim();", "+        _value = sb.toString().trim();"]}], "num": 23695}