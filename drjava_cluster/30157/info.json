{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4588dad0e373fbbd82eacc1b7905641b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96bebf15d0886c5bb6b8192d8339f602", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/EventHandlerThread.java", "commitBeforeChange": "6bfab9f5cad6f12d0935dd59b83d99bfc86909eb", "commitAfterChange": "5aacfadc90765b33349d6f9aff91d50fefd76986", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   synchronized void handleDisconnectedException() throws DebugException", "signatureAfterChange": "   synchronized void handleDisconnectedException() throws DebugException", "diff": ["-   */", "+   *  queue, dealing only with exit events (VMDeath, VMDisconnect) so that we terminate correctly. */", "-          if (event instanceof VMDeathEvent) {", "-            _handleVMDeathEvent((VMDeathEvent)event);", "-          }", "-          else if (event instanceof VMDisconnectEvent) {", "-            _handleVMDisconnectEvent((VMDisconnectEvent)event);", "-          }", "+          if (event instanceof VMDeathEvent) _handleVMDeathEvent((VMDeathEvent)event);", "+          else if (event instanceof VMDisconnectEvent)  _handleVMDisconnectEvent((VMDisconnectEvent)event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e06a81cdaee118172145ac54565cd3ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SimpleDocumentRegion.java", "commitBeforeChange": "d57a4715eeda5394b496008be220f6252b47b950", "commitAfterChange": "ac02f569f5916c295bec9f11458dcf6db5964244", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public SimpleDocumentRegion(OpenDefinitionsDocument doc, File file, int so, int eo)", "signatureAfterChange": "   public SimpleDocumentRegion(OpenDefinitionsDocument doc, int so, int eo)", "diff": ["-  public SimpleDocumentRegion(OpenDefinitionsDocument doc, File file, int so, int eo) {", "-    _doc = doc;", "-    _file = file;", "-    _startOffset = so;", "-    _endOffset = eo;", "-    if (_doc != null) {", "-      try {", "-        _startPosition = _doc.createPosition(so);", "-        _endPosition = _doc.createPosition(eo);", "-      }", "-      catch(javax.swing.text.BadLocationException e) { /* ignore, offset will be static */ }", "-    }", "+  public SimpleDocumentRegion(OpenDefinitionsDocument doc, int so, int eo) {", "+    this(doc, createPosition(doc, so), createPosition(doc, eo));"]}], "num": 30157}