{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5abda4a0a70fc629f55f0498bef71d05", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4056150596fba94593d2ead39598b3f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "09bec3d114e78a39aad7410d5a4ed3ab2cdf1dc4", "commitAfterChange": "8ece0edfbf0fa97c28d74f8231f220f413cd26e5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected ReferenceType _getReferenceTypeForField(String field, Context context)", "signatureAfterChange": "     protected ReferenceType _getReferenceTypeForField(String field, Context context)", "diff": ["-    int index = _indexOfWithinBoundaries(_thisClassName, field);", "+    int index = _indexOfWithinBoundaries(_getFullyQualifiedClassNameForThis(), field);", "-      // field may be of form outerClass$innerClass. ", "+      // field may be of form outerClass$innerClass or", "+      // package.innerClass. ", "+      int lastDot = field.lastIndexOf(\".\");", "+      else {", "+        if (lastDot != -1) {", "+          field = field.substring(lastDot + 1, field.length());", "+        }", "+      }", "-      StringTokenizer st = new StringTokenizer(_thisClassName, \"$\");", "+      StringTokenizer st = new StringTokenizer(_getFullyQualifiedClassNameForThis(), \"$.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d8cbbe842e2dcd9b179ea57d402ef53", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "a42a1005ad3faca50638e0131df3bc7c45ba82de", "commitAfterChange": "0b0e9049d382a4fa995a6c0df7ce197dd950d3eb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected ReferenceType _getReferenceTypeForField(String field, Context context)", "signatureAfterChange": "     protected ReferenceType _getReferenceTypeForField(String field, Context context)", "diff": ["+      // field may be of form outerClass$innerClass. ", "+      // We want to match the inner most class.", "+      int lastDollar = field.lastIndexOf(\"$\");", "+      if (lastDollar != -1) {", "+        field = field.substring(lastDollar + 1, field.length());", "+      }"]}], "num": 20169}