{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d92e21bafaef8b224ba17982142062ff", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "147148a5ab615b8d7b458fbe71ef942e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCacheTest.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void setUp() throws IOException", "signatureAfterChange": "    public void setUp() throws IOException", "diff": ["+", "-    super.setUp();", "+//    super.setUp();", "+    createModel();", "+    ", "+    String user = System.getProperty(\"user.name\");", "+    _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "+    ", "+    _adapterTable = new Hashtable<OpenDefinitionsDocument, DCacheAdapter> ();", "+    _cache.addRegistrationListener(new DocumentCache.RegistrationListener() {", "+      public void registered(OpenDefinitionsDocument odd, DCacheAdapter a) {", "+        _adapterTable.put(odd, a);", "+      }", "+    });", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b113a4658eed8469fa4f43419efa238", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "930b1ef6cc279650a085c7c6499b1b57cb240018", "commitAfterChange": "73b3ce3968c13472938fea3d36b496150c938bd2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public synchronized void shutdown()", "signatureAfterChange": "      public synchronized void shutdown()", "diff": ["+      ", "+      removeAllBreakpoints();", "-      _vm.dispose();", "+        _vm.dispose();", "-        Enumeration<Breakpoint> breakpoints = _breakpoints.elements();", "-        while (breakpoints.hasMoreElements()) {", "-          Breakpoint bp = breakpoints.nextElement();", "-          bp.getDocument().removeBreakpoint(bp);", "-        }", "-        _breakpoints.clear();", "-        ", "+        notifyListeners(new EventNotifier() {", "+          public void notifyListener(DebugListener l) {", "+            l.debuggerShutdown();", "+          }", "+        });"]}], "num": 5851}