{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac1b6c5f5bf69902b98904428a4a7b87", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "402380c3773410f3a098079ce26e6880", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/gui/resource/ResourceManager.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public boolean getBoolean(String key) \tthrows MissingResourceException, ResourceFormatException", "signatureAfterChange": "   public boolean getBoolean(String key) throws MissingResourceException, ResourceFormatException", "diff": ["+   */", "+  public boolean getBoolean(String key) throws MissingResourceException, ResourceFormatException {", "+    String b = getString(key);", "+    ", "+    if (b.equals(\"true\")) return true;", "+    else if (b.equals(\"false\")) return false;", "+    else", "+      throw new ResourceFormatException(\"Malformed boolean\",", "+                                        bundle.getClass().getName(),", "+                                        key);", "+  }", "-     */", "-    public boolean getBoolean(String key)", "-\tthrows MissingResourceException, ResourceFormatException {", "-\tString b = getString(key);", "-", "-\tif (b.equals(\"true\")) {", "-\t    return true;", "-\t} else if (b.equals(\"false\")) {", "-\t    return false;", "-\t} else {", "-\t    throw new ResourceFormatException(\"Malformed boolean\",", "-                                              bundle.getClass().getName(),", "-                                              key);", "-\t}", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d95bf818be2fb1922189f56846f3f66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "de5d6cb8095b8316a5027b98971107ba8d8608ac", "commitAfterChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void assertInteractionHelper(String text, boolean shouldContain)     throws BadLocationException", "signatureAfterChange": "      private void _assertInteractionContainsHelper(String text, boolean shouldContain)     throws BadLocationException", "diff": ["+  ", "+  private void _assertInteractionContainsHelper(String text, boolean shouldContain)", "+    throws BadLocationException {", "+    ", "+    String interactText = getInteractionsText();", "+    int contains = interactText.lastIndexOf(text);", "+    assertTrue(\"Interactions document should \" +", "+               (shouldContain ? \"\" : \"not \")", "+                 + \"contain: \"", "+                 +text,", "+               (contains != -1) == shouldContain);    ", "+  }", "-  ", "-  private void assertInteractionHelper(String text, boolean shouldContain)", "-    throws BadLocationException {", "-    ", "-    String interactText = _getInteractionsText();", "-    int contains = interactText.lastIndexOf(text);", "-    assertTrue(\"Interactions document should \" +", "-               (shouldContain ? \"\" : \"not \")", "-                 + \"contain: \"", "-                 +text,", "-               (contains != -1) == shouldContain);    ", "-  }"]}], "num": 29427}