{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "384479a19c77aee4ab81a2f5e9a508bd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24ca3bd589f267b751a41790615c9316", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "          public void testForEmptyExpressionOnly()", "signatureAfterChange": "          public void testForEmptyExpressionOnly()", "diff": ["-      EmptyExpression ee = new EmptyExpression(SourceInfo.NO_INFO);", "+      EmptyExpression ee = new EmptyExpression(SourceInfo.NONE);", "-        assertEquals(\"Error message should be correct\", \"Internal Program Error: EmptyExpression encountered.  Student is missing something.  Should have been caught before TypeChecker.  Please report this bug.\", e.getMessage());", "+        assertEquals(\"Error message should be correct\", ", "+                     \"Internal Program Error: EmptyExpression encountered.  Student is missing something.  \"", "+                       + \"Should have been caught before TypeChecker.  Please report this bug.\", ", "+                     e.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50887ee3032b60f197bd2ca64bfb2655", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public TypeData forEmptyExpressionOnly(EmptyExpression that)", "signatureAfterChange": "   public TypeData forEmptyExpressionOnly(EmptyExpression that)", "diff": ["-   */", "+    */", "-    throw new RuntimeException(\"Internal Program Error: EmptyExpression encountered.  Student is missing something.  Should have been caught before TypeChecker.  Please report this bug.\");", "+    throw new RuntimeException(\"Internal Program Error: EmptyExpression encountered.  Student is missing something.\" + ", "+                               \"  Should have been caught before TypeChecker.  Please report this bug.\");"]}], "num": 23498}