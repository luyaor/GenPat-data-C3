{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21ccbe2f4c91cee830f36859c4c8aec4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d4db499b8c1e349bde30d51a92215c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FileSelectorComponent.java", "commitBeforeChange": "79e38a44be6c4c379730bdfb5468461330077836", "commitAfterChange": "3be3cfbc674d7ccc211966342e06cebac6416af4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public boolean validateTextField()", "signatureAfterChange": "   public synchronized boolean validateTextField()", "diff": ["-  public boolean validateTextField() {", "-    if (_validationInProgress) return true;", "-    _validationInProgress = true;", "+  public synchronized boolean validateTextField() {", "+//    if (_validationInProgress) return true;", "+//    _validationInProgress = true;", "-      _validationInProgress = false;", "+//      _validationInProgress = false;", "-      _validationInProgress = false;", "+//      _validationInProgress = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b62978cb52e54517891fbef89166ba9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void interpret(final String input, final InterpreterData interpreter)", "signatureAfterChange": "   public void interpret(final String input, final InterpreterData interpreter)", "diff": ["+    _log.log(this + \".interpret(\" + input + \") called\");", "-      synchronized(this) { ", "-        if (interpretationInProgress) {", "+      synchronized(interpreter) { ", "+        if (interpreter.inProgress()) {", "-      interpretationInProgress = true; ", "+//      interpretationInProgress = true; ", "-              _dialog(\"to interp: \" + s);", "+              _log.log(\"Interpreter thread for \" + input + \" has started\");", "+//              _dialog(\"to interp: \" + s);", "-      interpretationInProgress = false;", "+//      interpretationInProgress = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97129b52451bf0b2a6c6c5d8911746e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void junitClasses(List<String> qualifiedClassnames, List<File> files)", "signatureAfterChange": "   public void junitClasses(List<String> qualifiedClassnames, List<File> files)", "diff": ["-//    Utilities.showDebug(\"junitClasses(\" + qualifiedClassnames + \", \" + files);", "-    synchronized(_compilerModel.getSlaveJVMLock()) {", "- ", "-       // test and set _testInProgress ", "-      synchronized(_testLock) {", "-        if (_testInProgress) return;", "-        _testInProgress = true;", "-      }", "+    Utilities.showDebug(\"junitClasses(\" + qualifiedClassnames + \", \" + files);", "+    synchronized(_compilerModel.getCompilerLock()) {", "+      ", "+      // Check _testInProgress ", "+      if (_testInProgress) return;", "+      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a54dee02fda6e5f29bfdd637957f281e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "commitAfterChange": "6fa1e9e0526601b88fed849b111530adacda855f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public synchronized void interpret(final String s)", "signatureAfterChange": "   public synchronized void interpret(final String s, final InterpreterData interpreter)", "diff": ["-  //public InterpretResult interpret(final String s) {", "-  public synchronized void interpret(final String s) {", "+   */", "+  public synchronized void interpret(final String s, final InterpreterData interpreter) {", "+          interpreter.setInProgress(true);", "-            _activeInterpreter.setInProgress(true);", "-            Object result = _activeInterpreter.getInterpreter().interpret(s);", "-            _activeInterpreter.setInProgress(false);", "+            Object result = interpreter.getInterpreter().interpret(s);", "+        finally {", "+          interpreter.setInProgress(false);", "+        }"]}], "num": 23068}