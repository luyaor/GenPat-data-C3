{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "897d4696ea9ab9f74660c3af93da6ccf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d88f25d288d8c5f7e576f2551003a7c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "       public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason)", "signatureAfterChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "diff": ["-      public void junitEnded() { junitEndCount++; }", "-      public void saveAllBeforeProceeding(GlobalModelListener.SaveReason reason) {", "-        assertEquals(\"should be JUNIT reason to save\", JUNIT_REASON, reason);", "-        assertModified(true, doc);", "-        assertSaveCount(0);", "-        assertCompileStartCount(0);", "-        assertCompileEndCount(0);", "-        ", "-        try {", "-          doc.saveFile(new FileSelector(file));", "-        }", "-        catch (IOException ioe) {", "-          fail(\"Save produced exception: \" + ioe);", "-        }", "-        ", "-        saveAllBeforeProceedingCount++;", "-      }", "+   */", "+  public void testUnsavedAndUnCompiledChanges() throws Exception {", "+    OpenDefinitionsDocument doc = setupDocument(MONKEYTEST_PASS_TEXT);", "+    final File file = new File(_tempDir, \"MonkeyTestPass.java\");", "+    doc.saveFile(new FileSelector(file));", "+    TestShouldSucceedListener listener = new TestShouldSucceedListener();", "+    _model.addListener(listener);", "+    synchronized(listener) {", "+      doc.startCompile();", "+      listener.wait();", "+    }", "+    changeDocumentText(MONKEYTEST_FAIL_TEXT, doc);", "+    synchronized(listener) {", "+      doc.startJUnit();", "+      listener.wait();", "+    }", "+    _model.removeListener(listener);", "+    ", "+    assertEquals(\"test case should have no errors reported after modifying\",", "+                 0,", "+                 doc.getJUnitErrorModel().getNumErrors());", "+    doc.saveFile(new FileSelector(file));", "+    doc.startJUnit();", "+    ", "+    assertEquals(\"test case should have no errors reported after saving\",", "+                 0,", "+                 doc.getJUnitErrorModel().getNumErrors());", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4bead20e19120c3e0b604d9d61b01e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testDoNotRunJUnitWhenCompileErrorsOccur() throws Exception", "signatureAfterChange": "   public void testNoClassFile() throws Exception", "diff": ["-   */", "-  public void testDoNotRunJUnitWhenCompileErrorsOccur() throws Exception {", "-    final OpenDefinitionsDocument doc = setupDocument(MONKEYTEST_COMPILEERROR_TEXT);", "-    final File file = new File(_tempDir, \"MonkeyTestCompileError.java\");", "-    doc.saveFile(new FileSelector(file));", "-    ", "-    CompileShouldFailListener listener = new CompileShouldFailListener() {", "-      public void compileErrorDuringJUnit() { compileErrorDuringJUnitCount++; }", "-    };", "-    ", "-    _model.addListener(listener);", "-    listener.assertCompileErrorDuringJUnitCount(0);", "-    doc.startJUnit();", "-    listener.checkCompileOccurred();", "-    assertCompileErrorsPresent(\"JUnit\", true);", "-    listener.assertCompileErrorDuringJUnitCount(1);", "-    listener.assertJUnitStartCount(0);", "-    listener.assertJUnitEndCount(0);", "-  }", "+   */", "+  public void testNoClassFile() throws Exception {", "+    final OpenDefinitionsDocument doc = setupDocument(MONKEYTEST_PASS_TEXT);", "+    final File file = new File(_tempDir, \"MonkeyTestPass.java\");", "+    doc.saveFile(new FileSelector(file));", "+    ", "+    TestShouldSucceedListener listener = new TestShouldSucceedListener() {", "+      public void nonTestCase() {", "+        nonTestCaseCount++;", "+      }", "+    };", "+    _model.addListener(listener);", "+    synchronized(listener) {", "+      doc.startJUnit();", "+      listener.wait();", "+    }", "+    listener.assertNonTestCaseCount(1);", "+    listener.assertJUnitStartCount(1);", "+    listener.assertJUnitEndCount(1);", "+                 ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecfa82498d86945990d4cb467d5aec6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModelTest.java", "commitBeforeChange": "84e7921bd32edcfceaf3be1ebd8104fc4d274516", "commitAfterChange": "cd663e9bf0c95c5bb5b12db38fbcd366660d665e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testErrorsArrayInOrder() throws Exception", "signatureAfterChange": "   public void testErrorsArrayInOrder() throws Exception", "diff": ["-  public void testErrorsArrayInOrder() throws Exception {", "+  public void testErrorsArrayInOrder() throws Exception { ", "-    // Temporarily disabled?  Why?", "- ", "-    /*", "-       ", "-    doc.startCompile();", "+    ", "+    TestShouldSucceedListener listener = new TestShouldSucceedListener();", "+    _model.addListener(listener);", "+    synchronized(listener) {", "+      doc.startCompile();", "+      listener.wait();", "+    }", "+    listener.checkCompileOccurred();", "+    synchronized(listener) {", "+      doc.startJUnit();", "+      listener.assertJUnitStartCount(1);", "+      listener.wait();", "+    }", "-    /*final TestResult testResults = doc.startJUnit();", "+    //final TestResult testResults = doc.startJUnit();", "-    assertTrue(\"testResults should not be null\", testResults != null);", "+    //_m = new JUnitErrorModel(doc.getDocument(), \"MonkeyTestFail\", testResults);", "+    _m = doc.getJUnitErrorModel();", "-    _m = new JUnitErrorModel(doc.getDocument(), \"MonkeyTestFail\", testResults);", "+    //JUnitError[] errorsWithPositions = _m.getErrorsWithPositions();", "+    //JUnitError[] errorsWithoutPositions = _m.getErrorsWithoutPositions();", "+    //assertTrue(\"testResults should not be null\", testResults != null);", "-    assertEquals(\"testResult should have one error and one failure\",", "+    assertEquals(\"the test results should have one error and one failure \"+_m.getErrorsWithPositions().length+\" \"+_m.getErrorsWithoutPositions().length,", "-    */", "+    //_model.setResetAfterCompile(true);", "+    "]}], "num": 14690}