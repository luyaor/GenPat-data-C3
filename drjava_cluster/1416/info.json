{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d39e6fb7b3aefecfb8f8b264746efd3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e598eeef52644c9fd450c4464123885", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AboutDialog.java", "commitBeforeChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "commitAfterChange": "cd3b985ffaa7c3ea1d3723af1e9843455ae54d39", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private static JComponent createSysPropTab()", "signatureAfterChange": "      private static JComponent createSysPropTab()", "diff": ["-    UneditableTableModel model = ", "-      new UneditableTableModel(rowData,new String[]{\"Name\",\"Value\"});", "+    String[] nvStrings = new String[]{\"Name\",\"Value\"};", "+    UneditableTableModel model = new UneditableTableModel(rowData, nvStrings);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a0822ea7ddeef1cd9efea44ed02bb21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/AdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void anonymousClassInstantiationHelper(AnonymousClassInstantiation that, Data enclosing, SymbolData superC)", "signatureAfterChange": "   public void anonymousClassInstantiationHelper(AnonymousClassInstantiation that, Data enclosing, SymbolData superC)", "diff": ["-    SymbolData sd = new SymbolData(getQualifiedClassName(enclosing.getSymbolData().getName()) + \"$\" + enclosing.getSymbolData().preincrementAnonymousInnerClassNum());", "+    String anonName = getQualifiedClassName(enclosing.getSymbolData().getName()) + \"$\" + ", "+      enclosing.getSymbolData().preincrementAnonymousInnerClassNum();", "+    SymbolData sd = new SymbolData(anonName);", "-    that.getBody().visit(new ClassBodyAdvancedVisitor(sd, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));", "+    that.getBody().visit(new ClassBodyAdvancedVisitor(sd, anonName, _file, _package, _importedFiles, _importedPackages, _classNamesInThisFile, continuations));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9297f1ff1d3420ce17ee7b4b80136394", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ConstructorBodyTypeChecker.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public void testforValueReturnStatementOnly()", "signatureAfterChange": "         public void testforValueReturnStatementOnly()", "diff": ["-      BracedBody bb1 = new BracedBody(SourceInfo.NO_INFO,", "-                                      new BodyItemI[] { new ValueReturnStatement(SourceInfo.NO_INFO,", "-                                                                                 new BooleanLiteral(SourceInfo.NO_INFO, true))});", "+      BodyItemI[] bis = ", "+        new BodyItemI[] { new ValueReturnStatement(SourceInfo.NO_INFO,", "+                                                   new BooleanLiteral(SourceInfo.NO_INFO, true))};", "+      BracedBody bb1 = new BracedBody(SourceInfo.NO_INFO, bis);", "-      assertEquals(\"Error message should be correct\", \"You cannot return a value from a class's constructor\", errors.get(0).getFirst());", "+      assertEquals(\"Error message should be correct\", \"You cannot return a value from a class's constructor\", ", "+                   errors.get(0).getFirst());"]}], "num": 1416}