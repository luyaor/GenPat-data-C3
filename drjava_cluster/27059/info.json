{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b130f2faa6946f9f5efde511343ff17f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f85d1b48b9d40c8ff612879a108a3bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public Type visit(ObjectMethodCall node)", "signatureAfterChange": "   public Class<?> visit(ObjectMethodCall node)", "diff": ["-  public Type visit(ObjectMethodCall node) {", "+  public Class<?> visit(ObjectMethodCall node) {", "-    Type      c1   = exp.acceptVisitor(this);", "-    Class<?>   c   = (Class<?>)c1;", "-    String    mn   = node.getMethodName();", "-    ", "-    if (!c.isArray() || c.isArray() && !mn.equals(\"clone\")) {", "+    Class<?>      c   = exp.acceptVisitor(this);", "+    String     mn  = node.getMethodName();", "+", "+    if (!c.isArray() || (c.isArray() && !mn.equals(\"clone\"))) {", "-      Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;        ", "+      Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;", "-          cargs[i++] = (Class<?>)it.next().acceptVisitor(this);", "+          cargs[i++] = it.next().acceptVisitor(this);", "-        ", "-        ", "-      ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96c7b31db93f76e7e27d01c511c544ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public Type visit(SimpleAllocation node)", "signatureAfterChange": "   public Class<?> visit(SimpleAllocation node)", "diff": ["-  public Type visit(SimpleAllocation node) {", "+  public Class<?> visit(SimpleAllocation node) {", "-    Type c1  = type.acceptVisitor(this);", "-    Class<?> c = (Class<?>)c1;", "-    ", "+    Class<?> c  = type.acceptVisitor(this);", "+", "-    ", "+", "-      ", "+", "-        cargs[i++] = (Class<?>)it.next().acceptVisitor(this);", "+        cargs[i++] = it.next().acceptVisitor(this);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf9e361e2d26f2f084fc68be41d2a3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public Type visit(ClassAllocation node)", "signatureAfterChange": "   public Class<?> visit(ClassAllocation node)", "diff": ["-  public Type visit(ClassAllocation node) {", "+  public Class<?> visit(ClassAllocation node) {", "-      Type   ct1   = ctn.acceptVisitor(this);", "-      Class<?> ct = (Class<?>)ct1;", "+      Class<?>   ct   = ctn.acceptVisitor(this);", "-      ", "+", "-          args[i++] = (Class<?>)it.next().acceptVisitor(this);", "+          args[i++] = it.next().acceptVisitor(this);"]}], "num": 27059}