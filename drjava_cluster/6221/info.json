{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7f52413f7f51a11e986e3526e704f71", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e81a3ab63b3749a511981bc0bc63b0f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/Option.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   void notifyListeners(Configuration config, T val)", "signatureAfterChange": "   void notifyListeners(Configuration config, T val)", "diff": ["-   */", "+  /** Sends an OptionEvent to all OptionListeners who have registered on this Option. */", "-    Vector<OptionListener<T>> v = listeners.get(config);", "-    if (v==null) return; // no listeners", "-    OptionEvent<T> e = new OptionEvent<T>(this,val);", "-    int size = v.size();", "-    for (int i = 0; i < size; i++) {", "-      v.get(i).optionChanged(e);", "-    }", "+    final Vector<OptionListener<T>> v = listeners.get(config);", "+    if (v == null) return; // no listeners", "+    final OptionEvent<T> e = new OptionEvent<T>(this,val);", "+    final int size = v.size();", "+    Utilities.invokeLater(new Runnable() { ", "+      public void run() {", "+        for (int i = 0; i < size; i++) v.get(i).optionChanged(e);", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5aa27c8e450a1f2c4ea8efc80072a13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testDebugSourcepath() throws Exception", "signatureAfterChange": "   public void testDebugSourcepath() throws Exception", "diff": ["-    StepTestListener debugListener = new StepTestListener();", "+    final StepTestListener debugListener = new StepTestListener();", "-    OpenDefinitionsDocument doc = _startupDebugger(\"DrJavaDebugClass.java\", DEBUG_CLASS);", "-    Vector<File> path = new Vector<File>();", "+    final OpenDefinitionsDocument doc = _startupDebugger(\"DrJavaDebugClass.java\", DEBUG_CLASS);", "+    final Vector<File> path = new Vector<File>();", "-      DrJava.getConfig().setSetting(OptionConstants.DEBUG_SOURCEPATH, path);", "+      Utilities.invokeAndWait(new Runnable() { ", "+        public void run() { ", "+          DrJava.getConfig().setSetting(OptionConstants.DEBUG_SOURCEPATH, path);", "+        }", "+      });"]}], "num": 6221}