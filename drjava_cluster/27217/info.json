{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3909eadfe4d4470796c96dc0dc80d0c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71ab598e86197817bd8ef844a0a4d8b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   synchronized void scrollToSource(LocatableEvent e)", "signatureAfterChange": "   synchronized void scrollToSource(LocatableEvent e)", "diff": ["-      Vector<File> sourcepath = ", "-        DrJava.CONFIG.getSetting(OptionConstants.DEBUG_SOURCEPATH);", "-      File f = _model.getSourceFileFromPaths(filename, sourcepath);", "-      //File f = null;", "+      // If not on sourcepath, check source root set (open files)", "+      File[] sourceRoots = _model.getSourceRootSet();", "+      Vector<File> roots = new Vector<File>();", "+      for (int i=0; i < sourceRoots.length; i++) {", "+        roots.addElement(sourceRoots[i]);", "+      }", "+      File f = _model.getSourceFileFromPaths(filename, roots);", "-        // If not on sourcepath, check source root set (open files)", "-        File[] sourceRoots = _model.getSourceRootSet();", "-        Vector<File> roots = new Vector<File>();", "-        for (int i=0; i < sourceRoots.length; i++) {", "-          roots.addElement(sourceRoots[i]);", "-        }", "-        f = _model.getSourceFileFromPaths(filename, roots);", "+        Vector<File> sourcepath = ", "+          DrJava.CONFIG.getSetting(OptionConstants.DEBUG_SOURCEPATH);", "+        f = _model.getSourceFileFromPaths(filename, sourcepath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a751741168094f7f633ae715d20b7e51", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "1313de8815d48e0a1c60eb5bee6900b6b7af3993", "commitAfterChange": "802c4acbf71daa5d149dbcd67d1f360241574951", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   synchronized void scrollToSource(Location location, boolean shouldHighlight)", "signatureAfterChange": "   synchronized void scrollToSource(Location location, boolean shouldHighlight)", "diff": ["-      filename = rt.sourceName();", "-      filename = getPackageDir(rt.name()) + filename;", "+      filename = getPackageDir(rt.name()) + rt.sourceName();", "-      ", "+", "-      ", "+", "-    File[] sourceRoots = _model.getSourceRootSet();", "-    Vector<File> roots = new Vector<File>();", "-    for (int i=0; i < sourceRoots.length; i++) {", "-      roots.addElement(sourceRoots[i]);", "-    }", "-    File f = _model.getSourceFileFromPaths(filename, roots);", "-    if (f == null) {", "-      Vector<File> sourcepath =", "-        DrJava.getConfig().getSetting(OptionConstants.DEBUG_SOURCEPATH);", "-      f = _model.getSourceFileFromPaths(filename, sourcepath);", "-    }", "+    File f = _model.getSourceFile(filename);", "+//    File[] sourceRoots = _model.getSourceRootSet();", "+//    Vector<File> roots = new Vector<File>();", "+//    for (int i=0; i < sourceRoots.length; i++) {", "+//      roots.addElement(sourceRoots[i]);", "+//    }", "+//    File f = _model.getSourceFileFromPaths(filename, roots);", "+//    if (f == null) {", "+//      Vector<File> sourcepath =", "+//        DrJava.getConfig().getSetting(OptionConstants.DEBUG_SOURCEPATH);", "+//      f = _model.getSourceFileFromPaths(filename, sourcepath);", "+//    }"]}], "num": 27217}