{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8132b83461633c08978656dcf92bb99c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53511f4033c1ca5be314b96e43d9cc50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ArrayAllocation.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public TypeDescriptor(List<? extends Expression> sizes, int dim, ArrayInitializer init, int el, int ec)", "signatureAfterChange": "     public TypeDescriptor(List<? extends Expression> sizes, int dim, ArrayInitializer init, SourceInfo si)", "diff": ["-    /**mCreates a new type descriptor */", "-    public TypeDescriptor(List<? extends Expression> sizes, int dim, ArrayInitializer init, int el, int ec) {", "+    /** Creates a new type descriptor */", "+    public TypeDescriptor(List<? extends Expression> sizes, int dim, ArrayInitializer init, SourceInfo si) {", "-      endLine        = el;", "-      endColumn      = ec;", "+      sourceInfo     = si;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a0dafcf2f537194bea245b866c272b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ArrayAllocation.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public TypeDescriptor(List<Expression> sizes, int dim,                           ArrayInitializer init, int el, int ec)", "signatureAfterChange": "     public TypeDescriptor(List<? extends Expression> sizes, int dim, ArrayInitializer init, int el, int ec)", "diff": ["-     */", "-    public TypeDescriptor(List<Expression> sizes, int dim,", "-                          ArrayInitializer init, int el, int ec) {", "-      this.sizes     = sizes;", "+    /**mCreates a new type descriptor */", "+    public TypeDescriptor(List<? extends Expression> sizes, int dim, ArrayInitializer init, int el, int ec) {", "+      this.sizes     = (sizes == null) ? null : new ArrayList<Expression>(sizes);"]}], "num": 14116}