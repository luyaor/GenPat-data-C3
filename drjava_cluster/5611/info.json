{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df54ab9e8edb1677328d94416702084f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9636030c4ef19db619fefbbd2b0daf8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "               public void testCreateMethodData()", "signatureAfterChange": "               public void testCreateMethodData()", "diff": ["-      MethodDef mdef = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "+      MethodDef mdef = new ConcreteMethodDef(SourceInfo.NONE, ", "-                                                    new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                                    new Word(SourceInfo.NO_INFO, \"methodName\"),", "+                                                    new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                                    new Word(SourceInfo.NONE, \"methodName\"),", "-                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-      mdef = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "+      mdef = new ConcreteMethodDef(SourceInfo.NONE, ", "-                                                    new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                                    new Word(SourceInfo.NO_INFO, \"methodName2\"),", "+                                                    new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                                    new Word(SourceInfo.NONE, \"methodName2\"),", "-                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-        new FormalParameter(SourceInfo.NO_INFO, ", "-                            new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                                                new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                                                new Word (SourceInfo.NO_INFO, \"field1\")),", "+        new FormalParameter(SourceInfo.NONE, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                                                new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                                                new Word (SourceInfo.NONE, \"field1\")),", "-        new FormalParameter(SourceInfo.NO_INFO, ", "-                            new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                                                new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                                                new Word (SourceInfo.NO_INFO, \"field1\")),", "+        new FormalParameter(SourceInfo.NONE, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                                                new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                                                new Word (SourceInfo.NONE, \"field1\")),", "-        new AbstractMethodDef(SourceInfo.NO_INFO, ", "+        new AbstractMethodDef(SourceInfo.NONE, ", "-                              new TypeParameter[] { new TypeParameter(SourceInfo.NO_INFO,", "-                                                                      new TypeVariable(SourceInfo.NO_INFO, \"T\"),", "-                                                                      new TypeVariable(SourceInfo.NO_INFO, \"U\"))},", "-                              new VoidReturn(SourceInfo.NO_INFO, \"void\"), ", "-                              new Word(SourceInfo.NO_INFO, \"methodName\"),", "+                              new TypeParameter[] { new TypeParameter(SourceInfo.NONE,", "+                                                                      new TypeVariable(SourceInfo.NONE, \"T\"),", "+                                                                      new TypeVariable(SourceInfo.NONE, \"U\"))},", "+                              new VoidReturn(SourceInfo.NONE, \"void\"), ", "+                              new Word(SourceInfo.NONE, \"methodName\"),", "-                              new ReferenceType[] { new TypeVariable(SourceInfo.NO_INFO, \"X\") });", "+                              new ReferenceType[] { new TypeVariable(SourceInfo.NONE, \"X\") });", "-                             new TypeParameter[] { new TypeParameter(SourceInfo.NO_INFO,", "-                                                                     new TypeVariable(SourceInfo.NO_INFO, \"T\"),", "-                                                                     new TypeVariable(SourceInfo.NO_INFO, \"U\"))}, ", "+                             new TypeParameter[] { new TypeParameter(SourceInfo.NONE,", "+                                                                     new TypeVariable(SourceInfo.NONE, \"T\"),", "+                                                                     new TypeVariable(SourceInfo.NONE, \"U\"))}, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5619899fa3478d39e2e9c81dcf10129", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "                    public void testCreateMethodData()", "signatureAfterChange": "                    public void testCreateMethodData()", "diff": ["-      MethodDef mdef = new AbstractMethodDef(SourceInfo.NO_INFO, ", "+      MethodDef mdef = new AbstractMethodDef(SourceInfo.NONE, ", "-                                             new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                             new Word(SourceInfo.NO_INFO, \"methodName\"),", "+                                             new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                             new Word(SourceInfo.NONE, \"methodName\"),", "-//      System.err.println(\"SymbolData for i.like.monkey = \" + _iv.getQualifiedSymbolData(\"i.like.monkey\", SourceInfo.NO_INFO));", "+//      System.err.println(\"SymbolData for i.like.monkey = \" + _iv.getQualifiedSymbolData(\"i.like.monkey\", SourceInfo.NONE));", "-        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                            new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                            new Word(SourceInfo.NO_INFO, \"field1\"));", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                            new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                            new Word(SourceInfo.NONE, \"field1\"));", "-        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                            new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                            new Word(SourceInfo.NO_INFO, \"field1\"));", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                            new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                            new Word(SourceInfo.NONE, \"field1\"));", "-        new AbstractMethodDef(SourceInfo.NO_INFO, ", "+        new AbstractMethodDef(SourceInfo.NONE, ", "-                              new TypeParameter[] { new TypeParameter(SourceInfo.NO_INFO,", "-                                                                      new TypeVariable(SourceInfo.NO_INFO, \"T\"),", "-                                                                      new TypeVariable(SourceInfo.NO_INFO, \"U\"))},", "-                              new VoidReturn(SourceInfo.NO_INFO, \"void\"), ", "-                              new Word(SourceInfo.NO_INFO, \"methodName\"),", "+                              new TypeParameter[] { new TypeParameter(SourceInfo.NONE,", "+                                                                      new TypeVariable(SourceInfo.NONE, \"T\"),", "+                                                                      new TypeVariable(SourceInfo.NONE, \"U\"))},", "+                              new VoidReturn(SourceInfo.NONE, \"void\"), ", "+                              new Word(SourceInfo.NONE, \"methodName\"),", "-                                new FormalParameter(SourceInfo.NO_INFO, ", "+                                new FormalParameter(SourceInfo.NONE, ", "-                                  new FormalParameter(SourceInfo.NO_INFO, ", "+                                  new FormalParameter(SourceInfo.NONE, ", "-                              new ReferenceType[] { new TypeVariable(SourceInfo.NO_INFO, \"X\") }", "+                              new ReferenceType[] { new TypeVariable(SourceInfo.NONE, \"X\") }", "-                       new TypeParameter[] { new TypeParameter(SourceInfo.NO_INFO,", "-                                                               new TypeVariable(SourceInfo.NO_INFO, \"T\"),", "-                                                               new TypeVariable(SourceInfo.NO_INFO, \"U\"))}, ", "+                       new TypeParameter[] { new TypeParameter(SourceInfo.NONE,", "+                                                               new TypeVariable(SourceInfo.NONE, \"T\"),", "+                                                               new TypeVariable(SourceInfo.NONE, \"U\"))}, "]}], "num": 5611}