{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2662eb0c2bcfff0f997e5752906bc9d4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a94d79b49bd1bac774d7f7a2968716d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "077ea7d687567aea61da49d1d27cabc74c306eab", "commitAfterChange": "5f1b3bc3f3deca6d356567893a20298f4e5a94a7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void valueChanged(ListSelectionEvent e)", "signatureAfterChange": "      private String _errorText(int i)", "diff": ["-  private ListSelectionListener _listListener = new ListSelectionListener() {", "-    public void valueChanged(ListSelectionEvent e) {", "-      if (! _caretGuard) {", "-        // subtract 1 to deal with the (none) line in the list", "-        _gotoError(_errorList.getSelectedIndex() - 1);", "-      }", "-    }", "+    private String _errorText(int i) {", "+      CompilerError error = _errors[i];", "+      StringBuffer buf = new StringBuffer();", "+      buf.append(\"\\n\");", "+      if (error.isWarning()) {", "+        buf.append(\"Warning: \");", "+      else {", "+        buf.append(\"Error: \");", "+      buf.append(error.message());", "+", "+      return buf.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "552c8bb4583a2aa3d172f78b97913fb1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CompilerErrorPanel.java", "commitBeforeChange": "077ea7d687567aea61da49d1d27cabc74c306eab", "commitAfterChange": "5f1b3bc3f3deca6d356567893a20298f4e5a94a7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void valueChanged(ListSelectionEvent e)", "signatureAfterChange": "      private String _errorText(int i)", "diff": ["-  private ListSelectionListener _listListener = new ListSelectionListener() {", "-    public void valueChanged(ListSelectionEvent e) {", "-      if (! _caretGuard) {", "-        // subtract 1 to deal with the (none) line in the list", "-        _gotoError(_errorList.getSelectedIndex() - 1);", "-      }", "-    }", "+    private String _errorText(int i) {", "+      CompilerError error = _errors[i];", "+      StringBuffer buf = new StringBuffer();", "+      buf.append(\"\\n\");", "+      if (error.isWarning()) {", "+        buf.append(\"Warning: \");", "+      else {", "+        buf.append(\"Error: \");", "+      buf.append(error.message());", "+", "+      return buf.toString();"]}], "num": 21339}