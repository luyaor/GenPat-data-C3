{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "127051751929d35fade47d8d15e076c7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "242f639548ad0a3b5d43a42fe1787b3f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a3306545963d95b8e7f45728ebf6e03a4f716f60", "commitAfterChange": "cc830d3cfb835e44d2498e98729c28536d682aad", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public int findCharOnLine(int pos, char findChar)", "signatureAfterChange": "   public int findCharOnLine(int pos, char findChar)", "diff": ["-    int reducedAbsOffset = this.getReduced().absOffset();", "+    // Check cache", "+    String key = \"getIndentOfCurrStmt:\" + pos + \":\" + findChar;", "+    Integer cached = (Integer) _checkCache(key);", "+    if (cached != null) {", "+      return cached.intValue();", "+    }", "+", "+    int here = _currentLocation;", "-      this.getReduced().move(i + lineStart - reducedAbsOffset);", "+      this.getReduced().move(i + lineStart - here);", "-        this.getReduced().move(reducedAbsOffset - (i + lineStart));", "+        this.getReduced().move(here - (i + lineStart));", "+        _storeInCache(key, new Integer(i + lineStart));", "-      this.getReduced().move(reducedAbsOffset - (i + lineStart));", "+      this.getReduced().move(here - (i + lineStart));", "+    _storeInCache(key, new Integer(ERROR_INDEX));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d540e4087d18ee6ef95c1456d72a6607", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a3306545963d95b8e7f45728ebf6e03a4f716f60", "commitAfterChange": "cc830d3cfb835e44d2498e98729c28536d682aad", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public synchronized int findPrevDelimiter(int pos, char[] delims, boolean skipParenPhrases)     throws BadLocationException", "signatureAfterChange": "   public synchronized int findPrevDelimiter(int pos, char[] delims, boolean skipParenPhrases)     throws BadLocationException", "diff": ["+    // Check cache", "+    String key = \"findPrevDelimiter:\" + pos;", "+    for (int i=0; i < delims.length; i++) {", "+      key += \":\" + delims[i];", "+    }", "+    key += \":\" + skipParenPhrases;", "+    Integer cached = (Integer) _checkCache(key);", "+    if (cached != null) {", "+      return cached.intValue();", "+    }", "+    ", "-    final int origLocation = _reduced.absOffset();", "+    final int origLocation = _currentLocation;", "-            if (skipParenPhrases && posInParenPhrase(i)) {", "+            if (skipParenPhrases && posInParenPhrase()) {", "+              _storeInCache(key, new Integer(i));", "+    _storeInCache(\"findPrevDelimiter:\" + pos, new Integer(ERROR_INDEX));"]}], "num": 17428}