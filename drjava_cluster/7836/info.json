{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38161a0f6b176217b0c476fc92decd9a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63bc59f71d02dd3ade44d4cd20e44a53", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilities.java", "commitBeforeChange": "45db1409c8267a28de60f839cd50b04fc79ebe8a", "commitAfterChange": "880c4e5564712cd25400295c6a42774ca709acb6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public static Method lookupMethod(Class cl, String name, Class[] ac)     throws NoSuchMethodException", "signatureAfterChange": "   public static Method lookupMethod(Class cl, String name, Class[] ac)     throws NoSuchMethodException", "diff": ["-      // It is here that we have to take care of boxing/unboxing and varargs", "+      boolean compatibleVersion = Float.valueOf(System.getProperty(\"java.specification.version\")) >= 1.5;", "+      // Autoboxing handled in the isCompatible method called by the hasVarArgsCompatibleSignatures method", "+        ", "+          if (!compatibleVersion) {", "+            throw new WrongVersionException(\"Variable arguments are only supported in Java 1.5 or better\");", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd3ade1701796c93dbb623fd173be452", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilities.java", "commitBeforeChange": "45db1409c8267a28de60f839cd50b04fc79ebe8a", "commitAfterChange": "880c4e5564712cd25400295c6a42774ca709acb6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static Constructor lookupConstructor(Class cl, Class [] ac)     throws NoSuchMethodException", "signatureAfterChange": "   public static Constructor lookupConstructor(Class cl, Class [] ac)     throws NoSuchMethodException", "diff": ["-      // It is here that we have to take care of boxing/unboxing and varargs", "+      boolean compatibleVersion = Float.valueOf(System.getProperty(\"java.specification.version\")) >= 1.5;", "+      // Autoboxing handled in the isCompatible method called by the hasVarArgsCompatibleSignatures method", "+          if (!compatibleVersion) {", "+            throw new WrongVersionException(\"Variable arguments are only supported in Java 1.5 or better\");", "+          }"]}], "num": 7836}