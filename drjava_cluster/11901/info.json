{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f91acd83015b89e8109dc4820e23ab9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f5690958132bf4ae6f966a24847b74f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "1db9953cef7434ec41dd008a314f29ee92873127", "commitAfterChange": "a13543680d64f9a7022fe7d3fbe6d9f298a83778", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   private Object buildArrayOfRemainingArgs(Class[] typs, int larg_size, Iterator<Expression> it)", "signatureAfterChange": "   private Object buildArrayOfRemainingArgs(Class[] typs, int larg_size, Iterator<Expression> it)", "diff": ["+        ", "-    for(int j = 0; j < larg_size-typs.length+1; j++){", "+    ", "+    int n = larg_size-typs.length+1;", "+    for(int j = 0; j < n; j++){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b2be801feee251d1264fc40ff1bce65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/EventNotifier.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void notifyListeners(Notifier n)", "signatureAfterChange": "   public void notifyListeners(Notifier n)", "diff": ["+    int listeners = 0;", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dc0d83172c55503e9e7d57dd35afa1a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelBrace.java", "commitBeforeChange": "28db8fb2942dc00cad50f5244fe215d573867721", "commitAfterChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "    public boolean openBraceImmediatelyLeft()", "signatureAfterChange": "    public boolean openBraceImmediatelyLeft()", "diff": ["-      _cursor.prev();", "-      /*", "-      System.out.println(\"+ closedBraceImmediatelyLeft() {\");", "-      System.out.println(\"  _cursor.getBlockOffset(): \"+_cursor.getBlockOffset());", "-      System.out.println(\"  _cursor.current().isClosed(): \"+_cursor.current().isClosed());", "-      System.out.println(\"  _isCurrentBraceMatchable(): \"+_isCurrentBraceMatchable());", "-      System.out.println(\"  }\");", "-      */", "-      boolean isLeft = ((_cursor.getBlockOffset() == 0) && _cursor.current().isOpen() &&", "-                        _isCurrentBraceMatchable());", "-      //System.out.println(\"= token to left: \" + _cursor);", "+      int offset = _cursor.getBlockOffset();", "+      _cursor.prev();  // does not affect blockOffset!      ", "+//      System.err.println(\"+ openBraceImmediatelyLeft() {\");", "+//      System.err.println(\"  offset \" + offset);", "+//      System.err.println(\"  _cursor.current().isClosed(): \" + _cursor.current().isClosed());", "+//      System.err.println(\"  _isCurrentBraceMatchable(): \" + _isCurrentBraceMatchable());", "+//      System.err.println(\"  }\");", "+", "+      boolean isLeft = (offset == 0 && _cursor.current().isOpen() && _isCurrentBraceMatchable());", "+//      System.err.println(\"In openBraceLeft, token to left: \" + _cursor);", "-      //String output = (_cursor.atEnd()) ? \"<end>\": _cursor.toString();", "-      //System.out.println(\"= current token: \" + output);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8388377b6f5a99b9fb470fc1ac798adc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/util/ScrollableDialog.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public ScrollableDialog(JFrame parent, String title, String header, String text, int width, int height, boolean wrap)", "signatureAfterChange": "   public ScrollableDialog(JFrame parent, String title, String header, String text, int width, int height, boolean wrap)", "diff": ["-  public ScrollableDialog(JFrame parent, String title, String header, String text, int width, int height, boolean wrap) {", "+  public ScrollableDialog(JFrame parent, String title, String header, String text, int width, int height, boolean wrap) { ", "-    _textScroll = new BorderlessScrollPane(_textArea,", "-                                           JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "-                                           wrap?JScrollPane.HORIZONTAL_SCROLLBAR_NEVER:JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);", "+    int scrollIndicator = wrap ? JScrollPane.HORIZONTAL_SCROLLBAR_NEVER : JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED;", "+    _textScroll =  new BorderlessScrollPane(_textArea, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, scrollIndicator);", "+    ", "-    ", "-    // This method is deprecated.  There are alternatives, but it is", "-    // probably best to let defer to the standard focus-management", "-    // policy rather than trying to customize it.", "-    //_textArea.requestDefaultFocus();", "+  ", "+    /* This method is deprecated.  There are alternatives, but it is probably best to let defer to the standard ", "+     * focus-management policy rather than trying to customize it. */", "+//    _textArea.requestDefaultFocus(); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e294c52bd75961e75a7f44a275aa42a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 236, "methodNumberAfterChange": 236, "signatureBeforeChange": "   private void _setMainFont()", "signatureAfterChange": "   private void _setMainFont()", "diff": ["+    ", "+    int i=0;", "+      i++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee5da5237376391cec3f756dd04232a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionHasCharPrecedingOpenBrace.java", "commitBeforeChange": "a3306545963d95b8e7f45728ebf6e03a4f716f60", "commitAfterChange": "cc830d3cfb835e44d2498e98729c28536d682aad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-      int bracePos = lineStart - info.distToBrace;    ", "+      int bracePos = lineStart - info.distToBrace;", "+        char c = doc.getText(prevNonWS,1).charAt(0);", "-          if (doc.getText(prevNonWS,1).charAt(0) == prefix) {", "+          if (c == prefix) {"]}], "num": 11901}