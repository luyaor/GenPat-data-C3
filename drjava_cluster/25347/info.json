{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73f64561fe6e6ed5d0c2158696fba7df", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "784da377db5b08316b38957784fadfa5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "    public TypeData forMethodDefOnly(MethodDef that, TypeData mav_result, TypeData[] typeParams_result,                                     TypeData result_result, TypeData name_result, TypeData params_result,                                     TypeData[] throws_result)", "signatureAfterChange": "    public TypeData forMethodDefOnly(MethodDef that, TypeData mavRes, TypeData[] typeParamsRes,                                     TypeData resRes, TypeData nameRes, TypeData paramsRes,                                     TypeData[] throwsRes)", "diff": ["-  public TypeData forMethodDefOnly(MethodDef that, TypeData mav_result, TypeData[] typeParams_result, ", "-                                   TypeData result_result, TypeData name_result, TypeData params_result, ", "-                                   TypeData[] throws_result) {", "-    return result_result; //forJExpressionOnly(that);", "+  public TypeData forMethodDefOnly(MethodDef that, TypeData mavRes, TypeData[] typeParamsRes, ", "+                                   TypeData resRes, TypeData nameRes, TypeData paramsRes, ", "+                                   TypeData[] throwsRes) {", "+    return resRes; //forJExpressionOnly(that);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e22c9edcdaadd83e05922d91fcb7e576", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public TypeData forConcreteMethodDefOnly(ConcreteMethodDef that, TypeData mav_result, TypeData[] typeParams_result,                                             TypeData result_result, TypeData name_result, TypeData params_result,                                             TypeData[] throws_result, TypeData body_result)", "signatureAfterChange": "   public TypeData forConcreteMethodDefOnly(ConcreteMethodDef that, TypeData mavRes, TypeData[] typeParamsRes,                                             TypeData resRes, TypeData nameRes, TypeData paramsRes,                                             TypeData[] throwsRes, TypeData bodyRes)", "diff": ["-  public TypeData forConcreteMethodDefOnly(ConcreteMethodDef that, TypeData mav_result, TypeData[] typeParams_result, ", "-                                           TypeData result_result, TypeData name_result, TypeData params_result, ", "-                                           TypeData[] throws_result, TypeData body_result) {", "-    return forMethodDefOnly(that, mav_result, typeParams_result, result_result, name_result, params_result, ", "-                            throws_result);", "+  public TypeData forConcreteMethodDefOnly(ConcreteMethodDef that, TypeData mavRes, TypeData[] typeParamsRes, ", "+                                           TypeData resRes, TypeData nameRes, TypeData paramsRes, ", "+                                           TypeData[] throwsRes, TypeData bodyRes) {", "+    return forMethodDefOnly(that, mavRes, typeParamsRes, resRes, nameRes, paramsRes, ", "+                            throwsRes);"]}], "num": 25347}