{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a9c8087efdd663052ab94c71cb2ad4a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d777edaa2d67ff968b6aa013356a913", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "47d5fc81163cac95e4e64b470a149e7ec540b233", "commitAfterChange": "d012414100e088dfd0a2ea6e642cc05f11fbf32b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void _createPanels()", "signatureAfterChange": "   private void _createPanels()", "diff": ["-    PanelTreeNode fontNode = _createPanel(\"Fonts\");", "-    fontNode.getPanel().displayComponents(); ", "+    /*PanelTreeNode fontNode = _createPanel(\"Fonts\");", "+    _setupFontPanel(fontNode.getPanel());", "+    */", "-    colorNode.getPanel().displayComponents();", "-    PanelTreeNode keystrokesNode = _createPanel(\"Key Bindings\");", "-    keystrokesNode.getPanel().displayComponents();", "+    _setupColorPanel(colorNode.getPanel());", "+", "+    /*PanelTreeNode keystrokesNode = _createPanel(\"Key Bindings\");", "+    _setupKeyBindingsPanel(keystrokesNode.getPanel());", "+    */", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92112a5fa9b89f73c8ca01860f5bcb2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilities.java", "commitBeforeChange": "2d246c494fbb75a0c4f2511eff1e602e629e213d", "commitAfterChange": "dda1eca509a9b15531a1f437487ab6782b2e8d21", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected static Method selectTheMostSpecificMethod(List<Method> list)", "signatureAfterChange": "   protected static Method selectTheMostSpecificMethod(List<Method> list)", "diff": ["-    ", "+        ", "+      if(TigerUtilities.isBridge(curr)) continue; //If the method is a bridge method, dont consider it, go to the next", "+", "-      boolean bestBridge = TigerUtilities.isBridge(best);", "-      boolean ambiBridge = TigerUtilities.isBridge(ambiguous);", "-      if (bestBridge && !ambiBridge) {", "-        return ambiguous;", "-      }", "-      else if (!bestBridge && ambiBridge) {", "-        return best;", "-      }"]}], "num": 29987}