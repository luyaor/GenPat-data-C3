{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "621639f8f814fdae2482f0ee8bd9cb44", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a60d1943d6623dd5fdcfdd6a7414a04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/VectorOption.java", "commitBeforeChange": "042ffb6978685c2b793d5124edfd3dfa24636f7c", "commitAfterChange": "54c74315c73b1720afe84a0338d81d822eb71511", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public String format(Vector<T> v)", "signatureAfterChange": "     public String format(Vector<T> v)", "diff": ["-   */", "-  public String format(Vector<T> v)", "-  {", "-    String res = \"[\";", "-    for (int i = 0; i < v.size(); i++)", "-    {", "-      res += this.formatElement(v.elementAt(i));", "-      ", "-      if (i != v.size() - 1) res += \", \";", "-    return res + \"]\";", "-  }", "+     */", "+    public String format(Vector<T> v) {", "+ StringBuffer res = new StringBuffer(header);", "+", "+ int size = v.size();", "+ int i = 0;", "+ while (i < size) {", "+     res.append(formatter.format(v.elementAt(i)));", "+     i++;", "+     if (i < size) res.append(delim);", "+ }", "+ return res.append(footer).toString();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "962906d3fdca508202c5b0cc490ef10e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic Set keySet()", "signatureAfterChange": "     public Set<String> keySet()", "diff": ["+    public Set<String> keySet() {", "+      Set<String> result = new HashSet<String>(11);", "+      for (int i = table.length-1; i >= 0; i--) {", "+        for (Entry e = table[i]; e != null; e = e.next) {", "+          result.add(e.key);", "+        }", "+      }", "+      return result;", "-\t */", "-\tpublic Set keySet() {", "-\t    Set result = new HashSet(11);", "-\t    for (int i = table.length-1; i >= 0; i--) {", "-\t\tfor (Entry e = table[i]; e != null; e = e.next) {", "-\t\t    result.add(e.key);", "-\t\t}", "-\t    }", "-\t    return result;", "-\t}"]}], "num": 3898}