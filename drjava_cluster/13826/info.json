{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b69824bf7d36204d456c9d52703c1ed", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ebcd4913f82444c1172dcd5c788d758", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlus.java", "commitBeforeChange": "6bfab9f5cad6f12d0935dd59b83d99bfc86909eb", "commitAfterChange": "5aacfadc90765b33349d6f9aff91d50fefd76986", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, int reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, int reason)", "diff": ["-", "+    ", "-", "+    ", "-", "+    ", "+    ", "-", "+      ", "-", "+        ", "-        synchronized(doc){", "-          doc.move(dist);", "-          prevDelimiterPos -= doc.balanceBackward() - 1;", "-          doc.move(-dist);", "-        }", "+        ", "+        doc.move(dist);", "+        prevDelimiterPos -= doc.balanceBackward() - 1;", "+        doc.move(-dist);", "+        ", "-    catch (BadLocationException e) {", "-      throw new UnexpectedException(e);", "-    }", "-", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "+    ", "+    ", "-      if (_useColon) {", "-        indentDelims = indentDelimsWithColon;", "-      } else {", "-        indentDelims = indentDelimsWithoutColon;", "-      }", "+      if (_useColon) indentDelims = indentDelimsWithColon;", "+      else indentDelims = indentDelimsWithoutColon;", "+      ", "-", "+      ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0b1433021cd7b3f4841fbab2e9ddb99", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionStartPrevStmtPlus.java", "commitBeforeChange": "72a0d444dc62ca781c9b91acdee71819a6f4cdd3", "commitAfterChange": "7144a04f8cef658fdd6189df9de3fd59eb678bec", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-      char[] ws = {' ', '\\t', '\\n', ';'};", "+      char[] ws = {' ', '\\t', '\\n', ';'};  // Why is ';' a delimiter?", "-        prevDelimiterPos -= doc.balanceBackward() - 1;  // use matching '{' or '(' as delim", "+        int delta = doc.balanceBackward(); // Number of chars backward to matching '{' or '('", "+        if (delta < 0) { // no matching delimiter!", "+          throw new UnexpectedException(\"No matching '{' or '(' preceding '\" + delim + \"' at offset \" + here + \" in \"", "+                                       + doc);", "+        }", "+        prevDelimiterPos -= delta - 1;  // Position just to right of matching '{' or '('"]}], "num": 13826}