{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98fb52a664544d63130b407b412c7d00", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e89b72af2e7e1cda431a0225a33cc74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/AFindReplaceMachineState.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private int _replaceAllInCurrentDoc()", "signatureAfterChange": "   private int _replaceAllInCurrentDoc()", "diff": ["+   */", "+  private int _replaceAllInCurrentDoc() {", "+    try {", "+      if (!_searchBackwards) {", "+        _start = _doc.createPosition(0);", "+        setPosition(0);", "+      }", "+      else {", "+        _start = _doc.createPosition(_doc.getLength());", "+        setPosition(_doc.getLength());", "+      }", "+    catch (BadLocationException e) {", "+      throw new UnexpectedException(e);", "+    int count = 0;", "+    FindResult fr = findNext();", "+    _doc = fr.getDocument();", "+//    int found = fr.getFoundOffset(); // This is never used", "+//    int wrapped = 0;", "+//    if (fr.getWrapped())", "+//      wrapped++;", "+// Checks that the findNext method has found something and has not", "+// wrapped once and gone beyond start.", "+//    while (found >= 0 && (wrapped == 0 ||", "+//                         ((found < _start.getOffset() + _findWord.length() && !_searchBackwards)  ||", "+//                          (found > _start.getOffset() - _findWord.length() && _searchBackwards))) && wrapped < 2) {", "+//new while condition, since I started replacing from the beginning/end of the document only", "+    while (!fr.getWrapped()) {// wrapped == 0) {", "+      replaceCurrent();", "+      count++;", "+      fr = findNext();", "+      _doc = fr.getDocument();", "+//      found = fr.getFoundOffset();", "+      //      if (fr.getWrapped())", "+      //        wrapped++;", "+    return count;", "+  }", "-     */", "-    private int _replaceAllInCurrentDoc() {", "-\ttry {", "-\t    if (!_searchBackwards){", "-\t\t_start = _doc.createPosition(0);", "-\t\tsetPosition(0);", "-\t    } else {", "-\t\t_start = _doc.createPosition(_doc.getLength());", "-\t\tsetPosition(_doc.getLength());", "-\t    }", "-\t} ", "-\tcatch (BadLocationException e) {", "-\t    throw new UnexpectedException(e);", "-\t}", "-\tint count = 0;", "-\tFindResult fr = findNext();", "-\t_doc = fr.getDocument();", "-\tint found = fr.getFoundOffset();", "-\t//    int wrapped = 0;", "-\t//    if (fr.getWrapped())", "-\t//      wrapped++;", "-\t// Checks that the findNext method has found something and has not", "-\t// wrapped once and gone beyond start.", "-\t//    while (found >= 0 && (wrapped == 0 ||", "-\t//                         ((found < _start.getOffset() + _findWord.length() && !_searchBackwards)  ||", "-\t//                          (found > _start.getOffset() - _findWord.length() && _searchBackwards))) && wrapped < 2) {", "-", "-\t//new while condition, since I started replacing from the beginning/end of the document only", "-\twhile(!fr.getWrapped()) {// wrapped == 0) {", "-\t    replaceCurrent();", "-\t    count++;", "-\t    fr = findNext();", "-\t    _doc = fr.getDocument();", "-\t    found = fr.getFoundOffset();", "-\t    //      if (fr.getWrapped())", "-\t    //        wrapped++;", "-\t}", "-\treturn count;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "accf719c798bc83c19e389801a3db748", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "e7660fffdb51451a3d4a61981945f6529addb874", "commitAfterChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 47, "signatureBeforeChange": "   private String encodeBreakpointRelative(DebugBreakpointData bp, String prefix) throws IOException", "signatureAfterChange": "   private String encodeBreakpointRelative(DebugBreakpointData bp, String prefix) throws IOException", "diff": ["-    int offset = bp.getOffset();", "-    ret += \"(offset \" + offset + \")\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f84086c0e51804caee834a6c527813d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "efe2cdfa860877c37343dbc5d29e380b33344492", "commitAfterChange": "c46b51159c995a9970485b3c515f743b3910e9fc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public int replaceAll()", "signatureAfterChange": "   public int replaceAll()", "diff": ["-    int found = fr.getFoundOffset();", "+//    int found = fr.getFoundOffset();", "-      found = fr.getFoundOffset();", "+//      found = fr.getFoundOffset();"]}], "num": 5952}