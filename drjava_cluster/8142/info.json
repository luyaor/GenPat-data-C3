{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63bbb8f0f26f72becd68d484fb57ec75", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82260b02f24cbf0cb302008d2eb485ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "fa20bbad84f51c844e01bca2b3fd5eacb2aa37bd", "commitAfterChange": "90ca22f045f683896f275759514c21a8010630fa", "methodNumberBeforeChange": 318, "methodNumberAfterChange": 318, "signatureBeforeChange": "   private Iterable<Type> inferTypeArguments(Iterable<? extends VariableType> tparams,                                              Iterable<? extends Type> params,                                             Iterable<? extends Type> args)", "signatureAfterChange": "   private Iterable<Type> inferTypeArguments(Iterable<? extends VariableType> tparams,                                              Iterable<? extends Type> params,                                             Iterable<? extends Type> args)", "diff": ["-    Set<? extends VariableType> tparamSet = CollectUtil.asSet(tparams);", "+    Set<? extends VariableType> tparamSet = CollectUtil.makeSet(tparams);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d701c8513325de586e64bb64c4cbd8e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "608d05e2a10d21cbc190b09334cd60b3c39fbc37", "commitAfterChange": "e2abbf01d6f3b23be51f493f663daa5ce8abf706", "methodNumberBeforeChange": 367, "methodNumberAfterChange": 369, "signatureBeforeChange": "   private Pair<Iterable<VariableType>, SubstitutionMap>       instantiateTypeParameters(Function f,                                 Iterable<? extends VariableType> enclosingTParams,                                 Iterable<? extends Type> enclosingTArgs)", "signatureAfterChange": "   private Pair<Iterable<VariableType>, SubstitutionMap>       instantiateTypeParameters(Function f,                                 Iterable<? extends VariableType> enclosingTParams,                                 Iterable<? extends Type> enclosingTArgs)", "diff": ["-    Iterable<VariableType> origTParams = f.declaredTypeParameters();", "+    Iterable<VariableType> origTParams = f.typeParameters();"]}], "num": 8142}