{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8820c784b91cf156c0d6d39e74804bf4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78bd9ec94fc72649bf807a3c791f3e9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SymbolData.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 92, "signatureBeforeChange": "   public void addMethod(MethodData method, boolean isAugmentedCode, boolean fromClassFile)", "signatureAfterChange": "   public void addMethod(MethodData method, boolean isAugmentedCode, boolean fromClassFile)", "diff": ["-    // Detect if a method was user-defined that matches the signature of an auto-generated method.", "-    MethodData md = repeatedSignature(_methods, method, fromClassFile);", "-    if (md != null) {", "-      LanguageLevelVisitor.errors.addLast(new Pair<String, JExpressionIF>(_createErrorMessage(method), md.getJExpression()));", "-    }", "-    else {", "+  // This checking cannot be performed until symbolTable is complete  ", "+//    // Detect if a method was user-defined that matches the signature of an auto-generated method.", "+//    MethodData md = repeatedSignature(_methods, method, fromClassFile);", "+//    if (md != null) {", "+//      LanguageLevelVisitor.errors.", "+//        addLast(new Pair<String, JExpressionIF>(_createErrorMessage(method), md.getJExpression()));", "+//    }", "+//    else {", "-    }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f96d745f4e6903829d56dc84c35fbdc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "24a1f858d68df0b918509903332d1ccee255eb85", "commitAfterChange": "4a3f93e2a406e3962e60f635bd24485059967bca", "methodNumberBeforeChange": 751, "methodNumberAfterChange": 750, "signatureBeforeChange": "      public void projectRunnableChanged()", "signatureAfterChange": "      public void projectRunnableChanged()", "diff": ["-    if (_model.getMainClass() != null && _model.getMainClassContainingFile() != null && ", "-        _model.getMainClassContainingFile().exists()) {", "-      _runProjectAction.setEnabled(isProjectActiveAndMainClassSet());", "+    boolean b = isProjectActiveAndMainClassSet();", "+    _runProjectAction.setEnabled(b);", "+    if (b) {", "-      _runProjectAction.setEnabled(false);"]}], "num": 24251}