{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "024204a12d6495feb8e78334f7c31e47", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14333a2c3a7f2f4956d9d90a31aff672", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 40, "signatureBeforeChange": "   private void _setupColorPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupColorPanel(ConfigPanel panel)", "diff": ["-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.DEFINITIONS_NORMAL_COLOR, \"Normal Color\", this,", "-                                                \"The default color for text in the Definitions Pane.\"));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.DEFINITIONS_KEYWORD_COLOR, \"Keyword Color\", this,", "-                                                \"The color for Java keywords in the Definitions Pane.\"));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.DEFINITIONS_TYPE_COLOR, \"Type Color\", this,", "-                                                \"The color for classes and types in the Definitions Pane.\"));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.DEFINITIONS_COMMENT_COLOR, \"Comment Color\", this,", "-                                                \"The color for comments in the Definitions Pane.\"));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.DEFINITIONS_DOUBLE_QUOTED_COLOR, \"Double-quoted Color\", this,", "-                                                \"The color for quoted strings (eg. \\\"...\\\") in the Definitions Pane.\"));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.DEFINITIONS_SINGLE_QUOTED_COLOR, \"Single-quoted Color\", this,", "-                                                \"The color for quoted characters (eg. 'a') in the Definitions Pane.\"));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.DEFINITIONS_NUMBER_COLOR, \"Number Color\", this,", "-                                                \"The color for numbers in the Definitions Pane.\"));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.DEFINITIONS_BACKGROUND_COLOR, \"Background Color\", this,", "-                                                \"The background color of the Definitions Pane.\", true));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.DEFINITIONS_LINE_NUMBER_COLOR, \"Line Number Color\", this,", "-                                                \"The color for line numbers in the Definitions Pane.\"));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.DEFINITIONS_LINE_NUMBER_BACKGROUND_COLOR, \"Line Number Background Color\", this,", "-                                                \"The background color for line numbers in the Definitions Pane.\", true));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.DEFINITIONS_MATCH_COLOR, \"Brace-matching Color\", this,", "-                                                \"The color for matching brace highlights in the Definitions Pane.\", true));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.COMPILER_ERROR_COLOR, \"Compiler Error Color\", this,", "-                                                \"The color for compiler error highlights in the Definitions Pane.\", true));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.BOOKMARK_COLOR, \"Bookmark Color\", this,", "-                                                \"The color for bookmarks in the Definitions Pane.\", true));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.DEFINITIONS_NORMAL_COLOR));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.DEFINITIONS_KEYWORD_COLOR));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.DEFINITIONS_TYPE_COLOR));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.DEFINITIONS_COMMENT_COLOR));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.DEFINITIONS_DOUBLE_QUOTED_COLOR));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.DEFINITIONS_SINGLE_QUOTED_COLOR));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.DEFINITIONS_NUMBER_COLOR));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.DEFINITIONS_BACKGROUND_COLOR, true));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.DEFINITIONS_LINE_NUMBER_COLOR));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.DEFINITIONS_LINE_NUMBER_BACKGROUND_COLOR, true));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.DEFINITIONS_MATCH_COLOR,true));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.COMPILER_ERROR_COLOR, true));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.BOOKMARK_COLOR, true));", "-      addOptionComponent(panel, new ColorOptionComponent(OptionConstants.FIND_RESULTS_COLORS[i], \"Find Results Color \"+(i+1), this,", "-                                                         \"A color for highlighting find results in the Definitions Pane.\", true));", "+      addOptionComponent(panel, newColorOptionComponent(OptionConstants.FIND_RESULTS_COLORS[i], true));", "-                       new ColorOptionComponent(OptionConstants.DEBUG_BREAKPOINT_COLOR, \"Debugger Breakpoint Color\", this,", "-                                                \"The color for breakpoints in the Definitions Pane.\", true));", "+                       newColorOptionComponent(OptionConstants.DEBUG_BREAKPOINT_COLOR, true));", "-                       new ColorOptionComponent(OptionConstants.DEBUG_BREAKPOINT_DISABLED_COLOR, \"Disabled Debugger Breakpoint Color\", this,", "-                                                \"The color for disabled breakpoints in the Definitions Pane.\", true));", "+                       newColorOptionComponent(OptionConstants.DEBUG_BREAKPOINT_DISABLED_COLOR, true));", "-                       new ColorOptionComponent(OptionConstants.DEBUG_THREAD_COLOR, \"Debugger Location Color\", this,", "-                                                \"The color for the location of the current suspended thread in the Definitions Pane.\", true));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.SYSTEM_OUT_COLOR, \"System.out Color\", this,", "-                                                       \"The color for System.out in the Interactions and Console Panes.\"));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.SYSTEM_ERR_COLOR, \"System.err Color\", this,", "-                                                       \"The color for System.err in the Interactions and Console Panes.\"));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.SYSTEM_IN_COLOR, \"System.in Color\", this,", "-                                                       \"The color for System.in in the Interactions Pane.\"));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.INTERACTIONS_ERROR_COLOR, \"Interactions Error Color\", this,", "-                                                       \"The color for interactions errors in the Interactions Pane.\", false, true));", "-    addOptionComponent(panel, new ColorOptionComponent(OptionConstants.DEBUG_MESSAGE_COLOR, \"Debug Message Color\", this,", "-                                                       \"The color for debugger messages in the Interactions Pane.\", false, true));", "+                       newColorOptionComponent(OptionConstants.DEBUG_THREAD_COLOR, true));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.SYSTEM_OUT_COLOR));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.SYSTEM_ERR_COLOR));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.SYSTEM_IN_COLOR));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.INTERACTIONS_ERROR_COLOR, false, true));", "+    addOptionComponent(panel, newColorOptionComponent(OptionConstants.DEBUG_MESSAGE_COLOR, false, true));", "-                       new ColorOptionComponent(OptionConstants.DRJAVA_ERRORS_BUTTON_COLOR, \"DrJava Errors Button Background Color\", this,", "-                                                \"The background color of the \\\"Errors\\\" button used to show internal DrJava errors.\", true));", "+                       newColorOptionComponent(OptionConstants.DRJAVA_ERRORS_BUTTON_COLOR, true));", "-                       new ColorOptionComponent(OptionConstants.RIGHT_MARGIN_COLOR, \"Right Margin Color\", this,", "-                                                \"The color of the right margin line, if displayed.\", true));", "+                       newColorOptionComponent(OptionConstants.RIGHT_MARGIN_COLOR, true));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49ab4f8f160794751c09627487fa954a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 41, "signatureBeforeChange": "   private void _setupPositionsPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupPositionsPanel(ConfigPanel panel)", "diff": ["-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.WINDOW_STORE_POSITION,", "-                                                         \"Save Main Window Position\", this,", "-                                                         \"Whether to save and restore the size and position of the main window.\", false)", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.WINDOW_STORE_POSITION, false)", "-                       new BooleanOptionComponent(OptionConstants.DIALOG_CLIPBOARD_HISTORY_STORE_POSITION,", "-                                                  \"Save \\\"Clipboard History\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Clipboard History\\\" dialog.\", ", "-                                                  false)", "+                       newBooleanOptionComponent(OptionConstants.DIALOG_CLIPBOARD_HISTORY_STORE_POSITION,false)", "-                       new BooleanOptionComponent(OptionConstants.DIALOG_GOTOFILE_STORE_POSITION,", "-                                                  \"Save \\\"Go to File\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Go to File\\\" dialog.\", ", "-                                                  false)", "+                       newBooleanOptionComponent(OptionConstants.DIALOG_GOTOFILE_STORE_POSITION, false)", "-                       new BooleanOptionComponent(OptionConstants.DIALOG_COMPLETE_WORD_STORE_POSITION,", "-                                                  \"Save \\\"Auto-Complete Word\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Auto-Complete Word\\\" dialog.\", ", "-                                                  false)", "+                       newBooleanOptionComponent(OptionConstants.DIALOG_COMPLETE_WORD_STORE_POSITION,false)", "-                       new BooleanOptionComponent(OptionConstants.DIALOG_JAROPTIONS_STORE_POSITION,", "-                                                  \"Save \\\"Create Jar File from Project\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the position of the \\\"Create Jar File from Project\\\" dialog.\", ", "-                                                  false)", "+                       newBooleanOptionComponent(OptionConstants.DIALOG_JAROPTIONS_STORE_POSITION,false)", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_OPENJAVADOC_STORE_POSITION,", "-                                                  \"Save \\\"Open Javadoc\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Open Javadoc\\\" dialog.\", false)", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DIALOG_OPENJAVADOC_STORE_POSITION, false)", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_AUTOIMPORT_STORE_POSITION,", "-                                                  \"Save \\\"Auto Import\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Auto Import\\\" dialog.\", false)", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DIALOG_AUTOIMPORT_STORE_POSITION, false)", "-                       new BooleanOptionComponent(OptionConstants.DIALOG_EXTERNALPROCESS_STORE_POSITION,", "-                                                  \"Save \\\"Execute External Process\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the position of the \\\"Execute External Process\\\" dialog.\", ", "-                                                  false)", "+                       newBooleanOptionComponent(OptionConstants.DIALOG_EXTERNALPROCESS_STORE_POSITION,false)", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_EDITEXTERNALPROCESS_STORE_POSITION,", "-                                                  \"Save \\\"Edit External Process\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the position of the \\\"Edit External Process\\\" dialog.\", false)", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DIALOG_EDITEXTERNALPROCESS_STORE_POSITION, false)", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_OPENJAVADOC_STORE_POSITION,", "-                                                  \"Save \\\"Open Javadoc\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the position of the \\\"Open Javadoc\\\" dialog.\", false)", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DIALOG_OPENJAVADOC_STORE_POSITION, false)", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_TABBEDPANES_STORE_POSITION,", "-                                                  \"Save \\\"Tabbed Panes\\\" Window Position\", this,", "-                                                  \"Whether to save and restore the position of the \\\"Tabbed Panes\\\" window.\", false)", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DIALOG_TABBEDPANES_STORE_POSITION, false)", "-                       new BooleanOptionComponent(OptionConstants.DETACH_TABBEDPANES,", "-                                                  \"Detach Tabbed Panes\", ", "-                                                  this,", "-                                                  \"Whether to detach the tabbed panes and display them in a separate window.\", ", "-                                                  false)", "+                       newBooleanOptionComponent(OptionConstants.DETACH_TABBEDPANES,false)", "-                       new BooleanOptionComponent(OptionConstants.DIALOG_DEBUGFRAME_STORE_POSITION,", "-                                                  \"Save \\\"Debugger\\\" Window Position\", ", "-                                                  this,", "-                                                  \"Whether to save and restore the position of the \\\"Debugger\\\" window.\", ", "-                                                  false)", "+                       newBooleanOptionComponent(OptionConstants.DIALOG_DEBUGFRAME_STORE_POSITION,false)", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DETACH_DEBUGGER,", "-                                                  \"Detach Debugger\", this,", "-                                                  \"Whether to detach the debugger and display it in a separate window.\", false)", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DETACH_DEBUGGER, false)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5535ca6d99ab8633e168679fb132e8ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 58, "signatureBeforeChange": "   private void _setupMiscPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupMiscPanel(ConfigPanel panel)", "diff": ["-    addOptionComponent(panel, new IntegerOptionComponent(OptionConstants.INDENT_LEVEL,", "-                                                  \"Indent Level\", this,", "-                                                  \"The number of spaces to use for each level of indentation.\"));", "-    addOptionComponent(panel, new IntegerOptionComponent(OptionConstants.RECENT_FILES_MAX_SIZE, \"Recent Files List Size\", this,", "-                                                  \"<html>The number of files to remember in<br>\" +", "-                                                  \"the recently used files list in the File menu.</html>\"));", "-    addOptionComponent(panel, new IntegerOptionComponent(OptionConstants.BROWSER_HISTORY_MAX_SIZE,", "-                                                         \"Maximum Size of Browser History\", ", "-                                                         this,", "-                                                         \"Determines how many entries are kept in the browser history.\"));", "+    addOptionComponent(panel, newIntegerOptionComponent(OptionConstants.INDENT_LEVEL));", "+    addOptionComponent(panel, newIntegerOptionComponent(OptionConstants.RECENT_FILES_MAX_SIZE));", "+    addOptionComponent(panel, newIntegerOptionComponent(OptionConstants.BROWSER_HISTORY_MAX_SIZE));", "-                       new BooleanOptionComponent(OptionConstants.AUTO_CLOSE_COMMENTS, \"Automatically Close Block Comments\", ", "-                                                  this,", "-                                                  \"<html>Whether to automatically insert a closing comment tag (\\\"*/\\\")<br>\" +", "-                                                  \"when the enter key is pressed after typing a new block comment<br>\" +", "-                                                  \"tag (\\\"/*\\\" or \\\"/**\\\").</html>\"));", "-    String runWithAssertMsg = ", "-      \"<html>Whether to execute <code>assert</code> statements in classes running in the interactions pane.</html>\";", "+                       newBooleanOptionComponent(OptionConstants.AUTO_CLOSE_COMMENTS));", "-                       new BooleanOptionComponent(OptionConstants.RUN_WITH_ASSERT, \"Enable Assert Statement Execution\", ", "-                                                  this,", "-                                                  runWithAssertMsg));", "+                       newBooleanOptionComponent(OptionConstants.RUN_WITH_ASSERT));", "-                       new BooleanOptionComponent(OptionConstants.BACKUP_FILES, \"Keep Emacs-style Backup Files\", ", "-                                                  this,", "-                                                  \"<html>Whether DrJava should keep a backup copy of each file that<br>\" +", "-                                                  \"the user modifies, saved with a '~' at the end of the filename.</html>\"));", "+                       newBooleanOptionComponent(OptionConstants.BACKUP_FILES));", "-                       new BooleanOptionComponent(OptionConstants.RESET_CLEAR_CONSOLE, \"Clear Console After Interactions Reset\", ", "-                                                  this,", "-                                                  \"Whether to clear the Console output after resetting the Interactions Pane.\"));", "+                       newBooleanOptionComponent(OptionConstants.RESET_CLEAR_CONSOLE));", "-                       new BooleanOptionComponent(OptionConstants.FIND_REPLACE_FOCUS_IN_DEFPANE, ", "-                                                  \"Focus on the definitions pane after find/replace\", ", "-                                                  this,", "-                                                  \"<html>Whether to focus on the definitions pane after executing a find/replace operation.<br>\" +", "-                                                  \"If this is not selected, the focus will be in the Find/Replace pane.</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DRJAVA_USE_FORCE_QUIT, ", "-                                                  \"Forcefully Quit DrJava\", this,", "-                                                  \"<html>On some platforms, DrJava does not shut down properly when files are open<br>\"+", "-                                                  \"(namely tablet PCs). Check this option to force DrJava to close.</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.REMOTE_CONTROL_ENABLED, ", "-                                                  \"Enable Remote Control\", this,", "-                                                  \"<html>Whether DrJava should listen to a socket (see below) so it<br>\"+", "-                                                         \"can be remote controlled and told to open files.<br>\"+", "-                                                         \"(Changes will not be applied until DrJava is restarted.)</html>\"));", "-    addOptionComponent(panel, new IntegerOptionComponent(OptionConstants.REMOTE_CONTROL_PORT, ", "-                                                         \"Remote Control Port\", this,", "-                                                         \"<html>A running instance of DrJava can be remote controlled and<br>\"+", "-                                                         \"told to open files. This specifies the port used for remote control.<br>\" + ", "-                                                         \"(Changes will not be applied until DrJava is restarted.)</html>\"));", "-    addOptionComponent(panel, new IntegerOptionComponent(OptionConstants.FOLLOW_FILE_DELAY, ", "-                                                         \"Follow File Delay\", this,", "-                                                         \"<html>The delay in milliseconds that has to elapse before DrJava will check<br>\"+", "-                                                         \"if a file that is being followed or the output of an external process has changed.</html>\"));", "-    addOptionComponent(panel, new IntegerOptionComponent(OptionConstants.FOLLOW_FILE_LINES, ", "-                                                         \"Maximum Lines in \\\"Follow File\\\" Window\", this,", "-                                                         \"<html>The maximum number of lines to keep in a \\\"Follow File\\\"<br>\"+", "-                                                         \"or \\\"External Process\\\" pane. Enter 0 for unlimited.</html>\"));", "+                       newBooleanOptionComponent(OptionConstants.FIND_REPLACE_FOCUS_IN_DEFPANE));", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DRJAVA_USE_FORCE_QUIT));", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.REMOTE_CONTROL_ENABLED));", "+    addOptionComponent(panel, newIntegerOptionComponent(OptionConstants.REMOTE_CONTROL_PORT));", "+    addOptionComponent(panel, newIntegerOptionComponent(OptionConstants.FOLLOW_FILE_DELAY));", "+    addOptionComponent(panel, newIntegerOptionComponent(OptionConstants.FOLLOW_FILE_LINES));", "-//    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.LIGHTWEIGHT_PARSING_ENABLED, ", "-//                                                  \"Perform lightweight parsing\", this,", "-//                                                  \"<html>Whether to continuously parse the source file for useful information.<br>\" +", "-//                                                  \"Enabling this option might introduce delays when editing files.<html>\"));", "-//    addOptionComponent(panel, new IntegerOptionComponent(OptionConstants.DIALOG_LIGHTWEIGHT_PARSING_DELAY, \"Light-weight parsing delay in milliseconds\", this,", "-//                                                  \"The amount of time DrJava will wait after the last keypress before beginning to parse.\"));", "+//    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.LIGHTWEIGHT_PARSING_ENABLED));", "+//    addOptionComponent(panel, newIntegerOptionComponent(OptionConstants.DIALOG_LIGHTWEIGHT_PARSING_DELAY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91a69b61e9ffce854cec7994a4bb4643", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "1c816952b5b8421dc41f789510e8d7ee742c6828", "commitAfterChange": "5d5ee31a35adeb92d7addaffa7abf0c54d001a85", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   private void _setupFileTypesPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupFileTypesPanel(ConfigPanel panel)", "diff": ["-      addOptionComponent(panel, new LabelComponent(\"<html>Assign DrJava project files with the<br>\"+", "-                                                   \"extension .drjava to DrJava. When double-clicking<br>\"+", "-                                                   \"on a .drjava file, DrJava will open it.</html>\", this, true));", "+      addOptionComponent(panel, new LabelComponent(\"<html>Assign DrJava project files and DrJava extensions<br>\"+", "+                                                   \"(with the extensions .drjava and .djapp) to DrJava.<br>\"+", "+                                                   \"When double-clicking on a .drjava file, DrJava will open it.</html>\", this, true));", "-      addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "+      panel.addComponent(new ButtonComponent(new ActionListener() {", "-          if (!PlatformFactory.ONLY.registerProjectFileExtension()) {", "+          if (PlatformFactory.ONLY.registerDrJavaFileExtensions()) {", "-                                          \"Could not set .drjava file association.\",", "+                                          \"Successfully set .drjava and .djapp file associations.\",", "+                                          \"Success\",", "+                                          JOptionPane.INFORMATION_MESSAGE); ", "+          }", "+          else {", "+            JOptionPane.showMessageDialog(ConfigFrame.this,", "+                                          \"Could not set .drjava and .djapp file associations.\",", "-      }, \"Associate .drjava Files with DrJava\", this, \"This associates .drjava project files with DrJava.\"));", "+      }, \"Associate .drjava and .djapp Files with DrJava\", this, \"This associates .drjava and .djapp files with DrJava.\"));", "-      addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "+      panel.addComponent(new ButtonComponent(new ActionListener() {", "-          if (!PlatformFactory.ONLY.unregisterProjectFileExtension()) {", "+          if (PlatformFactory.ONLY.unregisterDrJavaFileExtensions()) {", "-                                          \"Could not remove .drjava file association.\",", "+                                          \"Successfully removed .drjava and .djapp file associations.\",", "+                                          \"Success\",", "+                                          JOptionPane.INFORMATION_MESSAGE); ", "+          }", "+          else {", "+            JOptionPane.showMessageDialog(ConfigFrame.this,", "+                                          \"Could not remove .drjava and .djapp file associations.\",", "-      }, \"Remove .drjava File Associates\", this, \"This removes the association of .drjava project files with DrJava.\"));", "-      ", "-      addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "-      ", "-      addOptionComponent(panel, new ForcedChoiceOptionComponent(OptionConstants.PROJECT_FILE_EXT_REGISTRATION,", "-                                                                \"<html>Automatically assign .drjava Project Files to DrJava</html>\", this,", "-                                                                \"<html>Selecting 'always' will re-establish the file association every time DrJava<br>\"+", "-                                                                \"started, without asking. Selecting 'ask me' will ask the user at start up<br>\"+", "-                                                                \"if the association has been changed. Selecting 'never' will not assign<br>\"+", "-                                                                \".drjava files to DrJava.\"));", "+      }, \"Remove .drjava and .djapp File Associations\", this, \"This removes the association of .drjava and .djapp files with DrJava.\"));", "-      addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "+      panel.addComponent(new ButtonComponent(new ActionListener() {", "-          if (!PlatformFactory.ONLY.registerJavaFileExtension()) {", "+          if (PlatformFactory.ONLY.registerJavaFileExtension()) {", "+            JOptionPane.showMessageDialog(ConfigFrame.this,", "+                                          \"Successfully set .java file association.\",", "+                                          \"Success\",", "+                                          JOptionPane.INFORMATION_MESSAGE); ", "+          }", "+          else {", "-      addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "+      panel.addComponent(new ButtonComponent(new ActionListener() {", "-          if (!PlatformFactory.ONLY.unregisterJavaFileExtension()) {", "+          if (PlatformFactory.ONLY.unregisterJavaFileExtension()) {", "+            JOptionPane.showMessageDialog(ConfigFrame.this,", "+                                          \"Successfully removed .java file association.\",", "+                                          \"Success\",", "+                                          JOptionPane.INFORMATION_MESSAGE); ", "+          }", "+          else {", "-      }, \"Remove .java File Association\", this, \"This removes the association of .drjava project files with DrJava.\"));", "+      }, \"Remove .java File Association\", this, \"This removes the association of .java project files with DrJava.\"));", "-      addOptionComponent(panel, new ForcedChoiceOptionComponent(OptionConstants.JAVA_FILE_EXT_REGISTRATION,", "-                                                                \"<html>Automatically assign .java Source Files to DrJava</html>\", this,", "-                                                                \"<html>Assign Java source files with the extension .java to DrJava.<br>\"+", "-                                                                \"When double-clicking on a .java file, DrJava will open it.<br><br>\"+", "+      addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "+      addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "+      ", "+      addOptionComponent(panel, new ForcedChoiceOptionComponent(OptionConstants.FILE_EXT_REGISTRATION,", "+                                                                \"<html>Automatically assign .java, .drjava and .djapp Files to DrJava</html>\", this,", "+                                                                \"<html>Assign files with the extensions .java, .drjava and .djapp to DrJava.<br>\"+", "+                                                                \"When double-clicking those files, they will be opened in DrJava.<br><br>\"+", "-                                                                \".drjava files to DrJava.\"));", "+                                                                \".java, .drjava and .djapp files to DrJava.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99a47e572c0d620fc5a0ef0cfa0e3da5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "839683081b0d966fa9fc02dc0e1948fc900d3a55", "commitAfterChange": "72ee238f22e4ae6534ad887ff5bcbab9970c036e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   private void _setupPositionsPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupPositionsPanel(ConfigPanel panel)", "diff": ["-                                                  \"Save Main Window Position\", this,", "-                                                  \"Whether to save and restore the size and position of the main window.\"));", "+                                                         \"Save Main Window Position\", this,", "+                                                         \"Whether to save and restore the size and position of the main window.\",false)", "+                         .setEntireColumn(true));", "+    addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "+    ", "-                                                  \"Save \\\"Clipboard History\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Clipboard History\\\" dialog.\"));", "+                                                         \"Save \\\"Clipboard History\\\" Dialog Position\", this,", "+                                                         \"Whether to save and restore the size and position of the \\\"Clipboard History\\\" dialog.\", false)", "+                         .setEntireColumn(true));", "+    ", "+    addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "-                                                  \"Save \\\"Go to File\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Go to File\\\" dialog.\"));", "+                                                         \"Save \\\"Go to File\\\" Dialog Position\", this,", "+                                                         \"Whether to save and restore the size and position of the \\\"Go to File\\\" dialog.\", false)", "+                         .setEntireColumn(true));", "+    ", "+    addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "-                                                  \"Save \\\"Auto-Complete Word\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Auto-Complete Word\\\" dialog.\"));", "+                                                         \"Save \\\"Auto-Complete Word\\\" Dialog Position\", this,", "+                                                         \"Whether to save and restore the size and position of the \\\"Auto-Complete Word\\\" dialog.\", false)", "+                         .setEntireColumn(true));", "+    ", "+    addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "-                                                  \"Whether to save and restore the position of the \\\"Create Jar File from Project\\\" dialog.\"));", "+                                                  \"Whether to save and restore the position of the \\\"Create Jar File from Project\\\" dialog.\", false)", "+                         .setEntireColumn(true));", "+    ", "+    addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "-                                                  \"Whether to save and restore the size and position of the \\\"Open Javadoc\\\" dialog.\"));", "+                                                  \"Whether to save and restore the size and position of the \\\"Open Javadoc\\\" dialog.\", false)", "+                         .setEntireColumn(true));", "+    ", "+    addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "-                                                  \"Whether to save and restore the size and position of the \\\"Auto Import\\\" dialog.\"));", "+                                                  \"Whether to save and restore the size and position of the \\\"Auto Import\\\" dialog.\", false)", "+                         .setEntireColumn(true));", "+    ", "+    addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "-                                                  \"Whether to save and restore the position of the \\\"Execute External Process\\\" dialog.\"));", "+                                                  \"Whether to save and restore the position of the \\\"Execute External Process\\\" dialog.\", false)", "+                         .setEntireColumn(true));", "+    ", "+    addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "-                                                  \"Whether to save and restore the position of the \\\"Edit External Process\\\" dialog.\"));", "+                                                  \"Whether to save and restore the position of the \\\"Edit External Process\\\" dialog.\", false)", "+                         .setEntireColumn(true));", "+    ", "+    addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "-                                                  \"Whether to save and restore the size and position of the \\\"Open Javadoc\\\" dialog.\"));", "+                                                  \"Whether to save and restore the size and position of the \\\"Open Javadoc\\\" dialog.\", false)", "+                         .setEntireColumn(true));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a006f74dfd139219b8855ed72fbdd086", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "f28cc1df1806224e361f5125bf0fdd8c055cbda8", "commitAfterChange": "df2b79c4755a48b6d68cea0053ee5b504fa8b5d0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "diff": ["-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.WINDOW_STORE_POSITION,", "-                                                  \"Save Main Window Position\", this,", "-                                                  \"Whether to save and restore the size and position of the main window.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_CLIPBOARD_HISTORY_STORE_POSITION,", "-                                                  \"Save \\\"Clipboard History\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Clipboard History\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) { _mainFrame.resetClipboardHistoryDialogPosition(); }", "-    }, \"Reset \\\"Clipboard History\\\" Dialog Position and Size\", this, \"This resets the dialog position and size to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_GOTOFILE_STORE_POSITION,", "-                                                  \"Save \\\"Go to File\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Go to File\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) { _mainFrame.resetGotoFileDialogPosition(); }", "-    }, \"Reset \\\"Go to File\\\" Dialog Position and Size\", this, \"This resets the dialog position and size to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_COMPLETE_WORD_STORE_POSITION,", "-                                                  \"Save \\\"Auto-Complete Word\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Auto-Complete Word\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) { _mainFrame.resetCompleteWordDialogPosition(); }", "-    }, \"Reset \\\"Auto-Complete Word\\\" Dialog Position and Size\", this, \"This resets the dialog position and size to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_JAROPTIONS_STORE_POSITION,", "-                                                  \"Save \\\"Create Jar File from Project\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the position of the \\\"Create Jar File from Project\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        _mainFrame.resetJarOptionsDialogPosition();", "-      }", "-    }, \"Reset \\\"Create Jar File from Project\\\" Dialog Position\", this, \"This resets the dialog position to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_OPENJAVADOC_STORE_POSITION,", "-                                                  \"Save \\\"Open Javadoc\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Open Javadoc\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) { _mainFrame.resetOpenJavadocDialogPosition(); }", "-    }, \"Reset \\\"Open Javadoc\\\" Dialog Position and Size\", this, \"This resets the dialog position and size to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_AUTOIMPORT_STORE_POSITION,", "-                                                  \"Save \\\"Auto Import\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Auto Import\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) { _mainFrame.resetAutoImportDialogPosition(); }", "-    }, \"Reset \\\"Auto Import\\\" Dialog Position and Size\", this, \"This resets the dialog position and size to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_EXTERNALPROCESS_STORE_POSITION,", "-                                                  \"Save \\\"Execute External Process\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the position of the \\\"Execute External Process\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        _mainFrame.resetExecuteExternalProcessPosition();", "-      }", "-    }, \"Reset \\\"Execute External Process\\\" Dialog Position\", this, \"This resets the dialog position to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_EDITEXTERNALPROCESS_STORE_POSITION,", "-                                                  \"Save \\\"Edit External Process\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the position of the \\\"Edit External Process\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        _mainFrame.resetEditExternalProcessPosition();", "-      }", "-    }, \"Reset \\\"Execute External Process\\\" Dialog Position\", this, \"This resets the dialog position to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_OPENJAVADOC_STORE_POSITION,", "-                                                  \"Save \\\"Open Javadoc\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Open Javadoc\\\" dialog.\"));"]}], "num": 28977}