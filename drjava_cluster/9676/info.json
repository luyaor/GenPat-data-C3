{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6d3607a7e5c17745d3dc6fb49bc8ea4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0356388af37f92e04e167fcd3e0cab87", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "df2b79c4755a48b6d68cea0053ee5b504fa8b5d0", "commitAfterChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 96, "signatureBeforeChange": "     public String getFullPackage()", "signatureAfterChange": "     public String getFullPackage()", "diff": ["+      fullPackage = \"\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28ec435a7b9e9b235e064d1a11088edf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "df2b79c4755a48b6d68cea0053ee5b504fa8b5d0", "commitAfterChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 91, "signatureBeforeChange": "     public String getFullPackage()", "signatureAfterChange": "     public abstract String getFullPackage();", "diff": ["+    /** Return the full package including the last period, e.g. \"java.lang.\". */", "+    public abstract String getFullPackage();", "-    }", "-    public String getFullPackage() {", "-      return fullPackage;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c2924dc37ff28600820c93d339eade2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b128df4fa9d8df79a76ba9e19a170c160365e646", "commitAfterChange": "e16fd9dc1aa815e303a7aa80be407f3a031e237d", "methodNumberBeforeChange": 398, "methodNumberAfterChange": 344, "signatureBeforeChange": "     public int compareTo(OpenDefinitionsDocument o)", "signatureAfterChange": "     public int compareTo(OpenDefinitionsDocument o)", "diff": ["-    /** Orders ODDs by their id's. */", "-    public int compareTo(OpenDefinitionsDocument o) { return _id - o.id(); }", "+    /** Orders ODDs by their lexical names.  Note that equals defines a finer equivalence relation than compareTo. */", "+    public int compareTo(OpenDefinitionsDocument o) { ", "+      int diff = hashCode() - o.hashCode();", "+      if (diff != 0) return diff;", "+      return _lexiName.compareTo(o.getLexiName()); ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6f2a827c197d857c2100021de798f72", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public boolean isOnMatch()", "signatureAfterChange": "   public boolean isOnMatch()", "diff": ["+    int len = _findWord.length();", "+    int off = _current.getOffset();", "+    if(off < len) return false;", "-      String matchSpace = _doc.getText(0, _current.getOffset());", "-      return matchSpace.endsWith(_findWord);", "+      String matchSpace = _doc.getText(off-len, len);", "+      return matchSpace.equals(_findWord);"]}], "num": 9676}