{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d16224be0017b50de938df84d1de6b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06cfa7e0775f38ff710e5ede8d4b8c00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private int _getLineFirstCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getLineFirstCharPos(int pos) throws BadLocationException", "diff": ["-//    _doc.acquireReadLock();", "-//    try { ", "-    return _doc._getLineFirstCharPos(pos); ", "-//    }", "-//    finally { _doc.releaseReadLock(); }", "+    _doc.acquireReadLock();", "+    try { return _doc._getLineFirstCharPos(pos); }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c6d2f2c3cc14af5721350baec1913ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   private int _findPrevDelimiter(int pos, char[] delimiters) throws BadLocationException", "signatureAfterChange": "   private int _findPrevDelimiter(int pos, char[] delimiters) throws BadLocationException", "diff": ["-//    _doc.acquireReadLock();", "-//    try { ", "-      return _doc._findPrevDelimiter(pos, delimiters); ", "-//    }", "-//    finally { _doc.releaseReadLock(); }", "+    _doc.acquireReadLock();", "+    try { return _doc._findPrevDelimiter(pos, delimiters); }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "379ee2a984885ac53148f3391b617569", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ConsoleController.java", "commitBeforeChange": "c8bdd45b172c9714aba30b2edf20a9a7463e66ab", "commitAfterChange": "c2cccf3d2cd557fff7d01a0111e1dc7df943b427", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void actionPerformed(ActionEvent e)", "signatureAfterChange": "     public void actionPerformed(ActionEvent e)", "diff": ["-      int position = _pane.getCaretPosition();", "-      if (position < _doc.getPromptPos()) moveToPrompt();", "-      else if (position == _doc.getPromptPos())_pane.getBeep().run();", "-      else // position > _doc.getPromptPos()", "-        _pane.setCaretPosition(position - 1);", "+      _doc.acquireReadLock(); ", "+      try {", "+        int position = _pane.getCaretPosition();", "+        if (position < _doc.getPromptPos()) moveToPrompt();", "+        else if (position == _doc.getPromptPos())_pane.getBeep().run();", "+        else // position > _doc.getPromptPos()", "+          _pane.setCaretPosition(position - 1);", "+      }", "+      finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ce4eff03bc7f987e86d650235efe0d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsScriptModel.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public boolean hasNextInteraction()", "signatureAfterChange": "   public boolean hasNextInteraction()", "diff": ["-   */", "-  public boolean hasNextInteraction() {", "-    return _currentInteraction < _interactions.size() - 1;", "-  }", "+  /** @return true iff this script has another interaction to perform. */", "+  public boolean hasNextInteraction() {", "+    _doc.acquireReadLock();", "+    try { return _currentInteraction < _interactions.size() - 1; }  // what if _passedCurrent == true?", "+    finally { _doc.releaseReadLock(); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "663f6d84d9afdc4757aae90191d7a1b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private int _getLineStartPos(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getLineStartPos(int pos) throws BadLocationException", "diff": ["-//    _doc.acquireReadLock();", "-//    try { ", "-      return _doc._getLineStartPos(pos); ", "-//    }", "-//    finally { _doc.releaseReadLock(); }", "+    _doc.acquireReadLock();", "+    try { return _doc._getLineStartPos(pos); }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6add2739b4eb37e7540824723f4565e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ConsoleController.java", "commitBeforeChange": "c8bdd45b172c9714aba30b2edf20a9a7463e66ab", "commitAfterChange": "c2cccf3d2cd557fff7d01a0111e1dc7df943b427", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void actionPerformed(ActionEvent e)", "signatureAfterChange": "     public void actionPerformed(ActionEvent e)", "diff": ["-      int position = _pane.getCaretPosition();", "-      if (position < _doc.getPromptPos()) moveToPrompt();", "-      else _pane.getBeep().run();", "+      _doc.acquireReadLock();", "+      try {", "+        int position = _pane.getCaretPosition();", "+        if (position < _doc.getPromptPos()) moveToPrompt();", "+        else _pane.getBeep().run();", "+      }", "+      finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cb559e75d7a913f24dc3cb2d6aeaa24", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "      private void _assertLineBraceInfo(int distance, String braceType)", "signatureAfterChange": "      private void _assertLineBraceInfo(int distance, String braceType)", "diff": ["-//    _doc.acquireReadLock();", "-//    try {", "-    BraceInfo info = _doc._getLineEnclosingBrace();", "+    _doc.acquireReadLock();", "+    try {", "+      BraceInfo info = _doc._getLineEnclosingBrace();", "-    assertEquals(\"line brace info: brace distance\", distance, info.distance());", "-    assertEquals(\"line brace info: brace type\", braceType, info.braceType());", "-//    }", "-//    finally { _doc.releaseReadLock(); }", "+      assertEquals(\"line brace info: brace distance\", distance, info.distance());", "+      assertEquals(\"line brace info: brace type\", braceType, info.braceType());", "+    }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f04bacfe2895b0a00a858f370de777e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private int _getIndentOfCurrStmt(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getIndentOfCurrStmt(int pos) throws BadLocationException", "diff": ["-//    _doc.acquireReadLock();", "-//    try { ", "-      return _doc._getIndentOfCurrStmt(pos); ", "-//    }", "-//    finally { _doc.releaseReadLock(); }", "+    _doc.acquireReadLock();", "+    try { return _doc._getIndentOfCurrStmt(pos); }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7598fc2ba8d806e077a5536b3ca68360", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   private int _getLineEndPos(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getLineEndPos(int pos) throws BadLocationException", "diff": ["-//    _doc.acquireReadLock();", "-//    try { ", "-    return _doc._getLineEndPos(pos); ", "-//    }", "-//    finally { _doc.releaseReadLock(); }", "+    _doc.acquireReadLock();", "+    try { return _doc._getLineEndPos(pos); }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9eaf7ceb67fd176b943d919adf9f774a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ConsoleController.java", "commitBeforeChange": "c8bdd45b172c9714aba30b2edf20a9a7463e66ab", "commitAfterChange": "c2cccf3d2cd557fff7d01a0111e1dc7df943b427", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void actionPerformed(ActionEvent e)", "signatureAfterChange": "     public void actionPerformed(ActionEvent e)", "diff": ["-      int position = _pane.getCaretPosition();", "-      if (position < _doc.getPromptPos()) moveToEnd();", "-      else if (position >= _doc.getLength()) _pane.getBeep().run();", "-      else // position between prompt and end", "-        _pane.setCaretPosition(position + 1);", "+      _doc.acquireReadLock();", "+      try {", "+        int position = _pane.getCaretPosition();", "+        if (position < _doc.getPromptPos()) moveToEnd();", "+        else if (position >= _doc.getLength()) _pane.getBeep().run();", "+        else // position between prompt and end", "+          _pane.setCaretPosition(position + 1);", "+      }", "+      finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3503fa3806791f6c548f42022ba1de5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private int _getFirstNonWSCharPos(int pos) throws BadLocationException", "signatureAfterChange": "   private int _getFirstNonWSCharPos(int pos) throws BadLocationException", "diff": ["-//    _doc.acquireReadLock();", "-//    try { ", "-    return _doc._getFirstNonWSCharPos(pos); ", "-//    }", "-//    finally { _doc.releaseReadLock(); }", "+    _doc.acquireReadLock();", "+    try { return _doc._getFirstNonWSCharPos(pos); }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b61f16b5de7b11ee25471d5900fabedd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsScriptModel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public boolean hasNextInteraction()", "signatureAfterChange": "   public boolean hasNextInteraction()", "diff": ["-//    _doc.acquireReadLock();", "-//    try { ", "-    return _currentInteraction < _interactions.size() - 1; ", "-//    }  // what if _passedCurrent == true?", "-//    finally { _doc.releaseReadLock(); }", "+    _doc.acquireReadLock();", "+    try { return _currentInteraction < _interactions.size() - 1; }  // what if _passedCurrent == true?", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2c196b161f943a880d717e4bc996680", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private boolean _inParenPhrase(int pos) throws BadLocationException", "signatureAfterChange": "   private boolean _inParenPhrase(int pos) throws BadLocationException", "diff": ["-//    _doc.acquireReadLock();", "-//    try { ", "-      return _doc._inParenPhrase(pos); ", "-//    }", "-//    finally { _doc.releaseReadLock(); }", "+    _doc.acquireReadLock();", "+    try { return _doc._inParenPhrase(pos); }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9ef4a9bc26cf731f167b1618c21ed90", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "      private void _assertBraceInfo(int distance, String braceType)", "signatureAfterChange": "      private void _assertBraceInfo(int distance, String braceType)", "diff": ["-//    _doc.acquireReadLock();", "-//    try {", "-    BraceInfo info = _doc._getEnclosingBrace();", "-    assertEquals(\"line brace info: brace distance\", distance, info.distance());", "-    assertEquals(\"line brace info: brace type\", braceType, info.braceType());", "-//    }", "-//    finally { _doc.releaseReadLock(); }", "+    _doc.acquireReadLock();", "+    try {", "+      BraceInfo info = _doc._getEnclosingBrace();", "+      assertEquals(\"line brace info: brace distance\", distance, info.distance());", "+      assertEquals(\"line brace info: brace type\", braceType, info.braceType());", "+    }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db444f26041d50ab8c895a8ad0f1c19b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "   public void select(int selectionStart, int selectionEnd)", "signatureAfterChange": "   public void select(int selectionStart, int selectionEnd)", "diff": ["-    setCaretPosition(selectionStart);", "-    moveCaretPosition(selectionEnd);  // What about the caret position in the reduced model?  It is updated by a listener.", "+    _doc.acquireReadLock();", "+    try {", "+//      if (selectionStart < 0) selectionStart = 0;", "+//      if (selectionEnd < 0) selectionEnd = 0;", "+      setCaretPosition(selectionStart);", "+      moveCaretPosition(selectionEnd);  // What about the caret position in the reduced model?  It is updated by a listener.", "+    }", "+    finally { _doc.releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7ae07168f292adf36ae16a274cce93a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsScriptModel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public boolean hasPrevInteraction()", "signatureAfterChange": "   public boolean hasPrevInteraction()", "diff": ["-//    _doc.acquireReadLock();", "-//    try {", "-    int index = _currentInteraction;", "-    if (_passedCurrent) index++; // We're passed the current, so the previous interaction is the current.", "-    return index > 0;", "-//    }", "-//    finally { _doc.releaseReadLock(); }", "+    _doc.acquireReadLock();", "+    try {", "+      int index = _currentInteraction;", "+      if (_passedCurrent) index++; // We're passed the current, so the previous interaction is the current.", "+      return index > 0;", "+    }", "+    finally { _doc.releaseReadLock(); }"]}], "num": 11709}