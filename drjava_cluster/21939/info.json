{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3c3c67091c4a02347088389949d6be9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e53f800740bc40f77644798d8d801e8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 120, "signatureBeforeChange": "   public static <S1, S2, S3, S4, T, U> Lambda4<S1, S2, S3, S4, U>      compose(final Lambda4<? super S1, ? super S2, ? super S3, ? super S4, ? extends T> l1,              final Lambda<? super T, ? extends U> l2)", "signatureAfterChange": "   public static <S1, S2, S3, S4, T, U> Lambda4<S1, S2, S3, S4, U>      compose(final Lambda4<? super S1, ? super S2, ? super S3, ? super S4, ? extends T> l1,              final Lambda<? super T, ? extends U> l2)", "diff": ["-  /** @return  A lambda that executes {@code l2} with the result of {@code l1} */", "+  /** Create a lambda that executes {@code l2} with the result of {@code l1}. */", "-    return new Lambda4<S1, S2, S3, S4, U>() {", "-      public U value(S1 a1, S2 a2, S3 a3, S4 a4) { return l2.value(l1.value(a1, a2, a3, a4)); }", "-    };", "+    return new ComposedLambda4<S1, S2, S3, S4, T, U>(l1, l2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbeea8919b288a0fc57394b114ca73b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 61, "signatureBeforeChange": "   public static <T> Lambda2<Object, Object, T> valueLambda2(final T val)", "signatureAfterChange": "     public ValueLambda(T val)", "diff": ["-  /** @return  A {@link Lambda2} whose result is always {@code val} */", "-  public static <T> Lambda2<Object, Object, T> valueLambda2(final T val) {", "-    return new Lambda2<Object, Object, T>() { ", "-      public T value(Object arg1, Object arg2) { return val; }", "-    };", "+    private final T _val;", "+    public ValueLambda(T val) { _val = val; }"]}], "num": 21939}