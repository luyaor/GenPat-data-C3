{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "195f581c9429608257d53f5444a1122f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ffdfd00602249e4c99a3e70dc48538", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/ConfigOptionListeners.java", "commitBeforeChange": "1635ebcc866330c5b8ab6470e164e0d8b3584d8f", "commitAfterChange": "df716c1c0097e3026300a60a646a72121f921c3d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @SuppressWarnings(\"fallthrough\")   public static void sanitizeSlaveJVMArgs(JFrame parent,                                           String value,                                           final OptionListener<String> l)", "signatureAfterChange": "    @SuppressWarnings(\"fallthrough\")   public static void sanitizeSlaveJVMArgs(JFrame parent,                                           String value,                                           final OptionListener<String> l)", "diff": ["-  ", "+", "+      long heapSizeMB = (heapSize / 1024) / 1024;", "+      // find the next bigger of the choices", "+      String newSetting = getNextBiggerHeapSize(heapSizeMB);", "-                           \"Would you like to copy the value\\n\\\"\"+size+\"\\\" into the \\\"Maximum Heap\\\" setting,\\n\"+", "+                           \"Would you like to copy the value \\\"\"+newSetting+\"\\\" into the \\\"Maximum Heap\\\" setting,\\n\"+", "-                           \"Would you like to clean up the \\\"JVM Args for Interactions JVM\\\", copy the value\\n\"+", "-                           \"\\\"\"+size+\"\\\" into the \\\"Maximum Heap\\\" setting,\\n\"+", "+                           \"Would you like to clean up the \\\"JVM Args for Interactions JVM\\\"\\n\"+", "-            DrJava.getConfig().removeOptionListener(SLAVE_JVM_ARGS, l);", "+            DrJava.getConfig().removeOptionListener(SLAVE_JVM_ARGS, this);", "-          DrJava.getConfig().setSetting(SLAVE_JVM_XMX, size);", "+          DrJava.getConfig().setSetting(SLAVE_JVM_XMX, newSetting);", "+        }", "+        else {", "+          JOptionPane.showMessageDialog(parent,", "+                                        \"You will have to reset the interactions pane before changes take effect.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79fac650b9725d9d0e331c2d466f784d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e28d42989a089b15d3a01e7dd19b426bc7021c04", "commitAfterChange": "261ca8732921a2a5c58b2777d5419ddfe2c261df", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public DefaultGlobalModel()", "signatureAfterChange": "   public DefaultGlobalModel()", "diff": ["-    this(new MainJVM());", "+    //this(new MainJVM());", "+    ", "+    _interpreterControl = new MainJVM();", "+    _interactionsDocAdapter = new SwingDocumentAdapter();", "+    _interactionsModel =", "+      new DefaultInteractionsModel(this, _interpreterControl,", "+                                   _interactionsDocAdapter);", "+    _interpreterControl.setInteractionsModel(_interactionsModel);", "+    _interpreterControl.setJUnitModel(this);  // to be replaced by JUnitModel", "+", "+    _consoleDocAdapter = new SwingDocumentAdapter();", "+    _consoleDoc = new ConsoleDocument(_consoleDocAdapter);", "+", "+    _inputListener = NoInputListener.ONLY;", "+", "+    _createDebugger();", "+    ", "+    _registerOptionListeners();", "+    "]}], "num": 7763}