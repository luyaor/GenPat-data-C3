{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8091cc8070319efea8fce087f8b92c1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6837f026245c1c951bafc523c6970ed1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public int getFirstNonWSCharPos(int pos, char[] whitespace, boolean acceptComments) throws BadLocationException", "signatureAfterChange": "   public int getFirstNonWSCharPos(final int pos, final char[] whitespace, final boolean acceptComments) throws      BadLocationException", "diff": ["-  public int getFirstNonWSCharPos(int pos, char[] whitespace, boolean acceptComments) throws BadLocationException {", "+  public int getFirstNonWSCharPos(final int pos, final char[] whitespace, final boolean acceptComments) throws ", "+    BadLocationException {", "-    final StringBuilder keyBuf = new StringBuilder(\"getFirstNonWSCharPos:\").append(pos).append(':').append(whitespace);", "-    final String key = keyBuf.toString();", "-    ", "+    final Query key = new Query.FirstNonWSCharPos(pos, whitespace, acceptComments);", "-    int result = ERROR_INDEX;  // correct result if no non-whitespace chars are found", "+    int result = -1;  // correct result if no non-whitespace chars are found", "-          // Return position of matching char (reducedPos)", "-          break;", "+          // Return position of matching char", "+          _storeInCache(key, reducedPos, reducedPos);", "+          _reduced.move(origLocation - reducedPos);", "+          return reducedPos;", "-        _reduced.move(origLocation - reducedPos);", "-        result = (i == endPos) ? ERROR_INDEX : reducedPos;", "+        // No matching char found", "+        _storeInCache(key, -1, endPos - 1);", "+        _reduced.move(origLocation - reducedPos);", "+        return -1;", "-      _storeInCache(key, result, reducedPos);", "-      return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e48255bbfa8a0f61b66cff6e5f66a202", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "signatureAfterChange": "   public int findPrevDelimiter(final int pos, final char[] delims, final boolean skipParenPhrases)     throws BadLocationException", "diff": ["-    final StringBuilder keyBuf = new StringBuilder(\"findPrevDelimiter:\").append(pos);", "-    for (char ch: delims) { keyBuf.append(':').append(ch); }", "-    keyBuf.append(':').append(skipParenPhrases);", "-    final String key = keyBuf.toString();", "+    final Query key = new Query.PrevDelimiter(pos, delims, skipParenPhrases);", "-      String text = getText(DOCSTART, pos);", "+      String text = getText(0, pos);", "-        for (i = pos-1; i >= DOCSTART; i--) {", "+        for (i = pos-1; i >= 0; i--) {", "-           * DOCSTART <= i < reducedPos <= pos */", "+           * 0 <= i < reducedPos <= pos */", "-        /* Invariant: same as for loop except that DOCSTART-1 <= i <= reducedPos <= pos */", "+        /* Invariant: same as for loop except that -1 <= i <= reducedPos <= pos */", "-      if (i == DOCSTART-1) reducedPos = ERROR_INDEX; // No matching char was found", "-      _storeInCache(key, reducedPos, pos);", "+      if (i == -1) reducedPos = -1; // No matching char was found", "+      _storeInCache(key, reducedPos, pos - 1);", "-      // Return position of matching char or ERROR_INDEX ", "+      // Return position of matching char or ERROR_INDEX (-1) "]}], "num": 21566}