{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79cf3bdff91d98e9c5a77de65c720ed7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "096b85a5e0bab185c9a03af31b1063e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "e2abbf01d6f3b23be51f493f663daa5ce8abf706", "commitAfterChange": "d7bd3eaf7514715e375acabd9bf0f41e4281985a", "methodNumberBeforeChange": 280, "methodNumberAfterChange": 273, "signatureBeforeChange": "      protected boolean inherits(Type child, PredicateSet<MethodInvocationCandidate<I>> childMatches,                                MethodInvocationCandidate<I> match)", "signatureAfterChange": "      protected boolean inherits(Type child, PredicateSet<DJMethod> childMatches, DJMethod match)", "diff": ["-    protected boolean inherits(Type child, PredicateSet<MethodInvocationCandidate<I>> childMatches,", "-                               MethodInvocationCandidate<I> match) {", "+    protected boolean inherits(Type child, PredicateSet<DJMethod> childMatches, DJMethod match) {", "-        for (MethodInvocationCandidate<I> childMethod : childMatches) {", "-          if (childMethod.overrides(match)) { return false; }", "+        for (DJMethod childMethod : childMatches) {", "+          if (overrides(childMethod, match)) { return false; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cb40240a363576232b8285269e71e75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ClassDeclaration.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ClassDeclaration(int flags, String name, List<IdentifierToken> ext, List<List<IdentifierToken>> impl, List<Node> body,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ClassDeclaration(int flags, String name, ReferenceType ext, List<? extends ReferenceType> impl, List<Node> body,                           String fn, int bl, int bc, int el, int ec)", "diff": ["-  public ClassDeclaration(int flags, String name, List<IdentifierToken> ext, List<List<IdentifierToken>> impl, List<Node> body,", "+  public ClassDeclaration(int flags, String name, ReferenceType ext, List<? extends ReferenceType> impl, List<Node> body,", "-      superclass = TreeUtilities.listToName(ext);", "+      superclass = ext.getRepresentation();"]}], "num": 25133}