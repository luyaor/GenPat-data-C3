{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f040346f26cfcecd491542112054b32", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5486058963a41f150dfe3f091924688a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "8c59b6d09078dbcf117925bc686cacee46ca999f", "commitAfterChange": "f8e25255cc9b1c52f4c1874e15c63efdafe32091", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Node resolveAmbiguousName(AmbiguousName node)", "signatureAfterChange": "     private Node resolveAmbiguousName(AmbiguousName node)", "diff": ["-        catch (AmbiguousNameException e) { throw new ExecutionError(\"ambiguous.name\", node); }", "+        catch (AmbiguousNameException e) {", "+          setErrorStrings(node, className);", "+          throw new ExecutionError(\"ambiguous.name\", node);", "+        }", "-          else { throw new ExecutionError(\"ambiguous.name\", node); }", "+          else {", "+            setErrorStrings(node, className);", "+            throw new ExecutionError(\"ambiguous.name\", node);", "+          }", "-              else { throw new ExecutionError(\"ambiguous.name\", node); }", "+              else {", "+                setErrorStrings(node, memberName.image());", "+                throw new ExecutionError(\"ambiguous.name\", node);", "+              }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcb4c97f9f93efc8cfa7429ff31f16ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "8bdb35d64cb05e3140d2e418cebfe8458ce4a718", "commitAfterChange": "f17292abd95ea16429a4af0b9a7c5f4c918cbe33", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "   private File[] getChosenFiles(JFileChooser fc, int choice)     throws OperationCanceledException", "signatureAfterChange": "   private File[] getChosenFiles(JFileChooser fc, int choice)     throws OperationCanceledException", "diff": ["-        if (chosen.length == 0) chosen = new File[] { null };", "-", "-        if (chosen[0] == null)", "-          chosen[0] = fc.getSelectedFile();", "+        // Following code reviewed for bug 70902-- JVF", "+        ", "+        // this new File[] { null } is totally unaccounted for in originating", "+        // method calls", "+        //if (chosen.length == 0) chosen = new File[] { null };", "+        if (chosen.length == 0) { throw new OperationCanceledException(); }", "+        ", "+        if (chosen[0] == null) { ", "+          // why was this here? we shouldn't expect to get", "+          // something totally new from fc.", "+          //chosen[0] = fc.getSelectedFile();", "+          throw new OperationCanceledException();", "+        }"]}], "num": 20929}