{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5b73f630810c5b50ee8ef1da65f18a8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10d54bdaecd6768ef5a72888220db150", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "1902ca9428bb3bc3eae3550e478cc24cc107999e", "commitAfterChange": "c171c7d908dc3eacd710969c309add95e9a47bb0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 25, "signatureBeforeChange": "        public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list)", "signatureAfterChange": "     public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list)", "diff": ["-", "-      public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list) {", "-        if (pred.value(list.first())) { return ConsList.cons(list.first(), list.rest().apply(this)); }", "-        else { return list.rest().apply(this); }", "-      }", "+    public ConsList<? extends T> forEmpty(ConsList.Empty<? extends T> list) { return list; }", "+    public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list) {", "+      if (_pred.value(list.first())) { return ConsList.cons(list.first(), list.rest().apply(this)); }", "+      else { return list.rest().apply(this); }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4565cfc9f0eebb5ec75d98170dc7c02a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "1902ca9428bb3bc3eae3550e478cc24cc107999e", "commitAfterChange": "c171c7d908dc3eacd710969c309add95e9a47bb0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 17, "signatureBeforeChange": "        public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list)", "signatureAfterChange": "          public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list)", "diff": ["-", "-      public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list) {", "-        return list.rest().apply(new ReverseHelper(ConsList.cons(list.first(), _toAppend)));", "-      }", "+    ", "+    public ConsList<? extends T> forNonempty(ConsList.Nonempty<? extends T> list) {", "+      return list.rest().apply(new ReverseHelper<T>(ConsList.cons(list.first(), _toAppend)));", "+    }"]}], "num": 8667}