{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e08ba699c8237baade1d2a055a4592c4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c36b1050dda2fe7d503bcfa7cdd9d418", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 569, "methodNumberAfterChange": 569, "signatureBeforeChange": "     public void compileBeforeJUnit(final CompilerListener testAfterCompile)", "signatureAfterChange": "     public void compileBeforeJUnit(final CompilerListener testAfterCompile)", "diff": ["-     *  dialog to ask if all open source files should be compiled in order to test the program. */", "+      */", "-      if (DrJava.getConfig().getSetting(ALWAYS_COMPILE_BEFORE_JUNIT).booleanValue() || ! MainFrame.this.isVisible()) {", "+      System.err.println(\"in compileBeforeJUnit, TEST_MODE = \" + Utilities.TEST_MODE);", "+      if (DrJava.getConfig().getSetting(ALWAYS_COMPILE_BEFORE_JUNIT).booleanValue() || Utilities.TEST_MODE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c734936321baf406647a150df9d166a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileIOTest.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testClassFileSynchronizationAfterRename() throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronizationAfterRename() throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "diff": ["-    assertTrue(\"Class file should not exist before compile\",", "-               doc.getCachedClassFile() == null);", "-    assertTrue(\"should not be in sync before compile\",", "-               !doc.checkIfClassFileInSync());", "+    System.err.println(\"cached class file is \" + doc.getCachedClassFile());", "+    assertTrue(\"Class file should not exist before compile\", doc.getCachedClassFile() == FileOps.NULL_FILE);", "+    assertTrue(\"should not be in sync before compile\", !doc.checkIfClassFileInSync());"]}], "num": 15494}