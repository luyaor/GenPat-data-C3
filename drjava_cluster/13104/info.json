{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8668c455b2ab0f89dc5aac82cb1c78ce", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b7405a78a2850ca052ff66f0255341b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/HashRelation.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public HashRelation(boolean indexFirst, boolean indexSecond)", "signatureAfterChange": "      public HashRelation(Set<? extends Pair<T1, T2>> pairs)", "diff": ["-  public HashRelation(boolean indexFirst, boolean indexSecond) {", "-    _pairs = new HashSet<Pair<T1, T2>>();", "-    if (indexFirst) { _firstIndex = new HashMap<T1, HashSet<T2>>(); }", "-    else { _firstIndex = null; }", "-    if (indexSecond) { _secondIndex = new HashMap<T2, HashSet<T1>>(); }", "-    else { _secondIndex = null; }", "+  public HashRelation(Set<? extends Pair<T1, T2>> pairs) {", "+    this(true);", "+    addAll(pairs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86fdd8cf4184e990cc35672f02eeefb6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "f835199d645f480bb352cc51cff6dc5ae32e7dc4", "commitAfterChange": "f25bc20d2dd4058b4cf2bf5f693569e62fb40d6b", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 100, "signatureBeforeChange": "          protected ConstraintSet(ConstraintSet copy)", "signatureAfterChange": "          protected ConstraintScenario(VariableType var, Type upper)", "diff": ["-    protected ConstraintSet(ConstraintSet copy) {", "-      _lowerBounds = new HashMap<VariableType, Type>(copy._lowerBounds);", "-      _upperBounds = new HashMap<VariableType, Type>(copy._upperBounds);", "-    }", "+    ", "+    protected ConstraintScenario(VariableType var, Type upper) {", "+      this();", "+      _upperBounds.put(var, upper);", "+    }"]}], "num": 13104}