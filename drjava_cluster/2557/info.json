{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbe32e40a42539b2cd2da9cc41b04647", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c38621bf031b560c20d0176389b2d9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ReverseHighlighter.java", "commitBeforeChange": "714a91a3f9a91ffe3e5ee9ae0bd0c977c7aa4e31", "commitAfterChange": "86cce18ff80f67b178e899650f588fd3636436b4", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r     public synchronized void run()", "signatureAfterChange": "\r     public synchronized void run()", "diff": ["-     */\r", "+    /** Executes range(s) damage and cleans range queue. */\r", "-          // the Document should be the same to properly\r", "-          // display highlights\r", "+          // the Document should be the same to properly display highlights\r", "-            mapper.damageRange(component,\r", "-                               ((Position)p0.get(i)).getOffset(),\r", "-                               ((Position)p1.get(i)).getOffset());\r", "+            mapper.damageRange(component, p0.get(i).getOffset(), p1.get(i).getOffset());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2d1a85d8978101ec6e257b7d2bcf127", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileBuilder.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private DocFile docFileFromGetter(DocumentInfoGetter getter) throws IOException", "signatureAfterChange": "   private DocFile docFileFromGetter(DocumentInfoGetter g) throws IOException", "diff": ["-  private DocFile docFileFromGetter(DocumentInfoGetter getter) throws IOException {    ", "-      return new DocFile(getter.getFile().getCanonicalPath(),", "-                         getter.getSelection(),", "-                         getter.getScroll(),", "-                         getter.isActive(),", "-                         getter.getPackage());", "+  private DocFile docFileFromGetter(DocumentInfoGetter g) throws IOException {    ", "+      return new DocFile(g.getFile().getCanonicalPath(), g.getSelection(), g.getScroll(), g.isActive(), g.getPackage());"]}], "num": 2557}