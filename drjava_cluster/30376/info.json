{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d11f71fc8c6ed4570080f7031f4c173", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43ffa549ac39445383db809eeabb439b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeClass.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public TreeClass(String fullName, DJClass declaring, Node ast, final TreeClassLoader loader,                    Options opt)", "signatureAfterChange": "   public TreeClass(String fullName, DJClass declaring, Node ast, final TreeClassLoader loader,                    Options opt)", "diff": ["-      public Class<?> value() { return loader.loadTree(TreeClass.this); }", "+      public Class<?> value() {", "+        try { return loader.loadClass(_fullName); }", "+        catch (ClassNotFoundException e) { throw new RuntimeException(\"Error loading class\", e); }", "+        // LinkageError indicates there's something wrong with the compiled class", "+        catch (LinkageError e) { throw new RuntimeException(\"Error loading class\", e); }", "+      }", "+    loader.registerTree(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a7b33197b1efaf2bb8a49e16400efbd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectMenuTest.java", "commitBeforeChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "commitAfterChange": "6d55d86705248616cac5b324a7c528485ceb6104", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testCloseAllClosesProject()  throws MalformedProjectFileException, IOException", "signatureAfterChange": "      public void testCloseAllClosesProject()  throws MalformedProjectFileException, IOException", "diff": ["-    _model.openProject(_projFile);", "-    ", "+     Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        try { _model.openProject(_projFile); }", "+        catch(Exception e) { throw new UnexpectedException(e); }", "+      } ", "+    });", "-    _frame.closeAll();", "+    ", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        try { _frame.closeAll(); }", "+        catch(Exception e) { throw new UnexpectedException(e); }", "+      } ", "+    });", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db0c9b71471aa26edf351e0a9b919b97", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "b43f29e50ad9a747c307023da2022e85812a7a06", "commitAfterChange": "f9bd2a484c4505cc2dff97c8f9bad6e0c712ff50", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void tearDown() throws Exception", "signatureAfterChange": "      public void tearDown() throws Exception", "diff": ["-    super.tearDown();", "-//    Utilities.invokeAndWait(new Runnable() {", "+//    Utilities.invokeLater(new Runnable() {", "-    _frame.dispose();             // disposes GUI elements of _frame", "-    _frame.getModel().dispose();  // explicitly kills the slave JVM", "-    _frame = null;", "+        _frame.dispose();             // disposes GUI elements of _frame", "+        _frame.getModel().dispose();  // explicitly kills the slave JVM", "+        _frame = null;", "+        /* try { */ MainFrameTest.super.tearDown(); /* } */", "+//        catch(Exception e) { throw new UnexpectedException(e); }", "-//    ", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db29b09924032b63c8906b7b0665d014", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "commitAfterChange": "6d55d86705248616cac5b324a7c528485ceb6104", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "    public void testRunMainMethod() throws Exception", "signatureAfterChange": "    public void testRunMainMethod() throws Exception", "diff": ["-    OpenDefinitionsDocument doc = doCompile(FOO_CLASS, file);", "-    doc.runMain();", "+    final OpenDefinitionsDocument doc = doCompile(FOO_CLASS, file);", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        try { doc.runMain(); }", "+        catch(Exception e) { throw new UnexpectedException(e); }", "+      }", "+    });", "-    Utilities.clearEventQueue();", "+//    Utilities.clearEventQueue();", "-    doc.runMain();", "-    Utilities.clearEventQueue();", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        try { doc.runMain(); }", "+        catch(Exception e) { throw new UnexpectedException(e); }", "+      }", "+    });", "+    ", "+//    Utilities.clearEventQueue();"]}], "num": 30376}