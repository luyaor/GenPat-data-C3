{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44595fbdfa6a168592b0ce689f6ac575", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c6311094e4cb332002cc23c28d2fd8d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "             public void test_isAssignableFrom()", "signatureAfterChange": "             public void test_isAssignableFrom()", "diff": ["-      LanguageLevelVisitor llv = new LanguageLevelVisitor(_btc._file, _btc._package, _btc._importedFiles, ", "-                                                        _btc._importedPackages, new LinkedList<String>(), new Hashtable<String, Pair<TypeDefBase, LanguageLevelVisitor>>(), ", "-                                                        new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>());", "-      LanguageLevelConverter.symbolTable = llv.symbolTable = _btc.symbolTable;", "+      LanguageLevelVisitor llv = ", "+        new LanguageLevelVisitor(_btc._file, ", "+                                 _btc._package, ", "+                                 _btc._importedFiles, ", "+                                 _btc._importedPackages, ", "+                                 new LinkedList<String>(), ", "+                                 new Hashtable<String, Pair<TypeDefBase, LanguageLevelVisitor>>(), ", "+                                 new Hashtable<String, Pair<SourceInfo, LanguageLevelVisitor>>());", "+      ", "+//      LanguageLevelConverter.symbolTable = llv.symbolTable = _btc.symbolTable;", "+      LanguageLevelConverter._newSDs.clear();", "-      LanguageLevelConverter.OPT = new Options(JavaVersion.JAVA_1_4, IterUtil.<File>empty());", "+      LanguageLevelConverter.OPT = new Options(JavaVersion.JAVA_1_4, EmptyIterable.<File>make());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "384d2af1e07870e9982b73d6b44c020e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/JavacCompiler.java", "commitBeforeChange": "786632b2fb75426983b1ed67283e648bbf9fbf7a", "commitAfterChange": "90d44d184e29dc7fbeec250255fd4972f9896c0a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public static String transformRunCommand(String s)", "signatureAfterChange": "   public static String transformRunCommand(String s)", "diff": ["-      \"  if (\\\"acm.program.Program\\\".equals(c.getName())) '{' isProgram = true; break; '}'\\n\" +", "+      \"  if (\\\"acm.program.Program\\\".equals(c.getName()) ||\\n\" +", "+      \"      \\\"acm.graphics.GTurtle\\\".equals(c.getName())) '{' isProgram = true; break; '}'\\n\" +", "+      \"java.lang.reflect.Method m = null;\\n\" +", "+      \"String[] args = null;\\n\" +", "-      \"  edu.rice.cs.plt.swing.SwingUtil.showApplet(java.applet.Applet.class.cast(new {0}({1})), 400, 300);\\n\" +", "+      \"  try '{'\\n\" +", "+      \"    m = {0}.class.getMethod(\\\"main\\\", java.lang.String[].class);\\n\" +", "+      \"    if (!m.getReturnType().equals(void.class)) m = null;\\n\" +", "+      \"  '}'\\n\" +", "+      \"  catch (java.lang.NoSuchMethodException e) '{' m = null; '}'\\n\" +", "+      \"  if (m==null) edu.rice.cs.plt.swing.SwingUtil.showApplet(java.applet.Applet.class.cast(new {0}({1})), 400, 300);\\n\" +", "-      \"else '{'\" +", "-      \"  java.lang.reflect.Method m = null;\\n\" +", "+      \"else '{'\\n\" +", "-      \"  String[] args = new String[]'{'{1}'}';\\n\" +", "+      \"  args = new String[]'{'{1}'}';\\n\" +", "+      \"'}'\\n\" +", "+      \"if (m!=null) '{'\\n\"+", "-      \"'}' '}' '}'\";", "+      \"'}' '}' '}'\"; "]}], "num": 10842}