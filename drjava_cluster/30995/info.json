{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e3dc8ef46b8a07b78f7b0f46cb416e0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17923882d4ea2f63feda0e8c46aee019", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": "       public void testForSimpleAnonymousClassInstantiation()", "signatureAfterChange": "       public void testForSimpleAnonymousClassInstantiation()", "diff": ["-     AnonymousClassInstantiation basic = new SimpleAnonymousClassInstantiation(JExprParser.NO_SOURCE_INFO, new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"Object\", new Type[0]), ", "-                                                                        new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[0]),", "-                                                                        new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+     AnonymousClassInstantiation basic = new SimpleAnonymousClassInstantiation(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"Object\", new Type[0]), ", "+                                                                        new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]),", "+                                                                        new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-     object.setMav(new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, new String[] {\"public\"}));", "+     object.setMav(new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[] {\"public\"}));", "-     VariableDeclaration vdecl = new VariableDeclaration(JExprParser.NO_SOURCE_INFO,", "+     VariableDeclaration vdecl = new VariableDeclaration(SourceInfo.NO_INFO,", "-       new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                            new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"double\"), ", "-                                            new Word (JExprParser.NO_SOURCE_INFO, \"field1\")),", "-         new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                              new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"boolean\"), ", "-                                              new Word (JExprParser.NO_SOURCE_INFO, \"field2\"))});      ", "+       new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                            new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "+                                            new Word (SourceInfo.NO_INFO, \"field1\")),", "+         new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                              new PrimitiveType(SourceInfo.NO_INFO, \"boolean\"), ", "+                                              new Word (SourceInfo.NO_INFO, \"field2\"))});      ", "-      PrimitiveType intt = new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\");", "-      UninitializedVariableDeclarator uvd = new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, intt, new Word(JExprParser.NO_SOURCE_INFO, \"i\"));", "-      FormalParameter param = new FormalParameter(JExprParser.NO_SOURCE_INFO, new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, intt, new Word(JExprParser.NO_SOURCE_INFO, \"j\")), false);", "-      BracedBody bb = new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {new VariableDeclaration(JExprParser.NO_SOURCE_INFO,  _packageMav, new UninitializedVariableDeclarator[]{uvd}), new ValueReturnStatement(JExprParser.NO_SOURCE_INFO, new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5))});", "+      PrimitiveType intt = new PrimitiveType(SourceInfo.NO_INFO, \"int\");", "+      UninitializedVariableDeclarator uvd = new UninitializedVariableDeclarator(SourceInfo.NO_INFO, intt, new Word(SourceInfo.NO_INFO, \"i\"));", "+      FormalParameter param = new FormalParameter(SourceInfo.NO_INFO, new UninitializedVariableDeclarator(SourceInfo.NO_INFO, intt, new Word(SourceInfo.NO_INFO, \"j\")), false);", "+      BracedBody bb = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {new VariableDeclaration(SourceInfo.NO_INFO,  _packageMav, new UninitializedVariableDeclarator[]{uvd}), new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 5))});", "-      ConcreteMethodDef cmd1 = new ConcreteMethodDef(JExprParser.NO_SOURCE_INFO, _publicMav, new TypeParameter[0], ", "-                                                     intt, new Word(JExprParser.NO_SOURCE_INFO, \"myMethod\"), new FormalParameter[] {param}, ", "+      ConcreteMethodDef cmd1 = new ConcreteMethodDef(SourceInfo.NO_INFO, _publicMav, new TypeParameter[0], ", "+                                                     intt, new Word(SourceInfo.NO_INFO, \"myMethod\"), new FormalParameter[] {param}, ", "-      BracedBody classBb = new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] { vdecl, cmd1 });", "+      BracedBody classBb = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] { vdecl, cmd1 });", "-      SimpleAnonymousClassInstantiation  complicated = new SimpleAnonymousClassInstantiation(JExprParser.NO_SOURCE_INFO, ", "-                                                                                             new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"name\", new Type[0]), ", "-                                                                                             new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[0]), ", "+      SimpleAnonymousClassInstantiation  complicated = new SimpleAnonymousClassInstantiation(SourceInfo.NO_INFO, ", "+                                                                                             new ClassOrInterfaceType(SourceInfo.NO_INFO, \"name\", new Type[0]), ", "+                                                                                             new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]), ", "-      VariableDeclaration vd = new VariableDeclaration(JExprParser.NO_SOURCE_INFO, _publicMav, new VariableDeclarator[] { new InitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"name\", new Type[0]), new Word(JExprParser.NO_SOURCE_INFO, \"myAnon\"), complicated)});", "+      VariableDeclaration vd = new VariableDeclaration(SourceInfo.NO_INFO, _publicMav, new VariableDeclarator[] { new InitializedVariableDeclarator(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"name\", new Type[0]), new Word(SourceInfo.NO_INFO, \"myAnon\"), complicated)});", "-      MethodInvocation mie = new ComplexMethodInvocation(JExprParser.NO_SOURCE_INFO, complicated, new Word(JExprParser.NO_SOURCE_INFO, \"myMethod\"), new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[] { new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5)}));", "+      MethodInvocation mie = new ComplexMethodInvocation(SourceInfo.NO_INFO, complicated, new Word(SourceInfo.NO_INFO, \"myMethod\"), new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[] { new IntegerLiteral(SourceInfo.NO_INFO, 5)}));", "-      Expression nr = new ComplexNameReference(JExprParser.NO_SOURCE_INFO, complicated, new Word(JExprParser.NO_SOURCE_INFO, \"field1\"));", "+      Expression nr = new ComplexNameReference(SourceInfo.NO_INFO, complicated, new Word(SourceInfo.NO_INFO, \"field1\"));", "-     SimpleAnonymousClassInstantiation nestedNonStatic = new SimpleAnonymousClassInstantiation(JExprParser.NO_SOURCE_INFO, new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"A.B\", new Type[0]), ", "-                                                                            new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[0]), new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+     SimpleAnonymousClassInstantiation nestedNonStatic = new SimpleAnonymousClassInstantiation(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"A.B\", new Type[0]), ", "+                                                                            new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]), new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-    a.setMav(new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, new String[] {\"public\"}));", "-    b.setMav(new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, new String[] {\"public\"}));", "+    a.setMav(new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[] {\"public\"}));", "+    b.setMav(new ModifiersAndVisibility(SourceInfo.NO_INFO, new String[] {\"public\"}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6eb416e2ece8232a90ecb49484d9fd5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "          public void testAutoBoxingAndUnboxing()", "signatureAfterChange": "          public void testAutoBoxingAndUnboxing()", "diff": ["-      Expression e = new SimpleMethodInvocation(JExprParser.NO_SOURCE_INFO,", "-                                                new Word(JExprParser.NO_SOURCE_INFO, \"myMethod\"),", "-                                                new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[]{", "-        new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\"))}));", "-      BodyItemI[] bii = new BodyItemI[] {new ExpressionStatement(JExprParser.NO_SOURCE_INFO, e)};", "-      BracedBody b = new BracedBody(JExprParser.NO_SOURCE_INFO, bii);", "+      Expression e = new SimpleMethodInvocation(SourceInfo.NO_INFO,", "+                                                new Word(SourceInfo.NO_INFO, \"myMethod\"),", "+                                                new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[]{", "+        new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\"))}));", "+      BodyItemI[] bii = new BodyItemI[] {new ExpressionStatement(SourceInfo.NO_INFO, e)};", "+      BracedBody b = new BracedBody(SourceInfo.NO_INFO, bii);", "-      MethodData md = new MethodData(\"myMethod\", _publicMav, new TypeParameter[0], SymbolData.INT_TYPE, new VariableData[] {vd2}, new String[0], null, new NullLiteral(JExprParser.NO_SOURCE_INFO));", "+      MethodData md = new MethodData(\"myMethod\", _publicMav, new TypeParameter[0], SymbolData.INT_TYPE, new VariableData[] {vd2}, new String[0], null, new NullLiteral(SourceInfo.NO_INFO));", "-      bii = new BodyItemI[] {new ExpressionStatement(JExprParser.NO_SOURCE_INFO, e)};", "-      b = new BracedBody(JExprParser.NO_SOURCE_INFO, bii);", "+      bii = new BodyItemI[] {new ExpressionStatement(SourceInfo.NO_INFO, e)};", "+      b = new BracedBody(SourceInfo.NO_INFO, bii);", "-      md = new MethodData(\"myMethod\", _publicMav, new TypeParameter[0], SymbolData.INT_TYPE, new VariableData[] {vd1}, new String[0], null, new NullLiteral(JExprParser.NO_SOURCE_INFO));", "+      md = new MethodData(\"myMethod\", _publicMav, new TypeParameter[0], SymbolData.INT_TYPE, new VariableData[] {vd1}, new String[0], null, new NullLiteral(SourceInfo.NO_INFO));", "-      _sd1.addMethod(new MethodData(\"myMethod\", _publicMav, new TypeParameter[0], SymbolData.BOOLEAN_TYPE, new VariableData[] {vd2}, new String[0], null, new NullLiteral(JExprParser.NO_SOURCE_INFO)));", "+      _sd1.addMethod(new MethodData(\"myMethod\", _publicMav, new TypeParameter[0], SymbolData.BOOLEAN_TYPE, new VariableData[] {vd2}, new String[0], null, new NullLiteral(SourceInfo.NO_INFO)));", "-      Expression e2 = new SimpleAssignmentExpression(JExprParser.NO_SOURCE_INFO,", "-                                                     new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"t\")),", "+      Expression e2 = new SimpleAssignmentExpression(SourceInfo.NO_INFO,", "+                                                     new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"t\")),", "-      BodyItemI[] bii2 = new BodyItemI[] {new ExpressionStatement(JExprParser.NO_SOURCE_INFO, e2)};", "-      BracedBody b2 = new BracedBody(JExprParser.NO_SOURCE_INFO, bii2);", "+      BodyItemI[] bii2 = new BodyItemI[] {new ExpressionStatement(SourceInfo.NO_INFO, e2)};", "+      BracedBody b2 = new BracedBody(SourceInfo.NO_INFO, bii2);", "-      e = new SimpleNamedClassInstantiation(JExprParser.NO_SOURCE_INFO,", "-                                              new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"i.like.monkey\", new Type[0]),", "-                                              new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[] {new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\"))}));", "+      e = new SimpleNamedClassInstantiation(SourceInfo.NO_INFO,", "+                                              new ClassOrInterfaceType(SourceInfo.NO_INFO, \"i.like.monkey\", new Type[0]),", "+                                              new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[] {new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\"))}));", "-      bii = new BodyItemI[] {new ExpressionStatement(JExprParser.NO_SOURCE_INFO, e)};", "-      b = new BracedBody(JExprParser.NO_SOURCE_INFO, bii);", "+      bii = new BodyItemI[] {new ExpressionStatement(SourceInfo.NO_INFO, e)};", "+      b = new BracedBody(SourceInfo.NO_INFO, bii);", "-      md = new MethodData(\"monkey\", _publicMav, new TypeParameter[0], _sd1, new VariableData[]{vd2}, new String[0], _sd1, new NullLiteral(JExprParser.NO_SOURCE_INFO));", "+      md = new MethodData(\"monkey\", _publicMav, new TypeParameter[0], _sd1, new VariableData[]{vd2}, new String[0], _sd1, new NullLiteral(SourceInfo.NO_INFO));", "-      ExpressionStatement se = new ExpressionStatement(JExprParser.NO_SOURCE_INFO,", "-                                   new PlusAssignmentExpression(JExprParser.NO_SOURCE_INFO,", "-                                       new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\")),", "-                                       new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"j\"))));", "+      ExpressionStatement se = new ExpressionStatement(SourceInfo.NO_INFO,", "+                                   new PlusAssignmentExpression(SourceInfo.NO_INFO,", "+                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\")),", "+                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"j\"))));", "-      MethodData md1 = new MethodData(\"myMethod2\", _publicMav, new TypeParameter[0], SymbolData.BOOLEAN_TYPE, new VariableData[] {vd1Prim, vd2Prim}, new String[0], _sd1, new NullLiteral(JExprParser.NO_SOURCE_INFO));", "-      MethodData md2 = new MethodData(\"myMethod2\", _publicMav, new TypeParameter[0], SymbolData.INT_TYPE, new VariableData[] {vd1Obj, vd2Obj}, new String[0], _sd1, new NullLiteral(JExprParser.NO_SOURCE_INFO));", "+      MethodData md1 = new MethodData(\"myMethod2\", _publicMav, new TypeParameter[0], SymbolData.BOOLEAN_TYPE, new VariableData[] {vd1Prim, vd2Prim}, new String[0], _sd1, new NullLiteral(SourceInfo.NO_INFO));", "+      MethodData md2 = new MethodData(\"myMethod2\", _publicMav, new TypeParameter[0], SymbolData.INT_TYPE, new VariableData[] {vd1Obj, vd2Obj}, new String[0], _sd1, new NullLiteral(SourceInfo.NO_INFO));", "-      e = new SimpleMethodInvocation(JExprParser.NO_SOURCE_INFO,", "-                                                new Word(JExprParser.NO_SOURCE_INFO, \"myMethod2\"),", "-                                     new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[]{", "-                                                                                new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\")),", "-                                                                                  new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"j\"))}));", "-      bii = new BodyItemI[] {new ExpressionStatement(JExprParser.NO_SOURCE_INFO, e)};", "-      b = new BracedBody(JExprParser.NO_SOURCE_INFO, bii);", "+      e = new SimpleMethodInvocation(SourceInfo.NO_INFO,", "+                                                new Word(SourceInfo.NO_INFO, \"myMethod2\"),", "+                                     new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[]{", "+                                                                                new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\")),", "+                                                                                  new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"j\"))}));", "+      bii = new BodyItemI[] {new ExpressionStatement(SourceInfo.NO_INFO, e)};", "+      b = new BracedBody(SourceInfo.NO_INFO, bii);", "-      MethodData md3 = new MethodData(\"myMethod2\", _publicMav, new TypeParameter[0], SymbolData.BOOLEAN_TYPE, new VariableData[] {vd1Prim, vd2Prim}, new String[0], _sd1, new NullLiteral(JExprParser.NO_SOURCE_INFO));", "+      MethodData md3 = new MethodData(\"myMethod2\", _publicMav, new TypeParameter[0], SymbolData.BOOLEAN_TYPE, new VariableData[] {vd1Prim, vd2Prim}, new String[0], _sd1, new NullLiteral(SourceInfo.NO_INFO));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab867ef381d1bef1637fbd8ab824b38d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "          public void testForClassDef()", "signatureAfterChange": "          public void testForClassDef()", "diff": ["-      ClassDef cd = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"Lisa\"),", "-                                 new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"Object\", new Type[0]), new ReferenceType[0], ", "-                                 new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ClassDef cd = new ClassDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"Lisa\"),", "+                                 new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"Object\", new Type[0]), new ReferenceType[0], ", "+                                 new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      ClassDef cd2 = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"Me\"),", "-                                 new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"Parent\", new Type[0]), new ReferenceType[0], ", "-                                 new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ClassDef cd2 = new ClassDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"Me\"),", "+                                 new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"Parent\", new Type[0]), new ReferenceType[0], ", "+                                 new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      ClassDef cd3 = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"somewhereElse.Lisa\"),", "-                                 new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.lang.Object\", new Type[0]), new ReferenceType[0], ", "-                                 new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ClassDef cd3 = new ClassDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"somewhereElse.Lisa\"),", "+                                 new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), new ReferenceType[0], ", "+                                 new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      ClassDef cd4 = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"somewhereElse.Lisa\"),", "-                                  new TypeParameter[0], new TypeVariable(JExprParser.NO_SOURCE_INFO, \"super\"), new ReferenceType[] {new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"superI\",  new Type[0])},", "-                                  new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ClassDef cd4 = new ClassDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"somewhereElse.Lisa\"),", "+                                  new TypeParameter[0], new TypeVariable(SourceInfo.NO_INFO, \"super\"), new ReferenceType[] {new ClassOrInterfaceType(SourceInfo.NO_INFO, \"superI\",  new Type[0])},", "+                                  new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      VariableDeclaration vd = new VariableDeclaration(JExprParser.NO_SOURCE_INFO, _finalMav, new VariableDeclarator[] {new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), new Word(JExprParser.NO_SOURCE_INFO, \"i\"))});", "-      ExpressionStatement se = new ExpressionStatement(JExprParser.NO_SOURCE_INFO, new SimpleAssignmentExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\")), new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 1)));      ", "-      BracedBody cbb = new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {se});", "-      ConstructorDef consD = new ConstructorDef(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"Jimes\"), _publicMav, new FormalParameter[0], new ReferenceType[0], cbb);", "-      BracedBody b = new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {vd, consD});", "-      ClassDef cd5 = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"Jimes\"),", "-                                  new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.lang.Object\", new Type[0]), new ReferenceType[0], new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {vd, consD}));", "+      VariableDeclaration vd = new VariableDeclaration(SourceInfo.NO_INFO, _finalMav, new VariableDeclarator[] {new UninitializedVariableDeclarator(SourceInfo.NO_INFO, new PrimitiveType(SourceInfo.NO_INFO, \"int\"), new Word(SourceInfo.NO_INFO, \"i\"))});", "+      ExpressionStatement se = new ExpressionStatement(SourceInfo.NO_INFO, new SimpleAssignmentExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\")), new IntegerLiteral(SourceInfo.NO_INFO, 1)));      ", "+      BracedBody cbb = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {se});", "+      ConstructorDef consD = new ConstructorDef(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"Jimes\"), _publicMav, new FormalParameter[0], new ReferenceType[0], cbb);", "+      BracedBody b = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {vd, consD});", "+      ClassDef cd5 = new ClassDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"Jimes\"),", "+                                  new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), new ReferenceType[0], new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {vd, consD}));", "-      b = new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {vd});", "-      cd5 = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"Jimes\"), new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.lang.Object\", new Type[0]), new ReferenceType[0], b);", "+      b = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {vd});", "+      cd5 = new ClassDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"Jimes\"), new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), new ReferenceType[0], b);", "-      ClassDef cd6 = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"JimesH\"),", "-                                  new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.lang.Object\", new Type[0]), new ReferenceType[] {new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.lang.Runnable\", new Type[0])}, new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ClassDef cd6 = new ClassDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"JimesH\"),", "+                                  new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), new ReferenceType[] {new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Runnable\", new Type[0])}, new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      ClassDef cd7 = new ClassDef(JExprParser.NO_SOURCE_INFO, _publicMav, new Word(JExprParser.NO_SOURCE_INFO, \"Hspia\"),", "-                                  new TypeParameter[0], new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"superSD\", new Type[0]), new ReferenceType[] {new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.lang.String\", new Type[0])}, new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ClassDef cd7 = new ClassDef(SourceInfo.NO_INFO, _publicMav, new Word(SourceInfo.NO_INFO, \"Hspia\"),", "+                                  new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"superSD\", new Type[0]), new ReferenceType[] {new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.String\", new Type[0])}, new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}], "num": 30995}