{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85cec5fec309a0f6f73bf8433354d274", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b81fc8acefc14c3aac745832efcacaf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "1ff154e9eb4de7b8f07ce9a8120997b76e53aa3f", "commitAfterChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "diff": ["-    getBrowserHistoryManager().clearBrowserRegions();", "-    getBreakpointManager().clearRegions();", "-    getBookmarkManager().clearRegions();", "+", "+    if (! _browserHistoryManager.getRegions().isEmpty()) _browserHistoryManager.clearBrowserRegions();", "+    if (! _breakpointManager.getDocuments().isEmpty()) _breakpointManager.clearRegions();", "+    if (! _bookmarkManager.getDocuments().isEmpty()) _bookmarkManager.clearRegions();", "-      for (final Region bm: ir.getBookmarks()) {", "+      for (Region bm: ir.getBookmarks()) {", "-          final OpenDefinitionsDocument odd = getDocumentForFile(f);", "-          if (getOpenDefinitionsDocuments().contains(odd)) { // bookmark is not stale", "-            final Position startPos = odd.createPosition(bm.getStartOffset());", "-            final Position endPos = odd.createPosition(bm.getEndOffset());", "-            try { getBookmarkManager().addRegion(new DocumentRegion(odd, startPos, endPos)); }", "+          OpenDefinitionsDocument odd = getDocumentForFile(f);", "+          int start = bm.getStartOffset();", "+          int end = bm.getEndOffset();", "+          if (getOpenDefinitionsDocuments().contains(odd) && ", "+              _bookmarkManager.getRegionsOverlapping(odd, start, end).size() == 0) { // bookmark is valid", "+            Position startPos = odd.createPosition(start);", "+            Position endPos = odd.createPosition(end);", "+            try { _bookmarkManager.addRegion(new DocumentRegion(odd, startPos, endPos)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e28348e456bab52d630f68525b561dd2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "diff": ["-    ", "+    // set breakpoints", "-          getDebugger().toggleBreakpoint(odd, odd._getOffset(lnr), lnr, dbd.isEnabled()); ", "+          getDebugger().toggleBreakpoint(odd, odd._getOffset(lnr), lnr, dbd.isEnabled());", "-    ", "-    try {", "-      for (Region bm: ir.getBookmarks()) {", "-        File f = bm.getFile();", "-        if (! modifiedFiles.contains(f)) {", "-          OpenDefinitionsDocument odd = getDocumentForFile(f);", "-          int start = bm.getStartOffset();", "-          int end = bm.getEndOffset();", "-          if (getOpenDefinitionsDocuments().contains(odd) && ", "-              _bookmarkManager.getRegionsOverlapping(odd, start, end).size() == 0) { // bookmark is valid", "-            Position startPos = odd.createPosition(start);", "-            Position endPos = odd.createPosition(end);", "-            try { _bookmarkManager.addRegion(new DocumentRegion(odd, startPos, endPos)); }", "-            catch(Exception e) { DrJavaErrorHandler.record(e); }  // should never happen", "+    for (FileRegion bm: ir.getBookmarks()) {", "+      File f = bm.getFile();", "+      if (! modifiedFiles.contains(f)) {", "+        OpenDefinitionsDocument odd = getDocumentForFile(f);", "+        int start = bm.getStartOffset();", "+        int end = bm.getEndOffset();", "+        if (getOpenDefinitionsDocuments().contains(odd) && ", "+            _bookmarkManager.getRegionsOverlapping(odd, start, end).size() == 0) { // bookmark is valid", "+          try { ", "+            int lineStart = odd._getLineStartPos(start);", "+            int lineEnd = odd._getLineEndPos(end);", "+            _bookmarkManager.addRegion(new MovingDocumentRegion(odd, start, end, lineStart, lineEnd)); ", "-          // should remove stale bookmark", "+          catch(Exception e) { DrJavaErrorHandler.record(e); }  // should never happen", "+        // should remove stale bookmark", "-    catch(BadLocationException e) { throw new UnexpectedException(e); }"]}], "num": 12181}