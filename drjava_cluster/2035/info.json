{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af8069b5a79b7cf0e96eb0c6d7a03cb3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c3540abd5b30e6c7e2eb8257f2f7252", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "          public void testForPackageStatementOnly()", "signatureAfterChange": "          public void testForPackageStatementOnly()", "diff": ["-      Word[] words = new Word[] {new Word(SourceInfo.NO_INFO, \"alpha\"),", "-        new Word(SourceInfo.NO_INFO, \"beta\")};", "-      CompoundWord cw = new CompoundWord(SourceInfo.NO_INFO, words);", "-      PackageStatement ps = new PackageStatement(SourceInfo.NO_INFO, cw);", "+      Word[] words = new Word[] {new Word(SourceInfo.NONE, \"alpha\"),", "+        new Word(SourceInfo.NONE, \"beta\")};", "+      CompoundWord cw = new CompoundWord(SourceInfo.NONE, words);", "+      PackageStatement ps = new PackageStatement(SourceInfo.NONE, cw);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1181c1147d76d5a9b229cda2bc3835b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LValueWithValueTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testDefaultCase()", "signatureAfterChange": "      public void testDefaultCase()", "diff": ["-      new NullLiteral(SourceInfo.NO_INFO).visit(_lvtc);", "+      new NullLiteral(SourceInfo.NONE).visit(_lvtc);", "-      new PlusExpression(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 21), new IntegerLiteral(SourceInfo.NO_INFO, 22)).visit(_lvtc);", "+      new PlusExpression(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 21), new IntegerLiteral(SourceInfo.NONE, 22)).visit(_lvtc);"]}], "num": 2035}