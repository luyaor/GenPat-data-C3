{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d9a805a69bccb9a1198a0b82eda794d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ddfde62776093e758304de2fef0a68d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfig.java", "commitBeforeChange": "fa25871a5e134fb6fca94e189ba313bfbf287457", "commitAfterChange": "752b376678a9e342baa5f9a4248fb7a6de8370ea", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   private void getMultipleHelper(String path, Node n, List<Node> accum, boolean dotRead)", "signatureAfterChange": "   private void getMultipleHelper(String path, Node n, List<Node> accum, boolean dotRead)", "diff": ["+    ", "+    if(dotPos != -1 && path.indexOf('.', dotPos+1) != -1)", "+      throw new XMLConfigException(\"An attribute cannot have subparts (foo.bar.fum and foo.bar/fum not allowed)\");", "+    ", "+    if(dotPos != -1 && path.indexOf('/', dotPos+1) != -1)", "+      throw new XMLConfigException(\"An attribute cannot have subparts (foo.bar.fum and foo.bar/fum not allowed)\");", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77ba97da9cb0329b473dd2945b71e217", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "25800f7de6c9dbd0dac19d72d5a81e799656a800", "commitAfterChange": "b751c38fc70d22454ab93b852de5dd5f6f16d1ba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void _rawCompile(File[] sourceRoots, File[] files, File[] excludedFiles) throws IOException", "signatureAfterChange": "      private void _rawCompile(File[] sourceRoots, File[] files, File[] excludedFiles) throws IOException", "diff": ["+    if (!buildDir.exists() && !buildDir.mkdirs()) {", "+      throw new IOException(\"Could not create build directory: \"+buildDir);", "+    }", "+", "+    if (!workDir.exists() && !workDir.mkdirs()) {", "+      throw new IOException(\"Could not create working directory: \"+workDir);", "+    }"]}], "num": 5757}