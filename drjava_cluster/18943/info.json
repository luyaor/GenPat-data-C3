{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88269cc4804872eb0f28b6ed4c9ab305", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a64941515f52e9cf7ff5a0284019fc5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 6, "signatureBeforeChange": "   protected void assertReplThrewContinuationException(final String code) throws EditDocumentException, InterruptedException", "signatureAfterChange": "   protected void assertReplThrewContinuationException(String code) throws EditDocumentException, InterruptedException", "diff": ["-  protected void assertReplThrewContinuationException(final String code) throws EditDocumentException, InterruptedException {", "+  protected void assertReplThrewContinuationException(String code) throws EditDocumentException, InterruptedException {", "-    final IncompleteInputInteractionsModel model = (IncompleteInputInteractionsModel) _model;", "-    final InteractionsDocument doc = model.getDocument();", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() {", "-        doc.reset(\"This is a test\");", "-        doc.append(code, InteractionsDocument.DEFAULT_STYLE);", "-      }", "-    });", "-    Utilities.clearEventQueue();", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() {", "-        model._logInteractionStart();", "-        model.interpretCurrentInteraction();", "-        _log.log(\"Waiting for InteractionDone()\");", "-      }", "-    });", "-    Utilities.clearEventQueue();", "+    IncompleteInputInteractionsModel model = (IncompleteInputInteractionsModel) _model;", "+    InteractionsDocument doc = model.getDocument();", "+    doc.reset(\"This is a test\");", "+    doc.append(code, InteractionsDocument.DEFAULT_STYLE);", "+    Utilities.clearEventQueue();  // required because subsequent interpretCurrentInteraction is not run in event thread.", "+    model._logInteractionStart();", "+    model.interpretCurrentInteraction();", "+    _log.log(\"Waiting for InteractionDone()\");", "-    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45070dab75ff9623e875729e4fa3b941", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5fcb38a9e5144c9ef6a799230bac118e680b79fd", "commitAfterChange": "1d939764a7a48ee57c8c9b9e857d49b241cabd3e", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 122, "signatureBeforeChange": "   public void gotoFileMatchingMask(String mask)", "signatureAfterChange": "   public void gotoFileMatchingMask(String mask)", "diff": ["-          EventQueue.invokeLater(new Runnable() { public void run() { addToBrowserHistory(); } });", "+          addToBrowserHistory();", "-            EventQueue.invokeLater(new Runnable() { public void run() { addToBrowserHistory(); } });", "+            addToBrowserHistory();"]}], "num": 18943}