{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cbe09e6dc77898f9c438d7c526bbb571", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22b76420e6d4c63a738cacd610590f10", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 90, "signatureBeforeChange": "     public Type value(Iterable<? extends Type> elements)", "signatureAfterChange": "     public Type value(Iterable<? extends Type> elements)", "diff": ["-  private final Lambda<Iterable<? extends Type>, Type> JOIN_NORM = new Lambda<Iterable<? extends Type>, Type>() {", "+    public NormJoiner(NormSubtyper subtyper) { _subtyper = subtyper; }", "-      List<Type> disjuncts = maxList(collapse(map(elements, DISJUNCTS)), new NormSubtyper());", "+      List<Type> disjuncts = maxList(collapse(map(elements, DISJUNCTS)), _subtyper);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edacd6944f1bf7b5c39fb92ec84ab451", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "a1c288a48316b1c91a6ebecbbeffc93089c5ebaa", "commitAfterChange": "df01c8be1037a04090a700d45d88a837db8c2901", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     @Override public Boolean forVariableType(VariableType t)", "signatureAfterChange": "     @Override public Boolean forVariableType(final VariableType t)", "diff": ["-    @Override public Boolean forVariableType(VariableType t) {", "-      return checkBoundedSymbol(t.symbol());", "+    @Override public Boolean forVariableType(final VariableType t) {", "+      Thunk<Boolean> checkVar = new Thunk<Boolean>() {", "+        public Boolean value() { return checkBoundedSymbol(t.symbol()); }", "+      };", "+      return _stack.apply(checkVar, true, t);"]}], "num": 12416}