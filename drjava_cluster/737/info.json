{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23fe67197dfece864bf52287974a4899", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0be0863256e80bd22120a8d913495ec4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testStartsWithPrefixWithText() throws BadLocationException", "signatureAfterChange": "   public void testStartsWithPrefixWithText() throws BadLocationException", "diff": ["-    assertTrue(\"line before brace (no space)\", !rule.applyRule(_doc, 0));", "-    assertTrue(\"just before brace (no space)\", rule.applyRule(_doc, 7));", "-    assertTrue(\"just after brace (no space)\", rule.applyRule(_doc, 9));", "-    assertTrue(\"line after brace (no space)\", !rule.applyRule(_doc, 15));", "+    assertTrue(\"line before brace (no space)\", !rule.applyRule(_doc, 0, Indenter.OTHER));", "+    assertTrue(\"just before brace (no space)\", rule.applyRule(_doc, 7, Indenter.OTHER));", "+    assertTrue(\"just after brace (no space)\", rule.applyRule(_doc, 9, Indenter.OTHER));", "+    assertTrue(\"line after brace (no space)\", !rule.applyRule(_doc, 15, Indenter.OTHER));", "-    assertTrue(\"line before star (with space)\", !rule.applyRule(_doc, 0));", "-    assertTrue(\"just before star (with space)\", rule.applyRule(_doc, 4));", "-    assertTrue(\"just after star (with space)\", rule.applyRule(_doc, 6));", "-    assertTrue(\"line after star (with space)\", !rule.applyRule(_doc, 15));", "+    assertTrue(\"line before star (with space)\", !rule.applyRule(_doc, 0, Indenter.OTHER));", "+    assertTrue(\"just before star (with space)\", rule.applyRule(_doc, 4, Indenter.OTHER));", "+    assertTrue(\"just after star (with space)\", rule.applyRule(_doc, 6, Indenter.OTHER));", "+    assertTrue(\"line after star (with space)\", !rule.applyRule(_doc, 15, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd64cb1eacf377c2f923537358080c65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testStartsWithPrefixNoText() throws BadLocationException", "signatureAfterChange": "   public void testStartsWithPrefixNoText() throws BadLocationException", "diff": ["-    assertTrue(\"line before brace (no space)\", !rule.applyRule(_doc, 0));", "-    assertTrue(\"just before brace (no space)\", rule.applyRule(_doc, 7));", "-    assertTrue(\"just after brace (no space)\", rule.applyRule(_doc, 8));", "-    assertTrue(\"line after brace (no space)\", !rule.applyRule(_doc, 10));", "+    assertTrue(\"line before brace (no space)\", !rule.applyRule(_doc, 0, Indenter.OTHER));", "+    assertTrue(\"just before brace (no space)\", rule.applyRule(_doc, 7, Indenter.OTHER));", "+    assertTrue(\"just after brace (no space)\", rule.applyRule(_doc, 8, Indenter.OTHER));", "+    assertTrue(\"line after brace (no space)\", !rule.applyRule(_doc, 10, Indenter.OTHER));", "-    assertTrue(\"line before brace (with space)\", !rule.applyRule(_doc, 0));", "-    assertTrue(\"just before brace (with space)\", rule.applyRule(_doc, 7));", "-    assertTrue(\"just after brace (with space)\", rule.applyRule(_doc, 11));", "-    assertTrue(\"line after brace (with space)\", !rule.applyRule(_doc, 14));", "+    assertTrue(\"line before brace (with space)\", !rule.applyRule(_doc, 0, Indenter.OTHER));", "+    assertTrue(\"just before brace (with space)\", rule.applyRule(_doc, 7, Indenter.OTHER));", "+    assertTrue(\"just after brace (with space)\", rule.applyRule(_doc, 11, Indenter.OTHER));", "+    assertTrue(\"line after brace (with space)\", !rule.applyRule(_doc, 14, Indenter.OTHER));"]}], "num": 737}