{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b520c71ae36fc61006d760ea87c4aed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47f492fa2cdc4c88b45b17c0dc02201b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/LogTest.java", "commitBeforeChange": "1e77c64ba83c36855cc971f17dd702002ed1f841", "commitAfterChange": "7f1dfe0049dc6481ecb6545fa089b139bb9c72af", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testConcurrentWrites() throws IOException, InterruptedException", "signatureAfterChange": "   public void testConcurrentWrites() throws IOException, InterruptedException", "diff": ["-    Date time0 = parse(s0);", "+    Date time0 = log3.parse(s0);", "-      Date time1 = parse(s1);", "+      Date time1 = log3.parse(s1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba3eb206bae8e62713c912c8eb815bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2df95ba3878ef76250864f343b7eb7cab010d660", "commitAfterChange": "be44bac66621552ed24a3cc6153888ca3b23f74f", "methodNumberBeforeChange": 340, "methodNumberAfterChange": 341, "signatureBeforeChange": "      private void _junit()", "signatureAfterChange": "      private void _junit()", "diff": ["+    simpleHourglassOn(); // turned off in JUnitStarted/NonTestCase  ", "-        hourglassOn();  // turned off in JUnitStarted/NonTestCase  ", "-        try { _model.getActiveDocument().startJUnit(); }", "+//        hourglassOn();  // moved into the prelude before this thread start  ", "+        try { ", "+          _model.getJUnitModel().junit(_model.getActiveDocument()); ", "+//          _model.getActiveDocument().startJUnit();  // Equivalent to preceding", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad9ede1a2bc5841758b494ee54d2bf43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "52774d8548bf1d5b31840c064fced41bb7a40867", "commitAfterChange": "62576619cd7807c5f69fcfd17360a8dd0c064ad9", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": "   public void quit()", "signatureAfterChange": "   public void quit()", "diff": ["-      dispose();  // kills the interpreter", "-      System.exit(0);", "+      disposeExternalResources();  // kills the interpreter", "+      ", "+      // [ 1478796 ] DrJava Does Not Shut Down With Project Open", "+      // On HP tc1100 and Toshiba Portege tablet PCs, there appears to be a problem in a", "+      // shutdown hook, presumably the RMI shutdown hook.", "+      // Shutdown hooks get executed in Runtime.exit (to which System.exit delegates), and", "+      // if a shutdown hook does not complete, the VM does not shut down.", "+      // The difference between Runtime.halt and Runtime.exit is that Runtime.exit runs", "+      // the shutdown hooks and the finalizers (if Runtime.runFinalizersOnExit(true)", "+      // has been called); then it calls Runtime.halt.", "+      // By using Runtime.halt, we do not execute any finalizers or shutdown hooks;", "+      // however it does not seem like we need them.      ", "+//      System.exit(0);", "+      Runtime.getRuntime().halt(0);"]}], "num": 70}