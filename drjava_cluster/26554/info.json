{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2dc2aba208b229bdf941495d911c836f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2269a16aa395b03aa9cf085a7533463c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/MethodContext.java", "commitBeforeChange": "68bd63f6034f2863f39ab1e69222ff477d2c17f9", "commitAfterChange": "0fae02937c58237a9087228b753c7aa76d749043", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public MethodContext(Interpreter i, Class c, Object obj, Set fp)", "signatureAfterChange": "   public MethodContext(Interpreter i, Class c, Object obj, Set<AbstractVariable> fp)", "diff": ["-  public MethodContext(Interpreter i, Class c, Object obj, Set fp) {", "+  public MethodContext(Interpreter i, Class c, Object obj, Set<AbstractVariable> fp) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8e7a98f3a9c40737f8c98a70508c03b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/modifier/FinalVariableModifier.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void modify(Context ctx, Object value)", "signatureAfterChange": "   public void modify(Context<Object> ctx, Object value)", "diff": ["+  /** Sets the value of the underlying left hand side expression. */", "+  public void modify(Context<Object> ctx, Object value) {", "+    if (type.isPrimitive()                     ||", "+        value == null                          ||", "+        type.isAssignableFrom(value.getClass())) {", "+      if (ctx.get(representation) == UninitializedObject.INSTANCE) {", "+        ctx.setConstant(representation, value);", "+      } else {", "+        throw new ExecutionError(\"cannot.modify\", name);", "+      }", "+    } else {", "+      Exception e = new ClassCastException(name.getRepresentation());", "+      throw new CatchedExceptionError(e, name);", "-     */", "-    public void modify(Context ctx, Object value) {", "- if (type.isPrimitive()                     ||", "-     value == null                          ||", "-     type.isAssignableFrom(value.getClass())) {", "-     if (ctx.get(representation) == UninitializedObject.INSTANCE) {", "-  ctx.setConstant(representation, value);", "-     } else {", "-  throw new ExecutionError(\"cannot.modify\", name);", "-     }", "- } else {", "-     Exception e = new ClassCastException(name.getRepresentation());", "-     throw new CatchedExceptionError(e, name);", "- }", "-    }", "+  }"]}], "num": 26554}