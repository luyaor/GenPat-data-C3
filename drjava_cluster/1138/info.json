{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9485c63b65e09ad09576b4d4c21bfd5a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c5f953836fbfd69540459aa621c66b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void testGetFirstNonWSCharPos() throws BadLocationException", "signatureAfterChange": "     public void testGetFirstNonWSCharPos() throws BadLocationException", "diff": ["-    assertEquals(\"Current position is non-whitespace\", 0, _doc.getFirstNonWSCharPos(0));", "-    assertEquals(\"Current position is non-whitespace, end of line\", 5, _doc.getFirstNonWSCharPos(5));", "-    assertEquals(\"Next non-whitespace is 1 '\\\\n' ahead.\", 7, _doc.getFirstNonWSCharPos(6));", "-    assertEquals(\"Next non-whitespace is 2 '\\\\t' ahead.\", 13, _doc.getFirstNonWSCharPos(12));", "-    assertEquals(\"Next non-whitespace is 3 spaces ahead.\", 22, _doc.getFirstNonWSCharPos(20));", "+    assertEquals(\"Current position is non-whitespace\", 0, _getFirstNonWSCharPos(0));", "+    assertEquals(\"Current position is non-whitespace, end of line\", 5, _getFirstNonWSCharPos(5));", "+    assertEquals(\"Next non-whitespace is 1 '\\\\n' ahead.\", 7, _getFirstNonWSCharPos(6));", "+    assertEquals(\"Next non-whitespace is 2 '\\\\t' ahead.\", 13, _getFirstNonWSCharPos(12));", "+    assertEquals(\"Next non-whitespace is 3 spaces ahead.\", 22, _getFirstNonWSCharPos(20));", "-                 _doc.getFirstNonWSCharPos(27));", "+                 _getFirstNonWSCharPos(27));", "-                 _doc.getFirstNonWSCharPos(39));", "+                 _getFirstNonWSCharPos(39));", "-                 _doc.getFirstNonWSCharPos(6));", "+                 _getFirstNonWSCharPos(6));", "-                 _doc.getFirstNonWSCharPos(6));  ", "+                 _getFirstNonWSCharPos(6));  ", "-                 _doc.getFirstNonWSCharPos(4));", "+                 _getFirstNonWSCharPos(4));", "-                 _doc.getFirstNonWSCharPos(4));", "+                 _getFirstNonWSCharPos(4));", "-                 _doc.getFirstNonWSCharPos(4));", "+                 _getFirstNonWSCharPos(4));", "-    _doc.getLineFirstCharPos(5);", "+    _getLineFirstCharPos(5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7b461d8405cd73ca1ff5abd3bcb3222", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentHelperTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testFindPrevDelimiter() throws BadLocationException", "signatureAfterChange": "   public void testFindPrevDelimiter() throws BadLocationException", "diff": ["-                 _doc.findPrevDelimiter(23, delimiters1));", "+                 _findPrevDelimiter(23, delimiters1));", "-                 _doc.findPrevDelimiter(16, delimiters1));", "+                 _findPrevDelimiter(16, delimiters1));", "-                 _doc.findPrevDelimiter(5, delimiters1));", "+                 _findPrevDelimiter(5, delimiters1));", "-                 _doc.findPrevDelimiter(5, delimiters1));", "+                 _findPrevDelimiter(5, delimiters1));", "-                 _doc.findPrevDelimiter(14, delimiters1));", "+                 _findPrevDelimiter(14, delimiters1));", "-                 _doc.findPrevDelimiter(20, delimiters2)); ", "+                 _findPrevDelimiter(20, delimiters2)); ", "-                 _doc.findPrevDelimiter(20, delimiters3));", "+                 _findPrevDelimiter(20, delimiters3));", "-                 _doc.findPrevDelimiter(5, delimiters1));", "+                 _findPrevDelimiter(5, delimiters1));", "-                 _doc.findPrevDelimiter(19, delimiters1));", "+                 _findPrevDelimiter(19, delimiters1));", "-                 _doc.findPrevDelimiter(17, delimiters1));", "+                 _findPrevDelimiter(17, delimiters1));", "-                 _doc.findPrevDelimiter(13, delimiters1));", "+                 _findPrevDelimiter(13, delimiters1));", "-                 _doc.findPrevDelimiter(17, delimiters4));", "+                 _findPrevDelimiter(17, delimiters4));", "-                 _doc.findPrevDelimiter(17, delimiters4));", "+                 _findPrevDelimiter(17, delimiters4));", "-    _doc.findPrevDelimiter(8, delimiters2);", "+    _findPrevDelimiter(8, delimiters2);"]}], "num": 1138}