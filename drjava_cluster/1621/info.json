{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c42b07fb95107e64237a5ec679652c7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "946464f62c1c3f0f1aacc66bf69fa274", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _assertProcessedContents(String typed, String expected) throws EditDocumentException", "signatureAfterChange": "   protected void _assertProcessedContents(final String typed, final String expected) throws EditDocumentException", "diff": ["-  protected void _assertProcessedContents(String typed, String expected) throws EditDocumentException {", "+  protected void _assertProcessedContents(final String typed, final String expected) throws EditDocumentException {", "-    TestInteractionsModel model = (TestInteractionsModel)_model;", "-    InteractionsDocument doc = model.getDocument();", "-    doc.reset(\"This is a test\");", "-    doc.append(typed, InteractionsDocument.DEFAULT_STYLE);", "-    Utilities.clearEventQueue();  // required because subsequent interpretCurrentInteraction is not run in event thread.", "-    model.interpretCurrentInteraction();", "+    final TestInteractionsModel model = (TestInteractionsModel)_model;", "+    final InteractionsDocument doc = model.getDocument();", "+    Utilities.invokeAndWait(new Runnable() { public void run() { ", "+      doc.reset(\"This is a test\"); ", "+      doc.append(typed, InteractionsDocument.DEFAULT_STYLE); ", "+      model.interpretCurrentInteraction(); } ", "+    });", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7fa9320379b9ec054934b3585faba0c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void _assertProcessedContents(String typed, String expected) throws EditDocumentException", "signatureAfterChange": "   protected void _assertProcessedContents(final String typed, final String expected) throws EditDocumentException", "diff": ["-  protected void _assertProcessedContents(String typed, String expected) throws EditDocumentException {", "+  protected void _assertProcessedContents(final String typed, final String expected) throws EditDocumentException {", "-    TestInteractionsModel model = (TestInteractionsModel)_model;", "-    InteractionsDocument doc = model.getDocument();", "-    doc.reset(\"This is a test\");", "-    doc.append(typed, InteractionsDocument.DEFAULT_STYLE);", "-    Utilities.clearEventQueue();  // required because subsequent interpretCurrentInteraction is not run in event thread.", "-    model.interpretCurrentInteraction();", "+    final TestInteractionsModel model = (TestInteractionsModel)_model;", "+    final InteractionsDocument doc = model.getDocument();", "+    Utilities.invokeAndWait(new Runnable() { public void run() { ", "+      doc.reset(\"This is a test\"); ", "+      doc.append(typed, InteractionsDocument.DEFAULT_STYLE); ", "+      model.interpretCurrentInteraction(); } ", "+    });", "+    Utilities.clearEventQueue();"]}], "num": 1621}