{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c65b5e4227ec1000160c9f7c1898b65", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93440ec369f3cba2e906c44302cb3744", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "3c18a1d03b53a699adfbc2df00845e9d60f9d1f5", "commitAfterChange": "4ec6eda5e5d4bd8e2b6e61afae08eb8548f8c4b5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void junitProject()", "signatureAfterChange": "   public void junitProject()", "diff": ["-//      File d = getProjectFile();", "-//      if(d == null) return;", "-//      d = d.getParentFile();", "-//      File[] files = FileOps.getFilesInDir(d, true);", "-//      for(File f: files){", "-//        try{", "-//          if(_getter.isAlreadyOpen(f)){", "-//            _getter.getDocumentForFile(f);", "-//          }else{", "-//            // assume the ", "-//          }", "-//        }catch(IOException e){", "-//          // error opening the file, so don't inlcude it in testing", "-//        }", "-//      }", "-      ", "-          if (!doc.isUntitled()) {", "+          if (doc.isProjectFile()) {", "-            files.add(f);", "+            if(f.getCanonicalPath().startsWith(_model.getProjectFile().getParentFile().getCanonicalPath())){", "+              files.add(f);", "+            }", "+        }catch(IOException e){", "+          // don't add it to the test"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be0cd55c82399cd31f0cfdafc5bca095", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "04d5f67f3ab0801dcf0753d1c84455182368f783", "commitAfterChange": "dd27d69f437c114ad258abba00f7d581b096ce79", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void junitProject()", "signatureAfterChange": "   public void junitProject()", "diff": ["+    LinkedList<OpenDefinitionsDocument> lod = new LinkedList<OpenDefinitionsDocument>();", "+    ", "+    Iterator<OpenDefinitionsDocument> it =", "+      _getter.getDefinitionsDocuments().iterator();", "+    while (it.hasNext()) {", "+      OpenDefinitionsDocument doc = it.next();", "+      if (doc.isProjectFile()) {", "+        lod.add(doc);", "+      }", "+    }", "+    junitDocs(lod);", "+  }", "-      Iterator<OpenDefinitionsDocument> it =", "-        _getter.getDefinitionsDocuments().iterator();", "-          if (doc.isProjectFile()) {", "-            String cn = doc.getQualifiedClassName();", "-            classNames.add(cn);", "-            File f;", "-            try {", "-              f = doc.getFile();", "-            }", "-            catch (FileMovedException fme) {", "-              f = fme.getFile();", "-            }", "-            if(f.getCanonicalPath().startsWith(_model.getProjectFile().getParentFile().getCanonicalPath())){", "-              files.add(f);", "-            }", "-            classNamesToODDs.put(cn, doc);", "-        }catch(IOException e){", "-          // don't add it to the test"]}], "num": 30893}