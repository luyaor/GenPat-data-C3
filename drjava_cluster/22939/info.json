{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba15677bffdcdce24dc0fd8423b2e0a3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0849a4bfc55935feb291efacab4e9570", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void insertNodeSortedInto(LeafNode child, InnerNode parent)", "signatureAfterChange": "   private void insertNodeSortedInto(LeafNode child, InnerNode parent)", "diff": ["-  private void insertNodeSortedInto(LeafNode child, InnerNode parent){", "+  private void insertNodeSortedInto(LeafNode child, InnerNode parent) {", "+    ", "-    int i=0;", "-", "+    ", "-    if(((DefaultMutableTreeNode)_model.getRoot()).getIndex(parent) == -1 && ", "-       _roots.contains(parent)){", "+    if (((DefaultMutableTreeNode)_model.getRoot()).getIndex(parent) == -1 && ", "+        _roots.contains(parent)){", "-", "-    ", "-    ", "-    while(i<numChildren){", "+    int i;", "+    for (i = 0; i < numChildren; i++ ) {", "-      if(parentsKid instanceof InnerNode){", "+      if (parentsKid instanceof InnerNode) {", "-      }else if(parentsKid instanceof LeafNode){", "+      } else if(parentsKid instanceof LeafNode) {", "-        if((newName.toUpperCase().compareTo(oldName.toUpperCase()) < 0)){", "-          break;", "-        }", "-      }else{", "-        throw new IllegalStateException(\"found a node in navigator that is not an InnerNode or LeafNode\");", "-      }", "-      i++;", "+        if ((newName.toUpperCase().compareTo(oldName.toUpperCase()) < 0)) break;", "+      } else throw new IllegalStateException(\"found a node in navigator that is not an InnerNode or LeafNode\");", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62105021adf831c9ba2c5e0beda799a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private void insertFolderSortedInto(InnerNode child, InnerNode parent)", "signatureAfterChange": "   private void insertFolderSortedInto(InnerNode child, InnerNode parent)", "diff": ["-    int i=0;", "-", "-    if(((DefaultMutableTreeNode)_model.getRoot()).getIndex(parent) == -1 && ", "-       _roots.contains(parent)){", "+    ", "+    if (((DefaultMutableTreeNode)_model.getRoot()).getIndex(parent) == -1 && ", "+       _roots.contains(parent)) {", "-", "+    ", "-    while(i<numChildren){", "+    int i;", "+    for (i = 0; i < numChildren; i++) {", "-      if(parentsKid instanceof InnerNode){", "+      if (parentsKid instanceof InnerNode) {", "-        if((newName.toUpperCase().compareTo(oldName.toUpperCase()) < 0)){", "-          break;", "-        }", "-      }else if(parentsKid instanceof LeafNode){", "-        // we're out of folders, and starting into the files, so just break out.", "-        break;", "-      }else{", "-        throw new IllegalStateException(\"found a node in navigator that is not an InnerNode or LeafNode\");", "-      }", "-      i++;", "+        if ((newName.toUpperCase().compareTo(oldName.toUpperCase()) < 0)) break;", "+      } else if (parentsKid instanceof LeafNode) break;", "+      // we're out of folders, and starting into the files, so just break out.", "+      else throw new IllegalStateException(\"found a node in navigator that is not an InnerNode or LeafNode\");"]}], "num": 22939}