{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab53a96a15ba83d0135c97abe9efa8ca", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "057140285ee2039b2958d550dde8335e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "commitAfterChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 82, "signatureBeforeChange": "          public void run()", "signatureAfterChange": "     public void run()", "diff": ["+    /** Removes chars from reduced model; cache has already been selectively cleared. */", "-      acquireReadLock();", "-      try {", "-        synchronized(_reduced) { ", "-          _setCurrentLocation(_offset);", "-          _reduced.delete(_length);    ", "-          _styleChanged();", "-        }", "-      }", "-      finally { releaseReadLock(); } ", "+//      acquireReadLock();  // unnecessary! exclusive readLock should already be held!", "+//      try {", "+//        synchronized(_reduced) {  // unnecessary?  no other thread should hold a readLock", "+      _setCurrentLocation(_offset);", "+      _reduced.delete(_length);    ", "+      _styleChanged();", "+//        }", "+//      }", "+//      finally { releaseReadLock(); } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1c4088722fbc49366e8fded6e6b952e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     public void run()", "diff": ["+    public UnremoveCommand(final int offset, final String text) { super(offset, text); }", "+    public void run() {", "+      super.run();", "+//      System.err.println(\"Restoring currentLocation in unremove operation; before restoration = \" + getCurrentLocation());", "+      // The following command effectively modifies a document in a document listener; the invokeLater", "+      // call moves it out of the listener; pending events reset _currentLocation", "+      EventQueue.invokeLater(new Runnable() { public void run() { _setCurrentLocation(_offset); } });", "+    }", "-//      acquireReadLock();  // unnecessary! exclusive readLock should already be held!", "-//      try {", "-//        synchronized(_reduced) {  // unnecessary?  no other thread should hold a readLock", "-      _styleChanged();", "-//        }", "-//      }", "-//      finally { releaseReadLock(); } "]}], "num": 8313}