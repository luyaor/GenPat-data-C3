{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9ee8a23e9e2f1d0886710ba70a86545", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39f66bb90f16d741fdf798046d18fbd0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "5faad565deecfb82b97073634322d0015dfa1839", "commitAfterChange": "da5a0dd68bcb282274a520304e64e7f255ef6c4e", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "          public ThreadReference peekAt(int i) throws NoSuchElementException", "signatureAfterChange": "      public ThreadReference peekAt(int i) throws NoSuchElementException", "diff": ["-    ", "-    public ThreadReference peekAt(int i) throws NoSuchElementException{", "-      try{", "+", "+    public ThreadReference peekAt(int i) throws NoSuchElementException {", "+      try {", "-      }catch(ArrayIndexOutOfBoundsException e){", "-        throw new NoSuchElementException(\"Cannot peek at the top of an empty RandomAccessStack!\");", "+      }", "+      catch(ArrayIndexOutOfBoundsException e){", "+        throw new NoSuchElementException(\"Cannot peek at element \" + i + \" of this stack!\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68ecdd9a4dbd44aed44bdf258ea8a8d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "     public Integer forTextAtom(TextAtom t)", "signatureAfterChange": "     public Integer forTextAtom(TextAtom t)", "diff": ["-      throw new PrivateProjectException(\"Found a string, expected an integer\");", "+      throw new PrivateProjectException(\"Found a string '\"+t+\"', expected an integer\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80a7ca023a543dc7389ec66f022f97a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "   public TypeData methodInvocationHelper(MethodInvocation that, TypeData context)", "signatureAfterChange": "   public TypeData methodInvocationHelper(MethodInvocation that, TypeData context)", "diff": ["-    for (int i = 0; i<thrown.length; i++) {", "+    for (int i = 0; i < thrown.length; i++) {", "-      _addError(\"Internal error: returnType is null\", that);", "+      _addError(\"Internal error: the returnType for \" + md + \" is null\", that);", "+//      Utilities.show(\"****** null return type for \" + md + \" Receiver type is \" + context + \" File is \" + _file ", "+//                       + \" MethodData is \" + md);", "+//      assert false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac3caf140531c4c6257739ab92e313fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "7b90d9227a34693633b434e1d2773067e65a70e5", "commitAfterChange": "1b1a2ff927caf38a8f2ba21780232fcbeb4319bb", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 71, "signatureBeforeChange": "   private Method _getMethod(ReferenceType rt, String name)", "signatureAfterChange": "   private Method _getMethod(ReferenceType rt, String name)", "diff": ["-    throw new NoSuchElementException(\"No non-abstract method called getVariable found in \" + rt.name());", "+    throw new NoSuchElementException(\"No non-abstract method called \" + name + \" found in \" + rt.name());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d252d9090fb2839bf055f1aeb5b8f2fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "0b7afcbd6c8ba117acee1b2102738a5f12a1c53c", "commitAfterChange": "9fd63f96b89e05378048e5810ec35e627812e1a1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void setPackageScope(String packageName)", "signatureAfterChange": "   public void setPackageScope(String packageName)", "diff": ["-    StringReader reader = new StringReader(\"package edu.rice.cs.drjava.model.repl;\");", "+    StringReader reader = new StringReader(\"package \" + packageName + \";\");"]}], "num": 6831}