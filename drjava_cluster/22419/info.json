{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c511b3b18bdb5c6e45727a196a22f09", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "366b4b57ada33109b1783d81b3420de1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "c3686d18afe86d8459a6ef71e5f779589d915dd8", "commitAfterChange": "1e5237b2401d25a04c08b7b54162568a6d55c836", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 65, "signatureBeforeChange": "    public void indentLines(int selStart, int selEnd)", "signatureAfterChange": "   public void indentLines(int selStart, int selEnd)", "diff": ["+   */", "-    indentLines(selStart, selEnd, Indenter.OTHER);", "+    try {", "+      indentLines(selStart, selEnd, Indenter.OTHER, null);", "+    }", "+    catch (OperationCanceledException oce) {", "+      // Indenting without a ProgressMonitor should never be cancelled!", "+      throw new UnexpectedException(oce);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7658772762bfeea3d11e63c389e3d322", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 369, "methodNumberAfterChange": 372, "signatureBeforeChange": "      public void activeDocumentChanged(final OpenDefinitionsDocument active)", "signatureAfterChange": "          public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["-", "+    ", "-//      try {  // used or invokeAndWait variation", "-      Utilities.invokeLater(new Runnable() {  // invokeAndWait is arguably better but it may create occasional deadlocks.", "+      try {  // used or invokeAndWait variation", "+      Utilities.invokeAndWait(new Runnable() {  // invokeAndWait is arguably better but it may create occasional deadlocks.", "-          ", "+        ", "-//      }  // used for invokeAndWait variation", "-//      catch(InterruptedException e) { throw new UnexpectedException(e); }", "+      }  // used for invokeAndWait variation", "+      catch(InterruptedException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bf59fc1628fd29cf05740d02c29e572", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "8958ac741e416ecbae85abc43f8b198196076bac", "commitAfterChange": "9fa6d06a5ecc75a8eda4a5bc78f492dd1b318059", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": "      public void backupDone()", "signatureAfterChange": "          public void backupDone()", "diff": ["-", "-    public void backupDone(){", "-      filesNotNeedingBackup.add(outputFile);", "+    ", "+    public void backupDone() {", "+      try {", "+        filesNotNeedingBackup.add(getTargetFile());", "+      } catch (IOException ioe) {", "+        throw new UnexpectedException(ioe, \"getTargetFile should fail earlier\");", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0121c861ec9c37c3bd4ba54af376088", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/Utilities.java", "commitBeforeChange": "5351c43975b9206e92da4f8a3c75369d15511e0f", "commitAfterChange": "3c9da7b6f33927502f9cee032fa48adae4a189de", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public static void clearEventQueue() throws InterruptedException", "signatureAfterChange": "      public static void clearEventQueue()", "diff": ["-  public static void clearEventQueue() throws InterruptedException {", "-    Utilities.invokeAndWait(new Runnable() { public void run() { }; });", "+  public static void clearEventQueue() {", "+    try { ", "+      Utilities.invokeAndWait(new Runnable() { public void run() { }; }); ", "+    }", "+    catch(InterruptedException ie) { throw new UnexpectedException(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8ba3336a09532569dfd5a3403eb6147", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 368, "methodNumberAfterChange": 369, "signatureBeforeChange": "      public void activeDocumentChanged(final OpenDefinitionsDocument active)", "signatureAfterChange": "      public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["-      Runnable command = new Runnable() {", "-        public void run() {", "-          _recentDocFrame.pokeDocument(active);", "-          _switchDefScrollPane();", "-", "-          boolean isModified = active.isModifiedSinceSave();", "-          boolean canCompile = (!isModified && !active.isUntitled());", "-          _saveAction.setEnabled(!canCompile);", "-          _revertAction.setEnabled(!active.isUntitled());", "-", "-          // Update error highlights", "-          int pos = _currentDefPane.getCaretPosition();", "-          _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "-", "-          // Update FileChoosers' directory", "-          _setCurrentDirectory(active);", "-", "-          // Update title and position", "-          updateFileTitle();", "-          _currentDefPane.requestFocusInWindow();", "-          _posListener.updateLocation();", "-          ", "-          // update display (adding \"*\") in navigatgorPane", "-          if (isModified) _model.getDocumentNavigator().repaint();", "-          ", "-          ", "-          try { active.revertIfModifiedOnDisk(); }", "-          catch (FileMovedException fme) { _showFileMovedError(fme); }", "-          catch (IOException e) { _showIOError(e); }", "-", "-          // Change Find/Replace to the new defpane", "-          if (_findReplace.isDisplayed()) {", "-            _findReplace.stopListening();", "-            _findReplace.beginListeningTo(_currentDefPane);", "-            //uninstallFindReplaceDialog(_findReplace);", "-            //installFindReplaceDialog(_findReplace);", "+      try {", "+        Utilities.invokeAndWait(new Runnable() {", "+          public void run() {", "+            _recentDocFrame.pokeDocument(active);", "+            _switchDefScrollPane();", "+            ", "+            boolean isModified = active.isModifiedSinceSave();", "+            boolean canCompile = (!isModified && !active.isUntitled());", "+            _saveAction.setEnabled(!canCompile);", "+            _revertAction.setEnabled(!active.isUntitled());", "+            ", "+            // Update error highlights", "+            int pos = _currentDefPane.getCaretPosition();", "+            _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "+            ", "+            // Update FileChoosers' directory", "+            _setCurrentDirectory(active);", "+            ", "+            // Update title and position", "+            updateFileTitle();", "+            _currentDefPane.requestFocusInWindow();", "+            _posListener.updateLocation();", "+            ", "+            // update display (adding \"*\") in navigatgorPane", "+            if (isModified) _model.getDocumentNavigator().repaint();", "+            ", "+            ", "+            try { active.revertIfModifiedOnDisk(); }", "+            catch (FileMovedException fme) { _showFileMovedError(fme); }", "+            catch (IOException e) { _showIOError(e); }", "+            ", "+            // Change Find/Replace to the new defpane", "+            if (_findReplace.isDisplayed()) {", "+              _findReplace.stopListening();", "+              _findReplace.beginListeningTo(_currentDefPane);", "+              //uninstallFindReplaceDialog(_findReplace);", "+              //installFindReplaceDialog(_findReplace);", "+            }", "-        }", "-      };", "-      Utilities.invokeLater(command);", "+        });", "+      }", "+      catch(InterruptedException e) { throw new UnexpectedException(e); }"]}], "num": 22419}