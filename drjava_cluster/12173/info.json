{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82a963a267c798ba9eed7e7ff0081d4d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e7a3a86e421639c2edc1810578474a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "8cfaf2efb8ae59b79b9538e0bd5eaf251c6db08b", "commitAfterChange": "b732820bc2f8849bda78001b782e555a753cad1e", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   private boolean _shouldIgnore(int foundOffset, AbstractDocumentInterface doc)", "signatureAfterChange": "   private boolean _shouldIgnore(int foundOffset, AbstractDocumentInterface doc)", "diff": ["-    try{", "-      doc.acquireReadLock();", "-      String docText;", "-      try{", "-        docText = doc.getText(0, foundOffset);", "-      }", "-      finally{doc.releaseReadLock();}", "-    ", "-      return ((_matchWholeWord && !wholeWordFoundAtCurrent(doc, foundOffset)) || ", "-              (_ignoreCommentsAndStrings && ", "-               _model.getODDForDocument(doc).getStateAtCurrent() ", "-                 != ReducedModelStates.FREE));", "-    }", "-    catch(BadLocationException e) { throw new UnexpectedException(e); }", "+    return (_matchWholeWord && !wholeWordFoundAtCurrent(doc, foundOffset)) || ", "+      (_ignoreCommentsAndStrings && _model.getODDForDocument(doc).getStateAtCurrent() != ReducedModelStates.FREE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a933ac069cff14eae23bd1e7323be196", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 37, "signatureBeforeChange": "   private boolean _shouldIgnore(int foundOffset, AbstractDocumentInterface doc)", "signatureAfterChange": "   private boolean _shouldIgnore(int foundOffset, OpenDefinitionsDocument odd)", "diff": ["-  private boolean _shouldIgnore(int foundOffset, AbstractDocumentInterface doc) {", "-    return (_matchWholeWord && !wholeWordFoundAtCurrent(doc, foundOffset)) || ", "-      (_ignoreCommentsAndStrings && _model.getODDForDocument(doc).getStateAtCurrent() != ReducedModelStates.FREE);", "+  private boolean _shouldIgnore(int foundOffset, OpenDefinitionsDocument odd) {", "+    return (_matchWholeWord && ! wholeWordFoundAtCurrent(odd, foundOffset)) || ", "+      (_ignoreCommentsAndStrings && odd.getStateAtCurrent() != ReducedModelStates.FREE);"]}], "num": 12173}