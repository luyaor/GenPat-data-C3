{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84816b755f6c6bd7e83048e33a730ba4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40198931d4d3eaad8edf4b1199a3e8c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testStartupAndShutdown() throws DebugException, InterruptedException", "signatureAfterChange": "   public void testStartupAndShutdown() throws DebugException, InterruptedException", "diff": ["-    if (printMessages) System.out.println(\"----testStartupAndShutdown----\");", "+    _log.log(\"----testStartupAndShutdown----\");", "-        if (printMessages) System.out.println(\"interactionStarted called in resetListener\");", "+        _log.log(\"interactionStarted called in resetListener\");", "-        if (printMessages) System.out.println(\"interactionEnded called in resetListener\");", "+        _log.log(\"interactionEnded called in resetListener\");", "-        if (printMessages) System.out.println(\"interpreterChanged called in resetListener\");", "+        _log.log(\"interpreterChanged called in resetListener\");", "-        if (printMessages) System.out.println(\"interpreterResetting called in resetListener\");", "+        _log.log(\"interpreterResetting called in resetListener\");", "-          if (printEvents) System.out.println(\"interpreterReady \" + interpreterReadyCount);", "+          _log.log(\"interpreterReady \" + interpreterReadyCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d81b13d1b57d0db279124674d63ab2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "1bfe4c9bbfa52380052c9f1dfedadd290f963e29", "commitAfterChange": "ce99ad77121aabff91f9c6fba762f853ca2a34f5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testStartupAndShutdown() throws DebugException, InterruptedException", "signatureAfterChange": "   public void testStartupAndShutdown() throws DebugException, InterruptedException", "diff": ["-    // Reset interactions (which shuts down debugger)", "+    // Define listener that will count notification events", "+      public void interactionStarted() {", "+        // Don't notify: happens in the same thread", "+        if (printMessages) System.out.println(\"interactionStarted called in resetListener\");", "+        interactionStartCount++;", "+      }", "+      public void interactionEnded() {", "+         // Don't notify: happens in the same thread", "+        if (printMessages) System.out.println(\"interactionEnded called in resetListener\");", "+        interactionEndCount++;", "+      }", "+        if (printMessages) System.out.println(\"interpreterChanged called in resetListener\");", "+    // Install listener", "+    _model.addListener(resetListener); // interactionStarted, interactionEnded, shutdown, interpreterReady", "+    _setPendingNotifies(2);", "+    ", "+    ", "+    _model.resetInteractions(FileOption.NULL_FILE);", "-    _model.addListener(resetListener);", "-    synchronized(_notifierLock) {", "-      _model.resetInteractions(FileOption.NULL_FILE);", "-      _setPendingNotifies(3);  // interactionEnded, shutdown, interpreterReady", "-      while (_pendingNotifies > 0) _notifierLock.wait();", "-    }", "+    synchronized(_notifierLock) { while (_pendingNotifies > 0) _notifierLock.wait(); }", "-", "+    "]}], "num": 264}