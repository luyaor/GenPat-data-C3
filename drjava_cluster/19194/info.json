{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67e3af3397617c5cef9d4e021f443e56", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "288e4aa34bf87173cf3393d6292a3223", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "234bd4844cd05b54b5a22923acbe058c4a23f276", "commitAfterChange": "c992bd1a9776dc6e821e2f4ee9a6b7869b244315", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 173, "signatureBeforeChange": "      private Expression box(Expression exp, ClassType boxedType)", "signatureAfterChange": "      private Expression box(Expression exp, ClassType boxedType)", "diff": ["-                                                  NONE_TYPE_OPTION);", "+                                                  NONE_TYPE_OPTION, new TopLevelAccessModule(\"\"));", "-        ConstructorInvocation inv = lookupConstructor(boxedType, EMPTY_TYPE_ITERABLE, arguments, NONE_TYPE_OPTION); ", "+        ConstructorInvocation inv = lookupConstructor(boxedType, EMPTY_TYPE_ITERABLE, arguments, NONE_TYPE_OPTION,", "+                                                      new TopLevelAccessModule(\"\")); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46240387e81ed19e2d02688797508c01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "875709ea758d694dda7555b8eeb2e15fa58e98c5", "commitAfterChange": "d29db164117e7452d6023bc6a73abe9d53f7d65b", "methodNumberBeforeChange": 237, "methodNumberAfterChange": 247, "signatureBeforeChange": "      private Expression box(Expression exp, ClassType boxedType)", "signatureAfterChange": "      private Expression box(Expression exp, ClassType boxedType)", "diff": ["-        MethodInvocation inv = lookupStaticMethod(boxedType, \"valueOf\", EMPTY_TYPE_ITERABLE, arguments);", "+        MethodInvocation inv = lookupStaticMethod(boxedType, \"valueOf\", EMPTY_TYPE_ITERABLE, arguments,", "+                                                  NONE_TYPE_OPTION);", "-        ConstructorInvocation inv = lookupConstructor(boxedType, EMPTY_TYPE_ITERABLE, arguments); ", "+        ConstructorInvocation inv = lookupConstructor(boxedType, EMPTY_TYPE_ITERABLE, arguments, NONE_TYPE_OPTION); "]}], "num": 19194}