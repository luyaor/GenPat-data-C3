{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "697a2c1b9760c24e5695517c0ee7ec96", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29164cdce8f41ab684886b2e0018b2de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/views/InteractionsController.java", "commitBeforeChange": "216fad0aa8523dbc9402b5e83d2d0e4e9e0fc64e", "commitAfterChange": "4297ff328013eaae7e900c94d6d5500e0fe9b17c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void verifyKey(VerifyEvent event)", "signatureAfterChange": "     public void verifyKey(VerifyEvent event)", "diff": ["-      int caretPos = pane.getCaretOffset();", "-      //System.out.println(\"event consumer: keycode: \" + event.keyCode);", "+      //int caretPos = pane.getCaretOffset();", "+      //System.out.println(\"event consumer: keycode: \" + event.keyCode + \", char: \" + event.character);", "+      // shift+home", "+      else if (event.keyCode == SWT.HOME && (event.stateMask & SWT.SHIFT) == 1) {", "+      \tevent.doit = selectToPromptPosAction();", "+      }", "+      // home", "+      else if (event.keyCode == SWT.HOME) {", "+      \tevent.doit = gotoPromptPosAction();", "+      }", "+      // shortcut for clear command?  (ctrl+B is build project)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e7af05569508f87ce5df87cfe01594d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "94ede5fc3e289a571a76fcd6a91c26510fe57b12", "commitAfterChange": "32513407e5f8f41a21eb0336c92af1269f67953c", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 216, "signatureBeforeChange": "     protected DDReconstructor makeReconstructor()", "signatureAfterChange": "     protected DDReconstructor makeReconstructor()", "diff": ["+        // Weak hashmap that associates a WrappedPosition with its offset when saveDocInfo was called", "+        private WeakHashMap<DefinitionsDocument.WrappedPosition, Integer> _positions =", "+          new WeakHashMap<DefinitionsDocument.WrappedPosition, Integer>();", "+        ", "+          // re-create and update all positions", "+          tempDoc.setWrappedPositionOffsets(_positions);", "+          ", "+          ", "+          // save offsets of all positions", "+          _positions.clear();", "+          _positions = doc.getWrappedPositionOffsets();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c5eee11d339c98a3feff14170cf120", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/HighlightManager.java", "commitBeforeChange": "11468bc4ad25791b96b22dc517ca86e31b87894e", "commitAfterChange": "53d061333fe3393f6569c1f553912f1a449482ad", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "       public HighlightInfo(int from, int to, Highlighter.HighlightPainter p)", "signatureAfterChange": "       public HighlightInfo(int from, int to, Highlighter.HighlightPainter p)", "diff": ["-          _startPos = _component.getDocument().createPosition(from);", "-          _endPos = _component.getDocument().createPosition(to);", "+          Document doc = _component.getDocument();", "+          if (doc instanceof SwingDocumentInterface) {", "+            SwingDocumentInterface sdoc = (SwingDocumentInterface) doc;", "+            _startPos = sdoc.createDJPosition(from);", "+            _endPos = sdoc.createDJPosition(to);", "+          }", "+          else {", "+            _startPos = doc.createPosition(from);", "+            _endPos = doc.createPosition(to);", "+          }"]}], "num": 17125}