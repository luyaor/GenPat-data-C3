{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "987efd91b78f53489d0a02cd855d93cb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07793d0cb716f837ad88ec3feee85c8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void testInteractionsHistoryStoredCorrectly() throws EditDocumentException", "signatureAfterChange": "   public void testInteractionsHistoryStoredCorrectly() throws EditDocumentException", "diff": ["-    String code = \"public class A {\\n\";", "+    final String code = \"public class A {\\n\";", "-    InteractionsDocument doc = _model.getDocument();", "+    final InteractionsDocument doc = _model.getDocument();", "-    doc.insertText(doc.getLength(), code, InteractionsDocument.DEFAULT_STYLE);", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        doc.insertText(doc.getLength(), code, InteractionsDocument.DEFAULT_STYLE);", "+        _model.interpretCurrentInteraction();", "+      }", "+    });", "-    _model.interpretCurrentInteraction();", "-    Utilities.clearEventQueue();", "-    code = \"}\\n\";", "+    final String code1 = \"}\\n\";", "-    doc.insertText(doc.getLength(), code, InteractionsDocument.DEFAULT_STYLE);", "-    Utilities.clearEventQueue();", "-    ", "-    synchronized(_lock) {", "-      _model.interpretCurrentInteraction();", "-      _model.replReturnedVoid();", "-    }", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        doc.insertText(doc.getLength(), code1, InteractionsDocument.DEFAULT_STYLE);", "+        _model.interpretCurrentInteraction();", "+        _model.replReturnedVoid();", "+      }", "+    });", "-    synchronized(_lock) {", "-      assertEquals(\"Current interaction should not be there - should have interpreted\", \"\", doc.getCurrentInteraction());", "-      assertEquals(\"History should contain one interaction\", 1, h.size());", "-    }", "+    assertEquals(\"Current interaction should not be there - should have interpreted\", \"\", doc.getCurrentInteraction());", "+    assertEquals(\"History should contain one interaction\", 1, h.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e40e3edf51d1a6e6d93418067d7fb03", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testInteractionsHistoryStoredCorrectly() throws EditDocumentException", "signatureAfterChange": "   public void testInteractionsHistoryStoredCorrectly() throws EditDocumentException", "diff": ["-    final String code = \"public class A {\\n\";", "+    String code = \"public class A {\\n\";", "-    final InteractionsDocument doc = _model.getDocument();", "+    InteractionsDocument doc = _model.getDocument();", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() { ", "-        doc.insertText(doc.getLength(), code, InteractionsDocument.DEFAULT_STYLE);", "-        _model.interpretCurrentInteraction();", "-      }", "-    });", "+    doc.insertText(doc.getLength(), code, InteractionsDocument.DEFAULT_STYLE);", "+    _model.interpretCurrentInteraction();", "+    Utilities.clearEventQueue();", "-    final String code1 = \"}\\n\";", "+    code = \"}\\n\";", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() { ", "-        doc.insertText(doc.getLength(), code1, InteractionsDocument.DEFAULT_STYLE);", "-        _model.interpretCurrentInteraction();", "-        _model.replReturnedVoid();", "-      }", "-    });", "+    doc.insertText(doc.getLength(), code, InteractionsDocument.DEFAULT_STYLE);", "+    Utilities.clearEventQueue();", "+    ", "+    synchronized(_lock) {", "+      _model.interpretCurrentInteraction();", "+      _model.replReturnedVoid();", "+    }", "-    assertEquals(\"Current interaction should not be there - should have interpreted\", \"\", doc.getCurrentInteraction());", "-    assertEquals(\"History should contain one interaction\", 1, h.size());", "+    synchronized(_lock) {", "+      assertEquals(\"Current interaction should not be there - should have interpreted\", \"\", doc.getCurrentInteraction());", "+      assertEquals(\"History should contain one interaction\", 1, h.size());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "109e05d788eaabef805d6a9e3a962be1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void testInteractionsHistoryStoredCorrectly() throws EditDocumentException", "signatureAfterChange": "   public void testInteractionsHistoryStoredCorrectly() throws EditDocumentException", "diff": ["-    String code = \"public class A {\\n\";", "+    final String code = \"public class A {\\n\";", "-    InteractionsDocument doc = _model.getDocument();", "+    final InteractionsDocument doc = _model.getDocument();", "-    doc.insertText(doc.getLength(), code, InteractionsDocument.DEFAULT_STYLE);", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        doc.insertText(doc.getLength(), code, InteractionsDocument.DEFAULT_STYLE);", "+        _model.interpretCurrentInteraction();", "+      }", "+    });", "-    _model.interpretCurrentInteraction();", "-    Utilities.clearEventQueue();", "-    code = \"}\\n\";", "+    final String code1 = \"}\\n\";", "-    doc.insertText(doc.getLength(), code, InteractionsDocument.DEFAULT_STYLE);", "-    Utilities.clearEventQueue();", "-    ", "-    synchronized(_lock) {", "-      _model.interpretCurrentInteraction();", "-      _model.replReturnedVoid();", "-    }", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        doc.insertText(doc.getLength(), code1, InteractionsDocument.DEFAULT_STYLE);", "+        _model.interpretCurrentInteraction();", "+        _model.replReturnedVoid();", "+      }", "+    });", "-    synchronized(_lock) {", "-      assertEquals(\"Current interaction should not be there - should have interpreted\", \"\", doc.getCurrentInteraction());", "-      assertEquals(\"History should contain one interaction\", 1, h.size());", "-    }", "+    assertEquals(\"Current interaction should not be there - should have interpreted\", \"\", doc.getCurrentInteraction());", "+    assertEquals(\"History should contain one interaction\", 1, h.size());"]}], "num": 20955}