{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5af324e0391f34e20cb7e5036ce9ccf5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29101f043d4ada588f22e786e6504d47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "bd2e852d4b09497531ae79af49475815d01d70b1", "commitAfterChange": "85b72c50d3f809a70141774d731cbef2c25b2f7f", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public boolean setSelectedDirectory(File dir)", "signatureAfterChange": "   public boolean setSelectedDirectory(File dir)", "diff": ["-    ", "-    LinkedList<File> path = new LinkedList<File>();", "-    File tmp = formatFile(dir);", "-    do {", "-      path.addFirst(tmp);", "-    } while ((tmp = tmp.getParentFile()) != null);", "-    ", "-    HashSet<File> rootSet = new HashSet<File>();", "-    tmp = _rootFile;", "-    do {", "-      rootSet.add(tmp);", "-    } while ((tmp = tmp.getParentFile()) != null);", "-    ", "-    // remove the root from the path", "-    ListIterator<File> it = path.listIterator();", "-    while (it.hasNext()) {", "-      tmp = it.next();", "-      if (rootSet.contains(tmp)) {", "-        it.remove();", "-      }", "+    _defaultSelectedFile = dir;", "+    return updateTreeSelectionPath();", "+  }", "-    ", "-    DefaultMutableTreeNode currNode = _root;", "-    for (File currFile : path) {", "-      DefaultMutableTreeNode n = findMatchingChild(currNode, currFile);", "-      if (n == null) {", "-        ensureHasChildren(currNode);", "-      }", "-      n = findMatchingChild(currNode, currFile); // search again", "-      if (n == null) {", "-        return false; // not found", "-      }", "-      else {", "-        currNode = n;", "-      }", "-    TreePath tp = new TreePath(currNode.getPath());", "-    _tree.setSelectionPath(tp);", "-    // expand the tree bounds out so it doesn't", "-    // get placed on the bottom of the tree.", "-    Rectangle bounds = _tree.getPathBounds(tp);", "-    int x = 0;", "-    int y = bounds.y - 100;", "-    int w = bounds.width + bounds.x;", "-    int h = bounds.height + 200;", "-    Rectangle scrollBounds = new Rectangle(x,y,w,h);", "-    _tree.makeVisible(tp);", "-    _tree.scrollRectToVisible(scrollBounds);", "-    _tree.repaint();", "-    return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d7d9d42e8f896a786f8ad0497526790", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "51e8ea430c01509f87d3823d7a75f90d00225716", "commitAfterChange": "5425ae0e836a7ee6f00ac774f834187d377d72ad", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 50, "signatureBeforeChange": "     public void breakpointRemoved(final Breakpoint bp)", "signatureAfterChange": "     public void breakpointRemoved(final Breakpoint bp)", "diff": ["-     */", "-    public void breakpointRemoved(final Breakpoint bp) {", "-      // Only change GUI from event-dispatching thread", "-      Runnable doCommand = new Runnable() {", "-        public void run() {", "-          DefaultMutableTreeNode bpDocNode = new DefaultMutableTreeNode(bp.getClassName());", "-", "-          // Find the document node for this breakpoint", "-          Enumeration documents = _breakpointRootNode.children();", "-          while (documents.hasMoreElements()) {", "-            DefaultMutableTreeNode doc = (DefaultMutableTreeNode)documents.nextElement();", "-            if (doc.getUserObject().equals(bpDocNode.getUserObject())) {", "-              // Find the correct line number node for this breakpoint", "-              Enumeration lineNumbers = doc.children();", "-              while (lineNumbers.hasMoreElements()) {", "-                DefaultMutableTreeNode lineNumber =", "-                  (DefaultMutableTreeNode)lineNumbers.nextElement();", "-                if (lineNumber.getUserObject().equals(new Integer(bp.getLineNumber()))) {", "-                  _bpTreeModel.removeNodeFromParent(lineNumber);", "-                  if (doc.getChildCount() == 0) {", "-                    // this document has no more breakpoints, remove it", "-                    _bpTreeModel.removeNodeFromParent(doc);", "-                  }", "-                  return;", "-                }", "-              }", "-            }", "-          }", "-        }", "-      };", "-      Utilities.invokeLater(doCommand);", "-    }", "+    /** Called when a breakpoint is removed from a document. */", "+    public void breakpointRemoved(final Breakpoint bp) { }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a552ae6b7d0e29ea8cb11df9d1a73f56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "51e8ea430c01509f87d3823d7a75f90d00225716", "commitAfterChange": "5425ae0e836a7ee6f00ac774f834187d377d72ad", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 49, "signatureBeforeChange": "     public void breakpointReached(final Breakpoint bp)", "signatureAfterChange": "     public void breakpointReached(final Breakpoint bp)", "diff": ["-     */", "-    public void breakpointReached(final Breakpoint bp) {", "-      // Only change GUI from event-dispatching thread", "-      Runnable doCommand = new Runnable() {", "-        public void run() {", "-          DefaultMutableTreeNode bpDoc = new DefaultMutableTreeNode(bp.getClassName());", "+     * Called when a breakpoint is reached during execution. */", "+    public void breakpointReached(final Breakpoint bp) { }", "-          // Find the document node for this breakpoint", "-          Enumeration documents = _breakpointRootNode.children();", "-          while (documents.hasMoreElements()) {", "-            DefaultMutableTreeNode doc = (DefaultMutableTreeNode)documents.nextElement();", "-            if (doc.getUserObject().equals(bpDoc.getUserObject())) {", "-              // Find the correct line number node for this breakpoint", "-              Enumeration lineNumbers = doc.children();", "-              while (lineNumbers.hasMoreElements()) {", "-                DefaultMutableTreeNode lineNumber =", "-                  (DefaultMutableTreeNode)lineNumbers.nextElement();", "-                if (lineNumber.getUserObject().equals(new Integer(bp.getLineNumber()))) {", "-", "-                  // Select the node which has been hit", "-                  TreePath pathToNewBreakpoint = new TreePath(lineNumber.getPath());", "-                  _bpTree.scrollPathToVisible(pathToNewBreakpoint);", "-                  _bpTree.setSelectionPath(pathToNewBreakpoint);", "-                }", "-              }", "-            }", "-          }", "-        }", "-      };", "-      Utilities.invokeLater(doCommand);", "-    }"]}], "num": 9070}