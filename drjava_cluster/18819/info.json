{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "876d87cc9a88d60e0dc45921ebda1f86", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fd8e66aa764367e6899a4ead8f890d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "commitAfterChange": "4e52eec7688cbd5ec3584417f424923ba61a75e0", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 59, "signatureBeforeChange": "   protected void identifyInnerClasses(TypeDefBase that)", "signatureAfterChange": "   protected void identifyInnerClasses(TypeDefBase that)", "diff": ["-    String enclosingType = getQualifiedClassName(that.getName().getText());", "+    String prefix = _enclosingClassName == null ? \"\" : _enclosingClassName + '.';", "+    String enclosingType = getQualifiedClassName(prefix + that.getName().getText());", "+//    System.err.println(\"***** identifyInnerClasses called for \" + enclosingType + \" in file \" + _file);", "+//    System.err.println(\"SymbolData for \" + enclosingType + \" is \" + sd);", "+    enclosingType = sd.getName(); // that may be a local class, which has a more elaborate name", "+//        System.err.println(\"***** Making continuation for \" + fullClassName + \" in file \" + _file);", "+//        System.err.println(\"***** Continuation \" + innerSD + \" returned\");", "+//        Utilities.show(\"***** Continuation \" + innerSD + \" returned\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3927abf3ec09715893732b49025cb9d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileTest.java", "commitBeforeChange": "2707043a47325658db92e0290e695128c6817bba", "commitAfterChange": "0c506ac270d6b542eb2c43fb49629be8c2634151", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["-    testFile = File.createTempFile(\"_test\", \"pjt\");", "+    String user = System.getProperty(\"user.name\");", "+    _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "+", "+    testFile =tempFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad182bd5b78cef636675a4354ddbbc08", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "ffd4041892a5b6241078fa85d1e6d8e288f9b5a3", "commitAfterChange": "a2e65b5d7c2d7a000e177f6f8c9c0731c89b2734", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public void testSaveClearAndLoadHistory() throws BadLocationException,      InterruptedException, IOException", "signatureAfterChange": "   public void testSaveClearAndLoadHistory() throws BadLocationException,      InterruptedException, IOException", "diff": ["-", "+    ", "-    assertEquals(\"History or getHistoryAsString don't work\",", "+    assertEquals(\"History and getHistoryAsString should be the same.\",", "+    String newLine = System.getProperty(\"line.separator\");", "-                 s1+'\\n'+s2+'\\n',", "+                 s1 + newLine + s2 + newLine,", "-                 \"x = 5\\n\",", "-                 con.getText(0, con.getLength()));", "+                 \"x = 5\",", "+                 con.getText(0, con.getLength()).trim());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0ff66d5da5d058f8efef229d49113c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "f5f9e35c2a806ad9979915d514415944af196bab", "commitAfterChange": "720d6a91901cb3699fb981b0c6b71471d6bbb848", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void setUp()", "signatureAfterChange": "   protected void setUp() throws IOException", "diff": ["+  protected void setUp() throws IOException {", "+    _model = new GlobalModel();", "+    String user = System.getProperty(\"user.name\");", "+    _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "-  public void setUp() {", "-    _model = new GlobalModel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfac75021e8002af87a9dfb0e2c8d1c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersion.java", "commitBeforeChange": "391e45139a20d29595a89151324a2e220b5d12fb", "commitAfterChange": "b3945c97981b1413d538a04b218b57bbc9b0fda9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "          public int hashCode()", "signatureAfterChange": "          public int hashCode()", "diff": ["+      int fileHash = _location == null ? 0 : _location.hashCode();", "-        ^ (_vendor.hashCode() << 4) ^ stringHash;", "+        ^ (_vendor.hashCode() << 4) ^ (stringHash << 5) ^ fileHash;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b59831b17aea2face240d22132d9cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/HistoryTest.java", "commitBeforeChange": "772d55948f939a494c28e52313a1162cba5534b8", "commitAfterChange": "444cb9c318707ca2f9a6eaa5854ba2be0fcd383e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   protected void setUp()", "signatureAfterChange": "   public void setUp() throws IOException", "diff": ["-  protected void setUp() {", "+  public void setUp() throws IOException {", "+    String user = System.getProperty(\"user.name\");", "+    _tempDir = FileOps.createTempDirectory(\"DrJava-test-\" + user);", "+  }"]}], "num": 18819}