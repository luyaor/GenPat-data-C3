{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8dd737cf21423d653ed082f5e3d6d22c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c1d92a9a331d4cd69be8b763d6b6761", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 80, "signatureBeforeChange": "     public void startCompile() throws IOException", "signatureAfterChange": "      public void startCompile() throws IOException", "diff": ["-     */", "-      synchronized(_compilerLock) {", "-        // Only compile if all are saved", "-        if (hasModifiedDocuments()) {", "-          _notifier.saveBeforeCompile();", "-        }", "-", "-        if (hasModifiedDocuments()) {", "-          // if any files haven't been saved after we told our", "-          // listeners to do so, don't proceed with the rest", "-          // of the compile.", "-        }", "-        else {", "-          try {", "-            File file = _doc.getFile();", "-            File[] files = new File[] { file };", "-", "-            try {", "-              _notifier.compileStarted();", "-", "-              File[] sourceRoots = new File[] { getSourceRoot() };", "-", "-              _compileFiles(sourceRoots, files);", "-            }", "-            catch (Throwable e) {", "-              CompilerError err = new CompilerError(file, -1, -1, e.getMessage(), false);", "-              CompilerError[] errors = new CompilerError[] { err };", "-              _distributeErrors(errors);", "-            }", "-            finally {", "-              // Fire a compileEnded event", "-              _notifier.compileEnded();", "-", "-              // Only clear interactions if there were no errors", "-              if (_numErrors == 0 && _interactionsModel.interpreterUsed()) {", "-//                  && _resetAfterCompile) {", "-                resetInteractions();", "-              }", "-            }", "-          }", "-          catch (IllegalStateException ise) {", "-            // No file exists, don't try to compile", "-          }", "-        }", "-      }", "+      _compilerModel.compile(DefinitionsDocumentHandler.this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5fe18640b4b5faa28f7b9cd7575498", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "commitAfterChange": "2df7289d55456372fbaf4e3ab78549d8571648f8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void compile(OpenDefinitionsDocument doc) throws IOException", "signatureAfterChange": "   public void compile(OpenDefinitionsDocument doc) throws IOException", "diff": ["+    */", "+  public void compile(OpenDefinitionsDocument doc) throws IOException {", "+    if (_prepareForCompile()) {", "+      _doCompile(Arrays.asList(doc));", "+    }", "+  }", "-   */", "-  public void compile(OpenDefinitionsDocument doc) throws IOException {", "-    ", "-    List<OpenDefinitionsDocument> defDocs;", "-    defDocs = _model.getOpenDefinitionsDocuments(); ", "-    ", "-    // Only compile if all docs are saved.  In project mode, untitled docs are ignored.", "-    if (_hasModifiedFiles(defDocs)) _notifier.saveBeforeCompile();", "-    if (_hasModifiedFiles(defDocs)) return;  /* Abort compilation */", "-    ", "-    // In project mode, untitled files are ignored; check if doc is untitled. ", "-    if (doc.isUntitled()) {", "-      _notifier.saveUntitled();", "-      if (doc.isUntitled()) return;", "-    }", "-    ", "-    File f = doc.getFile();", "-    File[] files, excludedFiles;", "-    ", "-    if (endsWithExt(f, EXTENSIONS)) {", "-      files = new File[]{f};", "-      excludedFiles = new File[0];", "-    }", "-    else {", "-      files = new File[0];", "-      excludedFiles = new File[]{f};", "-    }", "-    doc.setCachedClassFile(null); // clear cached class file", "-    _rawCompile(new File[] { doc.getSourceRoot() }, files, excludedFiles); ", "-  }"]}], "num": 19306}