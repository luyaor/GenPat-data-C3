{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "971d2349162fecf10360d6882dfedf8b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3524361ff62df318899db0398f5aa064", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "69a380647f3d586f130ea02ad1e8381a390045e3", "commitAfterChange": "739371db1261b11c3be5fd70233012a49b45b7ca", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     private Type handleNumericExpression(BinaryExpression node)", "signatureAfterChange": "     private Type handleNumericExpression(BinaryExpression node)", "diff": ["-        return setType(node, getType(promoted.first()));", "+        Type result = setType(node, getType(promoted.first()));", "+        evaluateConstantExpression(node);", "+        return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ec8279bdadd8470cc51d42a7b03ca76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "69a380647f3d586f130ea02ad1e8381a390045e3", "commitAfterChange": "739371db1261b11c3be5fd70233012a49b45b7ca", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "     private Type handleNumericUnaryExpression(UnaryExpression node)", "signatureAfterChange": "     private Type handleNumericUnaryExpression(UnaryExpression node)", "diff": ["-        return setType(node, getType(exp));", "+        Type result = setType(node, getType(exp));", "+        evaluateConstantExpression(node);", "+        return result;"]}], "num": 26362}