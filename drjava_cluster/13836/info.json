{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f06d0ed18ddcccb8f389d5db9592f12", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b617fdfb35d557cf2ab11503250d4728", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "commitAfterChange": "42161d6697319e0431a875a1f8336eb6cdd1fe73", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public synchronized void testBreakpointsNonPublicClasses()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses()      throws DebugException, BadLocationException, IOException, InterruptedException", "diff": ["-  public synchronized void testBreakpointsNonPublicClasses() ", "+  public synchronized void testBreakpointsAndStepsInNonPublicClasses() ", "-    BreakpointTestListener debugListener = new BreakpointTestListener();", "+    StepTestListener debugListener = new StepTestListener();", "-      ", "+    ", "+    // Step to next line", "+    synchronized(_notifierLock){", "+      _debugManager.step(DebugManager.STEP_OVER);", "+      _waitForNotifies(2);  // suspended, updated", "+      _notifierLock.wait();", "+    }", "+    ", "+    if (printMessages) System.out.println(\"****\"+getInteractionsText());", "+    debugListener.assertStepRequestedCount(1);  // fires (don't wait)", "+    debugListener.assertCurrThreadResumedCount(1); // fires (don't wait)", "+    debugListener.assertThreadLocationUpdatedCount(2); // fires", "+    debugListener.assertCurrThreadDiedCount(0);", "+    debugListener.assertCurrThreadSuspendedCount(2);  //fires", "+    debugListener.assertBreakpointReachedCount(1);", "+    assertInteractionsContains(\"Baz Line 1\");", "+    assertInteractionsDoesNotContain(\"Bar Line 1\");", "-    debugListener.assertCurrThreadResumedCount(1);  //fires (no waiting)", "+    debugListener.assertCurrThreadResumedCount(2);  //fires (no waiting)", "-    debugListener.assertThreadLocationUpdatedCount(2);  //fires", "-    debugListener.assertCurrThreadSuspendedCount(2);  //fires", "+    debugListener.assertThreadLocationUpdatedCount(3);  //fires", "+    debugListener.assertCurrThreadSuspendedCount(3);  //fires", "-    assertInteractionsContains(\"Baz Line 1\");", "-    debugListener.assertCurrThreadResumedCount(2);  //fires (no waiting)", "+    debugListener.assertCurrThreadResumedCount(3);  //fires (no waiting)", "-    debugListener.assertThreadLocationUpdatedCount(2);", "-    debugListener.assertCurrThreadSuspendedCount(2);", "+    debugListener.assertThreadLocationUpdatedCount(3);", "+    debugListener.assertCurrThreadSuspendedCount(3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f41a6a729b920e84927a9c874b9ada6e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "commitAfterChange": "42161d6697319e0431a875a1f8336eb6cdd1fe73", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testStepInto()      throws DebugException, BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testStepInto()      throws DebugException, BadLocationException, IOException, InterruptedException", "diff": ["-      _waitForNotifies(1);  // suspended", "+      _waitForNotifies(2);  // suspended, updated", "-    debugListener.assertThreadLocationUpdatedCount(1);", "-    debugListener.assertCurrThreadSuspendedCount(2);  //fires", "+    debugListener.assertThreadLocationUpdatedCount(2);  // fires", "+    debugListener.assertCurrThreadSuspendedCount(2);  // fires", "-      _waitForNotifies(1);  // suspended", "+      _waitForNotifies(2);  // suspended, updated", "-    debugListener.assertThreadLocationUpdatedCount(1);  ", "+    debugListener.assertThreadLocationUpdatedCount(3);  // fires", "-    debugListener.assertCurrThreadSuspendedCount(3);  //fires", "+    debugListener.assertCurrThreadSuspendedCount(3);  // fires", "-      _waitForNotifies(1);  // suspended", "+      _waitForNotifies(2);  // suspended, updated", "-    debugListener.assertThreadLocationUpdatedCount(1);", "+    debugListener.assertThreadLocationUpdatedCount(4);  // fires", "-    debugListener.assertCurrThreadSuspendedCount(4);  //fires", "+    debugListener.assertCurrThreadSuspendedCount(4);  // fires", "-      _waitForNotifies(1);  // suspended", "+      _waitForNotifies(2);  // suspended, updated", "-      _waitForNotifies(1);  // suspended", "+      _waitForNotifies(2);  // suspended, updated", "-    debugListener.assertThreadLocationUpdatedCount(1);", "+    debugListener.assertThreadLocationUpdatedCount(6);  // fires"]}], "num": 13836}