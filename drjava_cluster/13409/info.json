{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e10ebf38f65f404d0df8b15f5aae4d4d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73a53028854b503ccc14c1186c49bfab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ArrayAllocation.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 13, "signatureBeforeChange": "     void initialize(TypeName t)", "signatureAfterChange": "     void initialize(TypeName t)", "diff": ["-     */", "+    /** Initializes the type descriptor */", "-        TypeName et = (dimension > 1)", "-          ? new ArrayTypeName(t, dimension - 1,", "-                          t.getFilename(),", "-                          t.getBeginLine(), t.getBeginColumn(),", "-                          endLine, endColumn)", "-          : t;", "+        TypeName et;", "+        if (dimension > 1)", "+          et = new ArrayTypeName(t, dimension-1, t.getFilename(), t.getBeginLine(), t.getBeginColumn(), endLine, endColumn);", "+        else", "+          et = t; ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2d1a85d8978101ec6e257b7d2bcf127", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileBuilder.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private DocFile docFileFromGetter(DocumentInfoGetter getter) throws IOException", "signatureAfterChange": "   private DocFile docFileFromGetter(DocumentInfoGetter g) throws IOException", "diff": ["-  private DocFile docFileFromGetter(DocumentInfoGetter getter) throws IOException {    ", "-      return new DocFile(getter.getFile().getCanonicalPath(),", "-                         getter.getSelection(),", "-                         getter.getScroll(),", "-                         getter.isActive(),", "-                         getter.getPackage());", "+  private DocFile docFileFromGetter(DocumentInfoGetter g) throws IOException {    ", "+      return new DocFile(g.getFile().getCanonicalPath(), g.getSelection(), g.getScroll(), g.isActive(), g.getPackage());"]}], "num": 13409}