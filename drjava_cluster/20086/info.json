{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f15c0c3987e0a945425e080349679a3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "422cc4a793c8325ea35c2fd9120055a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "          public void testForConstructorDef()", "signatureAfterChange": "          public void testForConstructorDef()", "diff": ["-      ConstructorDef cd = new ConstructorDef(JExprParser.NO_SOURCE_INFO, ", "-                                             new Word(JExprParser.NO_SOURCE_INFO, \"MyClass\"), _publicMav, ", "+      ConstructorDef cd = new ConstructorDef(SourceInfo.NO_INFO, ", "+                                             new Word(SourceInfo.NO_INFO, \"MyClass\"), _publicMav, ", "-                                             new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                             new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-        new FormalParameter(JExprParser.NO_SOURCE_INFO, ", "-                            new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                                                new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                                                new Word(JExprParser.NO_SOURCE_INFO, \"i\")), false);", "-      ReferenceType rt = new TypeVariable(JExprParser.NO_SOURCE_INFO, \"MyMadeUpException\");", "-      ConstructorDef cd2 = new ConstructorDef(JExprParser.NO_SOURCE_INFO, ", "-                                              new Word(JExprParser.NO_SOURCE_INFO, \"MyClass\"), _publicMav, ", "+        new FormalParameter(SourceInfo.NO_INFO, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                                                new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                                                new Word(SourceInfo.NO_INFO, \"i\")), false);", "+      ReferenceType rt = new TypeVariable(SourceInfo.NO_INFO, \"MyMadeUpException\");", "+      ConstructorDef cd2 = new ConstructorDef(SourceInfo.NO_INFO, ", "+                                              new Word(SourceInfo.NO_INFO, \"MyClass\"), _publicMav, ", "-                                              new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                              new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-        new FormalParameter(JExprParser.NO_SOURCE_INFO, ", "-                            new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                                                new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"double\"), ", "-                                                                new Word(JExprParser.NO_SOURCE_INFO, \"i\")), false);", "+        new FormalParameter(SourceInfo.NO_INFO, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                                                new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "+                                                                new Word(SourceInfo.NO_INFO, \"i\")), false);", "-      ConstructorDef cd3 = new ConstructorDef(JExprParser.NO_SOURCE_INFO, ", "-                                              new Word(JExprParser.NO_SOURCE_INFO, \"MyClass\"), _publicMav, ", "+      ConstructorDef cd3 = new ConstructorDef(SourceInfo.NO_INFO, ", "+                                              new Word(SourceInfo.NO_INFO, \"MyClass\"), _publicMav, ", "-                                             new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                             new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a909d47af180cebc4bf0236cbb702d13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "bf2319a0fd4ff0da05d171cf995d395154267897", "commitAfterChange": "ce944bab12f670cf565ac442d0f81c8cbf5e4ad0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "      public void testGranularUndo() throws BadLocationException", "signatureAfterChange": "      public void testGranularUndo() throws BadLocationException", "diff": ["-    final DefinitionsPane definitions = _frame.getCurrentDefPane();", "-    final OpenDefinitionsDocument doc = definitions.getOpenDefDocument();", "+    final DefinitionsPane defPane = _frame.getCurrentDefPane();", "+    final OpenDefinitionsDocument doc = defPane.getOpenDefDocument();", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(), 0,", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_PRESSED, (new Date()).getTime(), 0,", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_TYPED, (new Date()).getTime(), 0,", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_TYPED, (new Date()).getTime(), 0,", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(), 0,", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_RELEASED, (new Date()).getTime(), 0,", "-        definitions.setCaretPosition(doc.getLength());", "+        defPane.setCaretPosition(doc.getLength());", "-        definitions.processKeyEvent(new KeyEvent(definitions,", "+        defPane.processKeyEvent(new KeyEvent(defPane,", "-        definitions.processKeyEvent(new KeyEvent(definitions,", "+        defPane.processKeyEvent(new KeyEvent(defPane,", "-        definitions.processKeyEvent(new KeyEvent(definitions,", "+        defPane.processKeyEvent(new KeyEvent(defPane,", "-        definitions.setCaretPosition(doc.getLength());", "+        defPane.setCaretPosition(doc.getLength());", "-        definitions.processKeyEvent(new KeyEvent(definitions,", "+        defPane.processKeyEvent(new KeyEvent(defPane,", "-        definitions.processKeyEvent(new KeyEvent(definitions,", "+        defPane.processKeyEvent(new KeyEvent(defPane,", "-        definitions.processKeyEvent(new KeyEvent(definitions,", "+        defPane.processKeyEvent(new KeyEvent(defPane,", "-        definitions.setCaretPosition(doc.getLength());", "+        defPane.setCaretPosition(doc.getLength());", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(), 0,", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_PRESSED, (new Date()).getTime(), 0,", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_TYPED, (new Date()).getTime(), 0,", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_TYPED, (new Date()).getTime(), 0,", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(), 0,", "+        defPane.processKeyEvent(new KeyEvent(defPane, KeyEvent.KEY_RELEASED, (new Date()).getTime(), 0,", "-        definitions.setCaretPosition(doc.getLength());", "+        defPane.setCaretPosition(doc.getLength());", "-    final KeyEvent e = new KeyEvent(definitions, KeyEvent.KEY_PRESSED, 0, ks.getModifiers(), ks.getKeyCode(),", "+    final KeyEvent e = new KeyEvent(defPane, KeyEvent.KEY_PRESSED, 0, ks.getModifiers(), ks.getKeyCode(),", "-    Utilities.invokeAndWait(new Runnable() { public void run() { definitions.processKeyEvent(e); } });", "+    Utilities.invokeAndWait(new Runnable() { public void run() { defPane.processKeyEvent(e); } });", "-         definitions.processKeyEvent(new KeyEvent(definitions,", "+         defPane.processKeyEvent(new KeyEvent(defPane,", "-         definitions.processKeyEvent(new KeyEvent(definitions,", "+         defPane.processKeyEvent(new KeyEvent(defPane,", "-         definitions.processKeyEvent(new KeyEvent(definitions,", "+         defPane.processKeyEvent(new KeyEvent(defPane,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df713f317ef46d9192ad476047e2e41a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyElementaryVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "          public void testForVariableDeclarationOnly()", "signatureAfterChange": "          public void testForVariableDeclarationOnly()", "diff": ["-      VariableDeclaration vdecl = new VariableDeclaration(JExprParser.NO_SOURCE_INFO,", "+      VariableDeclaration vdecl = new VariableDeclaration(SourceInfo.NO_INFO,", "-        new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                               new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"double\"), ", "-                               new Word (JExprParser.NO_SOURCE_INFO, \"field1\")),", "-        new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                               new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"boolean\"), ", "-                               new Word (JExprParser.NO_SOURCE_INFO, \"field2\"))});", "+        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                               new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "+                               new Word (SourceInfo.NO_INFO, \"field1\")),", "+        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                               new PrimitiveType(SourceInfo.NO_INFO, \"boolean\"), ", "+                               new Word (SourceInfo.NO_INFO, \"field2\"))});", "-      VariableDeclaration vdecl2 = new VariableDeclaration(JExprParser.NO_SOURCE_INFO,", "+      VariableDeclaration vdecl2 = new VariableDeclaration(SourceInfo.NO_INFO,", "-        new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                            new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"double\"), ", "-                                            new Word (JExprParser.NO_SOURCE_INFO, \"field3\")),", "-        new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                            new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                            new Word (JExprParser.NO_SOURCE_INFO, \"field3\"))});", "+        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                            new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "+                                            new Word (SourceInfo.NO_INFO, \"field3\")),", "+        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                            new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                            new Word (SourceInfo.NO_INFO, \"field3\"))});", "-      VariableDeclaration vdecl3 = new VariableDeclaration(JExprParser.NO_SOURCE_INFO,", "+      VariableDeclaration vdecl3 = new VariableDeclaration(SourceInfo.NO_INFO,", "-        new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                            new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"double\"), ", "-                                            new Word (JExprParser.NO_SOURCE_INFO, \"field4\"))});", "+        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                            new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "+                                            new Word (SourceInfo.NO_INFO, \"field4\"))});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9347fc66960f87d7a4c64e5aa89b12b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          public void testForTryCatchStatement()", "signatureAfterChange": "          public void testForTryCatchStatement()", "diff": ["-      BracedBody emptyBody = new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]);", "-      Block b = new Block(JExprParser.NO_SOURCE_INFO, emptyBody);", "+      BracedBody emptyBody = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]);", "+      Block b = new Block(SourceInfo.NO_INFO, emptyBody);", "-      NormalTryCatchStatement ntcs = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, b, new CatchBlock[0]);", "-      TryCatchFinallyStatement tcfs = new TryCatchFinallyStatement(JExprParser.NO_SOURCE_INFO, b, new CatchBlock[0], b);", "+      NormalTryCatchStatement ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, b, new CatchBlock[0]);", "+      TryCatchFinallyStatement tcfs = new TryCatchFinallyStatement(SourceInfo.NO_INFO, b, new CatchBlock[0], b);", "-      BracedBody errorBody = new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {", "-        new ExpressionStatement(JExprParser.NO_SOURCE_INFO, ", "-                                new BitwiseOrExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\")), new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 10)))});", "-      Block errorBlock = new Block(JExprParser.NO_SOURCE_INFO, errorBody);", "+      BracedBody errorBody = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {", "+        new ExpressionStatement(SourceInfo.NO_INFO, ", "+                                new BitwiseOrExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\")), new IntegerLiteral(SourceInfo.NO_INFO, 10)))});", "+      Block errorBlock = new Block(SourceInfo.NO_INFO, errorBody);", "-      ntcs = new NormalTryCatchStatement(JExprParser.NO_SOURCE_INFO, errorBlock, new CatchBlock[0]);", "+      ntcs = new NormalTryCatchStatement(SourceInfo.NO_INFO, errorBlock, new CatchBlock[0]);", "-      UninitializedVariableDeclarator uvd = new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), new Word(JExprParser.NO_SOURCE_INFO, \"i\"));", "-      FormalParameter fp = new FormalParameter(JExprParser.NO_SOURCE_INFO, uvd, false);", "+      UninitializedVariableDeclarator uvd = new UninitializedVariableDeclarator(SourceInfo.NO_INFO, new PrimitiveType(SourceInfo.NO_INFO, \"int\"), new Word(SourceInfo.NO_INFO, \"i\"));", "+      FormalParameter fp = new FormalParameter(SourceInfo.NO_INFO, uvd, false);", "-      tcfs = new TryCatchFinallyStatement(JExprParser.NO_SOURCE_INFO, b, new CatchBlock[] {", "-        new CatchBlock(JExprParser.NO_SOURCE_INFO, fp, errorBlock)}, b);", "+      tcfs = new TryCatchFinallyStatement(SourceInfo.NO_INFO, b, new CatchBlock[] {", "+        new CatchBlock(SourceInfo.NO_INFO, fp, errorBlock)}, b);"]}], "num": 20086}