{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41c485e19cb0c5e795019d355f35b850", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cb1189ac50a992ad826863cc4af0d46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "e69ba1eec2cb635c70a9fe0a1398fd66d2a7ddb9", "commitAfterChange": "521b5a6ad4ead519c4e7d942bbf2dde99a3dae4b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 34, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["+      final boolean docChanged = ! matchDoc.equals(openDoc);", "-         if (! matchDoc.equals(openDoc)) _model.setActiveDocument(matchDoc);  // set active doc if matchDoc != openDoc", "+         if (docChanged) _model.setActiveDocument(matchDoc);  // set active doc if matchDoc != openDoc", "-        // defer executing this code until after active document switch (if any) is complete", "-        SwingUtilities.invokeLater(new Runnable() {", "+        final Runnable command = new Runnable() {", "-          }});", "+          } };", "+        ", "+        if (docChanged)", "+          // defer executing this code until after active document switch is complete", "+          SwingUtilities.invokeLater(command);", "+        else command.run();", "-    if (!DrJava.getConfig().getSetting(OptionConstants.FIND_REPLACE_FOCUS_IN_DEFPANE).booleanValue()) {", "+    if (! DrJava.getConfig().getSetting(OptionConstants.FIND_REPLACE_FOCUS_IN_DEFPANE).booleanValue()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70a5c0c7ed125e2fec961dfca23ec2b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "63c14fb4387b2322a54bec21270f907efc3bbeb5", "commitAfterChange": "abcd28f90aa707a487bed59497ff45149a089bc9", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "   void initGotoFileDialog()", "signatureAfterChange": "   void initGotoFileDialog()", "diff": ["+            final int curLine = _model.getActiveDocument().getCurrentLine();", "+            String t = p.getText();", "+            System.out.println(\"Goto file: \"+t);", "+            if (t.lastIndexOf(':')>=0) {", "+              try {", "+                String end = t.substring(t.lastIndexOf(':')+1);", "+                final int lineNum = Integer.parseInt(end);", "+                System.out.println(\"Goto line: \"+lineNum);", "+                SwingUtilities.invokeLater(new Runnable() {", "+                  public void run() {", "+                    try {", "+                      _jumpToLine(lineNum);", "+                    }", "+                    catch (RuntimeException e) { _jumpToLine(curLine); }", "+                  }", "+                });", "+              }", "+              catch(RuntimeException e) { /* ignore */ }", "+            }", "-      strategies.add(new PredictiveInputModel.FragmentStrategy<GoToFileListEntry>());", "-      strategies.add(new PredictiveInputModel.PrefixStrategy<GoToFileListEntry>());", "-      strategies.add(new PredictiveInputModel.RegExStrategy<GoToFileListEntry>());", "+      strategies.add(new PredictiveInputModel.FragmentLineNumStrategy<GoToFileListEntry>());", "+      strategies.add(new PredictiveInputModel.PrefixLineNumStrategy<GoToFileListEntry>());", "+      strategies.add(new PredictiveInputModel.RegExLineNumStrategy<GoToFileListEntry>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5b60a8cc0601947cb3990ad7db7ac07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7c4507413beb0e75cdce1379ffec8d0279bed992", "commitAfterChange": "d1bf0f940bc3d914d8d8293a0e85760984d7b371", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 97, "signatureBeforeChange": "   void _gotoFileUnderCursor()", "signatureAfterChange": "   void _gotoFileUnderCursor()", "diff": ["-      if (pim.getCurrentItem() != null) _model.setActiveDocument(pim.getCurrentItem().doc);", "+      if (pim.getCurrentItem() != null) {", "+        boolean docChanged = !pim.getCurrentItem().doc.equals(_model.getActiveDocument());", "+        if (docChanged) {", "+          addToBrowserHistory();", "+        }", "+        _model.setActiveDocument(pim.getCurrentItem().doc);", "+        if (docChanged) {", "+          // defer executing this code until after active document switch (if any) is complete", "+          SwingUtilities.invokeLater(new Runnable() {", "+            public void run() {", "+              addToBrowserHistory();", "+            }", "+          });", "+        }", "+      }", "-        if (pim.getCurrentItem() != null) _model.setActiveDocument(pim.getCurrentItem().doc);", "+        if (pim.getCurrentItem() != null) {", "+          boolean docChanged = !pim.getCurrentItem().doc.equals(_model.getActiveDocument());", "+          if (docChanged) {", "+            addToBrowserHistory();", "+          }", "+          _model.setActiveDocument(pim.getCurrentItem().doc);", "+          if (docChanged) {", "+            // defer executing this code until after active document switch (if any) is complete", "+            SwingUtilities.invokeLater(new Runnable() {", "+              public void run() {", "+                addToBrowserHistory();", "+              }", "+            });", "+          }", "+        }"]}], "num": 19767}