{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e83c44749dddf3e9cc57c7270d552df", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b05860d390d90209a4d3b24946ecdbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testLocalVariableDeclarationList() throws ParseException", "signatureAfterChange": "      public void testLocalVariableDeclarationList() throws ParseException", "diff": ["-    VariableDeclaration iVD = new VariableDeclaration(false, new IntTypeName(), \"i\", new IntegerLiteral(\"0\"));", "-    VariableDeclaration jVD = new VariableDeclaration(false, new IntTypeName(), \"j\", null);", "-    VariableDeclaration kVD = new VariableDeclaration(false, new IntTypeName(), \"k\", new IntegerLiteral(\"2\"));", "+    VariableDeclaration iVD = new VariableDeclaration(ModifierSet.make(),", "+                                                      new IntTypeName(), \"i\", new IntegerLiteral(\"0\"));", "+    VariableDeclaration jVD = new VariableDeclaration(ModifierSet.make(),", "+                                                      new IntTypeName(), \"j\", null);", "+    VariableDeclaration kVD = new VariableDeclaration(ModifierSet.make(),", "+                                                      new IntTypeName(), \"k\", new IntegerLiteral(\"2\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6255053216603ab7d96e733404acd8f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EnumDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "    static List<Node> HandleConstructors(String name, List<Node> body)", "signatureAfterChange": "    static List<Node> HandleConstructors(String name, List<Node> body)", "diff": ["-    addToConsDeclaration.add(new FormalParameter(false, new ReferenceTypeName(\"String\"), \"$1\"));", "-    addToConsDeclaration.add(new FormalParameter(false, new IntTypeName(),               \"$2\"));", "+    addToConsDeclaration.add(new FormalParameter(ModifierSet.make(), new ReferenceTypeName(\"String\"), \"$1\"));", "+    addToConsDeclaration.add(new FormalParameter(ModifierSet.make(), new IntTypeName(),               \"$2\"));", "-      body.add(new ConstructorDeclaration(Modifier.PRIVATE, name, addToConsDeclaration,", "+      body.add(new ConstructorDeclaration(ModifierSet.make(PRIVATE), name, addToConsDeclaration,"]}], "num": 12003}