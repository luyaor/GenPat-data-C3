{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4273cf8156ca7f7a7f82bc84f3d8760", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "772e12d863555382abb54b995c6cab18", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelConverter.java", "commitBeforeChange": "e1389ddb9dcb8a7d3a230cc1be322481e1c8fd6a", "commitAfterChange": "77b08b2c2aecee48e010895d99d03539a1aa19da", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "signatureAfterChange": "   public Pair<LinkedList<JExprParseException>, LinkedList<Pair<String, JExpressionIF>>>     convert(File[] files, Options options, Map<File,Set<String>> sourceToTopLevelClassMap)", "diff": ["+        if (filesNotToCheck.contains(f)) continue;  // Detects equal files; earlier code versions claimed it failed", "+        // Check for a null file", "-        if (firstLine == null) continue;", "+        if (firstLine == null) continue;", "-        /* If the file has the correct suffix, then parse it. Ignore files in filesNotToCheck.  contains on ", "-         * filesNotToCheck failed to return desired result. So it is done manually, matching AbsolutePath. */", "-//        boolean foundFile = false;", "-        ", "-        for (File fntc: files) {", "-          if (fntc.getAbsolutePath().equals(f.getAbsolutePath())) {", "-//            foundFile = true;", "-            break;", "-          }", "-        }", "-        ", "-        if (_isLanguageLevelFile(f) /* && ! foundFile*/) {", "+        if (_isLanguageLevelFile(f)) {", "-//          File f = files[ind];", "-          //Now create a LanguageLevelVisitor to do the first pass over the file.", "+          // Now create a LanguageLevelVisitor to do the first pass over the file."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6aa30f64ef9da7ae65c87bac2bda574", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b128df4fa9d8df79a76ba9e19a170c160365e646", "commitAfterChange": "e16fd9dc1aa815e303a7aa80be407f3a031e237d", "methodNumberBeforeChange": 394, "methodNumberAfterChange": 433, "signatureBeforeChange": "     public void removeFindResultsManager(RegionManager<MovingDocumentRegion> rm)", "signatureAfterChange": "     public void removeFindResultsManager(RegionManager<MovingDocumentRegion> rm)", "diff": ["-      * @param rm the global model's region manager. */", "-    public void removeFindResultsManager(RegionManager<MovingDocumentRegion> rm) {", "-      for (SubsetRegionManager<MovingDocumentRegion> ssrm: _findResultsManagers) {", "-        if (ssrm.getSuperSetManager().equals(rm)) {", "-          _findResultsManagers.remove(ssrm);", "-          break;", "-        }", "-      }", "-    }", "+      * @param rm the global model's region manager. */", "+    public void removeFindResultsManager(RegionManager<MovingDocumentRegion> rm) { _findResultsManagers.remove(rm); }"]}], "num": 18016}