{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "966b27252d96a29f7c652978ceedf6af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6489cd9a89a748db7a90b404e7daba0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TigerTest.java", "commitBeforeChange": "dbdd53c636f6618ffbae999ad0ee607bc3e2b6a3", "commitAfterChange": "689d9f23e5437e0982e3819c2bbd111dd456dac2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testStaticImportOfStaticInnerClass()", "signatureAfterChange": "      public void testStaticImportOfStaticInnerClass()", "diff": ["+    //Tests that a non-static inner class cannot be imported", "+    testString =", "+      \"package T;\\n\"+", "+      \"public class U {\\n\"+", "+      \"  public class V { }\\n\"+", "+      \"}\\n\"+", "+      \"package W;\\n\"+", "+      \"import static T.U.*;\\n\"+", "+      \"V v = new V();\";", "+    try {", "+      interpret(testString);", "+      fail(\"Non static member should not be imported\");", "+    } ", "+    catch(InterpreterException e) {", "+      //Expected to fail", "+    }", "+    ", "+    //Tests that a non-static inner class cannot be imported", "+    testString =", "+      \"package X;\\n\"+", "+      \"public class Y {\\n\"+", "+      \"  public class Z { \\n\"+", "+      \"    public static int m() { return 5; }\\n\"+", "+      \"  }\\n\"+", "+      \"}\\n\"+", "+      \"package AA;\\n\"+", "+      \"import static X.Y.Z;\\n\"+", "+      \"Z.m()\";", "+    try {", "+      assertEquals(5,interpret(testString));", "+      fail(\"Non static member should not be imported\");", "+    } ", "+    catch(RuntimeException e) {", "+      //Expected to fail", "+    }", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef425464d708f7c836551511ce207fd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TigerTest.java", "commitBeforeChange": "dbdd53c636f6618ffbae999ad0ee607bc3e2b6a3", "commitAfterChange": "689d9f23e5437e0982e3819c2bbd111dd456dac2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testStaticImportOfFields()", "signatureAfterChange": "   public void testStaticImportOfFields()", "diff": ["+    ", "+    //Tests that a non-static field cannot be imported", "+    testString =", "+      \"package N;\\n\"+", "+      \"public class O {\\n\"+", "+      \"  public int field = 5;\\n\"+", "+      \"}\\n\"+", "+      \"package P;\\n\"+", "+      \"import static N.O.*;\\n\"+", "+      \"public class Q {\\n\"+", "+      \"  public int m() { return field; } \\n\"+", "+      \"}\\n\"+", "+      \"Q q = new Q(); q.m();\";", "+    try {", "+      assertEquals(5,interpret(testString));", "+      fail(\"Non static member should not be imported\");", "+    } ", "+    catch(InterpreterException e) {", "+      //Expected to fail", "+    }", "+    ", "+    //Tests that a non-static field cannot be imported", "+    testString =", "+      \"package R;\\n\"+", "+      \"public class S {\\n\"+", "+      \"  public int field = 5;\\n\"+", "+      \"}\\n\"+", "+      \"package T;\\n\"+", "+      \"import static R.S.field;\\n\";", "+    try {", "+      interpret(testString);", "+      fail(\"Non static member should not be imported\");", "+    } ", "+    catch(RuntimeException e) {", "+      //Expected to fail", "+    }"]}], "num": 17349}