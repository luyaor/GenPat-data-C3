{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec2ec981dcd9978557358386bfe5bb17", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02ede380af8f8d2713d071132dc348a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic void testIndentInfoBlockComments ()", "signatureAfterChange": "      public void testIndentInfoBlockComments () throws BadLocationException", "diff": ["-\t", "-\tpublic void testIndentInfoBlockComments () {", "-\t\ttry {", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"(\\n /*\\n*\\n\", null);", "-\t\t\t// (\\n/*\\n*#\\n", "-\t\t\trm.move(-1);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openParen, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 7, ii.distToBrace);", "-\t\t\tassertEquals(\"1.2\", 1, ii.distToPrevNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}", "+  ", "+  public void testIndentInfoBlockComments () throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"(\\n /*\\n*\\n\", null);", "+    // (\\n/*\\n*#\\n", "+    rm.move(-1);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openParen, ii.braceType);", "+    assertEquals(\"1.1\", -1, ii.distToNewline);", "+    assertEquals(\"1.2\", 7, ii.distToBrace);", "+    assertEquals(\"1.2\", 1, ii.distToPrevNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a8aef5500665b151d247e31e75185a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic void testBlockIndent()", "signatureAfterChange": "    public void testBlockIndent() throws BadLocationException", "diff": ["-\tpublic void testBlockIndent()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hello\\n{\\n{\\n  {\", null);", "-\t\t\t\tdoc.indentBlock(8, 13);", "-\t\t\t\tassertEquals(\"0.1\", \"hello\\n{\\n  {\\n    {\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testBlockIndent() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hello\\n{\\n{\\n  {\", null);", "+      doc.indentBlock(8, 13);", "+      assertEquals(\"0.1\", \"hello\\n{\\n  {\\n    {\", doc.getText(0, doc.getLength()));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07a2565bcc32290d987584246e5b4abd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \t \tpublic void testStartSpaceIndent ()", "signatureAfterChange": "         public void testStartSpaceIndent () throws BadLocationException", "diff": ["-\t", "-\tpublic void testStartSpaceIndent () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"  abcde\", null);", "-\t\t\tdoc.indentLine(); ", "-\t\t\tassertEquals(\"0.1\", \"abcde\", doc.getText(0, doc.getLength()));", "-\t\t} ", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t} ", "+  ", "+  public void testStartSpaceIndent () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"  abcde\", null);", "+    doc.indentLine(); ", "+    assertEquals(\"0.1\", \"abcde\", doc.getText(0, doc.getLength()));", "+  } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07b0f59d68166ab172e16a5399a26040", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   \t\tpublic void testNextCharIsNewline()", "signatureAfterChange": "       public void testNextCharIsNewline() throws BadLocationException", "diff": ["-\t\tpublic void testNextCharIsNewline()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hes{\\n{abcde\", null);", "-\t\t\t\tdoc.insertString(11,\"\\n{\",null);", "-\t\t\t\t// hes{\\n{abcde\\n{#", "-\t\t\t\tdoc.move(-2);", "-\t\t\t\t// hes{\\n{abcde#\\n{", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\t// hes{\\n  {abcde#\\n{", "-\t\t\t\tassertEquals(\"0.1\", \"hes{\\n  {abcde\\n{\", doc.getText(0, doc.getLength()));", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+    public void testNextCharIsNewline() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hes{\\n{abcde\", null);", "+      doc.insertString(11,\"\\n{\",null);", "+      // hes{\\n{abcde\\n{#", "+      doc.move(-2);", "+      // hes{\\n{abcde#\\n{", "+      doc.indentLine();", "+      // hes{\\n  {abcde#\\n{", "+      assertEquals(\"0.1\", \"hes{\\n  {abcde\\n{\", doc.getText(0, doc.getLength()));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07d26a932aa2d51bbd7cbe7d49fee21a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic void testIndentInfoBlockComments3 ()", "signatureAfterChange": "      public void testIndentInfoBlockComments3 () throws BadLocationException", "diff": ["-\t", "-\tpublic void testIndentInfoBlockComments3 () {", "-\t\ttry {", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"{\\n  /*\\n*\\n\", null);", "-\t\t\t// (\\n/*\\n*#\\n", "-\t\t\trm.move(-1);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 8, ii.distToBrace);", "-\t\t\tassertEquals(\"1.2\", 1, ii.distToPrevNewline);", "-\t\t} ", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}", "+  ", "+  public void testIndentInfoBlockComments3 () throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"{\\n  /*\\n*\\n\", null);", "+    // (\\n/*\\n*#\\n", "+    rm.move(-1);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.1\", -1, ii.distToNewline);", "+    assertEquals(\"1.2\", 8, ii.distToBrace);", "+    assertEquals(\"1.2\", 1, ii.distToPrevNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c16233497278258d8d4b68a03881627", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  \tpublic void testFor2()", "signatureAfterChange": "    public void testFor2() throws BadLocationException", "diff": ["-\tpublic void testFor2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"{\\n  for(;;)\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"{\\n  for(;;)\\n    \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testFor2() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"{\\n  for(;;)\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"{\\n  for(;;)\\n    \", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e70d076a269eafebaf40b5b2d638ace", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void testIndentInfoPrevNewline ()", "signatureAfterChange": "    public void testIndentInfoPrevNewline () throws BadLocationException", "diff": ["+  public void testIndentInfoPrevNewline () throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"{\\n  {\\nhello\", null);", "+    // {\\n  {\\nhello#", "-\tpublic void testIndentInfoPrevNewline () {", "-\t\ttry {", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"{\\n  {\\nhello\", null);", "-\t\t\t// {\\n  {\\nhello#", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.1\", 9, ii.distToNewline);", "+    assertEquals(\"1.2\", 7, ii.distToBrace);", "+    assertEquals(\"1.2\", 5, ii.distToPrevNewline);", "+  }", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", 9, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 7, ii.distToBrace);", "-\t\t\tassertEquals(\"1.2\", 5, ii.distToPrevNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "183a050d1b091f8567585485fc229bce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void testIndentInfoPrevNewline ()", "signatureAfterChange": "    public void testIndentInfoPrevNewline () throws BadLocationException", "diff": ["+  public void testIndentInfoPrevNewline () throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"{\\n  {\\nhello\", null);", "+    // {\\n  {\\nhello#", "-\tpublic void testIndentInfoPrevNewline () {", "-\t\ttry {", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"{\\n  {\\nhello\", null);", "-\t\t\t// {\\n  {\\nhello#", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.1\", 9, ii.distToNewline);", "+    assertEquals(\"1.2\", 7, ii.distToBrace);", "+    assertEquals(\"1.2\", 5, ii.distToPrevNewline);", "+  }", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", 9, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 7, ii.distToBrace);", "-\t\t\tassertEquals(\"1.2\", 5, ii.distToPrevNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a8956da270834df96a6ae36bba0b7a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   \tpublic void testMotion()", "signatureAfterChange": "     public void testMotion() throws BadLocationException", "diff": ["-\tpublic void testMotion()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hes{\\n{abcde\", null);", "-\t\t\t\tdoc.insertString(11,\"\\n{\",null);", "-\t\t\t\t// hes{\\n{abcde\\n{#", "-\t\t\t\tdoc.move(-8);", "-\t\t\t\t// hes{\\n#{abcde\\n{", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\t// hes{\\n  #{abcde\\n{", "-\t\t\t\tassertEquals(\"0.1\", \"hes{\\n  {abcde\\n{\", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t} ", "+  public void testMotion() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hes{\\n{abcde\", null);", "+      doc.insertString(11,\"\\n{\",null);", "+      // hes{\\n{abcde\\n{#", "+      doc.move(-8);", "+      // hes{\\n#{abcde\\n{", "+      doc.indentLine();", "+      // hes{\\n  #{abcde\\n{", "+      assertEquals(\"0.1\", \"hes{\\n  {abcde\\n{\", doc.getText(0, doc.getLength()));      ", "+    } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1edb5ce0ad80b9b061eb7ade2e57b8b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tpublic void testSkippingComments ()", "signatureAfterChange": "      public void testSkippingComments () throws BadLocationException", "diff": ["-\t", "-\tpublic void testSkippingComments () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n{\\n   //{ ()\\n}\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.2\", 13, ii.distToBrace);", "-\t\t\tassertEquals(\"1.1\", 13, ii.distToNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  ", "+  public void testSkippingComments () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n   //{ ()\\n}\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.2\", 13, ii.distToBrace);", "+    assertEquals(\"1.1\", 13, ii.distToNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f9880b683f0ae0efdd22ee06dc3bd0b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tpublic void testWierd()", "signatureAfterChange": "    public void testWierd() throws BadLocationException", "diff": ["-\tpublic void testWierd()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hello\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"hello\\n  \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testWierd() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hello\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"hello\\n  \", doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fe368a43ca0c888a494260faad02260", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testIndentInfoParen ()", "signatureAfterChange": "    public void testIndentInfoParen () throws BadLocationException", "diff": ["-\tpublic void testIndentInfoParen () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n(\\n\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openParen, ii.braceType);", "-\t\t\tassertEquals(\"1.2\", 2, ii.distToBrace);", "-\t\t\tassertEquals(\"1.1\", 2, ii.distToNewline);", "-\t\t\tassertEquals(\"1.3\", 0, ii.distToPrevNewline);", "+  public void testIndentInfoParen () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n(\\n\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openParen, ii.braceType);", "+    assertEquals(\"1.2\", 2, ii.distToBrace);", "+    assertEquals(\"1.1\", 2, ii.distToNewline);", "+    assertEquals(\"1.3\", 0, ii.distToPrevNewline);", "-\t\t\t// paren with stuff in front", "-\t\t\tdoc.insertString(1, \"  helo \", null);", "-\t\t\tdoc.move(2);", "-\t\t\t// \\n  helo (\\n#", "-\t\t\tassertEquals(\"0.1\", \"\\n  helo (\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"2.0\", openParen, ii.braceType);", "-\t\t\tassertEquals(\"2.1\", 9, ii.distToNewline);", "-\t\t\tassertEquals(\"2.2\", 2, ii.distToBrace);", "+    // paren with stuff in front", "+    doc.insertString(1, \"  helo \", null);", "+    doc.move(2);", "+    // \\n  helo (\\n#", "+    assertEquals(\"0.1\", \"\\n  helo (\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"2.0\", openParen, ii.braceType);", "+    assertEquals(\"2.1\", 9, ii.distToNewline);", "+    assertEquals(\"2.2\", 2, ii.distToBrace);", "-\t\t\t//single layer brace", "-\t\t\tdoc.move(-1);", "-\t\t\tdoc.insertString(9, \" (\", null);", "-\t\t\tdoc.move(1);", "-\t\t\t// \\n  helo ( (\\n#", "-\t\t\tassertEquals(\"0.2\", \"\\n  helo ( (\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"3.0\", openParen, ii.braceType);", "-\t\t\tassertEquals(\"3.1\", 11, ii.distToNewline);", "-\t\t\tassertEquals(\"3.2\", 2, ii.distToBrace);", "+    //single layer brace", "+    doc.move(-1);", "+    doc.insertString(9, \" (\", null);", "+    doc.move(1);", "+    // \\n  helo ( (\\n#", "+    assertEquals(\"0.2\", \"\\n  helo ( (\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"3.0\", openParen, ii.braceType);", "+    assertEquals(\"3.1\", 11, ii.distToNewline);", "+    assertEquals(\"3.2\", 2, ii.distToBrace);", "+  }", "-\t\t} ", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20140d261c7abbbca32427c02f6da0f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void testIndentInfoSquiggly ()", "signatureAfterChange": "    public void testIndentInfoSquiggly () throws BadLocationException", "diff": ["-\tpublic void testIndentInfoSquiggly () {", "-\t\ttry {", "-\t\t\t//empty document", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", noBrace, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", -1, ii.distToBrace);", "-\t\t\tassertEquals(\"1.3\", -1, ii.distToPrevNewline);", "+  public void testIndentInfoSquiggly () throws BadLocationException {", "+    //empty document", "+    BraceReduction rm = doc._reduced;", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", noBrace, ii.braceType);", "+    assertEquals(\"1.1\", -1, ii.distToNewline);", "+    assertEquals(\"1.2\", -1, ii.distToBrace);", "+    assertEquals(\"1.3\", -1, ii.distToPrevNewline);", "-\t\t\t//single newline", "-\t\t\tdoc.insertString(0, \"\\n\", null);", "-\t\t\tassertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"2.0\", noBrace, ii.braceType);", "-\t\t\tassertEquals(\"2.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"2.2\", -1, ii.distToBrace);", "-\t\t\tassertEquals(\"2.3\", 0, ii.distToPrevNewline);", "+    //single newline", "+    doc.insertString(0, \"\\n\", null);", "+    assertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"2.0\", noBrace, ii.braceType);", "+    assertEquals(\"2.1\", -1, ii.distToNewline);", "+    assertEquals(\"2.2\", -1, ii.distToBrace);", "+    assertEquals(\"2.3\", 0, ii.distToPrevNewline);", "-\t\t\t//single layer brace", "-\t\t\tdoc.insertString(0, \"{\\n\\n\", null);", "-\t\t\t// {\\n\\n#\\n", "-\t\t\tassertEquals(\"0.2\", \"{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"3.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"3.2\", 3, ii.distToBrace);", "-\t\t\tassertEquals(\"3.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"3.3\", 0, ii.distToPrevNewline);", "-\t\t\t", "+    //single layer brace", "+    doc.insertString(0, \"{\\n\\n\", null);", "+    // {\\n\\n#\\n", "+    assertEquals(\"0.2\", \"{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"3.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"3.2\", 3, ii.distToBrace);", "+    assertEquals(\"3.1\", -1, ii.distToNewline);", "+    assertEquals(\"3.3\", 0, ii.distToPrevNewline);", "+    ", "-\t\t\t//another squiggly", "-\t\t\tdoc.insertString(3, \"{\\n\\n\", null);", "-\t\t\t// {\\n\\n{\\n\\n#\\n", "-\t\t\tassertEquals(\"0.3\", \"{\\n\\n{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"4.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"4.1\", 3, ii.distToNewline);", "-\t\t\tassertEquals(\"4.2\", 3, ii.distToBrace);", "-\t\t\tassertEquals(\"4.3\", 0, ii.distToPrevNewline);", "+    //another squiggly", "+    doc.insertString(3, \"{\\n\\n\", null);", "+    // {\\n\\n{\\n\\n#\\n", "+    assertEquals(\"0.3\", \"{\\n\\n{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"4.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"4.1\", 3, ii.distToNewline);", "+    assertEquals(\"4.2\", 3, ii.distToBrace);", "+    assertEquals(\"4.3\", 0, ii.distToPrevNewline);", "-\t\t\t//brace with whitespace", "-\t\t\tdoc.insertString(6, \"  {\\n\\n\", null);", "-\t\t\t// {\\n\\n{\\n\\n  {\\n\\n#\\n", "-\t\t\tassertEquals(\"0.4\", \"{\\n\\n{\\n\\n  {\\n\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"5.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"5.1\", 5, ii.distToNewline);", "-\t\t\tassertEquals(\"5.2\", 3, ii.distToBrace);", "-\t\t\tassertEquals(\"5.3\", 0, ii.distToPrevNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}", "+    //brace with whitespace", "+    doc.insertString(6, \"  {\\n\\n\", null);", "+    // {\\n\\n{\\n\\n  {\\n\\n#\\n", "+    assertEquals(\"0.4\", \"{\\n\\n{\\n\\n  {\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"5.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"5.1\", 5, ii.distToNewline);", "+    assertEquals(\"5.2\", 3, ii.distToBrace);", "+    assertEquals(\"5.3\", 0, ii.distToPrevNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2085dc3f1cd011a5513f12f06edb2aa3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   \t\tpublic void testNextCharIsNewline()", "signatureAfterChange": "       public void testNextCharIsNewline() throws BadLocationException", "diff": ["-\t\tpublic void testNextCharIsNewline()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hes{\\n{abcde\", null);", "-\t\t\t\tdoc.insertString(11,\"\\n{\",null);", "-\t\t\t\t// hes{\\n{abcde\\n{#", "-\t\t\t\tdoc.move(-2);", "-\t\t\t\t// hes{\\n{abcde#\\n{", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\t// hes{\\n  {abcde#\\n{", "-\t\t\t\tassertEquals(\"0.1\", \"hes{\\n  {abcde\\n{\", doc.getText(0, doc.getLength()));", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+    public void testNextCharIsNewline() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hes{\\n{abcde\", null);", "+      doc.insertString(11,\"\\n{\",null);", "+      // hes{\\n{abcde\\n{#", "+      doc.move(-2);", "+      // hes{\\n{abcde#\\n{", "+      doc.indentLine();", "+      // hes{\\n  {abcde#\\n{", "+      assertEquals(\"0.1\", \"hes{\\n  {abcde\\n{\", doc.getText(0, doc.getLength()));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2469c66be53a2fe6b2de3b83134eb0de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void testNothingToIndentOn ()", "signatureAfterChange": "    public void testNothingToIndentOn () throws BadLocationException", "diff": ["-\tpublic void testNothingToIndentOn () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"   //{ ()}{\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", noBrace, ii.braceType);", "-\t\t\tassertEquals(\"1.2\", -1, ii.distToBrace);", "-\t\t\tassertEquals(\"1.1\", -1, ii.distToNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  public void testNothingToIndentOn () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"   //{ ()}{\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", noBrace, ii.braceType);", "+    assertEquals(\"1.2\", -1, ii.distToBrace);", "+    assertEquals(\"1.1\", -1, ii.distToNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "260508dce793641884b0876cc1dfdb89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void testNothingToIndentOn ()", "signatureAfterChange": "    public void testNothingToIndentOn () throws BadLocationException", "diff": ["-\tpublic void testNothingToIndentOn () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"   //{ ()}{\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", noBrace, ii.braceType);", "-\t\t\tassertEquals(\"1.2\", -1, ii.distToBrace);", "-\t\t\tassertEquals(\"1.1\", -1, ii.distToNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  public void testNothingToIndentOn () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"   //{ ()}{\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", noBrace, ii.braceType);", "+    assertEquals(\"1.2\", -1, ii.distToBrace);", "+    assertEquals(\"1.1\", -1, ii.distToNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29d6cc609e24fdcecd73ee0598769846", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  \t\tpublic void testEnter()", "signatureAfterChange": "      public void testEnter() throws BadLocationException", "diff": ["-\t\tpublic void testEnter()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n\\n\", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+    public void testEnter() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"\\n\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"\\n\\n\", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a7f97e7755c7c1c42ab9f49b6fc8c06", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void testAfterBlockComment4()", "signatureAfterChange": "    public void testAfterBlockComment4() throws BadLocationException", "diff": ["-\tpublic void testAfterBlockComment4()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n{\\n  hello;\\n /*\\n  hello\\n */ hello\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n{\\n  hello;\\n /*\\n  hello\\n  */ hello\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}", "+  public void testAfterBlockComment4() throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  hello;\\n /*\\n  hello\\n */ hello\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n{\\n  hello;\\n /*\\n  hello\\n  */ hello\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ede0a8986f77eacfd523264cae8b534", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void testEndOfBlockComment()", "signatureAfterChange": "    public void testEndOfBlockComment() throws BadLocationException", "diff": ["+  public void testEndOfBlockComment() throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  hello;\\n /*\\n hello\\n */\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n{\\n  hello;\\n /*\\n hello\\n  */\", doc.getText(0, doc.getLength()));", "+  }", "-\tpublic void testEndOfBlockComment()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n{\\n  hello;\\n /*\\n hello\\n */\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n{\\n  hello;\\n /*\\n hello\\n  */\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "304537189c6856118a3fd17a5552d533", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic void testIndentInfoBlockComments ()", "signatureAfterChange": "      public void testIndentInfoBlockComments () throws BadLocationException", "diff": ["-\t", "-\tpublic void testIndentInfoBlockComments () {", "-\t\ttry {", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"(\\n /*\\n*\\n\", null);", "-\t\t\t// (\\n/*\\n*#\\n", "-\t\t\trm.move(-1);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openParen, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 7, ii.distToBrace);", "-\t\t\tassertEquals(\"1.2\", 1, ii.distToPrevNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}", "+  ", "+  public void testIndentInfoBlockComments () throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"(\\n /*\\n*\\n\", null);", "+    // (\\n/*\\n*#\\n", "+    rm.move(-1);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openParen, ii.braceType);", "+    assertEquals(\"1.1\", -1, ii.distToNewline);", "+    assertEquals(\"1.2\", 7, ii.distToBrace);", "+    assertEquals(\"1.2\", 1, ii.distToPrevNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3165e8dcf52434577ec855a982ddab0b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic void testIndentInfoBlockComments2 ()", "signatureAfterChange": "      public void testIndentInfoBlockComments2 () throws BadLocationException", "diff": ["-\t", "-\tpublic void testIndentInfoBlockComments2 () {", "-\t\ttry {", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n(\\n /*\\n*\\n\", null);", "-\t\t\t// \\n(\\n/*\\n*#\\n", "-\t\t\trm.move(-1);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openParen, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", 7, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 7, ii.distToBrace);", "-\t\t\tassertEquals(\"1.2\", 1, ii.distToPrevNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}", "+  ", "+  public void testIndentInfoBlockComments2 () throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n(\\n /*\\n*\\n\", null);", "+    // \\n(\\n/*\\n*#\\n", "+    rm.move(-1);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openParen, ii.braceType);", "+    assertEquals(\"1.1\", 7, ii.distToNewline);", "+    assertEquals(\"1.2\", 7, ii.distToBrace);", "+    assertEquals(\"1.2\", 1, ii.distToPrevNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38995d9c32152699b55cf5f1976b0996", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \t\tpublic void testEndBrace ()", "signatureAfterChange": "    public void testEndBrace () throws BadLocationException", "diff": ["-\t\tpublic void testEndBrace () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"public class temp \\n{ \\n  }\", null);", "-\t\t\tdoc.indentLine();", "-\t\t\tassertEquals(\"0.1\", \"public class temp \\n{ \\n}\",", "-\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  public void testEndBrace () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"public class temp \\n{ \\n  }\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"public class temp \\n{ \\n}\",", "+                 doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c4dfc219aeb7c7897b0813a308c8a22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void testOpenSquigglyCascade2()", "signatureAfterChange": "    public void testOpenSquigglyCascade2() throws BadLocationException", "diff": ["-\t\t}", "-\tpublic void testOpenSquigglyCascade2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"{\\n  if\\n    if\\n      if\\n{\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"{\\n  if\\n    if\\n      if\\n      {\",", "-\t\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testOpenSquigglyCascade2() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"{\\n  if\\n    if\\n      if\\n{\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"{\\n  if\\n    if\\n      if\\n      {\",", "+                   doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dc91932401333f1b61eb4183e7fd4e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic void testInsideClass ()", "signatureAfterChange": "    public void testInsideClass () throws BadLocationException", "diff": ["-\tpublic void testInsideClass () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"public class temp \\n{ \\ntext here\", null);", "-\t\t\tdoc.indentLine();", "-\t\t\tassertEquals(\"0.1\", \"public class temp \\n{ \\n  text here\",", "-\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  public void testInsideClass () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"public class temp \\n{ \\ntext here\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"public class temp \\n{ \\n  text here\",", "+                 doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ee31f931ae0e35ef21b37f7e815545e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic void testIndentInfoBlockComments3 ()", "signatureAfterChange": "      public void testIndentInfoBlockComments3 () throws BadLocationException", "diff": ["-\t", "-\tpublic void testIndentInfoBlockComments3 () {", "-\t\ttry {", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"{\\n  /*\\n*\\n\", null);", "-\t\t\t// (\\n/*\\n*#\\n", "-\t\t\trm.move(-1);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 8, ii.distToBrace);", "-\t\t\tassertEquals(\"1.2\", 1, ii.distToPrevNewline);", "-\t\t} ", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}", "+  ", "+  public void testIndentInfoBlockComments3 () throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"{\\n  /*\\n*\\n\", null);", "+    // (\\n/*\\n*#\\n", "+    rm.move(-1);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.1\", -1, ii.distToNewline);", "+    assertEquals(\"1.2\", 8, ii.distToBrace);", "+    assertEquals(\"1.2\", 1, ii.distToPrevNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f45192fa6c5c546a872ca1935150bd7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  \tpublic void testOpenSquigglyCascade()", "signatureAfterChange": "    public void testOpenSquigglyCascade() throws BadLocationException", "diff": ["-\tpublic void testOpenSquigglyCascade()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"if\\n  if\\n    if\\n{\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"if\\n  if\\n    if\\n    {\",", "-\t\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testOpenSquigglyCascade() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"if\\n  if\\n    if\\n{\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"if\\n  if\\n    if\\n    {\",", "+                   doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49ea131d2cb4dfc7f7065ff5a9f67185", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \t\tpublic void testEndBrace ()", "signatureAfterChange": "    public void testEndBrace () throws BadLocationException", "diff": ["-\t\tpublic void testEndBrace () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"public class temp \\n{ \\n  }\", null);", "-\t\t\tdoc.indentLine();", "-\t\t\tassertEquals(\"0.1\", \"public class temp \\n{ \\n}\",", "-\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  public void testEndBrace () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"public class temp \\n{ \\n  }\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"public class temp \\n{ \\n}\",", "+                 doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd91cba49263952790df132ff37caa9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void testAfterBlockComment4()", "signatureAfterChange": "    public void testAfterBlockComment4() throws BadLocationException", "diff": ["-\tpublic void testAfterBlockComment4()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n{\\n  hello;\\n /*\\n  hello\\n */ hello\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n{\\n  hello;\\n /*\\n  hello\\n  */ hello\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}", "+  public void testAfterBlockComment4() throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  hello;\\n /*\\n  hello\\n */ hello\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n{\\n  hello;\\n /*\\n  hello\\n  */ hello\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e32ba9e113991572f89dbf7807941e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void testAfterBlockComment()", "signatureAfterChange": "      public void testAfterBlockComment() throws BadLocationException", "diff": ["+  ", "+  public void testAfterBlockComment() throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */\\nhello\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */\\n  hello\", doc.getText(0, doc.getLength()));", "+  }", "-\t", "-\tpublic void testAfterBlockComment()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */\\nhello\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */\\n  hello\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50be710c16ad5fa87a5cdc5a59214273", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic void testIndentInfoBlockComments2 ()", "signatureAfterChange": "      public void testIndentInfoBlockComments2 () throws BadLocationException", "diff": ["-\t", "-\tpublic void testIndentInfoBlockComments2 () {", "-\t\ttry {", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n(\\n /*\\n*\\n\", null);", "-\t\t\t// \\n(\\n/*\\n*#\\n", "-\t\t\trm.move(-1);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openParen, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", 7, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 7, ii.distToBrace);", "-\t\t\tassertEquals(\"1.2\", 1, ii.distToPrevNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}", "+  ", "+  public void testIndentInfoBlockComments2 () throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n(\\n /*\\n*\\n\", null);", "+    // \\n(\\n/*\\n*#\\n", "+    rm.move(-1);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openParen, ii.braceType);", "+    assertEquals(\"1.1\", 7, ii.distToNewline);", "+    assertEquals(\"1.2\", 7, ii.distToBrace);", "+    assertEquals(\"1.2\", 1, ii.distToPrevNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50d95c485d48edac83240155310624f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void testIndentInfoSquiggly ()", "signatureAfterChange": "    public void testIndentInfoSquiggly () throws BadLocationException", "diff": ["-\tpublic void testIndentInfoSquiggly () {", "-\t\ttry {", "-\t\t\t//empty document", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", noBrace, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", -1, ii.distToBrace);", "-\t\t\tassertEquals(\"1.3\", -1, ii.distToPrevNewline);", "+  public void testIndentInfoSquiggly () throws BadLocationException {", "+    //empty document", "+    BraceReduction rm = doc._reduced;", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", noBrace, ii.braceType);", "+    assertEquals(\"1.1\", -1, ii.distToNewline);", "+    assertEquals(\"1.2\", -1, ii.distToBrace);", "+    assertEquals(\"1.3\", -1, ii.distToPrevNewline);", "-\t\t\t//single newline", "-\t\t\tdoc.insertString(0, \"\\n\", null);", "-\t\t\tassertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"2.0\", noBrace, ii.braceType);", "-\t\t\tassertEquals(\"2.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"2.2\", -1, ii.distToBrace);", "-\t\t\tassertEquals(\"2.3\", 0, ii.distToPrevNewline);", "+    //single newline", "+    doc.insertString(0, \"\\n\", null);", "+    assertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"2.0\", noBrace, ii.braceType);", "+    assertEquals(\"2.1\", -1, ii.distToNewline);", "+    assertEquals(\"2.2\", -1, ii.distToBrace);", "+    assertEquals(\"2.3\", 0, ii.distToPrevNewline);", "-\t\t\t//single layer brace", "-\t\t\tdoc.insertString(0, \"{\\n\\n\", null);", "-\t\t\t// {\\n\\n#\\n", "-\t\t\tassertEquals(\"0.2\", \"{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"3.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"3.2\", 3, ii.distToBrace);", "-\t\t\tassertEquals(\"3.1\", -1, ii.distToNewline);", "-\t\t\tassertEquals(\"3.3\", 0, ii.distToPrevNewline);", "-\t\t\t", "+    //single layer brace", "+    doc.insertString(0, \"{\\n\\n\", null);", "+    // {\\n\\n#\\n", "+    assertEquals(\"0.2\", \"{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"3.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"3.2\", 3, ii.distToBrace);", "+    assertEquals(\"3.1\", -1, ii.distToNewline);", "+    assertEquals(\"3.3\", 0, ii.distToPrevNewline);", "+    ", "-\t\t\t//another squiggly", "-\t\t\tdoc.insertString(3, \"{\\n\\n\", null);", "-\t\t\t// {\\n\\n{\\n\\n#\\n", "-\t\t\tassertEquals(\"0.3\", \"{\\n\\n{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"4.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"4.1\", 3, ii.distToNewline);", "-\t\t\tassertEquals(\"4.2\", 3, ii.distToBrace);", "-\t\t\tassertEquals(\"4.3\", 0, ii.distToPrevNewline);", "+    //another squiggly", "+    doc.insertString(3, \"{\\n\\n\", null);", "+    // {\\n\\n{\\n\\n#\\n", "+    assertEquals(\"0.3\", \"{\\n\\n{\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"4.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"4.1\", 3, ii.distToNewline);", "+    assertEquals(\"4.2\", 3, ii.distToBrace);", "+    assertEquals(\"4.3\", 0, ii.distToPrevNewline);", "-\t\t\t//brace with whitespace", "-\t\t\tdoc.insertString(6, \"  {\\n\\n\", null);", "-\t\t\t// {\\n\\n{\\n\\n  {\\n\\n#\\n", "-\t\t\tassertEquals(\"0.4\", \"{\\n\\n{\\n\\n  {\\n\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"5.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"5.1\", 5, ii.distToNewline);", "-\t\t\tassertEquals(\"5.2\", 3, ii.distToBrace);", "-\t\t\tassertEquals(\"5.3\", 0, ii.distToPrevNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}", "+    //brace with whitespace", "+    doc.insertString(6, \"  {\\n\\n\", null);", "+    // {\\n\\n{\\n\\n  {\\n\\n#\\n", "+    assertEquals(\"0.4\", \"{\\n\\n{\\n\\n  {\\n\\n\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"5.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"5.1\", 5, ii.distToNewline);", "+    assertEquals(\"5.2\", 3, ii.distToBrace);", "+    assertEquals(\"5.3\", 0, ii.distToPrevNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51fee626831ad1039eae9502a9d60b25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \tpublic void testOpenParen()", "signatureAfterChange": "    public void testOpenParen() throws BadLocationException", "diff": ["-\tpublic void testOpenParen()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hello(\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"hello(\\n      \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testOpenParen() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hello(\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"hello(\\n      \", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "520b9c2ac797c915daafb677df2f0f5e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tpublic void testIgnoreBraceOnSameLine ()", "signatureAfterChange": "    public void testIgnoreBraceOnSameLine () throws BadLocationException", "diff": ["-\tpublic void testIgnoreBraceOnSameLine ()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"public class temp \\n{  ()\\n{text here\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"public class temp \\n{  ()\\n  {text here\",", "-\t\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t\t} ", "-\t\t}", "+  public void testIgnoreBraceOnSameLine () throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"public class temp \\n{  ()\\n{text here\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"public class temp \\n{  ()\\n  {text here\",", "+                   doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "532da4bfef80e20d22949ae95dbb03b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": "  \t\tpublic void testSecondLineProblem()", "signatureAfterChange": "    public void testSecondLineProblem() throws BadLocationException", "diff": ["-\t\tpublic void testSecondLineProblem()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+", "+  public void testSecondLineProblem() throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "547a205d95ca9101b45d63816d7d1dc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tpublic void testPrintString()", "signatureAfterChange": "    public void testPrintString() throws BadLocationException", "diff": ["-\tpublic void testPrintString()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"Sys.out(\\\"hello\\\"\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"Sys.out(\\\"hello\\\"\\n        \",", "-\t\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testPrintString() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"Sys.out(\\\"hello\\\"\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"Sys.out(\\\"hello\\\"\\n        \",", "+                   doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54c130650a0ff36e54fb81d476a312df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tpublic void testFor()", "signatureAfterChange": "    public void testFor() throws BadLocationException", "diff": ["-\tpublic void testFor()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"for(;;)\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"for(;;)\\n  \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testFor() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"for(;;)\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"for(;;)\\n  \", doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a2604a3e17cf05dd6e014c6cae40b33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  \tpublic void testNotRecognizeComments()", "signatureAfterChange": "    public void testNotRecognizeComments() throws BadLocationException", "diff": ["-\tpublic void testNotRecognizeComments()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\nhello //bal;\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\nhello //bal;\\n  \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testNotRecognizeComments() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"\\nhello //bal;\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"\\nhello //bal;\\n  \", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b3b490e79717d67b599cca1df21860c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tpublic void testWierd2()", "signatureAfterChange": "    public void testWierd2() throws BadLocationException", "diff": ["-\tpublic void testWierd2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hello\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"hello\", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t} ", "+  public void testWierd2() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hello\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"hello\", doc.getText(0, doc.getLength()));      ", "+    } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b5161e92cc70db8d247e93fc32b6437", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "8a099b753fcfb83be248d39f70edd5788e8b1222", "commitAfterChange": "4701dc92d8eb3da9b7f829b98cf858de261361f6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testDeleteDoc()", "signatureAfterChange": "   public void testDeleteDoc() throws BadLocationException", "diff": ["-  public void testDeleteDoc() {", "-    try {", "-      defModel.insertString(0, \"a/*bc */\", null);", "-      defModel.remove(3, 3);", "-      assertEquals(\"#0.0\", \"a/**/\", defModel.getText(0, 5));", "-      assertEquals(\"#0.1\", 3, defModel._currentLocation);", "-      BraceReduction rm = defModel._reduced;", "-      assertEquals(\"1.0\", \"*/\", rm.currentToken().getType());", "-      // no longer support getBlockOffset", "-      //        assertEquals(\"1.1\",0,rm.getBlockOffset());", "-      rm.move(-2);", "-      assertEquals(\"1.2\", \"/*\", rm.currentToken().getType());", "-      rm.move(2);", "-      assertEquals(\"1.3\", ReducedToken.INSIDE_BLOCK_COMMENT, rm.getStateAtCurrent());", "-    } catch (javax.swing.text.BadLocationException e) {", "-      System.out.println(e.toString());", "-    }", "+  public void testDeleteDoc() throws BadLocationException {", "+    defModel.insertString(0, \"a/*bc */\", null);", "+    defModel.remove(3, 3);", "+    assertEquals(\"#0.0\", \"a/**/\", defModel.getText(0, 5));", "+    assertEquals(\"#0.1\", 3, defModel._currentLocation);", "+    BraceReduction rm = defModel._reduced;", "+    assertEquals(\"1.0\", \"*/\", rm.currentToken().getType());", "+    // no longer support getBlockOffset", "+    //        assertEquals(\"1.1\",0,rm.getBlockOffset());", "+    rm.move(-2);", "+    assertEquals(\"1.2\", \"/*\", rm.currentToken().getType());", "+    rm.move(2);", "+    assertEquals(\"1.3\", ReducedToken.INSIDE_BLOCK_COMMENT, rm.getStateAtCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d9dd0c93036b85e6d03c4ade9885f6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tpublic void testIgnoreBraceOnSameLine ()", "signatureAfterChange": "    public void testIgnoreBraceOnSameLine () throws BadLocationException", "diff": ["-\tpublic void testIgnoreBraceOnSameLine ()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"public class temp \\n{  ()\\n{text here\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"public class temp \\n{  ()\\n  {text here\",", "-\t\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t\t} ", "-\t\t}", "+  public void testIgnoreBraceOnSameLine () throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"public class temp \\n{  ()\\n{text here\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"public class temp \\n{  ()\\n  {text here\",", "+                   doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eb2245d823eb600205b52e692388fa2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tpublic void testFor()", "signatureAfterChange": "    public void testFor() throws BadLocationException", "diff": ["-\tpublic void testFor()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"for(;;)\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"for(;;)\\n  \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testFor() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"for(;;)\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"for(;;)\\n  \", doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f6fb0b8de5487ea1113efa9d7727777", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tpublic void testSkippingBraces ()", "signatureAfterChange": "      public void testSkippingBraces () throws BadLocationException", "diff": ["-\t", "-\tpublic void testSkippingBraces () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n{\\n   { ()}\\n}\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.2\", 12, ii.distToBrace);", "-\t\t\tassertEquals(\"1.1\", 12, ii.distToNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  ", "+  public void testSkippingBraces () throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n   { ()}\\n}\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.2\", 12, ii.distToBrace);", "+    assertEquals(\"1.1\", 12, ii.distToNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60c9a0cc2153532ad7165ea24a664721", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  \t\tpublic void testEnter()", "signatureAfterChange": "      public void testEnter() throws BadLocationException", "diff": ["-\t\tpublic void testEnter()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n\\n\", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+    public void testEnter() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"\\n\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"\\n\\n\", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "681b376a72f3d12a83587a2fc41b6ded", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tpublic void testInsideClassWithBraceSets ()", "signatureAfterChange": "    public void testInsideClassWithBraceSets () throws BadLocationException", "diff": ["-\tpublic void testInsideClassWithBraceSets () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"public class temp \\n{  ()\\ntext here\", null);", "-\t\t\tdoc.indentLine();", "-\t\t\tassertEquals(\"0.1\", \"public class temp \\n{  ()\\n  text here\",", "-\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  public void testInsideClassWithBraceSets () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"public class temp \\n{  ()\\ntext here\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"public class temp \\n{  ()\\n  text here\",", "+                 doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "681d76e35063cdc2c1ae5836533ff3e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic void testSkippingCommentsBraceAtBeginning ()", "signatureAfterChange": "    public void testSkippingCommentsBraceAtBeginning () throws BadLocationException", "diff": ["-\tpublic void testSkippingCommentsBraceAtBeginning () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"{\\n   //{ ()}{\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.2\", 13, ii.distToBrace);", "-\t\t\tassertEquals(\"1.1\", -1, ii.distToNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  public void testSkippingCommentsBraceAtBeginning () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"{\\n   //{ ()}{\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.2\", 13, ii.distToBrace);", "+    assertEquals(\"1.1\", -1, ii.distToNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b1f6784cf5a804ec9957a61ea38c104", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testIndentInfoParen ()", "signatureAfterChange": "    public void testIndentInfoParen () throws BadLocationException", "diff": ["-\tpublic void testIndentInfoParen () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n(\\n\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openParen, ii.braceType);", "-\t\t\tassertEquals(\"1.2\", 2, ii.distToBrace);", "-\t\t\tassertEquals(\"1.1\", 2, ii.distToNewline);", "-\t\t\tassertEquals(\"1.3\", 0, ii.distToPrevNewline);", "+  public void testIndentInfoParen () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n(\\n\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openParen, ii.braceType);", "+    assertEquals(\"1.2\", 2, ii.distToBrace);", "+    assertEquals(\"1.1\", 2, ii.distToNewline);", "+    assertEquals(\"1.3\", 0, ii.distToPrevNewline);", "-\t\t\t// paren with stuff in front", "-\t\t\tdoc.insertString(1, \"  helo \", null);", "-\t\t\tdoc.move(2);", "-\t\t\t// \\n  helo (\\n#", "-\t\t\tassertEquals(\"0.1\", \"\\n  helo (\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"2.0\", openParen, ii.braceType);", "-\t\t\tassertEquals(\"2.1\", 9, ii.distToNewline);", "-\t\t\tassertEquals(\"2.2\", 2, ii.distToBrace);", "+    // paren with stuff in front", "+    doc.insertString(1, \"  helo \", null);", "+    doc.move(2);", "+    // \\n  helo (\\n#", "+    assertEquals(\"0.1\", \"\\n  helo (\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"2.0\", openParen, ii.braceType);", "+    assertEquals(\"2.1\", 9, ii.distToNewline);", "+    assertEquals(\"2.2\", 2, ii.distToBrace);", "-\t\t\t//single layer brace", "-\t\t\tdoc.move(-1);", "-\t\t\tdoc.insertString(9, \" (\", null);", "-\t\t\tdoc.move(1);", "-\t\t\t// \\n  helo ( (\\n#", "-\t\t\tassertEquals(\"0.2\", \"\\n  helo ( (\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"3.0\", openParen, ii.braceType);", "-\t\t\tassertEquals(\"3.1\", 11, ii.distToNewline);", "-\t\t\tassertEquals(\"3.2\", 2, ii.distToBrace);", "+    //single layer brace", "+    doc.move(-1);", "+    doc.insertString(9, \" (\", null);", "+    doc.move(1);", "+    // \\n  helo ( (\\n#", "+    assertEquals(\"0.2\", \"\\n  helo ( (\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"3.0\", openParen, ii.braceType);", "+    assertEquals(\"3.1\", 11, ii.distToNewline);", "+    assertEquals(\"3.2\", 2, ii.distToBrace);", "+  }", "-\t\t} ", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c308aef42b6c2ed107a8c51278d7489", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tpublic void testPrintString()", "signatureAfterChange": "    public void testPrintString() throws BadLocationException", "diff": ["-\tpublic void testPrintString()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"Sys.out(\\\"hello\\\"\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"Sys.out(\\\"hello\\\"\\n        \",", "-\t\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testPrintString() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"Sys.out(\\\"hello\\\"\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"Sys.out(\\\"hello\\\"\\n        \",", "+                   doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e23df91bd2e4e7e320db1e72ebf6010", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \t \tpublic void testOpenBracket()", "signatureAfterChange": "      public void testOpenBracket() throws BadLocationException", "diff": ["-\t", "-\tpublic void testOpenBracket()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hello[\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"hello[\\n      \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  ", "+  public void testOpenBracket() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hello[\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"hello[\\n      \", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70a4d33be48372221235940e62ee38af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tpublic void testSkippingBraces ()", "signatureAfterChange": "      public void testSkippingBraces () throws BadLocationException", "diff": ["-\t", "-\tpublic void testSkippingBraces () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n{\\n   { ()}\\n}\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.2\", 12, ii.distToBrace);", "-\t\t\tassertEquals(\"1.1\", 12, ii.distToNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  ", "+  public void testSkippingBraces () throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n   { ()}\\n}\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.2\", 12, ii.distToBrace);", "+    assertEquals(\"1.1\", 12, ii.distToNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7322cdee158cfb588068e123b85b0100", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": "  \tpublic void testSecondLineProblem2()", "signatureAfterChange": "    public void testSecondLineProblem2() throws BadLocationException", "diff": ["-\tpublic void testSecondLineProblem2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"a\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"a\\n  \", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}", "+", "+  public void testSecondLineProblem2() throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"a\\n\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"a\\n  \", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76d3da1425e31958c6579913a9f43ce5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void testAfterBlockComment2()", "signatureAfterChange": "    public void testAfterBlockComment2() throws BadLocationException", "diff": ["-\tpublic void testAfterBlockComment2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */ (\\nhello\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */ (\\n      hello\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}", "+  public void testAfterBlockComment2() throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */ (\\nhello\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */ (\\n      hello\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76d71fc78a7171ab91dc7e744e6f2a1b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tpublic void testSquigglyAlignment()", "signatureAfterChange": "    public void testSquigglyAlignment() throws BadLocationException", "diff": ["-\tpublic void testSquigglyAlignment()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"{\\n  }\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"{\\n}\", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testSquigglyAlignment() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"{\\n  }\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"{\\n}\", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b6981a402225c1119fa45c38205627b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void testAfterBlockComment2()", "signatureAfterChange": "    public void testAfterBlockComment2() throws BadLocationException", "diff": ["-\tpublic void testAfterBlockComment2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */ (\\nhello\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */ (\\n      hello\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}", "+  public void testAfterBlockComment2() throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */ (\\nhello\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */ (\\n      hello\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81706efbc36417e48cad104ad6240a84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  \tpublic void testNotRecognizeComments2()", "signatureAfterChange": "    public void testNotRecognizeComments2() throws BadLocationException", "diff": ["-\tpublic void testNotRecognizeComments2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\nhello; /*bal*/\\n \", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\nhello; /*bal*/\\n\", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testNotRecognizeComments2() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"\\nhello; /*bal*/\\n \", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"\\nhello; /*bal*/\\n\", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a9ed6f755feb34e3aa8d271d41d9dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tpublic void testSkippingComments ()", "signatureAfterChange": "      public void testSkippingComments () throws BadLocationException", "diff": ["-\t", "-\tpublic void testSkippingComments () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n{\\n   //{ ()\\n}\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.2\", 13, ii.distToBrace);", "-\t\t\tassertEquals(\"1.1\", 13, ii.distToNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  ", "+  public void testSkippingComments () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n   //{ ()\\n}\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.2\", 13, ii.distToBrace);", "+    assertEquals(\"1.1\", 13, ii.distToNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87935c8b3bb16130d675f043cc8d1b19", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": "  \t\tpublic void testSecondLineProblem()", "signatureAfterChange": "    public void testSecondLineProblem() throws BadLocationException", "diff": ["-\t\tpublic void testSecondLineProblem()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+", "+  public void testSecondLineProblem() throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c39d64669e2124bcdd13e6e178965a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  \tpublic void testEnter2()", "signatureAfterChange": "    public void testEnter2() throws BadLocationException", "diff": ["-\tpublic void testEnter2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testEnter2() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f574d6714e3977c0b3d006172152a00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": "  \tpublic void testSecondLineProblem2()", "signatureAfterChange": "    public void testSecondLineProblem2() throws BadLocationException", "diff": ["-\tpublic void testSecondLineProblem2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"a\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"a\\n  \", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}", "+", "+  public void testSecondLineProblem2() throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"a\\n\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"a\\n  \", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fb3a53d43982b11a216e0f4c45e2091", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  \tpublic void testNotRecognizeComments2()", "signatureAfterChange": "    public void testNotRecognizeComments2() throws BadLocationException", "diff": ["-\tpublic void testNotRecognizeComments2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\nhello; /*bal*/\\n \", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\nhello; /*bal*/\\n\", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testNotRecognizeComments2() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"\\nhello; /*bal*/\\n \", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"\\nhello; /*bal*/\\n\", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90e628c37cefa9645f2289ffc98c6adf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tpublic void testInsideClassWithBraceSets ()", "signatureAfterChange": "    public void testInsideClassWithBraceSets () throws BadLocationException", "diff": ["-\tpublic void testInsideClassWithBraceSets () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"public class temp \\n{  ()\\ntext here\", null);", "-\t\t\tdoc.indentLine();", "-\t\t\tassertEquals(\"0.1\", \"public class temp \\n{  ()\\n  text here\",", "-\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  public void testInsideClassWithBraceSets () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"public class temp \\n{  ()\\ntext here\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"public class temp \\n{  ()\\n  text here\",", "+                 doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "949addce17657ce26a4476409f9acfd0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tpublic void testSquigglyAlignment()", "signatureAfterChange": "    public void testSquigglyAlignment() throws BadLocationException", "diff": ["-\tpublic void testSquigglyAlignment()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"{\\n  }\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"{\\n}\", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testSquigglyAlignment() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"{\\n  }\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"{\\n}\", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "968eb8f7d789af8dbdd94689945fbb69", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  \tpublic void testFor2()", "signatureAfterChange": "    public void testFor2() throws BadLocationException", "diff": ["-\tpublic void testFor2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"{\\n  for(;;)\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"{\\n  for(;;)\\n    \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testFor2() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"{\\n  for(;;)\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"{\\n  for(;;)\\n    \", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9730d2caa0925e62c3a91c4140504589", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \t \tpublic void testOpenBracket()", "signatureAfterChange": "      public void testOpenBracket() throws BadLocationException", "diff": ["-\t", "-\tpublic void testOpenBracket()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hello[\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"hello[\\n      \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  ", "+  public void testOpenBracket() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hello[\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"hello[\\n      \", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97fc2b054961c7403315e803b8e4613a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": "  \t\tpublic void testIndentInsideCommentBlock()", "signatureAfterChange": "    public void testIndentInsideCommentBlock() throws BadLocationException", "diff": ["-\t\tpublic void testIndentInsideCommentBlock()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hello\\n{\\n/*{\\n{\\n*/\\nhehe\", null);", "-\t\t\t\tdoc.indentBlock(0, 21);", "-\t\t\t\tassertEquals(\"0.1\", \"hello\\n{\\n  /*{\\n  {\\n  */\\n  hehe\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testIndentInsideCommentBlock() throws BadLocationException", "+  {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"hello\\n{\\n/*{\\n{\\n*/\\nhehe\", null);", "+    doc.indentBlock(0, 21);", "+    assertEquals(\"0.1\", \"hello\\n{\\n  /*{\\n  {\\n  */\\n  hehe\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b6714c490bd3bcfa217bc2d1105f74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic void testIndentInfoBlockComments4 ()", "signatureAfterChange": "      public void testIndentInfoBlockComments4 () throws BadLocationException", "diff": ["-\t", "-\tpublic void testIndentInfoBlockComments4 () {", "-\t\ttry {", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n{\\n  /*\\n*\\n\", null);", "-\t\t\t// \\n(\\n/*\\n*#\\n", "-\t\t\trm.move(-1);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", 8, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 8, ii.distToBrace);", "-\t\t\tassertEquals(\"1.2\", 1, ii.distToPrevNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}", "+  ", "+  public void testIndentInfoBlockComments4 () throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  /*\\n*\\n\", null);", "+    // \\n(\\n/*\\n*#\\n", "+    rm.move(-1);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.1\", 8, ii.distToNewline);", "+    assertEquals(\"1.2\", 8, ii.distToBrace);", "+    assertEquals(\"1.2\", 1, ii.distToPrevNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1ea926076ec8e9b745f311b490e96e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic void testBlockIndent()", "signatureAfterChange": "    public void testBlockIndent() throws BadLocationException", "diff": ["-\tpublic void testBlockIndent()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hello\\n{\\n{\\n  {\", null);", "-\t\t\t\tdoc.indentBlock(8, 13);", "-\t\t\t\tassertEquals(\"0.1\", \"hello\\n{\\n  {\\n    {\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testBlockIndent() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hello\\n{\\n{\\n  {\", null);", "+      doc.indentBlock(8, 13);", "+      assertEquals(\"0.1\", \"hello\\n{\\n  {\\n    {\", doc.getText(0, doc.getLength()));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5d7056f188cd57c1b54ffc3a1eca3f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic void testLargerIndent()", "signatureAfterChange": "    public void testLargerIndent() throws BadLocationException", "diff": ["-\tpublic void testLargerIndent()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"public class temp \\n  {  ()\\n { text here\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"public class temp \\n  {  ()\\n    { text here\",", "-\t\t\t\t\t\t\t\t \t\t doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testLargerIndent() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"public class temp \\n  {  ()\\n { text here\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"public class temp \\n  {  ()\\n    { text here\",", "+                   doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae029c53536e08f235e01fd81d3fff01", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "  \tpublic void testSmallFileProblem()", "signatureAfterChange": "    public void testSmallFileProblem() throws BadLocationException", "diff": ["-\tpublic void testSmallFileProblem()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}", "+", "+  public void testSmallFileProblem() throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n\\n\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n\\n\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b264cb276c895f0bee6087d5e2f81c7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  \tpublic void testNotRecognizeComments()", "signatureAfterChange": "    public void testNotRecognizeComments() throws BadLocationException", "diff": ["-\tpublic void testNotRecognizeComments()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\nhello //bal;\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\nhello //bal;\\n  \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testNotRecognizeComments() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"\\nhello //bal;\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"\\nhello //bal;\\n  \", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b355ecd764afd0f7d531b69343b03055", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic void testSkippingCommentsBraceAtBeginning ()", "signatureAfterChange": "    public void testSkippingCommentsBraceAtBeginning () throws BadLocationException", "diff": ["-\tpublic void testSkippingCommentsBraceAtBeginning () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"{\\n   //{ ()}{\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.2\", 13, ii.distToBrace);", "-\t\t\tassertEquals(\"1.1\", -1, ii.distToNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  public void testSkippingCommentsBraceAtBeginning () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"{\\n   //{ ()}{\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.2\", 13, ii.distToBrace);", "+    assertEquals(\"1.1\", -1, ii.distToNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b78ec88f1e0133d2b01cf0271864bd47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void testIndentInfoBracket ()", "signatureAfterChange": "    public void testIndentInfoBracket () throws BadLocationException", "diff": ["+  public void testIndentInfoBracket () throws BadLocationException {", "+    // just bracket", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n[\\n\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openBracket, ii.braceType);", "+    assertEquals(\"1.1\", 2, ii.distToNewline);", "+    assertEquals(\"1.2\", 2, ii.distToBrace);", "-\tpublic void testIndentInfoBracket () {", "-\t\ttry {", "-\t\t\t// just bracket", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n[\\n\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openBracket, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", 2, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 2, ii.distToBrace);", "+    // bracket with stuff in front", "+    doc.insertString(1, \"  helo \", null);", "+    doc.move(2);", "+    // \\n  helo (\\n#", "+    assertEquals(\"0.1\", \"\\n  helo [\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"2.0\", openBracket, ii.braceType);", "+    assertEquals(\"2.1\", 9, ii.distToNewline);", "+    assertEquals(\"2.2\", 2, ii.distToBrace);", "-\t\t\t// bracket with stuff in front", "-\t\t\tdoc.insertString(1, \"  helo \", null);", "-\t\t\tdoc.move(2);", "-\t\t\t// \\n  helo (\\n#", "-\t\t\tassertEquals(\"0.1\", \"\\n  helo [\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"2.0\", openBracket, ii.braceType);", "-\t\t\tassertEquals(\"2.1\", 9, ii.distToNewline);", "-\t\t\tassertEquals(\"2.2\", 2, ii.distToBrace);", "+    //single layer brace", "+    doc.move(-1);", "+    doc.insertString(9, \" [\", null);", "+    doc.move(1);", "+    // \\n  helo ( (\\n#", "+    assertEquals(\"0.2\", \"\\n  helo [ [\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"3.0\", openBracket, ii.braceType);", "+    assertEquals(\"3.1\", 11, ii.distToNewline);", "+    assertEquals(\"3.2\", 2, ii.distToBrace);", "+  }", "-\t\t\t//single layer brace", "-\t\t\tdoc.move(-1);", "-\t\t\tdoc.insertString(9, \" [\", null);", "-\t\t\tdoc.move(1);", "-\t\t\t// \\n  helo ( (\\n#", "-\t\t\tassertEquals(\"0.2\", \"\\n  helo [ [\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"3.0\", openBracket, ii.braceType);", "-\t\t\tassertEquals(\"3.1\", 11, ii.distToNewline);", "-\t\t\tassertEquals(\"3.2\", 2, ii.distToBrace);", "-\t\t} ", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb77e2e526eae19c78f91130a16014d0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tpublic void testWierd2()", "signatureAfterChange": "    public void testWierd2() throws BadLocationException", "diff": ["-\tpublic void testWierd2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hello\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"hello\", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t} ", "+  public void testWierd2() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hello\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"hello\", doc.getText(0, doc.getLength()));      ", "+    } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bff704a0b96a1abec50f6151f5ea158e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tpublic void testStartSimple ()", "signatureAfterChange": "      public void testStartSimple () throws BadLocationException", "diff": ["-\t", "-\tpublic void testStartSimple () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"abcde\", null);", "-\t\t\tdoc.indentLine();", "-\t\t\tassertEquals(\"0.1\", \"abcde\", doc.getText(0, doc.getLength()));", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  ", "+  public void testStartSimple () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"abcde\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"abcde\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c33df3e0f97d1340f37416bb21142d3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \t  \tpublic void testStartBrace()", "signatureAfterChange": "        public void testStartBrace() throws BadLocationException", "diff": ["-\tpublic void testStartBrace() ", "-\t\t{", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"public class temp \\n {\", null);", "-\t\t\tdoc.indentLine();", "-\t\t\tassertEquals(\"0.1\", \"public class temp \\n{\",", "-\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t\t}", "+  public void testStartBrace() throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"public class temp \\n {\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"public class temp \\n{\",", "+        doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb96447ae3ac7de1f1182b077ab720d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void testIndentInfoBracket ()", "signatureAfterChange": "    public void testIndentInfoBracket () throws BadLocationException", "diff": ["+  public void testIndentInfoBracket () throws BadLocationException {", "+    // just bracket", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n[\\n\", null);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openBracket, ii.braceType);", "+    assertEquals(\"1.1\", 2, ii.distToNewline);", "+    assertEquals(\"1.2\", 2, ii.distToBrace);", "-\tpublic void testIndentInfoBracket () {", "-\t\ttry {", "-\t\t\t// just bracket", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n[\\n\", null);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openBracket, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", 2, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 2, ii.distToBrace);", "+    // bracket with stuff in front", "+    doc.insertString(1, \"  helo \", null);", "+    doc.move(2);", "+    // \\n  helo (\\n#", "+    assertEquals(\"0.1\", \"\\n  helo [\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"2.0\", openBracket, ii.braceType);", "+    assertEquals(\"2.1\", 9, ii.distToNewline);", "+    assertEquals(\"2.2\", 2, ii.distToBrace);", "-\t\t\t// bracket with stuff in front", "-\t\t\tdoc.insertString(1, \"  helo \", null);", "-\t\t\tdoc.move(2);", "-\t\t\t// \\n  helo (\\n#", "-\t\t\tassertEquals(\"0.1\", \"\\n  helo [\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"2.0\", openBracket, ii.braceType);", "-\t\t\tassertEquals(\"2.1\", 9, ii.distToNewline);", "-\t\t\tassertEquals(\"2.2\", 2, ii.distToBrace);", "+    //single layer brace", "+    doc.move(-1);", "+    doc.insertString(9, \" [\", null);", "+    doc.move(1);", "+    // \\n  helo ( (\\n#", "+    assertEquals(\"0.2\", \"\\n  helo [ [\\n\", doc.getText(0, doc.getLength()));", "+    ii = rm.getIndentInformation();", "+    assertEquals(\"3.0\", openBracket, ii.braceType);", "+    assertEquals(\"3.1\", 11, ii.distToNewline);", "+    assertEquals(\"3.2\", 2, ii.distToBrace);", "+  }", "-\t\t\t//single layer brace", "-\t\t\tdoc.move(-1);", "-\t\t\tdoc.insertString(9, \" [\", null);", "-\t\t\tdoc.move(1);", "-\t\t\t// \\n  helo ( (\\n#", "-\t\t\tassertEquals(\"0.2\", \"\\n  helo [ [\\n\", doc.getText(0, doc.getLength()));", "-\t\t\tii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"3.0\", openBracket, ii.braceType);", "-\t\t\tassertEquals(\"3.1\", 11, ii.distToNewline);", "-\t\t\tassertEquals(\"3.2\", 2, ii.distToBrace);", "-\t\t} ", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfab44b44cea60298092ecb7e64f8eba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  \tpublic void testEnter2()", "signatureAfterChange": "    public void testEnter2() throws BadLocationException", "diff": ["-\tpublic void testEnter2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testEnter2() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"\\n\", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d069c560a070facfb263e92c51da46ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   \tpublic void testMotion()", "signatureAfterChange": "     public void testMotion() throws BadLocationException", "diff": ["-\tpublic void testMotion()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hes{\\n{abcde\", null);", "-\t\t\t\tdoc.insertString(11,\"\\n{\",null);", "-\t\t\t\t// hes{\\n{abcde\\n{#", "-\t\t\t\tdoc.move(-8);", "-\t\t\t\t// hes{\\n#{abcde\\n{", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\t// hes{\\n  #{abcde\\n{", "-\t\t\t\tassertEquals(\"0.1\", \"hes{\\n  {abcde\\n{\", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t} ", "+  public void testMotion() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hes{\\n{abcde\", null);", "+      doc.insertString(11,\"\\n{\",null);", "+      // hes{\\n{abcde\\n{#", "+      doc.move(-8);", "+      // hes{\\n#{abcde\\n{", "+      doc.indentLine();", "+      // hes{\\n  #{abcde\\n{", "+      assertEquals(\"0.1\", \"hes{\\n  {abcde\\n{\", doc.getText(0, doc.getLength()));      ", "+    } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d06fe013f49f539ceeda67298d654f22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void testAfterBlockComment()", "signatureAfterChange": "      public void testAfterBlockComment() throws BadLocationException", "diff": ["+  ", "+  public void testAfterBlockComment() throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */\\nhello\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */\\n  hello\", doc.getText(0, doc.getLength()));", "+  }", "-\t", "-\tpublic void testAfterBlockComment()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */\\nhello\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n{\\n  hello;\\n  /*\\n  hello\\n  */\\n  hello\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8623fad3f7b69abaa3935b90260419a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tpublic void testSpaceBrace()", "signatureAfterChange": "    public void testSpaceBrace() throws BadLocationException", "diff": ["-\tpublic void testSpaceBrace()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"   {\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"   {\\n     \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testSpaceBrace() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"   {\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"   {\\n     \", doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddd78583e18281ebb5b301573a747d5f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic void testInsideClass ()", "signatureAfterChange": "    public void testInsideClass () throws BadLocationException", "diff": ["-\tpublic void testInsideClass () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"public class temp \\n{ \\ntext here\", null);", "-\t\t\tdoc.indentLine();", "-\t\t\tassertEquals(\"0.1\", \"public class temp \\n{ \\n  text here\",", "-\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  public void testInsideClass () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"public class temp \\n{ \\ntext here\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"public class temp \\n{ \\n  text here\",", "+                 doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df4312aa524dcd9691517ff1d6a65ca5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic void testLargerIndent()", "signatureAfterChange": "    public void testLargerIndent() throws BadLocationException", "diff": ["-\tpublic void testLargerIndent()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"public class temp \\n  {  ()\\n { text here\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"public class temp \\n  {  ()\\n    { text here\",", "-\t\t\t\t\t\t\t\t \t\t doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testLargerIndent() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"public class temp \\n  {  ()\\n { text here\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"public class temp \\n  {  ()\\n    { text here\",", "+                   doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e071eb69c39888971bb1aa0ce0505d63", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tpublic void testStartSimple ()", "signatureAfterChange": "      public void testStartSimple () throws BadLocationException", "diff": ["-\t", "-\tpublic void testStartSimple () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"abcde\", null);", "-\t\t\tdoc.indentLine();", "-\t\t\tassertEquals(\"0.1\", \"abcde\", doc.getText(0, doc.getLength()));", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t}", "+  ", "+  public void testStartSimple () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"abcde\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"abcde\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0780fbac1fa78b6df6f56f13a73b320", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void testEndOfBlockComment()", "signatureAfterChange": "    public void testEndOfBlockComment() throws BadLocationException", "diff": ["+  public void testEndOfBlockComment() throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  hello;\\n /*\\n hello\\n */\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n{\\n  hello;\\n /*\\n hello\\n  */\", doc.getText(0, doc.getLength()));", "+  }", "-\tpublic void testEndOfBlockComment()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n{\\n  hello;\\n /*\\n hello\\n */\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n{\\n  hello;\\n /*\\n hello\\n  */\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e35c05696b84f1f2f438babcb949a6c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic void testAfterBlockComment3()", "signatureAfterChange": "    public void testAfterBlockComment3() throws BadLocationException", "diff": ["-\t", "-\tpublic void testAfterBlockComment3()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n{\\n  hello;\\n  /*\\n  hello\\n  grr*/\\nhello\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n{\\n  hello;\\n  /*\\n  hello\\n  grr*/\\n  hello\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}", "+  public void testAfterBlockComment3() throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  hello;\\n  /*\\n  hello\\n  grr*/\\nhello\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n{\\n  hello;\\n  /*\\n  hello\\n  grr*/\\n  hello\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e42611409046331f9ce64ea7884f7e60", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic void testIndentInfoBlockComments4 ()", "signatureAfterChange": "      public void testIndentInfoBlockComments4 () throws BadLocationException", "diff": ["-\t", "-\tpublic void testIndentInfoBlockComments4 () {", "-\t\ttry {", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"\\n{\\n  /*\\n*\\n\", null);", "-\t\t\t// \\n(\\n/*\\n*#\\n", "-\t\t\trm.move(-1);", "-\t\t\tIndentInfo ii = rm.getIndentInformation();", "-\t\t\tassertEquals(\"1.0\", openSquiggly, ii.braceType);", "-\t\t\tassertEquals(\"1.1\", 8, ii.distToNewline);", "-\t\t\tassertEquals(\"1.2\", 8, ii.distToBrace);", "-\t\t\tassertEquals(\"1.2\", 1, ii.distToPrevNewline);", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{", "-\t\t\t\tSystem.out.println(e.toString());", "-\t\t\t}", "-\t}", "+  ", "+  public void testIndentInfoBlockComments4 () throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  /*\\n*\\n\", null);", "+    // \\n(\\n/*\\n*#\\n", "+    rm.move(-1);", "+    IndentInfo ii = rm.getIndentInformation();", "+    assertEquals(\"1.0\", openSquiggly, ii.braceType);", "+    assertEquals(\"1.1\", 8, ii.distToNewline);", "+    assertEquals(\"1.2\", 8, ii.distToBrace);", "+    assertEquals(\"1.2\", 1, ii.distToPrevNewline);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4975d924400341e332291b062ddc70d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void testOpenSquigglyCascade2()", "signatureAfterChange": "    public void testOpenSquigglyCascade2() throws BadLocationException", "diff": ["-\t\t}", "-\tpublic void testOpenSquigglyCascade2()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"{\\n  if\\n    if\\n      if\\n{\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"{\\n  if\\n    if\\n      if\\n      {\",", "-\t\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testOpenSquigglyCascade2() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"{\\n  if\\n    if\\n      if\\n{\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"{\\n  if\\n    if\\n      if\\n      {\",", "+                   doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4dc39efb52a78632f3b3c627f8ed7cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic void testAfterBlockComment3()", "signatureAfterChange": "    public void testAfterBlockComment3() throws BadLocationException", "diff": ["-\t", "-\tpublic void testAfterBlockComment3()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n{\\n  hello;\\n  /*\\n  hello\\n  grr*/\\nhello\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n{\\n  hello;\\n  /*\\n  hello\\n  grr*/\\n  hello\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}", "+  public void testAfterBlockComment3() throws BadLocationException {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n{\\n  hello;\\n  /*\\n  hello\\n  grr*/\\nhello\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n{\\n  hello;\\n  /*\\n  hello\\n  grr*/\\n  hello\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8299631f89039af6e9f3b28bbeec884", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": "  \t\tpublic void testIndentInsideCommentBlock()", "signatureAfterChange": "    public void testIndentInsideCommentBlock() throws BadLocationException", "diff": ["-\t\tpublic void testIndentInsideCommentBlock()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hello\\n{\\n/*{\\n{\\n*/\\nhehe\", null);", "-\t\t\t\tdoc.indentBlock(0, 21);", "-\t\t\t\tassertEquals(\"0.1\", \"hello\\n{\\n  /*{\\n  {\\n  */\\n  hehe\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testIndentInsideCommentBlock() throws BadLocationException", "+  {", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"hello\\n{\\n/*{\\n{\\n*/\\nhehe\", null);", "+    doc.indentBlock(0, 21);", "+    assertEquals(\"0.1\", \"hello\\n{\\n  /*{\\n  {\\n  */\\n  hehe\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e88f3b7e6dc831b8af6a498eca0112dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "  \tpublic void testSmallFileProblem()", "signatureAfterChange": "    public void testSmallFileProblem() throws BadLocationException", "diff": ["-\tpublic void testSmallFileProblem()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"\\n\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"\\n\\n\", doc.getText(0, doc.getLength()));", "-\t\t\t}", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}", "-\t\t}", "+", "+  public void testSmallFileProblem() throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"\\n\\n\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"\\n\\n\", doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed138a416a946b16573936cb4db3c94d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \tpublic void testOpenParen()", "signatureAfterChange": "    public void testOpenParen() throws BadLocationException", "diff": ["-\tpublic void testOpenParen()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hello(\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"hello(\\n      \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testOpenParen() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hello(\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"hello(\\n      \", doc.getText(0, doc.getLength()));     ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef3d394e8c871026c0c0caf03131be3c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \t \tpublic void testStartSpaceIndent ()", "signatureAfterChange": "         public void testStartSpaceIndent () throws BadLocationException", "diff": ["-\t", "-\tpublic void testStartSpaceIndent () {", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"  abcde\", null);", "-\t\t\tdoc.indentLine(); ", "-\t\t\tassertEquals(\"0.1\", \"abcde\", doc.getText(0, doc.getLength()));", "-\t\t} ", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t} ", "+  ", "+  public void testStartSpaceIndent () throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"  abcde\", null);", "+    doc.indentLine(); ", "+    assertEquals(\"0.1\", \"abcde\", doc.getText(0, doc.getLength()));", "+  } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1b0b3ea632c210995b8a71c03165b41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tpublic void testSpaceBrace()", "signatureAfterChange": "    public void testSpaceBrace() throws BadLocationException", "diff": ["-\tpublic void testSpaceBrace()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"   {\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"   {\\n     \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testSpaceBrace() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"   {\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"   {\\n     \", doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2126226f73d98bfd5c797e0bba85f12", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \t  \tpublic void testStartBrace()", "signatureAfterChange": "        public void testStartBrace() throws BadLocationException", "diff": ["-\tpublic void testStartBrace() ", "-\t\t{", "-\t\ttry {", "-\t\t\t// just paren", "-\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\tdoc.insertString(0, \"public class temp \\n {\", null);", "-\t\t\tdoc.indentLine();", "-\t\t\tassertEquals(\"0.1\", \"public class temp \\n{\",", "-\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));", "-\t\t}", "-\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t{ ", "-\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t} ", "-\t\t}", "+  public void testStartBrace() throws BadLocationException {", "+    // just paren", "+    BraceReduction rm = doc._reduced;", "+    doc.insertString(0, \"public class temp \\n {\", null);", "+    doc.indentLine();", "+    assertEquals(\"0.1\", \"public class temp \\n{\",", "+        doc.getText(0, doc.getLength()));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9391d762778d386841b423b3931ed56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tpublic void testWierd()", "signatureAfterChange": "    public void testWierd() throws BadLocationException", "diff": ["-\tpublic void testWierd()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"hello\\n\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"hello\\n  \", doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testWierd() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"hello\\n\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"hello\\n  \", doc.getText(0, doc.getLength()));      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc10a7bea10551ee69d2921cf8b9c0b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  \tpublic void testOpenSquigglyCascade()", "signatureAfterChange": "    public void testOpenSquigglyCascade() throws BadLocationException", "diff": ["-\tpublic void testOpenSquigglyCascade()", "-\t\t{", "-\t\t\ttry {", "-\t\t\t\t// just paren", "-\t\t\t\tBraceReduction rm = doc._reduced;", "-\t\t\t\tdoc.insertString(0, \"if\\n  if\\n    if\\n{\", null);", "-\t\t\t\tdoc.indentLine();", "-\t\t\t\tassertEquals(\"0.1\", \"if\\n  if\\n    if\\n    {\",", "-\t\t\t\t\t\t\t\t\t\t doc.getText(0, doc.getLength()));\t\t\t", "-\t\t\t} ", "-\t\t\tcatch( javax.swing.text.BadLocationException e)", "-\t\t\t\t{ ", "-\t\t\t\t \tSystem.out.println(e.toString());", "-\t\t\t\t}  ", "-\t\t}", "+  public void testOpenSquigglyCascade() throws BadLocationException", "+    {", "+      // just paren", "+      BraceReduction rm = doc._reduced;", "+      doc.insertString(0, \"if\\n  if\\n    if\\n{\", null);", "+      doc.indentLine();", "+      assertEquals(\"0.1\", \"if\\n  if\\n    if\\n    {\",", "+                   doc.getText(0, doc.getLength()));      ", "+    }"]}], "num": 6488}