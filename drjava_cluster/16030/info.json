{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c809ea77df02cfd60df0e23dad6933fa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a72c8738c45cdb4cb3d7a32196d90669", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "dab739e9c0a893840c19d552b534083722093495", "commitAfterChange": "9d7de430d203354a52d3faa0378a92c50af92fb7", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "     public TestResult startJUnit() throws IOException", "signatureAfterChange": "     public TestResult startJUnit() throws ClassNotFoundException, IOException", "diff": ["-    public TestResult startJUnit() throws IOException {", "-      // Compile and save before proceeding", "+    public TestResult startJUnit() throws ClassNotFoundException, IOException {", "+      // Compile and save before proceeding.", "-      if(isModifiedSinceSave()) {", "+      if (isModifiedSinceSave()) {", "-          throw new UnexpectedException(e);", "+          notifyListeners(new EventNotifier() {", "+            public void notifyListener(GlobalModelListener l) {", "+            l.junitEnded();", "+            l.nonTestCase();", "+          }", "+          });", "+          return null;", "-        if(testFilename.toLowerCase().endsWith(\".java\")) {", "+        if (testFilename.toLowerCase().endsWith(\".java\")) {", "-          throw new UnexpectedException", "-            (new IllegalArgumentException(\"File is not a Java file.\"));", "+          notifyListeners(new EventNotifier() {", "+            public void notifyListener(GlobalModelListener l) {", "+            l.junitEnded();", "+            l.nonTestCase();", "+          }", "+          });", "+          return null;", "-        catch(InvalidPackageException e) {", "-          throw new UnexpectedException(e);", "+        catch (InvalidPackageException e) {", "+          notifyListeners(new EventNotifier() {", "+            public void notifyListener(GlobalModelListener l) {", "+            l.junitEnded();", "+            l.nonTestCase();", "+          }", "+          });", "+          return null;", "-          throw new UnexpectedException(e);", "+          notifyListeners(new EventNotifier() {", "+            public void notifyListener(GlobalModelListener l) {", "+            l.junitEnded();", "+          }", "+          });", "+          throw e;", "+        notifyListeners(new EventNotifier() {", "+          public void notifyListener(GlobalModelListener l) {", "+          l.junitEnded();", "+          l.nonTestCase();", "+        }", "+        });", "+      catch (NoClassDefFoundError e) {", "+        // Method getTest in junit.framework.BaseTestRunner can throw a", "+        // NoClassDefFoundError (via reflection).", "+        notifyListeners(new EventNotifier() {", "+          public void notifyListener(GlobalModelListener l) {", "+          l.junitEnded();", "+        }", "+        });", "+        throw e;", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4021b2879ff90d1086e70d181d57c3b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2c201f7935638475a11fa56b3f2494c245d1ef90", "commitAfterChange": "2f4a42f54aaa74c25ba0a929e664640f896ec43a", "methodNumberBeforeChange": 267, "methodNumberAfterChange": 270, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["-    _tabbedPanesFrame = new TabbedPanesFrame(MainFrame.this,_tabbedPane,_mainSplit);", "+    _tabbedPanesFrame = new DetachedFrame(MainFrame.this, new Lambda<Void,DetachedFrame>() {", "+      public Void apply(DetachedFrame frame) {", "+        frame.getContentPane().add(_tabbedPane);", "+        return null;", "+      }", "+    }, new Lambda<Void,DetachedFrame>() {", "+      public Void apply(DetachedFrame frame) {", "+        _mainSplit.setBottomComponent(_tabbedPane);", "+        return null;", "+      }", "+    });", "+    ", "+    // Create detachable debug frame", "+    if (_debugPanel!=null) { // using debugger", "+      _debugFrame = new DetachedFrame(MainFrame.this, new Lambda<Void,DetachedFrame>() {", "+        public Void apply(DetachedFrame frame) {", "+          frame.getContentPane().add(_debugPanel);", "+          return null;", "+        }", "+      }, new Lambda<Void,DetachedFrame>() {", "+        public Void apply(DetachedFrame frame) {", "+          _debugSplitPane.setTopComponent(_docSplitPane);", "+          _debugSplitPane.setBottomComponent(_debugPanel);", "+          _mainSplit.setTopComponent(_debugSplitPane);", "+          return null;", "+        }", "+      });", "+      _debugFrame.addWindowListener(new WindowAdapter() {", "+        public void windowClosing(WindowEvent we) {", "+          if (_debugFrame==null) return; // debugger not used", "+          _detachDebugFrameMenuItem.setSelected(false);", "+          DrJava.getConfig().setSetting(DETACH_DEBUGGER, false);", "+        }", "+      });", "+    }", "+    else { // not using debugger", "+      _debugFrame = null;", "+    }", "+    ", "+    initDebugFrame();", "-        int days = DrJava.getConfig().getSetting(DRJAVA_SURVEY_DAYS);", "-        java.util.Date nextCheck = ", "-          new java.util.Date(DrJava.getConfig().getSetting(OptionConstants.LAST_DRJAVA_SURVEY)", "-                               + days * 24L * 60 * 60 * 1000); // x days after last check; 24L ensures long accumulation", "-        if (new java.util.Date().after(nextCheck)) {", "+        if (DrJavaSurveyPopup.maySubmitSurvey()) {", "+          // either enough days have passed, or the configuration has changed"]}], "num": 16030}