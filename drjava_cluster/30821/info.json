{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13e935d1d4bbb3518cf95a83c434c2de", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a413379fe765e739973516cfbea30cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJavaTestCase.java", "commitBeforeChange": "64485acb22f7b04ee86b39b46487ccbab2253387", "commitAfterChange": "523677d0df6002dfcfacc873e04ce1802e7033d3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void setUp() throws Exception", "signatureAfterChange": "   protected void setUp() throws Exception", "diff": ["-//    _log.log(\"newName = \" + newName);", "-//    if (newName != null) {", "-//      Utilities.show(\"Setting '\" + newName + \"' as DrJava configuration file\");", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() {", "-        DrJava.setPropertiesFile(newName);  // spawns change updates which should run in event thread", "-//        Utilities.clearEventQueue();", "-        DrJava._initConfig();               // spawns change updates which should run in event thread", "-      }", "-    });", "+", "+    if (newName != null) {  // in deployed code, assertion checking may be turned off", "+      Utilities.invokeAndWait(new Runnable() {", "+        public void run() {", "+          DrJava.setPropertiesFile(newName);  // spawns change updates which should run in event thread", "+//          Utilities.clearEventQueue();", "+          DrJava._initConfig();               // spawns change updates which should run in event thread", "+        }", "+      });", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa3d02a8f5266bac7568d8be6487c6de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "fbdb8e51d54f22d397d3b4b08bcdaa3ea46ef327", "commitAfterChange": "63c14fb4387b2322a54bec21270f907efc3bbeb5", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": "   private void shutdown()", "signatureAfterChange": "   private void shutdown()", "diff": ["+    if (Utilities.TEST_MODE) dispose();  // kills interpreter and cleans up RMI hooks in the slave JVM", "-//    Utilities.show(\"Shutting Down!\");", "-    Thread terminator = new Thread(new Runnable() { ", "-      public void run() { ", "-        if (Utilities.TEST_MODE) dispose();  // kills interpreter and cleans up RMI hooks in the slave JVM", "-        System.exit(0); ", "-      }", "-    }, \"DrJava Exit\");", "-    ", "-    terminator.start();", "-    try { Thread.sleep(2000); } // sleep for two seconds to allow the terminator thread to terminate DrJava", "-    catch(InterruptedException e) { /* ignore */ }", "-    _log.log(\"Terminator thread failed to shut down DrJava within two seconds; proceeding to halt\");", "-    Runtime.getRuntime().halt(0);  // force DrJava to exit if it still alive", "+    if (DrJava.getConfig().getSetting(OptionConstants.DRJAVA_USE_FORCE_QUIT)) {", "+        Runtime.getRuntime().halt(0);  // force DrJava to exit", "+    }", "+    else {", "+      System.exit(0); ", "+    }"]}], "num": 30821}