{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9a553b025209216b1b3a7c0eb02d2f7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "149e0b3864b7b6b9f82ae6155f11ea12", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/ExecJVM.java", "commitBeforeChange": "b583f95ca38940907816c4beb7118ff0df1017e2", "commitAfterChange": "0df5b67dc6a947ef0dc3e15977c6d8f0381eaef3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public static void printOutput(Process theProc, String msg, String sourceName)     throws IOException", "signatureAfterChange": "   public static void printOutput(Process theProc, String msg, String sourceName)     throws IOException", "diff": ["-    LinkedList outLines = new LinkedList();", "-    LinkedList errLines = new LinkedList();", "+    LinkedList<String> outLines = new LinkedList<String>();", "+    LinkedList<String> errLines = new LinkedList<String>();", "-    Iterator it = outLines.iterator();", "+    Iterator<String> it = outLines.iterator();", "-      output = (String) it.next();", "+      output = it.next();", "-      output = (String) it.next();", "+      output = it.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "160c4c7fc48666d824c0daf990c494b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Set getCurrentScopeVariables()", "signatureAfterChange": "   public Set<AbstractVariable> getCurrentScopeVariables()", "diff": ["+   */", "+  public Set<AbstractVariable> getCurrentScopeVariables() {", "+    Set<AbstractVariable> result = new HashSet<AbstractVariable>(11);", "+    Iterator<String> it = scope.keySet().iterator();", "+    while (it.hasNext()) {", "+      result.add(new Variable(it.next()));", "+    }", "+    it = cscope.keySet().iterator();", "+    while (it.hasNext()) {", "+      result.add(new Constant(it.next()));", "+    }", "+    return result;", "+  }", "-    public Set getCurrentScopeVariables() {", "-\tSet result = new HashSet(11);", "-\tIterator it = scope.keySet().iterator();", "-\twhile (it.hasNext()) {", "-\t    result.add(new Variable((String)it.next()));", "-\t}", "-\tit = cscope.keySet().iterator();", "-\twhile (it.hasNext()) {", "-\t    result.add(new Constant((String)it.next()));", "-\t}", "-\treturn result;", "-    }"]}], "num": 27701}