{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d8ef32d954645d7fa215700222bc73d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63408b3de944f96876f27eb2abb4fbe1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParseError.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ParseException getParseException()", "signatureAfterChange": "               private static String parseExceptionMessage(ParseException e)", "diff": ["-     */", "-    public ParseException getParseException() {", "-      return pe;", "+    ", "+    private static String parseExceptionMessage(ParseException e) {", "+      if (e.expectedTokenSequences == null) { return e.getMessage(); }", "+      else {", "+        int maxSize = 0;", "+        for (int i = 0; i < e.expectedTokenSequences.length; i++) {", "+          if (maxSize < e.expectedTokenSequences[i].length) {", "+            maxSize = e.expectedTokenSequences[i].length;", "+          }", "+        }", "+        String retval = \"Syntax Error: \\\"\";", "+        Token tok = e.currentToken.next;", "+        ", "+        for (int i = 0; i < maxSize; i++) {", "+          if (i != 0) retval += \" \";", "+          if (tok.kind == 0) {", "+            retval += e.tokenImage[0];", "+            break;", "+          }", "+          retval += TextUtil.javaEscape(tok.image);", "+          tok = tok.next; ", "+        }", "+        retval += \"\\\"\";", "+        return retval;", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "936da8cdda6b5074b79968a5eb421da6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/gui/resource/ResourceManager.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public List getStringList(String key, String delim, boolean returnDelims)  \tthrows MissingResourceException", "signatureAfterChange": "   public List<String> getStringList(String key, String delim, boolean returnDelims)      throws MissingResourceException", "diff": ["+   */", "+  public List<String> getStringList(String key, String delim, boolean returnDelims) ", "+    throws MissingResourceException {", "+    ", "+    List<String> result = new ArrayList<String>();", "+    StringTokenizer st  = new StringTokenizer(getString(key), delim, returnDelims);", "+    ", "+    while (st.hasMoreTokens()) { result.add(st.nextToken()); }", "+    ", "+    return result;", "+  }", "-     */", "-    public List getStringList(String key, String delim, boolean returnDelims) ", "-\tthrows MissingResourceException {", "-        List            result = new ArrayList();", "-        StringTokenizer st     = new StringTokenizer(getString(key),", "-                                                     delim,", "-                                                     returnDelims);", "-        while (st.hasMoreTokens()) {", "-            result.add(st.nextToken());", "-        }", "-        return result;", "-    }"]}], "num": 5304}