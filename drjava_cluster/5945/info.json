{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d758d46c5dd28e58b335d6c12f6ee7b3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11ee950d9084fab09ac18704f7621a62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "b9f87cd074abdafacdb2719b29e0803fd0f81cf0", "commitAfterChange": "04d7824a20eb03ad17793ba3198be21442313bdc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r   private void _setupRegionTree()", "signatureAfterChange": "   private void _setupRegionTree()", "diff": ["-  /** Creates the region tree. */\r", "-  private void _setupRegionTree() {\r", "-    _regionRootNode = new DefaultMutableTreeNode(_title);\r", "-    _regTreeModel = new DefaultTreeModel(_regionRootNode);\r", "-    _regTree = new RegionTree(_regTreeModel);\r", "-    _regTree.setEditable(false);\r", "-    _regTree.getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION);\r", "-    _regTree.setShowsRootHandles(true);\r", "-    _regTree.setRootVisible(false);\r", "-    _regTree.putClientProperty(\"JTree.lineStyle\", \"Angled\");\r", "-    _regTree.setScrollsOnExpand(true);\r", "-    _regTree.addTreeSelectionListener(new TreeSelectionListener() {\r", "-      public void valueChanged(TreeSelectionEvent e) { updateButtons(); }\r", "-    });\r", "-    _regTree.addKeyListener(new KeyAdapter() {\r", "-      public void keyPressed(KeyEvent e) { if (e.getKeyCode() == KeyEvent.VK_ENTER) { performDefaultAction(); } } \r", "-    });\r", "-    \r", "-    // Region tree cell renderer\r", "-    dtcr = new RegionRenderer();\r", "-    dtcr.setOpaque(false);\r", "-    _setColors(dtcr);\r", "-    _regTree.setCellRenderer(dtcr);\r", "-    \r", "-    _leftPane.add(new JScrollPane(_regTree));\r", "-    \r", "-    _initPopup();\r", "-    \r", "-    ToolTipManager.sharedInstance().registerComponent(_regTree);\r", "-  }\r", "+  /** Creates the region tree. */", "+  private void _setupRegionTree() {", "+    _rootNode = new DefaultMutableTreeNode(_title);", "+    _regTreeModel = new DefaultTreeModel(_rootNode);", "+    _regTree = new RegionTree(_regTreeModel);", "+    _regTree.setEditable(false);", "+    _regTree.getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION);", "+    _regTree.setShowsRootHandles(true);", "+    _regTree.setRootVisible(false);", "+    _regTree.putClientProperty(\"JTree.lineStyle\", \"Angled\");", "+    _regTree.setScrollsOnExpand(true);", "+    _regTree.addTreeSelectionListener(new TreeSelectionListener() {", "+      public void valueChanged(TreeSelectionEvent e) { updateButtons(); }", "+    });", "+    _regTree.addKeyListener(new KeyAdapter() {", "+      public void keyPressed(KeyEvent e) { if (e.getKeyCode() == KeyEvent.VK_ENTER) { performDefaultAction(); } } ", "+    });", "+    ", "+    // Region tree cell renderer", "+    dtcr = new RegionRenderer();", "+    dtcr.setOpaque(false);", "+    _setColors(dtcr);", "+    _regTree.setCellRenderer(dtcr);", "+    ", "+    _leftPane.add(new JScrollPane(_regTree));", "+    ", "+    _initPopup();", "+    ", "+    ToolTipManager.sharedInstance().registerComponent(_regTree);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abd0f40a58223e4f98aea7f8d1462593", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "bd2e852d4b09497531ae79af49475815d01d70b1", "commitAfterChange": "85b72c50d3f809a70141774d731cbef2c25b2f7f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   protected void generateDirTree()", "signatureAfterChange": "   protected void generateDirTree()", "diff": ["-    _expansionListener = new TreeExpansionListener() {", "-      public void  treeCollapsed(TreeExpansionEvent event) {", "-        // do nothing for now", "-      }", "-      public void  treeExpanded(TreeExpansionEvent event) {", "-        TreePath path = event.getPath();", "-        DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();", "-        ensureHasChildren(node);", "-      }", "-    };", "-    ", "+    // add any external file listeners to the tree", "+    for (TreeSelectionListener tsl : _fileSelectionListeners.values()) {", "+      _tree.addTreeSelectionListener(tsl);", "+    }", "+    ", "+    _expansionListener = new TreeExpansionListener() {", "+      public void  treeCollapsed(TreeExpansionEvent event) {", "+        // do nothing for now", "+      }", "+      public void  treeExpanded(TreeExpansionEvent event) {", "+        TreePath path = event.getPath();", "+        DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();", "+        ensureHasChildren(node);", "+      }", "+    };", "-    CustomTreeCellRenderer _cellRenderer = new CustomTreeCellRenderer();", "-    _tree.setCellRenderer(_cellRenderer);", "-    ", "-    // This should be optional.", "-    FileTextField textField = new FileTextField();", "-    CustomCellEditor cce =  new CustomCellEditor(textField);", "-    DefaultTreeCellEditor _cellEditor = new CustomTreeCellEditor(_tree, _cellRenderer,cce);", "-    ", "-    cce.addCellEditorListener(_cellEditorListener);", "-    _tree.setCellEditor(_cellEditor);", "-    _tree.setEditable(_isEditable);", "-    ", "-    if (_allowMultiple) {", "-      _tree.getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION);", "-    }", "-    else {", "-      _tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION); ", "-    }", "+    ", "+    CustomTreeCellRenderer _cellRenderer = new CustomTreeCellRenderer();", "+    _tree.setCellRenderer(_cellRenderer);", "+    ", "+    // This should be optional.", "+    FileTextField textField = new FileTextField();", "+    CustomCellEditor cce =  new CustomCellEditor(textField);", "+    DefaultTreeCellEditor _cellEditor = new CustomTreeCellEditor(_tree, _cellRenderer,cce);", "+    ", "+    cce.addCellEditorListener(_cellEditorListener);", "+    _tree.setCellEditor(_cellEditor);", "+    _tree.setEditable(_isEditable);", "+    ", "+    if (_allowMultiple) {", "+      _tree.getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION);", "+    }", "+    else {", "+      _tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION); ", "+    }", "+    _treeIsGenerated = true;", "+    _forceTreeGenerate = false;", "+    updateTreeSelectionPath();"]}], "num": 5945}