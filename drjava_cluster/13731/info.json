{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a76fa05ffa21c46a0bf2fbe4305aa269", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a181812e56572263a534b39a5f8a1cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testReopenFile() throws BadLocationException, IOException", "signatureAfterChange": "   public void testReopenFile() throws BadLocationException, IOException", "diff": ["-    TestListener listener = new TestListener() {", "-      public void fileOpened(OpenDefinitionsDocument doc) {", "-        File file = null;", "-        try { file = doc.getFile(); }", "-        catch (FileMovedException fme) {", "-          // We know file should exist", "-          fail(\"file does not exist\");", "-        }", "-        try {", "-          assertEquals(\"file to open\", tempFile.getCanonicalPath(),", "-                       file.getCanonicalPath());", "-        }", "-        catch (IOException ioe) {", "-          throw new UnexpectedException(ioe);", "-        }", "-        openCount++;", "-      }", "-      ", "-      public void fileClosed(OpenDefinitionsDocument doc) {", "-        /* opening a file closes the empty document created on startup [Corky: 10-8-04]*/", "-//        assertTrue(doc.isUntitled());", "-//        assertFalse(doc.isModifiedSinceSave());", "-      }", "-    };", "+    TestListener listener = new TestFileIOListener(tempFile);", "+      listener.assertCloseCount(1);  //  Untitled document closed when doc is opened", "+      listener.assertCloseCount(1);  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc3d1ccd846654bce72ae05c2cf79dbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testOpenRealFile() throws BadLocationException, IOException", "signatureAfterChange": "   public void testOpenRealFile() throws BadLocationException, IOException", "diff": ["-    TestListener listener = new TestListener() {", "-      public void fileOpened(OpenDefinitionsDocument doc) {", "-        File file = null;", "-        try { file = doc.getFile(); }", "-        catch (FileMovedException fme) {", "-          // We know file should exist", "-          fail(\"file does not exist\");", "-        }", "-        try {", "-          assertEquals(\"file to open\", tempFile.getCanonicalFile(), file.getCanonicalFile());", "-          synchronized(this) { openCount++; }", "-        }", "-        catch (IOException ioe) { fail(\"could not get canonical file\"); }", "-      }", "-      ", "-      public void fileClosed(OpenDefinitionsDocument doc) {", "-        /* opening a file closes the empty document created on startup [Corky: 10-8-04]*/", "-//        assertTrue(doc.isUntitled());", "-//        assertFalse(doc.isModifiedSinceSave());", "-      }", "-    };", "+    TestListener listener = new TestFileIOListener(tempFile); ", "+      listener.assertCloseCount(1);  // Untitled document is closed when doc is opened"]}], "num": 13731}