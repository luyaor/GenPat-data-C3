{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4a1b9f2670f51118f51342edb740315", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e87862a3367d4e7f0eb2bdcdeb1e678", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/GenericInterfaceDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl,                                      List<Node> body, TypeParameter[] typeParams)", "signatureAfterChange": "   public GenericInterfaceDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl,                                      List<Node> body, TypeParameter[] typeParams)", "diff": ["-  public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl,", "+  public GenericInterfaceDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl,", "-    this(flags, name, impl, body, typeParams, SourceInfo.NONE);", "+    this(mods, name, impl, body, typeParams, SourceInfo.NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24ba44547c9bfdfd19ab58890d374545", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EnumDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public EnumDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, EnumBody body)", "signatureAfterChange": "   public EnumDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, EnumBody body)", "diff": ["-  public EnumDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, EnumBody body) {", "-    this(flags, name, impl, body, SourceInfo.NONE);", "+  public EnumDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, EnumBody body) {", "+    this(mods, name, impl, body, SourceInfo.NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2558d784f5af2ee11919f5d6383d6dba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/GenericClassDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public GenericClassDeclaration(int flags, String name, ReferenceTypeName ext,                                  List<? extends ReferenceTypeName> impl, List<Node> body, TypeParameter[] typeParams)", "signatureAfterChange": "   public GenericClassDeclaration(ModifierSet mods, String name, ReferenceTypeName ext,                                  List<? extends ReferenceTypeName> impl, List<Node> body, TypeParameter[] typeParams)", "diff": ["-  public GenericClassDeclaration(int flags, String name, ReferenceTypeName ext,", "+  public GenericClassDeclaration(ModifierSet mods, String name, ReferenceTypeName ext,", "-    this(flags, name, ext, impl, body, typeParams, SourceInfo.NONE);", "+    this(mods, name, ext, impl, body, typeParams, SourceInfo.NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bb901f0c0ffe5f40652ed857db2daa1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/GenericInterfaceDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,                                      TypeParameter[] typeParams, SourceInfo si)", "signatureAfterChange": "   public GenericInterfaceDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl,                                      List<Node> body, TypeParameter[] typeParams, SourceInfo si)", "diff": ["-  public GenericInterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,", "-                                     TypeParameter[] typeParams, SourceInfo si) {", "-    super(flags, name, impl, body, si);", "+  public GenericInterfaceDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl,", "+                                     List<Node> body, TypeParameter[] typeParams, SourceInfo si) {", "+    super(mods, name, impl, body, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ee18f0cd4cda9c40bf62569a74dd66c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EnumDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public EnumDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, EnumBody body,                           SourceInfo si)", "signatureAfterChange": "   public EnumDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, EnumBody body,                           SourceInfo si)", "diff": ["-  public EnumDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, EnumBody body,", "+  public EnumDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, EnumBody body,", "-    super(flags, ", "+    super(mods, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "594a87fe142367a26f2e1d468695cd98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicConstructorDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicConstructorDeclaration(int flags, String name,                                            List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                            ConstructorCall eci, List<Node> stmts, TypeParameter[] typeParams,                                            SourceInfo si)", "signatureAfterChange": "   public PolymorphicConstructorDeclaration(ModifierSet mods, String name,                                            List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                            ConstructorCall eci, List<Node> stmts, TypeParameter[] typeParams,                                            SourceInfo si)", "diff": ["-  public PolymorphicConstructorDeclaration(int flags, String name,", "+  public PolymorphicConstructorDeclaration(ModifierSet mods, String name,", "-    super(flags, name, params, excepts, eci, stmts, si);", "+    super(mods, name, params, excepts, eci, stmts, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68761544aa4595309590e8a678382582", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicConstructorDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public PolymorphicConstructorDeclaration(int flags, String name,                                       List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                        ConstructorCall eci, List<Node> stmts, TypeParameter[] typeParams)", "signatureAfterChange": "   public PolymorphicConstructorDeclaration(ModifierSet mods, String name,                                       List<FormalParameter> params, List<? extends ReferenceTypeName> excepts,                                        ConstructorCall eci, List<Node> stmts, TypeParameter[] typeParams)", "diff": ["-  public PolymorphicConstructorDeclaration(int flags, String name,", "+  public PolymorphicConstructorDeclaration(ModifierSet mods, String name,", "-    this(flags, name, params, excepts, eci, stmts, typeParams, SourceInfo.NONE);", "+    this(mods, name, params, excepts, eci, stmts, typeParams, SourceInfo.NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "750497900ea29020aeeb587e23bef6f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InterfaceDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public InterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body)", "signatureAfterChange": "   public InterfaceDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, List<Node> body)", "diff": ["-  public InterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body) {", "-    this(flags, name, impl, body, SourceInfo.NONE);", "+  public InterfaceDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, List<Node> body) {", "+    this(mods, name, impl, body, SourceInfo.NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8103f2e91ec5726f2b55e8353d48b90c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/GenericClassDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public GenericClassDeclaration(int flags, String name, ReferenceTypeName ext,                                  List<? extends ReferenceTypeName> impl, List<Node> body,                                  TypeParameter[] typeParams, SourceInfo si)", "signatureAfterChange": "   public GenericClassDeclaration(ModifierSet mods, String name, ReferenceTypeName ext,                                  List<? extends ReferenceTypeName> impl, List<Node> body,                                  TypeParameter[] typeParams, SourceInfo si)", "diff": ["-  public GenericClassDeclaration(int flags, String name, ReferenceTypeName ext,", "+  public GenericClassDeclaration(ModifierSet mods, String name, ReferenceTypeName ext,", "-    super(flags, name, ext, impl, body, si);", "+    super(mods, name, ext, impl, body, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27c55fba9f92c97763e5a1d4e6663b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/FieldDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public FieldDeclaration(int flags, TypeName type, String name, Expression init)", "signatureAfterChange": "   public FieldDeclaration(ModifierSet mods, TypeName type, String name, Expression init)", "diff": ["-  public FieldDeclaration(int flags, TypeName type, String name, Expression init) {", "-    this(flags, type, name, init, SourceInfo.NONE);", "+  public FieldDeclaration(ModifierSet mods, TypeName type, String name, Expression init) {", "+    this(mods, type, name, init, SourceInfo.NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d959e06badfe5caf5a3f16eed0f392d6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/MethodDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public MethodDeclaration(int flags, TypeName type, String name,                            List<FormalParameter> params, List<? extends ReferenceTypeName> excepts, BlockStatement body)", "signatureAfterChange": "   public MethodDeclaration(ModifierSet mods, TypeName type, String name,                            List<FormalParameter> params, List<? extends ReferenceTypeName> excepts, BlockStatement body)", "diff": ["-  public MethodDeclaration(int flags, TypeName type, String name,", "+  public MethodDeclaration(ModifierSet mods, TypeName type, String name,", "-    this(flags, type, name, params, excepts, body, SourceInfo.NONE);", "+    this(mods, type, name, params, excepts, body, SourceInfo.NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6c0d5d370a32624919a2c64bc988535", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InterfaceDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public InterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,                               SourceInfo si)", "signatureAfterChange": "   public InterfaceDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, List<Node> body,                               SourceInfo si)", "diff": ["-  public InterfaceDeclaration(int flags, String name, List<? extends ReferenceTypeName> impl, List<Node> body,", "+  public InterfaceDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, List<Node> body,", "-    super(flags, name, impl, body, si);", "+    super(mods, name, impl, body, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eefe5a1a091f4d641faf2966b9917a42", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ClassDeclaration.java", "commitBeforeChange": "f5712545338ec09fefb321f9e27396d8fb91a646", "commitAfterChange": "1676fcce81c19c5d647ee9a67867801bec666091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ClassDeclaration(int flags, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body)", "signatureAfterChange": "   public ClassDeclaration(ModifierSet mods, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body)", "diff": ["-  public ClassDeclaration(int flags, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body) {", "-    this(flags, name, ext, impl, body, SourceInfo.NONE);", "+  public ClassDeclaration(ModifierSet mods, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body) {", "+    this(mods, name, ext, impl, body, SourceInfo.NONE);"]}], "num": 29688}