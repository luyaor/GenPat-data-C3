{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ab608280ac2da109cc315c1fd82bbf6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16c61f41b20ee9c36539d3d7b97e1e54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/HistoryTest.java", "commitBeforeChange": "ae91856b53b869dea43c60b3424279a87db75fb5", "commitAfterChange": "a357e82c74cb27dc4ce8ef007203ad2bd5dfa25b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testSearchHistory()", "signatureAfterChange": "   public void testSearchHistory()", "diff": ["-   */", "+  /** Tests that the tab completion of the most recent entry is correct. */", "-    assertEquals(\"Did not find the correct entry in history.\",", "-                 entry1,", "-                 _history.getCurrent());", "+    ", "+    Utilities.clearEventQueue();", "+    assertEquals(\"Did not find the correct entry in history.\", entry1, _history.getCurrent());", "-    assertEquals(\"Did not find the correct entry in history.\",", "-                 entry2,", "-                 _history.getCurrent());", "+    ", "+    Utilities.clearEventQueue();", "+    assertEquals(\"Did not find the correct entry in history.\", entry2, _history.getCurrent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5f7a20e3dee185476f9301e99fa9b15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "commitAfterChange": "56a5d7ef4f332df9b45adf95f71d664c61575e1a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private File mkTempDir(String funnyName)", "signatureAfterChange": "   private File mkTempDir(String funnyName)", "diff": ["-   */", "+  /** Helper for testRelativeFile and testDotPaths. */", "-    // OK, we have to create a directory with a hard-coded name in the", "-    // current working directory, so we'll make it strange. If this", "-    // directory happens to exist, it'll be deleted.", "+    // OK, we have to create a directory with a hard-coded name in the current working directory, so we'll make it", "+    // strange. If this directory happens to exist, it'll be deleted.", "-    if (newDirectory.exists()) {", "-      FileOps.deleteDirectory(newDirectory);", "-    }", "+    if (newDirectory.exists()) FileOps.deleteDirectory(newDirectory);"]}], "num": 5782}