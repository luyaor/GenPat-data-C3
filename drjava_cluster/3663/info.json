{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e26da937d5390ceffe5c103d8da270b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a0a1fcff0351c16725096a1fa46ee93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SpecialTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "          public void testForInitializedVariableDeclarator()", "signatureAfterChange": "          public void testForInitializedVariableDeclarator()", "diff": ["-      SourceInfo si = SourceInfo.NO_INFO;", "+      SourceInfo si = SourceInfo.NONE;", "-        new ArrayType(SourceInfo.NO_INFO, \"int[]\", new PrimitiveType(SourceInfo.NO_INFO, \"int\"));", "+        new ArrayType(SourceInfo.NONE, \"int[]\", new PrimitiveType(SourceInfo.NONE, \"int\"));", "-        new InitializedVariableDeclarator(SourceInfo.NO_INFO, intArrayType,", "-                                          new Word(SourceInfo.NO_INFO, \"foozle\"),", "+        new InitializedVariableDeclarator(SourceInfo.NONE, intArrayType,", "+                                          new Word(SourceInfo.NONE, \"foozle\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b81b384f6ce4c1451789b512a8070b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   protected VariableData[] formalParameters2VariableData(FormalParameter[] fps, SymbolData enclosing)", "signatureAfterChange": "   protected VariableData[] formalParameters2VariableData(FormalParameter[] fps, SymbolData enclosing)", "diff": ["-        new VariableData(name, new ModifiersAndVisibility(SourceInfo.NO_INFO, mav), sd, true, enclosing);", "+        new VariableData(name, new ModifiersAndVisibility(SourceInfo.NONE, mav), sd, true, enclosing);", "-            assert newSd != null && newSd != SymbolData.NOT_FOUND;  // TODO !!!: Expand to error message?", "+            if (newSd == null || newSd == SymbolData.NOT_FOUND) ", "+              System.err.println(\"****** In fixUp, the type \" + typeName + \" at \" + si + \" was NOT found.\");", "+//            assert newSd != null && newSd != SymbolData.NOT_FOUND;  // TODO !!!: Expand to error message?"]}], "num": 3663}