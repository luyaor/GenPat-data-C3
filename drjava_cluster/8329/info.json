{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df4eb6d0cf3f9fb550cebec81a7df407", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b113a4658eed8469fa4f43419efa238", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "930b1ef6cc279650a085c7c6499b1b57cb240018", "commitAfterChange": "73b3ce3968c13472938fea3d36b496150c938bd2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public synchronized void shutdown()", "signatureAfterChange": "      public synchronized void shutdown()", "diff": ["+      ", "+      removeAllBreakpoints();", "-      _vm.dispose();", "+        _vm.dispose();", "-        Enumeration<Breakpoint> breakpoints = _breakpoints.elements();", "-        while (breakpoints.hasMoreElements()) {", "-          Breakpoint bp = breakpoints.nextElement();", "-          bp.getDocument().removeBreakpoint(bp);", "-        }", "-        _breakpoints.clear();", "-        ", "+        notifyListeners(new EventNotifier() {", "+          public void notifyListener(DebugListener l) {", "+            l.debuggerShutdown();", "+          }", "+        });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaf02182968ffbc0f0d9535d24331b99", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 83, "signatureBeforeChange": "   protected static void createAccessors(SymbolData sd, File file)", "signatureAfterChange": "   protected static void createAccessors(SymbolData sd, File file)", "diff": ["-    Iterator<VariableData> iter = fields.iterator();", "-    while (iter.hasNext()) {", "-      VariableData vd = iter.next();      ", "-      if (!vd.hasModifier(\"static\")) { ", "+    for (final VariableData vd: fields) {     ", "+      if (! vd.hasModifier(\"static\")) { ", "-        String[] mavStrings;", "-        mavStrings = new String[] {\"public\"};", "-        MethodData md = new MethodData(name,", "-                                       new ModifiersAndVisibility(SourceInfo.NO_INFO, mavStrings), ", "-                                       new TypeParameter[0], ", "-                                       vd.getType().getSymbolData(), ", "-                                       new VariableData[0],", "-                                       new String[0], ", "-                                       sd,", "-                                       null); // no SourceInfo", "+        SymbolData returnTypeSD = vd.getType();", "+        final MethodData md = new MethodData(name,", "+                                             PUBLIC_MAV, ", "+                                             new TypeParameter[0], ", "+                                             returnTypeSD, ", "+                                             new VariableData[0],", "+                                             new String[0], ", "+                                             sd,", "+                                             null); // no SourceInfo", "+        if (returnTypeSD == null) { // create a fixup to patch the return type of md; vd may have pending return type", "+          Command fixUp = new Command() {", "+            public void execute() { md.setReturnType(vd.getType()); }", "+          };", "+          fixUps.add(fixUp);", "+        } ", "-  }", "+  } "]}], "num": 8329}