{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24c85eea32d4d916d8208f2037898157", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a95b91cf1d1d53977f0688911cca9cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "962cae132b304832e8ad8ca23872798ac7d84d3c", "commitAfterChange": "8958ac741e416ecbae85abc43f8b198196076bac", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void reset()", "signatureAfterChange": "   public void reset()", "diff": ["-    if (_docBeingTested != null) {", "-      JUnitErrorModel juem = _docBeingTested.getJUnitErrorModel();", "-      boolean testsHaveRun = false;", "-      if (juem != null) {", "-        _numErrors = juem.getErrorsWithoutPositions().length + juem.getErrorsWithPositions().length;", "-        testsHaveRun = juem.haveTestsRun();", "-      } else {", "-        _numErrors = 0;", "-      }", "-      _errorListPane.updateListPane(testsHaveRun);", "+    JUnitErrorModel juem = _model.getJUnitErrorModel();", "+    boolean testsHaveRun = false;", "+    if (juem != null) {", "+      _numErrors = juem.getErrors().length;", "+      testsHaveRun = juem.haveTestsRun();", "+    } else {", "+      _numErrors = 0;", "-    _resetEnabledStatus();", "-    _errorListPane.setCaretPosition(0);", "+    _errorListPane.updateListPane(testsHaveRun);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9429e27f022c76f1cc9b54d2fadc1bd1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/HashRelation.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "    public Set<T1> firstSet()", "signatureAfterChange": "      public PredicateSet<T1> firstSet()", "diff": ["+  ", "+  public PredicateSet<T1> firstSet() { return _firstIndex.keys(); }", "-", "-  public Set<T1> firstSet() {", "-    if (_firstIndex != null) { return Collections.unmodifiableSet(_firstIndex.keySet()); }", "-    else { return CollectUtil.asSet(IterUtil.pairFirsts(_pairs)); }", "-  }"]}], "num": 831}