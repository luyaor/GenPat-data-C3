{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20bae5a9bfe4832d0da2a30cff10eeb1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6648127731eb4a717decc9bfc115acbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "9c927a4c9ae89a399e5bb1469f6866c81da951b3", "commitAfterChange": "ad8cf97ed8642a4e981aedeb41e55e32ca82731b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private void insertFolderSortedInto(DefaultMutableTreeNode child, DefaultMutableTreeNode parent)", "signatureAfterChange": "   private void insertFolderSortedInto(InnerNode child, InnerNode parent)", "diff": ["-  private void insertFolderSortedInto(DefaultMutableTreeNode child, DefaultMutableTreeNode parent){", "+  private void insertFolderSortedInto(InnerNode child, InnerNode parent){", "-    String newName;", "-    if(child.getUserObject() instanceof String){", "-      newName = (String) child.getUserObject();", "-    }else", "-    if(child.getUserObject() instanceof INavigatorItem){", "-      newName = ((INavigatorItem)child.getUserObject()).getName();", "-    }else{", "-      newName = child.toString();", "-    }", "-    String oldName = (String)parent.getUserObject();", "+    String newName = child.toString();", "+    String oldName = parent.getUserObject().toString();", "-      if(((DefaultMutableTreeNode)parentsKid).getUserObject()  instanceof String){", "+      if(parentsKid instanceof InnerNode){", "-        oldName = (String)((DefaultMutableTreeNode)parentsKid).getUserObject();", "+        oldName = ((InnerNode)parentsKid).getData().toString();", "-      }else{", "-        // we're no longer comparing to other folders, so break out of loop", "+      }else if(parentsKid instanceof LeafNode){", "+        // we're out of folders, and starting into the files, so just break out.", "+      }else{", "+        throw new IllegalStateException(\"found a node in navigator that is not an InnerNode or LeafNode\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0bacb51f0a848d0e675502d387b7670", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "9c927a4c9ae89a399e5bb1469f6866c81da951b3", "commitAfterChange": "ad8cf97ed8642a4e981aedeb41e55e32ca82731b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   private void insertNodeSortedInto(DefaultMutableTreeNode child, DefaultMutableTreeNode parent)", "signatureAfterChange": "   private void insertNodeSortedInto(LeafNode child, InnerNode parent)", "diff": ["-  private void insertNodeSortedInto(DefaultMutableTreeNode child, DefaultMutableTreeNode parent){", "+  private void insertNodeSortedInto(LeafNode child, InnerNode parent){", "-    String newName;", "-    if(child.getUserObject() instanceof String){", "-      newName = (String) child.getUserObject();", "-    }else", "-    if(child.getUserObject() instanceof INavigatorItem){", "-      newName = ((INavigatorItem)child.getUserObject()).getName();", "-    }else{", "-      newName = child.toString();", "-    }", "-    String oldName = (String)parent.getUserObject();", "+    String newName = child.toString();", "+    String oldName = parent.getUserObject().toString();", "-      if(((DefaultMutableTreeNode)parentsKid).getUserObject()  instanceof INavigatorItem){", "-        oldName = ((INavigatorItem)((DefaultMutableTreeNode)parentsKid).getUserObject()).getName();", "+      if(parentsKid instanceof InnerNode){", "+        // do nothing, it's a folder", "+      }else if(parentsKid instanceof LeafNode){", "+        oldName = ((LeafNode)parentsKid).getData().getName();", "+      }else{", "+        throw new IllegalStateException(\"found a node in navigator that is not an InnerNode or LeafNode\");"]}], "num": 14611}