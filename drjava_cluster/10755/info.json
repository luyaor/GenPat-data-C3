{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4ed302d1089fa0163fa7d3bb9b8f87e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "578975f6c66428ae188058a67cf225bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "5526727a98499d2310190dd9d4878465947a6625", "commitAfterChange": "b6ca058888e9949b6d01b69843e830738548d78b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void reset()", "signatureAfterChange": "      private void reset()", "diff": ["+    // Main class", "+    File rootFile = _mainFrame.getModel().getProjectFile();", "+    try {", "+      rootFile = rootFile.getCanonicalFile();", "+    } catch(IOException e) { }", "+    ", "+    DirectoryChooser chooser = new DirectoryChooser(this,rootFile);", "+    chooser.setDialogTitle(\"Select Main Document\");", "+    chooser.setTopMessage(\"Select the main document for the project:\");", "+    chooser.setApproveButtonText(\"Select\");", "+    FileFilter filter = new FileFilter() {", "+      public boolean accept(File f) {", "+        String name = f.getName();", "+        return  !f.isDirectory() &&", "+          (name.endsWith(\".java\") ||", "+           name.endsWith(\".dj0\") ||", "+           name.endsWith(\".dj1\") ||", "+           name.endsWith(\".dj2\"));", "+      }", "+      public String getDescription() {", "+        return \"Java & DrJava Files (*.java, *.dj0, *.dj1, *.dj2)\";", "+      }", "+    };", "+    chooser.addChoosableFileFilter(filter);", "+    chooser.addFileFilter(filter);", "+    chooser.setShowFiles(true);", "+    chooser.setFileDisplayManager(MainFrame.getFileDisplayManager20());", "+    _jarMainClassSelector.setFileChooser(chooser);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ea3963e4c77b134800884f22088997b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "0ceee5d462dea01e571a97507c2d04495b971db0", "commitAfterChange": "ab9e3c17a5a3c5f93e2194242f915fa2f6bda14a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 21, "signatureBeforeChange": "      private JPanel _createJarMainClassSelectorPanel()", "signatureAfterChange": "      public JPanel _jarMainClassSelector()", "diff": ["-  private JPanel _createJarMainClassSelectorPanel() {", "-    _jarMainClassSelector = new DirectorySelectorComponent(this,null,20,12f);", "+  public JPanel _jarMainClassSelector() {", "+    File rootFile = _mainFrame.getModel().getProjectFile();", "+    try {", "+      rootFile = rootFile.getCanonicalFile();", "+    } catch(IOException e) { }", "+    ", "+    DirectoryChooser chooser = new DirectoryChooser(this,rootFile);", "+    chooser.setDialogTitle(\"Select Main Document\");", "+    chooser.setTopMessage(\"Select the main document for the project:\");", "+    chooser.setApproveButtonText(\"Select\");", "+    FileFilter filter = new FileFilter() {", "+      public boolean accept(File f) {", "+        String name = f.getName();", "+        return  !f.isDirectory() &&", "+          (name.endsWith(\".java\") ||", "+           name.endsWith(\".dj0\") ||", "+           name.endsWith(\".dj1\") ||", "+           name.endsWith(\".dj2\"));", "+      }", "+      public String getDescription() {", "+        return \"Java & DrJava Files (*.java, *.dj0, *.dj1, *.dj2)\";", "+      }", "+    };", "+    chooser.addChoosableFileFilter(filter);", "+    chooser.addFileFilter(filter);", "+    chooser.setShowFiles(true);", "+    chooser.setFileDisplayManager(MainFrame.getFileDisplayManager20());", "+    _jarMainClassSelector = new DirectorySelectorComponent(this,chooser,20,12f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c707c7caba290eeabc7a9b35eabc1af3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/EvaluationVisitorExtension.java", "commitBeforeChange": "0b0e9049d382a4fa995a6c0df7ce197dd950d3eb", "commitAfterChange": "412d701e31bce969c01f5f2b90490fb427358c05", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "    public Object visit(VariableDeclaration node)", "signatureAfterChange": "   public Object visit(VariableDeclaration node)", "diff": ["-", "+   */", "-    super.visit(node);", "+    Class c = NodeProperties.getType(node.getType());", "+    ", "+    if (node.getInitializer() != null) {", "+      Object o = performCast(c, node.getInitializer().acceptVisitor(this));", "+      ", "+      // Forces a runtime type-check on the cast.", "+      String name = node.getName();", "+      ", "+      if (!(c.isPrimitive()                     ||", "+            o == null                          ||", "+            c.isAssignableFrom(o.getClass()))) {", "+        Exception e = new ClassCastException(name);", "+        throw new CatchedExceptionError(e, node);", "+      }", "+      ", "+      if (node.isFinal()) {", "+        _context.setConstant(node.getName(), o);", "+      } else {", "+        _context.set(node.getName(), o);", "+      }", "+    } else {", "+      if (node.isFinal()) {", "+        _context.setConstant(node.getName(), UninitializedObject.INSTANCE);", "+      } else {", "+        _context.set(node.getName(), UninitializedObject.INSTANCE);", "+      }", "+    }"]}], "num": 10755}