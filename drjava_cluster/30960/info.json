{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18351c952425dd30b90754ec6e2de488", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7305b2dbf1514482b92c9a10181c35b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "diff": ["-    ", "-    try { pr = pr.getCanonicalFile(); }", "+    try {", "+      pr = pr.getCanonicalFile();", "+    }", "-    ", "-    INavigatorItemFilter<OpenDefinitionsDocument> navItem1 = new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getSourceBinTitle(),", "+                                                                          new INavigatorItemFilter<OpenDefinitionsDocument>() {", "-    };", "+    }));", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getSourceBinTitle(), navItem1));", "-    ", "-    INavigatorItemFilter<OpenDefinitionsDocument> navItem2 = new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getAuxiliaryBinTitle(),", "+                                                                          new INavigatorItemFilter<OpenDefinitionsDocument>() {", "-    };", "+    }));", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getAuxiliaryBinTitle(), navItem2));", "-    ", "-    INavigatorItemFilter<OpenDefinitionsDocument> navItem3 = new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getExternalBinTitle(),", "+                                                                          new INavigatorItemFilter<OpenDefinitionsDocument>() {", "-    };", "-                                                                          ", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getExternalBinTitle(), navItem3));", "-                                                                    ", "+    }));", "+    ", "-      new AWTContainerNavigatorFactory<OpenDefinitionsDocument>().", "-      makeTreeNavigator(projfilepath, getDocumentNavigator(), l);", "+      new AWTContainerNavigatorFactory<OpenDefinitionsDocument>().makeTreeNavigator(projfilepath, getDocumentNavigator(), l);", "+//    synchronized(_auxiliaryFiles) {", "+//      _auxiliaryFiles.clear();", "+//      for (File file: auxFiles) { _auxiliaryFiles.add(file); }", "+//    }", "+    ", "+//    Utilities.show(\"Project Root loaded into grouping state is \" + projRoot);", "+    ", "-                                                      auxFiles, excludedFiles, projectClassPaths, createJarFile, ", "-                                                      createJarFlags, autoRefresh));", "+                                                      auxFiles, excludedFiles, projectClassPaths, createJarFile, createJarFlags, ", "+                                                      autoRefresh));", "-          getDebugger().toggleBreakpoint(odd, odd._getOffset(lnr), lnr, dbd.isEnabled()); ", "+          odd.acquireReadLock();", "+          try { getDebugger().toggleBreakpoint(odd, odd._getOffset(lnr), lnr, dbd.isEnabled()); }", "+          finally { odd.releaseReadLock(); }", "-          if (getOpenDefinitionsDocuments().contains(odd)) { // bookmark is not stale", "-            final Position startPos = odd.createPosition(bm.getStartOffset());", "-            final Position endPos = odd.createPosition(bm.getEndOffset());", "-            try { getBookmarkManager().addRegion(new DocumentRegion(odd, startPos, endPos)); }", "-            catch(Exception e) { DrJavaErrorHandler.record(e); }  // should never happen", "-          }", "-          // should remove stale bookmark", "+          final Position startPos = odd.createPosition(bm.getStartOffset());", "+          final Position endPos = odd.createPosition(bm.getEndOffset());", "+          getBookmarkManager().addRegion(new DocumentRegion(odd, startPos, endPos));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b8f7b24c8c1e599e1ef379f1dcbc59a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "commitAfterChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "diff": ["-    try {", "-      pr = pr.getCanonicalFile();", "-    }", "+    ", "+    try { pr = pr.getCanonicalFile(); }", "+    ", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getSourceBinTitle(),", "-                                                                          new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+    INavigatorItemFilter<OpenDefinitionsDocument> navItem1 = new INavigatorItemFilter<OpenDefinitionsDocument>() {", "-    }));", "+    };", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getAuxiliaryBinTitle(),", "-                                                                          new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getSourceBinTitle(), navItem1));", "+    ", "+    INavigatorItemFilter<OpenDefinitionsDocument> navItem2 = new INavigatorItemFilter<OpenDefinitionsDocument>() {", "-    }));", "+    };", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getExternalBinTitle(),", "-                                                                          new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getAuxiliaryBinTitle(), navItem2));", "+    ", "+    INavigatorItemFilter<OpenDefinitionsDocument> navItem3 = new INavigatorItemFilter<OpenDefinitionsDocument>() {", "-    }));", "-    ", "+    };", "+                                                                          ", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getExternalBinTitle(), navItem3));", "+                                                                    ", "-      new AWTContainerNavigatorFactory<OpenDefinitionsDocument>().makeTreeNavigator(projfilepath, getDocumentNavigator(), l);", "+      new AWTContainerNavigatorFactory<OpenDefinitionsDocument>().", "+      makeTreeNavigator(projfilepath, getDocumentNavigator(), l);", "-//    synchronized(_auxiliaryFiles) {", "-//      _auxiliaryFiles.clear();", "-//      for (File file: auxFiles) { _auxiliaryFiles.add(file); }", "-//    }", "-    ", "-//    Utilities.show(\"Project Root loaded into grouping state is \" + projRoot);", "-    ", "-                                                      auxFiles, excludedFiles, projectClassPaths, createJarFile, createJarFlags, ", "-                                                      autoRefresh));", "+                                                      auxFiles, excludedFiles, projectClassPaths, createJarFile, ", "+                                                      createJarFlags, autoRefresh));", "-//          odd.acquireReadLock();", "-//          try { ", "-//          }", "-//          finally { odd.releaseReadLock(); }", "-          final Position startPos = odd.createPosition(bm.getStartOffset());", "-          final Position endPos = odd.createPosition(bm.getEndOffset());", "-          getBookmarkManager().addRegion(new DocumentRegion(odd, startPos, endPos));", "+          if (getOpenDefinitionsDocuments().contains(odd)) { // bookmark is not stale", "+            final Position startPos = odd.createPosition(bm.getStartOffset());", "+            final Position endPos = odd.createPosition(bm.getEndOffset());", "+            try { getBookmarkManager().addRegion(new DocumentRegion(odd, startPos, endPos)); }", "+            catch(Exception e) { DrJavaErrorHandler.record(e); }  // should never happen", "+          }", "+          // should remove stale bookmark"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6bddd36f55ab74e782ef76031bbaf75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "diff": ["-    try {", "-      pr = pr.getCanonicalFile();", "-    }", "+    ", "+    try { pr = pr.getCanonicalFile(); }", "+    ", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getSourceBinTitle(),", "-                                                                          new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+    INavigatorItemFilter<OpenDefinitionsDocument> navItem1 = new INavigatorItemFilter<OpenDefinitionsDocument>() {", "-    }));", "+    };", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getAuxiliaryBinTitle(),", "-                                                                          new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getSourceBinTitle(), navItem1));", "+    ", "+    INavigatorItemFilter<OpenDefinitionsDocument> navItem2 = new INavigatorItemFilter<OpenDefinitionsDocument>() {", "-    }));", "+    };", "-    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getExternalBinTitle(),", "-                                                                          new INavigatorItemFilter<OpenDefinitionsDocument>() {", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getAuxiliaryBinTitle(), navItem2));", "+    ", "+    INavigatorItemFilter<OpenDefinitionsDocument> navItem3 = new INavigatorItemFilter<OpenDefinitionsDocument>() {", "-    }));", "-    ", "+    };", "+                                                                          ", "+    l.add(new Pair<String, INavigatorItemFilter<OpenDefinitionsDocument>>(getExternalBinTitle(), navItem3));", "+                                                                    ", "-      new AWTContainerNavigatorFactory<OpenDefinitionsDocument>().makeTreeNavigator(projfilepath, getDocumentNavigator(), l);", "+      new AWTContainerNavigatorFactory<OpenDefinitionsDocument>().", "+      makeTreeNavigator(projfilepath, getDocumentNavigator(), l);", "-//    synchronized(_auxiliaryFiles) {", "-//      _auxiliaryFiles.clear();", "-//      for (File file: auxFiles) { _auxiliaryFiles.add(file); }", "-//    }", "-    ", "-//    Utilities.show(\"Project Root loaded into grouping state is \" + projRoot);", "-    ", "-                                                      auxFiles, excludedFiles, projectClassPaths, createJarFile, createJarFlags, ", "-                                                      autoRefresh));", "+                                                      auxFiles, excludedFiles, projectClassPaths, createJarFile, ", "+                                                      createJarFlags, autoRefresh));", "-          odd.acquireReadLock();", "-          try { getDebugger().toggleBreakpoint(odd, odd._getOffset(lnr), lnr, dbd.isEnabled()); }", "-          finally { odd.releaseReadLock(); }", "+          getDebugger().toggleBreakpoint(odd, odd._getOffset(lnr), lnr, dbd.isEnabled()); ", "-          final Position startPos = odd.createPosition(bm.getStartOffset());", "-          final Position endPos = odd.createPosition(bm.getEndOffset());", "-          getBookmarkManager().addRegion(new DocumentRegion(odd, startPos, endPos));", "+          if (getOpenDefinitionsDocuments().contains(odd)) { // bookmark is not stale", "+            final Position startPos = odd.createPosition(bm.getStartOffset());", "+            final Position endPos = odd.createPosition(bm.getEndOffset());", "+            try { getBookmarkManager().addRegion(new DocumentRegion(odd, startPos, endPos)); }", "+            catch(Exception e) { DrJavaErrorHandler.record(e); }  // should never happen", "+          }", "+          // should remove stale bookmark"]}], "num": 30960}