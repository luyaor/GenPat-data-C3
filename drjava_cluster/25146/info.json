{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00cceb962a969443d8934013799e4ddd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1344341d05d400d9249142ab503db38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public Object visit(SwitchStatement node)", "signatureAfterChange": "   public Object visit(SwitchStatement node)", "diff": ["-      ListIterator it = node.getBindings().listIterator();", "-      ListIterator dit = null;", "+      ListIterator<SwitchBlock> it = node.getBindings().listIterator();", "+      ListIterator<SwitchBlock> dit = null;", "-        SwitchBlock sc = (SwitchBlock)it.next();", "+        SwitchBlock sc = it.next();", "-              Iterator it2 = sc.getStatements().iterator();", "+              Iterator<Node> it2 = sc.getStatements().iterator();", "-                ((Node)it2.next()).acceptVisitor(this);", "+                it2.next().acceptVisitor(this);", "-              sc = (SwitchBlock)it.next();", "+              sc = it.next();", "-        SwitchBlock sc = (SwitchBlock)dit.next();", "+        SwitchBlock sc = dit.next();", "-            Iterator it2 = sc.getStatements().iterator();", "+            Iterator<Node> it2 = sc.getStatements().iterator();", "-              ((Node)it2.next()).acceptVisitor(this);", "+              it2.next().acceptVisitor(this);", "-            sc = (SwitchBlock)dit.next();", "+            sc = dit.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b54b7c15c1e3da31fa589ffc29712f60", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Object visit(ForStatement node)", "signatureAfterChange": "   public Node visit(ForStatement node)", "diff": ["-  public Object visit(ForStatement node) {", "-    LinkedList init = null; // Add parameterization <Node>. ", "+  public Node visit(ForStatement node) {", "+    LinkedList<Node> init = null; // Add parameterization <Node>. ", "-      init = new LinkedList(); // Add parameterization <Node>.", "-      Iterator it = node.getInitialization().iterator();", "+      init = new LinkedList<Node>(); // Add parameterization <Node>.", "+      Iterator<Node> it = node.getInitialization().iterator();", "-        init.add((Node)((Node)it.next()).acceptVisitor(this));", "+        init.add(it.next().acceptVisitor(this));", "-    LinkedList updt = null; // Add parameterization <Node>.", "+    LinkedList<Node> updt = null; // Add parameterization <Node>.", "-      updt = new LinkedList(); // Add parameterization <Node>.", "-      Iterator it = node.getUpdate().iterator();", "+      updt = new LinkedList<Node>(); // Add parameterization <Node>.", "+      Iterator<Node> it = node.getUpdate().iterator();", "-        updt.add((Node)((Node)it.next()).acceptVisitor(this));", "+        updt.add(it.next().acceptVisitor(this));", "-    node.setBody((Node)node.getBody().acceptVisitor(this));", "+    node.setBody(node.getBody().acceptVisitor(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2afddd7ea40e309e16c7bbd969282b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Object visit(ForStatement node)", "signatureAfterChange": "   public Node visit(ForStatement node)", "diff": ["-  public Object visit(ForStatement node) {", "-    LinkedList init = null; // Add parameterization <Node>. ", "+  public Node visit(ForStatement node) {", "+    LinkedList<Node> init = null; // Add parameterization <Node>. ", "-      init = new LinkedList(); // Add parameterization <Node>.", "-      Iterator it = node.getInitialization().iterator();", "+      init = new LinkedList<Node>(); // Add parameterization <Node>.", "+      Iterator<Node> it = node.getInitialization().iterator();", "-        init.add((Node)((Node)it.next()).acceptVisitor(this));", "+        init.add(it.next().acceptVisitor(this));", "-    LinkedList updt = null; // Add parameterization <Node>.", "+    LinkedList<Node> updt = null; // Add parameterization <Node>.", "-      updt = new LinkedList(); // Add parameterization <Node>.", "-      Iterator it = node.getUpdate().iterator();", "+      updt = new LinkedList<Node>(); // Add parameterization <Node>.", "+      Iterator<Node> it = node.getUpdate().iterator();", "-        updt.add((Node)((Node)it.next()).acceptVisitor(this));", "+        updt.add(it.next().acceptVisitor(this));", "-    node.setBody((Node)node.getBody().acceptVisitor(this));", "+    node.setBody(node.getBody().acceptVisitor(this));"]}], "num": 25146}