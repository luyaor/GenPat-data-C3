{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67f5b236f0ac4c8d6022e4b34c27a9e9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7151ec5e25317265848ecc8013d5f0f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "0a93533cf1b555344278f97d8d989cd2f113c958", "commitAfterChange": "c950bf1122c303a9137db70374c1cd2e2fc01d08", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void nonTestCase(final boolean isTestAll)", "signatureAfterChange": "   public void nonTestCase(final boolean isTestAll)", "diff": ["-    _isTestInProgress = false;", "-    _notifier.nonTestCase(isTestAll);", "-    _notifier.junitEnded();", "+    // NOTE: junitStarted is called in a different thread from the testing thread,", "+    //       so it is possible that this is called before the other thread calls ", "+    //       the junitStarted.  We want the test to terminate AFTER it starts. Otherwise", "+    //       any thread that starts waiting for the test to end after the firing of", "+    //       junitStarted will never be notified. (same with all terminal events)", "+    //       The synchronization over _notifier takes care of this problem.", "+    synchronized(_notifier) { ", "+      _notifier.nonTestCase(isTestAll);", "+      _isTestInProgress = false;", "+      _notifier.junitEnded();", "+    } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8e628cba6cae368f3728175fb384761", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "1ca22d8d9e892abbe72cd6aa5627cc7ce0e56b03", "commitAfterChange": "024873f55ad7ba6280213fee7183c6688ba3b395", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void nonTestCase(final boolean isTestAll)", "signatureAfterChange": "   public void nonTestCase(final boolean isTestAll)", "diff": ["-    // NOTE: junitStarted is called in a different thread from the testing thread,", "-    //       so it is possible that this is called before the other thread calls ", "-    //       the junitStarted.  We want the test to terminate AFTER it starts. Otherwise", "-    //       any thread that starts waiting for the test to end after the firing of", "-    //       junitStarted will never be notified. (same with all terminal events)", "-    //       The synchronization using _testInProgress takes care of this problem.", "+    // NOTE: junitStarted is called in a different thread from the testing thread.  The _testInProgress flag", "+    //       is used to prevent a new test from being started and overrunning the existing one.", "-      synchronized (this) { _testInProgress = false;}", "+      synchronized(_testLock) { _testInProgress = false;}"]}], "num": 29223}