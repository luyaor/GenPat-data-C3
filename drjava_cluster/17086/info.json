{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "390eabd1e1bd92ad9978ebf4a4108149", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d5c404d66cafd2dea26ed5f73454de4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestRunner.java", "commitBeforeChange": "fb61bb542bf295f9ff563d4fe1831b256b325388", "commitAfterChange": "6a5c20e1ee845b9752ac481574f6a7bee8c034e1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "   private void synchUI()", "signatureAfterChange": "   public synchronized void endTest(Test test)", "diff": ["-  private void synchUI() {", "-    try {", "-      SwingUtilities.invokeAndWait(new Runnable() {", "-        public void run() {}", "-      });", "+  public synchronized void endTest(Test test) {", "+    boolean error = false;", "+    boolean failure = false;", "+    if (_result.errorCount() > _errorCount) {", "+      error = true;", "+      _errorCount++;", "-    catch (Exception e) {", "+    if (_result.failureCount() > _failureCount) {", "+      failure = true;", "+      _failureCount++;", "+    boolean success = !(failure || error);", "+    _jvm.testEnded(test.toString(), success, failure);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83deb3b1664cf7a482dda2ede51c5fc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "commitAfterChange": "b1b91197c778ee62ce767051b412c31f7bcdddb8", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 84, "signatureBeforeChange": "      synchronized void currThreadSet(final DebugThreadData thread)", "signatureAfterChange": "   private void _removeAllDebugInterpreters() throws DebugException", "diff": ["+   */", "+  private void _removeAllDebugInterpreters() throws DebugException {", "+    DefaultInteractionsModel interactionsModel =", "+      ((DefaultInteractionsModel)_model.getInteractionsModel());", "+    String oldInterpreterName;", "+    if (_runningThread != null) {", "+      oldInterpreterName = _getUniqueThreadName(_runningThread);", "+      interactionsModel.removeInterpreter(oldInterpreterName);", "+    }", "+    while (!_suspendedThreads.isEmpty()) {", "+      ThreadReference threadRef = _suspendedThreads.pop();", "+      oldInterpreterName = _getUniqueThreadName(threadRef);", "+      interactionsModel.removeInterpreter(oldInterpreterName);", "+    }", "+  }", "-  synchronized void currThreadSet(final DebugThreadData thread) {", "-    printMessage(\"The current thread has been set.\");", "-    notifyListeners(new EventNotifier() {", "-      public void notifyListener(DebugListener l) {", "-        l.currThreadSet(thread);", "-      }", "-    });", "-  }"]}], "num": 17086}