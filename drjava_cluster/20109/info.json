{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eafa5ec864bdc17520422d24f5edc1eb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3429bacdee79417ad2a0714542153f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "1c6afe551331288ca825b92ecb3fda34bf325ee0", "commitAfterChange": "946c9827fd9c7515742a2a4508e6a7ac84a9f5a8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testInfiniteLoop_NOJOIN() throws Exception", "signatureAfterChange": "   public void testInfiniteLoop_NOJOIN() throws Exception", "diff": ["-    if (printMessages) System.out.println(\"----testInfiniteLoop-----\");", "+    if (printMessages) System.err.println(\"----testInfiniteLoop-----\");", "-//    System.err.println(\"Compilation of infinite loop completed\");", "+    if (printMessages) System.err.println(\"Compilation of infinite loop completed\");", "-//    System.err.println(\"CheckCompile completed\");", "+    if (printMessages) System.err.println(\"CheckCompile completed\");", "-//      System.err.println(\"Starting JUnit\");", "+      if (printMessages) System.err.println(\"Starting JUnit\");", "-//    System.err.println(\"ResetDone\");", "+    if (printMessages) System.err.println(\"ResetDone\");", "-    if (printMessages) System.out.println(\"after test\");", "+    if (printMessages) System.err.println(\"after test\");", "-//    System.err.println(\"Reached Test End\");", "+    if (printMessages) System.err.println(\"Reached Test End\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef9cf3bcd93cc817755f3a47b689e139", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelConverter.java", "commitBeforeChange": "bdd7aa6c0bcfa675b71488b11d63dfa5dd20cdb9", "commitAfterChange": "f5dd2dee51c1ad8dcca1f4a88c8821b0f45f645c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public static void main(String[] args)", "signatureAfterChange": "   public static void main(String[] args)", "diff": ["+    ", "+    if (args.length==0) {", "+      System.out.println(\"Java Language Level Converter\");", "+      System.out.println(\"Please pass file names (*.dj0, *.dj1, *.dj2) as arguments.\");", "+      System.out.println(\"Note: The converter will use Java's classpath to resolve classes.\");", "+      System.out.println(\"      If classes are not found, use java -cp <classpath> to set the classpath.\");", "+      return;", "+    }", "+    ", "-      llc.convert(files, new Options(JavaVersion.JAVA_5, IterUtil.<File>empty()));", "+      llc.convert(files, new Options(JavaVersion.JAVA_5,", "+                                     IOUtil.parsePath(System.getProperty(\"java.class.path\", \"\"))));"]}], "num": 20109}