{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d6499c0dbe2bfd16761ffdef41d012b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fd28e1cc2fbf8f45d265086a0ec8963", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/JVMUtilities.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public static String getName(String c)", "signatureAfterChange": "   public static String getName(String c)", "diff": ["-  /** Returns the string that represents internally the given class name. */", "+   */", "-    if (s != null) return s;", "-    if (c.endsWith(\"[]\")) {", "-      if (c.endsWith(\"[][]\")) return \"[\" + getName(c.substring(0, c.length()-2));", "-      return \"[\"+ getReturnTypeName(c.substring(0, c.length()-2));", "-    } ", "-    return c.replace('.', '/');  // What if the array class has more than two dimensions?", "+    if (s != null) {", "+      return s;", "+    } else {", "+      if (c.endsWith(\"[]\")) {", "+        if (c.endsWith(\"[][]\")) {", "+          return \"[\"+getName(c.substring(0, c.length()-2));", "+        } else {", "+          return \"[\"+getReturnTypeName(c.substring(0, c.length()-2));", "+        }", "+      } else {", "+        return c.replace('.', '/');", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60206bd1065f9ec20f092f39a06312b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate int _getStateAtCurrentHelper(ModelList<ReducedToken>.Iterator temp)", "signatureAfterChange": "   private int _getStateAtCurrentHelper(ModelList<ReducedToken>.Iterator temp)", "diff": ["-\t */", "-\tprivate int _getStateAtCurrentHelper(ModelList<ReducedToken>.Iterator temp)", "-\t\t{", "-\t\t\tint state = ReducedToken.FREE;", "-\t\t\tif (temp.atFirstItem() || temp.atStart() || _braces.isEmpty())", "-\t\t\t\tstate = ReducedToken.FREE;", "-\t\t\telse if ( temp.prevItem().isLineComment() ||", "-\t\t\t\t\t\t\t\t(temp.prevItem().getState() ==", "-\t\t\t\t\t\t\t\t ReducedToken.INSIDE_LINE_COMMENT))", "-\t\t\t\tstate = ReducedToken.INSIDE_LINE_COMMENT;", "-\t\t\telse if ( temp.prevItem().isBlockCommentStart() ||", "-\t\t\t\t\t\t\t\t(temp.prevItem().getState() ==", "-\t\t\t\t\t\t\t\t ReducedToken.INSIDE_BLOCK_COMMENT))", "-\t\t\t\tstate = ReducedToken.INSIDE_BLOCK_COMMENT;", "-\t\t\telse if ( (temp.prevItem().isQuote() &&", "-\t\t\t\t\t\t\t\t temp.prevItem().isOpen()) ||", "-\t\t\t\t\t\t\t\t(temp.prevItem().getState() ==", "-\t\t\t\t\t\t\t\t ReducedToken.INSIDE_QUOTE))", "-\t\t\t\tstate = ReducedToken.INSIDE_QUOTE;", "-\t\t\telse", "-\t\t\t\tstate = ReducedToken.FREE;", "-", "-\t\t\treturn state;", "-\t\t}", "+  */", "+  private int _getStateAtCurrentHelper(ModelList<ReducedToken>.Iterator temp) {", "+    ", "+    int state = ReducedToken.FREE;", "+    ", "+    if (temp.atFirstItem() || temp.atStart() || _braces.isEmpty()) {", "+      state = ReducedToken.FREE;", "+    }", "+    else if ( temp.prevItem().isLineComment() ||", "+             (temp.prevItem().getState() ==", "+              ReducedToken.INSIDE_LINE_COMMENT))", "+    {", "+      state = ReducedToken.INSIDE_LINE_COMMENT;", "+    }", "+    else if ( temp.prevItem().isBlockCommentStart() ||", "+             (temp.prevItem().getState() ==", "+              ReducedToken.INSIDE_BLOCK_COMMENT)) ", "+    {", "+      state = ReducedToken.INSIDE_BLOCK_COMMENT;", "+    }", "+    else if ( (temp.prevItem().isQuote() &&", "+               temp.prevItem().isOpen()) ||", "+             (temp.prevItem().getState() ==", "+              ReducedToken.INSIDE_QUOTE))", "+    {", "+      state = ReducedToken.INSIDE_QUOTE;", "+    }", "+    else {", "+      state = ReducedToken.FREE;", "+    }", "+    return state;", "+  }"]}], "num": 26272}