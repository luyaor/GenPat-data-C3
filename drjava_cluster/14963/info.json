{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6f1064f09f16041a2e67874dd2345db", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b563999d8fd91c36b19297dbfc6e28cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected void changeDocumentText(final String s, final OpenDefinitionsDocument doc)", "signatureAfterChange": "   protected void changeDocumentText(String s, OpenDefinitionsDocument doc) throws BadLocationException", "diff": ["-  protected void changeDocumentText(final String s, final OpenDefinitionsDocument doc) /*throws BadLocationException */{", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() {", "-        try{", "-          doc.clear();", "-          assertLength(0, doc);", "-          doc.append(s, null);", "-          assertModified(true, doc);", "-          assertContents(s, doc);", "-        }", "-        catch(BadLocationException e) { throw new UnexpectedException(e); }", "-      }", "-    });", "+  protected void changeDocumentText(String s, OpenDefinitionsDocument doc) throws BadLocationException {", "+    doc.clear();", "+    assertLength(0, doc);", "+    doc.append(s, null);", "+    assertModified(true, doc);", "+    assertContents(s, doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6baeffec8344061311e35f8e31cc170", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "72303a17e4a44248ba3fe5d5f9c3d69081ba78b5", "commitAfterChange": "1a00210ae1e41be9246fee06894f37a248cf99ce", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 81, "signatureBeforeChange": "   public void testGotoFileUnderCursorShowDialog() throws IOException", "signatureAfterChange": "   public void testGotoFileUnderCursorShowDialog() throws IOException", "diff": ["-    String goto1_string = \"GotoFileUnderCursor\";", "+    final String goto1_string = \"GotoFileUnderCursor\";", "-    SingleDisplayModel model = _frame.getModel();", "-    model.setActiveDocument(model.getDocumentForFile(goto1_file));", "-    ", "-    assertEquals(\"Document contains the incorrect text\", goto1_string, model.getActiveDocument().getText());", "-    ", "+    Utilities.invokeAndWait(new Runnable() { public void run() {", "+      SingleDisplayModel model = _frame.getModel();", "+      try {", "+        model.setActiveDocument(model.getDocumentForFile(goto1_file));", "+        ", "+        assertEquals(\"Document contains the incorrect text\", goto1_string, model.getActiveDocument().getText());", "+      }", "+      catch(IOException ioe) { throw new UnexpectedException(ioe); }", "+    } });", "+"]}], "num": 14963}