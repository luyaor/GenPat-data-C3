{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2554eb9f96aa748aaa84cbbfb4508fcf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7665908c7c3b9a3af006c08d0dac3945", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public Void forClassImportStatementOnly(ClassImportStatement that)", "signatureAfterChange": "   public Void forClassImportStatementOnly(ClassImportStatement that)", "diff": ["-    for (int i = 0; i<_importedFiles.size(); i++) {", "+    for (int i = 0; i < _importedFiles.size(); i++) {", "-      int indexOfLastDot = name.lastIndexOf(\".\");", "+      int indexOfLastDot = name.lastIndexOf('.');", "-    for (int i = 1; i < words.length; i++) {nameBuff.append(\".\" + words[i].getText());}", "+    for (int i = 1; i < words.length; i++) {nameBuff.append('.' + words[i].getText());}", "-    // Make sure that this imported class does not duplicate the package.  WHY? FIX THIS.", "-    // Although this is allowed in full java, we decided to not allow it at any LanguageLevel.", "-    int indexOfLastDot = qualifiedTypeName.lastIndexOf(\".\");", "-    if (indexOfLastDot != -1) {", "-      if (_package.equals(qualifiedTypeName.substring(0, indexOfLastDot))) {", "-        _addAndIgnoreError(\"You do not need to import \" + qualifiedTypeName ", "-                             + \".  It is in your package so it is already visible\", ", "-                           that);", "-        return null;", "-      }", "-    }", "+//    // Make sure that this imported class does not duplicate the package.  WHY? FIX THIS.", "+//    // Although this is allowed in full java, we decided to not allow it at any LanguageLevel.", "+//    int indexOfLastDot = qualifiedTypeName.lastIndexOf('.');", "+//    if (indexOfLastDot != -1) {", "+//      if (_package.equals(qualifiedTypeName.substring(0, indexOfLastDot))) {", "+//        _addAndIgnoreError(\"You do not need to import \" + qualifiedTypeName ", "+//                             + \".  It is in your package so it is already visible\", ", "+//                           that);", "+//        return null;", "+//      }", "+//    }", "-    // Create a continuation for imported class (named temp) if one does not already exist", "+    // Create a continuation for imported class if one does not already exist", "+    createImportedSymbolContinuation(qualifiedTypeName, that.getSourceInfo());", "+    return forImportStatementOnly(that);", "+  }", "-      sd = addSymbolData(that.getSourceInfo(), qualifiedTypeName);", "-    return forImportStatementOnly(that);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f43719a2f93a49ea5236ac2b6b901e66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 58, "signatureBeforeChange": "   public Void forClassImportStatementOnly(ClassImportStatement that)", "signatureAfterChange": "   public Void forClassImportStatementOnly(ClassImportStatement that)", "diff": ["-    //Make sure that this specific imported class has not already been specifically imported", "+    // Make sure that this specific imported class has not already been specifically imported", "-    StringBuffer tempBuff = new StringBuffer(words[0].getText());", "-    for (int i = 1; i < words.length; i++) {tempBuff.append(\".\" + words[i].getText());}", "+    StringBuilder nameBuff = new StringBuilder(words[0].getText());", "+    for (int i = 1; i < words.length; i++) {nameBuff.append(\".\" + words[i].getText());}", "-    String temp = tempBuff.toString();", "+    String qualifiedTypeName = nameBuff.toString();", "-    //Make sure that this imported class does not dupliate the package.", "-    //Although this is allowed in full java, we decided to not allow it at any LanguageLevel.", "-    int indexOfLastDot = temp.lastIndexOf(\".\");", "+    // Make sure that this imported class does not duplicate the package.  WHY? FIX THIS.", "+    // Although this is allowed in full java, we decided to not allow it at any LanguageLevel.", "+    int indexOfLastDot = qualifiedTypeName.lastIndexOf(\".\");", "-      if (_package.equals(temp.substring(0, indexOfLastDot))) {", "-        _addAndIgnoreError(\"You do not need to import \" + temp + \".  It is in your package so it is already visible\", that);", "+      if (_package.equals(qualifiedTypeName.substring(0, indexOfLastDot))) {", "+        _addAndIgnoreError(\"You do not need to import \" + qualifiedTypeName + \".  It is in your package so it is already visible\", that);", "-    _importedFiles.addLast(temp);  ", "+    _importedFiles.addLast(qualifiedTypeName);  ", "-    SymbolData sd = symbolTable.get(temp);", "+    // Create a continuation for imported class (named temp) if one does not already exist", "+    SymbolData sd = symbolTable.get(qualifiedTypeName);", "-      sd = addSymbolData(that.getSourceInfo(), temp);", "+      sd = addSymbolData(that.getSourceInfo(), qualifiedTypeName);"]}], "num": 1833}