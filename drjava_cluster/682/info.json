{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "159687228d5fbba92e8fc546e6f22915", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "539b0155abf73271ece9e8ffc855eab6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public synchronized Vector<DebugThreadData> getCurrentThreadData()", "signatureAfterChange": "   public synchronized Vector<DebugThreadData> getCurrentThreadData()     throws DebugException", "diff": ["-  public synchronized Vector<DebugThreadData> getCurrentThreadData() {", "-    if (!isReady()) return null;", "-", "+  public synchronized Vector<DebugThreadData> getCurrentThreadData()", "+    throws DebugException", "+  {", "+    _ensureReady();", "-    /** get an iterator that filters out threads that we know are dead from the list returned ", "-     * by _vm.allThreads() ", "-     **/", "+", "+    // get an iterator that filters out threads that we know are dead from", "+    // the list returned by _vm.allThreads() "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f68f9fbd6d8e417b692b174bedd934b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "d3bb1d993ed8ffd95b42e820e37d6479998a9605", "commitAfterChange": "e9864b9d4feda0aaaa7d286763a6fb9bc57982f2", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public Vector<DebugThreadData> getCurrentThreadData() throws DebugException", "signatureAfterChange": "   public ArrayList<DebugThreadData> getCurrentThreadData() throws DebugException", "diff": ["-  public /* synchronized */ Vector<DebugThreadData> getCurrentThreadData() throws DebugException {", "+  public /* synchronized */ ArrayList<DebugThreadData> getCurrentThreadData() throws DebugException {", "-    if (! isReady()) { return new Vector<DebugThreadData>(); }", "+    if (! isReady()) { return new ArrayList<DebugThreadData>(); }", "-      return new Vector<DebugThreadData>();", "+      return new ArrayList<DebugThreadData>();", "-    Vector<DebugThreadData> threads = new Vector<DebugThreadData>();", "+    ArrayList<DebugThreadData> threads = new ArrayList<DebugThreadData>();"]}], "num": 682}