{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f056dc226368aa010b58cf8adca871e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a6594223e3264437fb3c55b38dfa36e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyIntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public Void forAbstractMethodDef(AbstractMethodDef that)", "signatureAfterChange": "   public Void forAbstractMethodDef(AbstractMethodDef that)", "diff": ["-    MethodData md = createMethodData(that, _symbolData);", "+    MethodData md = createMethodData(that, _enclosing);", "-      _addAndIgnoreError(\"Interface methods cannot be made private.  They must be public.\", that.getMav());", "+      _addAndIgnoreError(\"Interface methods cannot be private.  They must be public.\", that.getMav());", "-      _addAndIgnoreError(\"Interface methods cannot be made protected.  They must be public.\", that.getMav());", "+      _addAndIgnoreError(\"Interface methods cannot be protected.  They must be public.\", that.getMav());", "-    String className = getUnqualifiedClassName(_symbolData.getName());", "+    String className = getUnqualifiedClassName(_enclosing.getName());", "-    else _symbolData.addMethod(md);", "+    else _enclosing.addMethod(md);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c49bd8c3fcd6a338f8f22db46f433975", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyFullJavaVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public Void forAbstractMethodDef(AbstractMethodDef that)", "signatureAfterChange": "      public Void forAbstractMethodDef(AbstractMethodDef that)", "diff": ["-", "-    public Void forAbstractMethodDef(AbstractMethodDef that) {", "+  ", "+  public Void forAbstractMethodDef(AbstractMethodDef that) {", "-      _addAndIgnoreError(\"Interface methods cannot be made private.  They must be public.\", that.getMav());", "+      _addAndIgnoreError(\"Interface methods cannot be private.  They must be public.\", that.getMav());", "-      _addAndIgnoreError(\"Interface methods cannot be made protected.  They must be public.\", that.getMav());", "+      _addAndIgnoreError(\"Interface methods cannot be protected.  They must be public.\", that.getMav());", "- // All interface methods are considered public by default.", "+    // All interface methods are considered public by default."]}], "num": 25129}