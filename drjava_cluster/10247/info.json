{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "627e33bc4af4cc946cefb9f8e501ac34", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49cf2eabde366d1dc7e5db5a19223f92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "   private Method _getDefineVariableMethod(ReferenceType interpreterRef,                                           Value val)     throws DebugException", "signatureAfterChange": "   private Method _getDefineVariableMethod(ReferenceType interpreterRef,                                           Value val)     throws DebugException", "diff": ["-    List methods = null;", "+    List<Method> methods = null;", "-    methods = interpreterRef.methodsByName(\"defineVariable\", signature);", "+    methods = interpreterRef.methodsByName(\"defineVariable\", signature);  // JDK 1.5 will eliminate this warning", "-    Method tempMethod = (Method) methods.get(0);", "+    Method tempMethod = methods.get(0);", "-      tempMethod = (Method) methods.get(i);", "+      tempMethod = methods.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f48608abf20204c5bfdb006c3e791cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "   private Method _getDefineVariableMethod(ReferenceType interpreterRef,                                           Value val)     throws DebugException", "signatureAfterChange": "   private Method _getDefineVariableMethod(ReferenceType interpreterRef,                                           Value val)     throws DebugException", "diff": ["-    List methods = null;", "+    List<Method> methods = null;", "-    methods = interpreterRef.methodsByName(\"defineVariable\", signature);", "+    methods = interpreterRef.methodsByName(\"defineVariable\", signature);  // JDK 1.5 will eliminate this warning", "-    Method tempMethod = (Method) methods.get(0);", "+    Method tempMethod = methods.get(0);", "-      tempMethod = (Method) methods.get(i);", "+      tempMethod = methods.get(i);"]}], "num": 10247}