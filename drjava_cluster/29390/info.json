{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5280525983321baaf096da3294fcf7f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56c77bfe06b244593563c84300c6c534", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "839683081b0d966fa9fc02dc0e1948fc900d3a55", "commitAfterChange": "72ee238f22e4ae6534ad887ff5bcbab9970c036e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "diff": ["+   ", "+    addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "+        ", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_GOTOFILE_FULLY_QUALIFIED,", "-                                                  \"Display Fully-Qualified Class Names in \\\"Go to File\\\" Dialog\", this,", "-                                                  \"<html>Whether to also display fully-qualified class names in the \\\"Go to File\\\" dialog.<br>\"+", "-                                                         \"Enabling this option on network drives might cause the dialog to display after a slight delay.</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_COMPLETE_SCAN_CLASS_FILES,", "-                                                  \"Scan Class Files After Each Compile For Auto-Completion and Auto-Import\", this,", "-                                                  \"<html>Whether to scan the class files after a compile to generate class names<br>\"+", "-                                                         \"used for auto-completion and auto-import.<br>\"+", "-                                                         \"Enabling this option will slow compiles down.</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_COMPLETE_JAVAAPI,", "-                                                  \"Consider Java API Classes for Auto-Completion\", this,", "-                                                  \"Whether to use the names of the Java API classes for auto-completion as well.\"));", "+    ", "+    LabelComponent label = new LabelComponent(\" \", this);", "+    label.setEntireColumn(true);", "+    addOptionComponent(panel, label);", "+    BooleanOptionComponent checkbox = ", "+      new BooleanOptionComponent(OptionConstants.DIALOG_GOTOFILE_FULLY_QUALIFIED,", "+                                 \"<html><p align=\\\"right\\\">\"+StringOps.splitStringAtWordBoundaries(\"Display Fully-Qualified Class Names in \\\"Go to File\\\" Dialog\",", "+                                                                                                   27, \"<br>\", SEPS)+\"</p></html>\", this,", "+                                 \"<html>Whether to also display fully-qualified class names in the \\\"Go to File\\\" dialog.<br>\"+", "+                                 \"Enabling this option on network drives might cause the dialog to display after a slight delay.</html>\");", "+    addOptionComponent(panel, checkbox);", "+    ", "+    label = new LabelComponent(\" \", this);", "+    label.setEntireColumn(true);", "+    addOptionComponent(panel, label);", "+    checkbox =", "+      new BooleanOptionComponent(OptionConstants.DIALOG_COMPLETE_SCAN_CLASS_FILES,", "+                                 \"<html><p align=\\\"right\\\">\"+StringOps.splitStringAtWordBoundaries(\"Scan Class Files After Each Compile for Auto-Completion and Auto-Import\",", "+                                                                                                   27, \"<br>\", SEPS)+\"</p></html>\", this,", "+                                 \"<html>Whether to scan the class files after a compile to generate class names<br>\"+", "+                                 \"used for auto-completion and auto-import.<br>\"+", "+                                 \"Enabling this option will slow compiles down.</html>\");", "+    addOptionComponent(panel, checkbox);", "+    ", "+    label = new LabelComponent(\" \", this);", "+    label.setEntireColumn(true);", "+    addOptionComponent(panel, label);", "+    checkbox =", "+      new BooleanOptionComponent(OptionConstants.DIALOG_COMPLETE_JAVAAPI,", "+                                 \"<html><p align=\\\"right\\\">\"+StringOps.splitStringAtWordBoundaries(\"Consider Java API Classes for Auto-Completion\",", "+                                                                                                   27, \"<br>\", SEPS)+\"</p></html>\", this,", "+                                 \"Whether to use the names of the Java API classes for auto-completion as well.\");", "+    addOptionComponent(panel, checkbox);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5d6ea626a7dcc62a1b23a22e32a6214", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 67, "signatureBeforeChange": "   private void _setupInteractionsPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupInteractionsPanel(ConfigPanel panel)", "diff": ["-      new DirectoryOptionComponent(OptionConstants.FIXED_INTERACTIONS_DIRECTORY,", "-                                   \"Interactions Working Directory\", this,", "-                                   \"<html>Working directory for the Interactions Pane (unless<br>\"+", "-                                   \"a project working directory has been set).</html>\",", "-                                   _dirChooser);", "+      newDirectoryOptionComponent(OptionConstants.FIXED_INTERACTIONS_DIRECTORY, _dirChooser);", "-      new BooleanOptionComponent(OptionConstants.STICKY_INTERACTIONS_DIRECTORY,", "-                                 \"<html><p align=\\\"right\\\">\" + ", "-                                 StringOps.", "-                                   splitStringAtWordBoundaries(\"Restore last working directory of the Interactions pane on start up\",", "-                                                               33, \"<br>\", SEPS), this,", "-                                 \"<html>Whether to restore the last working directory of the Interaction pane on start up,<br>\" +", "-                                 \"or to always use the value of the \\\"user.home\\\" Java property<br>\"+", "-                                 \"(currently \"+System.getProperty(\"user.home\")+\").\");", "+      newBooleanOptionComponent(OptionConstants.STICKY_INTERACTIONS_DIRECTORY);", "-    addOptionComponent(panel, new BooleanOptionComponent", "-                         (OptionConstants.SMART_RUN_FOR_APPLETS_AND_PROGRAMS, ", "-                          \"Smart Run Command\", this,", "-                          \"<html>Whether the Run button and meni item should automatically detect<br>\"+", "-                          \"applets and ACM Java Task Force programs (subclasses of acm.program.Program).</html>\"));", "+    addOptionComponent(panel, newBooleanOptionComponent", "+                         (OptionConstants.SMART_RUN_FOR_APPLETS_AND_PROGRAMS));", "-    addOptionComponent(panel, new IntegerOptionComponent(OptionConstants.HISTORY_MAX_SIZE, \"Size of Interactions History\", this,", "-                                                  \"The number of interactions to remember in the history.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_AUTOIMPORT_ENABLED, ", "-                                                         \"Enable the \\\"Auto Import\\\" Dialog\", this,", "-                                                         \"<html>Whether DrJava should open the \\\"Auto Import\\\" dialog when<br>\"+", "-                                                         \"an undefined class is encountered in the Interactions Pane.</html>\"));", "+    addOptionComponent(panel, newIntegerOptionComponent(OptionConstants.HISTORY_MAX_SIZE));", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DIALOG_AUTOIMPORT_ENABLED));", "-      new VectorStringOptionComponent(OptionConstants.INTERACTIONS_AUTO_IMPORT_CLASSES, \"Classes to Auto-Import\", this,", "-                                      \"<html>List of classes to auto-import every time the<br>\"+", "-                                      \"Interaction Pane is reset or started. Examples:<br><br>\"+", "-                                      \"java.io.File<br>\"+", "-                                      \"java.util.*</html>\") {", "+      new VectorStringOptionComponent(OptionConstants.INTERACTIONS_AUTO_IMPORT_CLASSES,", "+                                      CONFIG_DESCRIPTIONS.get(OptionConstants.INTERACTIONS_AUTO_IMPORT_CLASSES),", "+                                      this,", "+                                      CONFIG_LONG_DESCRIPTIONS.get(OptionConstants.INTERACTIONS_AUTO_IMPORT_CLASSES)) {", "-                       new ForcedChoiceOptionComponent(OptionConstants.DYNAMICJAVA_ACCESS_CONTROL,", "-                                                       \"Enforce access control\", ", "-                                                       this,", "-                                                       \"What kind of access control should DrJava enforce in the Interactions Pane?\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DYNAMICJAVA_REQUIRE_SEMICOLON, ", "-                                                         \"Require Semicolon\", this,", "-                                                         \"<html>Whether DrJava should require a semicolon at the<br>\"+", "-                                                         \"end of a statement in the Interactions Pane.</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DYNAMICJAVA_REQUIRE_VARIABLE_TYPE, ", "-                                                         \"Require Variable Type\", this,", "-                                                         \"<html>Whether DrJava should require a variable type for<br>\"+", "-                                                         \"variable declarations in the Interactions Pane.</html>\"));", "+                       newForcedChoiceOptionComponent(OptionConstants.DYNAMICJAVA_ACCESS_CONTROL));", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DYNAMICJAVA_REQUIRE_SEMICOLON));", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DYNAMICJAVA_REQUIRE_VARIABLE_TYPE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cedd5a74d416edf736dd52263228aac2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 54, "signatureBeforeChange": "   private void _setupDebugPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDebugPanel(ConfigPanel panel)", "diff": ["-      new VectorFileOptionComponent(OptionConstants.DEBUG_SOURCEPATH, \"Sourcepath\", this,", "-                                    \"<html>Any directories in which to search for source<br>\" +", "-                                    \"files when stepping in the Debugger.</html>\", true);", "+      newVectorFileOptionComponent(OptionConstants.DEBUG_SOURCEPATH, true);", "-                       new BooleanOptionComponent(OptionConstants.DEBUG_STEP_JAVA,", "-                                                  \"Step Into Java Classes\", ", "-                                                  this,", "-                                                  \"<html>Whether the Debugger should step into Java library classes,<br>\" +", "-                                                  \"including java.*, javax.*, sun.*, com.sun.*, com.apple.eawt.*, and com.apple.eio.*</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DEBUG_STEP_INTERPRETER,", "-                                                  \"Step Into Interpreter Classes\", this,", "-                                                  \"<html>Whether the Debugger should step into the classes<br>\" +", "-                                                  \"used by the Interactions Pane (DynamicJava).</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DEBUG_STEP_DRJAVA,", "-                                                  \"Step Into DrJava Classes\", this,", "-                                                  \"Whether the Debugger should step into DrJava's own class files.\"));", "+                       newBooleanOptionComponent(OptionConstants.DEBUG_STEP_JAVA));", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DEBUG_STEP_INTERPRETER));", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DEBUG_STEP_DRJAVA));", "-                       new VectorStringOptionComponent(OptionConstants.DEBUG_STEP_EXCLUDE,", "-                                                       \"Classes/Packages To Exclude\", ", "-                                                       this,", "-                                                       \"<html>Any classes that the debuggger should not step into.<br>\" +", "-                                                       \"Should be a list of fully-qualified class names.<br>\" +", "-                                                       \"To exclude a package, add <code>packagename.*</code> to the list.</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DEBUG_AUTO_IMPORT,", "-                                                  \"Auto-Import after Breakpoint/Step\", this,", "-                                                  \"<html>Whether the Debugger should automatically import packages<br>\"+", "-                                                  \"and classes again after a breakpoint or step.</html>\"));", "+                       newVectorStringOptionComponent(OptionConstants.DEBUG_STEP_EXCLUDE, false));", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DEBUG_AUTO_IMPORT));", "-    addOptionComponent(panel, new IntegerOptionComponent(OptionConstants.AUTO_STEP_RATE,", "-                                                         \"Auto-Step Rate in ms\",", "-                                                         this,", "-                                                         \"<html>A defined rate in ms at which the debugger automatically steps into/over each line of code.<br>\" +", "-                                                         \"Value entered must be an integer value. </html>\"));                                                            ", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DEBUG_EXPRESSIONS_AND_METHODS_IN_WATCHES,", "-                                                         \"Allow Expressions and Method Calls in Watches\", this,", "-                                                         \"<html>Whether the Debugger should allow expressions and method<br>\"+", "-                                                         \"calls in watches. These may have side effects and can cause<br>\"+", "-                                                         \"delays during the debug process.</html>\"));", "+    addOptionComponent(panel, newIntegerOptionComponent(OptionConstants.AUTO_STEP_RATE));                                                            ", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DEBUG_EXPRESSIONS_AND_METHODS_IN_WATCHES));"]}], "num": 29390}