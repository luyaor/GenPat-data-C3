{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b8ccf82c050439a3b7e33f9056a88907", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55acb1d67bd97aac7a9b7b6afcf7e55a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "e753017eccbd872714e58c93831cb488b5045d2a", "commitAfterChange": "abaea23707eba81455db9185a249740d89273b85", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected void assertReplThrewContinuationException(String code) throws EditDocumentException, InterruptedException", "signatureAfterChange": "   protected void assertReplThrewContinuationException(String code) throws EditDocumentException, InterruptedException", "diff": ["+  /** Not a test method,  Assumes that _model is an IncompleteInputInteractionsModel. */", "+    Utilities.clearEventQueue();  // required because subsequent interpretCurrentInteraction is not run in event thread.", "-    assertTrue(\"Code '\"+code+\"' should generate a continuation exception but not a syntax exception\",", "+    assertTrue(\"Code '\" + code + \"' should generate a continuation exception but not a syntax exception\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f47f3b0b3f2761358e301e83d8acfd7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "998d49ab48c08c55f388485512c281814a54c029", "commitAfterChange": "a8b8b0a5cb85063013adcdf9293d0c9c540b8baa", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void testInteractionsHistoryStoredCorrectly() throws Exception", "signatureAfterChange": "   public void testInteractionsHistoryStoredCorrectly() throws Exception", "diff": ["-        model.interpretCurrentInteraction();", "+    Utilities.clearEventQueue();", "+    model.interpretCurrentInteraction();", "-      public void run() { ", "-        doc.insertText(doc.getLength(), code1, InteractionsDocument.DEFAULT_STYLE);", "-        _model.interpretCurrentInteraction();", "-      }", "+      public void run() { doc.insertText(doc.getLength(), code1, InteractionsDocument.DEFAULT_STYLE); }", "+    Utilities.clearEventQueue();", "+    _model.interpretCurrentInteraction();"]}], "num": 123}