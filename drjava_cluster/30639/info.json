{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0682e62136c2c80644c3ce2cd8e62d44", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95867146e9b9e70cc1bad853c54a1eb6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringView.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   ColoringView(Element elem)", "signatureAfterChange": "   ColoringView(Element elem)", "diff": ["-", "-    ColorOptionListener col = new ColorOptionListener();", "+    final ColorOptionListener col = new ColorOptionListener();", "+//", "+//    final Document doc = getDocument();", "+//    if(doc instanceof DefinitionsDocument){", "+//      // delete the old color listeners, because they're hanging onto the wrong coloringview", "+//      // add color listeners to highlight keywords etc", "+//      ((DefinitionsDocument)doc).clearOptionListeners();", "+//      ((DefinitionsDocument)doc).addOptionListener( OptionConstants.DEFINITIONS_COMMENT_COLOR, col);", "+//      ((DefinitionsDocument)doc).addOptionListener( OptionConstants.DEFINITIONS_DOUBLE_QUOTED_COLOR, col);", "+//      ((DefinitionsDocument)doc).addOptionListener( OptionConstants.DEFINITIONS_SINGLE_QUOTED_COLOR, col);", "+//      ((DefinitionsDocument)doc).addOptionListener( OptionConstants.DEFINITIONS_NORMAL_COLOR, col);", "+//      ((DefinitionsDocument)doc).addOptionListener( OptionConstants.DEFINITIONS_KEYWORD_COLOR, col);", "+//      ((DefinitionsDocument)doc).addOptionListener( OptionConstants.DEFINITIONS_NUMBER_COLOR, col);", "+//      ((DefinitionsDocument)doc).addOptionListener( OptionConstants.DEFINITIONS_TYPE_COLOR, col);", "+//", "+//      ", "+//      // remove the listeners when the document closes", "+//      ((DefinitionsDocument)doc).addDocumentClosedListener(new DocumentClosedListener(){", "+//        public void close(){", "+//          ((DefinitionsDocument)doc).clearOptionListeners();", "+//        }", "+//      });", "+    ", "+    Document doc = getDocument();", "+    if(doc instanceof DefinitionsDocument){", "+      // delete the old color listeners, because they're hanging onto the wrong coloringview", "+      // add color listeners to highlight keywords etc", "+      DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_COMMENT_COLOR, col);", "+      DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_DOUBLE_QUOTED_COLOR, col);", "+      DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_SINGLE_QUOTED_COLOR, col);", "+      DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_NORMAL_COLOR, col);", "+      DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_KEYWORD_COLOR, col);", "+      DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_NUMBER_COLOR, col);", "+      DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_TYPE_COLOR, col);", "-    DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_COMMENT_COLOR, col);", "-    DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_DOUBLE_QUOTED_COLOR, col);", "-    DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_SINGLE_QUOTED_COLOR, col);", "-    DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_NORMAL_COLOR, col);", "-    DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_KEYWORD_COLOR, col);", "-    DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_NUMBER_COLOR, col);", "-    DrJava.getConfig().addOptionListener( OptionConstants.DEFINITIONS_TYPE_COLOR, col);", "+      ", "+      // remove the listeners when the document closes", "+      ((DefinitionsDocument)doc).addDocumentClosedListener(new DocumentClosedListener(){", "+        public void close(){", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_COMMENT_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_DOUBLE_QUOTED_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_SINGLE_QUOTED_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_NORMAL_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_KEYWORD_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_NUMBER_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_TYPE_COLOR, col);", "+        }", "+      });", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae68e5a0391ba47c36ef77bcd1c31a45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/ColoringView.java", "commitBeforeChange": "ece33a1eca956a4c4fa241038cad534de212ef70", "commitAfterChange": "5481b029dfc07ee092049dc1e5006c0f887620a2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ColoringView(Element elem)", "signatureAfterChange": "   public ColoringView(Element elem)", "diff": ["-//      ((DefinitionsDocument)doc).addOptionListener( OptionConstants.DEFINITIONS_TYPE_COLOR, col);", "-//", "-//      ", "-//      // remove the listeners when the document closes", "-//      ((DefinitionsDocument)doc).addDocumentClosedListener(new DocumentClosedListener(){", "-//        public void close(){", "-//          ((DefinitionsDocument)doc).clearOptionListeners();", "-//        }", "-//      });", "+    //      ((DefinitionsDocument)doc).addOptionListener( OptionConstants.DEFINITIONS_TYPE_COLOR, col);", "+    //", "+    //      ", "+    //      // remove the listeners when the document closes", "+    //      ((DefinitionsDocument)doc).addDocumentClosedListener(new DocumentClosedListener(){", "+    //        public void close(){", "+    //          ((DefinitionsDocument)doc).clearOptionListeners();", "+    //        }", "+    //      });", "-      if(doc instanceof DefinitionsDocument) {", "-        // remove the listeners when the document closes", "-        ((DefinitionsDocument)doc).addDocumentClosedListener(new DocumentClosedListener(){", "-          public void close(){", "-            DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_COMMENT_COLOR, col);", "-            DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_DOUBLE_QUOTED_COLOR, col);", "-            DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_SINGLE_QUOTED_COLOR, col);", "-            DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_NORMAL_COLOR, col);", "-            DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_KEYWORD_COLOR, col);", "-            DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_NUMBER_COLOR, col);", "-            DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_TYPE_COLOR, col);", "-            DrJava.getConfig().removeOptionListener( OptionConstants.FONT_MAIN, fol);", "-          }", "-        });", "-      }", "+      DrJava.getConfig().addOptionListener( OptionConstants.SYSTEM_ERR_COLOR, col);", "+      DrJava.getConfig().addOptionListener( OptionConstants.SYSTEM_IN_COLOR, col);", "+      DrJava.getConfig().addOptionListener( OptionConstants.SYSTEM_OUT_COLOR, col);", "+      DrJava.getConfig().addOptionListener( OptionConstants.INTERACTIONS_ERROR_COLOR, col);", "+      DrJava.getConfig().addOptionListener( OptionConstants.DEBUG_MESSAGE_COLOR, col);", "+      ", "+    }", "+    ", "+    if(doc instanceof DefinitionsDocument) {", "+      // remove the listeners when the document closes", "+      ((DefinitionsDocument)doc).addDocumentClosedListener(new DocumentClosedListener(){", "+        public void close(){", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_COMMENT_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_DOUBLE_QUOTED_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_SINGLE_QUOTED_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_NORMAL_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_KEYWORD_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_NUMBER_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEFINITIONS_TYPE_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.FONT_MAIN, fol);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.SYSTEM_ERR_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.SYSTEM_IN_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.SYSTEM_OUT_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.INTERACTIONS_ERROR_COLOR, col);", "+          DrJava.getConfig().removeOptionListener( OptionConstants.DEBUG_MESSAGE_COLOR, col);", "+          ", "+        }", "+      });"]}], "num": 30639}