{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fa0e10fa424d84b663c76336c7d8116", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "280f75f202bc0d089b21a40a33a923f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "8907059ef43f15e7b338686159e3333fd997b238", "commitAfterChange": "191c3e4b63ea8ecc780014db5fc908a6ccd9ee7a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void setMachine(DefinitionsPane defPane)", "signatureAfterChange": "   private void _updateMachine()", "diff": ["-  ", "-  public void setMachine(DefinitionsPane defPane) {", "-    _defPane = defPane;", "-    OpenDefinitionsDocument doc = defPane.getOpenDocument();", "-    _machine = doc.createFindReplaceMachine();", "+   // caret has been changed", "+  private void _updateMachine() {", "+    if (_caretChanged) {", "+      OpenDefinitionsDocument doc = _model.getActiveDocument();", "+      _machine.setDocument(doc.getDocument());", "+      _machine.setStart(doc.getDocument().getCurrentLocation());", "+      _machine.setPosition(doc.getDocument().getCurrentLocation());", "+      _caretChanged = false;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fc6cedcbb7cc8b6b725ad2575de36d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "df472bcb2bf0d8ba296911d59ac250fe6e447811", "commitAfterChange": "896d23e2fc31ecf410625227cad5c5d61f4d6309", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public static Test suite()", "signatureAfterChange": "    public void testRunMainMethod() throws Exception", "diff": ["-   */", "-  public static Test suite() {", "-    return new TestSuite(GlobalModelOtherTest.class);", "-  }", "+", "+  public void testRunMainMethod() throws Exception {", "+    File dir = new File(_tempDir, \"bar\");", "+    dir.mkdir();", "+    File file = new File(dir, \"Foo.java\");", "+    OpenDefinitionsDocument doc = doCompile(FOO_CLASS, file);", "+    doc.runMain();", "+    assertInteractionsContains(\"Foo\");", "+    DefinitionsDocument defDoc = doc.getDocument();", "+    defDoc.insertString(defDoc.getLength(), \" \", null);", "+    doc.runMain();", "+    assertInteractionsContains(DefaultGlobalModel.DOCUMENT_OUT_OF_SYNC_MSG);", "+  }"]}], "num": 28734}