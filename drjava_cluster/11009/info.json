{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3beae8795c5bb3ed82418e96eeb3b001", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "096b85a5e0bab185c9a03af31b1063e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "e2abbf01d6f3b23be51f493f663daa5ce8abf706", "commitAfterChange": "d7bd3eaf7514715e375acabd9bf0f41e4281985a", "methodNumberBeforeChange": 280, "methodNumberAfterChange": 273, "signatureBeforeChange": "      protected boolean inherits(Type child, PredicateSet<MethodInvocationCandidate<I>> childMatches,                                MethodInvocationCandidate<I> match)", "signatureAfterChange": "      protected boolean inherits(Type child, PredicateSet<DJMethod> childMatches, DJMethod match)", "diff": ["-    protected boolean inherits(Type child, PredicateSet<MethodInvocationCandidate<I>> childMatches,", "-                               MethodInvocationCandidate<I> match) {", "+    protected boolean inherits(Type child, PredicateSet<DJMethod> childMatches, DJMethod match) {", "-        for (MethodInvocationCandidate<I> childMethod : childMatches) {", "-          if (childMethod.overrides(match)) { return false; }", "+        for (DJMethod childMethod : childMatches) {", "+          if (overrides(childMethod, match)) { return false; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cabfbd5f30140d73db30a1dd36306070", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "b2adcf09a03ba6f772e2f3c91188d15851dd508c", "commitAfterChange": "8499143d0998c47fe63fae780993858c5e5c249a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void updateData(boolean updateStack)", "signatureAfterChange": "   public void updateData(boolean updateStack)", "diff": ["-        _threads = new Vector<DebugManager.ThreadData>();", "-        _stackFrames = new Vector<DebugManager.StackData>();", "+        _threads = new Vector<DebugThreadData>();", "+        _stackFrames = new Vector<DebugStackData>();", "-      _watches = new Vector<DebugManager.WatchData>();", "-      _threads = new Vector<DebugManager.ThreadData>();", "-      _stackFrames = new Vector<DebugManager.StackData>();", "+      _watches = new Vector<DebugWatchData>();", "+      _threads = new Vector<DebugThreadData>();", "+      _stackFrames = new Vector<DebugStackData>();"]}], "num": 11009}