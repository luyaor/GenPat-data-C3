{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17c89c9a06e6c60f26efbd75b9006c84", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e2599969bb65e449cdc6bed869efffb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionPrevLineStartsWithTest.java", "commitBeforeChange": "5d2701667cf27d44a069ea945e7b8afcad461e22", "commitAfterChange": "0dc9a35e122071847260a9f3f7c5a7bac3c46105", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testStartsWithPrefixWithText() throws BadLocationException", "signatureAfterChange": "   public void testStartsWithPrefixWithText() throws BadLocationException", "diff": ["-    assertTrue(\"line of brace (no space)\", !rule.applyRule(_doc, 2, Indenter.OTHER));", "-    assertTrue(\"line after brace (no space)\", rule.applyRule(_doc, 8, Indenter.OTHER));", "-    assertTrue(\"two lines after brace (no space)\", !rule.applyRule(_doc, 16, Indenter.OTHER));", "+    assertTrue(\"line of brace (no space)\", !rule.applyRule(_doc, 2, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after brace (no space)\", rule.applyRule(_doc, 8, Indenter.IndentReason.OTHER));", "+    assertTrue(\"two lines after brace (no space)\", !rule.applyRule(_doc, 16, Indenter.IndentReason.OTHER));", "-    assertTrue(\"just before star (with space)\", !rule.applyRule(_doc, 4, Indenter.OTHER));", "-    assertTrue(\"just after star (with space)\", !rule.applyRule(_doc, 6, Indenter.OTHER));", "-    assertTrue(\"line after star (with space)\", rule.applyRule(_doc, 16, Indenter.OTHER));", "+    assertTrue(\"just before star (with space)\", !rule.applyRule(_doc, 4, Indenter.IndentReason.OTHER));", "+    assertTrue(\"just after star (with space)\", !rule.applyRule(_doc, 6, Indenter.IndentReason.OTHER));", "+    assertTrue(\"line after star (with space)\", rule.applyRule(_doc, 16, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "531bc1b97b02bc614f743390630fe35e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithTest.java", "commitBeforeChange": "5d2701667cf27d44a069ea945e7b8afcad461e22", "commitAfterChange": "0dc9a35e122071847260a9f3f7c5a7bac3c46105", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testMultCharPrefix() throws BadLocationException", "signatureAfterChange": "   public void testMultCharPrefix() throws BadLocationException", "diff": ["-    assertTrue(\"first line, beginning\", rule.applyRule(_doc, 0, Indenter.OTHER));", "-    assertTrue(\"first line, mid\", rule.applyRule(_doc, 6, Indenter.OTHER));", "-    assertTrue(\"first line, end\", rule.applyRule(_doc, 13, Indenter.OTHER));", "-    assertTrue(\"second line, beginning\", !rule.applyRule(_doc, 14, Indenter.OTHER));", "-    assertTrue(\"second line, mid\", !rule.applyRule(_doc, 18, Indenter.OTHER));", "-    assertTrue(\"second line, end\", !rule.applyRule(_doc, 21, Indenter.OTHER));", "+    assertTrue(\"first line, beginning\", rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"first line, mid\", rule.applyRule(_doc, 6, Indenter.IndentReason.OTHER));", "+    assertTrue(\"first line, end\", rule.applyRule(_doc, 13, Indenter.IndentReason.OTHER));", "+    assertTrue(\"second line, beginning\", !rule.applyRule(_doc, 14, Indenter.IndentReason.OTHER));", "+    assertTrue(\"second line, mid\", !rule.applyRule(_doc, 18, Indenter.IndentReason.OTHER));", "+    assertTrue(\"second line, end\", !rule.applyRule(_doc, 21, Indenter.IndentReason.OTHER));"]}], "num": 410}