{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "349c413bd5d434e1e86f1fef555c4069", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a2b3f6137d730b34539e68b97f74e07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JPDADebugger(DefaultGlobalModel model)", "signatureAfterChange": "   public JPDADebugger(DefaultGlobalModel model)", "diff": ["-    _watches = new Vector<DebugWatchData>();", "+    ", "-    _pendingRequestManager = new PendingRequestManager(this);", "-    _watchListener = new DummyGlobalModelListener() {", "+    _watchListener = new DummyInteractionsListener() {", "-        try {", "-          _updateWatches();", "-        }", "-        catch(DebugException de) {", "-          _log(\"couldn't update watches\", de);", "-        }", "+        try { _updateWatches(); }", "+        catch(DebugException de) { _log(\"couldn't update watches\", de); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c97c448e18135f5757cf8b3dab4f2e74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "7b90d9227a34693633b434e1d2773067e65a70e5", "commitAfterChange": "1b1a2ff927caf38a8f2ba21780232fcbeb4319bb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   protected String interpret(String input) throws DocumentAdapterException", "signatureAfterChange": "   protected String interpret(String input) throws DocumentAdapterException", "diff": ["-    _model.interpretCurrentInteraction();", "-", "-    // wait for interpret over", "-    while (listener.interactionEndCount == 0) {", "+    try {", "-        try {", "-          listener.wait();", "-        }", "-        catch (InterruptedException ie) {", "-          throw new UnexpectedException(ie);", "-        }", "+        _model.interpretCurrentInteraction();", "+        listener.wait();", "-", "+    catch (InterruptedException ie) {", "+      throw new UnexpectedException(ie);", "+    }"]}], "num": 10095}