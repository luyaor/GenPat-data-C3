{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b81d13f74f78f3b2ee3ff705f872779", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47b63ecd348d9936ac52e54a96994567", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtilTest.java", "commitBeforeChange": "fb074680a667c1bef445c8882705c591e6d2e32a", "commitAfterChange": "cf20ebf3ed8f70fab233d795a534c6fbf0907d4b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testCharSequenceIterable()", "signatureAfterChange": "      public void testCharSequenceIterable()", "diff": ["-    assertTrue(iter.hasNext());", "-    assertEquals('H', iter.next());", "-    assertTrue(iter.hasNext());", "-    assertEquals('a', iter.next());", "-    assertTrue(iter.hasNext());", "-    assertEquals('p', iter.next());", "-    assertTrue(iter.hasNext());", "-    assertEquals('p', iter.next());", "-    assertTrue(iter.hasNext());", "-    assertEquals('y', iter.next());", "-    assertTrue(iter.hasNext());", "-    assertEquals(' ', iter.next());", "-    assertTrue(iter.hasNext());", "-    assertEquals('d', iter.next());", "-    assertTrue(iter.hasNext());", "-    assertEquals('a', iter.next());", "-    assertTrue(iter.hasNext());", "-    assertEquals('y', iter.next());", "-    assertFalse(iter.hasNext());", "+    assertIterator(iter, 'H', 'a', 'p', 'p', 'y', ' ', 'd', 'a', 'y');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a1b85848d0e6eecee0689a8703b20cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtilTest.java", "commitBeforeChange": "fb074680a667c1bef445c8882705c591e6d2e32a", "commitAfterChange": "cf20ebf3ed8f70fab233d795a534c6fbf0907d4b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public void testArrayIterable()", "signatureAfterChange": "    public void testArrayIterable()", "diff": ["-    assertTrue(intIter.hasNext());", "-    assertEquals(1, intIter.next());", "-    assertTrue(intIter.hasNext());", "-    assertEquals(1, intIter.next());", "-    assertTrue(intIter.hasNext());", "-    assertEquals(2, intIter.next());", "-    assertTrue(intIter.hasNext());", "-    assertEquals(3, intIter.next());", "-    assertTrue(intIter.hasNext());", "-    assertEquals(5, intIter.next());", "-    assertFalse(intIter.hasNext());", "+    assertIterator(intIter, 1, 1, 2, 3, 5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca34fd06675e1d1dfaf16473e34b14df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ReflectUtilTest.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public void testStaticMethodLambdas()", "signatureAfterChange": "         public void testStaticMethodLambdas()", "diff": ["-    assertTrue(p1.value(null));", "+    assertTrue(p1.contains(null));", "-    assertFalse(p2.value(null));", "+    assertFalse(p2.contains(null));", "-    assertFalse(p3.value(null));", "+    assertFalse(p3.contains(null));", "-    assertTrue(p4.value(null));", "+    assertTrue(p4.contains(null));", "-    assertTrue(p5.value(null));", "+    assertTrue(p5.contains(null));", "-    assertFalse(p6.value(null));", "+    assertFalse(p6.contains(null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6d6c28cbeec68abd9473ad4901f2750", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsListTest.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testIsEmpty()", "signatureAfterChange": "      public void testIsEmpty()", "diff": ["-    assertTrue(isEmpty(emptyStrings));", "-    assertFalse(isEmpty(singletonStrings));", "-    assertFalse(isEmpty(twoStrings));", "-    assertFalse(isEmpty(threeStrings));", "+    assertTrue(emptyStrings.isEmpty());", "+    assertFalse(singletonStrings.isEmpty());", "+    assertFalse(twoStrings.isEmpty());", "+    assertFalse(threeStrings.isEmpty());", "-    assertTrue(isEmpty(emptyNumbers));", "-    assertFalse(isEmpty(singletonNumbers));", "-    assertFalse(isEmpty(twoNumbers));", "-    assertFalse(isEmpty(threeNumbers));", "+    assertTrue(emptyNumbers.isEmpty());", "+    assertFalse(singletonNumbers.isEmpty());", "+    assertFalse(twoNumbers.isEmpty());", "+    assertFalse(threeNumbers.isEmpty());"]}], "num": 11254}