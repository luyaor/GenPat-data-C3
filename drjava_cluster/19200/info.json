{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59c7e98cf0ea1b5e7fc6a1fc878261d1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a74fb09db819fbd3e01a9666497b824", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "224d0c84f840f8ce41af8c46df98c9446d0323a9", "commitAfterChange": "23d1c475c29f1525fd3971f7ee4a6f8e9616fd8a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void interpretCurrentInteraction()", "signatureAfterChange": "   public void interpretCurrentInteraction()", "diff": ["-          throw  new RuntimeException(t.toString());", "+          throw new RuntimeException(t.toString());", "+      }", "+", "+      _interactionsDoc.prompt();", "+    }", "+    catch (ExitingNotAllowedException e) {", "+      try {", "+        _interactionsDoc.insertString(_interactionsDoc.getLength(),", "+                                      \"\\n\" + EXIT_CALLED_MESSAGE,", "+                                      null);", "+      }", "+      catch (BadLocationException ble) {", "+        throw new UnexpectedException(ble);", "-      } catch (BadLocationException willNeverHappen) {}", "+      }", "+      catch (BadLocationException ble) {", "+        throw new UnexpectedException(ble);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cf4d2c5b5a99b5d1e3a22516abfb380", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "1acb63fa1c578959b54f9766299c6e0a8865f601", "commitAfterChange": "fa78ee7a06602f123abf33b8aef0005c93bb3efa", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "signatureAfterChange": "   public static void saveFile(FileSaver fileSaver) throws IOException", "diff": ["-      } catch (FileNotFoundException fnfe) {", "-        if (fileSaver.continueWhenTempFileCreationFails()){", "+      } ", "+      catch (FileNotFoundException fnfe) {", "+        if (fileSaver.continueWhenTempFileCreationFails()) {", "-        } else {", "-          throw new IOException(\"Could not create temp file \" + tempFile +", "-                                \" in attempt to save \" + file);", "-        }", "+        } ", "+        else throw new IOException(\"Could not create temp file \" + tempFile + \" in attempt to save \" + file);", "-      if (tempFileUsed && !renameFile(tempFile, file)) {", "+      if (tempFileUsed && !renameFile(tempFile, file))", "-      }"]}], "num": 19200}