{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "468a50de2b34aae68c38ed6c88a52e25", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59a1a3dc6b26a39510da3bdee16a49a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "f9b0aacda7d0b19ff2541b10e4df48c67eef3bf5", "commitAfterChange": "51d1f2e57f80c21afa7918fd2fa925d58d67589d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public static String replaceVariables(String str, PropertyMaps props, Lambda<String,DrJavaProperty> getter)", "signatureAfterChange": "   public static String replaceVariables(String str, PropertyMaps props, Lambda<String,DrJavaProperty> getter)", "diff": ["-    BalancingStreamTokenizer tok = new BalancingStreamTokenizer(new StringReader(str), '\\\\');", "+    BalancingStreamTokenizer tok = new BalancingStreamTokenizer(new StringReader(str), '$');", "-                  BalancingStreamTokenizer atok = new BalancingStreamTokenizer(new StringReader(attrList), '\\\\');", "+                  BalancingStreamTokenizer atok = new BalancingStreamTokenizer(new StringReader(attrList), '$');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97b14916d6b2e372a1c2a69946a8c653", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtilTest.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testCharSequenceIterable()", "signatureAfterChange": "      public void testCharSequenceIterable()", "diff": ["-    assertTrue(isEmpty(charSequenceIterable(\"\")));", "+    assertTrue(isEmpty(asIterable(\"\")));", "-    Iterator<Character> iter = charSequenceIterable(\"Happy day\").iterator();", "+    Iterator<Character> iter = asIterable(\"Happy day\").iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4c027d379cbaf5ca3c6549bff0396da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtilTest.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testReaderIterable()", "signatureAfterChange": "      public void testReaderAsIterator()", "diff": ["-  public void testReaderIterable() {", "-    assertTrue(isEmpty(readerIterable(new StringReader(\"\"))));", "+  public void testReaderAsIterator() {", "+    assertFalse(asIterator(new StringReader(\"\")).hasNext());", "-    Iterator<Character> iter = readerIterable(new StringReader(\"Foo\")).iterator();", "+    Iterator<Character> iter = asIterator(new StringReader(\"Foo\"));"]}], "num": 5841}