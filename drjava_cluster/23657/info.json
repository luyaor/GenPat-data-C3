{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6386f5c6b53177ca47d264b8d8c80f7f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39560e257a477ed254ab616736deb630", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void xtestJUnitAllWithNoErrors() throws Exception", "signatureAfterChange": "   public void testJUnitAllWithNoErrors() throws Exception", "diff": ["-   */", "-  public void xtestJUnitAllWithNoErrors() throws Exception {", "-    OpenDefinitionsDocument doc = setupDocument(NON_TESTCASE_TEXT);", "-    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "-    File file = new File(_tempDir, \"NonTestCase.java\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "-    doc = setupDocument(MONKEYTEST_PASS_TEXT);", "-    file = new File(_tempDir, \"MonkeyTestPass.java\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "-    _model.addListener(listener);", "-    synchronized (listener) {", "-      _model.getJUnitModel().junitAll();", "-      listener.wait();", "-    }", "-    listener.assertNonTestCaseCount(0);", "-    listener.assertJUnitSuiteStartedCount(1);", "-    listener.assertJUnitTestStartedCount(1);", "-    listener.assertJUnitTestEndedCount(1);", "-    _model.removeListener(listener);", "-", "-    listener = new JUnitNonTestListener(true);", "-    doc = setupDocument(HAS_MULTIPLE_TESTS_PASS_TEXT);", "-    file = new File(_tempDir, \"HasMultipleTestsPass.java\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "-    _model.addListener(listener);", "-    synchronized (listener) {", "-      _model.getJUnitModel().junitAll();", "-      listener.wait();", "-    }", "-    listener.assertNonTestCaseCount(0);", "-    listener.assertJUnitSuiteStartedCount(1);", "-    listener.assertJUnitTestStartedCount(3);", "-    listener.assertJUnitTestEndedCount(3);", "-    _model.removeListener(listener);", "-  }", "+  /** Tests that junit all works with one or two test cases that should pass. */", "+  public void testJUnitAllWithNoErrors() throws Exception {", "+    OpenDefinitionsDocument doc = setupDocument(NON_TESTCASE_TEXT);", "+    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "+    File file = new File(_tempDir, \"NonTestCase.java\");", "+    doc.saveFile(new FileSelector(file));", "+    doc.startCompile();", "+    doc = setupDocument(MONKEYTEST_PASS_TEXT);", "+    file = new File(_tempDir, \"MonkeyTestPass.java\");", "+    doc.saveFile(new FileSelector(file));", "+    doc.startCompile();", "+    _model.addListener(listener);", "+    ", "+    _runJUnit();", "+    ", "+    listener.assertNonTestCaseCount(0);", "+    listener.assertJUnitSuiteStartedCount(1);", "+    listener.assertJUnitTestStartedCount(1);", "+    listener.assertJUnitTestEndedCount(1);", "+    _model.removeListener(listener);", "+", "+    listener = new JUnitNonTestListener(true);", "+    doc = setupDocument(HAS_MULTIPLE_TESTS_PASS_TEXT);", "+    file = new File(_tempDir, \"HasMultipleTestsPass.java\");", "+    doc.saveFile(new FileSelector(file));", "+    doc.startCompile();", "+    _model.addListener(listener);", "+    ", "+    _runJUnit();", "+    ", "+    listener.assertNonTestCaseCount(0);", "+    listener.assertJUnitSuiteStartedCount(1);", "+    listener.assertJUnitTestStartedCount(3);", "+    listener.assertJUnitTestEndedCount(3);", "+    _model.removeListener(listener);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7688c4b5c46cd9314b4b8f8dc6194c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testJUnitAllWithNoValidTests() throws Exception", "signatureAfterChange": "   public void testJUnitAllWithNoValidTests() throws Exception", "diff": ["-   */", "-  public void testJUnitAllWithNoValidTests() throws Exception {", "-    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "-    _model.addListener(listener);", "-    synchronized (listener) {", "-      _model.getJUnitModel().junitAll();", "-      listener.wait();", "-    }", "-    listener.assertNonTestCaseCount(1);", "-    listener.assertJUnitSuiteStartedCount(0);", "-    listener.assertJUnitTestStartedCount(0);", "-    listener.assertJUnitTestEndedCount(0);", "-    _model.removeListener(listener);", "-", "-    OpenDefinitionsDocument doc = setupDocument(NON_TESTCASE_TEXT);", "-    listener = new JUnitNonTestListener(true);", "-    File file = new File(_tempDir, \"NonTestCase.java\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "-    doc = setupDocument(MONKEYTEST_PASS_TEXT);", "-    file = new File(_tempDir, \"MonkeyTestPass.java\");", "-    doc.saveFile(new FileSelector(file));", "-    _model.addListener(listener);", "-    synchronized (listener) {", "-      _model.getJUnitModel().junitAll();", "-      listener.wait();", "-    }", "-    listener.assertNonTestCaseCount(1);", "-    listener.assertJUnitSuiteStartedCount(0);", "-    listener.assertJUnitTestStartedCount(0);", "-    listener.assertJUnitTestEndedCount(0);", "-    _model.removeListener(listener);", "-  }", "+  /** Verifies that we get a nonTestCase event */", "+  public void testJUnitAllWithNoValidTests() throws Exception {", "+    ", "+    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "+    _model.addListener(listener);", "+    ", "+    _runJUnit();", "+    ", "+    listener.assertNonTestCaseCount(1);", "+    listener.assertJUnitSuiteStartedCount(0);", "+    listener.assertJUnitTestStartedCount(0);", "+    listener.assertJUnitTestEndedCount(0);", "+    _model.removeListener(listener);", "+", "+    OpenDefinitionsDocument doc = setupDocument(NON_TESTCASE_TEXT);", "+    listener = new JUnitNonTestListener(true);", "+    File file = new File(_tempDir, \"NonTestCase.java\");", "+    doc.saveFile(new FileSelector(file));", "+    doc.startCompile();", "+    doc = setupDocument(MONKEYTEST_PASS_TEXT);", "+    file = new File(_tempDir, \"MonkeyTestPass.java\");", "+    doc.saveFile(new FileSelector(file));", "+    _model.addListener(listener);", "+    ", "+    _runJUnit();", "+ ", "+    listener.assertNonTestCaseCount(1);", "+    listener.assertJUnitSuiteStartedCount(0);", "+    listener.assertJUnitTestStartedCount(0);", "+    listener.assertJUnitTestEndedCount(0);", "+    _model.removeListener(listener);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9da65b6e8716c1a663de53728112a37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void xtestJUnitAllWithErrors() throws Exception", "signatureAfterChange": "   public void testJUnitAllWithErrors() throws Exception", "diff": ["-   */", "-  public void xtestJUnitAllWithErrors() throws Exception {", "-    OpenDefinitionsDocument doc = setupDocument(MONKEYTEST_ERROR_TEXT);", "-    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "-    File file = new File(_tempDir, \"MonkeyTestError.java\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "-    doc = setupDocument(MONKEYTEST_FAIL_TEXT);", "-    file = new File(_tempDir, \"MonkeyTestFail.java\");", "-    doc.saveFile(new FileSelector(file));", "-    doc.startCompile();", "-    _model.addListener(listener);", "-    synchronized (listener) {", "-      _model.getJUnitModel().junitAll();", "-      listener.wait();", "-    }", "-    listener.assertNonTestCaseCount(0);", "-    listener.assertJUnitSuiteStartedCount(1);", "-    listener.assertJUnitTestStartedCount(2);", "-    listener.assertJUnitTestEndedCount(2);", "-    _model.removeListener(listener);", "-", "-    JUnitErrorModel jem = _model.getJUnitModel().getJUnitErrorModel();", "-    assertEquals(\"test case has one error reported\", 2, jem.getNumErrors());", "-    ", "-    assertTrue(\"first error should be an error\", jem.getError(0).isWarning());", "-    assertFalse(\"second error should be a failure\", jem.getError(1).isWarning());", "-  }", "+  /** Tests that junit all works with test cases that do not pass. */", "+  public void testJUnitAllWithErrors() throws Exception {", "+    OpenDefinitionsDocument doc = setupDocument(MONKEYTEST_ERROR_TEXT);", "+    JUnitNonTestListener listener = new JUnitNonTestListener(true);", "+    File file = new File(_tempDir, \"MonkeyTestError.java\");", "+    doc.saveFile(new FileSelector(file));", "+    doc.startCompile();", "+    doc = setupDocument(MONKEYTEST_FAIL_TEXT);", "+    file = new File(_tempDir, \"MonkeyTestFail.java\");", "+    doc.saveFile(new FileSelector(file));", "+    doc.startCompile();", "+    _model.addListener(listener);", "+    ", "+    _runJUnit();", "+    ", "+    listener.assertNonTestCaseCount(0);", "+    listener.assertJUnitSuiteStartedCount(1);", "+    listener.assertJUnitTestStartedCount(2);", "+    listener.assertJUnitTestEndedCount(2);", "+    _model.removeListener(listener);", "+", "+    JUnitErrorModel jem = _model.getJUnitModel().getJUnitErrorModel();", "+    assertEquals(\"test case has one error reported\", 2, jem.getNumErrors());", "+    ", "+    assertTrue(\"first error should be an error\", jem.getError(0).isWarning());", "+    assertFalse(\"second error should be a failure\", jem.getError(1).isWarning());", "+  }"]}], "num": 23657}