{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cdcc4e70ad07a1b2c8b41107c2e7f408", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0b0b87f6738e3b8780afda60465c8d2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "734866577ba652e258c158eef25bcbc68a43749a", "commitAfterChange": "06c097879b27ffb8ca08a54a4961265ba5907f07", "methodNumberBeforeChange": 298, "methodNumberAfterChange": 296, "signatureBeforeChange": "     public FunctionInvocationCandidate<DJMethod>         findSingleMethod(Type t, Iterable<? extends Type> targs, Iterable<? extends Expression> args,                          Option<Type> expected) throws UnmatchedLookupException", "signatureAfterChange": "     public FunctionInvocationCandidate<DJMethod>         findSingleMethod(Type t, Iterable<? extends Type> targs, Iterable<? extends Expression> args,                          Option<Type> expected) throws UnmatchedLookupException", "diff": ["-      if (_name.equals(\"entrySet\")) {", "-        Type foo = candidates.iterator().next().returnType();", "-      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5ec60354440a6c7e1e7925175cf62ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "ede26ceaad5c407d940ac773a5e7f457dc1f5187", "commitAfterChange": "734866577ba652e258c158eef25bcbc68a43749a", "methodNumberBeforeChange": 297, "methodNumberAfterChange": 298, "signatureBeforeChange": "     public FunctionInvocationCandidate<DJMethod>         findSingleMethod(Type t, Iterable<? extends Type> targs, Iterable<? extends Expression> args,                          Option<Type> expected) throws UnmatchedLookupException", "signatureAfterChange": "     public FunctionInvocationCandidate<DJMethod>         findSingleMethod(Type t, Iterable<? extends Type> targs, Iterable<? extends Expression> args,                          Option<Type> expected) throws UnmatchedLookupException", "diff": ["+      if (_name.equals(\"entrySet\")) {", "+        Type foo = candidates.iterator().next().returnType();", "+      }"]}], "num": 9032}