{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eeb28079f674db6d3450c6ad32694fec", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "243098e94813cb52420ad885b6c78924", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "33fc3d467fee5f4de09286fa1079029cb22ee327", "commitAfterChange": "ca0d74addfd439eb6314fb8167978328b41eb16f", "methodNumberBeforeChange": 712, "methodNumberAfterChange": 712, "signatureBeforeChange": "     public boolean shouldRevertFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public boolean shouldRevertFile(OpenDefinitionsDocument doc)", "diff": ["-      String text = fname + \" has changed on disk. Would you like to reload it?\\n\" + ", "-        \"This will discard any changes you have made.\";", "-      int rc = JOptionPane.showConfirmDialog(MainFrame.this, text, fname + \" Modified on Disk\", ", "-                                             JOptionPane.YES_NO_OPTION);", "+      String text = fname + \" has changed on disk.\\n\" + ", "+        \"Would you like to reload it and discard any changes you have made?\";", "+      String[] options = { \"Reload from disk\", \"Keep my changes\" };", "+      int rc = JOptionPane.showOptionDialog(MainFrame.this, text, fname + \" Modified on Disk\", ", "+                                            JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,", "+                                            null, options, options[0]);", "-        case JOptionPane.YES_OPTION:    return true;", "-        case JOptionPane.NO_OPTION:     return false;", "+        case 0:                         return true;", "+        case 1:                         return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fdb5f7cfddb6de3766cf7b4df3c2f50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/MainFrame.java", "commitBeforeChange": "1a9af627ea69f691af32f9a422290b5017b0703d", "commitAfterChange": "8d34579e0c7e80db1371da26e8172a594bf3d48e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Action getSaveAction()", "signatureAfterChange": "      public void actionPerformed(ActionEvent ae)", "diff": ["-", "-\tpublic Action getSaveAction() {", "-\t\treturn _saveAction;", "-\t}", "+", "+    public void actionPerformed(ActionEvent ae)", "+    {", "+      boolean modified = _definitionsView.modifiedSinceSave();", "+", "+      if (modified) {", "+        // file was not saved -- tell user they must save before compiling", "+        String msg = \"The definitions must be saved before compiling. \" + ", "+                     \"Would you like to save and compile now?\";", "+        int rc = JOptionPane.showConfirmDialog(MainFrame.this,", "+                                               msg,", "+                                               \"File not saved\",", "+                                               JOptionPane.YES_NO_OPTION);", "+        if (rc == JOptionPane.YES_OPTION) {", "+\t    save();", "+          // Check if they cancelled the save. If they did, exit!", "+          if (_definitionsView.modifiedSinceSave()) {", "+            return;", "+          }", "+        }", "+        else {", "+          return; // user wants to do nothing", "+        }", "+      }", "+      compile();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "916a78444dd8193e4e018112d10ddaad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1a9af627ea69f691af32f9a422290b5017b0703d", "commitAfterChange": "8d34579e0c7e80db1371da26e8172a594bf3d48e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Action getSaveAction()", "signatureAfterChange": "      public void actionPerformed(ActionEvent ae)", "diff": ["-", "-\tpublic Action getSaveAction() {", "-\t\treturn _saveAction;", "-\t}", "+", "+    public void actionPerformed(ActionEvent ae)", "+    {", "+      boolean modified = _definitionsView.modifiedSinceSave();", "+", "+      if (modified) {", "+        // file was not saved -- tell user they must save before compiling", "+        String msg = \"The definitions must be saved before compiling. \" + ", "+                     \"Would you like to save and compile now?\";", "+        int rc = JOptionPane.showConfirmDialog(MainFrame.this,", "+                                               msg,", "+                                               \"File not saved\",", "+                                               JOptionPane.YES_NO_OPTION);", "+        if (rc == JOptionPane.YES_OPTION) {", "+\t    save();", "+          // Check if they cancelled the save. If they did, exit!", "+          if (_definitionsView.modifiedSinceSave()) {", "+            return;", "+          }", "+        }", "+        else {", "+          return; // user wants to do nothing", "+        }", "+      }", "+      compile();", "+    }"]}], "num": 12736}