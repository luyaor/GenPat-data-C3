{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5d960fbf3411032708a671a778523a7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1204ce108f674bc4b6964c74393ab278", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testInteractionAbort() throws BadLocationException, EditDocumentException, InterruptedException,      IOException", "signatureAfterChange": "   public void testInteractionAbort() throws BadLocationException, EditDocumentException, InterruptedException,      IOException", "diff": ["-    final String beforeAbort = interpret(\"DrJavaTestFoo.class.getName()\");", "+    ", "+    Utilities.clearEventQueue();", "+", "+    final String beforeAbort = interpret(\"DrJavaTestFoo.class.getName()\"); /* interpret(\"17\"); */", "+    ", "+    ", "+    Utilities.clearEventQueue();", "-    TestListener listener = new TestListener() {", "-      public void interactionStarted() {", "-        interactionStartCount++;", "-      }", "-", "-      public void interactionEnded() {", "-        // this can only happen on the second interpretation!", "-//        assertInteractionStartCount(2);", "-        interactionEndCount++;", "-      }", "-", "-      public void interpreterResetting() {", "-//        assertInteractionStartCount(1);", "-//        assertInterpreterExitedCount(0);", "-//        assertInterpreterReadyCount(0);", "-        interpreterResettingCount++;", "-      }", "-", "-      public void interpreterReady(File wd) {", "-        synchronized(_resetDoneLock) {", "-//          assertInteractionStartCount(1);", "-//          assertInterpreterExitedCount(0);", "-//          assertInterpreterResettingCount(1);", "-          interpreterReadyCount++;", "-          _resetDone = true;", "-          _resetDoneLock.notify();", "-        }", "-      }", "-", "-      public void consoleReset() { consoleResetCount++; }", "-    };", "+    InteractionListener listener = new InteractionListener();", "-    _resetDone = false;", "-    synchronized(_resetDoneLock) {", "-      interpretIgnoreResult(\"while (true) {}\");", "-      ", "-      Utilities.clearEventQueue();", "-      listener.assertInteractionStartCount(1);", "-      _model.resetInteractions(FileOption.NULL_FILE);", "-      _resetDoneLock.wait();", "-    }", "+    listener.logInteractionStart();", "+    interpretIgnoreResult(\"while (true) {}\");", "+    ", "+    listener.assertInteractionStartCount(1);", "+    _model.resetInteractions(FileOption.NULL_FILE);", "+    listener.waitResetDone();", "+    ", "+    Utilities.clearEventQueue();", "+", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41be88e70410789bd5c22b4c24b6ea3a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testExitInteractions() throws EditDocumentException, InterruptedException", "signatureAfterChange": "   public void testExitInteractions() throws EditDocumentException, InterruptedException", "diff": ["-    TestListener listener = new TestListener() {", "-      public void interactionStarted() {", "-//        Utilities.showDebug(\"GlobalModelOtherTest: interaction Started\");", "-        interactionStartCount++;", "-      }", "+    InteractionListener listener = new InteractionListener() {", "-      public void interpreterExited(int status) {", "-//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterExited\");", "-//        assertInteractionStartCount(1);", "-//        assertInterpreterResettingCount(0);", "-        interpreterExitedCount++;", "-//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterExitedCount = \" + interpreterExitedCount);", "-        lastExitStatus = status;", "-      }", "-", "-      public void interpreterResetting() {", "-//        assertInteractionStartCount(1);", "-//        assertInterpreterExitedCount(1);", "-//        assertInterpreterReadyCount(0);", "-        interpreterResettingCount++;", "-//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterResetting\");", "-      }", "-", "-      public void interpreterReady(File wd) {", "-//        Utilities.showDebug(\"GlobalModelOtherTest: interpreterReady\");", "-        synchronized(_resetDoneLock) {", "-//          assertInteractionStartCount(1);", "-//          assertInterpreterExitedCount(1);", "-//          assertInterpreterResettingCount(1);", "-          interpreterReadyCount++;", "-//          Utilities.showDebug(\"GlobalModelOtherTest: notifying resetDone\");", "-          _resetDone = true;", "-          _resetDoneLock.notify();", "-        }", "-      }", "-      ", "-    _resetDone = false;", "-    synchronized(_resetDoneLock) {", "-//      Utilities.showDebug(\"GlobalModelOtherTest: interpreting System.exit(23)\");", "-      interpretIgnoreResult(\"System.exit(23);\");", "-//      _model.resetInteractions();", "-//      Utilities.showDebug(\"GlobalModelOtherTest: waiting on resetDone\");", "-      while (! _resetDone) { _resetDoneLock.wait(); }", "-    }", "+", "+    listener.logInteractionStart();", "+    interpretIgnoreResult(\"System.exit(23);\"); ", "+    listener.waitInteractionDone();", "+    listener.waitResetDone();", "+    Utilities.clearEventQueue();", "+      ", "-    assertEquals(\"exit status\", 23, listener.lastExitStatus);", "-//    Utilities.showDebug(\"GlobalModelOtherTest: exitInteractions finished\");", "+    assertEquals(\"exit status\", 23, listener.getLastExitStatus());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eeef0b955a7215f0edc421ca83be183", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testInfiniteLoop() throws Exception", "signatureAfterChange": "   public void testInfiniteLoop() throws Exception", "diff": ["-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(false);", "-    TestListener listener2 = new TestListener() {", "-      public void junitStarted() {", "-//        assertEquals(\"Documents don't match\", doc, odds.get(0));", "-        junitStartCount++;", "-      }", "+    JUnitTestListener listener = new JUnitTestListener(false) {", "-//        Utilities.show(\"junitSuiteStarted called\");", "-        junitSuiteStartedCount++;", "+        synchronized(this) { junitSuiteStartedCount++; }", "-      public void junitTestStarted(String name) {", "-        assertEquals(\"running wrong test\", \"testInfinite\", name);", "-        junitTestStartedCount++;", "-      }", "-      public void junitEnded() {", "-//        System.err.println(\"InterpreterReadyCount after reset = \" + interpreterReadyCount);", "-        // assertInterpreterReadyCount(1);  // not true if testing is aborted", "-        junitEndCount++;", "-        synchronized(_junitLock) {", "-          _junitDone = true;", "-          _junitLock.notify();", "-        }", "-      }", "-      public void interpreterResetting() {", "-        assertInterpreterReadyCount(0);", "-        interpreterResettingCount++;", "-      }", "-      public void interpreterReady(File wd) {", "-        assertInterpreterResettingCount(1);", "-        assertJUnitEndCount(0);", "-        interpreterReadyCount++;", "-      }", "-      ", "-      public void consoleReset() { consoleResetCount++; }", "+", "-    if (printMessages) System.out.println(\"before compile\");", "-    doc.startCompile();", "+    listener.compile(doc);", "+    ", "+    _log.log(\"Compilation of infinite loop completed\");", "+    ", "-    if (printMessages) System.out.println(\"after compile\");", "-    _model.removeListener(listener);", "-    _model.addListener(listener2);", "+", "+//    _model.removeListener(listener);", "+//    ", "+//    _model.addListener(listener2);", "-    _logJUnitStart();", "+    listener.logJUnitStart();", "-//      Utilities.show(\"startJUnit being called\");", "+      _log.log(\"startJUnit being called\");", "-      _waitJUnitDone();", "+      listener.waitJUnitDone();", "-    catch (UnexpectedException e) { /* Expected behavior for this test */ }", "+    catch (Exception e) { /* Expected behavior for this test */ }", "+    ", "+    listener.waitResetDone();  // reset should occur when test suite is started", "-    listener2.assertJUnitStartCount(1);", "-    _model.removeListener(listener2);", "-    listener2.assertJUnitEndCount(1);", "+    listener.assertJUnitStartCount(1);", "+    _model.removeListener(listener);", "+    listener.assertJUnitEndCount(1);", "+    _log.log(\"testInfiniteLoop completed\");"]}], "num": 17879}