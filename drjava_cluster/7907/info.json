{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5af2899eaa711c4b1cad5d384258ea8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "726e5bf38f4afeb10e14f812be9b9224", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 269, "signatureBeforeChange": "   public static <T> Lambda4<Object, Object, Object, Object, T> valueLambda4(final T val)", "signatureAfterChange": "     public ThunkRunnable(Thunk<?> t)", "diff": ["-  /** @return  A {@link Lambda4} whose result is always {@code val} */", "-  public static <T> Lambda4<Object, Object, Object, Object, T> valueLambda4(final T val) {", "-    return new Lambda4<Object, Object, Object, Object, T>() { ", "-      public T value(Object arg1, Object arg2, Object arg3, Object arg4) { return val; }", "-    };", "+    private final Thunk<?> _t;", "+    public ThunkRunnable(Thunk<?> t) { _t = t; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dca2de4469aa263c43f9b0ddd9eb2071", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 226, "signatureBeforeChange": "   public static <T> Lambda3<Object, Object, Object, T> valueLambda3(final T val)", "signatureAfterChange": "     public NegationPredicate4(Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p)", "diff": ["-  /** @return  A {@link Lambda3} whose result is always {@code val} */", "-  public static <T> Lambda3<Object, Object, Object, T> valueLambda3(final T val) {", "-    return new Lambda3<Object, Object, Object, T>() { ", "-      public T value(Object arg1, Object arg2, Object arg3) { return val; }", "-    };", "+    private final Predicate4<? super T1, ? super T2, ? super T3, ? super T4> _p;", "+    public NegationPredicate4(Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p) { _p = p; }"]}], "num": 7907}