{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4370e9daa634b4923c0a7d825d78d55d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fb85ca9dc60b14e37669273b2a51873", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/MovingDocumentRegion.java", "commitBeforeChange": "ae443ba61aae036767efae485582e591ba7ac6b0", "commitAfterChange": "3d4c01f25680b3cdf3ea4a15c4351cb56ab5c8db", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r   public boolean equals(Object other)", "signatureAfterChange": "   public boolean equals(Object other)", "diff": ["-  /** @return true if the specified region is equal to this one. */\r", "-  public boolean equals(Object other) {\r", "-    if ((other == null) || ! (other instanceof MovingDocumentRegion)) return false;\r", "-    MovingDocumentRegion o = (MovingDocumentRegion)other;\r", "-    return (((_doc == null && o._doc == null) || _doc.equals(o._doc)) &&\r", "-            ((_file == null && o._file == null) || _file.equals(o._file)) &&\r", "-            _startPosition.getOffset() == o._startPosition.getOffset() &&\r", "-            _endPosition.getOffset() == o._endPosition.getOffset() &&\r", "-            _string.equals(o._string));\r", "-  }\r", "+  /** @return true if the specified region is equal to this one. */", "+  public boolean equals(Object other) {", "+    if ((other == null) || ! (other instanceof MovingDocumentRegion)) return false;", "+    @SuppressWarnings(\"unchecked\") MovingDocumentRegion o = (MovingDocumentRegion)other;", "+    if ((_doc == null && o._doc != null) ||", "+        (_doc != null && o._doc == null)) return false;", "+    if ((_file == null && o._file != null) ||", "+        (_file != null && o._file == null)) return false;", "+    return (((_doc == null && o._doc == null) || _doc.equals(o._doc)) &&", "+            ((_file == null && o._file == null) || _file.equals(o._file)) &&", "+            _startPosition.getOffset() == o._startPosition.getOffset() &&", "+            _endPosition.getOffset() == o._endPosition.getOffset() &&", "+            _string.equals(o._string));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7574dee63531566ac1e719aa117ac2dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartAfterOpenBrace.java", "commitBeforeChange": "7514c1680e1d7e2676a0d61c09ad444070ccaf0d", "commitAfterChange": "5855aafbaf5a76e18e2b0e646fcf0b45b64b1fe3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(DefinitionsDocument doc)", "signatureAfterChange": "   boolean applyRule(DefinitionsDocument doc)", "diff": ["-    char c;", "+    char c, peek;", "+\t", "-      if (c == '{')", "+      if (c != ' ' && c != '\\t' && c != '\\n') ", "+\t  // c is not a whitespace character.", "+", "-\t      return true;", "+\t      peek = text.charAt(i - 1);", "+", "+\t      if (c == '/' && (peek == '/' || peek == '*'))", "+\t\t  i--;", "+\t      else if (c == '*' && peek == '/')", "+\t\t  i--;", "+\t      else", "+\t\t  return c == '{';"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3a2fb7db17adf9ae923ce8a027053b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "98f0c27d2704f53c27c12dba8736793eeeac44cf", "commitAfterChange": "807926b925dfb352a7bbfb2667234847dc65f45d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void doubleClicked(MouseEvent e)", "signatureAfterChange": "   public void doubleClicked(MouseEvent e)", "diff": ["-    while((end<t.length()) && (t.charAt(end)!='\\n')) { ++end; }", "+    while((end>=0) && (end<t.length()) && (t.charAt(end)!='\\n')) { ++end; }", "+    if ((start<0) || (end<0) || (start>=t.length()) || (end>=t.length())) return;", "-    while(end<line.length()) {", "+    while((end>=0) && (end<line.length())) {", "-    do {", "+    while(start>0) {", "-      if ((start>=0) && (end>=start)) {", "+      if ((start>=0) && (end>=start) && (start<line.length()) && (end<line.length())) {", "-    } while(start>0);", "+    }"]}], "num": 10693}