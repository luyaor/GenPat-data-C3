{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4cedf14e0d5fd6f2f24948573ea61971", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03090770638e32c946cc4938a0328dc0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public synchronized void removeBreakpoint(final Breakpoint breakpoint)", "signatureAfterChange": "   public synchronized void removeBreakpoint(final Breakpoint breakpoint)      throws DebugException", "diff": ["-  public synchronized void removeBreakpoint(final Breakpoint breakpoint) {", "-    if (!isReady()) return;", "+  public synchronized void removeBreakpoint(final Breakpoint breakpoint) ", "+    throws DebugException", "+  {", "+    _ensureReady();", "-    if ( requests.size() > 0 && _eventManager != null) {", "+    if (requests.size() > 0 && _eventManager != null) {", "+      // Remove all event requests for this breakpoint", "+        _log(\"VMMismatch when removing breakpoint.\", vme);", "+        _log(\"VMDisconnected when removing breakpoint.\", vmde);", "-    //else {", "-    // Now always remove from pending request, since it's always there", "+", "+    // Always remove from pending request, since it's always there", "-    //}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a079e0ef194ccb971a28bf21031d8ade", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 56, "signatureBeforeChange": "    private void _updateWatches()", "signatureAfterChange": "   private void _updateWatches() throws DebugException", "diff": ["-  private void _updateWatches() {", "-    if (!isReady() || (_suspendedThreads.size() <= 0)) return;", "+   */", "+  private void _updateWatches() throws DebugException {", "+    _ensureReady();", "+    if (_suspendedThreads.size() <= 0) {", "+      throw new IllegalStateException(\"Cannot update watches if there \" +", "+                                      \"are no suspended threads.\");", "+    }", "-        printMessage(\"Could not update watch values. The current thread had no stackframes.\");", "+        printMessage(\"Could not update watch values. The current thread \" +", "+                     \"had no stack frames.\");", "-      return;", "+      _log(\"Exception updating watches.\", itse);", "-      return;", "+      _log(\"Exception updating watches.\", isfe);"]}], "num": 13505}