{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f30ea7e4c9e36e29e5dc66d49e1c5235", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aed6e919fb55a8fa8da6f80ea0b4098", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7bb32c28070a4b5d5697c7c88ea0d664289c76e8", "commitAfterChange": "b2ad80c49aaa09f293a5bc1f6664d4cc5243219e", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 50, "signatureBeforeChange": "   private void _setUpDocumentSelector()", "signatureAfterChange": "   private void _setUpDocumentSelector()", "diff": ["-    _docList = new JList(_definitionsDocs);// {", "+    _docList = new JList(_model.getDefinitionsDocuments());// {", "-    _docList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);", "+    _docList.setSelectionModel(_model.getDocumentSelectionModel());", "+  }", "-    _docList.setSelectedValue(_currentDefPane.getOpenDocument(), true);", "-    _docList.addListSelectionListener(new ListSelectionListener() {", "-      public void valueChanged(ListSelectionEvent e) {", "-        if (!e.getValueIsAdjusting()) {", "-          _switchActiveDocument(", "-            (OpenDefinitionsDocument)_docList.getSelectedValue());", "-        }", "-      }", "-    });", "-  }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65e7af734cbe0e2a8afd887026de2062", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectMenuTest.java", "commitBeforeChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "commitAfterChange": "bd7a2dd06a797f540fad2fc718c0924e6e0b267b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testCloseAllClosesProject()  throws MalformedProjectFileException, IOException", "signatureAfterChange": "      public void testCloseAllClosesProject()", "diff": ["-  public void testCloseAllClosesProject()  throws MalformedProjectFileException, IOException {", "-    ", "+  public void testCloseAllClosesProject() {", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() { ", "-        try { _model.openProject(_projFile); }", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        try { ", "+          _model.openProject(_projFile);", "+          assertTrue(\"Project should have been opened\", _model.isProjectActive());", "+          ", "+          _frame.closeAll(); ", "+          assertFalse(\"Project should have been closed\", _model.isProjectActive());", "+        }", "-      } ", "+      }", "-    Utilities.clearEventQueue();", "-    ", "-    assertTrue(\"Project should have been opened\", _model.isProjectActive());", "-    ", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() { ", "-        try { _frame.closeAll(); }", "-        catch(Exception e) { throw new UnexpectedException(e); }", "-      } ", "-    });", "-    Utilities.clearEventQueue();", "-    ", "-    assertFalse(\"Project should have been closed\", _model.isProjectActive());"]}], "num": 10134}