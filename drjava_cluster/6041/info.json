{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bdf47f18173ce90e7936b65a19de0e82", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b199adc29b5dd7de562534492a637146", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "f5f9e35c2a806ad9979915d514415944af196bab", "commitAfterChange": "720d6a91901cb3699fb981b0c6b71471d6bbb848", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testCompileWithPackageStatementInsideClass()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileWithPackageStatementInsideClass()     throws BadLocationException, IOException", "diff": ["-    File baseTempDir = tempFile();", "+    File baseTempDir = tempDirectory();", "-    try {", "-      // Delete the file and make a directory of the same name", "-      baseTempDir.delete();", "-      baseTempDir.mkdir();", "+    // Now make subdirectory a", "+    subdir.mkdir();", "-      // Now make subdirectory a", "-      subdir.mkdir();", "+    // Save the footext to Foo.java in the subdirectory", "+    setupDocument(FOO_PACKAGE_INSIDE_CLASS);", "+    _model.saveFileAs(new FileSelector(fooFile));", "-      // Save the footext to Foo.java in the subdirectory", "-      setupDocument(FOO_PACKAGE_INSIDE_CLASS);", "-      _model.saveFileAs(new FileSelector(fooFile));", "+    // do compile -- should fail since package decl is not valid!", "+    CompileShouldFailListener listener = new CompileShouldFailListener();", "+    _model.addListener(listener);", "+    _model.startCompile();", "-      // do compile -- should fail since package decl is not valid!", "-      CompileShouldFailListener listener = new CompileShouldFailListener();", "-      _model.addListener(listener);", "-      _model.startCompile();", "-", "-      listener.assertCompileStartCount(1);", "-      listener.assertCompileEndCount(1);", "-      assertCompileErrorsPresent(true);", "-      assertTrue(_name() + \"Class file exists after failed compile\", !compiled.exists());", "-    }", "-    finally {", "-      // Delete files and then directories", "-      compiled.delete(); // shouldn't be there, but just in case", "-      fooFile.delete();", "-      subdir.delete();", "-      baseTempDir.delete();", "-    }", "+    listener.assertCompileStartCount(1);", "+    listener.assertCompileEndCount(1);", "+    assertCompileErrorsPresent(true);", "+    assertTrue(_name() + \"Class file exists after failed compile\",", "+               !compiled.exists());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc596a053045afdb879f1927b51b529b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "f5f9e35c2a806ad9979915d514415944af196bab", "commitAfterChange": "720d6a91901cb3699fb981b0c6b71471d6bbb848", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "    public void testGetSourceRootPackageOneDeepValid()     throws BadLocationException, IOException, InvalidPackageException", "signatureAfterChange": "    public void testGetSourceRootPackageOneDeepValid()     throws BadLocationException, IOException, InvalidPackageException", "diff": ["-    // Create temp file", "-    File baseTempDir = tempFile();", "-    // Delete the file and make a directory of the same name", "-    baseTempDir.delete();", "-    baseTempDir.mkdir();", "+    // Create temp directory", "+    File baseTempDir = tempDirectory();", "-    fooFile.delete();", "-    subdir.delete();", "-    baseTempDir.delete();"]}], "num": 6041}