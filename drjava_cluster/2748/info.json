{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a91c68631c33765af0f514658a9dee38", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "160c4c7fc48666d824c0daf990c494b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Set getCurrentScopeVariables()", "signatureAfterChange": "   public Set<AbstractVariable> getCurrentScopeVariables()", "diff": ["+   */", "+  public Set<AbstractVariable> getCurrentScopeVariables() {", "+    Set<AbstractVariable> result = new HashSet<AbstractVariable>(11);", "+    Iterator<String> it = scope.keySet().iterator();", "+    while (it.hasNext()) {", "+      result.add(new Variable(it.next()));", "+    }", "+    it = cscope.keySet().iterator();", "+    while (it.hasNext()) {", "+      result.add(new Constant(it.next()));", "+    }", "+    return result;", "+  }", "-    public Set getCurrentScopeVariables() {", "-\tSet result = new HashSet(11);", "-\tIterator it = scope.keySet().iterator();", "-\twhile (it.hasNext()) {", "-\t    result.add(new Variable((String)it.next()));", "-\t}", "-\tit = cscope.keySet().iterator();", "-\twhile (it.hasNext()) {", "-\t    result.add(new Constant((String)it.next()));", "-\t}", "-\treturn result;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ef163fca5266cb090b491cb64dc6ba6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/context/VariableContext.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public Set getCurrentScopeVariableNames()", "signatureAfterChange": "   public Set<String> getCurrentScopeVariableNames()", "diff": ["+   */", "+  public Set<String> getCurrentScopeVariableNames() {", "+    Set<String> result = new HashSet<String>(11);", "+    Iterator<String> it = scope.keySet().iterator();", "+    while (it.hasNext()) {", "+      result.add(it.next());", "+    }", "+    it = cscope.keySet().iterator();", "+    while (it.hasNext()) {", "+      result.add(it.next());", "+    }", "+    return result;", "+  }", "-    public Set getCurrentScopeVariableNames() {", "-\tSet result = new HashSet(11);", "-\tIterator it = scope.keySet().iterator();", "-\twhile (it.hasNext()) {", "-\t    result.add(it.next());", "-\t}", "-\tit = cscope.keySet().iterator();", "-\twhile (it.hasNext()) {", "-\t    result.add(it.next());", "-\t}", "-\treturn result;", "-    }"]}], "num": 2748}