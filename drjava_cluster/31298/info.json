{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e364dc5785d385feb1cee154f378734", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16cbe4bc3c98dfb0b354ced74e0f4073", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "37c397e60e308f3d693028fa49fb7a4f5f0000e5", "commitAfterChange": "ff142f6bee221c65d8a36e94ac6a2e4478194666", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": "   final public void forStatementLookahead() throws ParseException", "signatureAfterChange": "   final public void forStatementLookahead() throws ParseException", "diff": ["+    if (jj_2_58(2147483647)) {", "+      forStatementLookaheadForFor();", "+    } else if (jj_2_59(2147483647)) {", "+      forStatementLookaheadForForeach();", "+    } else {", "+      jj_consume_token(-1);", "+      throw new ParseException();", "+    }", "+  }", "-      jj_la1[184] = jj_gen;", "-      jj_la1[185] = jj_gen;", "-      jj_la1[186] = jj_gen;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb441109d95e531d80711e6934d290aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPane.java", "commitBeforeChange": "61e5b2f858911ea73a13dba9fbe943d7030fb9fb", "commitAfterChange": "efaccf437175951cd0b6645fd51acf615d54103d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public InteractionsPane(InteractionsDocument doc)", "signatureAfterChange": "   public InteractionsPane(StyledDocument doc)", "diff": ["-  public InteractionsPane(InteractionsDocument doc) {", "+   */", "+  public InteractionsPane(StyledDocument doc) {", "-    _doc = doc;", "-    ", "-    // Get proper cross-platform mask.", "-    int mask = Toolkit.getDefaultToolkit().getMenuShortcutKeyMask();", "-    Keymap ourMap = addKeymap(\"INTERACTIONS_KEYMAP\", getKeymap());", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), ", "-                                 _evalAction);", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, ", "-                                                        java.awt.Event.SHIFT_MASK), ", "-                                 _newlineAction);", "+    _keymap = addKeymap(\"INTERACTIONS_KEYMAP\", getKeymap());", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_B, mask), ", "-                                 _clearCurrentAction);", "-", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_HOME, 0), ", "-                                 _gotoPromptPosAction);", "-    ", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_HOME,", "-                                                        java.awt.Event.SHIFT_MASK), ", "-                                 _selectToPromptPosAction);", "-", "-    // Up and down need to be bound both for keypad and not", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_KP_UP, 0), ", "-                                 _historyPrevAction);", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_UP, 0), ", "-                                 _historyPrevAction);", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_KP_DOWN, 0), ", "-                                 _historyNextAction);", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, 0), ", "-                                 _historyNextAction);", "-    ", "-    // Left needs to be prevented from rolling cursor back before the prompt.", "-    // Both left and right should lock when caret is before the prompt.", "-    // Caret is allowed before the prompt for the purposes of mouse-based copy-", "-    // and-paste.", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_KP_LEFT, 0),", "-                                 _moveLeft);", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_LEFT, 0),", "-                                 _moveLeft);", "-    ", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_KP_RIGHT, 0),", "-                                 _moveRight);", "-    ourMap.addActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT, 0),", "-                                 _moveRight);", "-    ", "-    setKeymap(ourMap);", "-    ", "-    _doc.addDocumentListener(new CaretUpdateListener());", "-    moveToEnd();", "+    setCaretPosition(doc.getLength());"]}], "num": 31298}