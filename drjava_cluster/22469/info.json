{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cca614c63054a340fbc8d404b3ae8a3a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31cfa322632393577a6d387e27fb5d09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "    public void testMultipleCallsToFindNext() throws BadLocationException", "signatureAfterChange": "    public void testMultipleCallsToFindNext() throws BadLocationException", "diff": ["-  public void testMultipleCallsToFindNext() throws BadLocationException {    ", "-    doc.insertString(0, EVIL_TEXT, null);", "-    FindReplaceMachine frm = new FindReplaceMachine(doc, 0);", "+  public void testMultipleCallsToFindNext() throws BadLocationException {     ", "+    doc.insertString(0, EVIL_TEXT, null); ", "+    _initFrm(0);", "-    frm.setFindWord(\"evil\");", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 12);", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 25);", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 40);", "-  }", "+    frm.setFindWord(\"evil\"); ", "+    _testFindNextSucceeds(frm, CONTINUE, 0, 12); ", "+    _testFindNextSucceeds(frm, CONTINUE, 0, 25); ", "+    _testFindNextSucceeds(frm, CONTINUE, 0, 40); ", "+  } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cecacbb71bcb475bbf81a9c29ffb0676", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "    public void testMultipleCallsToFindNext() throws BadLocationException", "signatureAfterChange": "    public void testMultipleCallsToFindNext() throws BadLocationException", "diff": ["-  public void testMultipleCallsToFindNext() throws BadLocationException {     ", "-    doc.insertString(0, EVIL_TEXT, null); ", "+  public void testMultipleCallsToFindNext() throws BadLocationException {", "+    _doc.insertString(0, EVIL_TEXT, null);", "-    _assertOffsets(frm, 0, 0);", "-    frm.setFindWord(\"evil\"); ", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 12); ", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 25); ", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 40); ", "-  } ", "+    _assertOffsets(_frm, 0, 0);", "+    _frm.setFindWord(\"evil\");", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 12);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 25);", "+    _testFindNextSucceeds(_frm, CONTINUE, 0, 40);", "+  }"]}], "num": 22469}