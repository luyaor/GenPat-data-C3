{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eefa9d7e6d7d2903df943d42aa1c57ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29101f043d4ada588f22e786e6504d47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "bd2e852d4b09497531ae79af49475815d01d70b1", "commitAfterChange": "85b72c50d3f809a70141774d731cbef2c25b2f7f", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public boolean setSelectedDirectory(File dir)", "signatureAfterChange": "   public boolean setSelectedDirectory(File dir)", "diff": ["-    ", "-    LinkedList<File> path = new LinkedList<File>();", "-    File tmp = formatFile(dir);", "-    do {", "-      path.addFirst(tmp);", "-    } while ((tmp = tmp.getParentFile()) != null);", "-    ", "-    HashSet<File> rootSet = new HashSet<File>();", "-    tmp = _rootFile;", "-    do {", "-      rootSet.add(tmp);", "-    } while ((tmp = tmp.getParentFile()) != null);", "-    ", "-    // remove the root from the path", "-    ListIterator<File> it = path.listIterator();", "-    while (it.hasNext()) {", "-      tmp = it.next();", "-      if (rootSet.contains(tmp)) {", "-        it.remove();", "-      }", "+    _defaultSelectedFile = dir;", "+    return updateTreeSelectionPath();", "+  }", "-    ", "-    DefaultMutableTreeNode currNode = _root;", "-    for (File currFile : path) {", "-      DefaultMutableTreeNode n = findMatchingChild(currNode, currFile);", "-      if (n == null) {", "-        ensureHasChildren(currNode);", "-      }", "-      n = findMatchingChild(currNode, currFile); // search again", "-      if (n == null) {", "-        return false; // not found", "-      }", "-      else {", "-        currNode = n;", "-      }", "-    TreePath tp = new TreePath(currNode.getPath());", "-    _tree.setSelectionPath(tp);", "-    // expand the tree bounds out so it doesn't", "-    // get placed on the bottom of the tree.", "-    Rectangle bounds = _tree.getPathBounds(tp);", "-    int x = 0;", "-    int y = bounds.y - 100;", "-    int w = bounds.width + bounds.x;", "-    int h = bounds.height + 200;", "-    Rectangle scrollBounds = new Rectangle(x,y,w,h);", "-    _tree.makeVisible(tp);", "-    _tree.scrollRectToVisible(scrollBounds);", "-    _tree.repaint();", "-    return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a50553d5c3358dafebb6e7bc069df90f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "51e8ea430c01509f87d3823d7a75f90d00225716", "commitAfterChange": "5425ae0e836a7ee6f00ac774f834187d377d72ad", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 48, "signatureBeforeChange": "     public void breakpointSet(final Breakpoint bp)", "signatureAfterChange": "     public void breakpointSet(final Breakpoint bp)", "diff": ["-     */", "-    public void breakpointSet(final Breakpoint bp) {", "-//      // Only change GUI from event-dispatching thread", "-//      Runnable doCommand = new Runnable() {", "-//        public void run() {", "-          DefaultMutableTreeNode bpDocNode = new DefaultMutableTreeNode(bp.getClassName());", "-", "-          // Look for matching document node", "-          // Raw type here due to Swing's use of raw types.", "-          Enumeration documents = _breakpointRootNode.children();", "-          while (documents.hasMoreElements()) {", "-            DefaultMutableTreeNode doc = (DefaultMutableTreeNode)documents.nextElement();", "-            if (doc.getUserObject().equals(bpDocNode.getUserObject())) {", "-", "-              // Create a new breakpoint in this node", "-              //Sort breakpoints by line number.", "-              // Raw type here due to Swing's use of raw types.", "-              Enumeration lineNumbers = doc.children();", "-              while (lineNumbers.hasMoreElements()) {", "-                DefaultMutableTreeNode lineNumber = (DefaultMutableTreeNode)lineNumbers.nextElement();", "-", "-                //if line number of indexed breakpoint is less than new breakpoint, continue", "-                if (((Integer)lineNumber.getUserObject()).intValue() > bp.getLineNumber()) {", "-", "-                  //else, add to the list", "-                  DefaultMutableTreeNode newBreakpoint =", "-                    new DefaultMutableTreeNode(new Integer(bp.getLineNumber()));", "-                  _bpTreeModel.insertNodeInto(newBreakpoint, doc, doc.getIndex(lineNumber));", "-", "-                  // Make sure this node is visible", "-                  _bpTree.scrollPathToVisible(new TreePath(newBreakpoint.getPath()));", "-                  return;", "-                }", "-              }", "-              //if none are greater, add at the end", "-              DefaultMutableTreeNode newBreakpoint =", "-                new DefaultMutableTreeNode(new Integer(bp.getLineNumber()));", "-              _bpTreeModel.insertNodeInto(newBreakpoint, doc, doc.getChildCount());", "-", "-              // Make sure this node is visible", "-              _bpTree.scrollPathToVisible(new TreePath(newBreakpoint.getPath()));", "-              return;", "-            }", "-          }", "-          // No matching document node was found, so create one", "-          _bpTreeModel.insertNodeInto(bpDocNode, _breakpointRootNode, _breakpointRootNode.getChildCount());", "-          DefaultMutableTreeNode newBreakpoint =", "-            new DefaultMutableTreeNode(new Integer(bp.getLineNumber()));", "-          _bpTreeModel.insertNodeInto(newBreakpoint, bpDocNode, bpDocNode.getChildCount());", "-", "-          // Make visible", "-          TreePath pathToNewBreakpoint = new TreePath(newBreakpoint.getPath());", "-          _bpTree.scrollPathToVisible(pathToNewBreakpoint);", "-//        }", "-//      };", "-//      Utilities.invokeLater(doCommand);", "-    }", "+    /** Called when a breakpoint is set in a document. Must be executed in event thread. */", "+    public void breakpointSet(final Breakpoint bp) { }"]}], "num": 15447}