{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13d86c36f15e88734cf4fc40563bb1ed", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "612b7a0edaaf5e5bd9cd3ac404bebf96", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public static ReadOnceIterable<Character> readerIterable(final Reader in)", "signatureAfterChange": "   public static ReadOnlyIterator<Character> asIterator(final Reader in)", "diff": ["+   */", "+  public static ReadOnlyIterator<Character> asIterator(final Reader in) {", "+    return new ReadOnlyIterator<Character>() {", "+      private int _lookahead = readNext();", "+", "+      public boolean hasNext() { return _lookahead >= 0; }", "+      ", "+      public Character next() {", "+        if (_lookahead < 0) { throw new NoSuchElementException(); }", "+        Character result = (char) _lookahead;", "+        _lookahead = readNext();", "+        return result;", "+      }", "+      ", "+      private int readNext() {", "+        try { return in.read(); }", "+        catch (IOException e) { throw new IllegalStateException(e); }", "+      }", "+      ", "+    };", "+  }", "-   */", "-  public static ReadOnceIterable<Character> readerIterable(final Reader in) {", "-    return new ReadOnceIterable<Character>(new ReadOnlyIterator<Character>() {", "-      private int _lookahead = readNext();", "-", "-      public boolean hasNext() { return _lookahead >= 0; }", "-      ", "-      public Character next() {", "-        if (_lookahead < 0) { throw new NoSuchElementException(); }", "-        Character result = (char) _lookahead;", "-        _lookahead = readNext();", "-        return result;", "-      }", "-      ", "-      private int readNext() {", "-        try { return in.read(); }", "-        catch (IOException e) { throw new IllegalStateException(e); }", "-      }", "-      ", "-    });", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "841cc1dcad417b53b49ebaa02e463b03", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public static ReadOnceIterable<Byte> inputStreamIterable(final InputStream in)", "signatureAfterChange": "   public static ReadOnlyIterator<Byte> asIterator(final InputStream in)", "diff": ["+   */", "+  public static ReadOnlyIterator<Byte> asIterator(final InputStream in) {", "+    return new ReadOnlyIterator<Byte>() {", "+      private int _lookahead = readNext();", "+      ", "+      public boolean hasNext() { return _lookahead >= 0; }", "+      ", "+      public Byte next() {", "+        if (_lookahead < 0) { throw new NoSuchElementException(); }", "+        Byte result = (byte) _lookahead;", "+        _lookahead = readNext();", "+        return result;", "+      }", "+      ", "+      private int readNext() {", "+        try { return in.read(); }", "+        catch (IOException e) { throw new IllegalStateException(e); }", "+      }", "+      ", "+    };", "+  }", "-   */", "-  public static ReadOnceIterable<Byte> inputStreamIterable(final InputStream in) {", "-    return new ReadOnceIterable<Byte>(new ReadOnlyIterator<Byte>() {", "-      private int _lookahead = readNext();", "-      ", "-      public boolean hasNext() { return _lookahead >= 0; }", "-      ", "-      public Byte next() {", "-        if (_lookahead < 0) { throw new NoSuchElementException(); }", "-        Byte result = (byte) _lookahead;", "-        _lookahead = readNext();", "-        return result;", "-      }", "-      ", "-      private int readNext() {", "-        try { return in.read(); }", "-        catch (IOException e) { throw new IllegalStateException(e); }", "-      }", "-      ", "-    });"]}], "num": 17640}