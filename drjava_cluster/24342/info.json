{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b64969e47e8d5c5a7dd4d34db317a4cf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85141ad2938f6f3d2f700f00ccef741d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    this(-1);  // use a unique RMI port", "-  }", "+    _model = new SingleDisplayModel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2215db2f8ddc976c7b628ba74e97f78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "527b327a81252940ede7723bc28a80b1911fdddb", "commitAfterChange": "60cd84614ab1a6d35590df8d34b30b47cae7364d", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 136, "signatureBeforeChange": "   void initCompleteWordDialog()", "signatureAfterChange": "   void initCompleteWordDialog()", "diff": ["+      // checkbox whether Java API classes should be completed as well", "+      _completeJavaAPICheckbox.addActionListener(new ActionListener() {", "+        public void actionPerformed(ActionEvent e) {", "+          GoToFileListEntry curItem = _completeWordDialog.getItem();", "+          if (_completeJavaAPICheckbox.isSelected()) {", "+            // selected, add Java API classes to list", "+            generateJavaAPIList();", "+            if (_javaAPIList==null) {", "+              _completeJavaAPICheckbox.setSelected(false);", "+              _completeJavaAPICheckbox.setEnabled(false);", "+            }", "+            else {", "+              List<GoToFileListEntry> l = _completeWordDialog.getList();", "+              for(JavaAPIListEntry entry: _javaAPIList) {", "+                String fn = entry.getFullString();", "+                int pos = fn.lastIndexOf('.');", "+                String pn = \"\";", "+                if (pos>=0) {", "+                  pn = fn.substring(0,pos+1);", "+                  fn = fn.substring(pos+1);", "+                }", "+                l.add(new NoDocumentFileListEntry(pn,fn));", "+              }", "+              _completeWordDialog.setItems(true,l);", "+            }", "+          }", "+          else {", "+            // unselected, remove Java API classes from list", "+            List<GoToFileListEntry> l = _completeWordDialog.getList();", "+            List<GoToFileListEntry> n = new ArrayList<GoToFileListEntry>();", "+            for(GoToFileListEntry entry: l) {", "+              if (!(entry instanceof NoDocumentFileListEntry)) { n.add(entry); }", "+            }", "+            _completeWordDialog.setItems(true,n);", "+          }", "+          if (curItem!=null) {", "+            _completeWordDialog.setCurrentItem(curItem);", "+          }", "+          _completeWordDialog.resetFocus();", "+        }", "+      });", "+      _completeJavaAPICheckbox.setMnemonic('j');", "+      PredictiveInputFrame.InfoSupplier<JavaAPIListEntry> info = ", "+        new PredictiveInputFrame.InfoSupplier<JavaAPIListEntry>() {", "+        public String apply(JavaAPIListEntry entry) {", "+          // show full class name as information", "+          return entry.getFullString();", "+        }", "+      };", "+        public String getName() { return \"OK\"; }", "+        public KeyStroke getKeyStroke() { return KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0); }", "+      PredictiveInputFrame.CloseAction<GoToFileListEntry> fullAction = new PredictiveInputFrame.CloseAction<GoToFileListEntry>() {", "+        public String getName() { return \"Fully Qualified\"; }", "+        public KeyStroke getKeyStroke() { return KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0); }", "+        public Object apply(PredictiveInputFrame<GoToFileListEntry> p) {", "+          if (p.getItem() != null) {", "+            OpenDefinitionsDocument odd = getCurrentDefPane().getOpenDefDocument();", "+            try {", "+              String mask = \"\";", "+              int loc = getCurrentDefPane().getCaretPosition();", "+              String s = odd.getText(0, loc);", "+              ", "+              // check that we're at the end of a word", "+              if ((loc<s.length()) && (!Character.isWhitespace(s.charAt(loc))) &&", "+                  (\"()[]{}<>.,:;/*+-!~&|%\".indexOf(s.charAt(loc)) == -1)) return null;", "+              ", "+              // find start", "+              int start = loc;", "+              while(start>0) {", "+                if (!Character.isJavaIdentifierPart(s.charAt(start-1))) { break; }", "+                --start;", "+              }", "+              while((start<s.length()) && (!Character.isJavaIdentifierStart(s.charAt(start))) && (start < loc)) {", "+                ++start;", "+              }", "+              ", "+              if (!s.substring(start, loc).equals(p.getItem().toString())) {", "+                odd.remove(start, loc-start);", "+                StringBuilder sb = new StringBuilder();", "+                sb.append(p.getItem().getFullPackage());", "+                sb.append(p.getItem().toString());", "+                odd.insertString(start, sb.toString(), null);", "+              }", "+            }", "+            catch(BadLocationException ble) { /* ignore, just don't auto-complete */ }", "+            finally { odd.releaseWriteLock(); }", "+          }", "+          hourglassOff();", "+          return null;", "+        }", "+      };", "+        public String getName() { return \"Cancel\"; }", "+        public KeyStroke getKeyStroke() { return KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0); }", "+      List<PredictiveInputFrame.CloseAction<GoToFileListEntry>> actions", "+        = new ArrayList<PredictiveInputFrame.CloseAction<GoToFileListEntry>>();", "+      actions.add(okAction);", "+      actions.add(fullAction);", "+      actions.add(cancelAction);", "-                                                    okAction,", "-                                                    cancelAction,", "+                                                    actions,", "+        }", "+        protected JComponent[] makeOptions() {", "+          return new JComponent[] { _completeJavaAPICheckbox };"]}], "num": 24342}