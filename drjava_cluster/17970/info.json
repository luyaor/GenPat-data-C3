{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03f34e04d5222a4c3ef7537983452e5b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0006a348cffa91a81dfab0ab0ed98b05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": "   final public MethodDeclaration methodDeclaration() throws ParseException", "signatureAfterChange": "   final public MethodDeclaration methodDeclaration() throws ParseException", "diff": ["+    TypeParameter[]   typeParameters = null;", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case LESS:", "+      typeParameters = TypeParameters();", "+      break;", "+    default:", "+      jj_la1[24] = jj_gen;", "+      ;", "+    }", "-        jj_la1[23] = jj_gen;", "+        jj_la1[25] = jj_gen;", "-      jj_la1[24] = jj_gen;", "+      jj_la1[26] = jj_gen;", "-      jj_la1[25] = jj_gen;", "+      jj_la1[27] = jj_gen;", "-        {if (true) return new MethodDeclaration(flags, typ, id.image, params,", "-                                     exceptions,", "-                                     (body instanceof BlockStatement) ?", "-                                       (BlockStatement)body : null,", "-                                     filename,", "-                                     bl, bc, body.getEndLine(), body.getEndColumn());}", "+        if (typeParameters == null){", "+          {if (true) return new MethodDeclaration(flags, typ, id.image, params,", "+                                       exceptions,", "+                                       (body instanceof BlockStatement) ?", "+                                         (BlockStatement)body : null,", "+                                       filename,", "+                                       bl, bc, body.getEndLine(), body.getEndColumn());}", "+        } else {", "+          GenericTypesEnv = GenericTypesEnv.getRest(); // pop added type params", "+          {if (true) return new PolymorphicMethodDeclaration(flags, typ, id.image, params,", "+                                                  exceptions,", "+                                                  (body instanceof BlockStatement) ?", "+                                                    (BlockStatement)body : null,", "+                                                  filename,", "+                                                  bl, bc, body.getEndLine(), body.getEndColumn(),", "+                                                  typeParameters);}", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45183348d420c7259a20125477121c5c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": "   final public ClassDeclaration unmodifiedClassDeclaration(ModifierFlags mf) throws ParseException", "signatureAfterChange": "   final public ClassDeclaration unmodifiedClassDeclaration(ModifierFlags mf) throws ParseException", "diff": ["+    TypeParameter[] typeParameters = null;", "+    case LESS:", "+      typeParameters = TypeParameters();", "+      break;", "+    default:", "+      jj_la1[14] = jj_gen;", "+      ;", "+    }", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-      jj_la1[14] = jj_gen;", "+      jj_la1[15] = jj_gen;", "-      jj_la1[15] = jj_gen;", "+      jj_la1[16] = jj_gen;", "-      if (mf == null) {", "-        {if (true) return new ClassDeclaration(0, id.image, ext, impl, body.list,", "-                                    filename,", "-                                    t.beginLine,  t.beginColumn,", "-                                    body.endLine, body.endColumn);}", "-      } else {", "-        {if (true) return new ClassDeclaration(mf.accessFlags, id.image, ext, impl, body.list,", "-                                    filename,", "-                                    mf.beginLine, mf.beginColumn,", "-                                    body.endLine, body.endColumn);}", "+      if (typeParameters != null){", "+        GenericTypesEnv = GenericTypesEnv.getRest(); // pop added type params", "+        if (mf == null) {", "+          {if (true) return new GenericClassDeclaration(0, id.image, ext, impl, body.list,", "+                                             filename,", "+                                             t.beginLine,  t.beginColumn,", "+                                             body.endLine, body.endColumn, typeParameters);}", "+        } else {", "+          {if (true) return new GenericClassDeclaration(mf.accessFlags, id.image, ext, impl, body.list,", "+                                             filename,", "+                                             mf.beginLine, mf.beginColumn,", "+                                             body.endLine, body.endColumn, typeParameters);}", "+        }", "+      }", "+      else {", "+        if (mf == null) {", "+          {if (true) return new ClassDeclaration(0, id.image, ext, impl, body.list,", "+                                      filename,", "+                                      t.beginLine,  t.beginColumn,", "+                                      body.endLine, body.endColumn);}", "+        } else {", "+          {if (true) return new ClassDeclaration(mf.accessFlags, id.image, ext, impl, body.list,", "+                                      filename,", "+                                      mf.beginLine, mf.beginColumn,", "+                                      body.endLine, body.endColumn);}", "+        }"]}], "num": 17970}