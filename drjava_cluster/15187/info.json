{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65a7dd17e073d22eebd356d6240861e6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bede4442801e6a66655076da6f70b0c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "1ca22d8d9e892abbe72cd6aa5627cc7ce0e56b03", "commitAfterChange": "024873f55ad7ba6280213fee7183c6688ba3b395", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses()     throws Exception", "signatureAfterChange": "   public synchronized void testBreakpointsAndStepsInNonPublicClasses() throws Exception", "diff": ["-   */", "-  public synchronized void testBreakpointsAndStepsInNonPublicClasses()", "-    throws Exception", "-  {", "+  /** Tests that breakpoints behave correctly in non-public classes. */", "+  public synchronized void testBreakpointsAndStepsInNonPublicClasses() throws Exception {", "-    OpenDefinitionsDocument doc = _startupDebugger(\"DrJavaDebugClass.java\",", "-                                                   DEBUG_CLASS);", "+    OpenDefinitionsDocument doc = _startupDebugger(\"DrJavaDebugClass.java\", DEBUG_CLASS);", "-    _debugger.toggleBreakpoint(doc,DEBUG_CLASS.indexOf(\"Baz Line 1\"),14);", "+    _debugger.toggleBreakpoint(doc,DEBUG_CLASS.indexOf(\"Baz Line 1\"), 14);", "+      _setPendingNotifies(3);  // suspended, updated, breakpointReached", "-      _waitForNotifies(3);  // suspended, updated, breakpointReached", "-      _notifierLock.wait();", "+      while (_pendingNotifies > 0) _notifierLock.wait();", "+      _setPendingNotifies(2);  // suspended, updated", "-      _waitForNotifies(2);  // suspended, updated", "-      _notifierLock.wait();", "+      while (_pendingNotifies > 0) _notifierLock.wait();", "+      _setPendingNotifies(3);  // suspended, updated, breakpointReached", "-      _waitForNotifies(3);  // suspended, updated, breakpointReached", "-      _notifierLock.wait();", "+      while (_pendingNotifies > 0) _notifierLock.wait();", "+      _setPendingNotifies(3);  // interactionEnded, interpreterChanged, currThreadDied (since it's the last thread)", "-      _waitForNotifies(3);  // interactionEnded, interpreterChanged, currThreadDied", "-                            // here, we get a currThreadDied since it's the last thread", "-      _notifierLock.wait();", "+      while (_pendingNotifies > 0) _notifierLock.wait();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8966ea9d2560b1c59de03c04a0609718", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "1ca22d8d9e892abbe72cd6aa5627cc7ce0e56b03", "commitAfterChange": "024873f55ad7ba6280213fee7183c6688ba3b395", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testStaticFieldsConsistent() throws Exception", "signatureAfterChange": "   public void testStaticFieldsConsistent() throws Exception", "diff": ["-   */", "+  /** Tests that static fields are consistent across different interpreter contexts. */", "-    if (printMessages) {", "-      System.out.println(\"----testStaticFieldsConsistent----\");", "-    }", "+    if (printMessages) System.out.println(\"----testStaticFieldsConsistent----\");", "+      _setPendingNotifies(6);  // (suspended, updated, breakpointReached) *2", "-      _waitForNotifies(6);  // (suspended, updated, breakpointReached) *2", "-      _notifierLock.wait();", "+      while (_pendingNotifies > 0) _notifierLock.wait();", "+      _setPendingNotifies(2);  // suspended, updated", "-      _waitForNotifies(2);  // suspended, updated", "-      _notifierLock.wait();", "+      while (_pendingNotifies > 0) _notifierLock.wait();", "+      _setPendingNotifies(2);  // suspended, updated", "-      _waitForNotifies(2);  // suspended, updated", "-      _notifierLock.wait();", "+      while (_pendingNotifies > 0) _notifierLock.wait();", "+      _setPendingNotifies(2);  // suspended, updated", "-      _waitForNotifies(2);  // suspended, updated", "-      _notifierLock.wait();", "+      while (_pendingNotifies > 0) _notifierLock.wait();"]}], "num": 15187}