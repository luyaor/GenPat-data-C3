{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7093f350584a35a5072b168e563ce1b1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c31a2f50b717fd2fa1f4c3ca8663062", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/FiniteSequenceIterable.java", "commitBeforeChange": "b25e1764d5b4aa3e174628947c02047c67664960", "commitAfterChange": "9809ca71121d10fa3d6ae7d6e3d96f3d75599dbb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public FiniteSequenceIterator<T> iterator()", "signatureAfterChange": "   public static <T> FiniteSequenceIterable<T> makeCopies(T value, int copies)", "diff": ["-  /** Create a new {@link FiniteSequenceIterator} based on this iterable's parameters */", "-  public FiniteSequenceIterator<T> iterator() {", "-    return new FiniteSequenceIterator<T>(_initial, _successor, _size);", "+  /** Create a sequence containing {@code copies} instances of the given value */", "+  public static <T> FiniteSequenceIterable<T> makeCopies(T value, int copies) {", "+    return new FiniteSequenceIterable<T>(value, LambdaUtil.<T>identity(), copies);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cec68be8c536d9ff698e3002d76d55a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/FiniteSequenceIterable.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public static FiniteSequenceIterable<Integer> makeIntegerSequence(int start, int end)", "signatureAfterChange": "   public static FiniteSequenceIterable<Integer> makeIntegerSequence(int start, int end)", "diff": ["-      return new FiniteSequenceIterable<Integer>(start, Lambda.INCREMENT_INT, end-start+1);", "+      return new FiniteSequenceIterable<Integer>(start, LambdaUtil.INCREMENT_INT, end-start+1);", "-      return new FiniteSequenceIterable<Integer>(start, Lambda.DECREMENT_INT, start-end+1);", "+      return new FiniteSequenceIterable<Integer>(start, LambdaUtil.DECREMENT_INT, start-end+1);"]}], "num": 5700}