{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e2c54d7656071bd277e72bf15c9bfd8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b5db06290bbe6445bd104bcb30333cd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 36, "signatureBeforeChange": "    public void testGetSourceRootPackageThreeDeepInvalid()     throws BadLocationException, IOException", "signatureAfterChange": "    public void testGetSourceRootPackageThreeDeepInvalid()     throws BadLocationException, IOException", "diff": ["-    // The package name is wrong so this should fail.", "-    try {", "-      File[] root = _model.getSourceRootSet();", "-      fail(\"getSourceRoot() did not fail on invalid package. It returned: \" +", "-           root);", "-    }", "-    catch (InvalidPackageException e) {", "-      // good.", "-    }", "+    // The package name is wrong so this should return none.", "+    File[] roots = _model.getSourceRootSet();", "+    assertEquals(\"number of source roots\", 0, roots.length);", "+    /*", "+    fail(\"getSourceRoot() did not fail on invalid package. It returned: \" +", "+         root);", "+         */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd5bfb10cf7a1d7443b9f1dd114a7405", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 248, "methodNumberAfterChange": 246, "signatureBeforeChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "signatureAfterChange": "     public boolean saveFileAs(FileSaveSelector com) throws IOException", "diff": ["+      // Update _packageName since modifiedSinceSaved flag will be set to false", "+      _packageName = getDocument().getPackageName();", "-//        System.err.println(\"saveFileAs called\");", "-              DefinitionsDocument doc = getDocument();", "+              DefinitionsDocument dd = getDocument();", "-                doc.acquireReadLock();  // Technically required, but looks like overkill.", "-                _editorKit.write(os, doc, 0, doc.getLength());", "-                doc.releaseReadLock();", "+                dd.acquireReadLock();  // Technically required, but looks like overkill.", "+                _editorKit.write(os, dd, 0, dd.getLength());", "+                dd.releaseReadLock();", "-          try {", "-            // This calls getDocument().getPackageName() because this may be untitled and this.getPackageName() ", "-            // returns \"\" if it's untitled.  Right here we are interested in parsing the DefinitionsDocument's text", "-            _packageName = getDocument().getPackageName();", "-          } ", "-          catch(InvalidPackageException e) { _packageName = null; }", "+          // this.getPackageName does not return \"\" if this is untitled and contains a legal package declaration     ", "+//          try {", "+//            // This calls getDocument().getPackageName() because this may be untitled and this.getPackageName() ", "+//            // returns \"\" if it's untitled.  Right here we are interested in parsing the DefinitionsDocument's text", "+//            _packageName = getDocument().getPackageName();", "+//          } ", "+//          catch(InvalidPackageException e) { _packageName = null; }"]}], "num": 11182}