{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "934596a74b153833da336a03a2ff8788", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32e82c0c817a5a568f055bb4d2cc407d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   protected MethodData createMethodData(MethodDef that, SymbolData sd)", "signatureAfterChange": "   protected MethodData createMethodData(MethodDef that, SymbolData sd)", "diff": ["+//    _log.log(\"createMethodData(\" + that + \", \" + sd + \") called.\");", "-    if (rtString.equals(\"void\")) {// && level.equals(\"Elementary\")) {  ", "-      returnType = SymbolData.VOID_TYPE;", "-    }", "-    else {", "-      returnType = getSymbolData(rtString, that.getResult().getSourceInfo());", "-    }", "-    MethodData md = new MethodData(that.getName().getText(), that.getMav(), that.getTypeParams(), returnType, ", "+    if (rtString.equals(\"void\"))  returnType = SymbolData.VOID_TYPE;", "+    else returnType = getSymbolData(rtString, that.getResult().getSourceInfo());", "+", "+    MethodData md = MethodData.make(that.getName().getText(), that.getMav(), that.getTypeParams(), returnType, ", "+//    _log.log(\"createMethodData called.  Created MethodData \" + md + '\\n' + \"with modifiers:\" + md.getMav());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e2be31a929c05ada1fea3d1a6699617", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SourceInfo.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public boolean equals(Object obj)", "signatureAfterChange": "   public boolean equals(Object obj)", "diff": ["-      if ( ((tF == null) && (oF != null)) ||", "-           ((tF != null) && ! tF.equals(oF)))", "-      {", "-        return false;", "-      }", "-", "-      if (! (getStartLine() == casted.getStartLine())) return false;", "-      if (! (getStartColumn() == casted.getStartColumn())) return false;", "-      if (! (getEndLine() == casted.getEndLine())) return false;", "-      if (! (getEndColumn() == casted.getEndColumn())) return false;", "+      if ( (tF == null && oF != null) || (tF != null && ! tF.equals(oF)))  return false;", "+      if (! (getStartLine() == casted.getStartLine()))  return false;", "+      if (! (getStartColumn() == casted.getStartColumn()))  return false;", "+      if (! (getEndLine() == casted.getEndLine()))  return false;", "+      if (! (getEndColumn() == casted.getEndColumn()))  return false;"]}], "num": 6853}