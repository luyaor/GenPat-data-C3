{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d43f49e4044e60144bb201a707389675", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05333eab954d38b000525a1fb19b8644", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public Class<?> visit(PrimitiveType node)", "signatureAfterChange": "   public Type visit(PrimitiveType node)", "diff": ["-  public Class<?> visit(PrimitiveType node) {", "-    Class<?> c = node.getValue();", "+  public Type visit(PrimitiveType node) {", "+    Type c = node.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cda92a030114626e08a3dc71efb87b1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "   public Class<?> visit(UnsignedShiftRightAssignExpression node)", "signatureAfterChange": "   public Type visit(UnsignedShiftRightAssignExpression node)", "diff": ["-  public Class<?> visit(UnsignedShiftRightAssignExpression node) {", "-    Class<?> c = visitShiftExpression(node);", "-", "+  public Type visit(UnsignedShiftRightAssignExpression node) {", "+    Type c = visitShiftExpression(node);", "+    ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cc2a7bf9ff9805d1e2ae98483dcfe14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   private Class<?> _checkBinaryExpression(String text,                                         String leftExpected,                                         String rightExpected)      throws InterpreterException", "signatureAfterChange": "   private Type _checkBinaryExpression(String text,                                         String leftExpected,                                         String rightExpected)      throws InterpreterException", "diff": ["-  private Class<?> _checkBinaryExpression(String text, ", "+  private Type _checkBinaryExpression(String text, ", "-    Class<?> type = exp.acceptVisitor(_typeChecker);", "+    Type type = exp.acceptVisitor(_typeChecker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e51b92ed71af64b7e23ee2ce4e7c85a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "   public Class<?> visit(UnsignedShiftRightExpression node)", "signatureAfterChange": "   public Type visit(UnsignedShiftRightExpression node)", "diff": ["-  public Class<?> visit(UnsignedShiftRightExpression node) {", "-    Class<?> c = visitShiftExpression(node);", "-", "+  public Type visit(UnsignedShiftRightExpression node) {", "+    Type c = visitShiftExpression(node);", "+    ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "289fa2e7705ba812fcde6c69b5134109", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "   public Class<?> visit(CastExpression node)", "signatureAfterChange": "   public Type visit(CastExpression node)", "diff": ["-  public Class<?> visit(CastExpression node) {", "-    Class<?> c = node.getTargetType().acceptVisitor(this);", "+  public Type visit(CastExpression node) {", "+    Type c = node.getTargetType().acceptVisitor(this);", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a3fcf36b4fba5624361a4f5ed4103a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "   public Class<?> visit(ShiftRightAssignExpression node)", "signatureAfterChange": "   public Type visit(ShiftRightAssignExpression node)", "diff": ["-  public Class<?> visit(ShiftRightAssignExpression node) {", "-    Class<?> c = visitShiftExpression(node);", "-", "+  public Type visit(ShiftRightAssignExpression node) {", "+    Type c = visitShiftExpression(node);", "+    ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "482a66ec2fc67bfaedbb5f17266fd1e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "   public Class<?> visit(ShiftLeftAssignExpression node)", "signatureAfterChange": "   public Type visit(ShiftLeftAssignExpression node)", "diff": ["-  public Class<?> visit(ShiftLeftAssignExpression node) {", "-    Class<?> c = visitShiftExpression(node);", "-", "+  public Type visit(ShiftLeftAssignExpression node) {", "+    Type c = visitShiftExpression(node);", "+    ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b389db66a07e199178090087e7614f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NodeProperties.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static Class<?> getType(Node n)", "signatureAfterChange": "      public static Type getType(Node n)", "diff": ["+    public static Type getType(Node n) {", "+        return (Type)n.getProperty(TYPE);", "+    }", "-     */", "-    public static Class<?> getType(Node n) {", "-        return (Class<?>)n.getProperty(TYPE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73c2c1b7e7e8ba9ed7a409c21e80a3e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "   public Class<?> visit(ShiftLeftExpression node)", "signatureAfterChange": "   public Type visit(ShiftLeftExpression node)", "diff": ["-  public Class<?> visit(ShiftLeftExpression node) {", "-    Class<?> c = visitShiftExpression(node);", "-", "+  public Type visit(ShiftLeftExpression node) {", "+    Type c = visitShiftExpression(node);", "+    ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "810b9ab5932fb96e2cda83659fd052c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "   public Class<?> visit(ShiftRightExpression node)", "signatureAfterChange": "   public Type visit(ShiftRightExpression node)", "diff": ["-  public Class<?> visit(ShiftRightExpression node) {", "-    Class<?> c = visitShiftExpression(node);", "-", "+  public Type visit(ShiftRightExpression node) {", "+    Type c = visitShiftExpression(node);", "+    ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e5130e0eebb14f23b6cc84c29ec3205", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "   public Class<?> visit(FormalParameter node)", "signatureAfterChange": "   public Type visit(FormalParameter node)", "diff": ["-  public Class<?> visit(FormalParameter node) {", "-    Class<?> c = node.getType().acceptVisitor(this);", "-", "+  public Type visit(FormalParameter node) {", "+    Type c = node.getType().acceptVisitor(this);", "+    ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd5b196f3c26c0e7e71e1fc6b6a4a8de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private Class<?> _checkUnaryExpression(String text, String expected)      throws InterpreterException", "signatureAfterChange": "      private Type _checkUnaryExpression(String text, String expected)      throws InterpreterException", "diff": ["-  private Class<?> _checkUnaryExpression(String text, String expected) ", "+  private Type _checkUnaryExpression(String text, String expected) ", "-    Class<?> type = exp.acceptVisitor(_typeChecker);", "+    Type type = exp.acceptVisitor(_typeChecker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0b342c3ef11177b0ee4ed502b76bf31", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "   public Class<?> visit(LessOrEqualExpression node)", "signatureAfterChange": "   public Type visit(LessOrEqualExpression node)", "diff": ["-  public Class<?> visit(LessOrEqualExpression node) {", "-    Class<?> c = visitRelationalExpression(node);", "-", "+  public Type visit(LessOrEqualExpression node) {", "+    Type c = visitRelationalExpression(node);", "+    ", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c89a5f82f0abd71a57dc9774caaa7fd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   public Class<?> visit(GreaterOrEqualExpression node)", "signatureAfterChange": "   public Type visit(GreaterOrEqualExpression node)", "diff": ["-  public Class<?> visit(GreaterOrEqualExpression node) {", "-    Class<?> c = visitRelationalExpression(node);", "-", "+  public Type visit(GreaterOrEqualExpression node) {", "+    Type c = visitRelationalExpression(node);", "+    ", "-", "+    "]}], "num": 8352}