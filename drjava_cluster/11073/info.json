{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b6b963d4908464015990e3691d64037", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30c232ac87fe068414001011d0ae932c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/Indenter.java", "commitBeforeChange": "c0487ade35919fa6d08b7c39361898d3c5751c04", "commitAfterChange": "7b4296c095d59b57f25b910a8bdce57816e7621f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void buildTree(int indentLevel)", "signatureAfterChange": "   public void buildTree(int indentLevel)", "diff": ["-   */", "+    */", "-      rule38 = new QuestionCurrLineStartsWith(\")\",rule30,rule15),  //BROKEN", "-        // Why is rule 38 here?", "+      rule38 = new QuestionCurrLineStartsWith(\")\", rule30, rule15),  //BROKEN", "-      rule13 = new QuestionBraceIsParenOrBracket(rule14, rule17),", "+      rule13 = new QuestionBraceIsParenOrBracket(rule14, rule17),  // last block/expression list opens with \"(\" or \"[\"?", "-      rule05 = new ActionStartPrevLinePlus(\" \"),", "-      rule04 = new ActionStartPrevLinePlus(\" * \"),", "-        ", "+      rule05 = new ActionStartPrevLinePlus(\" \"),    // padding prefix for interior of ordinary block comment", "+      rule04 = new ActionStartPrevLinePlus(\" * \"),  // padding prefix for new line within ordinary block comment", "+      rule46 = new ActionStartPrevLinePlus(\"  * \"), // padding prefix for new line within special javadoc block comment", "+      rule47 = new ActionStartPrevLinePlus(\"  \"),   // padding prefix for interior of special javadoc block comment", "+      rule48 = new QuestionPrevLineStartsJavaDocWithText(rule47, rule05),  // Prev line begins special javadoc comment? ", "+      rule45 = new QuestionPrevLineStartsJavaDocWithText(rule46, rule04),  // Prev line begins special javadoc comment?", "-      rule03 = new QuestionCurrLineEmptyOrEnterPress((autoCloseComments? rule42 : rule04), rule05),", "+      rule49 = new ActionStartPrevLinePlusMultilinePreserve(new String[] {\"  */\" }, 0, 4, 0, 4), ", "+      rule50 = new QuestionFollowedByStar(rule46, rule49),", "+      rule51 = new QuestionPrevLineStartsJavaDocWithText(rule50, rule42),", "+      rule03 = new QuestionCurrLineEmptyOrEnterPress((autoCloseComments? rule51 : rule45), rule48),", "-", "-       ", "-//      rule01 = new QuestionInsideComment(rule02, rule13);  /* replaced by preceding three rules */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c96d23b29b85ee6775e1b504d9f6ea75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/Indenter.java", "commitBeforeChange": "ab72ce86901addf5fe2a66f48b9dc4c5f7db818b", "commitAfterChange": "0d293f065df295b40875d176fa985aae8404680f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void buildSimpleTree()", "signatureAfterChange": "   public void buildSimpleTree()", "diff": ["-    IndentRule rule = new QuestionInsideComment(new ActionBracePlus(\"\"),", "-                                                new ActionDoNothing());", "-    _topRule = rule;", "+    IndentRule ", "+      rule05 = new ActionDoNothing(),", "+      rule04 = new ActionStartPrevLinePlus(\" \"), ", "+      rule03 = new QuestionCurrLineEmpty(rule04, rule05);", "+    IndentRule ", "+      rule11 = new QuestionBraceIsParenOrBracket(rule05, rule05),  // Change for real tree", "+      rule10 = rule03,      ", "+      rule09 = new ActionStartPrevLinePlus(\"* \"),", "+      rule08 = new ActionStartPrevLinePlus(\"\"),", "+      rule07 = new QuestionCurrLineStartsWith(\"*\", rule08, rule09),", "+      rule06 = new QuestionPrevLineStartsWith(\"*\", rule07, rule10),", "+      rule02 = new QuestionPrevLineStartsComment(rule03, rule06),", "+      rule01 = new QuestionInsideComment(rule02, rule11);", "+    ", "+    _topRule = rule01;"]}], "num": 11073}