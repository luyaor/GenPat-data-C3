{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c78718fcdbdb7ccff98b1f35a7f8f73", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fba61693fdc653f5c5d285ffd55f7a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "          public void testForDoStatement()", "signatureAfterChange": "          public void testForDoStatement()", "diff": ["-      Expression te = new LessThanExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"j\")),", "-        new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5));", "+      Expression te = new LessThanExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"j\")),", "+        new IntegerLiteral(SourceInfo.NO_INFO, 5));", "-      Statement assignStatement = new ExpressionStatement(JExprParser.NO_SOURCE_INFO, new SimpleAssignmentExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\")), new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 10)));      ", "+      Statement assignStatement = new ExpressionStatement(SourceInfo.NO_INFO, new SimpleAssignmentExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\")), new IntegerLiteral(SourceInfo.NO_INFO, 10)));      ", "-      Statement ts = new Block(JExprParser.NO_SOURCE_INFO, new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {assignStatement}));", "-      DoStatement ds = new DoStatement(JExprParser.NO_SOURCE_INFO, ts, te);", "+      Statement ts = new Block(SourceInfo.NO_INFO, new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {assignStatement}));", "+      DoStatement ds = new DoStatement(SourceInfo.NO_INFO, ts, te);", "-      te = new PlusAssignmentExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\")), new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5));", "-      ds = new DoStatement(JExprParser.NO_SOURCE_INFO, ts, te);", "+      te = new PlusAssignmentExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\")), new IntegerLiteral(SourceInfo.NO_INFO, 5));", "+      ds = new DoStatement(SourceInfo.NO_INFO, ts, te);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2cb2295265a7af42098983b2d021466", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "          public void testForWhileStatement()", "signatureAfterChange": "          public void testForWhileStatement()", "diff": ["-      Expression te = new LessThanExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"j\")),", "-        new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5));", "+      Expression te = new LessThanExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"j\")),", "+        new IntegerLiteral(SourceInfo.NO_INFO, 5));", "-      Statement assignStatement = new ExpressionStatement(JExprParser.NO_SOURCE_INFO, new SimpleAssignmentExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\")), new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 10)));      ", "+      Statement assignStatement = new ExpressionStatement(SourceInfo.NO_INFO, new SimpleAssignmentExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\")), new IntegerLiteral(SourceInfo.NO_INFO, 10)));      ", "-      Statement ts = new Block(JExprParser.NO_SOURCE_INFO, new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {assignStatement}));", "-      WhileStatement ws = new WhileStatement(JExprParser.NO_SOURCE_INFO, te, ts);", "+      Statement ts = new Block(SourceInfo.NO_INFO, new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {assignStatement}));", "+      WhileStatement ws = new WhileStatement(SourceInfo.NO_INFO, te, ts);", "-      te = new SimpleAssignmentExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\")), new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5));", "-      ws = new WhileStatement(JExprParser.NO_SOURCE_INFO, te, ts);", "+      te = new SimpleAssignmentExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\")), new IntegerLiteral(SourceInfo.NO_INFO, 5));", "+      ws = new WhileStatement(SourceInfo.NO_INFO, te, ts);"]}], "num": 29429}