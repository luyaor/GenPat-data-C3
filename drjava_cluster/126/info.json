{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1facba431ebd08f7aac4dacd8340555", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38149b98af7b570d3bb37dd9a347dfa8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "commitAfterChange": "56a5d7ef4f332df9b45adf95f71d664c61575e1a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testCompilePackageAsField2()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompilePackageAsField2() throws BadLocationException, IOException", "diff": ["-  public void testCompilePackageAsField2()", "-    throws BadLocationException, IOException", "-  {", "+  public void testCompilePackageAsField2() throws BadLocationException, IOException {", "-    CompileShouldFailListener listener = new CompileShouldFailListener();", "-    _model.addListener(listener);", "+    _compileDone = false;", "+    _model.addListener(_failListener);", "-    listener.checkCompileOccurred();", "+    _waitCompileDone();", "+    _failListener.checkCompileOccurred();", "-    assertEquals(_name() + \"Class file exists after failing compile\",", "-                 false,", "-                 compiled.exists());", "-    _model.removeListener(listener);", "+    assertEquals(_name() + \"Class file exists after failing compile\", false, compiled.exists());", "+    _model.removeListener(_failListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5467a8025b2789c852e99747225468a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileErrorsTest.java", "commitBeforeChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "commitAfterChange": "56a5d7ef4f332df9b45adf95f71d664c61575e1a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testCompilePackageAsField()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompilePackageAsField() throws BadLocationException, IOException", "diff": ["-  public void testCompilePackageAsField()", "-    throws BadLocationException, IOException", "-  {", "+  public void testCompilePackageAsField() throws BadLocationException, IOException {", "-", "-    CompileShouldFailListener listener = new CompileShouldFailListener();", "-", "-    _model.addListener(listener);", "+    ", "+    _compileDone = false;", "+    _model.addListener(_failListener);", "-    listener.checkCompileOccurred();", "+    _waitCompileDone();", "+    _failListener.checkCompileOccurred();", "-    assertEquals(_name() + \"Class file exists after failing compile\",", "-                 false,", "-                 compiled.exists());", "-    _model.removeListener(listener);", "+    assertEquals(_name() + \"Class file exists after failing compile\", false, compiled.exists());", "+    _model.removeListener(_failListener);"]}], "num": 126}