{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ebbd4e41dd3a08f4ab11cc42584f993", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "675a383d2970c2733e9721a1dad5c14a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "9c6f88c259086ee69c4d958032e8427e6f011b12", "commitAfterChange": "9437c2299622c109c03b30ccc782cae5639dae6e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public abstract Type join(Type t1, Type t2);", "signatureAfterChange": "   public abstract Type join(Iterable<? extends Type> ts);", "diff": ["-  /** Compute a common supertype of {@code t1} and {@code t2}. */", "-  public abstract Type join(Type t1, Type t2);", "+  /** Compute a common supertype of the given list of types. */", "+  public abstract Type join(Iterable<? extends Type> ts);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d57e89f734ddc5713cc0756a33373810", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "9c6f88c259086ee69c4d958032e8427e6f011b12", "commitAfterChange": "9437c2299622c109c03b30ccc782cae5639dae6e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public abstract Type meet(Type t1, Type t2);", "signatureAfterChange": "   public abstract Type meet(Iterable<? extends Type> ts);", "diff": ["-  /** Compute a common subtype of {@code t1} and {@code t2}. */", "-  public abstract Type meet(Type t1, Type t2);", "+  /** Compute a common subtype of the given list of types. */", "+  public abstract Type meet(Iterable<? extends Type> ts);"]}], "num": 30476}