{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a360905f68d0918d2ac3892951beebd2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19f84ddf6a1fcdb32f8b013549d2cb75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public Object interpret(Reader r, String fname) throws InterpreterException", "signatureAfterChange": "     public Object interpret(Reader r, String fname) throws InterpreterException", "diff": ["-        List    statements = p.parseStream();", "-        ListIterator    it = statements.listIterator();", "+        List<Node>   statements = p.parseStream();", "+        ListIterator<Node>   it = statements.listIterator();", "-          Visitor v = makeNameVisitor(nameVisitorContext, checkVisitorContext);", "-          Object o = n.acceptVisitor(v);", "-          if (o != null) {", "-            n = (Node)o;", "-          }", "+          NameVisitor nv = makeNameVisitor(nameVisitorContext, checkVisitorContext);", "+          Node o = n.acceptVisitor(nv);", "+          if (o != null) n = o;", "-          v = makeTypeChecker(checkVisitorContext);", "-          n.acceptVisitor(v);", "+          TypeChecker tc = makeTypeChecker(checkVisitorContext);", "+          n.acceptVisitor(tc);", "-          v = makeEvaluationVisitor(evalVisitorContext);", "-          result = n.acceptVisitor(v);", "+          EvaluationVisitor ev = makeEvaluationVisitor(evalVisitorContext);", "+          result = n.acceptVisitor(ev);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38f6b9948bb11a43d966452c7106db65", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public Object interpret(Reader r, String fname) throws InterpreterException", "signatureAfterChange": "     public Object interpret(Reader r, String fname) throws InterpreterException", "diff": ["-        List    statements = p.parseStream();", "-        ListIterator    it = statements.listIterator();", "+        List<Node>   statements = p.parseStream();", "+        ListIterator<Node>   it = statements.listIterator();", "-          Visitor v = makeNameVisitor(nameVisitorContext, checkVisitorContext);", "-          Object o = n.acceptVisitor(v);", "-          if (o != null) {", "-            n = (Node)o;", "-          }", "+          NameVisitor nv = makeNameVisitor(nameVisitorContext, checkVisitorContext);", "+          Node o = n.acceptVisitor(nv);", "+          if (o != null) n = o;", "-          v = makeTypeChecker(checkVisitorContext);", "-          n.acceptVisitor(v);", "+          TypeChecker tc = makeTypeChecker(checkVisitorContext);", "+          n.acceptVisitor(tc);", "-          v = makeEvaluationVisitor(evalVisitorContext);", "-          result = n.acceptVisitor(v);", "+          EvaluationVisitor ev = makeEvaluationVisitor(evalVisitorContext);", "+          result = n.acceptVisitor(ev);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3ecb6a009628035d1984c4ef974a7a5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public Object interpret(Reader r, String fname) throws InterpreterException", "signatureAfterChange": "     public Object interpret(Reader r, String fname) throws InterpreterException", "diff": ["-        List<Node>   statements = p.parseStream();", "-        ListIterator<Node>   it = statements.listIterator();", "+        List    statements = p.parseStream();", "+        ListIterator    it = statements.listIterator();", "-          NameVisitor nv = makeNameVisitor(nameVisitorContext, checkVisitorContext);", "-          Node o = n.acceptVisitor(nv);", "-          if (o != null) n = o;", "+          Visitor v = makeNameVisitor(nameVisitorContext, checkVisitorContext);", "+          Object o = n.acceptVisitor(v);", "+          if (o != null) {", "+            n = (Node)o;", "+          }", "-          TypeChecker tc = makeTypeChecker(checkVisitorContext);", "-          n.acceptVisitor(tc);", "+          v = makeTypeChecker(checkVisitorContext);", "+          n.acceptVisitor(v);", "-          EvaluationVisitor ev = makeEvaluationVisitor(evalVisitorContext);", "-          result = n.acceptVisitor(ev);", "+          v = makeEvaluationVisitor(evalVisitorContext);", "+          result = n.acceptVisitor(v);"]}], "num": 7830}