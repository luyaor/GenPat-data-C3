{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2de7351154c6628c5c141f6d84888c71", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0699112bedf27b26cd5445ea7656309b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void updateListPane(boolean done)", "signatureAfterChange": "     protected void updateListPane(boolean done)", "diff": ["-     */", "-    public void updateListPane(boolean done) {", "+    /** Update the pane which holds the list of errors for the viewer. */", "+    protected void updateListPane(boolean done) {", "-        if (_numErrors == 0) {", "-          _updateNoErrors(done);", "-        }", "-        else {", "-          _updateWithErrors();", "-        }", "+        if (_numErrors == 0) _updateNoErrors(done);", "+        else _updateWithErrors();", "-      catch (BadLocationException e) {", "-        throw new UnexpectedException(e);", "-      }", "+      catch (BadLocationException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60c3177f894e2c9b30ea094956fb6612", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public FindReplaceMachine(Document doc, int position)      throws BadLocationException", "signatureAfterChange": "   public FindReplaceMachine()", "diff": ["-  public FindReplaceMachine(Document doc, int position) ", "-    throws BadLocationException", "-  {", "-    // we have to put this in here because createPosition", "-    // will not catch these cases for us.  Better safe than", "-    // sorry, and we shouldn't have to deal later with positions", "-    // that are not within the bounds of the document.", "-    if ((position < 0) ||", "-        (position > doc.getLength())) ", "-    {", "-      throw new BadLocationException(\"position outside document bounds\",", "-                                     position);", "-    }", "-    _doc = doc;", "-    _start = _doc.createPosition(position);", "-    _current = _doc.createPosition(position);", "+   */", "+  public FindReplaceMachine() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbdf9034a209423dfa04307db228a44e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   private void _indentBlock(final int start, final int end, int reason, ProgressMonitor pm)     throws OperationCanceledException", "signatureAfterChange": "   private void _indentBlock(final int start, final int end, int reason, ProgressMonitor pm)     throws OperationCanceledException", "diff": ["-      // Keep marker at the end. This Position will be the", "-      // correct endpoint no matter how we change the doc", "-      // doing the indentLine calls.", "+      // Keep marker at the end. This Position will be the correct endpoint no matter how we change ", "+      // the doc doing the indentLine calls.", "-          if (pm.isCanceled()) {", "-            throw new OperationCanceledException();", "-          }", "+          if (pm.isCanceled()) throw new OperationCanceledException();", "-    catch (BadLocationException e) {", "-      // Should not happen", "-      throw new UnexpectedException(e);", "-    }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }"]}], "num": 15412}