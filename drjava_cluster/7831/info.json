{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2944a256d1c2984a8010d5496ff55d6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34f26434de23dae90cedf9cb0c7ffa9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/PreventExitSecurityManager.java", "commitBeforeChange": "b2b6471e1560c54bd01c487ab6cd5dc5ac9f4747", "commitAfterChange": "7c2b459760724c8e0af7c91f77f7fa41e315edc6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void checkPermission(Permission perm)", "signatureAfterChange": "   public void checkPermission(Permission perm)", "diff": ["-   */", "+  /** Disallow setting security manager, but otherwise delegate to parent. */", "-      if (! _timeToDeactivate) {", "-        throw new SecurityException(\"Can not reset security manager!\");", "-      }", "+      if (! _timeToDeactivate) throw new SecurityException(\"Can not reset security manager!\");", "-      if (_parent != null) {", "-        _parent.checkPermission(perm);", "-      }", "+      if (_parent != null) _parent.checkPermission(perm);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5318427f06ca674f38391a065ea517c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "ed15f1e3933f222801a436b129bc84e5a740d057", "commitAfterChange": "bbd785aca5328b3626f876bbde3d11c7481ab852", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private int _getIndexForError(CompilerError error)", "signatureAfterChange": "     private int _getIndexForError(CompilerError error)", "diff": ["-      if (error == null) return -1;", "+      if (error == null) {", "+        throw new IllegalArgumentException(\"Couldn't find index for null error\");", "+      }", "-      int index = -1;", "+", "-          index = i;", "-          break;", "+          return i;", "-      return index;", "+", "+      throw new IllegalArgumentException(\"Couldn't find index for error \" + error);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32eda5805ed76e2eaf3b232a9fffe2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private int _getIndexForError(CompilerError error)", "signatureAfterChange": "     private int _getIndexForError(CompilerError error)", "diff": ["-     */", "+    /** Returns the index into _errorListPositions corresponding to the given CompilerError. */", "-      if (error == null) {", "-        throw new IllegalArgumentException(\"Couldn't find index for null error\");", "-      }", "+      ", "+      if (error == null) throw new IllegalArgumentException(\"Couldn't find index for null error\");", "-        ", "-        if (error.equals(e)) {", "-          return i;", "-        }", "+        if (error.equals(e))  return i;"]}], "num": 7831}