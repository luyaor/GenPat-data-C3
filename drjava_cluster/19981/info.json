{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c63ef2ae748a2d0758227769383f82ec", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47874f47069b5235df3cd15ff7a749de", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": "       public void testForEqualityExpressionOnly()", "signatureAfterChange": "       public void testForEqualityExpressionOnly()", "diff": ["-      EqualityExpression ee = new EqualsExpression(JExprParser.NO_SOURCE_INFO, new NullLiteral(JExprParser.NO_SOURCE_INFO), ", "-                                                   new NullLiteral(JExprParser.NO_SOURCE_INFO));", "+      EqualityExpression ee = new EqualsExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), ", "+                                                   new NullLiteral(SourceInfo.NO_INFO));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5221fb5516f10b07eca6ba42f89a3759", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "       public void testForNumericBinaryExpressionOnly()", "signatureAfterChange": "       public void testForNumericBinaryExpressionOnly()", "diff": ["-      NumericBinaryExpression nbe = new ModExpression(JExprParser.NO_SOURCE_INFO, new NullLiteral(JExprParser.NO_SOURCE_INFO), new NullLiteral(JExprParser.NO_SOURCE_INFO));", "+      NumericBinaryExpression nbe = new ModExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), new NullLiteral(SourceInfo.NO_INFO));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0f35d42a89767e9be16f452f0e26647", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": "         public void testForPlusExpressionOnly()", "signatureAfterChange": "         public void testForPlusExpressionOnly()", "diff": ["-      PlusExpression pe = new PlusExpression(JExprParser.NO_SOURCE_INFO, new NullLiteral(JExprParser.NO_SOURCE_INFO), new NullLiteral(JExprParser.NO_SOURCE_INFO));", "+      PlusExpression pe = new PlusExpression(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), new NullLiteral(SourceInfo.NO_INFO));"]}], "num": 19981}