{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7da1a1fdfe54b147834a0b7240920296", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ab7f114b90e4c1018fe61aa8a6a3c03", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "df2b79c4755a48b6d68cea0053ee5b504fa8b5d0", "commitAfterChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 134, "signatureBeforeChange": "   void initCompleteWordDialog()", "signatureAfterChange": "   void initCompleteWordDialog()", "diff": ["-            List<GoToFileListEntry> l = _completeWordDialog.getList();", "+            List<ClassNameAndPackageEntry> l = _completeWordDialog.getList();", "-            List<GoToFileListEntry> l = _completeWordDialog.getList();", "-            List<GoToFileListEntry> n = new ArrayList<GoToFileListEntry>();", "-            for(GoToFileListEntry entry: l) {", "-              if (!(entry instanceof NoDocumentFileListEntry)) { n.add(entry); }", "+            List<ClassNameAndPackageEntry> l = _completeWordDialog.getList();", "+            generateJavaAPIList();", "+            if (_javaAPIList==null) {", "+              DrJava.getConfig().setSetting(OptionConstants.DIALOG_COMPLETE_JAVAAPI, Boolean.FALSE);", "+              _completeJavaAPICheckbox.setSelected(false);", "+              _completeJavaAPICheckbox.setEnabled(false);", "+              List<ClassNameAndPackageEntry> n = new ArrayList<ClassNameAndPackageEntry>();", "+              for(ClassNameAndPackageEntry entry: l) {", "+                if (!(entry instanceof JavaAPIListEntry)) { n.add(entry); }", "+              }", "+              _completeWordDialog.setItems(true,n);", "-            _completeWordDialog.setItems(true,n);", "+            else {", "+              for(JavaAPIListEntry entry: _javaAPIList) { l.remove(entry); }", "+              _completeWordDialog.setItems(true,l);", "+            }", "-      PredictiveInputFrame.InfoSupplier<GoToFileListEntry> info = ", "-        new PredictiveInputFrame.InfoSupplier<GoToFileListEntry>() {", "-        public String apply(GoToFileListEntry entry) {", "+      PredictiveInputFrame.InfoSupplier<ClassNameAndPackageEntry> info = ", "+        new PredictiveInputFrame.InfoSupplier<ClassNameAndPackageEntry>() {", "+        public String apply(ClassNameAndPackageEntry entry) {", "-          sb.append(entry.toString());", "+          sb.append(entry.getClassName());", "-      PredictiveInputFrame.CloseAction<GoToFileListEntry> okAction = new PredictiveInputFrame.CloseAction<GoToFileListEntry>() {", "+      PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry> okAction =", "+        new PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry>() {", "-        public Object apply(PredictiveInputFrame<GoToFileListEntry> p) {", "+        public Object apply(PredictiveInputFrame<ClassNameAndPackageEntry> p) {", "-                odd.insertString(start, p.getItem().toString(), null);", "+                odd.insertString(start, p.getItem().getClassName(), null);", "-      PredictiveInputFrame.CloseAction<GoToFileListEntry> fullAction = new PredictiveInputFrame.CloseAction<GoToFileListEntry>() {", "+      PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry> fullAction =", "+        new PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry>() {", "-        public Object apply(PredictiveInputFrame<GoToFileListEntry> p) {", "+        public Object apply(PredictiveInputFrame<ClassNameAndPackageEntry> p) {", "-                sb.append(p.getItem().toString());", "+                sb.append(p.getItem().getClassName());", "-      PredictiveInputFrame.CloseAction<GoToFileListEntry> cancelAction = ", "-        new PredictiveInputFrame.CloseAction<GoToFileListEntry>() {", "+      PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry> cancelAction = ", "+        new PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry>() {", "-        public Object apply(PredictiveInputFrame<GoToFileListEntry> p) {", "+        public Object apply(PredictiveInputFrame<ClassNameAndPackageEntry> p) {", "-      java.util.ArrayList<PredictiveInputModel.MatchingStrategy<GoToFileListEntry>> strategies =", "-        new java.util.ArrayList<PredictiveInputModel.MatchingStrategy<GoToFileListEntry>>();", "-      strategies.add(new PredictiveInputModel.FragmentStrategy<GoToFileListEntry>());", "-      strategies.add(new PredictiveInputModel.PrefixStrategy<GoToFileListEntry>());", "-      strategies.add(new PredictiveInputModel.RegExStrategy<GoToFileListEntry>());", "-      List<PredictiveInputFrame.CloseAction<GoToFileListEntry>> actions", "-        = new ArrayList<PredictiveInputFrame.CloseAction<GoToFileListEntry>>();", "+      java.util.ArrayList<PredictiveInputModel.MatchingStrategy<ClassNameAndPackageEntry>> strategies =", "+        new java.util.ArrayList<PredictiveInputModel.MatchingStrategy<ClassNameAndPackageEntry>>();", "+      strategies.add(new PredictiveInputModel.FragmentStrategy<ClassNameAndPackageEntry>());", "+      strategies.add(new PredictiveInputModel.PrefixStrategy<ClassNameAndPackageEntry>());", "+      strategies.add(new PredictiveInputModel.RegExStrategy<ClassNameAndPackageEntry>());", "+      List<PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry>> actions", "+        = new ArrayList<PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry>>();", "-        new PredictiveInputFrame<GoToFileListEntry>(MainFrame.this,", "-                                                    \"Auto-Complete Word\",", "-                                                    true, // force", "-                                                    true, // ignore case", "-                                                    info,", "-                                                    strategies,", "-                                                    actions,", "-                                                    new GoToFileListEntry(null, \"dummy\")) {", "+        new PredictiveInputFrame<ClassNameAndPackageEntry>(MainFrame.this,", "+                                                           \"Auto-Complete Word\",", "+                                                           true, // force", "+                                                           true, // ignore case", "+                                                           info,", "+                                                           strategies,", "+                                                           actions,", "+                                                           new GoToFileListEntry(new DummyOpenDefDoc() {", "+        public String getPackageNameFromDocument() { return \"\"; }", "+      }, \"dummyComplete\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91a69b61e9ffce854cec7994a4bb4643", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "1c816952b5b8421dc41f789510e8d7ee742c6828", "commitAfterChange": "5d5ee31a35adeb92d7addaffa7abf0c54d001a85", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   private void _setupFileTypesPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupFileTypesPanel(ConfigPanel panel)", "diff": ["-      addOptionComponent(panel, new LabelComponent(\"<html>Assign DrJava project files with the<br>\"+", "-                                                   \"extension .drjava to DrJava. When double-clicking<br>\"+", "-                                                   \"on a .drjava file, DrJava will open it.</html>\", this, true));", "+      addOptionComponent(panel, new LabelComponent(\"<html>Assign DrJava project files and DrJava extensions<br>\"+", "+                                                   \"(with the extensions .drjava and .djapp) to DrJava.<br>\"+", "+                                                   \"When double-clicking on a .drjava file, DrJava will open it.</html>\", this, true));", "-      addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "+      panel.addComponent(new ButtonComponent(new ActionListener() {", "-          if (!PlatformFactory.ONLY.registerProjectFileExtension()) {", "+          if (PlatformFactory.ONLY.registerDrJavaFileExtensions()) {", "-                                          \"Could not set .drjava file association.\",", "+                                          \"Successfully set .drjava and .djapp file associations.\",", "+                                          \"Success\",", "+                                          JOptionPane.INFORMATION_MESSAGE); ", "+          }", "+          else {", "+            JOptionPane.showMessageDialog(ConfigFrame.this,", "+                                          \"Could not set .drjava and .djapp file associations.\",", "-      }, \"Associate .drjava Files with DrJava\", this, \"This associates .drjava project files with DrJava.\"));", "+      }, \"Associate .drjava and .djapp Files with DrJava\", this, \"This associates .drjava and .djapp files with DrJava.\"));", "-      addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "+      panel.addComponent(new ButtonComponent(new ActionListener() {", "-          if (!PlatformFactory.ONLY.unregisterProjectFileExtension()) {", "+          if (PlatformFactory.ONLY.unregisterDrJavaFileExtensions()) {", "-                                          \"Could not remove .drjava file association.\",", "+                                          \"Successfully removed .drjava and .djapp file associations.\",", "+                                          \"Success\",", "+                                          JOptionPane.INFORMATION_MESSAGE); ", "+          }", "+          else {", "+            JOptionPane.showMessageDialog(ConfigFrame.this,", "+                                          \"Could not remove .drjava and .djapp file associations.\",", "-      }, \"Remove .drjava File Associates\", this, \"This removes the association of .drjava project files with DrJava.\"));", "-      ", "-      addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "-      ", "-      addOptionComponent(panel, new ForcedChoiceOptionComponent(OptionConstants.PROJECT_FILE_EXT_REGISTRATION,", "-                                                                \"<html>Automatically assign .drjava Project Files to DrJava</html>\", this,", "-                                                                \"<html>Selecting 'always' will re-establish the file association every time DrJava<br>\"+", "-                                                                \"started, without asking. Selecting 'ask me' will ask the user at start up<br>\"+", "-                                                                \"if the association has been changed. Selecting 'never' will not assign<br>\"+", "-                                                                \".drjava files to DrJava.\"));", "+      }, \"Remove .drjava and .djapp File Associations\", this, \"This removes the association of .drjava and .djapp files with DrJava.\"));", "-      addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "+      panel.addComponent(new ButtonComponent(new ActionListener() {", "-          if (!PlatformFactory.ONLY.registerJavaFileExtension()) {", "+          if (PlatformFactory.ONLY.registerJavaFileExtension()) {", "+            JOptionPane.showMessageDialog(ConfigFrame.this,", "+                                          \"Successfully set .java file association.\",", "+                                          \"Success\",", "+                                          JOptionPane.INFORMATION_MESSAGE); ", "+          }", "+          else {", "-      addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "+      panel.addComponent(new ButtonComponent(new ActionListener() {", "-          if (!PlatformFactory.ONLY.unregisterJavaFileExtension()) {", "+          if (PlatformFactory.ONLY.unregisterJavaFileExtension()) {", "+            JOptionPane.showMessageDialog(ConfigFrame.this,", "+                                          \"Successfully removed .java file association.\",", "+                                          \"Success\",", "+                                          JOptionPane.INFORMATION_MESSAGE); ", "+          }", "+          else {", "-      }, \"Remove .java File Association\", this, \"This removes the association of .drjava project files with DrJava.\"));", "+      }, \"Remove .java File Association\", this, \"This removes the association of .java project files with DrJava.\"));", "-      addOptionComponent(panel, new ForcedChoiceOptionComponent(OptionConstants.JAVA_FILE_EXT_REGISTRATION,", "-                                                                \"<html>Automatically assign .java Source Files to DrJava</html>\", this,", "-                                                                \"<html>Assign Java source files with the extension .java to DrJava.<br>\"+", "-                                                                \"When double-clicking on a .java file, DrJava will open it.<br><br>\"+", "+      addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "+      addOptionComponent(panel, new LabelComponent(\"<html>&nbsp;</html>\", this, true));", "+      ", "+      addOptionComponent(panel, new ForcedChoiceOptionComponent(OptionConstants.FILE_EXT_REGISTRATION,", "+                                                                \"<html>Automatically assign .java, .drjava and .djapp Files to DrJava</html>\", this,", "+                                                                \"<html>Assign files with the extensions .java, .drjava and .djapp to DrJava.<br>\"+", "+                                                                \"When double-clicking those files, they will be opened in DrJava.<br><br>\"+", "-                                                                \".drjava files to DrJava.\"));", "+                                                                \".java, .drjava and .djapp files to DrJava.\"));"]}], "num": 561}