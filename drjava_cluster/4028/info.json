{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f46e4d352bb51c4416a023d22498e80", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "183e3ce2180c85fd65dc1e7ac51829ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "b9f87cd074abdafacdb2719b29e0803fd0f81cf0", "commitAfterChange": "04d7824a20eb03ad17793ba3198be21442313bdc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r   protected void enableDisableBreakpoint()", "signatureAfterChange": "   protected void enableDisableBreakpoint()", "diff": ["-  /** Toggle breakpoint's enable/disable flag. */\r", "-  protected void enableDisableBreakpoint() {\r", "-    final ArrayList<Breakpoint> bps = getSelectedRegions();\r", "-    if (bps.size()>0) {\r", "-      final boolean newState = !bps.get(0).isEnabled();\r", "-      for (Breakpoint bp: bps) {\r", "-        _model.getBreakpointManager().changeRegion(bp, new Lambda<Object, Breakpoint>() {\r", "-          public Object apply(Breakpoint bp) {\r", "-            bp.setEnabled(newState);\r", "-            return null;\r", "-          }\r", "-        });\r", "-      }\r", "-    }\r", "-  }\r", "+  /** Toggle breakpoint's enable/disable flag. */", "+  protected void enableDisableBreakpoint() {", "+    final ArrayList<Breakpoint> bps = getSelectedRegions();", "+    if (bps.size()>0) {", "+      final boolean newState = !bps.get(0).isEnabled();", "+      for (Breakpoint bp: bps) {", "+        _regionManager.changeRegion(bp, new Lambda<Object, Breakpoint>() {", "+          public Object apply(Breakpoint bp) {", "+            bp.setEnabled(newState);", "+            return null;", "+          }", "+        });", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60215a9e0d90e8df9b96cc4f4b71a26f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "e48d5f3129b8001e5afe1a32af197a9281189fe3", "commitAfterChange": "7c30ebf6c2ad7a3fa703d87cd5aaa9a3fff06bee", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   protected void enableDisableBreakpoint()", "signatureAfterChange": "   protected void enableDisableBreakpoint()", "diff": ["-    final Breakpoint r = getSelectedRegion();", "-    if (r != null) {", "-      _model.getBreakpointManager().changeRegion(r, new Lambda<Object, Breakpoint>() {", "-        public Object apply(Breakpoint bp) {", "-          bp.setEnabled(!bp.isEnabled());", "-          return null;", "-        }", "-      });", "+    final ArrayList<Breakpoint> bps = getSelectedRegions();", "+    if (bps.size()>0) {", "+      final boolean newState = !bps.get(0).isEnabled();", "+      for (Breakpoint bp: bps) {", "+        _model.getBreakpointManager().changeRegion(bp, new Lambda<Object, Breakpoint>() {", "+          public Object apply(Breakpoint bp) {", "+            bp.setEnabled(newState);", "+            return null;", "+          }", "+        });", "+      }"]}], "num": 4028}