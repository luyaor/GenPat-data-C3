{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa000866fe4d9c1676736448b361a452", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df13e8b3915f5fe562c73f001b28b338", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public Object visit(BlockStatement node)", "signatureAfterChange": "   public Node visit(BlockStatement node)", "diff": ["+   */", "+  public Node visit(BlockStatement node) {", "+    // Enter a new scope", "+    context.enterScope();", "+    ", "+    // Visit the nested statements", "+    visitList(node.getStatements());", "+    ", "+    // Leave the current scope", "+    context.leaveScope();", "+    ", "+    return null;", "+  }", "-     */", "-    public Object visit(BlockStatement node) {", "-        // Enter a new scope", "-        context.enterScope();", "-", "-        // Visit the nested statements", "-        visitList(node.getStatements());", "-", "-        // Leave the current scope", "-        context.leaveScope();", "-        ", "-        return null;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe0083540974077cc1ddb05307c80321", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public Object visit(CatchStatement node)", "signatureAfterChange": "   public Node visit(CatchStatement node)", "diff": ["+   */", "+  public Node visit(CatchStatement node) {", "+    // Enter a new scope", "+    context.enterScope();", "+    ", "+    node.getException().acceptVisitor(this);", "+    node.getBlock().acceptVisitor(this);", "+    // Leave the current scope", "+    context.leaveScope();", "+    return null;", "+  }", "-     */", "-    public Object visit(CatchStatement node) {", "-\t// Enter a new scope", "-\tcontext.enterScope();", "-", "-\tnode.getException().acceptVisitor(this);", "-\tnode.getBlock().acceptVisitor(this);", "-\t// Leave the current scope", "-\tcontext.leaveScope();", "-\treturn null;", "-    }"]}], "num": 27415}