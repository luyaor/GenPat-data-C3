{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e9c165bbd966521e5cf3ee2065e0ddf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1af3b99b2ba10d76fd3fe847a67040c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "b432c2a5363ca609f111d7dec3ae5ed814c173ea", "commitAfterChange": "9d11311a2c8fe69828f38bf3b0da9037a3e51914", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Class visit(ImportDeclaration node)", "signatureAfterChange": "   public Class visit(ImportDeclaration node)", "diff": ["-    // Declare the package or class importation", "-    if (node.isPackage()) {", "-      context.declarePackageImport(node.getName());", "-    } else {", "-      try {", "-        context.declareClassImport(node.getName());", "-      } catch (ClassNotFoundException e) {", "-        throw new CatchedExceptionError(e, node);", "+    if(node.isStatic()) {", "+      staticImportHandler(node);", "+    }", "+    else {", "+      // Declare the package or class importation", "+      if (node.isPackage()) {", "+        context.declarePackageImport(node.getName());", "+      } else {", "+        try {", "+          context.declareClassImport(node.getName());", "+        } catch (ClassNotFoundException e) {", "+          throw new CatchedExceptionError(e, node);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b7ad71168bdcd25ca79aec906eb1a4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Object visit(ImportDeclaration node)", "signatureAfterChange": "   public Node visit(ImportDeclaration node)", "diff": ["+   */", "+  public Node visit(ImportDeclaration node) {", "+    if (node.isPackage()) {", "+      context.declarePackageImport(node.getName());", "+    } else {", "+      try {", "+        context.declareClassImport(node.getName());", "+      } catch (ClassNotFoundException e) {", "+        throw new CatchedExceptionError(e, node);", "+      }", "+    return null;", "+  }", "-     */", "-    public Object visit(ImportDeclaration node) {", "-        if (node.isPackage()) {", "-            context.declarePackageImport(node.getName());", "-        } else {", "-            try {", "-                context.declareClassImport(node.getName());", "-            } catch (ClassNotFoundException e) {", "-                throw new CatchedExceptionError(e, node);", "-            }", "-        return null;"]}], "num": 6546}