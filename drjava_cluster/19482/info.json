{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc822e0d6d2c240b08db39e9bfb8b723", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e13706d75c35ff6663d7793a7309cc52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsCurlyTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testWithParen() throws BadLocationException", "signatureAfterChange": "      public void testWithParen() throws BadLocationException", "diff": ["-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, i, Indenter.IndentReason.OTHER));", "+      assertTrue(\"START has no brace.\", ! _rule.testApplyRule(_doc, i, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 18, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START's brace is curly brace.\", _rule.applyRule(_doc, 19, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START has no brace.\", ! _rule.testApplyRule(_doc, 18, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is curly brace.\", _rule.testApplyRule(_doc, 19, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START is open curly brace.\", !_rule.applyRule(_doc, _text.length() - 2, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START is open curly brace.\", !_rule.applyRule(_doc, _text.length() - 1, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START is open curly brace.\", ! _rule.testApplyRule(_doc, _text.length() - 2, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START is open curly brace.\", ! _rule.testApplyRule(_doc, _text.length() - 1, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START's brace is open curly brace.\", _rule.applyRule(_doc, 14, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START's brace is open curly brace.\", _rule.applyRule(_doc, 22, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START's brace is an open paren.\", !_rule.applyRule(_doc, 23, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is open curly brace.\", _rule.testApplyRule(_doc, 14, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is open curly brace.\", _rule.testApplyRule(_doc, 22, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is an open paren.\", !_rule.testApplyRule(_doc, 23, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START's brace is open bracket.\", !_rule.applyRule(_doc, 7, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START's brace is an open curly brace.\", _rule.applyRule(_doc, 28, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START's brace is an open curly brace.\", _rule.applyRule(_doc, 30, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START's brace is an open curly brace.\", _rule.applyRule(_doc, _text.length() - 1, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.testApplyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is open bracket.\", !_rule.testApplyRule(_doc, 7, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is an open curly brace.\", _rule.testApplyRule(_doc, 28, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is an open curly brace.\", _rule.testApplyRule(_doc, 30, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is an open curly brace.\", _rule.testApplyRule(_doc, _text.length() - 1, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f86c99954f8b32cc24fabfb6c3292227", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsCurlyTest.java", "commitBeforeChange": "5d2701667cf27d44a069ea945e7b8afcad461e22", "commitAfterChange": "0dc9a35e122071847260a9f3f7c5a7bac3c46105", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testWithParen() throws BadLocationException", "signatureAfterChange": "      public void testWithParen() throws BadLocationException", "diff": ["-      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, i, Indenter.OTHER));", "+      assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, i, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 18, Indenter.OTHER));", "-    assertTrue(\"START's brace is curly brace.\", _rule.applyRule(_doc, 19, Indenter.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 18, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is curly brace.\", _rule.applyRule(_doc, 19, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START is open curly brace.\", !_rule.applyRule(_doc, _text.length() - 2, Indenter.OTHER));", "-    assertTrue(\"START is open curly brace.\", !_rule.applyRule(_doc, _text.length() - 1, Indenter.OTHER));", "+    assertTrue(\"START is open curly brace.\", !_rule.applyRule(_doc, _text.length() - 2, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START is open curly brace.\", !_rule.applyRule(_doc, _text.length() - 1, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START's brace is open curly brace.\", _rule.applyRule(_doc, 14, Indenter.OTHER));", "-    assertTrue(\"START's brace is open curly brace.\", _rule.applyRule(_doc, 22, Indenter.OTHER));", "-    assertTrue(\"START's brace is an open paren.\", !_rule.applyRule(_doc, 23, Indenter.OTHER));", "+    assertTrue(\"START's brace is open curly brace.\", _rule.applyRule(_doc, 14, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is open curly brace.\", _rule.applyRule(_doc, 22, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is an open paren.\", !_rule.applyRule(_doc, 23, Indenter.IndentReason.OTHER));", "-    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "-    assertTrue(\"START's brace is open bracket.\", !_rule.applyRule(_doc, 7, Indenter.OTHER));", "-    assertTrue(\"START's brace is an open curly brace.\", _rule.applyRule(_doc, 28, Indenter.OTHER));", "-    assertTrue(\"START's brace is an open curly brace.\", _rule.applyRule(_doc, 30, Indenter.OTHER));", "-    assertTrue(\"START's brace is an open curly brace.\", _rule.applyRule(_doc, _text.length() - 1, Indenter.OTHER));", "+    assertTrue(\"START has no brace.\", !_rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is open bracket.\", !_rule.applyRule(_doc, 7, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is an open curly brace.\", _rule.applyRule(_doc, 28, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is an open curly brace.\", _rule.applyRule(_doc, 30, Indenter.IndentReason.OTHER));", "+    assertTrue(\"START's brace is an open curly brace.\", _rule.applyRule(_doc, _text.length() - 1, Indenter.IndentReason.OTHER));"]}], "num": 19482}