{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e860acf11b9671a5f900798dad54bb80", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bfcb4b34bec9cfdaebbbcaf4697704b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "1824c23d7190107a20690dc4a2840a5d74f14a93", "commitAfterChange": "3b64166f1d62b17dc65eb373f58379c1d93452e7", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "   protected boolean posNotInBlock(final int pos)", "signatureAfterChange": "   protected boolean posNotInBlock(final int pos)", "diff": ["-    int here = _currentLocation;", "-    _reduced.move(pos - here);", "-    final IndentInfo info = _reduced.getIndentInformation();", "-    final boolean notInParenPhrase = info.enclosingBraceType().equals(IndentInfo.NONE);", "-    _reduced.move(here - pos);", "+    final int oldPos = _currentLocation;", "+    _setCurrentLocation(pos);", "+    final BraceInfo info = _reduced.getEnclosingBrace();", "+    final boolean notInParenPhrase = info.braceType().equals(BraceInfo.NONE);", "+    _setCurrentLocation(oldPos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abaff1c816a8b8a237b803f94a8d3406", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 59, "signatureBeforeChange": "   public boolean _inParenPhrase(final int pos)", "signatureAfterChange": "   public boolean _inParenPhrase(final int pos)", "diff": ["-", "-//    synchronized(_reduced) {", "-      final int oldPos = _currentLocation;", "-      // assert pos == here if read lock and reduced already held before call", "-      _setCurrentLocation(pos);", "-      _inParenPhrase = _inParenPhrase();", "-      _setCurrentLocation(oldPos);", "-//    }", "+    ", "+    final int oldPos = _currentLocation;", "+    // assert pos == here if read lock and reduced already held before call", "+    setCurrentLocation(pos);", "+    _inParenPhrase = _inParenPhrase();", "+    setCurrentLocation(oldPos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf249aa65ee7ff002e3dd3ad61b7af15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "1824c23d7190107a20690dc4a2840a5d74f14a93", "commitAfterChange": "3b64166f1d62b17dc65eb373f58379c1d93452e7", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 61, "signatureBeforeChange": "    private BraceInfo _getLineEnclosingBrace(int pos)", "signatureAfterChange": "   public BraceInfo getLineEnclosingBrace()", "diff": ["-", "-  private BraceInfo _getLineEnclosingBrace(int pos) {", "-    ", "+  /** Cached version of _reduced.getLineEnclosingBrace().  Assumes that read lock and reduced lock are already held. */", "+  public BraceInfo getLineEnclosingBrace() {", "+    int pos = _currentLocation;", "-    final Query key = new Query.EnclosingBrace(pos);", "+    final Query key = new Query.LineEnclosingBrace(pos);", "+//    final int oldPos = _currentLocation;", "+//    _setCurrentLocation(pos);", "+//    _setCurrentLocation(oldPos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb21c0a9d7d051267bcb3933b861f523", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 69, "signatureBeforeChange": "   public boolean inParenPhrase(final int pos)", "signatureAfterChange": "   public boolean inParenPhrase(final int pos)", "diff": ["+    ", "+    assert isReadLocked();", "+    ", "-    acquireReadLock();", "-    try {", "-      synchronized(_reduced) {", "-        final int oldPos = _currentLocation;", "-        // assert pos == here if read lock and reduced already held before call", "-        _setCurrentLocation(pos);", "-        inParenPhrase = inParenPhrase();", "-        _setCurrentLocation(oldPos);", "-      }", "-      _storeInCache(key, inParenPhrase, pos - 1);", "+//    acquireReadLock();", "+//    try {", "+    synchronized(_reduced) {", "+      final int oldPos = _currentLocation;", "+      // assert pos == here if read lock and reduced already held before call", "+      _setCurrentLocation(pos);", "+      inParenPhrase = inParenPhrase();", "+      _setCurrentLocation(oldPos);", "-    finally { releaseReadLock(); }", "+    _storeInCache(key, inParenPhrase, pos - 1);", "+//    }", "+//    finally { releaseReadLock(); }"]}], "num": 16860}