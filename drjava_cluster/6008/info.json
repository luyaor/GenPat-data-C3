{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9c24e6ae7208b93c68f0f1509647699", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "236e279a73be7bf1d5fcd8936ba2441b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtilTest.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testCompose()", "signatureAfterChange": "      public void testCompose()", "diff": ["-    Thunk<String> numToString1 = LambdaUtil.compose(LambdaUtil.valueThunk(23), Lambda.TO_STRING);", "+    Thunk<String> numToString1 = LambdaUtil.compose((Thunk<Integer>) LambdaUtil.valueLambda(23),", "+                                                    LambdaUtil.TO_STRING);", "-    Thunk<String> numToString2 = LambdaUtil.compose(LambdaUtil.valueThunk(22.5f), Lambda.TO_STRING);", "+    Thunk<String> numToString2 = LambdaUtil.compose((Thunk<Float>) LambdaUtil.valueLambda(22.5f),", "+                                                    LambdaUtil.TO_STRING);", "-    Lambda2<Number, Number, String> minusString = LambdaUtil.compose(minus, Lambda.TO_STRING);", "+    Lambda2<Number, Number, String> minusString = LambdaUtil.compose(minus, LambdaUtil.TO_STRING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ad3dcbc62e8c900d1b984a01c6cbe6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOpsTest.java", "commitBeforeChange": "ab9bed821ebae24e0aa300941a5185e8e0b73667", "commitAfterChange": "cca80f7677464053fcbc4892334d2d9d8d5de6a5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public void testGetFiles() throws IOException", "signatureAfterChange": "   public void testGetFiles() throws IOException", "diff": ["-    List<File> res1 = Arrays.asList(new File[] {file1a});", "-    List<File> res2 = Arrays.asList(new File[] {file1a, file2});", "+    Set<File> res1 = new TreeSet<File>(Arrays.asList(new File[] {file1a}));", "+    Set<File> res2 = new TreeSet<File>(Arrays.asList(new File[] {file1a, file2}));", "-    List<File> nrfiles = new ArrayList<File>();", "+    Set<File> nrfiles = new TreeSet<File>();", "-    List<File> rfiles = new ArrayList<File>();", "+    Set<File> rfiles = new TreeSet<File>();"]}], "num": 6008}