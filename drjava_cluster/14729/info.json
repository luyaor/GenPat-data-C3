{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58502c3cd2e9ce97b95b026140d8da47", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53d78982d9e4f195cb4578fbc62da3ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/InterfaceDeclaration.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public InterfaceDeclaration(ModifierSet mods, String name, List<? extends ReferenceTypeName> impl, List<Node> body)", "signatureAfterChange": "   public InterfaceDeclaration(ModifierSet mods, String name, Option<List<TypeParameter>> tparams,                                List<? extends ReferenceTypeName> impl, List<Node> body)", "diff": ["+   */", "+  public InterfaceDeclaration(ModifierSet mods, String name, Option<List<TypeParameter>> tparams,", "+                               List<? extends ReferenceTypeName> impl, List<Node> body) {", "+    this(mods, name, tparams, impl, body, SourceInfo.NONE);", "+  }", "-    this(mods, name, impl, body, SourceInfo.NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8edea47ccad8aa82825dccedeacdde77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ObjectMethodCall.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args,                           SourceInfo si)", "signatureAfterChange": "   public ObjectMethodCall(Expression exp, Option<List<TypeName>> targs, String mn,                            List<? extends Expression> args, SourceInfo si)", "diff": ["-  public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args,", "-                          SourceInfo si) {", "-    super(mn, args, si);", "+  public ObjectMethodCall(Expression exp, Option<List<TypeName>> targs, String mn,", "+                           List<? extends Expression> args, SourceInfo si) {", "+    super(targs, mn, args, si);"]}], "num": 14729}