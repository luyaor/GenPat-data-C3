{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa8b8e7b29435643245edfaf2e833cb7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02fb9fc0937cba66c80d9f17fc32bf98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "1313de8815d48e0a1c60eb5bee6900b6b7af3993", "commitAfterChange": "802c4acbf71daa5d149dbcd67d1f360241574951", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 104, "signatureBeforeChange": "     public void startJUnit() throws ClassNotFoundException, IOException", "signatureAfterChange": "     public void startJUnit() throws ClassNotFoundException, IOException", "diff": ["-    public void startJUnit() throws ClassNotFoundException, IOException{", "+    public void startJUnit() throws ClassNotFoundException, IOException {", "-        if (_docBeingTested != null) {", "+//        if (_docBeingTested != null) {", "+        if (_isTestInProgress) {", "-          _notifier.notifyListeners(new EventNotifier.Notifier() {", "-            public void notifyListener(GlobalModelListener l) {", "-              l.junitStarted(DefinitionsDocumentHandler.this);", "-            }", "-          });", "+          ArrayList<OpenDefinitionsDocument> thisList = new ArrayList<OpenDefinitionsDocument>();", "+          thisList.add(this);", "+          _notifier.junitStarted(thisList);", "-            nonTestCase();", "+            nonTestCase(false);", "-            nonTestCase();", "+            nonTestCase(false);", "-            nonTestCase();", "+            nonTestCase(false);", "-          _interpreterControl.runTestSuite(testFilename,", "-                                           testFile.getAbsolutePath());", "+          ArrayList<String> classNames = new ArrayList<String>();", "+          classNames.add(testFilename);", "+          ArrayList<File> files = new ArrayList<File>();", "+          files.add(testFile);", "+          _interpreterControl.runTestSuite(classNames, files, false);", "-          _docBeingTested = this;", "-          ", "+//          _docBeingTested = this;", "+          _isTestInProgress = true;", "-          nonTestCase();", "+          nonTestCase(false);", "-          _docBeingTested = null;", "-          _notifier.notifyListeners(new EventNotifier.Notifier() {", "-            public void notifyListener(GlobalModelListener l) {", "-              l.junitEnded();", "-            }", "-          });", "+//          _docBeingTested = null;", "+          _isTestInProgress = false;", "+          _notifier.junitEnded();", "-          _docBeingTested = null;", "-          _notifier.notifyListeners(new EventNotifier.Notifier() {", "-            public void notifyListener(GlobalModelListener l) {", "-              l.junitEnded();", "-            }", "-          });", "+//          _docBeingTested = null;", "+          _isTestInProgress = false;", "+          _notifier.junitEnded();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a72c8738c45cdb4cb3d7a32196d90669", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "dab739e9c0a893840c19d552b534083722093495", "commitAfterChange": "9d7de430d203354a52d3faa0378a92c50af92fb7", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "     public TestResult startJUnit() throws IOException", "signatureAfterChange": "     public TestResult startJUnit() throws ClassNotFoundException, IOException", "diff": ["-    public TestResult startJUnit() throws IOException {", "-      // Compile and save before proceeding", "+    public TestResult startJUnit() throws ClassNotFoundException, IOException {", "+      // Compile and save before proceeding.", "-      if(isModifiedSinceSave()) {", "+      if (isModifiedSinceSave()) {", "-          throw new UnexpectedException(e);", "+          notifyListeners(new EventNotifier() {", "+            public void notifyListener(GlobalModelListener l) {", "+            l.junitEnded();", "+            l.nonTestCase();", "+          }", "+          });", "+          return null;", "-        if(testFilename.toLowerCase().endsWith(\".java\")) {", "+        if (testFilename.toLowerCase().endsWith(\".java\")) {", "-          throw new UnexpectedException", "-            (new IllegalArgumentException(\"File is not a Java file.\"));", "+          notifyListeners(new EventNotifier() {", "+            public void notifyListener(GlobalModelListener l) {", "+            l.junitEnded();", "+            l.nonTestCase();", "+          }", "+          });", "+          return null;", "-        catch(InvalidPackageException e) {", "-          throw new UnexpectedException(e);", "+        catch (InvalidPackageException e) {", "+          notifyListeners(new EventNotifier() {", "+            public void notifyListener(GlobalModelListener l) {", "+            l.junitEnded();", "+            l.nonTestCase();", "+          }", "+          });", "+          return null;", "-          throw new UnexpectedException(e);", "+          notifyListeners(new EventNotifier() {", "+            public void notifyListener(GlobalModelListener l) {", "+            l.junitEnded();", "+          }", "+          });", "+          throw e;", "+        notifyListeners(new EventNotifier() {", "+          public void notifyListener(GlobalModelListener l) {", "+          l.junitEnded();", "+          l.nonTestCase();", "+        }", "+        });", "+      catch (NoClassDefFoundError e) {", "+        // Method getTest in junit.framework.BaseTestRunner can throw a", "+        // NoClassDefFoundError (via reflection).", "+        notifyListeners(new EventNotifier() {", "+          public void notifyListener(GlobalModelListener l) {", "+          l.junitEnded();", "+        }", "+        });", "+        throw e;", "+      }"]}], "num": 29395}