{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89cbd92df3f2a564926d146c80777938", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab90c422c86e4b87436a458833467050", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0126ea99e5c318f1f9907f0c07d77641969ffef5", "commitAfterChange": "fa54651cc7ac0d03884ebcafd7e8520df74651a1", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   private void _resumeThread(ThreadReference thread, boolean fromStep)     throws DebugException", "signatureAfterChange": "   private void _resumeThread(ThreadReference thread, boolean fromStep)     throws DebugException", "diff": ["-    catch(DebugException e) {  //??", "-      throw new UnexpectedException(e);", "-    }", "+    catch(DebugException e) { throw new UnexpectedException(e); }", "-    for (int i=suspendCount; i>0; i--) {", "-      thread.resume();", "-    }", "+    for (int i=suspendCount; i>0; i--) thread.resume();", "-    if (!fromStep && !_suspendedThreads.isEmpty()) {", "-      _switchToSuspendedThread();", "-    }", "+    if (! fromStep && ! _suspendedThreads.isEmpty()) _switchToSuspendedThread();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb42197005988ac3ab69032783abf3e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDABreakpoint.java", "commitBeforeChange": "50372cdcb0e3a8db5661a31f5825b5dc9f07a9e9", "commitAfterChange": "3049ab1c03c6212f738bc13f7b01e843f39da3a7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean isEnabled, JPDADebugger manager)     throws DebugException", "signatureAfterChange": "   public JPDABreakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean isEnabled, JPDADebugger manager)     throws DebugException", "diff": ["+    ", "+    try { _position = doc.createPosition(offset); }", "+    catch(BadLocationException e) { throw new UnexpectedException(e); }", "+    ", "-    catch (BadLocationException ble) { throw new UnexpectedException(ble); }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "-    if ((_manager != null) && (_manager.isReady())) {", "+    if (_manager != null && _manager.isReady()) {", "+  }"]}], "num": 9634}