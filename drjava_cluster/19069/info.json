{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f69c3af399e653cf8baacea0ae86b835", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c37208d645b3eb86dd60f9373b13190", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "commitAfterChange": "530cb3b64455d081e962324602750973729aa1fb", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": "      public void compileEnded()", "signatureAfterChange": "      public void compileEnded()", "diff": ["-      hourglassOff();", "-      updateErrorListeners();", "-      _errorPanel.reset();", "-      if (inDebugMode()) _updateDebugStatus();", "+      // Only change GUI from event-dispatching thread", "+      Runnable doCommand = new Runnable() {", "+        public void run() {", "+          hourglassOff();", "+          updateErrorListeners();", "+          _errorPanel.reset();", "+          _junitPanel.reset();", "+          if (inDebugMode()) _updateDebugStatus();", "+        }", "+      };", "+      SwingUtilities.invokeLater(doCommand);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5b134f0bfbde151716623bf6e0dd634", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": "        public void breakpointReached(Breakpoint bp)", "signatureAfterChange": "     public void breakpointReached(final Breakpoint bp)", "diff": ["-   ", "-   public void breakpointReached(Breakpoint bp) {", "-     DefaultMutableTreeNode bpDoc = new DefaultMutableTreeNode(bp.getClassName());", "-     ", "-     Enumeration documents = _breakpointNode.children();", "-     while (documents.hasMoreElements()) {", "-       DefaultMutableTreeNode doc = (DefaultMutableTreeNode)documents.nextElement();", "-       if (doc.getUserObject().equals(bpDoc.getUserObject())) {", "-         // have to remove the correct line number", "-         //DrJava.consoleOut().println(\"matched, classname: \" + bpDoc.getUserObject());", "-         Enumeration lineNumbers = doc.children();", "-         while (lineNumbers.hasMoreElements()) {", "-           DefaultMutableTreeNode lineNumber = ", "-             (DefaultMutableTreeNode)lineNumbers.nextElement();", "-           if (lineNumber.getUserObject().equals(new Integer (bp.getLineNumber()))) {", "-             //DrJava.consoleOut().println(\"matched, lineNumber: \" + bp.getLineNumber());", "-             ", "-             //DefaultMutableTreeNode hitBreakpoint = new DefaultMutableTreeNode(new Integer(bp.getLineNumber()));", "-             TreePath pathToNewBreakpoint = new TreePath(lineNumber.getPath());", "-             ", "-             _bpTree.scrollPathToVisible(pathToNewBreakpoint);", "-             _bpTree.setSelectionPath(pathToNewBreakpoint);", "-             //DrJava.consoleOut().println(\"Set selection to new hit breakpoint.\");", "-           }", "-         }", "-       }", "-     }", "-   }", "+     */", "+    public void breakpointReached(final Breakpoint bp) {", "+      // Only change GUI from event-dispatching thread", "+      Runnable doCommand = new Runnable() {", "+        public void run() {", "+          DefaultMutableTreeNode bpDoc = new DefaultMutableTreeNode(bp.getClassName());", "+          ", "+          // Find the document node for this breakpoint", "+          Enumeration documents = _breakpointRootNode.children();", "+          while (documents.hasMoreElements()) {", "+            DefaultMutableTreeNode doc = (DefaultMutableTreeNode)documents.nextElement();", "+            if (doc.getUserObject().equals(bpDoc.getUserObject())) {", "+              //DrJava.consoleOut().println(\"matched, classname: \" + bpDoc.getUserObject());", "+              ", "+              // Find the correct line number node for this breakpoint", "+              Enumeration lineNumbers = doc.children();", "+              while (lineNumbers.hasMoreElements()) {", "+                DefaultMutableTreeNode lineNumber = ", "+                  (DefaultMutableTreeNode)lineNumbers.nextElement();", "+                if (lineNumber.getUserObject().equals(new Integer(bp.getLineNumber()))) {", "+                  //DrJava.consoleOut().println(\"matched, lineNumber: \" + bp.getLineNumber());", "+                  ", "+                  // Select the node which has been hit", "+                  TreePath pathToNewBreakpoint = new TreePath(lineNumber.getPath());", "+                  _bpTree.scrollPathToVisible(pathToNewBreakpoint);", "+                  _bpTree.setSelectionPath(pathToNewBreakpoint);", "+                  //DrJava.consoleOut().println(\"Set selection to new hit breakpoint.\");", "+                }", "+              }", "+            }", "+          }", "+        }", "+      };", "+      SwingUtilities.invokeLater(doCommand);", "+    }"]}], "num": 19069}