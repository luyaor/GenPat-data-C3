{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "548c9ec482a10543a2ce94f8500ae854", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3922948bd07153505c5f41345af52b27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public static File getCanonicalFile(File f)", "signatureAfterChange": "   public static File getCanonicalFile(File f)", "diff": ["-   *  exception when the file path syntax is incorrect. */", "+   *  exception when the file path syntax is incorrect.  It returns the absolute File intead. */", "-    try { ", "-      if (f.exists()) return f.getCanonicalFile();", "-      else return f.getAbsoluteFile();", "-    }", "-    catch(IOException e) { return f.getAbsoluteFile(); }", "+    if (f == null) return f;", "+    try { if (f.exists()) return f.getCanonicalFile(); }", "+    catch(IOException e) { /* fall through */ }", "+    return f.getAbsoluteFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52823a8f567566a20544be793d3c3ac7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "dc012dd7d972609a38d1836c72ebe86b07df0e53", "commitAfterChange": "25d973a9f45bdba84ad4514eba518ee94f041daf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private String _matchText(int braceIndex)", "signatureAfterChange": "   private String _matchText(int braceIndex)", "diff": ["-      if (charBeforeIndex != -1) {", "+      if (charBeforeIndex != -1)", "-        charBeforeIndex--;", "-      }", "-      while (charBeforeIndex != -1 && (charBefore == '\\n' || charBefore == ' ')) {", "+      charBeforeIndex--;", "+      ", "+      while (charBeforeIndex >= 0 && (charBefore == '\\n' || charBefore == ' ')) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5413b91ff636e4d824ae7a908382006", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected void _close()", "signatureAfterChange": "   protected void _close()", "diff": ["-    _model.getActiveDocument().setJUnitErrorModel(new JUnitErrorModel());", "+    if (_docBeingTested != null) {", "+      _docBeingTested.setJUnitErrorModel(new JUnitErrorModel());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8ef7cd9331300c0820a0ebcccd55af5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/Data.java", "commitBeforeChange": "8871133812a093ff5b818f6e8694af02431a4702", "commitAfterChange": "970aff2c65ce8acdc73c3d665aaa7b267b4d2747", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void setOuterData(Data outerData)", "signatureAfterChange": "   public void setOuterData(Data outerData)", "diff": ["+    if (outerData == null) return;  // Throwing an exception is another option but why abort this translation?", "-      throw new RuntimeException(\"Internal Program Error: Trying to reset an outer data to \" + outerData.getName() +  \" for \" + this.getName() + \" that has already been set.  Please report this bug.\");", "+      throw new RuntimeException(\"Internal Program Error: Trying to reset an outer data to \" + outerData.getName() +  ", "+                                 \" for \" + getName() + \" that has already been set.  Please report this bug.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7d0550d3a780b6e8aebfc92ad9bfdc1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "d9483f6c228cd09f3431ad6b50a3d96bdaf83832", "commitAfterChange": "f998596e58db467638fd2c5025aacbfb31d4199f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void setActiveDoc(ItemT doc)", "signatureAfterChange": "   public void setActiveDoc(ItemT doc)", "diff": ["-//    synchronized (_model) {", "+//    synchronized (_model) {  // lock out mutation", "+      if (node == null) return; // doc is not in the navigator", "-      if (this.contains(doc)) {", "+//      if (_doc2node.containsKey(doc);) {  // this test is obviously true since node == _doc2node.get(doc)", "-        setSelectionPath(path);", "+        setSelectionPath(path);  // fires _gainVisitor in AbstractGlobalModel", "-      }", "+//      }"]}], "num": 17407}