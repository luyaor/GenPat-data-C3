{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d63ce672e0571f9ef5ebb2621d3a6b45", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56277cfd2f4e65b72f080937202ce4b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7c30ebf6c2ad7a3fa703d87cd5aaa9a3fff06bee", "commitAfterChange": "11e630b08382faca40628146b7f40625d89f190c", "methodNumberBeforeChange": 436, "methodNumberAfterChange": 436, "signatureBeforeChange": "      public DefinitionsPane getDefPaneGivenODD(OpenDefinitionsDocument doc)", "signatureAfterChange": "      public DefinitionsPane getDefPaneGivenODD(OpenDefinitionsDocument doc)", "diff": ["-      scroll = _createDefScrollPane(doc);", "+      throw new UnexpectedException(new Exception(\"Region set in a closed document.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2d1c03eeffefc319c555e0d288e6e38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "61e5b2f858911ea73a13dba9fbe943d7030fb9fb", "commitAfterChange": "efaccf437175951cd0b6645fd51acf615d54103d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void setUp()", "signatureAfterChange": "   public void setUp()", "diff": ["-    _pane.setCaretPosition(_doc.getPromptPos());", "-    _ready = true;", "+    // Make tests silent", "+    _pane.setBeep(new TestBeep());", "+    ", "+    _controller = new InteractionsController(_doc, _pane);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff8b992c2873c8e968ed4a07f51ca0ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Object visit(ForEachStatement node)", "signatureAfterChange": "   public Object visit(ForEachStatement node)", "diff": ["-      }catch(NoSuchMethodException e){", "-        /* this is very bad */", "+      }", "+      catch(NoSuchMethodException e) { ", "+        throw new UnexpectedException(e); ", "-      }catch(MethodModificationError e){", "-        /* ths is very bad */", "+      }", "+      catch(MethodModificationError e) {", "+        throw new UnexpectedException(e); ", "-      exp.setProperty(NodeProperties.TYPE,   m.getReturnType());", "+      exp.setProperty(NodeProperties.TYPE, m.getReturnType());", "-      try {", "-        m2 = context.lookupMethod(exp, \"hasNext\", Constants.EMPTY_CLASS_ARRAY);", "-      }catch(NoSuchMethodException e){", "+      try { m2 = context.lookupMethod(exp, \"hasNext\", Constants.EMPTY_CLASS_ARRAY); }", "+      catch(NoSuchMethodException e){", "-      }catch(MethodModificationError e){", "+      }", "+      catch(MethodModificationError e){", "-      condition.setProperty(NodeProperties.TYPE,   m2.getReturnType());", "+      condition.setProperty(NodeProperties.TYPE, m2.getReturnType());"]}], "num": 12100}