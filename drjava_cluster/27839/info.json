{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8dd03d7d5aabb454a6c334772adfddd3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4468ca612de3886e3266e850e9eab5b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public synchronized void startup() throws DebugException", "signatureAfterChange": "   public synchronized void startup() throws DebugException", "diff": ["+      _eventHandlerError = null;", "-        Breakpoint bp = oldBreakpoints.get(i);", "-        setBreakpoint(new Breakpoint(bp.getDocument(), bp.getOffset(), bp.getLineNumber(), this));", "+        Breakpoint bp = oldBreakpoints.get(i);        ", "+        setBreakpoint(new Breakpoint(bp.getDocument(), bp.getOffset(), bp.getLineNumber(), bp.isEnabled(), this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c23c9b2dbde3b2b4d1fb261d433eb16", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/LanguageLevelStackTraceMapper.java", "commitBeforeChange": "cc814c34f96bfde67f8ae465727b510fa3ed34c9", "commitAfterChange": "8cb3141a044af3c7f18d018980f5a22b0b342ea8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "         public StackTraceElement replaceStackTraceElement(StackTraceElement s, File d, TreeMap<Integer,Integer> m)", "signatureAfterChange": "      public StackTraceElement replaceStackTraceElement(StackTraceElement s, File d, TreeMap<Integer,Integer> m)", "diff": ["-  ", "-    if (! matches(d,s)) return s;", "-    StackTraceElement NewS = ", "-      new StackTraceElement(s.getClassName(), s.getMethodName(),d.getName(), m.get(s.getLineNumber()));", "-    ", "-    return NewS;", "+    int jl = s.getLineNumber();", "+    int lll = m.containsKey(jl) ? m.get(jl) : -1;", "+      ", "+    return new StackTraceElement(s.getClassName(), s.getMethodName(), d.getName(), lll);"]}], "num": 27839}