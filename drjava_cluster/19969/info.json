{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fc6feb347115c86ec32be74f5043cea", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b7f1d2731d673ae90540987cedd4d5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/ProcessCreator.java", "commitBeforeChange": "2e0841eedc488bc59bd976576cad4ea91d3f46bd", "commitAfterChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Process start() throws IOException", "signatureAfterChange": "   public Process start() throws IOException", "diff": ["-    List<String> cmds = StringOps.commandLineToList(StringOps.replaceVariables(_cmdline, _props));", "-    String[] cmdarray = cmds.toArray(new String[cmds.size()]);", "-    String workdir = StringOps.replaceVariables(_workdir, _props);", "+    List<String> cmds = StringOps.commandLineToList(StringOps.replaceVariables(_cmdline, PropertyMaps.ONLY, PropertyMaps.GET_CURRENT));", "+    String[] cmdarray = new String[cmds.size()];", "+    for (int i=0; i<cmds.size(); ++i) {", "+      cmdarray[i] = StringOps.unescapeSpacesWith1bHex(cmds.get(i));", "+    }", "+    String workdir = StringOps.replaceVariables(_workdir, PropertyMaps.ONLY, PropertyMaps.GET_CURRENT);", "+    ", "+    // edu.rice.cs.util.Log log = new edu.rice.cs.util.Log(\"process.txt\", true);", "+    // for(String c: cmdarray) { log.log(c); }", "+    // log.log(\"workdir: \"+dir);", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d72262b94480828419e11dca220fea53", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/JVMProcessCreator.java", "commitBeforeChange": "2e0841eedc488bc59bd976576cad4ea91d3f46bd", "commitAfterChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public Process start() throws IOException", "signatureAfterChange": "   public Process start() throws IOException", "diff": ["-    List<String> jvmArgs = StringOps.commandLineToList(StringOps.replaceVariables(_jvmArgs, _props));", "-    List<String> cmds = StringOps.commandLineToList(StringOps.replaceVariables(_cmdline, _props));", "+    List<String> jvmArgs = StringOps.commandLineToList(StringOps.replaceVariables(_jvmArgs, PropertyMaps.ONLY, PropertyMaps.GET_CURRENT));;", "+    List<String> cmds = StringOps.commandLineToList(StringOps.replaceVariables(_cmdline, PropertyMaps.ONLY, PropertyMaps.GET_CURRENT));", "-    String[] cmdarray = args.toArray(new String[args.size()]);", "+    String[] cmdarray = new String[args.size()];", "+    for (int i=0; i<args.size(); ++i) {", "+      cmdarray[i] = StringOps.unescapeSpacesWith1bHex(args.get(i));", "+    }", "-    String workdir = StringOps.replaceVariables(_workdir, _props);", "+    String workdir = StringOps.replaceVariables(_workdir, PropertyMaps.ONLY, PropertyMaps.GET_CURRENT);"]}], "num": 19969}