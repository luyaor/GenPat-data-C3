{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55e4ffa9ada07fb06cbc6ddeec764606", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f6be0c9fb60148fa2519ac2283366fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "7b8e61b54c444deec40202441181317a86727c3a", "commitAfterChange": "1763dbe8cbfddb4c5dc11b4a5b86d887d31274b9", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public InputBox()", "signatureAfterChange": "     public InputBox()", "diff": ["+    private Color _sysInColor = DrJava.getConfig().getSetting(OptionConstants.SYSTEM_IN_COLOR);", "-      //super(1, 80);", "-      DrJava.getConfig().addOptionListener(OptionConstants.DEFINITIONS_NORMAL_COLOR,", "-                                           new OptionListener<Color>() {", "-        public void optionChanged(OptionEvent<Color> oe) {", "-          setBorder(_createBorder());", "-        }", "-      });", "-      DrJava.getConfig().addOptionListener(OptionConstants.DEFINITIONS_BACKGROUND_COLOR,", "-                                           new OptionListener<Color>() {", "-        public void optionChanged(OptionEvent<Color> oe) {", "-          setBorder(_createBorder());", "-        }", "-      });", "+      setForeground(_sysInColor);", "+      setBackground(_bgColor);", "+      setCaretColor(_fgColor);", "-      setForeground(SYSTEM_IN_COLOR);", "+", "+      DrJava.getConfig().addOptionListener(OptionConstants.DEFINITIONS_NORMAL_COLOR,", "+                                           new OptionListener<Color>() {", "+        public void optionChanged(OptionEvent<Color> oe) {", "+          _fgColor = oe.value;", "+          setBorder(_createBorder());", "+          setCaretColor(oe.value);", "+        }", "+      });", "+      DrJava.getConfig().addOptionListener(OptionConstants.DEFINITIONS_BACKGROUND_COLOR,", "+                                           new OptionListener<Color>() {", "+        public void optionChanged(OptionEvent<Color> oe) {", "+          _bgColor = oe.value;", "+          setBorder(_createBorder());", "+          setBackground(oe.value);", "+        }", "+      });", "+      DrJava.getConfig().addOptionListener(OptionConstants.SYSTEM_IN_COLOR,", "+                                           new OptionListener<Color>() {", "+        public void optionChanged(OptionEvent<Color> oe) {", "+          _sysInColor = oe.value;", "+          setForeground(oe.value);", "+        }", "+      });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c0c216c5792ea7db7d273282c899f3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "c9e80bbae1d05915842b741e3f824da56b5b7a57", "commitAfterChange": "ecfa1b8571cf84d3fda1f3d6d93d5a8cea78d32a", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    DrJava.getConfig().addOptionListener( OptionConstants.FONT_MAIN, new MainFontOptionListener());", "-    DrJava.getConfig().addOptionListener( OptionConstants.FONT_DOCLIST, new DoclistFontOptionListener());", "-    DrJava.getConfig().addOptionListener( OptionConstants.FONT_TOOLBAR, new ToolbarFontOptionListener());", "-    DrJava.getConfig().addOptionListener( OptionConstants.TOOLBAR_ICONS_ENABLED, new ToolbarOptionListener());", "-    DrJava.getConfig().addOptionListener( OptionConstants.TOOLBAR_TEXT_ENABLED, new ToolbarOptionListener());", "-    DrJava.getConfig().addOptionListener( OptionConstants.WORKING_DIRECTORY, new WorkingDirOptionListener());", "-    DrJava.getConfig().addOptionListener( OptionConstants.LINEENUM_ENABLED, new LineEnumOptionListener());", "-    DrJava.getConfig().addOptionListener( OptionConstants.QUIT_PROMPT, new QuitPromptOptionListener());", "-    DrJava.getConfig().addOptionListener( OptionConstants.RECENT_FILES_MAX_SIZE, new RecentFilesOptionListener());", "+    DrJava.getConfig().addOptionListener(OptionConstants.FONT_MAIN, new MainFontOptionListener());", "+    DrJava.getConfig().addOptionListener(OptionConstants.FONT_DOCLIST, new DoclistFontOptionListener());", "+    DrJava.getConfig().addOptionListener(OptionConstants.FONT_TOOLBAR, new ToolbarFontOptionListener());", "+    DrJava.getConfig().addOptionListener(OptionConstants.TOOLBAR_ICONS_ENABLED, new ToolbarOptionListener());", "+    DrJava.getConfig().addOptionListener(OptionConstants.TOOLBAR_TEXT_ENABLED, new ToolbarOptionListener());", "+    DrJava.getConfig().addOptionListener(OptionConstants.WORKING_DIRECTORY, new WorkingDirOptionListener());", "+    DrJava.getConfig().addOptionListener(OptionConstants.LINEENUM_ENABLED, new LineEnumOptionListener());", "+    DrJava.getConfig().addOptionListener(OptionConstants.QUIT_PROMPT, new QuitPromptOptionListener());", "+    DrJava.getConfig().addOptionListener(OptionConstants.RECENT_FILES_MAX_SIZE, new RecentFilesOptionListener());", "+    DrJava.getConfig().addOptionListener(OptionConstants.JSR14_LOCATION, new OptionListener<File>() {", "+      public void optionChanged(OptionEvent<File> oe) {", "+        boolean bootClasspathHasv2 = DrJava.bootClasspathHasJSR14v20();", "+        if (oe.value != FileOption.NULL_FILE) {", "+          if (DrJava.checkForJSR14v20() && !bootClasspathHasv2) {", "+            JOptionPane.showMessageDialog(MainFrame.this,", "+                                          \"You must restart DrJava in order to use the JSR14 v2.0 compiler.\",", "+                                          \"JSR14 Warning\", JOptionPane.WARNING_MESSAGE);", "+          }", "+          else if (bootClasspathHasv2) {", "+            JOptionPane.showMessageDialog(MainFrame.this,", "+                                          \"You must restart DrJava in order to switch to earlier versions of the JSR14 compiler.\",", "+                                          \"JSR14 Warning\", JOptionPane.WARNING_MESSAGE);", "+          }", "+        }", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d73832d50367234fc73e72705753bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["+        boolean bootClasspathHasv24 = DrJava.bootClasspathHasJSR14v24();        ", "-          if (checkForV20 && !bootClasspathHasv2) {", "+          boolean checkForV24 = DrJava.checkForJSR14v24();", "+          if (checkForV24 && !bootClasspathHasv24) {", "-                                          \"You must restart DrJava to use the JSR-14 v2.x compiler.\",", "+                                          \"You must restart DrJava to use the JSR-14 v2.4 compiler.\",", "+                                          \"JSR14 Warning\", JOptionPane.WARNING_MESSAGE);", "+          }", "+          else if ((checkForV20 && !checkForV24) && (!bootClasspathHasv2 || bootClasspathHasv24)) {", "+            JOptionPane.showMessageDialog(_configFrame,", "+                                          \"You must restart DrJava to use the JSR-14 v2.0/2.2 compiler.\",", "-", "+    ", "+    config.addOptionListener(OptionConstants.ALLOW_PRIVATE_ACCESS, new OptionListener<Boolean>() {", "+      public void optionChanged(OptionEvent<Boolean> oce) {", "+        _model.getInteractionsModel().setPrivateAccessible(oce.value.booleanValue());", "+      }", "+    });", "+    "]}], "num": 10241}