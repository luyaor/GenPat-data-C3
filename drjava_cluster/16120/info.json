{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b681f978d46d11a1632b808dc1bcb49", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3be9682aa18ed6e840c2b43b63927b4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   protected SymbolData defineInnerSymbolData(TypeDefBase typeDefBase, String relName, String qualifiedTypeName,                                               Data enclosing)", "signatureAfterChange": "   protected SymbolData defineInnerSymbolData(TypeDefBase typeDefBase, String relName, String qualifiedTypeName,                                               Data enclosing)", "diff": ["-      // sd is a local class embedded in a method.  We need to add sd to  the innerclasses of _enclosingClassName", "-      if (! (enclosing instanceof MethodData))", "+      // sd is a local class embedded in a method.  We need to add sd to the innerclasses of _enclosingClassName", "+//      if (! (enclosing instanceof MethodData))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "831174e63ac991a95e452459539b8eba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/VariableData.java", "commitBeforeChange": "1c199ba6e5c933a0a9823f05cecf402befa0425a", "commitAfterChange": "c81f6b5d4f9c5e82bbc1d256cff92f2dc0220bb1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public boolean equals(Object obj)", "signatureAfterChange": "   public boolean equals(Object obj)", "diff": ["-    VariableData vd = (VariableData)obj;", "+    VariableData vd = (VariableData) obj;", "-    }", "-    else if (! _enclosingData.equals(otherEnclosingData)) {", "+    }  // formerly .equals but led to infinite loop when _enclosingData is a VariableData", "+    else if (_enclosingData != otherEnclosingData) {  "]}], "num": 16120}