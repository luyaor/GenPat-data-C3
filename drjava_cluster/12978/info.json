{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df7d9d74adb83a9785fee985bb30c093", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "556ffa77617c93c21fa9ee100da866a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModel.java", "commitBeforeChange": "7cfb2b5dee6eef3d4b4c3e88918deee5af68078a", "commitAfterChange": "50f8ddd53ad051b199f7d13e98934938f25bd2ae", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JUnitErrorModel(Document doc, String theclass, TestResult result)", "signatureAfterChange": "   public JUnitErrorModel(Document doc, String theclass, TestResult result)", "diff": ["-      String theLine = sw.toString().substring(sw.toString().indexOf(classname));", "-      theLine = theLine.substring(0, theLine.indexOf(\"\\n\"));", "+      String theLine = _substring(sw.toString(), 0, sw.toString().indexOf(classname));", "+      theLine = _substring(theLine, 0, theLine.indexOf(\"\\n\"));", "-      theLine = theLine.substring(theLine.indexOf(\"(\") + 1);", "-      theLine = theLine.substring(0, theLine.indexOf(\")\"));", "+      theLine = _substring(theLine, 0, theLine.indexOf(\"(\") + 1);", "+      theLine = _substring(theLine, 0, theLine.indexOf(\")\"));", "-      String file = theLine.substring(0, theLine.indexOf(\":\"));", "+      String file = _substring(theLine, 0, theLine.indexOf(\":\"));", "-        lineNo = new Integer(theLine.substring(theLine.indexOf(\":\") + 1)).intValue() - 1;", "-      } catch (NumberFormatException e) {", "+        lineNo = new Integer(_substring(theLine, ", "+                                        theLine.indexOf(\":\") + 1,", "+                                        theLine.length()))", "+          .intValue() - 1;", "+      } ", "+      catch (NumberFormatException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7533243d59f73a2ab2e1a0e157db474f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "b4cb953a15f76465c4fdfdd0a3efe47737f78efc", "commitAfterChange": "da8b20243b85298aada190df10fa721e07aae787", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 129, "signatureBeforeChange": "       public void run(final Type t)", "signatureAfterChange": "     @Override public void run(final Type t)", "diff": ["+     */", "+    @Override public void run(final Type t) {", "+//        String prefix = \"\"; for (int i = 0; i < _stack.size(); i++) { prefix += \"  \"; }", "+//        System.out.println(prefix + \"Running on id \" + System.identityHashCode(t) + \": \" + t);", "+      Runnable recur = new Runnable() { public void run() { t.apply(TypeWriter.this); } };", "+      Runnable dontRecur = new Runnable() { public void run() { _result.append(\"...\"); } };", "+      //Threshold of 2 causes the loop to be printed twice", "+      _stack.run(recur, dontRecur, t/*, 2*/); ", "+    }", "-       */", "-      public void run(final Type t) {", "-//        String prefix = \"\"; for (int i = 0; i < _stack.size(); i++) { prefix += \"  \"; }", "-//        System.out.println(prefix + \"Running on id \" + System.identityHashCode(t) + \": \" + t);", "-        Runnable recur = new Runnable() { public void run() { t.apply(DumpType.this); } };", "-        Runnable dontRecur = new Runnable() { public void run() { result.append(\"...\"); } };", "-        //Threshold of 2 causes the loop to be printed twice", "-        _stack.run(recur, dontRecur, t/*, 2*/); ", "-      }"]}], "num": 12978}