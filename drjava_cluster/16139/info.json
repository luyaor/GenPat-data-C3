{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01c74462f5075b977e92f4d9285b0c3b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "291f6e4e250dfb385d94683dbf03925c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "0912ab7ed35ec7cfa4a9c45641294748135ef6a8", "commitAfterChange": "8419e1669ab708db7794d94c63980b50f479093f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    private static void createAndShowGUI(final String[] args)", "signatureAfterChange": "    private static void createAndShowGUI(final String[] args)", "diff": ["-//        enableSecurityManager();  // makes no sense; this code is only run in the main JVM which does not need a SecurityManager", "-        openCommandLineFiles(mf, _filesToOpen);", "-        mf.setVisible(true);", "+", "+        _openCommandLineFiles(mf, _filesToOpen);", "+        /* setVibible is moved to the end of the eventqueue to be sure all files has finished loading and added to the fileview before the MainFrame is set visible.", "+         * When this was not done, occassionally a NullPointerException was encountered on startup when specifying a file (ex: java -jar drjava.jar somefile.java)", "+         */", "+        Utilities.invokeLater(new Runnable(){ public void run(){mf.setVisible(true);}});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f0e2f20307a1164159ad61c712d2b80", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   public void replThrewException(String message)", "signatureAfterChange": "   public void replThrewException(final String message)", "diff": ["-  public void replThrewException(String message) {", "+  public void replThrewException(final String message) {", "-      _document.appendExceptionResult(message, InteractionsDocument.ERROR_STYLE);", "+      Utilities.invokeLater(new Runnable() {", "+        public void run() { _document.appendExceptionResult(message, InteractionsDocument.ERROR_STYLE); }", "+      });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "747aa355afbeedadb455971962d120b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "commitAfterChange": "b80bef2bb88aa4ee0628e83d51ed337e5c1af06e", "methodNumberBeforeChange": 409, "methodNumberAfterChange": 408, "signatureBeforeChange": "          public void caretUpdate( CaretEvent ce )", "signatureAfterChange": "          public void caretUpdate(final CaretEvent ce )", "diff": ["-    public void caretUpdate( CaretEvent ce ) {", "+    public void caretUpdate(final CaretEvent ce ) {", "-      updateLocation();", "+      Utilities.invokeLater(new Runnable() { // previously invokeAndWait forcing all other listeners to wait (why?)", "+        public void run() { updateLocation(); }", "+      });"]}], "num": 16139}