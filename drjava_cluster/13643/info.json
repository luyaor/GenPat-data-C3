{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8093d8b72bc91d66a03b753e4aa85cf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59050202a46f17026e4d3601312edda3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "   public TypeData forSimpleInitializedArrayInstantiation(SimpleInitializedArrayInstantiation that)", "signatureAfterChange": "   public TypeData forSimpleInitializedArrayInstantiation(SimpleInitializedArrayInstantiation that)", "diff": ["-    SymbolData type_result = getSymbolData(that.getType().getName(), _data, that.getType());", "-    TypeData elementResult = forArrayInitializerHelper(that.getInitializer(), type_result);", "-    if (type_result == null) {return null;}", "-    return type_result.getInstanceData();", "+    SymbolData typeRes = getSymbolData(that.getType().getName(), _data, that.getType());", "+    TypeData elementResult = forArrayInitializerHelper(that.getInitializer(), typeRes);", "+    if (typeRes == null) {return null;}", "+    return typeRes.getInstanceData();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60b3329996248c0bd8fa355b1eb9821e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/io/IOUtil.java", "commitBeforeChange": "dba5d2158724820f410d4efff37289045b3aca4c", "commitAfterChange": "6db2338d4c58e83974c8e6232ba8e48286d65b5e", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": "   public static void closeOnExit(InputStream in)", "signatureAfterChange": "   public static void closeOnExit(Closeable c)", "diff": ["-  /** Register the given stream to be closed on exit.  {@link InputStream#close} will be invoked from a shutdown hook. */", "-  public static void closeOnExit(InputStream in) {", "-    INPUT_STREAMS_TO_CLOSE.value().add(in);", "+  public static void closeOnExit(Closeable c) {", "+    TO_CLOSE.value().add(c);"]}], "num": 13643}