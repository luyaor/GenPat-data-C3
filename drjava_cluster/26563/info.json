{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c0462c13c9dff604887cf00bf9ae8dc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8347283ea0d24f37182e06c41696a4cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "314c962d7f6ed2c6b00f5edc6e764b582b016016", "commitAfterChange": "3b2b8c4279d3d3c19a0254256362d4d46aeeddaf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   static void openCommandLineFiles(MainFrame mf, String[] filesToOpen)", "signatureAfterChange": "   static void openCommandLineFiles(MainFrame mf, String[] filesToOpen)", "diff": ["-      final File file = new File(filesToOpen[i]);", "+      String currFileName = filesToOpen[i];", "+      boolean isProjectFile = currFileName.endsWith(\".pjt\");", "+      final File file = new File(currFileName);", "-        mf.getModel().openFile(command);", "+        if (isProjectFile) {", "+          mf.openProject(command);", "+        }", "+        else {", "+          mf.getModel().openFile(command);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a93d6c60d4034d191fea03a8e7e44dba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/PathClassLoader.java", "commitBeforeChange": "65f321398af60af439b02583f002515a69ff1dba", "commitAfterChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override protected Class<?> findClass(String name) throws ClassNotFoundException", "signatureAfterChange": "      @Override protected Class<?> findClass(String name) throws ClassNotFoundException", "diff": ["-        byte[] bytes = IOUtil.toByteArray(resource.openStream());", "-        ", "-        // define package", "-        definePackageForClass(name);", "-      ", "-        return defineClass(name, bytes, 0, bytes.length);", "+        InputStream stream = resource.openStream();", "+        try {", "+          byte[] bytes = IOUtil.toByteArray(stream);", "+          Class<?> result = defineClass(name, bytes, 0, bytes.length);", "+          definePackageForClass(name);", "+          return result;", "+        }", "+        finally { stream.close(); }", "-      catch (IOException e) { throw new ClassNotFoundException(); }", "+      catch (IOException e) { throw new ClassNotFoundException(\"Can't access class file\", e); }"]}], "num": 26563}