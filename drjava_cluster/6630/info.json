{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17b6ea9e04e4f029f1b5447c252273c7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5021aba927ae67c1128d48799c44be9e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "               public void testExceptionsInSymbolTable()", "signatureAfterChange": "               public void testExceptionsInSymbolTable()", "diff": ["-      //make sure that exceptions are being added to symbol table ", "+            ", "+      // Make sure that exceptions are being added to symbol table ", "+      ClassOrInterfaceType exceptionType = new ClassOrInterfaceType(SourceInfo.NO_INFO, ", "+                                                                    \"java.util.prefs.BackingStoreException\", ", "+                                                                    new Type[0]);", "+      ParenthesizedExpressionList expList = new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]);", "+      ", "-                       new BodyItemI[] { ", "-        new ThrowStatement(SourceInfo.NO_INFO, ", "-                           new SimpleNamedClassInstantiation(SourceInfo.NO_INFO, ", "-                                                             new ClassOrInterfaceType(SourceInfo.NO_INFO, ", "-                                                                                      \"java.util.prefs.BackingStoreException\", ", "-                                                                                      new Type[0]),", "-                                                             new ParenthesizedExpressionList(SourceInfo.NO_INFO, ", "-                                                                                             new Expression[0])))});", "-      ", "+                       new BodyItemI[] { new ThrowStatement(SourceInfo.NO_INFO, ", "+                                                            new SimpleNamedClassInstantiation(SourceInfo.NO_INFO, ", "+                                                                                              exceptionType, expList))});", "-                  LanguageLevelConverter.symbolTable.get(\"java.util.prefs.BackingStoreException\")==null);", "+                  LanguageLevelConverter.symbolTable.get(\"java.util.prefs.BackingStoreException\") == null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea2a02d994df6fc7dad591dec04a9185", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "          public void test_NotAllowed()", "signatureAfterChange": "          public void test_NotAllowed()", "diff": ["-      SourceInfo noInfo = JExprParser.NO_SOURCE_INFO;", "-      Word w = new Word(JExprParser.NO_SOURCE_INFO, \"word\");", "+      SourceInfo noInfo = SourceInfo.NO_INFO;", "+      Word w = new Word(SourceInfo.NO_INFO, \"word\");", "-      BracedBody emptyBody = new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]);", "-      ClassOrInterfaceType superClass = new ClassOrInterfaceType(JExprParser.NO_SOURCE_INFO, \"java.lang.Object\", new Type[0]);", "+      BracedBody emptyBody = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]);", "+      ClassOrInterfaceType superClass = new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]);", "-      BracedBody hasBitOperator = new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {new ExpressionStatement(JExprParser.NO_SOURCE_INFO, ", "-                                                                                                                      new BitwiseOrAssignmentExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"i\")), new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5)))});", "+      BracedBody hasBitOperator = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {new ExpressionStatement(SourceInfo.NO_INFO, ", "+                                                                                                                      new BitwiseOrAssignmentExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"i\")), new IntegerLiteral(SourceInfo.NO_INFO, 5)))});"]}], "num": 6630}