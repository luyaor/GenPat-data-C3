{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "748501e63b360909bf747d04b868f8e0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "249cfc82293c3a611089663b15c0c49d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOpsTest.java", "commitBeforeChange": "30084d60ea1c92bd9e5a911d71d6555be6180e71", "commitAfterChange": "113afd3151c2b14c9d66bb242346ae4c872989d1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testGetOffsetAndLength()", "signatureAfterChange": "   public void testGetOffsetAndLength()", "diff": ["-    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(0), oAndL.getFirst());", "-    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(9), oAndL.getSecond());", "+    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(0), oAndL.first());", "+    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(9), oAndL.second());", "-    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(0), oAndL.getFirst());", "-    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(13), oAndL.getSecond());", "+    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(0), oAndL.first());", "+    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(13), oAndL.second());", "-    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(4), oAndL.getFirst());", "-    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(9), oAndL.getSecond());", "+    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(4), oAndL.first());", "+    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(9), oAndL.second());", "-    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(0), oAndL.getFirst());", "-    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(1), oAndL.getSecond());", "+    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(0), oAndL.first());", "+    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(1), oAndL.second());", "-    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(24), oAndL.getFirst());", "-    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(1), oAndL.getSecond());", "+    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(24), oAndL.first());", "+    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(1), oAndL.second());", "-    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(12), oAndL.getFirst());", "-    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(14), oAndL.getSecond());", "+    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(12), oAndL.first());", "+    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(14), oAndL.second());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "428d7fe4bd9d9f802f8efcfd7277a213", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOpsTest.java", "commitBeforeChange": "a0485f85335f36c90789dfb389fcf6d34d6ebb24", "commitAfterChange": "bdfe950dc400d21dc2bdd8774632b12854b9f66c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testGetOffsetAndLength()", "signatureAfterChange": "   public void testGetOffsetAndLength()", "diff": ["-    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(0), oAndL.first());", "-    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(9), oAndL.second());", "+    assertEquals(\"testGetOffsetAndLength- offSet:\", Integer.valueOf(0), oAndL.first());", "+    assertEquals(\"testGetOffsetAndLength- length:\", Integer.valueOf(9), oAndL.second());", "-    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(0), oAndL.first());", "-    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(13), oAndL.second());", "+    assertEquals(\"testGetOffsetAndLength- offSet:\", Integer.valueOf(0), oAndL.first());", "+    assertEquals(\"testGetOffsetAndLength- length:\", Integer.valueOf(13), oAndL.second());", "-    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(4), oAndL.first());", "-    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(9), oAndL.second());", "+    assertEquals(\"testGetOffsetAndLength- offSet:\", Integer.valueOf(4), oAndL.first());", "+    assertEquals(\"testGetOffsetAndLength- length:\", Integer.valueOf(9), oAndL.second());", "-    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(0), oAndL.first());", "-    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(1), oAndL.second());", "+    assertEquals(\"testGetOffsetAndLength- offSet:\", Integer.valueOf(0), oAndL.first());", "+    assertEquals(\"testGetOffsetAndLength- length:\", Integer.valueOf(1), oAndL.second());", "-    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(24), oAndL.first());", "-    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(1), oAndL.second());", "+    assertEquals(\"testGetOffsetAndLength- offSet:\", Integer.valueOf(24), oAndL.first());", "+    assertEquals(\"testGetOffsetAndLength- length:\", Integer.valueOf(1), oAndL.second());", "-    assertEquals(\"testGetOffsetAndLength- offSet:\", new Integer(12), oAndL.first());", "-    assertEquals(\"testGetOffsetAndLength- length:\", new Integer(14), oAndL.second());", "+    assertEquals(\"testGetOffsetAndLength- offSet:\", Integer.valueOf(12), oAndL.first());", "+    assertEquals(\"testGetOffsetAndLength- length:\", Integer.valueOf(14), oAndL.second());"]}], "num": 12241}