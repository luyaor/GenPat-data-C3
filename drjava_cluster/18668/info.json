{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ffeb0c37839184f388e42654e9a48b1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02f2d3cf455c83f1ff57de0fb91ddb57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public Object visit(ReturnStatement node)", "signatureAfterChange": "   public Class visit(ReturnStatement node)", "diff": ["-     */", "-    public Object visit(ReturnStatement node) {", "-        Expression e = node.getExpression();", "-        if (e != null) {", "-            e.acceptVisitor(this);", "-        }", "-        return null;", "-    }", "+   */", "+  public Class visit(ReturnStatement node) {", "+    Expression e = node.getExpression();", "+    if (e != null) {", "+      e.acceptVisitor(this);", "+    }", "+    return null;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40430e1035c91389910a3ced491c52d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public Object visit(ReturnStatement node)", "signatureAfterChange": "   public Node visit(ReturnStatement node)", "diff": ["+   */", "+  public Node visit(ReturnStatement node) {", "+    Expression e = node.getExpression();", "+    if (e != null) {", "+      visitExpressionContainer(node);", "+    }", "+    return null;", "+  }", "-     */", "-    public Object visit(ReturnStatement node) {", "-        Expression e = node.getExpression();", "-        if (e != null) {", "-\t    visitExpressionContainer(node);", "-        }", "-        return null;", "-    }"]}], "num": 18668}