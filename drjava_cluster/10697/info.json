{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80b141a926c537cf5a113e6a345a1ab9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40333c8f23c6d3933d00194f3a434f4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "098be4c27233835145531c86355bc697a3b62bfd", "commitAfterChange": "28db8fb2942dc00cad50f5244fe215d573867721", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": "   private int _getDistToStart(TokenList.Iterator copyCursor)", "signatureAfterChange": "   private int _getDistToStart(TokenList.Iterator copyCursor)", "diff": ["-  /** Returns distance to previous newline. */", "+  /** Returns distance to previous newline (not including the newline itself). */", "+//    System.err.println(\"_getDistToStart called on \" + simpleString() + \" with cursor \" + copyCursor);", "+    ", "-    while (! copyCursor.atStart() && ! copyCursor.current().getType().equals(\"\\n\"))", "-    {", "+//    System.err.println(\"reduced model updated to \" + simpleString() + \" with cursor \" + copyCursor);", "+    ", "+    while (! copyCursor.atStart() && ! copyCursor.current().isNewline()) {", "+//      System.err.println(\"current token is \" + copyCursor.current() + \" with size \" + copyCursor.current().getSize());", "+//      System.err.println(\"reduced model updated to \" + simpleString() + \" with cursor \" + copyCursor);", "+//      System.err.println(\"walk count updated to \" + walkcount);", "-    ", "+//    System.err.println(\"On loop exit, reduced model is \" + simpleString() + \" with cursor \" + copyCursor);", "+//    System.err.println(\"distToStart = \" + walkcount);", "+//    System.err.println(\"current is \" + copyCursor.current());", "+//    System.err.println(\"getType is \" + copyCursor.current().getType());", "+    ", "+    assert copyCursor.current().isNewline();", "+//    System.err.println(\"Returning walk count of \" + walkcount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6042829909214b893c412303d696534", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/Brace.java", "commitBeforeChange": "c783dcfc2a672846c5731c22479ac241a8d88896", "commitAfterChange": "e97d669e5368c283be3ec2a94ca1c792daab5138", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected static int findBrace(String type)", "signatureAfterChange": "   private static int findBrace(String type)", "diff": ["-   */", "-  protected static int findBrace(String type) {", "+    */", "+  private static int findBrace(String type) {", "+    assert type == type.intern();", "-      if (type.equals(braces[i]))", "-        break;", "+      if (type == braces[i]) break;"]}], "num": 10697}