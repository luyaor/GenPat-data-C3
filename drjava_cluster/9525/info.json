{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2cd0a2f774446562980b7b2bb6d77ffd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "285417fc7aa64351af0f06c07ccbfbb6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "commitAfterChange": "ead43466202abb204c90f7ee2c316fec230d4415", "methodNumberBeforeChange": 331, "methodNumberAfterChange": 344, "signatureBeforeChange": "          private SignatureMatcher makeMatcher(Iterable<? extends VariableType> tparams,                                          Iterable<? extends Type> targs,                                          Iterable<? extends Type> params,                                          Iterable<? extends Expression> args,                                          Type returned, Option<Type> expected)", "signatureAfterChange": "          private SignatureMatcher makeMatcher(Iterable<? extends VariableType> tparams,                                          Iterable<? extends Type> targs,                                          Iterable<? extends Type> params,                                          Iterable<? extends Expression> args,                                          Type returned, Option<Type> expected)", "diff": ["-        else if (IterUtil.isEmpty(targs)) {", "+        else if (IterUtil.isEmpty(targs) || !_useExplicitTypeArgs) {", "-        else if (IterUtil.isEmpty(targs)) {", "+        else if (IterUtil.isEmpty(targs) || !_useExplicitTypeArgs) {", "-        else if (IterUtil.isEmpty(targs)) {", "+        else if (IterUtil.isEmpty(targs) || !_useExplicitTypeArgs) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e1eb86ed1e077ee20e4c4a7583ddb80", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "commitAfterChange": "b1b91197c778ee62ce767051b412c31f7bcdddb8", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   private void _resumeThread(ThreadReference thread, boolean shouldCopyBack)     throws DebugException", "signatureAfterChange": "   private void _resumeThread(ThreadReference thread, boolean fromStep)     throws DebugException", "diff": ["-  private void _resumeThread(ThreadReference thread, boolean shouldCopyBack)", "+  private void _resumeThread(ThreadReference thread, boolean fromStep)", "-    if (shouldCopyBack) {", "+    if (!fromStep) {", "+      _updateWatches();", "-      removeCurrentDebugInterpreter();", "-      _updateWatches();", "+      _removeCurrentDebugInterpreter(fromStep);", "-    if (!_suspendedThreads.isEmpty()) {", "+    if (!fromStep && !_suspendedThreads.isEmpty()) {", "-    }", "+    }    "]}], "num": 9525}