{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24d3f582114f0b9db40c47794f7e8967", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b739c39700edc072f765fb525edd33b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": "          public void testForPlusAssignmentExpression()", "signatureAfterChange": "          public void testForPlusAssignmentExpression()", "diff": ["-      ComplexNameReference nf = new ComplexNameReference(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"Ned\")), new Word(JExprParser.NO_SOURCE_INFO, \"Flanders\"));", "-      PlusAssignmentExpression pa = new PlusAssignmentExpression(JExprParser.NO_SOURCE_INFO, nf, new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 5));", "+      ComplexNameReference nf = new ComplexNameReference(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"Ned\")), new Word(SourceInfo.NO_INFO, \"Flanders\"));", "+      PlusAssignmentExpression pa = new PlusAssignmentExpression(SourceInfo.NO_INFO, nf, new IntegerLiteral(SourceInfo.NO_INFO, 5));", "-      PlusAssignmentExpression pa2 = new PlusAssignmentExpression(JExprParser.NO_SOURCE_INFO, nf, nf);", "+      PlusAssignmentExpression pa2 = new PlusAssignmentExpression(SourceInfo.NO_INFO, nf, nf);", "-      SimpleNameReference sRef = new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"s\"));", "+      SimpleNameReference sRef = new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"s\"));", "-      PlusAssignmentExpression pa3 = new PlusAssignmentExpression(JExprParser.NO_SOURCE_INFO, sRef, new BooleanLiteral(JExprParser.NO_SOURCE_INFO, true));", "+      PlusAssignmentExpression pa3 = new PlusAssignmentExpression(SourceInfo.NO_INFO, sRef, new BooleanLiteral(SourceInfo.NO_INFO, true));", "-      PlusAssignmentExpression pa4 = new PlusAssignmentExpression(JExprParser.NO_SOURCE_INFO, sRef, new StringLiteral(JExprParser.NO_SOURCE_INFO, \"cat\"));", "+      PlusAssignmentExpression pa4 = new PlusAssignmentExpression(SourceInfo.NO_INFO, sRef, new StringLiteral(SourceInfo.NO_INFO, \"cat\"));", "-      PlusAssignmentExpression pa5 = new PlusAssignmentExpression(JExprParser.NO_SOURCE_INFO, nf, new StringLiteral(JExprParser.NO_SOURCE_INFO, \"house \"));", "+      PlusAssignmentExpression pa5 = new PlusAssignmentExpression(SourceInfo.NO_INFO, nf, new StringLiteral(SourceInfo.NO_INFO, \"house \"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a254a7a7cb6a6f54145ed383a71e17bc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": "          public void testForPlusAssignmentExpression()", "signatureAfterChange": "          public void testForPlusAssignmentExpression()", "diff": ["-      ComplexNameReference nf = new ComplexNameReference(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"Ned\")), new Word(SourceInfo.NO_INFO, \"Flanders\"));", "-      PlusAssignmentExpression pa = new PlusAssignmentExpression(SourceInfo.NO_INFO, nf, new IntegerLiteral(SourceInfo.NO_INFO, 5));", "+      ComplexNameReference nf = ", "+        new ComplexNameReference(SourceInfo.NONE, ", "+                                 new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"Ned\")), ", "+                                 new Word(SourceInfo.NONE, \"Flanders\"));", "+      PlusAssignmentExpression pa = ", "+        new PlusAssignmentExpression(SourceInfo.NONE, nf, new IntegerLiteral(SourceInfo.NONE, 5));", "-      PlusAssignmentExpression pa2 = new PlusAssignmentExpression(SourceInfo.NO_INFO, nf, nf);", "+      PlusAssignmentExpression pa2 = new PlusAssignmentExpression(SourceInfo.NONE, nf, nf);", "-      SimpleNameReference sRef = new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"s\"));", "+      SimpleNameReference sRef = new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"s\"));", "-        new PlusAssignmentExpression(SourceInfo.NO_INFO, sRef, new BooleanLiteral(SourceInfo.NO_INFO, true));", "+        new PlusAssignmentExpression(SourceInfo.NONE, sRef, new BooleanLiteral(SourceInfo.NONE, true));", "-        new PlusAssignmentExpression(SourceInfo.NO_INFO, sRef, new StringLiteral(SourceInfo.NO_INFO, \"cat\"));", "+        new PlusAssignmentExpression(SourceInfo.NONE, sRef, new StringLiteral(SourceInfo.NONE, \"cat\"));", "-        new PlusAssignmentExpression(SourceInfo.NO_INFO, nf, new StringLiteral(SourceInfo.NO_INFO, \"house \"));", "+        new PlusAssignmentExpression(SourceInfo.NONE, nf, new StringLiteral(SourceInfo.NONE, \"house \"));"]}], "num": 8483}