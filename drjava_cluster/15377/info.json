{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "920ec729a1059e06ba1c924552e2ae74", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13b0c828f468c746b8bc974a437c07dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 462, "methodNumberAfterChange": 462, "signatureBeforeChange": "\r \r   public void forBooleanLiteral(BooleanLiteral that)", "signatureAfterChange": "    public void forBooleanLiteral(BooleanLiteral that)", "diff": ["-\r", "-  public void forBooleanLiteral(BooleanLiteral that) {\r", "-    forBooleanLiteralDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forBooleanLiteralOnly(that);\r", "-  }\r", "+", "+  public void forBooleanLiteral(BooleanLiteral that) {", "+    forBooleanLiteralDoFirst(that);", "+    if (prune(that)) return;", "+    forBooleanLiteralOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1cc94c5c1411b35589710fd738e62c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 464, "methodNumberAfterChange": 464, "signatureBeforeChange": "\r \r   public void forStringLiteral(StringLiteral that)", "signatureAfterChange": "    public void forStringLiteral(StringLiteral that)", "diff": ["-\r", "-  public void forStringLiteral(StringLiteral that) {\r", "-    forStringLiteralDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forStringLiteralOnly(that);\r", "-  }\r", "+", "+  public void forStringLiteral(StringLiteral that) {", "+    forStringLiteralDoFirst(that);", "+    if (prune(that)) return;", "+    forStringLiteralOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dee2ff5e88fb222f0876d2cb1a764129", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 463, "methodNumberAfterChange": 463, "signatureBeforeChange": "\r \r   public void forCharLiteral(CharLiteral that)", "signatureAfterChange": "    public void forCharLiteral(CharLiteral that)", "diff": ["-\r", "-  public void forCharLiteral(CharLiteral that) {\r", "-    forCharLiteralDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forCharLiteralOnly(that);\r", "-  }\r", "+", "+  public void forCharLiteral(CharLiteral that) {", "+    forCharLiteralDoFirst(that);", "+    if (prune(that)) return;", "+    forCharLiteralOnly(that);", "+  }"]}], "num": 15377}