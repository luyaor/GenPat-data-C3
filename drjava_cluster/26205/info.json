{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e86fdcfa71a3f94677d6cd18ee01b9cf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65c3134c314cfa98afdc7b4242a96684", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "77b08b2c2aecee48e010895d99d03539a1aa19da", "commitAfterChange": "8c0220c285239f624657ec2660b265363e131e14", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   private void _setupMiscPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupMiscPanel(ConfigPanel panel)", "diff": ["-    addOptionComponent(panel, ", "-                       new ForcedChoiceOptionComponent(OptionConstants.NEW_VERSION_NOTIFICATION,", "-                                                       \"Check for new versions?\", this,", "-                                                       \"Whether DrJava should check for new versions on drjava.org.\"));", "-    addOptionComponent(panel, new IntegerOptionComponent(OptionConstants.NEW_VERSION_NOTIFICATION_DAYS,", "-                                                         \"Days between new version check\", this,", "-                                                         \"The number of days between automatic new version checks.\"));", "-    addOptionComponent(panel, new IntegerOptionComponent(OptionConstants.HISTORY_MAX_SIZE, \"Size of Interactions History\", this,", "-                                                  \"The number of interactions to remember in the history.\"));", "-    addOptionComponent(panel, ", "-                       new ForcedChoiceOptionComponent(OptionConstants.MASTER_JVM_XMX, ", "-                                                       \"Maximum Heap Size for Main JVM in MB\", ", "-                                                       this,", "-                                                       \"The maximum heap the Main JVM can use. Select blank for default.\"));", "-    addOptionComponent(panel, ", "-                       new StringOptionComponent(OptionConstants.MASTER_JVM_ARGS, \"JVM Args for Main JVM\", ", "-                                                 this,", "-                                                 \"The command-line arguments to pass to the Main JVM.\"));", "-    addOptionComponent(panel, ", "-                       new ForcedChoiceOptionComponent(OptionConstants.SLAVE_JVM_XMX, ", "-                                                       \"Maximum Heap Size for Interactions JVM in MB\", ", "-                                                       this,", "-                                                       \"The maximum heap the Interactions JVM can use. Select blank for default\"));", "-    addOptionComponent(panel, ", "-                       new StringOptionComponent(OptionConstants.SLAVE_JVM_ARGS, \"JVM Args for Interactions JVM\", ", "-                                                 this,", "-                                                 \"The command-line arguments to pass to the Interactions JVM.\"));", "-    addOptionComponent(panel, new IntegerOptionComponent(OptionConstants.BROWSER_HISTORY_MAX_SIZE,", "-                                                         \"Maximum Size of Browser History\", ", "-                                                         this,", "-                                                         \"Determines how many entries are kept in the browser history.\"));", "-                       new BooleanOptionComponent(OptionConstants.SHOW_SOURCE_WHEN_SWITCHING, ", "-                                                  \"Show sample of source code when fast switching\", ", "-                                                  this,", "-                                                  \"Whether to show a sample of the source code under the document's filename when fast switching documents.\"));", "-    addOptionComponent(panel, ", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.SHOW_CODE_PREVIEW_POPUPS, ", "-                                                  \"Show Code Preview Popups\", this,", "-                                                  \"<html>Whether to show a popup window with a code preview when the mouse is hovering<br>\"+", "-                                                  \"over an item in the Breakpoints, Bookmarks and Find All panes.</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_AUTOIMPORT_ENABLED, ", "-                                                         \"Enable the \\\"Auto Import\\\" Dialog\", this,", "-                                                         \"<html>Whether DrJava should open the \\\"Auto Import\\\" dialog when<br>\"+", "-                                                         \"an undefined class is encountered in the Interactions Pane.</html>\"));", "-    VectorStringOptionComponent autoImportClasses =", "-      new VectorStringOptionComponent(OptionConstants.INTERACTIONS_AUTO_IMPORT_CLASSES, \"Classes to Auto-Import\", this,", "-                                      \"<html>List of classes to auto-import every time the<br>\"+", "-                                      \"Interaction Pane is reset or started. Examples:<br><br>\"+", "-                                      \"java.io.File<br>\"+", "-                                      \"java.util.*</html>\") {", "-      protected boolean verify(String s) {", "-        boolean result = true;", "-        // verify that the string contains only Java identifier characters, dots and stars", "-        for(int i=0; i<s.length(); ++i) {", "-          char ch = s.charAt(i);", "-          if ((ch!='.') && (ch!='*') && (!Character.isJavaIdentifierPart(ch))) {", "-            result = false;", "-            break;", "-          }", "-        }", "-        if (!result) {", "-          JOptionPane.showMessageDialog(ConfigFrame.this,", "-                                        \"This is not a valid class name:\\n\"+", "-                                        s,", "-                                        \"Error Adding Class Name\",", "-                                        JOptionPane.ERROR_MESSAGE); ", "-        }", "-        return result;", "-      }", "-    };", "-    addOptionComponent(panel, autoImportClasses);", "-    ", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.WARN_IF_COMPIZ, ", "-                                                         \"Warn If Compiz Detected\", this,", "-                                                         \"<html>Whether DrJava should warn the user if Compiz is running.<br>\"+", "-                                                         \"Compiz and Java Swing are incompatible and can lead to crashes.</html>\"));", "-    ", "+    panel.displayComponents();", "+  }  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a006f74dfd139219b8855ed72fbdd086", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "f28cc1df1806224e361f5125bf0fdd8c055cbda8", "commitAfterChange": "df2b79c4755a48b6d68cea0053ee5b504fa8b5d0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "diff": ["-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.WINDOW_STORE_POSITION,", "-                                                  \"Save Main Window Position\", this,", "-                                                  \"Whether to save and restore the size and position of the main window.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_CLIPBOARD_HISTORY_STORE_POSITION,", "-                                                  \"Save \\\"Clipboard History\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Clipboard History\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) { _mainFrame.resetClipboardHistoryDialogPosition(); }", "-    }, \"Reset \\\"Clipboard History\\\" Dialog Position and Size\", this, \"This resets the dialog position and size to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_GOTOFILE_STORE_POSITION,", "-                                                  \"Save \\\"Go to File\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Go to File\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) { _mainFrame.resetGotoFileDialogPosition(); }", "-    }, \"Reset \\\"Go to File\\\" Dialog Position and Size\", this, \"This resets the dialog position and size to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_COMPLETE_WORD_STORE_POSITION,", "-                                                  \"Save \\\"Auto-Complete Word\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Auto-Complete Word\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) { _mainFrame.resetCompleteWordDialogPosition(); }", "-    }, \"Reset \\\"Auto-Complete Word\\\" Dialog Position and Size\", this, \"This resets the dialog position and size to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_JAROPTIONS_STORE_POSITION,", "-                                                  \"Save \\\"Create Jar File from Project\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the position of the \\\"Create Jar File from Project\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        _mainFrame.resetJarOptionsDialogPosition();", "-      }", "-    }, \"Reset \\\"Create Jar File from Project\\\" Dialog Position\", this, \"This resets the dialog position to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_OPENJAVADOC_STORE_POSITION,", "-                                                  \"Save \\\"Open Javadoc\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Open Javadoc\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) { _mainFrame.resetOpenJavadocDialogPosition(); }", "-    }, \"Reset \\\"Open Javadoc\\\" Dialog Position and Size\", this, \"This resets the dialog position and size to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_AUTOIMPORT_STORE_POSITION,", "-                                                  \"Save \\\"Auto Import\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Auto Import\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) { _mainFrame.resetAutoImportDialogPosition(); }", "-    }, \"Reset \\\"Auto Import\\\" Dialog Position and Size\", this, \"This resets the dialog position and size to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_EXTERNALPROCESS_STORE_POSITION,", "-                                                  \"Save \\\"Execute External Process\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the position of the \\\"Execute External Process\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        _mainFrame.resetExecuteExternalProcessPosition();", "-      }", "-    }, \"Reset \\\"Execute External Process\\\" Dialog Position\", this, \"This resets the dialog position to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_EDITEXTERNALPROCESS_STORE_POSITION,", "-                                                  \"Save \\\"Edit External Process\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the position of the \\\"Edit External Process\\\" dialog.\"));", "-    addOptionComponent(panel, new ButtonComponent(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) {", "-        _mainFrame.resetEditExternalProcessPosition();", "-      }", "-    }, \"Reset \\\"Execute External Process\\\" Dialog Position\", this, \"This resets the dialog position to its default values.\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_OPENJAVADOC_STORE_POSITION,", "-                                                  \"Save \\\"Open Javadoc\\\" Dialog Position\", this,", "-                                                  \"Whether to save and restore the size and position of the \\\"Open Javadoc\\\" dialog.\"));"]}], "num": 26205}