{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a03820568d7eea2f80aecb8d1c2999e6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d0a89516c3710030483d650068ad65e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                        int lineNumber)", "signatureAfterChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                        int lineNumber)", "diff": ["-    List<ReferenceType> classes;  ", "+    List classes;  ", "-      classes = _vm.classesByName(className);  // Added parameterization <ReferenceType> to classes. JDK 1.5 will eliminate this type warning", "+      classes = _vm.classesByName(className);  // Add parameterization <ReferenceType> to classes. JDK 1.5 will eliminate this type warning", "-      ref = classes.get(i);", "+      ref = (ReferenceType) classes.get(i);", "-        List<Location> lines = new LinkedList();   // Added parameterization <Location> to lines", "+        List lines = new LinkedList();", "-          lines = ref.locationsOfLine(lineNumber); // JDK 1.5 will eliminate this type warning", "+          lines = ref.locationsOfLine(lineNumber); // Add parameterization <Location> to lines. JDK 1.5 will eliminate this type warning", "-          List<ReferenceType> innerRefs = ref.nestedTypes();  // Added parameterization <ReferenceType>. JDK 1.5 will eliminate this type warning", "+          List innerRefs = ref.nestedTypes();  // Add parameterization <ThreadReference>. JDK 1.5 will eliminate this type warning", "-              ReferenceType currRef = innerRefs.get(j);", "-              lines = currRef.locationsOfLine(lineNumber);  // JDK 1.5 will eliminate this type warning", "+              ReferenceType currRef = (ReferenceType) innerRefs.get(j);", "+              lines = currRef.locationsOfLine(lineNumber);  // Add parameterization <Location> to lines. JDK 1.5 will eliminate this type warning"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "981f51e4858fd6a1aab8a1f7a7303292", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0fb53cd455249a14a390a0c3345c9513e349256e", "commitAfterChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                        int lineNumber)", "signatureAfterChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                        int lineNumber)", "diff": ["-    List<ReferenceType> classes;  ", "+    List classes;  ", "-      classes = _vm.classesByName(className);  // JDK 1.5 will eliminate this type warning", "+      classes = _vm.classesByName(className);  // Add parameterization <ReferenceType> to classes. JDK 1.5 will eliminate this type warning", "-        List<Location> lines = new LinkedList<Location>();", "+        List lines = new LinkedList();", "-          lines = ref.locationsOfLine(lineNumber); // JDK 1.5 will eliminate this type warning", "+          lines = ref.locationsOfLine(lineNumber); // Add parameterization <Location> to lines. JDK 1.5 will eliminate this type warning", "-          List<ThreadReference> innerRefs = ref.nestedTypes();  // JDK 1.5 will eliminate this type warning", "+          List innerRefs = ref.nestedTypes();  // Add parameterization <ThreadReference>. JDK 1.5 will eliminate this type warning", "-              lines = currRef.locationsOfLine(lineNumber);  // JDK 1.5 will eliminate this type warning", "+              lines = currRef.locationsOfLine(lineNumber);  // Add parameterization <Location> to lines. JDK 1.5 will eliminate this type warning"]}], "num": 14599}