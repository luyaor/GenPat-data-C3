{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0808191021e303e2f85c306e86ba35b9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "177815ec276ae8ac85e2da18137e4ff2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "6bdcaa1031d63e5f58edf8d0e2313eac60ac2bdc", "commitAfterChange": "c6ab4cad3515b44035f93fe56438ef0ad4e6d24d", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": "     protected DefinitionsDocument getDocument()", "signatureAfterChange": "     protected DefinitionsDocument getDocument()", "diff": ["+", "+//      Utilities.showDebug(\"getDocument() called on \" + this);", "-      catch(IOException ioe) { ", "-        try { // file has evidently been moved since document was loaded", "-          if (isUntitled()) throw new UnexpectedException(ioe);", "-          _askUserToLocateFile(); ", "-          return _cacheAdapter.getDocument(); // will succeed if user located file", "-        }", "-        catch(IOException e) { throw new UnexpectedException(e); }", "+      catch(IOException ioe) {", "+//        Utilities.showDebug(\"getDocument() failed for \" + this);", "+        try {", "+          _notifier.documentNotFound(this, _file);", "+          if (! isUntitled())  ", "+            _documentNavigator.refreshDocument(this, _file.getCanonicalFile().getParent());", "+          else throw new UnexpectedException(ioe); // Is this line reachable?", "+          ", "+        } catch(Throwable t) { throw new UnexpectedException(t); }", "+        //  System.out.println(\"DefaultGlobalModel: 1432: IOException should be handled by box that fixes everything.\");", "-    }", "+      return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dca58b6225b57e95fb750116b6e27f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "56a5d7ef4f332df9b45adf95f71d664c61575e1a", "commitAfterChange": "010ae297b5b09284b0dfa287aa524a83e41fa50d", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": "     protected DefinitionsDocument getDocument()", "signatureAfterChange": "     protected DefinitionsDocument getDocument()", "diff": ["-", "-//      Utilities.showDebug(\"getDocument() called on \" + this);", "-      catch(IOException ioe) {", "-//        Utilities.showDebug(\"getDocument() failed for \" + this);", "-        try {", "-          _notifier.documentNotFound(this, _file);", "-          if (! isUntitled())  ", "-            _documentNavigator.refreshDocument(this, _file.getCanonicalFile().getParent());", "-          else throw new UnexpectedException(ioe); // Is this line reachable?", "-          ", "-        } catch(Throwable t) { throw new UnexpectedException(t); }", "-        //  System.out.println(\"DefaultGlobalModel: 1432: IOException should be handled by box that fixes everything.\");", "+      catch(IOException ioe) { ", "+        try { // file has evidently been moved since document was loaded", "+          if (isUntitled()) throw new UnexpectedException(ioe);", "+          _askUserToLocateFile(); ", "+          return _cacheAdapter.getDocument(); // will succeed if user located file", "+        }", "+        catch(IOException e) { throw new UnexpectedException(e); }", "+    }", "-      return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "990f66720048b28b139ce2319a6ba01f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "481944e3395dcc7a19e81902c59977be65ba633a", "commitAfterChange": "c682fca099b13e765e0e1f201629222d04fb1339", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "diff": ["-      else", "+      else {", "-        INavigatorItem idoc = d;", "-        String path = fixPathForNavigator(d.getFile().getCanonicalPath());", "-        _documentNavigator.refreshDocument(idoc, path);", "-      }", "-      catch(IOException e) { ", "-      /* Do nothing; findbugs signals a bug unless this catch clause spans more than two lines */ ", "+          final INavigatorItem idoc = d;", "+          final String path = fixPathForNavigator(d.getFile().getCanonicalPath());", "+          Utilities.invokeAndWait(new Runnable() { ", "+            public void run() { _documentNavigator.refreshDocument(idoc, path); }", "+          });", "+        }", "+        catch(InterruptedException e) { throw new UnexpectedException(e); }", "+        catch(IOException e) { ", "+          /* Do nothing; findbugs signals a bug unless this catch clause spans more than two lines */ ", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be9e280ada786c0a3e61aee94262d203", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 191, "signatureBeforeChange": "     protected DefinitionsDocument getDocument()", "signatureAfterChange": "     protected DefinitionsDocument getDocument()", "diff": ["-//      if (SHOW_GETDOC) { // SHOW_GETDOC's definitions is at _openFiles(...)", "-//        System.out.println(this);", "-//        Exception e = new Exception(\"\");", "-//        System.out.println(\"  \" + e.getStackTrace()[1]);", "-//        System.out.println(\"  \" + e.getStackTrace()[2]);", "-//        System.out.println(\"  \" + e.getStackTrace()[3]);", "-//        System.out.println(\"  \" + e.getStackTrace()[4]);", "-      //      }", "+", "+//      Utilities.showDebug(\"getDocument() called on \" + this);", "-      catch(IOException e) {", "-//        new Exception(\"* get document IOEx\").printStackTrace(System.out);", "+      catch(IOException ioe) {", "+//        Utilities.showDebug(\"getDocument() failed for \" + this);", "-          _notifier.documentNotFound(this,_file);", "-          if (!isUntitled()) ", "+          _notifier.documentNotFound(this, _file);", "+          if (! isUntitled())  ", "-          else return _cacheAdapter.getDocument();", "+          else throw new UnexpectedException(ioe); // Is this line reachable?", "-        } catch(IOException ioe) { throw new UnexpectedException(ioe); }", "+        } catch(Throwable t) { throw new UnexpectedException(t); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb03fd6c4fae285bcb4409e27a26d31d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "481944e3395dcc7a19e81902c59977be65ba633a", "commitAfterChange": "c682fca099b13e765e0e1f201629222d04fb1339", "methodNumberBeforeChange": 190, "methodNumberAfterChange": 193, "signatureBeforeChange": "     protected DefinitionsDocument getDocument()", "signatureAfterChange": "     protected DefinitionsDocument getDocument()", "diff": ["-      catch(IOException ioe) {", "+      catch(IOException ioe) { // document has been moved or deleted", "-          if (! isUntitled())  ", "-            _documentNavigator.refreshDocument(this, _file.getCanonicalFile().getParent());", "-          else throw new UnexpectedException(ioe); // Is this line reachable?", "-          ", "-        } catch(Throwable t) { throw new UnexpectedException(t); }", "-        //  System.out.println(\"DefaultGlobalModel: 1432: IOException should be handled by box that fixes everything.\");", "+          final String path = _file.getCanonicalFile().getParent();", "+          try {", "+            Utilities.invokeAndWait(new Runnable() {", "+              public void run() { _documentNavigator.refreshDocument(ConcreteOpenDefDoc.this, path); }", "+            });", "+            return _cacheAdapter.getDocument(); ", "+          }", "+          catch(InterruptedException e) { throw new UnexpectedException(e); }", "+        }", "+        catch(Throwable t) { throw new UnexpectedException(t); }", "-      ", "-      return null;"]}], "num": 2438}