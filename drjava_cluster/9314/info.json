{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51169d8fdbdbab0cb82cc2762805600d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cbed7a86425daa2350928b55cd079e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "4b6c56880670c4bb0f37de6a58c9d30d501c274a", "commitAfterChange": "c2a6567c6b5cf5eb1741bdddf032b869b2234b72", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public void selectNothing()", "signatureAfterChange": "     public void selectNothing()", "diff": ["-      _lastDefPane.removeCompilerErrorHighlight();", "+      _frame.getCurrentDefPane().removeErrorHighlight();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b68b5501936519fef8754a8a7ee42e91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 40, "signatureBeforeChange": "     void switchToError(CompilerError error)", "signatureAfterChange": "     void switchToError(CompilerError error)", "diff": ["-     ", "-", "-       ", "+      ", "+      ", "+      ", "-          ", "+//          Utilities.showDebug(\"The position of the error is: \" + pos);", "-//        Utilities.showDebug(\"active document being set to \" + doc + \" in ErrorPanel.switchToError\");", "+//          Utilities.showDebug(\"active document being set to \" + doc + \" in ErrorPanel.switchToError\");", "+          ", "-//        Utilities.showDebug(\"setting active document has completed\");", "+          ", "+//          Utilities.showDebug(\"setting active document has completed\");", "+          ", "+          ", "-            if (errPos >= 0 && errPos <= doc.getLength()) defPane.centerViewOnOffset(errPos);", "+            if (errPos >= 0 && errPos <= doc.getLength()) {", "+              defPane.centerViewOnOffset(errPos);", "+              ", "+              /* The folowing fixes a bug where, if two consecutive errors are in the same position, the previous error", "+               * is unhighlighted and the new error is not highlighted because the CaretListener does not act because there", "+               * is no change in caret position. (This is the only place where updateHighlight was called from before) */", "+              defPane.getErrorCaretListener().updateHighlight(errPos);", "+            }", "+            ", "-          _frame._switchDefScrollPane(); // resets an out-of-kilter DefinitionsPane on the first error after a compilation", "+//          _frame._switchDefScrollPane(); // resets an out-of-kilter DefinitionsPane on the first error after a compilation"]}], "num": 9314}