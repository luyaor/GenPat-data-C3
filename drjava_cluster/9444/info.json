{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d37b3d80d5f9115bd003b0cf5809834", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd3d9d772bb080a734fbc2d6538c04d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/JavaClass.java", "commitBeforeChange": "bd4a771b77ba1887596583ce142a4b7d1fa91b7e", "commitAfterChange": "f8e4975fc86eccfc2e1e190be55c64d1a287745a", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "          public Object evaluate(Object receiver, Iterable<Object> args, RuntimeBindings bindings,                             Options options) throws EvaluatorException", "signatureAfterChange": "          public Object evaluate(Object receiver, Iterable<Object> args, RuntimeBindings bindings,                             Options options) throws EvaluatorException", "diff": ["-        throw new EvaluatorException(e.getCause(),", "-                                      \"java.lang.reflect.Method.invoke\",", "-                                      \"sun.reflect.DelegatingMethodAccessorImpl.invoke\",", "-                                      \"sun.reflect.NativeMethodAccessorImpl.invoke\",", "-                                      \"sun.reflect.NativeMethodAccessorImpl.invoke0\");", "+        throw new EvaluatorException(e.getCause(), METHOD_EXTRA_STACK);", "+      }", "+      catch (ExceptionInInitializerError e) {", "+        throw new EvaluatorException(e, METHOD_EXTRA_STACK);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea3e2e817a57e79d2e74934cfc76b971", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/JavaClass.java", "commitBeforeChange": "bd4a771b77ba1887596583ce142a4b7d1fa91b7e", "commitAfterChange": "f8e4975fc86eccfc2e1e190be55c64d1a287745a", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "          public Object evaluate(Object outer, Iterable<Object> args, RuntimeBindings bindings, Options options)        throws EvaluatorException", "signatureAfterChange": "          public Object evaluate(Object outer, Iterable<Object> args, RuntimeBindings bindings, Options options)        throws EvaluatorException", "diff": ["-        throw new EvaluatorException(e.getCause());", "+        throw new EvaluatorException(e.getCause(), CONSTRUCTOR_EXTRA_STACK);", "+      }", "+      catch (ExceptionInInitializerError e) {", "+        throw new EvaluatorException(e, CONSTRUCTOR_EXTRA_STACK);"]}], "num": 9444}