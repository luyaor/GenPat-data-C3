{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac66b2720a788ab2a6b0f649924215f6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c65c40a3302f886eab68cfe104d1a82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "a35de807c6239a74c75cd1d9a337e2c468729622", "commitAfterChange": "bf372fc29acf6ea260cc55361328f14ce539744d", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "\r   private void _runJava()", "signatureAfterChange": "   private void _runJava()", "diff": ["-  /** Execute the Java class. */\r", "-  private void _runJava() {\r", "-    _mainFrame.updateStatusField(\"Executing external Java class...\");\r", "-    \r", "-    _windowListenerActive = false;\r", "-    if (_javaCommandLinePreview.getText().length()>0) {\r", "-      runJava(\"\", _jvmLine.getText(), _javaCommandLine.getText(),\r", "-              _javaCommandWorkDirLine.getText());\r", "-    }\r", "-    else {\r", "-      JOptionPane.showMessageDialog(this,\r", "-                                    \"Empty command line.\",\r", "-                                    \"Invalid Command Line\",\r", "-                                    JOptionPane.ERROR_MESSAGE);\r", "-    }\r", "-\r", "-    // Always apply and save settings\r", "-    _saveSettings();\r", "-    this.setVisible(false);\r", "-    if (_cm!=null) { _cm.set(); }\r", "-  }\r", "+  /** Execute the Java class. */", "+  private void _runJava() {", "+    _mainFrame.updateStatusField(\"Executing external Java class...\");", "+    ", "+    _mainFrame.removeModalWindowAdapter(this);", "+    if (_javaCommandLinePreview.getText().length()>0) {", "+      runJava(\"\", _jvmLine.getText(), _javaCommandLine.getText(),", "+              _javaCommandWorkDirLine.getText());", "+    }", "+    else {", "+      JOptionPane.showMessageDialog(this,", "+                                    \"Empty command line.\",", "+                                    \"Invalid Command Line\",", "+                                    JOptionPane.ERROR_MESSAGE);", "+    }", "+    ", "+    // Always apply and save settings", "+    _saveSettings();", "+    this.setVisible(false);", "+    if (_cm!=null) { _cm.set(); }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa99028612651be83e2cbc1697ea9a75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "73b7f0a42ebcf824c132189e958d58c40bbacf0e", "commitAfterChange": "839683081b0d966fa9fc02dc0e1948fc900d3a55", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "   private void _runJava()", "signatureAfterChange": "\r   private void _runJava()", "diff": ["-  /** Execute the Java class. */", "-  private void _runJava() {", "-    _mainFrame.updateStatusField(\"Executing external Java class...\");", "-    ", "-    if (_javaCommandLinePreview.getText().length()>0) {", "-      runJava(\"\", _jvmLine.getText(), _javaCommandLine.getText(),", "-              _javaCommandWorkDirLine.getText());", "-    }", "-    else {", "-      JOptionPane.showMessageDialog(this,", "-                                    \"Empty command line.\",", "-                                    \"Invalid Command Line\",", "-                                    JOptionPane.ERROR_MESSAGE);", "-    }", "-", "-    // Always apply and save settings", "-    _saveSettings();", "-    this.setVisible(false);", "-    if (_cm!=null) { _cm.set(); }", "-  }", "+  /** Execute the Java class. */\r", "+  private void _runJava() {\r", "+    _mainFrame.updateStatusField(\"Executing external Java class...\");\r", "+    \r", "+    _windowListenerActive = false;\r", "+    if (_javaCommandLinePreview.getText().length()>0) {\r", "+      runJava(\"\", _jvmLine.getText(), _javaCommandLine.getText(),\r", "+              _javaCommandWorkDirLine.getText());\r", "+    }\r", "+    else {\r", "+      JOptionPane.showMessageDialog(this,\r", "+                                    \"Empty command line.\",\r", "+                                    \"Invalid Command Line\",\r", "+                                    JOptionPane.ERROR_MESSAGE);\r", "+    }\r", "+\r", "+    // Always apply and save settings\r", "+    _saveSettings();\r", "+    this.setVisible(false);\r", "+    if (_cm!=null) { _cm.set(); }\r", "+  }\r"]}], "num": 22144}