{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77d75e5581b12ea2592624f3747f383d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cedd5a74d416edf736dd52263228aac2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 54, "signatureBeforeChange": "   private void _setupDebugPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDebugPanel(ConfigPanel panel)", "diff": ["-      new VectorFileOptionComponent(OptionConstants.DEBUG_SOURCEPATH, \"Sourcepath\", this,", "-                                    \"<html>Any directories in which to search for source<br>\" +", "-                                    \"files when stepping in the Debugger.</html>\", true);", "+      newVectorFileOptionComponent(OptionConstants.DEBUG_SOURCEPATH, true);", "-                       new BooleanOptionComponent(OptionConstants.DEBUG_STEP_JAVA,", "-                                                  \"Step Into Java Classes\", ", "-                                                  this,", "-                                                  \"<html>Whether the Debugger should step into Java library classes,<br>\" +", "-                                                  \"including java.*, javax.*, sun.*, com.sun.*, com.apple.eawt.*, and com.apple.eio.*</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DEBUG_STEP_INTERPRETER,", "-                                                  \"Step Into Interpreter Classes\", this,", "-                                                  \"<html>Whether the Debugger should step into the classes<br>\" +", "-                                                  \"used by the Interactions Pane (DynamicJava).</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DEBUG_STEP_DRJAVA,", "-                                                  \"Step Into DrJava Classes\", this,", "-                                                  \"Whether the Debugger should step into DrJava's own class files.\"));", "+                       newBooleanOptionComponent(OptionConstants.DEBUG_STEP_JAVA));", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DEBUG_STEP_INTERPRETER));", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DEBUG_STEP_DRJAVA));", "-                       new VectorStringOptionComponent(OptionConstants.DEBUG_STEP_EXCLUDE,", "-                                                       \"Classes/Packages To Exclude\", ", "-                                                       this,", "-                                                       \"<html>Any classes that the debuggger should not step into.<br>\" +", "-                                                       \"Should be a list of fully-qualified class names.<br>\" +", "-                                                       \"To exclude a package, add <code>packagename.*</code> to the list.</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DEBUG_AUTO_IMPORT,", "-                                                  \"Auto-Import after Breakpoint/Step\", this,", "-                                                  \"<html>Whether the Debugger should automatically import packages<br>\"+", "-                                                  \"and classes again after a breakpoint or step.</html>\"));", "+                       newVectorStringOptionComponent(OptionConstants.DEBUG_STEP_EXCLUDE, false));", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DEBUG_AUTO_IMPORT));", "-    addOptionComponent(panel, new IntegerOptionComponent(OptionConstants.AUTO_STEP_RATE,", "-                                                         \"Auto-Step Rate in ms\",", "-                                                         this,", "-                                                         \"<html>A defined rate in ms at which the debugger automatically steps into/over each line of code.<br>\" +", "-                                                         \"Value entered must be an integer value. </html>\"));                                                            ", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DEBUG_EXPRESSIONS_AND_METHODS_IN_WATCHES,", "-                                                         \"Allow Expressions and Method Calls in Watches\", this,", "-                                                         \"<html>Whether the Debugger should allow expressions and method<br>\"+", "-                                                         \"calls in watches. These may have side effects and can cause<br>\"+", "-                                                         \"delays during the debug process.</html>\"));", "+    addOptionComponent(panel, newIntegerOptionComponent(OptionConstants.AUTO_STEP_RATE));                                                            ", "+    addOptionComponent(panel, newBooleanOptionComponent(OptionConstants.DEBUG_EXPRESSIONS_AND_METHODS_IN_WATCHES));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d47b11bd7df20c03d20e45e46370e607", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "9b3324f219a69f8658c0756bfd83fb666ede6986", "commitAfterChange": "23d353b1918dd9a63de161a6fc91f2e819d09fc5", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 55, "signatureBeforeChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "diff": ["-                       new ForcedChoiceOptionComponent(OptionConstants.JAVADOC_API_REF_VERSION,", "-                                                       \"Java Version for \\\"Open Java API Javadoc\\\"\", ", "-                                                       this,", "-                                                       \"Version of the Java API documentation to be used.\"));", "+                       newForcedChoiceOptionComponent(OptionConstants.JAVADOC_API_REF_VERSION));", "-                       new ForcedChoiceOptionComponent(OptionConstants.JAVADOC_ACCESS_LEVEL,", "-                                                       \"Access Level\", ", "-                                                       this,", "-                                                       \"<html>Fields and methods with access modifiers at this level<br>\" +", "-                                                       \"or higher will be included in the generated Javadoc.</html>\"));", "+                       newForcedChoiceOptionComponent(OptionConstants.JAVADOC_ACCESS_LEVEL));", "-                       new ForcedChoiceOptionComponent(OptionConstants.JAVADOC_LINK_VERSION,", "-                                                       \"Java Version for Javadoc Links\", ", "-                                                       this,", "-                                                       \"Version of Java for generating links to online Javadoc documentation.\"));", "+                       newForcedChoiceOptionComponent(OptionConstants.JAVADOC_LINK_VERSION));", "-                       new StringOptionComponent(OptionConstants.JAVADOC_1_5_LINK,", "-                                                 \"Javadoc 1.5 URL\", this,", "-                                                 \"URL for the Java 1.5 API, for generating links to library classes.\"));", "+                       newStringOptionComponent(OptionConstants.JAVADOC_1_5_LINK));", "-                       new StringOptionComponent(OptionConstants.JAVADOC_1_6_LINK,", "-                                                 \"Javadoc 1.6 URL\", this,", "-                                                 \"URL for the Java 1.6 API, for generating links to library classes.\"));", "+                       newStringOptionComponent(OptionConstants.JAVADOC_1_6_LINK));", "-                       new StringOptionComponent(OptionConstants.JUNIT_LINK,", "-                                                 \"JUnit URL\", this,", "-                                                 \"URL for the JUnit API, for \\\"Open Java API Javadoc\\\".\"));", "+                       newStringOptionComponent(OptionConstants.JUNIT_LINK));", "-      new VectorStringOptionComponent(OptionConstants.JAVADOC_ADDITIONAL_LINKS, \"Additional Javadoc URLs\", this,", "-                                      \"<html>Additional URLs with Javadoc, for \\\"Open Java API Javadoc\\\"<br>\" +", "-                                      \"and auto-completion.</html>\") {", "+      new VectorStringOptionComponent(OptionConstants.JAVADOC_ADDITIONAL_LINKS, ", "+                                      CONFIG_DESCRIPTIONS.get(OptionConstants.JAVADOC_ADDITIONAL_LINKS),", "+                                      this,", "+                                      CONFIG_LONG_DESCRIPTIONS.get(OptionConstants.JAVADOC_ADDITIONAL_LINKS)) {", "-                       new DirectoryOptionComponent(OptionConstants.JAVADOC_DESTINATION,", "-                                                    \"Default Destination Directory\", this,", "-                                                    \"Optional default directory for saving Javadoc documentation.\",", "-                                                    _dirChooser));", "+                       newDirectoryOptionComponent(OptionConstants.JAVADOC_DESTINATION, _dirChooser));", "-                       javadocCustomParams = new StringOptionComponent(OptionConstants.JAVADOC_CUSTOM_PARAMS,", "-                                                 \"Custom Javadoc Parameters\", this,", "-                                                 \"Any extra flags or parameters to pass to Javadoc.\"));", "+                       javadocCustomParams = newStringOptionComponent(OptionConstants.JAVADOC_CUSTOM_PARAMS));", "-//                       new BooleanOptionComponent(OptionConstants.JAVADOC_FROM_ROOTS,", "-//                                                  \"Generate Javadoc From Source Roots\", this,", "-//                                                  \"<html>Whether \\\"Javadoc All\\\" should generate Javadoc for all packages<br>\" +", "-//                                                  \"in an open document's source tree, rather than just the document's<br>\" +", "-//                                                  \"own package and sub-packages.</html>\"));", "+//                       newBooleanOptionComponent(OptionConstants.JAVADOC_FROM_ROOTS));"]}], "num": 8155}