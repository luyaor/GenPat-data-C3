{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "adc191bff41571a46583d23a132fc80f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01fc81a6381a8e792225f3532a727c5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionLineContainsTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testLineDoesNotContainColonDueToComments() throws BadLocationException", "signatureAfterChange": "   public void testLineDoesNotContainColonDueToComments() throws BadLocationException", "diff": ["-\t       !rule.applyRule(_doc));", "+\t       !rule.applyRule(_doc, Indenter.OTHER));", "-\t       !rule.applyRule(_doc));", "+\t       !rule.applyRule(_doc, Indenter.OTHER));", "-    assertTrue(\"no colon, colon in multi-line comment\", !rule.applyRule(_doc));", "+    assertTrue(\"no colon, colon in multi-line comment\", !rule.applyRule(_doc, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1286622dfe6014c74fc20fd72e7213a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionExistsCharInStmtTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testColonInTernaryOpOneLineStmts() throws BadLocationException", "signatureAfterChange": "   public void testColonInTernaryOpOneLineStmts() throws BadLocationException", "diff": ["-        !rule.applyRule(_doc));", "+        !rule.applyRule(_doc, Indenter.OTHER));", "-        !rule.applyRule(_doc));", "+        !rule.applyRule(_doc, Indenter.OTHER));", "-        rule.applyRule(_doc));", "+        rule.applyRule(_doc, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23e1337c216c81f40b6525b31e24d9eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionExistsCharInStmtTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testColonInTernaryOpIgnoreWhitespaceAndComments() throws BadLocationException", "signatureAfterChange": "   public void testColonInTernaryOpIgnoreWhitespaceAndComments() throws BadLocationException", "diff": ["-        rule.applyRule(_doc));", "+        rule.applyRule(_doc, Indenter.OTHER));", "-        rule.applyRule(_doc));", "+        rule.applyRule(_doc, Indenter.OTHER));", "-        rule.applyRule(_doc));", "+        rule.applyRule(_doc, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b3f54cdfca040221b6cd55fc0462ca2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testCommentedPrefixDontSearchComment() throws BadLocationException", "signatureAfterChange": "   public void testCommentedPrefixDontSearchComment() throws BadLocationException", "diff": ["-    assertTrue(\"just before brace\", !rule.applyRule(_doc, 7));", "-    assertTrue(\"just after brace\", !rule.applyRule(_doc, 11));", "-    assertTrue(\"line after brace\", !rule.applyRule(_doc, 12));", "+    assertTrue(\"just before brace\", !rule.applyRule(_doc, 7, Indenter.OTHER));", "+    assertTrue(\"just after brace\", !rule.applyRule(_doc, 11, Indenter.OTHER));", "+    assertTrue(\"line after brace\", !rule.applyRule(_doc, 12, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53f14ed686051970fa5c1e1f5d9b5cf0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionExistsCharInStmtTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testColonNotInTernaryOpDueToQuestionMarkInCommentsOrQuotes() throws BadLocationException", "signatureAfterChange": "   public void testColonNotInTernaryOpDueToQuestionMarkInCommentsOrQuotes() throws BadLocationException", "diff": ["-        !rule.applyRule(_doc));", "+        !rule.applyRule(_doc, Indenter.OTHER));", "-        !rule.applyRule(_doc));", "+        !rule.applyRule(_doc, Indenter.OTHER));", "-        !rule.applyRule(_doc));", "+        !rule.applyRule(_doc, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5607f873a666db57d9d6d771d03247e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionLineContainsTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testLineContainsColon() throws BadLocationException", "signatureAfterChange": "   public void testLineContainsColon() throws BadLocationException", "diff": ["-\t       rule.applyRule(_doc));", "+\t       rule.applyRule(_doc, Indenter.OTHER));", "-\t       rule.applyRule(_doc));", "+\t       rule.applyRule(_doc, Indenter.OTHER));", "-\t       rule.applyRule(_doc));", "+\t       rule.applyRule(_doc, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd241694bfcf68c990ab14e49b2665f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartingNewStmtTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testNotStartOfStmtDueToEndCharactersInCommentsOrQuotes() throws BadLocationException", "signatureAfterChange": "   public void testNotStartOfStmtDueToEndCharactersInCommentsOrQuotes() throws BadLocationException", "diff": ["-\t       !rule.applyRule(_doc));", "+\t       !rule.applyRule(_doc, Indenter.OTHER));", "-\t       !rule.applyRule(_doc));", "+\t       !rule.applyRule(_doc, Indenter.OTHER));", "-\t       !rule.applyRule(_doc));", "+\t       !rule.applyRule(_doc, Indenter.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7e833e6c5a04e62cc00bbccf77863f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartAfterOpenBraceTest.java", "commitBeforeChange": "1f696bba6b9c3de27a02950134495c6a06573bab", "commitAfterChange": "3b59320116caa764393e45ce9d0ac1ba782d2b0d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void testNoBrace() throws BadLocationException", "signatureAfterChange": "          public void testNoBrace() throws BadLocationException", "diff": ["-    assertTrue(\"START has no preceding brace.\", !_rule.applyRule(_doc, 0));", "-    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, 8));", "-    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, _text.length()-1));", "+    assertTrue(\"START has no preceding brace.\", !_rule.applyRule(_doc, 0, Indenter.OTHER));", "+    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, 8, Indenter.OTHER));", "+    assertTrue(\"START immediately follows an open paren, not a brace.\", !_rule.applyRule(_doc, _text.length()-1, Indenter.OTHER));"]}], "num": 21619}