{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9137bd798d68b14bb00c31dcb275637b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b0e6277cc219cd355823ed87390bfb8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "734866577ba652e258c158eef25bcbc68a43749a", "commitAfterChange": "06c097879b27ffb8ca08a54a4961265ba5907f07", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     @Override public Type visit(ArrayAccess node)", "signatureAfterChange": "     @Override public Type visit(ArrayAccess node)", "diff": ["-        setErrorStrings(node, ts.userRepresentation(arrayType));", "+        setErrorStrings(node, ts.typePrinter().print(arrayType));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "275f84f44881f860683c65c8d10e92a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "734866577ba652e258c158eef25bcbc68a43749a", "commitAfterChange": "06c097879b27ffb8ca08a54a4961265ba5907f07", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     @Override public Type visit(StaticFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(StaticFieldAccess node)", "diff": ["-        setErrorStrings(node, ts.userRepresentation(t), node.getFieldName());", "+        setErrorStrings(node, ts.typePrinter().print(t), node.getFieldName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a280033dc86bfd9aac81c3e74deda28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "734866577ba652e258c158eef25bcbc68a43749a", "commitAfterChange": "06c097879b27ffb8ca08a54a4961265ba5907f07", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private void checkThrownExceptions(Iterable<? extends Type> thrownTypes, Node node)", "signatureAfterChange": "   private void checkThrownExceptions(Iterable<? extends Type> thrownTypes, Node node)", "diff": ["-          setErrorStrings(node, ts.userRepresentation(thrown));", "+          setErrorStrings(node, ts.typePrinter().print(thrown));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "531b597d239b519fd9f76ed2c681a089", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/StatementChecker.java", "commitBeforeChange": "734866577ba652e258c158eef25bcbc68a43749a", "commitAfterChange": "06c097879b27ffb8ca08a54a4961265ba5907f07", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   @Override public TypeContext visit(TryStatement node)", "signatureAfterChange": "   @Override public TypeContext visit(TryStatement node)", "diff": ["-        setErrorStrings(c, ts.userRepresentation(caughtT));", "+        setErrorStrings(c, ts.typePrinter().print(caughtT));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65e81dfb111422c07691a565fa40614b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "734866577ba652e258c158eef25bcbc68a43749a", "commitAfterChange": "06c097879b27ffb8ca08a54a4961265ba5907f07", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void checkConstructorCall(ConstructorCall node)", "signatureAfterChange": "   public void checkConstructorCall(ConstructorCall node)", "diff": ["-        setErrorStrings(node, ts.userRepresentation(type));", "+        setErrorStrings(node, ts.typePrinter().print(type));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82b3d08f8b4de89fdfcc736b6b67622c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "ed1069955672117b4c9aac0875c5704fb5071788", "commitAfterChange": "bd123d07912360358a1a9262bb626bfc554bdb6a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public String getVariableType(String var, int... indices)", "signatureAfterChange": "   public String getVariableType(String var, int... indices)", "diff": ["-      return _interpreterOptions.typeSystem().userRepresentation(t);", "+      return _interpreterOptions.typeSystem().typePrinter().print(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a671dcabe417cf78255ca918f49fe5f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "734866577ba652e258c158eef25bcbc68a43749a", "commitAfterChange": "06c097879b27ffb8ca08a54a4961265ba5907f07", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     @Override public Type visit(SuperFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(SuperFieldAccess node)", "diff": ["-        setErrorStrings(node, ts.userRepresentation(t), node.getFieldName());", "+        setErrorStrings(node, ts.typePrinter().print(t), node.getFieldName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a962fb1a0d2034611ad3813b1f7948ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "734866577ba652e258c158eef25bcbc68a43749a", "commitAfterChange": "06c097879b27ffb8ca08a54a4961265ba5907f07", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private Node resolveAmbiguousName(AmbiguousName node)", "signatureAfterChange": "     private Node resolveAmbiguousName(AmbiguousName node)", "diff": ["-            setErrorStrings(node, ts.userRepresentation(classType), memberName.image());", "+            setErrorStrings(node, ts.typePrinter().print(classType), memberName.image());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5151f5d07b9105eec1e8b26fc570245", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "734866577ba652e258c158eef25bcbc68a43749a", "commitAfterChange": "06c097879b27ffb8ca08a54a4961265ba5907f07", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     @Override public Type visit(ObjectFieldAccess node)", "signatureAfterChange": "     @Override public Type visit(ObjectFieldAccess node)", "diff": ["-        setErrorStrings(node, ts.userRepresentation(receiverT), node.getFieldName());", "+        setErrorStrings(node, ts.typePrinter().print(receiverT), node.getFieldName());"]}], "num": 27522}