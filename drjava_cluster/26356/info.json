{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "836ad0066f89b1ac80eca5708b9cbee3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b7b6a86c30e76299897f81df46643d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "18a9f2cc3ae6f0d537d5b99c2f47d401bf5d764e", "commitAfterChange": "1e89570173a057456dfaafaaf0fe0900c92c74a8", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public Class visit(SimpleAllocation node)", "signatureAfterChange": "   public Class<?> visit(SimpleAllocation node)", "diff": ["-  public Class visit(SimpleAllocation node) {", "+  public Class<?> visit(SimpleAllocation node) {", "-    Class c  = type.acceptVisitor(this);", "+    Class<?> c  = type.acceptVisitor(this);", "-    List args = node.getArguments();", "-    Class[] cargs = Constants.EMPTY_CLASS_ARRAY;", "+    List<Expression> args = node.getArguments();", "+    Class<?>[] cargs = Constants.EMPTY_CLASS_ARRAY;", "-      ListIterator it = args.listIterator();", "+      ListIterator<Expression> it = args.listIterator();", "-        cargs[i++] = ((Node)it.next()).acceptVisitor(this);", "+        cargs[i++] = it.next().acceptVisitor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "932ff3f365d814d7ff22f99105a0af0e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "b6148d8c1aaf55232aeac694d90234c9353139cd", "commitAfterChange": "536afaee0374767d0f8bdf572a332576e3f54467", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void _init()", "signatureAfterChange": "      private void _init()", "diff": ["-    final NodeDataVisitor<Boolean> _gainVisitor = new NodeDataVisitor<Boolean>() {", "-      public Boolean itemCase(INavigatorItem docu) {", "+    final NodeDataVisitor<OpenDefinitionsDocument, Boolean> _gainVisitor = new NodeDataVisitor<OpenDefinitionsDocument, Boolean>() {", "+      public Boolean itemCase(OpenDefinitionsDocument docu) {", "-    _documentNavigator.addNavigationListener(new INavigationListener() {", "-      public void gainedSelection(NodeData dat) { dat.execute(_gainVisitor); }", "-      public void lostSelection(NodeData dat) {", "+    _documentNavigator.addNavigationListener(new INavigationListener<OpenDefinitionsDocument>() {", "+      public void gainedSelection(NodeData<? extends OpenDefinitionsDocument> dat) { dat.execute(_gainVisitor); }", "+      public void lostSelection(NodeData<? extends OpenDefinitionsDocument> dat) {"]}], "num": 26356}