{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aad0f6aee8b432ec46e070851f7e8158", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4c16d79a6c1c4eddc54b0b8415295d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SingleDisplayModelTest.java", "commitBeforeChange": "1018be24b33ba74b1be6da8d72dc97e6545e20b1", "commitAfterChange": "c0c2e54a62410a429f0ffcedb26fd38c6f82937b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testCloseUnmodifiedAutomatically()     throws BadLocationException, IOException,       OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   public void testCloseUnmodifiedAutomatically()     throws BadLocationException, IOException,       OperationCanceledException, AlreadyOpenException", "diff": ["-        assertEquals(\"file to open\", tempFile, file);", "-        openCount++;", "+        try {", "+          assertEquals(\"file to open\", tempFile.getCanonicalFile(),", "+                       file.getCanonicalFile());", "+          openCount++;", "+        }", "+        catch (IOException ioe) {", "+          fail(\"could not get canonical file\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e52ed1f4f35b89c8b450cad123f0f177", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "bacc5763617209be5cfc431d0c6a4d3d11d90cf0", "commitAfterChange": "cf9808a938fc5315d4aeb4ec51fe1039c1a26dfa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void setUp()", "signatureAfterChange": "   public void setUp()", "diff": ["-  ", "+  private String absp; // absolute path", "-    if (File.separatorChar == '/') { ", "-      absp = \"/home/javaplt/\";", "+    try {", "+      absp=new File(System.getProperty(\"java.io.tmpdir\")).getCanonicalPath() +", "+        File.separator;", "-    else {", "-      absp = \"c:/tmp/\";", "+    catch(IOException e) {", "+      fail(\"could not initialize temp path string\");"]}], "num": 8046}