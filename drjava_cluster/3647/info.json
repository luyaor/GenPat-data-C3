{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f1e80681772bf4a59d2644e91cc5a82", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b74bac6ad7aa82b133e51190f307157c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TigerTest.java", "commitBeforeChange": "2956623adadc4e9d463894cafecdb1725bf77715", "commitAfterChange": "74ef9fbe03efcd82eb19c1e26298c6b9ada091d1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "             public void testParseEnumDeclaration2()", "signatureAfterChange": "    public void testParseEnumDeclaration2()", "diff": ["-    ", "-    List<Expression> args1 = new LinkedList<Expression>();", "-    args1.add(new StringLiteral(\"\\\"CLUBS\\\"\"));", "-    args1.add(new IntegerLiteral(\"0\"));", "-    args1.add(new IntegerLiteral(\"23\"));", "-    List<Expression> args2 = new LinkedList<Expression>();", "-    args2.add(new StringLiteral(\"\\\"DIAMONDS\\\"\"));", "-    args2.add(new IntegerLiteral(\"1\"));", "-    args2.add(new IntegerLiteral(\"75\"));", "-    List<Expression> args3 = new LinkedList<Expression>();", "-    args3.add(new StringLiteral(\"\\\"HEARTS\\\"\"));", "-    args3.add(new IntegerLiteral(\"2\"));", "-    args3.add(new IntegerLiteral(\"11\"));", "-    List<Expression> args4 = new LinkedList<Expression>();", "-    args4.add(new StringLiteral(\"\\\"SPADES\\\"\"));", "-    args4.add(new IntegerLiteral(\"3\"));", "-    args4.add(new IntegerLiteral(\"61\"));", "-    ReferenceType enumType = new ReferenceType(\"Suit\");", "-    Allocation constantInit1 = new SimpleAllocation(enumType, args1);", "-    Allocation constantInit2 = new SimpleAllocation(enumType, args2);", "-    Allocation constantInit3 = new SimpleAllocation(enumType, args3);", "-    Allocation constantInit4 = new SimpleAllocation(enumType, args4);", "+    List<EnumDeclaration.EnumConstant> consts = new LinkedList<EnumDeclaration.EnumConstant>();", "+", "+    List<Expression> args1 = new LinkedList<Expression>();", "+    args1.add(new IntegerLiteral(\"23\"));", "+    consts.add(new EnumDeclaration.EnumConstant(\"CLUBS\", args1, null));", "+", "+    List<Expression> args2 = new LinkedList<Expression>();", "+    args2.add(new IntegerLiteral(\"75\"));", "+    consts.add(new EnumDeclaration.EnumConstant(\"DIAMONDS\", args2, null));", "+", "+    List<Expression> args3 = new LinkedList<Expression>();", "+    args3.add(new IntegerLiteral(\"11\"));", "+    consts.add(new EnumDeclaration.EnumConstant(\"HEARTS\", args3, null));", "+", "+    List<Expression> args4 = new LinkedList<Expression>();", "+    args4.add(new IntegerLiteral(\"61\"));", "+    consts.add(new EnumDeclaration.EnumConstant(\"SPADES\", args4, null));", "+", "-    int fieldAccessFlags = java.lang.reflect.Modifier.PUBLIC | java.lang.reflect.Modifier.STATIC | java.lang.reflect.Modifier.FINAL;", "-    List<Node> body = new LinkedList<Node> ();", "-    ", "-    body.add(new FieldDeclaration(fieldAccessFlags, enumType, \"CLUBS\",    constantInit1));", "-    body.add(new FieldDeclaration(fieldAccessFlags, enumType, \"DIAMONDS\", constantInit2));", "-    body.add(new FieldDeclaration(fieldAccessFlags, enumType, \"HEARTS\",   constantInit3));", "-    body.add(new FieldDeclaration(fieldAccessFlags, enumType, \"SPADES\",   constantInit4));", "-    ", "+", "+    List<Node> decl = new LinkedList<Node> ();", "+", "-    body.add(new ConstructorDeclaration(0, \"Suit\", params, new LinkedList<ReferenceType>(), null, new LinkedList<Node>()));", "-      ", "-    EnumDeclaration ed = new EnumDeclaration(accessFlags, \"Suit\", null, body);", "+    decl.add(new ConstructorDeclaration(0, \"Suit\", params, new LinkedList<ReferenceType>(), null, new LinkedList<Node>()));", "+", "+    EnumDeclaration ed = new EnumDeclaration(accessFlags, \"Suit\", null, new EnumDeclaration.EnumBody(consts, decl));", "-  }    ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c86707e70e787027f480d56902b4e79b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TigerTest.java", "commitBeforeChange": "2956623adadc4e9d463894cafecdb1725bf77715", "commitAfterChange": "74ef9fbe03efcd82eb19c1e26298c6b9ada091d1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "        public void testParseEnumDeclaration3()", "signatureAfterChange": "    public void testParseEnumDeclaration3()", "diff": ["-      \"  HEARTS(11, CLUBS) {void m() {}},\\n\" + ", "+      \"  HEARTS(11, CLUBS) {void m() {}},\\n\" +", "-    ", "+", "-    args1.add(new StringLiteral(\"\\\"CLUBS\\\"\"));", "-    args1.add(new IntegerLiteral(\"0\"));", "-                ", "+", "-    args2.add(new StringLiteral(\"\\\"DIAMONDS\\\"\"));", "-    args2.add(new IntegerLiteral(\"1\"));", "-    ", "+", "-    args3.add(new StringLiteral(\"\\\"HEARTS\\\"\"));", "-    args3.add(new IntegerLiteral(\"2\"));", "-    ", "+", "-    args4.add(new StringLiteral(\"\\\"SPADES\\\"\"));", "-    args4.add(new IntegerLiteral(\"3\"));", "-    ", "-    ClassAllocation constantInit1 = new ClassAllocation(enumType, args1, body1);", "-    ClassAllocation constantInit2 = new ClassAllocation(enumType, args2, body2);", "-    ClassAllocation constantInit3 = new ClassAllocation(enumType, args3, body3);", "-    ClassAllocation constantInit4 = new ClassAllocation(enumType, args4, body4);", "+", "+    LinkedList<EnumDeclaration.EnumConstant> consts = new LinkedList<EnumDeclaration.EnumConstant>();", "+    consts.add(new EnumDeclaration.EnumConstant(\"CLUBS\", args1, body1));", "+    consts.add(new EnumDeclaration.EnumConstant(\"DIAMONDS\", args2, body2));", "+    consts.add(new EnumDeclaration.EnumConstant(\"HEARTS\", args3, body3));", "+    consts.add(new EnumDeclaration.EnumConstant(\"SPADES\", args4, body4));", "+", "-    int fieldAccessFlags = java.lang.reflect.Modifier.PUBLIC | java.lang.reflect.Modifier.STATIC | java.lang.reflect.Modifier.FINAL;", "-    List<Node> body = new LinkedList<Node>();", "-    body.add(new FieldDeclaration(fieldAccessFlags, enumType, \"CLUBS\",    constantInit1));", "-    body.add(new FieldDeclaration(fieldAccessFlags, enumType, \"DIAMONDS\", constantInit2));", "-    body.add(new FieldDeclaration(fieldAccessFlags, enumType, \"HEARTS\",   constantInit3));", "-    body.add(new FieldDeclaration(fieldAccessFlags, enumType, \"SPADES\",   constantInit4));", "-    ", "+", "+    List<Node> decl = new LinkedList<Node>();", "-    body.add(new ConstructorDeclaration(0, \"Suit\", params, new LinkedList<ReferenceType>(), null, new LinkedList<Node>()));", "+    decl.add(new ConstructorDeclaration(0, \"Suit\", params, new LinkedList<ReferenceType>(), null, new LinkedList<Node>()));", "-    body.add(am);", "-    body.add(n);", "-      ", "-    EnumDeclaration ed = new EnumDeclaration(accessFlags, \"Suit\", null, body);", "+    decl.add(am);", "+    decl.add(n);", "+", "+    EnumDeclaration ed = new EnumDeclaration(accessFlags, \"Suit\", null, new EnumDeclaration.EnumBody(consts, decl));"]}], "num": 3647}